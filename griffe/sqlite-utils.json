{
  "sqlite_utils": {
    "kind": "module",
    "name": "sqlite_utils",
    "labels": [],
    "members": [
      {
        "kind": "alias",
        "name": "Database",
        "target_path": "sqlite_utils.db.Database",
        "lineno": 1,
        "endlineno": 1
      },
      {
        "kind": "alias",
        "name": "suggest_column_types",
        "target_path": "sqlite_utils.utils.suggest_column_types",
        "lineno": 2,
        "endlineno": 2
      },
      {
        "kind": "attribute",
        "name": "__all__",
        "lineno": 4,
        "endlineno": 4,
        "labels": [
          "module-attribute"
        ],
        "members": [],
        "value": "['Database', 'suggest_column_types']"
      },
      {
        "kind": "module",
        "name": "cli",
        "labels": [],
        "members": [
          {
            "kind": "alias",
            "name": "base64",
            "target_path": "base64",
            "lineno": 1,
            "endlineno": 1
          },
          {
            "kind": "alias",
            "name": "click",
            "target_path": "click",
            "lineno": 2,
            "endlineno": 2
          },
          {
            "kind": "alias",
            "name": "DefaultGroup",
            "target_path": "click_default_group.DefaultGroup",
            "lineno": 3,
            "endlineno": 3
          },
          {
            "kind": "alias",
            "name": "datetime",
            "target_path": "datetime.datetime",
            "lineno": 4,
            "endlineno": 4
          },
          {
            "kind": "alias",
            "name": "hashlib",
            "target_path": "hashlib",
            "lineno": 5,
            "endlineno": 5
          },
          {
            "kind": "alias",
            "name": "pathlib",
            "target_path": "pathlib",
            "lineno": 6,
            "endlineno": 6
          },
          {
            "kind": "alias",
            "name": "sqlite_utils",
            "target_path": "sqlite_utils",
            "lineno": 7,
            "endlineno": 7
          },
          {
            "kind": "alias",
            "name": "AlterError",
            "target_path": "sqlite_utils.db.AlterError",
            "lineno": 8,
            "endlineno": 8
          },
          {
            "kind": "alias",
            "name": "BadMultiValues",
            "target_path": "sqlite_utils.db.BadMultiValues",
            "lineno": 8,
            "endlineno": 8
          },
          {
            "kind": "alias",
            "name": "DescIndex",
            "target_path": "sqlite_utils.db.DescIndex",
            "lineno": 8,
            "endlineno": 8
          },
          {
            "kind": "alias",
            "name": "recipes",
            "target_path": "sqlite_utils.recipes",
            "lineno": 9,
            "endlineno": 9
          },
          {
            "kind": "alias",
            "name": "textwrap",
            "target_path": "textwrap",
            "lineno": 10,
            "endlineno": 10
          },
          {
            "kind": "alias",
            "name": "inspect",
            "target_path": "inspect",
            "lineno": 11,
            "endlineno": 11
          },
          {
            "kind": "alias",
            "name": "io",
            "target_path": "io",
            "lineno": 12,
            "endlineno": 12
          },
          {
            "kind": "alias",
            "name": "itertools",
            "target_path": "itertools",
            "lineno": 13,
            "endlineno": 13
          },
          {
            "kind": "alias",
            "name": "json",
            "target_path": "json",
            "lineno": 14,
            "endlineno": 14
          },
          {
            "kind": "alias",
            "name": "os",
            "target_path": "os",
            "lineno": 15,
            "endlineno": 15
          },
          {
            "kind": "alias",
            "name": "sys",
            "target_path": "sys",
            "lineno": 16,
            "endlineno": 16
          },
          {
            "kind": "alias",
            "name": "csv_std",
            "target_path": "csv",
            "lineno": 17,
            "endlineno": 17
          },
          {
            "kind": "alias",
            "name": "tabulate",
            "target_path": "tabulate",
            "lineno": 18,
            "endlineno": 18
          },
          {
            "kind": "alias",
            "name": "_compile_code",
            "target_path": "sqlite_utils.utils._compile_code",
            "lineno": 19,
            "endlineno": 30
          },
          {
            "kind": "alias",
            "name": "chunks",
            "target_path": "sqlite_utils.utils.chunks",
            "lineno": 19,
            "endlineno": 30
          },
          {
            "kind": "alias",
            "name": "file_progress",
            "target_path": "sqlite_utils.utils.file_progress",
            "lineno": 19,
            "endlineno": 30
          },
          {
            "kind": "alias",
            "name": "find_spatialite",
            "target_path": "sqlite_utils.utils.find_spatialite",
            "lineno": 19,
            "endlineno": 30
          },
          {
            "kind": "alias",
            "name": "sqlite3",
            "target_path": "sqlite_utils.utils.sqlite3",
            "lineno": 19,
            "endlineno": 30
          },
          {
            "kind": "alias",
            "name": "decode_base64_values",
            "target_path": "sqlite_utils.utils.decode_base64_values",
            "lineno": 19,
            "endlineno": 30
          },
          {
            "kind": "alias",
            "name": "progressbar",
            "target_path": "sqlite_utils.utils.progressbar",
            "lineno": 19,
            "endlineno": 30
          },
          {
            "kind": "alias",
            "name": "rows_from_file",
            "target_path": "sqlite_utils.utils.rows_from_file",
            "lineno": 19,
            "endlineno": 30
          },
          {
            "kind": "alias",
            "name": "Format",
            "target_path": "sqlite_utils.utils.Format",
            "lineno": 19,
            "endlineno": 30
          },
          {
            "kind": "alias",
            "name": "TypeTracker",
            "target_path": "sqlite_utils.utils.TypeTracker",
            "lineno": 19,
            "endlineno": 30
          },
          {
            "kind": "attribute",
            "name": "CONTEXT_SETTINGS",
            "lineno": 33,
            "endlineno": 33,
            "labels": [
              "module-attribute"
            ],
            "members": [],
            "value": "dict(help_option_names=['-h', '--help'])"
          },
          {
            "kind": "attribute",
            "name": "VALID_COLUMN_TYPES",
            "lineno": 35,
            "endlineno": 35,
            "labels": [
              "module-attribute"
            ],
            "members": [],
            "value": "('INTEGER', 'TEXT', 'FLOAT', 'BLOB')"
          },
          {
            "kind": "attribute",
            "name": "UNICODE_ERROR",
            "lineno": 37,
            "endlineno": 47,
            "labels": [
              "module-attribute"
            ],
            "members": [],
            "value": "\"\\n{}\\n\\nThe input you provided uses a character encoding other than utf-8.\\n\\nYou can fix this by passing the --encoding= option with the encoding of the file.\\n\\nIf you do not know the encoding, running 'file filename.csv' may tell you.\\n\\nIt's often worth trying: --encoding=latin-1\\n\".strip()"
          },
          {
            "kind": "attribute",
            "name": "field_size_limit",
            "lineno": 52,
            "endlineno": 52,
            "labels": [
              "module-attribute"
            ],
            "members": [],
            "value": "sys.maxsize"
          },
          {
            "kind": "function",
            "name": "output_options",
            "lineno": 62,
            "endlineno": 98,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "fn",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "load_extension_option",
            "lineno": 101,
            "endlineno": 106,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "fn",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "cli",
            "lineno": 109,
            "endlineno": 118,
            "docstring": {
              "value": "Commands for interacting with a SQLite database",
              "lineno": 117,
              "endlineno": 117
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 109,
                "endlineno": 114
              },
              {
                "lineno": 115,
                "endlineno": 115
              }
            ],
            "parameters": [],
            "returns": null
          },
          {
            "kind": "function",
            "name": "tables",
            "lineno": 121,
            "endlineno": 214,
            "docstring": {
              "value": "List the tables in the database\n\nExample:\n\n\b\n    sqlite-utils tables trees.db",
              "lineno": 168,
              "endlineno": 174
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 121,
                "endlineno": 121
              },
              {
                "lineno": 122,
                "endlineno": 126
              },
              {
                "lineno": 127,
                "endlineno": 129
              },
              {
                "lineno": 130,
                "endlineno": 132
              },
              {
                "lineno": 133,
                "endlineno": 135
              },
              {
                "lineno": 136,
                "endlineno": 136
              },
              {
                "lineno": 137,
                "endlineno": 142
              },
              {
                "lineno": 143,
                "endlineno": 148
              },
              {
                "lineno": 149,
                "endlineno": 149
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "fts4",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "fts5",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "counts",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "nl",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "arrays",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "csv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "tsv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "no_headers",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "fmt",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "json_cols",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "columns",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "schema",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "views",
                "annotation": null,
                "kind": "positional or keyword",
                "default": "False"
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "views",
            "lineno": 217,
            "endlineno": 279,
            "docstring": {
              "value": "List the views in the database\n\nExample:\n\n\b\n    sqlite-utils views trees.db",
              "lineno": 255,
              "endlineno": 261
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 217,
                "endlineno": 217
              },
              {
                "lineno": 218,
                "endlineno": 222
              },
              {
                "lineno": 223,
                "endlineno": 225
              },
              {
                "lineno": 226,
                "endlineno": 226
              },
              {
                "lineno": 227,
                "endlineno": 232
              },
              {
                "lineno": 233,
                "endlineno": 238
              },
              {
                "lineno": 239,
                "endlineno": 239
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "counts",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "nl",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "arrays",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "csv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "tsv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "no_headers",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "fmt",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "json_cols",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "columns",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "schema",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "optimize",
            "lineno": 282,
            "endlineno": 307,
            "docstring": {
              "value": "Optimize all full-text search tables and then run VACUUM - should shrink the database file\n\nExample:\n\n\b\n    sqlite-utils optimize chickens.db",
              "lineno": 292,
              "endlineno": 298
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 282,
                "endlineno": 282
              },
              {
                "lineno": 283,
                "endlineno": 287
              },
              {
                "lineno": 288,
                "endlineno": 288
              },
              {
                "lineno": 289,
                "endlineno": 289
              },
              {
                "lineno": 290,
                "endlineno": 290
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "tables",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "no_vacuum",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "rebuild_fts",
            "lineno": 310,
            "endlineno": 332,
            "docstring": {
              "value": "Rebuild all or specific full-text search tables\n\nExample:\n\n\b\n    sqlite-utils rebuild-fts chickens.db chickens",
              "lineno": 319,
              "endlineno": 325
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 310,
                "endlineno": 310
              },
              {
                "lineno": 311,
                "endlineno": 315
              },
              {
                "lineno": 316,
                "endlineno": 316
              },
              {
                "lineno": 317,
                "endlineno": 317
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "tables",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "analyze",
            "lineno": 335,
            "endlineno": 358,
            "docstring": {
              "value": "Run ANALYZE against the whole database, or against specific named indexes and tables\n\nExample:\n\n\b\n    sqlite-utils analyze chickens.db",
              "lineno": 343,
              "endlineno": 349
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 335,
                "endlineno": 335
              },
              {
                "lineno": 336,
                "endlineno": 340
              },
              {
                "lineno": 341,
                "endlineno": 341
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "names",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "vacuum",
            "lineno": 361,
            "endlineno": 375,
            "docstring": {
              "value": "Run VACUUM against the database\n\nExample:\n\n\b\n    sqlite-utils vacuum chickens.db",
              "lineno": 368,
              "endlineno": 374
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 361,
                "endlineno": 361
              },
              {
                "lineno": 362,
                "endlineno": 366
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "dump",
            "lineno": 378,
            "endlineno": 396,
            "docstring": {
              "value": "Output a SQL dump of the schema and full contents of the database\n\nExample:\n\n\b\n    sqlite-utils dump chickens.db",
              "lineno": 386,
              "endlineno": 392
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 378,
                "endlineno": 378
              },
              {
                "lineno": 379,
                "endlineno": 383
              },
              {
                "lineno": 384,
                "endlineno": 384
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "add_column",
            "lineno": 399,
            "endlineno": 444,
            "docstring": {
              "value": "Add a column to the specified table\n\nExample:\n\n\b\n    sqlite-utils add-column chickens.db chickens weight float",
              "lineno": 433,
              "endlineno": 439
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 399,
                "endlineno": 399
              },
              {
                "lineno": 400,
                "endlineno": 404
              },
              {
                "lineno": 405,
                "endlineno": 405
              },
              {
                "lineno": 406,
                "endlineno": 406
              },
              {
                "lineno": 407,
                "endlineno": 413
              },
              {
                "lineno": 414,
                "endlineno": 416
              },
              {
                "lineno": 417,
                "endlineno": 422
              },
              {
                "lineno": 423,
                "endlineno": 428
              },
              {
                "lineno": 429,
                "endlineno": 429
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "col_name",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "col_type",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "fk",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "fk_col",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "not_null_default",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "add_foreign_key",
            "lineno": 447,
            "endlineno": 480,
            "docstring": {
              "value": "Add a new foreign key constraint to an existing table\n\nExample:\n\n    sqlite-utils add-foreign-key my.db books author_id authors id\n\nWARNING: Could corrupt your database! Back up your database file first.",
              "lineno": 466,
              "endlineno": 474
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 447,
                "endlineno": 447
              },
              {
                "lineno": 448,
                "endlineno": 452
              },
              {
                "lineno": 453,
                "endlineno": 453
              },
              {
                "lineno": 454,
                "endlineno": 454
              },
              {
                "lineno": 455,
                "endlineno": 455
              },
              {
                "lineno": 456,
                "endlineno": 456
              },
              {
                "lineno": 457,
                "endlineno": 461
              },
              {
                "lineno": 462,
                "endlineno": 462
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "column",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "other_table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "other_column",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "ignore",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "add_foreign_keys",
            "lineno": 483,
            "endlineno": 514,
            "docstring": {
              "value": "Add multiple new foreign key constraints to a database\n\nExample:\n\n\b\n    sqlite-utils add-foreign-keys my.db \\\n        books author_id authors id \\\n        authors country_id countries id",
              "lineno": 492,
              "endlineno": 501
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 483,
                "endlineno": 483
              },
              {
                "lineno": 484,
                "endlineno": 488
              },
              {
                "lineno": 489,
                "endlineno": 489
              },
              {
                "lineno": 490,
                "endlineno": 490
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "foreign_key",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "index_foreign_keys",
            "lineno": 517,
            "endlineno": 535,
            "docstring": {
              "value": "Ensure every foreign key column has an index on it\n\nExample:\n\n\b\n    sqlite-utils index-foreign-keys chickens.db",
              "lineno": 525,
              "endlineno": 532
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 517,
                "endlineno": 517
              },
              {
                "lineno": 518,
                "endlineno": 522
              },
              {
                "lineno": 523,
                "endlineno": 523
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "create_index",
            "lineno": 538,
            "endlineno": 590,
            "docstring": {
              "value": "Add an index to the specified table for the specified columns\n\nExample:\n\n\b\n    sqlite-utils create-index chickens.db chickens name\n\nTo create an index in descending order:\n\n\b\n    sqlite-utils create-index chickens.db chickens -- -name",
              "lineno": 563,
              "endlineno": 575
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 538,
                "endlineno": 538
              },
              {
                "lineno": 539,
                "endlineno": 543
              },
              {
                "lineno": 544,
                "endlineno": 544
              },
              {
                "lineno": 545,
                "endlineno": 545
              },
              {
                "lineno": 546,
                "endlineno": 546
              },
              {
                "lineno": 547,
                "endlineno": 547
              },
              {
                "lineno": 548,
                "endlineno": 553
              },
              {
                "lineno": 554,
                "endlineno": 558
              },
              {
                "lineno": 559,
                "endlineno": 559
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "column",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "name",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "unique",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "if_not_exists",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "analyze",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "enable_fts",
            "lineno": 593,
            "endlineno": 635,
            "docstring": {
              "value": "Enable full-text search for specific table and columns\"\n\nExample:\n\n\b\n    sqlite-utils enable-fts chickens.db chickens name",
              "lineno": 614,
              "endlineno": 620
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 593,
                "endlineno": 593
              },
              {
                "lineno": 594,
                "endlineno": 598
              },
              {
                "lineno": 599,
                "endlineno": 599
              },
              {
                "lineno": 600,
                "endlineno": 600
              },
              {
                "lineno": 601,
                "endlineno": 601
              },
              {
                "lineno": 602,
                "endlineno": 602
              },
              {
                "lineno": 603,
                "endlineno": 603
              },
              {
                "lineno": 604,
                "endlineno": 609
              },
              {
                "lineno": 610,
                "endlineno": 610
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "column",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "fts4",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "fts5",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "tokenize",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "create_triggers",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "populate_fts",
            "lineno": 638,
            "endlineno": 657,
            "docstring": {
              "value": "Re-populate full-text search for specific table and columns\n\nExample:\n\n\b\n    sqlite-utils populate-fts chickens.db chickens name",
              "lineno": 648,
              "endlineno": 654
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 638,
                "endlineno": 638
              },
              {
                "lineno": 639,
                "endlineno": 643
              },
              {
                "lineno": 644,
                "endlineno": 644
              },
              {
                "lineno": 645,
                "endlineno": 645
              },
              {
                "lineno": 646,
                "endlineno": 646
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "column",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "disable_fts",
            "lineno": 660,
            "endlineno": 678,
            "docstring": {
              "value": "Disable full-text search for specific table\n\nExample:\n\n\b\n    sqlite-utils disable-fts chickens.db chickens",
              "lineno": 669,
              "endlineno": 675
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 660,
                "endlineno": 660
              },
              {
                "lineno": 661,
                "endlineno": 665
              },
              {
                "lineno": 666,
                "endlineno": 666
              },
              {
                "lineno": 667,
                "endlineno": 667
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "enable_wal",
            "lineno": 681,
            "endlineno": 700,
            "docstring": {
              "value": "Enable WAL for database files\n\nExample:\n\n\b\n    sqlite-utils enable-wal chickens.db",
              "lineno": 690,
              "endlineno": 696
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 681,
                "endlineno": 681
              },
              {
                "lineno": 682,
                "endlineno": 687
              },
              {
                "lineno": 688,
                "endlineno": 688
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "disable_wal",
            "lineno": 703,
            "endlineno": 722,
            "docstring": {
              "value": "Disable WAL for database files\n\nExample:\n\n\b\n    sqlite-utils disable-wal chickens.db",
              "lineno": 712,
              "endlineno": 718
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 703,
                "endlineno": 703
              },
              {
                "lineno": 704,
                "endlineno": 709
              },
              {
                "lineno": 710,
                "endlineno": 710
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "enable_counts",
            "lineno": 725,
            "endlineno": 751,
            "docstring": {
              "value": "Configure triggers to update a _counts table with row counts\n\nExample:\n\n\b\n    sqlite-utils enable-counts chickens.db",
              "lineno": 734,
              "endlineno": 740
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 725,
                "endlineno": 725
              },
              {
                "lineno": 726,
                "endlineno": 730
              },
              {
                "lineno": 731,
                "endlineno": 731
              },
              {
                "lineno": 732,
                "endlineno": 732
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "tables",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "reset_counts",
            "lineno": 754,
            "endlineno": 771,
            "docstring": {
              "value": "Reset calculated counts in the _counts table\n\nExample:\n\n\b\n    sqlite-utils reset-counts chickens.db",
              "lineno": 762,
              "endlineno": 768
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 754,
                "endlineno": 754
              },
              {
                "lineno": 755,
                "endlineno": 759
              },
              {
                "lineno": 760,
                "endlineno": 760
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "attribute",
            "name": "_import_options",
            "lineno": 774,
            "endlineno": 809,
            "labels": [
              "module-attribute"
            ],
            "members": [],
            "value": "(click.option('--flatten', is_flag=True, help='Flatten nested JSON objects, so {\"a\": {\"b\": 1}} becomes {\"a_b\": 1}'), click.option('--nl', is_flag=True, help='Expect newline-delimited JSON'), click.option('-c', '--csv', is_flag=True, help='Expect CSV input'), click.option('--tsv', is_flag=True, help='Expect TSV input'), click.option('--lines', is_flag=True, help=\"Treat each line as a single value called 'line'\"), click.option('--text', is_flag=True, help=\"Treat input as a single value called 'text'\"), click.option('--convert', help='Python code to convert each item'), click.option('--import', 'imports', type=str, multiple=True, help='Python modules to import'), click.option('--delimiter', help='Delimiter to use for CSV files'), click.option('--quotechar', help='Quote character to use for CSV/TSV'), click.option('--sniff', is_flag=True, help='Detect delimiter and quote character'), click.option('--no-headers', is_flag=True, help='CSV file has no header row'), click.option('--encoding', help='Character encoding for input, defaults to utf-8'))"
          },
          {
            "kind": "function",
            "name": "import_options",
            "lineno": 812,
            "endlineno": 815,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "fn",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "insert_upsert_options",
            "lineno": 818,
            "endlineno": 876,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "require_pk",
                "annotation": null,
                "kind": "keyword-only",
                "default": "False"
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "insert_upsert_implementation",
            "lineno": 879,
            "endlineno": 1054,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "file",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "pk",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "flatten",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "nl",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "csv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "tsv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "lines",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "text",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "convert",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "imports",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "delimiter",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "quotechar",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "sniff",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "no_headers",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "encoding",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "batch_size",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "alter",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "upsert",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "ignore",
                "annotation": null,
                "kind": "positional or keyword",
                "default": "False"
              },
              {
                "name": "replace",
                "annotation": null,
                "kind": "positional or keyword",
                "default": "False"
              },
              {
                "name": "truncate",
                "annotation": null,
                "kind": "positional or keyword",
                "default": "False"
              },
              {
                "name": "not_null",
                "annotation": null,
                "kind": "positional or keyword",
                "default": "None"
              },
              {
                "name": "default",
                "annotation": null,
                "kind": "positional or keyword",
                "default": "None"
              },
              {
                "name": "detect_types",
                "annotation": null,
                "kind": "positional or keyword",
                "default": "None"
              },
              {
                "name": "analyze",
                "annotation": null,
                "kind": "positional or keyword",
                "default": "False"
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": "None"
              },
              {
                "name": "silent",
                "annotation": null,
                "kind": "positional or keyword",
                "default": "False"
              },
              {
                "name": "bulk_sql",
                "annotation": null,
                "kind": "positional or keyword",
                "default": "None"
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "_flatten",
            "lineno": 1057,
            "endlineno": 1063,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "d",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "_find_variables",
            "lineno": 1066,
            "endlineno": 1075,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "tb",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "vars",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "insert",
            "lineno": 1078,
            "endlineno": 1202,
            "docstring": {
              "value": "Insert records from FILE into a table, creating the table if it\ndoes not already exist.\n\nExample:\n\n    echo '{\"name\": \"Lila\"}' | sqlite-utils insert data.db chickens -\n\nBy default the input is expected to be a JSON object or array of objects.\n\n\b\n- Use --nl for newline-delimited JSON objects\n- Use --csv or --tsv for comma-separated or tab-separated input\n- Use --lines to write each incoming line to a column called \"line\"\n- Use --text to write the entire input to a column called \"text\"\n\nYou can also use --convert to pass a fragment of Python code that will\nbe used to convert each input.\n\nYour Python code will be passed a \"row\" variable representing the\nimported row, and can return a modified row.\n\nThis example uses just the name, latitude and longitude columns from\na CSV file, converting name to upper case and latitude and longitude\nto floating point numbers:\n\n\b\n    sqlite-utils insert plants.db plants plants.csv --csv --convert '\n      return {\n        \"name\": row[\"name\"].upper(),\n        \"latitude\": float(row[\"latitude\"]),\n        \"longitude\": float(row[\"longitude\"]),\n      }'\n\nIf you are using --lines your code will be passed a \"line\" variable,\nand for --text a \"text\" variable.\n\nWhen using --text your function can return an iterator of rows to\ninsert. This example inserts one record per word in the input:\n\n\b\n    echo 'A bunch of words' | sqlite-utils insert words.db words - \\\n      --text --convert '({\"word\": w} for w in text.split())'",
              "lineno": 1125,
              "endlineno": 1168
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 1078,
                "endlineno": 1078
              },
              {
                "lineno": 1079,
                "endlineno": 1079
              },
              {
                "lineno": 1080,
                "endlineno": 1082
              },
              {
                "lineno": 1083,
                "endlineno": 1088
              },
              {
                "lineno": 1089,
                "endlineno": 1094
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "file",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "pk",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "flatten",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "nl",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "csv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "tsv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "lines",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "text",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "convert",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "imports",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "delimiter",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "quotechar",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "sniff",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "no_headers",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "encoding",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "batch_size",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "alter",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "detect_types",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "analyze",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "silent",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "ignore",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "replace",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "truncate",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "not_null",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "default",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "upsert",
            "lineno": 1205,
            "endlineno": 1277,
            "docstring": {
              "value": "Upsert records based on their primary key. Works like 'insert' but if\nan incoming record has a primary key that matches an existing record\nthe existing record will be updated.\n\nExample:\n\n\b\n    echo '[\n        {\"id\": 1, \"name\": \"Lila\"},\n        {\"id\": 2, \"name\": \"Suna\"}\n    ]' | sqlite-utils upsert data.db chickens - --pk id",
              "lineno": 1234,
              "endlineno": 1246
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 1205,
                "endlineno": 1205
              },
              {
                "lineno": 1206,
                "endlineno": 1206
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "file",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "pk",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "flatten",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "nl",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "csv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "tsv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "lines",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "text",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "convert",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "imports",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "batch_size",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "delimiter",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "quotechar",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "sniff",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "no_headers",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "encoding",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "alter",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "not_null",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "default",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "detect_types",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "analyze",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "silent",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "bulk",
            "lineno": 1280,
            "endlineno": 1354,
            "docstring": {
              "value": "Execute parameterized SQL against the provided list of documents.\n\nExample:\n\n\b\n    echo '[\n        {\"id\": 1, \"name\": \"Lila2\"},\n        {\"id\": 2, \"name\": \"Suna2\"}\n    ]' | sqlite-utils bulk data.db '\n        update chickens set name = :name where id = :id\n    ' -",
              "lineno": 1311,
              "endlineno": 1323
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 1280,
                "endlineno": 1280
              },
              {
                "lineno": 1281,
                "endlineno": 1285
              },
              {
                "lineno": 1286,
                "endlineno": 1286
              },
              {
                "lineno": 1287,
                "endlineno": 1287
              },
              {
                "lineno": 1288,
                "endlineno": 1288
              },
              {
                "lineno": 1289,
                "endlineno": 1289
              },
              {
                "lineno": 1290,
                "endlineno": 1290
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "sql",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "file",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "batch_size",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "flatten",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "nl",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "csv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "tsv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "lines",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "text",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "convert",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "imports",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "delimiter",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "quotechar",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "sniff",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "no_headers",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "encoding",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "create_database",
            "lineno": 1357,
            "endlineno": 1390,
            "docstring": {
              "value": "Create a new empty database file\n\nExample:\n\n\b\n    sqlite-utils create-database trees.db",
              "lineno": 1371,
              "endlineno": 1377
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 1357,
                "endlineno": 1357
              },
              {
                "lineno": 1358,
                "endlineno": 1362
              },
              {
                "lineno": 1363,
                "endlineno": 1365
              },
              {
                "lineno": 1366,
                "endlineno": 1368
              },
              {
                "lineno": 1369,
                "endlineno": 1369
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "enable_wal",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "init_spatialite",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "create_table",
            "lineno": 1393,
            "endlineno": 1474,
            "docstring": {
              "value": "Add a table with the specified columns. Columns should be specified using\nname, type pairs, for example:\n\n\b\n    sqlite-utils create-table my.db people \\\n        id integer \\\n        name text \\\n        height float \\\n        photo blob --pk id",
              "lineno": 1433,
              "endlineno": 1443
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 1393,
                "endlineno": 1393
              },
              {
                "lineno": 1394,
                "endlineno": 1398
              },
              {
                "lineno": 1399,
                "endlineno": 1399
              },
              {
                "lineno": 1400,
                "endlineno": 1400
              },
              {
                "lineno": 1401,
                "endlineno": 1401
              },
              {
                "lineno": 1402,
                "endlineno": 1406
              },
              {
                "lineno": 1407,
                "endlineno": 1412
              },
              {
                "lineno": 1413,
                "endlineno": 1418
              },
              {
                "lineno": 1419,
                "endlineno": 1423
              },
              {
                "lineno": 1424,
                "endlineno": 1428
              },
              {
                "lineno": 1429,
                "endlineno": 1429
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "columns",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "pk",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "not_null",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "default",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "fk",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "ignore",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "replace",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "drop_table",
            "lineno": 1477,
            "endlineno": 1499,
            "docstring": {
              "value": "Drop the specified table\n\nExample:\n\n\b\n    sqlite-utils drop-table chickens.db chickens",
              "lineno": 1487,
              "endlineno": 1493
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 1477,
                "endlineno": 1477
              },
              {
                "lineno": 1478,
                "endlineno": 1482
              },
              {
                "lineno": 1483,
                "endlineno": 1483
              },
              {
                "lineno": 1484,
                "endlineno": 1484
              },
              {
                "lineno": 1485,
                "endlineno": 1485
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "ignore",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "create_view",
            "lineno": 1502,
            "endlineno": 1544,
            "docstring": {
              "value": "Create a view for the provided SELECT query\n\nExample:\n\n\b\n    sqlite-utils create-view chickens.db heavy_chickens \\\n      'select * from chickens where weight > 3'",
              "lineno": 1522,
              "endlineno": 1529
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 1502,
                "endlineno": 1502
              },
              {
                "lineno": 1503,
                "endlineno": 1507
              },
              {
                "lineno": 1508,
                "endlineno": 1508
              },
              {
                "lineno": 1509,
                "endlineno": 1509
              },
              {
                "lineno": 1510,
                "endlineno": 1514
              },
              {
                "lineno": 1515,
                "endlineno": 1519
              },
              {
                "lineno": 1520,
                "endlineno": 1520
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "view",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "select",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "ignore",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "replace",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "drop_view",
            "lineno": 1547,
            "endlineno": 1569,
            "docstring": {
              "value": "Drop the specified view\n\nExample:\n\n\b\n    sqlite-utils drop-view chickens.db heavy_chickens",
              "lineno": 1557,
              "endlineno": 1563
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 1547,
                "endlineno": 1547
              },
              {
                "lineno": 1548,
                "endlineno": 1552
              },
              {
                "lineno": 1553,
                "endlineno": 1553
              },
              {
                "lineno": 1554,
                "endlineno": 1554
              },
              {
                "lineno": 1555,
                "endlineno": 1555
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "view",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "ignore",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "query",
            "lineno": 1572,
            "endlineno": 1628,
            "docstring": {
              "value": "Execute SQL query and return the results as JSON\n\nExample:\n\n\b\n    sqlite-utils data.db \\\n        \"select * from chickens where age > :age\" \\\n        -p age 1",
              "lineno": 1611,
              "endlineno": 1619
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 1572,
                "endlineno": 1572
              },
              {
                "lineno": 1573,
                "endlineno": 1577
              },
              {
                "lineno": 1578,
                "endlineno": 1578
              },
              {
                "lineno": 1579,
                "endlineno": 1584
              },
              {
                "lineno": 1585,
                "endlineno": 1585
              },
              {
                "lineno": 1586,
                "endlineno": 1586
              },
              {
                "lineno": 1587,
                "endlineno": 1593
              },
              {
                "lineno": 1594,
                "endlineno": 1594
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "sql",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "attach",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "nl",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "arrays",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "csv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "tsv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "no_headers",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "fmt",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "json_cols",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "raw",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "param",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "memory",
            "lineno": 1631,
            "endlineno": 1800,
            "docstring": {
              "value": "Execute SQL query against an in-memory database, optionally populated by imported data\n\nTo import data from CSV, TSV or JSON files pass them on the command-line:\n\n\b\n    sqlite-utils memory one.csv two.json \\\n        \"select * from one join two on one.two_id = two.id\"\n\nFor data piped into the tool from standard input, use \"-\" or \"stdin\":\n\n\b\n    cat animals.csv | sqlite-utils memory - \\\n        \"select * from stdin where species = 'dog'\"\n\nThe format of the data will be automatically detected. You can specify the format\nexplicitly using :json, :csv, :tsv or :nl (for newline-delimited JSON) - for example:\n\n\b\n    cat animals.csv | sqlite-utils memory stdin:csv places.dat:nl \\\n        \"select * from stdin where place_id in (select id from places)\"\n\nUse --schema to view the SQL schema of any imported files:\n\n\b\n    sqlite-utils memory animals.csv --schema",
              "lineno": 1705,
              "endlineno": 1730
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 1631,
                "endlineno": 1631
              },
              {
                "lineno": 1632,
                "endlineno": 1637
              },
              {
                "lineno": 1638,
                "endlineno": 1638
              },
              {
                "lineno": 1639,
                "endlineno": 1644
              },
              {
                "lineno": 1645,
                "endlineno": 1649
              },
              {
                "lineno": 1650,
                "endlineno": 1650
              },
              {
                "lineno": 1651,
                "endlineno": 1651
              },
              {
                "lineno": 1652,
                "endlineno": 1658
              },
              {
                "lineno": 1659,
                "endlineno": 1662
              },
              {
                "lineno": 1663,
                "endlineno": 1668
              },
              {
                "lineno": 1669,
                "endlineno": 1669
              },
              {
                "lineno": 1670,
                "endlineno": 1670
              },
              {
                "lineno": 1671,
                "endlineno": 1675
              },
              {
                "lineno": 1676,
                "endlineno": 1680
              },
              {
                "lineno": 1681,
                "endlineno": 1681
              }
            ],
            "parameters": [
              {
                "name": "paths",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "sql",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "attach",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "flatten",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "nl",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "arrays",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "csv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "tsv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "no_headers",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "fmt",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "json_cols",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "raw",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "param",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "encoding",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "no_detect_types",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "schema",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "dump",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "save",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "analyze",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "_execute_query",
            "lineno": 1803,
            "endlineno": 1837,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "db",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "sql",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "param",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "raw",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "csv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "tsv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "no_headers",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "fmt",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "nl",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "arrays",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "json_cols",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "search",
            "lineno": 1840,
            "endlineno": 1934,
            "docstring": {
              "value": "Execute a full-text search against this table\n\nExample:\n\n    sqlite-utils search data.db chickens lila",
              "lineno": 1882,
              "endlineno": 1887
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 1840,
                "endlineno": 1840
              },
              {
                "lineno": 1841,
                "endlineno": 1845
              },
              {
                "lineno": 1846,
                "endlineno": 1846
              },
              {
                "lineno": 1847,
                "endlineno": 1847
              },
              {
                "lineno": 1848,
                "endlineno": 1848
              },
              {
                "lineno": 1849,
                "endlineno": 1849
              },
              {
                "lineno": 1850,
                "endlineno": 1854
              },
              {
                "lineno": 1855,
                "endlineno": 1857
              },
              {
                "lineno": 1858,
                "endlineno": 1858
              },
              {
                "lineno": 1859,
                "endlineno": 1859
              },
              {
                "lineno": 1860,
                "endlineno": 1860
              },
              {
                "lineno": 1861,
                "endlineno": 1861
              }
            ],
            "parameters": [
              {
                "name": "ctx",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "dbtable",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "q",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "order",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "show_sql",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "quote",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "column",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "limit",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "nl",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "arrays",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "csv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "tsv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "no_headers",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "fmt",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "json_cols",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "rows",
            "lineno": 1937,
            "endlineno": 2016,
            "docstring": {
              "value": "Output all rows in the specified table\n\nExample:\n\n\b\n    sqlite-utils rows trees.db Trees",
              "lineno": 1985,
              "endlineno": 1991
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 1937,
                "endlineno": 1937
              },
              {
                "lineno": 1938,
                "endlineno": 1942
              },
              {
                "lineno": 1943,
                "endlineno": 1943
              },
              {
                "lineno": 1944,
                "endlineno": 1944
              },
              {
                "lineno": 1945,
                "endlineno": 1945
              },
              {
                "lineno": 1946,
                "endlineno": 1952
              },
              {
                "lineno": 1953,
                "endlineno": 1957
              },
              {
                "lineno": 1958,
                "endlineno": 1962
              },
              {
                "lineno": 1963,
                "endlineno": 1963
              },
              {
                "lineno": 1964,
                "endlineno": 1964
              },
              {
                "lineno": 1965,
                "endlineno": 1965
              }
            ],
            "parameters": [
              {
                "name": "ctx",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "dbtable",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "column",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "where",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "param",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "limit",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "offset",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "nl",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "arrays",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "csv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "tsv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "no_headers",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "fmt",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "json_cols",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "triggers",
            "lineno": 2019,
            "endlineno": 2069,
            "docstring": {
              "value": "Show triggers configured in this database\n\nExample:\n\n\b\n    sqlite-utils triggers trees.db",
              "lineno": 2043,
              "endlineno": 2049
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 2019,
                "endlineno": 2019
              },
              {
                "lineno": 2020,
                "endlineno": 2024
              },
              {
                "lineno": 2025,
                "endlineno": 2025
              },
              {
                "lineno": 2026,
                "endlineno": 2026
              },
              {
                "lineno": 2027,
                "endlineno": 2027
              },
              {
                "lineno": 2028,
                "endlineno": 2028
              }
            ],
            "parameters": [
              {
                "name": "ctx",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "tables",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "nl",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "arrays",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "csv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "tsv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "no_headers",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "fmt",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "json_cols",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "indexes",
            "lineno": 2072,
            "endlineno": 2136,
            "docstring": {
              "value": "Show indexes for the whole database or specific tables\n\nExample:\n\n\b\n    sqlite-utils indexes trees.db Trees",
              "lineno": 2098,
              "endlineno": 2104
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 2072,
                "endlineno": 2072
              },
              {
                "lineno": 2073,
                "endlineno": 2077
              },
              {
                "lineno": 2078,
                "endlineno": 2078
              },
              {
                "lineno": 2079,
                "endlineno": 2079
              },
              {
                "lineno": 2080,
                "endlineno": 2080
              },
              {
                "lineno": 2081,
                "endlineno": 2081
              },
              {
                "lineno": 2082,
                "endlineno": 2082
              }
            ],
            "parameters": [
              {
                "name": "ctx",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "tables",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "aux",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "nl",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "arrays",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "csv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "tsv",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "no_headers",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "fmt",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "json_cols",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "schema",
            "lineno": 2139,
            "endlineno": 2165,
            "docstring": {
              "value": "Show full schema for this database or for specified tables\n\nExample:\n\n\b\n    sqlite-utils schema trees.db",
              "lineno": 2152,
              "endlineno": 2158
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 2139,
                "endlineno": 2139
              },
              {
                "lineno": 2140,
                "endlineno": 2144
              },
              {
                "lineno": 2145,
                "endlineno": 2145
              },
              {
                "lineno": 2146,
                "endlineno": 2146
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "tables",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "transform",
            "lineno": 2168,
            "endlineno": 2283,
            "docstring": {
              "value": "Transform a table beyond the capabilities of ALTER TABLE\n\nExample:\n\n\b\n    sqlite-utils transform mydb.db mytable \\\n        --drop column1 \\\n        --rename column2 column_renamed",
              "lineno": 2231,
              "endlineno": 2239
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 2168,
                "endlineno": 2168
              },
              {
                "lineno": 2169,
                "endlineno": 2173
              },
              {
                "lineno": 2174,
                "endlineno": 2174
              },
              {
                "lineno": 2175,
                "endlineno": 2183
              },
              {
                "lineno": 2184,
                "endlineno": 2184
              },
              {
                "lineno": 2185,
                "endlineno": 2187
              },
              {
                "lineno": 2188,
                "endlineno": 2188
              },
              {
                "lineno": 2189,
                "endlineno": 2189
              },
              {
                "lineno": 2190,
                "endlineno": 2192
              },
              {
                "lineno": 2193,
                "endlineno": 2193
              },
              {
                "lineno": 2194,
                "endlineno": 2196
              },
              {
                "lineno": 2197,
                "endlineno": 2202
              },
              {
                "lineno": 2203,
                "endlineno": 2205
              },
              {
                "lineno": 2206,
                "endlineno": 2211
              },
              {
                "lineno": 2212,
                "endlineno": 2212
              },
              {
                "lineno": 2213,
                "endlineno": 2213
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "type",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "drop",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "rename",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "column_order",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "not_null",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "not_null_false",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "pk",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "pk_none",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "default",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "default_none",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "drop_foreign_key",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "sql",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "extract",
            "lineno": 2286,
            "endlineno": 2329,
            "docstring": {
              "value": "Extract one or more columns into a separate table\n\nExample:\n\n\b\n    sqlite-utils extract trees.db Street_Trees species",
              "lineno": 2314,
              "endlineno": 2320
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 2286,
                "endlineno": 2286
              },
              {
                "lineno": 2287,
                "endlineno": 2291
              },
              {
                "lineno": 2292,
                "endlineno": 2292
              },
              {
                "lineno": 2293,
                "endlineno": 2293
              },
              {
                "lineno": 2294,
                "endlineno": 2296
              },
              {
                "lineno": 2297,
                "endlineno": 2297
              },
              {
                "lineno": 2298,
                "endlineno": 2303
              },
              {
                "lineno": 2304,
                "endlineno": 2304
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "columns",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "other_table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "fk_column",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "rename",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "insert_files",
            "lineno": 2332,
            "endlineno": 2477,
            "docstring": {
              "value": "Insert one or more files using BLOB columns in the specified table\n\nExample:\n\n\b\n    sqlite-utils insert-files pics.db images *.gif \\\n        -c name:name \\\n        -c content:content \\\n        -c content_hash:sha256 \\\n        -c created:ctime_iso \\\n        -c modified:mtime_iso \\\n        -c size:size \\\n        --pk name",
              "lineno": 2379,
              "endlineno": 2393
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 2332,
                "endlineno": 2332
              },
              {
                "lineno": 2333,
                "endlineno": 2337
              },
              {
                "lineno": 2338,
                "endlineno": 2338
              },
              {
                "lineno": 2339,
                "endlineno": 2344
              },
              {
                "lineno": 2345,
                "endlineno": 2351
              },
              {
                "lineno": 2352,
                "endlineno": 2352
              },
              {
                "lineno": 2353,
                "endlineno": 2353
              },
              {
                "lineno": 2354,
                "endlineno": 2354
              },
              {
                "lineno": 2355,
                "endlineno": 2355
              },
              {
                "lineno": 2356,
                "endlineno": 2356
              },
              {
                "lineno": 2357,
                "endlineno": 2357
              },
              {
                "lineno": 2358,
                "endlineno": 2361
              },
              {
                "lineno": 2362,
                "endlineno": 2362
              },
              {
                "lineno": 2363,
                "endlineno": 2363
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "file_or_dir",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "column",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "pk",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "alter",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "replace",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "upsert",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "name",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "text",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "encoding",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "silent",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "analyze_tables",
            "lineno": 2480,
            "endlineno": 2513,
            "docstring": {
              "value": "Analyze the columns in one or more tables\n\nExample:\n\n\b\n    sqlite-utils analyze-tables data.db trees",
              "lineno": 2504,
              "endlineno": 2510
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 2480,
                "endlineno": 2480
              },
              {
                "lineno": 2481,
                "endlineno": 2485
              },
              {
                "lineno": 2486,
                "endlineno": 2486
              },
              {
                "lineno": 2487,
                "endlineno": 2494
              },
              {
                "lineno": 2495,
                "endlineno": 2495
              },
              {
                "lineno": 2496,
                "endlineno": 2496
              }
            ],
            "parameters": [
              {
                "name": "path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "tables",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "columns",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "save",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "_analyze",
            "lineno": 2516,
            "endlineno": 2565,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "db",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "tables",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "columns",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "save",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "_generate_convert_help",
            "lineno": 2568,
            "endlineno": 2603,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [],
            "returns": null
          },
          {
            "kind": "function",
            "name": "convert",
            "lineno": 2606,
            "endlineno": 2714,
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 2606,
                "endlineno": 2606
              },
              {
                "lineno": 2607,
                "endlineno": 2611
              },
              {
                "lineno": 2612,
                "endlineno": 2612
              },
              {
                "lineno": 2613,
                "endlineno": 2613
              },
              {
                "lineno": 2614,
                "endlineno": 2614
              },
              {
                "lineno": 2615,
                "endlineno": 2617
              },
              {
                "lineno": 2618,
                "endlineno": 2620
              },
              {
                "lineno": 2621,
                "endlineno": 2623
              },
              {
                "lineno": 2624,
                "endlineno": 2624
              },
              {
                "lineno": 2625,
                "endlineno": 2631
              },
              {
                "lineno": 2632,
                "endlineno": 2632
              },
              {
                "lineno": 2633,
                "endlineno": 2638
              },
              {
                "lineno": 2639,
                "endlineno": 2639
              },
              {
                "lineno": 2640,
                "endlineno": 2640
              }
            ],
            "parameters": [
              {
                "name": "db_path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "columns",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "code",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "imports",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "dry_run",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "multi",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "where",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "param",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "output",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "output_type",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "drop",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "silent",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "add_geometry_column",
            "lineno": 2717,
            "endlineno": 2790,
            "docstring": {
              "value": "Add a SpatiaLite geometry column to an existing table. Requires SpatiaLite extension.\n\n\n\nBy default, this command will try to load the SpatiaLite extension from usual paths.\nTo load it from a specific path, use --load-extension.",
              "lineno": 2772,
              "endlineno": 2775
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 2717,
                "endlineno": 2717
              },
              {
                "lineno": 2718,
                "endlineno": 2722
              },
              {
                "lineno": 2723,
                "endlineno": 2723
              },
              {
                "lineno": 2724,
                "endlineno": 2724
              },
              {
                "lineno": 2725,
                "endlineno": 2745
              },
              {
                "lineno": 2746,
                "endlineno": 2752
              },
              {
                "lineno": 2753,
                "endlineno": 2759
              },
              {
                "lineno": 2760,
                "endlineno": 2760
              },
              {
                "lineno": 2761,
                "endlineno": 2761
              }
            ],
            "parameters": [
              {
                "name": "db_path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "column_name",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "geometry_type",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "srid",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "coord_dimension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "not_null",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "create_spatial_index",
            "lineno": 2793,
            "endlineno": 2824,
            "docstring": {
              "value": "Create a spatial index on a SpatiaLite geometry column.\nThe table and geometry column must already exist before trying to add a spatial index.\n\n\n\nBy default, this command will try to load the SpatiaLite extension from usual paths.\nTo load it from a specific path, use --load-extension.",
              "lineno": 2803,
              "endlineno": 2807
            },
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 2793,
                "endlineno": 2793
              },
              {
                "lineno": 2794,
                "endlineno": 2798
              },
              {
                "lineno": 2799,
                "endlineno": 2799
              },
              {
                "lineno": 2800,
                "endlineno": 2800
              },
              {
                "lineno": 2801,
                "endlineno": 2801
              }
            ],
            "parameters": [
              {
                "name": "db_path",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "table",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "column_name",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "_render_common",
            "lineno": 2827,
            "endlineno": 2833,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "title",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "values",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "class",
            "name": "UnicodeDecodeErrorForPath",
            "lineno": 2836,
            "endlineno": 2839,
            "labels": [],
            "members": [
              {
                "kind": "function",
                "name": "__init__",
                "lineno": 2837,
                "endlineno": 2839,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "exception",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "path",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "attribute",
                "name": "exception",
                "lineno": 2838,
                "endlineno": 2838,
                "labels": [
                  "instance-attribute"
                ],
                "members": [],
                "value": "exception"
              },
              {
                "kind": "attribute",
                "name": "path",
                "lineno": 2839,
                "endlineno": 2839,
                "labels": [
                  "instance-attribute"
                ],
                "members": [],
                "value": "path"
              }
            ],
            "bases": [
              {
                "source": "Exception",
                "full": "Exception"
              }
            ],
            "decorators": []
          },
          {
            "kind": "attribute",
            "name": "FILE_COLUMNS",
            "lineno": 2842,
            "endlineno": 2859,
            "labels": [
              "module-attribute"
            ],
            "members": [],
            "value": "{'name': lambda p: p.name, 'path': lambda p: str(p), 'fullpath': lambda p: str(p.resolve()), 'sha256': lambda p: hashlib.sha256(p.resolve().read_bytes()).hexdigest(), 'md5': lambda p: hashlib.md5(p.resolve().read_bytes()).hexdigest(), 'mode': lambda p: p.stat().st_mode, 'content': lambda p: p.resolve().read_bytes(), 'mtime': lambda p: p.stat().st_mtime, 'ctime': lambda p: p.stat().st_ctime, 'mtime_int': lambda p: int(p.stat().st_mtime), 'ctime_int': lambda p: int(p.stat().st_ctime), 'mtime_iso': lambda p: datetime.utcfromtimestamp(p.stat().st_mtime).isoformat(), 'ctime_iso': lambda p: datetime.utcfromtimestamp(p.stat().st_ctime).isoformat(), 'size': lambda p: p.stat().st_size, 'stem': lambda p: p.stem, 'suffix': lambda p: p.suffix}"
          },
          {
            "kind": "function",
            "name": "output_rows",
            "lineno": 2862,
            "endlineno": 2887,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "iterator",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "headers",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "nl",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "arrays",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "json_cols",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "maybe_json",
            "lineno": 2890,
            "endlineno": 2899,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "value",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "json_binary",
            "lineno": 2902,
            "endlineno": 2906,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "value",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "verify_is_dict",
            "lineno": 2909,
            "endlineno": 2914,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "doc",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "_load_extensions",
            "lineno": 2917,
            "endlineno": 2923,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "db",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "load_extension",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          }
        ],
        "filepath": "/opt/hostedtoolcache/Python/3.10.4/x64/lib/python3.10/site-packages/sqlite_utils/cli.py"
      },
      {
        "kind": "module",
        "name": "__main__",
        "labels": [],
        "members": [
          {
            "kind": "alias",
            "name": "cli",
            "target_path": "sqlite_utils.cli.cli",
            "lineno": 1,
            "endlineno": 1
          }
        ],
        "filepath": "/opt/hostedtoolcache/Python/3.10.4/x64/lib/python3.10/site-packages/sqlite_utils/__main__.py"
      },
      {
        "kind": "module",
        "name": "db",
        "labels": [],
        "members": [
          {
            "kind": "alias",
            "name": "chunks",
            "target_path": "sqlite_utils.utils.chunks",
            "lineno": 1,
            "endlineno": 11
          },
          {
            "kind": "alias",
            "name": "hash_record",
            "target_path": "sqlite_utils.utils.hash_record",
            "lineno": 1,
            "endlineno": 11
          },
          {
            "kind": "alias",
            "name": "sqlite3",
            "target_path": "sqlite_utils.utils.sqlite3",
            "lineno": 1,
            "endlineno": 11
          },
          {
            "kind": "alias",
            "name": "OperationalError",
            "target_path": "sqlite_utils.utils.OperationalError",
            "lineno": 1,
            "endlineno": 11
          },
          {
            "kind": "alias",
            "name": "suggest_column_types",
            "target_path": "sqlite_utils.utils.suggest_column_types",
            "lineno": 1,
            "endlineno": 11
          },
          {
            "kind": "alias",
            "name": "types_for_column_types",
            "target_path": "sqlite_utils.utils.types_for_column_types",
            "lineno": 1,
            "endlineno": 11
          },
          {
            "kind": "alias",
            "name": "column_affinity",
            "target_path": "sqlite_utils.utils.column_affinity",
            "lineno": 1,
            "endlineno": 11
          },
          {
            "kind": "alias",
            "name": "progressbar",
            "target_path": "sqlite_utils.utils.progressbar",
            "lineno": 1,
            "endlineno": 11
          },
          {
            "kind": "alias",
            "name": "find_spatialite",
            "target_path": "sqlite_utils.utils.find_spatialite",
            "lineno": 1,
            "endlineno": 11
          },
          {
            "kind": "alias",
            "name": "namedtuple",
            "target_path": "collections.namedtuple",
            "lineno": 12,
            "endlineno": 12
          },
          {
            "kind": "alias",
            "name": "Mapping",
            "target_path": "collections.abc.Mapping",
            "lineno": 13,
            "endlineno": 13
          },
          {
            "kind": "alias",
            "name": "contextlib",
            "target_path": "contextlib",
            "lineno": 14,
            "endlineno": 14
          },
          {
            "kind": "alias",
            "name": "datetime",
            "target_path": "datetime",
            "lineno": 15,
            "endlineno": 15
          },
          {
            "kind": "alias",
            "name": "decimal",
            "target_path": "decimal",
            "lineno": 16,
            "endlineno": 16
          },
          {
            "kind": "alias",
            "name": "inspect",
            "target_path": "inspect",
            "lineno": 17,
            "endlineno": 17
          },
          {
            "kind": "alias",
            "name": "itertools",
            "target_path": "itertools",
            "lineno": 18,
            "endlineno": 18
          },
          {
            "kind": "alias",
            "name": "json",
            "target_path": "json",
            "lineno": 19,
            "endlineno": 19
          },
          {
            "kind": "alias",
            "name": "os",
            "target_path": "os",
            "lineno": 20,
            "endlineno": 20
          },
          {
            "kind": "alias",
            "name": "pathlib",
            "target_path": "pathlib",
            "lineno": 21,
            "endlineno": 21
          },
          {
            "kind": "alias",
            "name": "re",
            "target_path": "re",
            "lineno": 22,
            "endlineno": 22
          },
          {
            "kind": "alias",
            "name": "secrets",
            "target_path": "secrets",
            "lineno": 23,
            "endlineno": 23
          },
          {
            "kind": "alias",
            "name": "rank_bm25",
            "target_path": "sqlite_fts4.rank_bm25",
            "lineno": 24,
            "endlineno": 24
          },
          {
            "kind": "alias",
            "name": "sys",
            "target_path": "sys",
            "lineno": 25,
            "endlineno": 25
          },
          {
            "kind": "alias",
            "name": "textwrap",
            "target_path": "textwrap",
            "lineno": 26,
            "endlineno": 26
          },
          {
            "kind": "alias",
            "name": "cast",
            "target_path": "typing.cast",
            "lineno": 27,
            "endlineno": 39
          },
          {
            "kind": "alias",
            "name": "Any",
            "target_path": "typing.Any",
            "lineno": 27,
            "endlineno": 39
          },
          {
            "kind": "alias",
            "name": "Callable",
            "target_path": "typing.Callable",
            "lineno": 27,
            "endlineno": 39
          },
          {
            "kind": "alias",
            "name": "Dict",
            "target_path": "typing.Dict",
            "lineno": 27,
            "endlineno": 39
          },
          {
            "kind": "alias",
            "name": "Generator",
            "target_path": "typing.Generator",
            "lineno": 27,
            "endlineno": 39
          },
          {
            "kind": "alias",
            "name": "Iterable",
            "target_path": "typing.Iterable",
            "lineno": 27,
            "endlineno": 39
          },
          {
            "kind": "alias",
            "name": "Union",
            "target_path": "typing.Union",
            "lineno": 27,
            "endlineno": 39
          },
          {
            "kind": "alias",
            "name": "Optional",
            "target_path": "typing.Optional",
            "lineno": 27,
            "endlineno": 39
          },
          {
            "kind": "alias",
            "name": "List",
            "target_path": "typing.List",
            "lineno": 27,
            "endlineno": 39
          },
          {
            "kind": "alias",
            "name": "Set",
            "target_path": "typing.Set",
            "lineno": 27,
            "endlineno": 39
          },
          {
            "kind": "alias",
            "name": "Tuple",
            "target_path": "typing.Tuple",
            "lineno": 27,
            "endlineno": 39
          },
          {
            "kind": "alias",
            "name": "uuid",
            "target_path": "uuid",
            "lineno": 40,
            "endlineno": 40
          },
          {
            "kind": "attribute",
            "name": "SQLITE_MAX_VARS",
            "lineno": 42,
            "endlineno": 42,
            "labels": [
              "module-attribute"
            ],
            "members": [],
            "value": "999"
          },
          {
            "kind": "attribute",
            "name": "_quote_fts_re",
            "lineno": 44,
            "endlineno": 44,
            "labels": [
              "module-attribute"
            ],
            "members": [],
            "value": "re.compile('\\\\s+|(\".*?\")')"
          },
          {
            "kind": "attribute",
            "name": "_virtual_table_using_re",
            "lineno": 46,
            "endlineno": 64,
            "labels": [
              "module-attribute"
            ],
            "members": [],
            "value": "re.compile('\\n^ # Start of string\\n\\\\s*CREATE\\\\s+VIRTUAL\\\\s+TABLE\\\\s+ # CREATE VIRTUAL TABLE\\n(\\n    \\'(?P<squoted_table>[^\\']*(?:\\'\\'[^\\']*)*)\\' | # single quoted name\\n    \"(?P<dquoted_table>[^\"]*(?:\"\"[^\"]*)*)\" | # double quoted name\\n    `(?P<backtick_table>[^`]+)`            | # `backtick` quoted name\\n    \\\\[(?P<squarequoted_table>[^\\\\]]+)\\\\]     | # [...] quoted name\\n    (?P<identifier>                          # SQLite non-quoted identifier\\n        [A-Za-z_\\\\u0080-\\\\uffff]  # \\\\u0080-\\\\uffff = \"any character larger than u007f\"\\n        [A-Za-z_\\\\u0080-\\\\uffff0-9\\\\$]* # zero-or-more alphanemuric or $\\n    )\\n)\\n\\\\s+(IF\\\\s+NOT\\\\s+EXISTS\\\\s+)?      # IF NOT EXISTS (optional)\\nUSING\\\\s+(?P<using>\\\\w+)          # for example USING FTS5\\n', re.VERBOSE | re.IGNORECASE)"
          },
          {
            "kind": "alias",
            "name": "pd",
            "target_path": "pandas",
            "lineno": 67,
            "endlineno": 67
          },
          {
            "kind": "alias",
            "name": "np",
            "target_path": "numpy",
            "lineno": 72,
            "endlineno": 72
          },
          {
            "kind": "attribute",
            "name": "Column",
            "lineno": 76,
            "endlineno": 78,
            "labels": [
              "module-attribute"
            ],
            "members": [],
            "value": "namedtuple('Column', ('cid', 'name', 'type', 'notnull', 'default_value', 'is_pk'))"
          },
          {
            "kind": "attribute",
            "name": "ColumnDetails",
            "lineno": 101,
            "endlineno": 113,
            "labels": [
              "module-attribute"
            ],
            "members": [],
            "value": "namedtuple('ColumnDetails', ('table', 'column', 'total_rows', 'num_null', 'num_blank', 'num_distinct', 'most_common', 'least_common'))"
          },
          {
            "kind": "attribute",
            "name": "ForeignKey",
            "lineno": 142,
            "endlineno": 144,
            "labels": [
              "module-attribute"
            ],
            "members": [],
            "value": "namedtuple('ForeignKey', ('table', 'column', 'other_table', 'other_column'))"
          },
          {
            "kind": "attribute",
            "name": "Index",
            "lineno": 145,
            "endlineno": 145,
            "labels": [
              "module-attribute"
            ],
            "members": [],
            "value": "namedtuple('Index', ('seq', 'name', 'unique', 'origin', 'partial', 'columns'))"
          },
          {
            "kind": "attribute",
            "name": "XIndex",
            "lineno": 146,
            "endlineno": 146,
            "labels": [
              "module-attribute"
            ],
            "members": [],
            "value": "namedtuple('XIndex', ('name', 'columns'))"
          },
          {
            "kind": "attribute",
            "name": "XIndexColumn",
            "lineno": 147,
            "endlineno": 149,
            "labels": [
              "module-attribute"
            ],
            "members": [],
            "value": "namedtuple('XIndexColumn', ('seqno', 'cid', 'name', 'desc', 'coll', 'key'))"
          },
          {
            "kind": "attribute",
            "name": "Trigger",
            "lineno": 150,
            "endlineno": 150,
            "labels": [
              "module-attribute"
            ],
            "members": [],
            "value": "namedtuple('Trigger', ('name', 'table', 'sql'))"
          },
          {
            "kind": "attribute",
            "name": "ForeignKeysType",
            "lineno": 153,
            "endlineno": 159,
            "labels": [
              "module-attribute"
            ],
            "members": [],
            "value": "Union[Iterable[str], Iterable[ForeignKey], Iterable[Tuple[str, str]], Iterable[Tuple[str, str, str]], Iterable[Tuple[str, str, str, str]]]"
          },
          {
            "kind": "class",
            "name": "Default",
            "lineno": 162,
            "endlineno": 163,
            "labels": [],
            "members": [],
            "bases": [],
            "decorators": []
          },
          {
            "kind": "attribute",
            "name": "DEFAULT",
            "lineno": 166,
            "endlineno": 166,
            "labels": [
              "module-attribute"
            ],
            "members": [],
            "value": "Default()"
          },
          {
            "kind": "attribute",
            "name": "COLUMN_TYPE_MAPPING",
            "lineno": 168,
            "endlineno": 194,
            "labels": [
              "module-attribute"
            ],
            "members": [],
            "value": "{float: 'FLOAT', int: 'INTEGER', bool: 'INTEGER', str: 'TEXT', dict: 'TEXT', tuple: 'TEXT', list: 'TEXT', bytes.__class__: 'BLOB', bytes: 'BLOB', memoryview: 'BLOB', datetime.datetime: 'TEXT', datetime.date: 'TEXT', datetime.time: 'TEXT', decimal.Decimal: 'FLOAT', None.__class__: 'TEXT', uuid.UUID: 'TEXT', 'TEXT': 'TEXT', 'INTEGER': 'INTEGER', 'FLOAT': 'FLOAT', 'BLOB': 'BLOB', 'text': 'TEXT', 'integer': 'INTEGER', 'float': 'FLOAT', 'blob': 'BLOB'}"
          },
          {
            "kind": "class",
            "name": "AlterError",
            "lineno": 218,
            "endlineno": 220,
            "docstring": {
              "value": "Error altering table",
              "lineno": 219,
              "endlineno": 219
            },
            "labels": [],
            "members": [],
            "bases": [
              {
                "source": "Exception",
                "full": "Exception"
              }
            ],
            "decorators": []
          },
          {
            "kind": "class",
            "name": "NoObviousTable",
            "lineno": 223,
            "endlineno": 225,
            "docstring": {
              "value": "Could not tell which table this operation refers to",
              "lineno": 224,
              "endlineno": 224
            },
            "labels": [],
            "members": [],
            "bases": [
              {
                "source": "Exception",
                "full": "Exception"
              }
            ],
            "decorators": []
          },
          {
            "kind": "class",
            "name": "BadPrimaryKey",
            "lineno": 228,
            "endlineno": 230,
            "docstring": {
              "value": "Table does not have a single obvious primary key",
              "lineno": 229,
              "endlineno": 229
            },
            "labels": [],
            "members": [],
            "bases": [
              {
                "source": "Exception",
                "full": "Exception"
              }
            ],
            "decorators": []
          },
          {
            "kind": "class",
            "name": "NotFoundError",
            "lineno": 233,
            "endlineno": 235,
            "docstring": {
              "value": "Record not found",
              "lineno": 234,
              "endlineno": 234
            },
            "labels": [],
            "members": [],
            "bases": [
              {
                "source": "Exception",
                "full": "Exception"
              }
            ],
            "decorators": []
          },
          {
            "kind": "class",
            "name": "PrimaryKeyRequired",
            "lineno": 238,
            "endlineno": 240,
            "docstring": {
              "value": "Primary key needs to be specified",
              "lineno": 239,
              "endlineno": 239
            },
            "labels": [],
            "members": [],
            "bases": [
              {
                "source": "Exception",
                "full": "Exception"
              }
            ],
            "decorators": []
          },
          {
            "kind": "class",
            "name": "InvalidColumns",
            "lineno": 243,
            "endlineno": 245,
            "docstring": {
              "value": "Specified columns do not exist",
              "lineno": 244,
              "endlineno": 244
            },
            "labels": [],
            "members": [],
            "bases": [
              {
                "source": "Exception",
                "full": "Exception"
              }
            ],
            "decorators": []
          },
          {
            "kind": "class",
            "name": "DescIndex",
            "lineno": 248,
            "endlineno": 249,
            "labels": [],
            "members": [],
            "bases": [
              {
                "source": "str",
                "full": "str"
              }
            ],
            "decorators": []
          },
          {
            "kind": "class",
            "name": "BadMultiValues",
            "lineno": 252,
            "endlineno": 256,
            "docstring": {
              "value": "With multi=True code must return a Python dictionary",
              "lineno": 253,
              "endlineno": 253
            },
            "labels": [],
            "members": [
              {
                "kind": "function",
                "name": "__init__",
                "lineno": 255,
                "endlineno": 256,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "values",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "attribute",
                "name": "values",
                "lineno": 256,
                "endlineno": 256,
                "labels": [
                  "instance-attribute"
                ],
                "members": [],
                "value": "values"
              }
            ],
            "bases": [
              {
                "source": "Exception",
                "full": "Exception"
              }
            ],
            "decorators": []
          },
          {
            "kind": "attribute",
            "name": "_COUNTS_TABLE_CREATE_SQL",
            "lineno": 259,
            "endlineno": 264,
            "labels": [
              "module-attribute"
            ],
            "members": [],
            "value": "'\\nCREATE TABLE IF NOT EXISTS [{}](\\n   [table] TEXT PRIMARY KEY,\\n   count INTEGER DEFAULT 0\\n);\\n'.strip()"
          },
          {
            "kind": "class",
            "name": "Database",
            "lineno": 267,
            "endlineno": 1088,
            "docstring": {
              "value": "Wrapper for a SQLite database connection that adds a variety of useful utility methods.\n\nTo create an instance::\n\n    # create data.db file, or open existing:\n    db = Database(\"data.db\")\n    # Create an in-memory database:\n    dB = Database(memory=True)\n\n:param filename_or_conn: String path to a file, or a ``pathlib.Path`` object, or a\n  ``sqlite3`` connection\n:param memory: set to ``True`` to create an in-memory database\n:param memory_name: creates a named in-memory database that can be shared across multiple connections\n:param recreate: set to ``True`` to delete and recreate a file database (**dangerous**)\n:param recursive_triggers: defaults to ``True``, which sets ``PRAGMA recursive_triggers=on;`` -\n  set to ``False`` to avoid setting this pragma\n:param tracer: set a tracer function (``print`` works for this) which will be called with\n  ``sql, parameters`` every time a SQL query is executed\n:param use_counts_table: set to ``True`` to use a cached counts table, if available. See\n  :ref:`python_api_cached_table_counts`",
              "lineno": 268,
              "endlineno": 289
            },
            "labels": [],
            "members": [
              {
                "kind": "attribute",
                "name": "_counts_table_name",
                "lineno": 291,
                "endlineno": 291,
                "labels": [
                  "class-attribute"
                ],
                "members": [],
                "value": "'_counts'"
              },
              {
                "kind": "attribute",
                "name": "use_counts_table",
                "lineno": 327,
                "endlineno": 327,
                "labels": [
                  "instance-attribute"
                ],
                "members": [],
                "value": "use_counts_table"
              },
              {
                "kind": "function",
                "name": "__init__",
                "lineno": 294,
                "endlineno": 327,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "filename_or_conn",
                    "annotation": [
                      {
                        "source": "Union",
                        "full": "typing.Union"
                      },
                      "[",
                      [
                        {
                          "source": "str",
                          "full": "str"
                        },
                        ", ",
                        [
                          {
                            "source": "pathlib",
                            "full": "pathlib"
                          },
                          ".",
                          {
                            "source": "Path",
                            "full": "pathlib.Path"
                          }
                        ],
                        ", ",
                        [
                          {
                            "source": "sqlite3",
                            "full": "sqlite_utils.utils.sqlite3"
                          },
                          ".",
                          {
                            "source": "Connection",
                            "full": "sqlite_utils.utils.sqlite3.Connection"
                          }
                        ]
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "memory",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  },
                  {
                    "name": "memory_name",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "recreate",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  },
                  {
                    "name": "recursive_triggers",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "True"
                  },
                  {
                    "name": "tracer",
                    "annotation": {
                      "source": "Callable",
                      "full": "typing.Callable"
                    },
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "use_counts_table",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  }
                ],
                "returns": null
              },
              {
                "kind": "attribute",
                "name": "conn",
                "lineno": 309,
                "endlineno": 313,
                "labels": [
                  "instance-attribute"
                ],
                "members": [],
                "value": "sqlite3.connect(uri, uri=True, check_same_thread=False)"
              },
              {
                "kind": "attribute",
                "name": "_tracer",
                "lineno": 323,
                "endlineno": 323,
                "labels": [
                  "instance-attribute"
                ],
                "members": [],
                "value": "tracer"
              },
              {
                "kind": "attribute",
                "name": "_registered_functions",
                "lineno": 326,
                "endlineno": 326,
                "labels": [
                  "instance-attribute"
                ],
                "members": [],
                "value": "set()",
                "annotation": {
                  "source": "set",
                  "full": "set"
                }
              },
              {
                "kind": "function",
                "name": "tracer",
                "lineno": 329,
                "endlineno": 351,
                "docstring": {
                  "value": "Context manager to temporarily set a tracer function - all executed SQL queries will\nbe passed to this.\n\nThe tracer function should accept two arguments: ``sql`` and ``parameters``\n\nExample usage::\n\n    with db.tracer(print):\n        db[\"creatures\"].insert({\"name\": \"Cleo\"})\n\nSee :ref:`python_api_tracing`.\n\n:param tracer: Callable accepting ``sql`` and ``parameters`` arguments",
                  "lineno": 331,
                  "endlineno": 345
                },
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 329,
                    "endlineno": 329
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "tracer",
                    "annotation": {
                      "source": "Callable",
                      "full": "typing.Callable"
                    },
                    "kind": "positional or keyword",
                    "default": "None"
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "__getitem__",
                "lineno": 353,
                "endlineno": 360,
                "docstring": {
                  "value": "``db[table_name]`` returns a :class:`.Table` object for the table with the specified name.\nIf the table does not exist yet it will be created the first time data is inserted into it.\n\n:param table_name: The name of the table",
                  "lineno": 354,
                  "endlineno": 359
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "table_name",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": [
                  {
                    "source": "Union",
                    "full": "typing.Union"
                  },
                  "[",
                  [
                    "'Table'",
                    ", ",
                    "'View'"
                  ],
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "__repr__",
                "lineno": 362,
                "endlineno": 363,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": {
                  "source": "str",
                  "full": "str"
                }
              },
              {
                "kind": "function",
                "name": "register_function",
                "lineno": 365,
                "endlineno": 408,
                "docstring": {
                  "value": "``fn`` will be made available as a function within SQL, with the same name and number\nof arguments. Can be used as a decorator::\n\n    @db.register\n    def upper(value):\n        return str(value).upper()\n\nThe decorator can take arguments::\n\n    @db.register(deterministic=True, replace=True)\n    def upper(value):\n        return str(value).upper()\n\nSee :ref:`python_api_register_function`.\n\n:param fn: Function to register\n:param deterministic: set ``True`` for functions that always returns the same output for a given input\n:param replace: set ``True`` to replace an existing function with the same name - otherwise throw an error",
                  "lineno": 368,
                  "endlineno": 387
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "fn",
                    "annotation": {
                      "source": "Callable",
                      "full": "typing.Callable"
                    },
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "deterministic",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  },
                  {
                    "name": "replace",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "register_fts4_bm25",
                "lineno": 410,
                "endlineno": 412,
                "docstring": {
                  "value": "Register the ``rank_bm25(match_info)`` function used for calculating relevance with SQLite FTS4.",
                  "lineno": 411,
                  "endlineno": 411
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "attach",
                "lineno": 414,
                "endlineno": 428,
                "docstring": {
                  "value": "Attach another SQLite database file to this connection with the specified alias, equivalent to::\n\n    ATTACH DATABASE 'filepath.db' AS alias\n\n:param alias: Alias name to use\n:param filepath: Path to SQLite database file on disk",
                  "lineno": 415,
                  "endlineno": 422
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "alias",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "filepath",
                    "annotation": [
                      {
                        "source": "Union",
                        "full": "typing.Union"
                      },
                      "[",
                      [
                        {
                          "source": "str",
                          "full": "str"
                        },
                        ", ",
                        [
                          {
                            "source": "pathlib",
                            "full": "pathlib"
                          },
                          ".",
                          {
                            "source": "Path",
                            "full": "pathlib.Path"
                          }
                        ]
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "query",
                "lineno": 430,
                "endlineno": 443,
                "docstring": {
                  "value": "Execute ``sql`` and return an iterable of dictionaries representing each row.\n\n:param sql: SQL query to execute\n:param params: Parameters to use in that query - an iterable for ``where id = ?``\n  parameters, or a dictionary for ``where id = :id``",
                  "lineno": 433,
                  "endlineno": 439
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "sql",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "params",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          {
                            "source": "Iterable",
                            "full": "typing.Iterable"
                          },
                          ", ",
                          {
                            "source": "dict",
                            "full": "dict"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  }
                ],
                "returns": [
                  {
                    "source": "Generator",
                    "full": "typing.Generator"
                  },
                  "[",
                  [
                    {
                      "source": "dict",
                      "full": "dict"
                    },
                    ", ",
                    "None",
                    ", ",
                    "None"
                  ],
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "execute",
                "lineno": 445,
                "endlineno": 460,
                "docstring": {
                  "value": "Execute SQL query and return a ``sqlite3.Cursor``.\n\n:param sql: SQL query to execute\n:param parameters: Parameters to use in that query - an iterable for ``where id = ?``\n  parameters, or a dictionary for ``where id = :id``",
                  "lineno": 448,
                  "endlineno": 454
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "sql",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "parameters",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          {
                            "source": "Iterable",
                            "full": "typing.Iterable"
                          },
                          ", ",
                          {
                            "source": "dict",
                            "full": "dict"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  }
                ],
                "returns": [
                  {
                    "source": "sqlite3",
                    "full": "sqlite_utils.utils.sqlite3"
                  },
                  ".",
                  {
                    "source": "Cursor",
                    "full": "sqlite_utils.utils.sqlite3.Cursor"
                  }
                ]
              },
              {
                "kind": "function",
                "name": "executescript",
                "lineno": 462,
                "endlineno": 470,
                "docstring": {
                  "value": "Execute multiple SQL statements separated by ; and return the ``sqlite3.Cursor``.\n\n:param sql: SQL to execute",
                  "lineno": 463,
                  "endlineno": 467
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "sql",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": [
                  {
                    "source": "sqlite3",
                    "full": "sqlite_utils.utils.sqlite3"
                  },
                  ".",
                  {
                    "source": "Cursor",
                    "full": "sqlite_utils.utils.sqlite3.Cursor"
                  }
                ]
              },
              {
                "kind": "function",
                "name": "table",
                "lineno": 472,
                "endlineno": 479,
                "docstring": {
                  "value": "Return a table object, optionally configured with default options.\n\n:param table_name: Name of the table",
                  "lineno": 473,
                  "endlineno": 477
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "table_name",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "**kwargs",
                    "annotation": null,
                    "kind": "variadic keyword",
                    "default": "{}"
                  }
                ],
                "returns": [
                  {
                    "source": "Union",
                    "full": "typing.Union"
                  },
                  "[",
                  [
                    "'Table'",
                    ", ",
                    "'View'"
                  ],
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "quote",
                "lineno": 481,
                "endlineno": 494,
                "docstring": {
                  "value": "Apply SQLite string quoting to a value, including wrappping it in single quotes.\n\n:param value: String to quote",
                  "lineno": 482,
                  "endlineno": 486
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "value",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": {
                  "source": "str",
                  "full": "str"
                }
              },
              {
                "kind": "function",
                "name": "quote_fts",
                "lineno": 496,
                "endlineno": 516,
                "docstring": {
                  "value": "Escape special characters in a SQLite full-text search query.\n\nThis works by surrounding each token within the query with double\nquotes, in order to avoid words like ``NOT`` and ``OR`` having\nspecial meaning as defined by the FTS query syntax here:\n\nhttps://www.sqlite.org/fts5.html#full_text_query_syntax\n\nIf the query has unbalanced ``\"`` characters, adds one at end.\n\n:param query: String to escape",
                  "lineno": 497,
                  "endlineno": 509
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "query",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": {
                  "source": "str",
                  "full": "str"
                }
              },
              {
                "kind": "function",
                "name": "table_names",
                "lineno": 518,
                "endlineno": 531,
                "docstring": {
                  "value": "List of string table names in this database.\n\n:param fts4: Only return tables that are part of FTS4 indexes\n:param fts5: Only return tables that are part of FTS5 indexes",
                  "lineno": 519,
                  "endlineno": 524
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "fts4",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  },
                  {
                    "name": "fts5",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  }
                ],
                "returns": [
                  {
                    "source": "List",
                    "full": "typing.List"
                  },
                  "[",
                  {
                    "source": "str",
                    "full": "str"
                  },
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "view_names",
                "lineno": 533,
                "endlineno": 540,
                "docstring": {
                  "value": "List of string view names in this database.",
                  "lineno": 534,
                  "endlineno": 534
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": [
                  {
                    "source": "List",
                    "full": "typing.List"
                  },
                  "[",
                  {
                    "source": "str",
                    "full": "str"
                  },
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "tables",
                "lineno": 542,
                "endlineno": 545,
                "docstring": {
                  "value": "List of Table objects in this database.",
                  "lineno": 544,
                  "endlineno": 544
                },
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 542,
                    "endlineno": 542
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": [
                  {
                    "source": "List",
                    "full": "typing.List"
                  },
                  "[",
                  "'Table'",
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "views",
                "lineno": 547,
                "endlineno": 550,
                "docstring": {
                  "value": "List of View objects in this database.",
                  "lineno": 549,
                  "endlineno": 549
                },
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 547,
                    "endlineno": 547
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": [
                  {
                    "source": "List",
                    "full": "typing.List"
                  },
                  "[",
                  "'View'",
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "triggers",
                "lineno": 552,
                "endlineno": 560,
                "docstring": {
                  "value": "List of ``(name, table_name, sql)`` tuples representing triggers in this database.",
                  "lineno": 554,
                  "endlineno": 554
                },
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 552,
                    "endlineno": 552
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": [
                  {
                    "source": "List",
                    "full": "typing.List"
                  },
                  "[",
                  {
                    "source": "Trigger",
                    "full": "sqlite_utils.db.Trigger"
                  },
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "triggers_dict",
                "lineno": 562,
                "endlineno": 565,
                "docstring": {
                  "value": "A ``{trigger_name: sql}`` dictionary of triggers in this database.",
                  "lineno": 564,
                  "endlineno": 564
                },
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 562,
                    "endlineno": 562
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": [
                  {
                    "source": "Dict",
                    "full": "typing.Dict"
                  },
                  "[",
                  [
                    {
                      "source": "str",
                      "full": "str"
                    },
                    ", ",
                    {
                      "source": "str",
                      "full": "str"
                    }
                  ],
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "schema",
                "lineno": 567,
                "endlineno": 578,
                "docstring": {
                  "value": "SQL schema for this database.",
                  "lineno": 569,
                  "endlineno": 569
                },
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 567,
                    "endlineno": 567
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": {
                  "source": "str",
                  "full": "str"
                }
              },
              {
                "kind": "function",
                "name": "supports_strict",
                "lineno": 580,
                "endlineno": 592,
                "docstring": {
                  "value": "Does this database support STRICT mode?",
                  "lineno": 582,
                  "endlineno": 582
                },
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 580,
                    "endlineno": 580
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": {
                  "source": "bool",
                  "full": "bool"
                }
              },
              {
                "kind": "function",
                "name": "sqlite_version",
                "lineno": 594,
                "endlineno": 598,
                "docstring": {
                  "value": "Version of SQLite, as a tuple of integers for example ``(3, 36, 0)``.",
                  "lineno": 596,
                  "endlineno": 596
                },
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 594,
                    "endlineno": 594
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": [
                  {
                    "source": "Tuple",
                    "full": "typing.Tuple"
                  },
                  "[",
                  [
                    {
                      "source": "int",
                      "full": "int"
                    },
                    ", ",
                    "..."
                  ],
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "journal_mode",
                "lineno": 600,
                "endlineno": 607,
                "docstring": {
                  "value": "Current ``journal_mode`` of this database.\n\nhttps://www.sqlite.org/pragma.html#pragma_journal_mode",
                  "lineno": 602,
                  "endlineno": 606
                },
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 600,
                    "endlineno": 600
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": {
                  "source": "str",
                  "full": "str"
                }
              },
              {
                "kind": "function",
                "name": "enable_wal",
                "lineno": 609,
                "endlineno": 614,
                "docstring": {
                  "value": "Sets ``journal_mode`` to ``'wal'`` to enable Write-Ahead Log mode.",
                  "lineno": 610,
                  "endlineno": 612
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "disable_wal",
                "lineno": 616,
                "endlineno": 619,
                "docstring": {
                  "value": "Sets ``journal_mode`` back to ``'delete'`` to disable Write-Ahead Log mode.",
                  "lineno": 617,
                  "endlineno": 617
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "_ensure_counts_table",
                "lineno": 621,
                "endlineno": 623,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "enable_counts",
                "lineno": 625,
                "endlineno": 637,
                "docstring": {
                  "value": "Enable trigger-based count caching for every table in the database, see\n:ref:`python_api_cached_table_counts`.",
                  "lineno": 626,
                  "endlineno": 629
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "cached_counts",
                "lineno": 639,
                "endlineno": 652,
                "docstring": {
                  "value": "Return ``{table_name: count}`` dictionary of cached counts for specified tables, or\nall tables if ``tables`` not provided.\n\n:param tables: Subset list of tables to return counts for.",
                  "lineno": 640,
                  "endlineno": 645
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "tables",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Iterable",
                          "full": "typing.Iterable"
                        },
                        "[",
                        {
                          "source": "str",
                          "full": "str"
                        },
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  }
                ],
                "returns": [
                  {
                    "source": "Dict",
                    "full": "typing.Dict"
                  },
                  "[",
                  [
                    {
                      "source": "str",
                      "full": "str"
                    },
                    ", ",
                    {
                      "source": "int",
                      "full": "int"
                    }
                  ],
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "reset_counts",
                "lineno": 654,
                "endlineno": 664,
                "docstring": {
                  "value": "Re-calculate cached counts for tables.",
                  "lineno": 655,
                  "endlineno": 655
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "execute_returning_dicts",
                "lineno": 666,
                "endlineno": 669,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "sql",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "params",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          {
                            "source": "Iterable",
                            "full": "typing.Iterable"
                          },
                          ", ",
                          {
                            "source": "dict",
                            "full": "dict"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  }
                ],
                "returns": [
                  {
                    "source": "List",
                    "full": "typing.List"
                  },
                  "[",
                  {
                    "source": "dict",
                    "full": "dict"
                  },
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "resolve_foreign_keys",
                "lineno": 671,
                "endlineno": 715,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "name",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "foreign_keys",
                    "annotation": {
                      "source": "ForeignKeysType",
                      "full": "sqlite_utils.db.ForeignKeysType"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": [
                  {
                    "source": "List",
                    "full": "typing.List"
                  },
                  "[",
                  {
                    "source": "ForeignKey",
                    "full": "sqlite_utils.db.ForeignKey"
                  },
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "create_table_sql",
                "lineno": 717,
                "endlineno": 845,
                "docstring": {
                  "value": "Returns the SQL ``CREATE TABLE`` statement for creating the specified table.\n\n:param name: Name of table\n:param columns: Dictionary mapping column names to their types, for example ``{\"name\": str, \"age\": int}``\n:param pk: String name of column to use as a primary key, or a tuple of strings for a compound primary key covering multiple columns\n:param foreign_keys: List of foreign key definitions for this table\n:param column_order: List specifying which columns should come first\n:param not_null: List of columns that should be created as ``NOT NULL``\n:param defaults: Dictionary specifying default values for columns\n:param hash_id: Name of column to be used as a primary key containing a hash of the other columns\n:param hash_id_columns: List of columns to be used when calculating the hash ID for a row\n:param extracts: List or dictionary of columns to be extracted during inserts, see :ref:`python_api_extracts`\n:param if_not_exists: Use ``CREATE TABLE IF NOT EXISTS``",
                  "lineno": 731,
                  "endlineno": 745
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "name",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "columns",
                    "annotation": [
                      {
                        "source": "Dict",
                        "full": "typing.Dict"
                      },
                      "[",
                      [
                        {
                          "source": "str",
                          "full": "str"
                        },
                        ", ",
                        {
                          "source": "Any",
                          "full": "typing.Any"
                        }
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "pk",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "Any",
                        "full": "typing.Any"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "foreign_keys",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "ForeignKeysType",
                        "full": "sqlite_utils.db.ForeignKeysType"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "column_order",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "List",
                          "full": "typing.List"
                        },
                        "[",
                        {
                          "source": "str",
                          "full": "str"
                        },
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "not_null",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Iterable",
                          "full": "typing.Iterable"
                        },
                        "[",
                        {
                          "source": "str",
                          "full": "str"
                        },
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "defaults",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Dict",
                          "full": "typing.Dict"
                        },
                        "[",
                        [
                          {
                            "source": "str",
                            "full": "str"
                          },
                          ", ",
                          {
                            "source": "Any",
                            "full": "typing.Any"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "hash_id",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "str",
                        "full": "str"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "hash_id_columns",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Iterable",
                          "full": "typing.Iterable"
                        },
                        "[",
                        {
                          "source": "str",
                          "full": "str"
                        },
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "extracts",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          [
                            {
                              "source": "Dict",
                              "full": "typing.Dict"
                            },
                            "[",
                            [
                              {
                                "source": "str",
                                "full": "str"
                              },
                              ", ",
                              {
                                "source": "str",
                                "full": "str"
                              }
                            ],
                            "]"
                          ],
                          ", ",
                          [
                            {
                              "source": "List",
                              "full": "typing.List"
                            },
                            "[",
                            {
                              "source": "str",
                              "full": "str"
                            },
                            "]"
                          ]
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "if_not_exists",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  }
                ],
                "returns": {
                  "source": "str",
                  "full": "str"
                }
              },
              {
                "kind": "function",
                "name": "create_table",
                "lineno": 847,
                "endlineno": 902,
                "docstring": {
                  "value": "Create a table with the specified name and the specified ``{column_name: type}`` columns.\n\nSee :ref:`python_api_explicit_create`.\n\n:param name: Name of table\n:param columns: Dictionary mapping column names to their types, for example ``{\"name\": str, \"age\": int}``\n:param pk: String name of column to use as a primary key, or a tuple of strings for a compound primary key covering multiple columns\n:param foreign_keys: List of foreign key definitions for this table\n:param column_order: List specifying which columns should come first\n:param not_null: List of columns that should be created as ``NOT NULL``\n:param defaults: Dictionary specifying default values for columns\n:param hash_id: Name of column to be used as a primary key containing a hash of the other columns\n:param hash_id_columns: List of columns to be used when calculating the hash ID for a row\n:param extracts: List or dictionary of columns to be extracted during inserts, see :ref:`python_api_extracts`\n:param if_not_exists: Use ``CREATE TABLE IF NOT EXISTS``",
                  "lineno": 861,
                  "endlineno": 877
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "name",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "columns",
                    "annotation": [
                      {
                        "source": "Dict",
                        "full": "typing.Dict"
                      },
                      "[",
                      [
                        {
                          "source": "str",
                          "full": "str"
                        },
                        ", ",
                        {
                          "source": "Any",
                          "full": "typing.Any"
                        }
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "pk",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "Any",
                        "full": "typing.Any"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "foreign_keys",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "ForeignKeysType",
                        "full": "sqlite_utils.db.ForeignKeysType"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "column_order",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "List",
                          "full": "typing.List"
                        },
                        "[",
                        {
                          "source": "str",
                          "full": "str"
                        },
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "not_null",
                    "annotation": [
                      {
                        "source": "Iterable",
                        "full": "typing.Iterable"
                      },
                      "[",
                      {
                        "source": "str",
                        "full": "str"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "defaults",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Dict",
                          "full": "typing.Dict"
                        },
                        "[",
                        [
                          {
                            "source": "str",
                            "full": "str"
                          },
                          ", ",
                          {
                            "source": "Any",
                            "full": "typing.Any"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "hash_id",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "str",
                        "full": "str"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "hash_id_columns",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Iterable",
                          "full": "typing.Iterable"
                        },
                        "[",
                        {
                          "source": "str",
                          "full": "str"
                        },
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "extracts",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          [
                            {
                              "source": "Dict",
                              "full": "typing.Dict"
                            },
                            "[",
                            [
                              {
                                "source": "str",
                                "full": "str"
                              },
                              ", ",
                              {
                                "source": "str",
                                "full": "str"
                              }
                            ],
                            "]"
                          ],
                          ", ",
                          [
                            {
                              "source": "List",
                              "full": "typing.List"
                            },
                            "[",
                            {
                              "source": "str",
                              "full": "str"
                            },
                            "]"
                          ]
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "if_not_exists",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  }
                ],
                "returns": "'Table'"
              },
              {
                "kind": "function",
                "name": "create_view",
                "lineno": 904,
                "endlineno": 930,
                "docstring": {
                  "value": "Create a new SQL view with the specified name - ``sql`` should start with ``SELECT ...``.\n\n:param name: Name of the view\n:param sql: SQL ``SELECT`` query to use for this view.\n:param ignore: Set to ``True`` to do nothing if a view with this name already exists\n:param replace: Set to ``True`` to replace the view if one with this name already exists",
                  "lineno": 907,
                  "endlineno": 914
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "name",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "sql",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "ignore",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  },
                  {
                    "name": "replace",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "m2m_table_candidates",
                "lineno": 932,
                "endlineno": 948,
                "docstring": {
                  "value": "Given two table names returns the name of tables that could define a\nmany-to-many relationship between those two tables, based on having\nforeign keys to both of the provided tables.\n\n:param table: Table name\n:param other_table: Other table name",
                  "lineno": 933,
                  "endlineno": 940
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "table",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "other_table",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": [
                  {
                    "source": "List",
                    "full": "typing.List"
                  },
                  "[",
                  {
                    "source": "str",
                    "full": "str"
                  },
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "add_foreign_keys",
                "lineno": 950,
                "endlineno": 1021,
                "docstring": {
                  "value": "See :ref:`python_api_add_foreign_keys`.\n\n:param foreign_keys: A list of  ``(table, column, other_table, other_column)``\n  tuples",
                  "lineno": 951,
                  "endlineno": 956
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "foreign_keys",
                    "annotation": [
                      {
                        "source": "Iterable",
                        "full": "typing.Iterable"
                      },
                      "[",
                      [
                        {
                          "source": "Tuple",
                          "full": "typing.Tuple"
                        },
                        "[",
                        [
                          {
                            "source": "str",
                            "full": "str"
                          },
                          ", ",
                          {
                            "source": "str",
                            "full": "str"
                          },
                          ", ",
                          {
                            "source": "str",
                            "full": "str"
                          },
                          ", ",
                          {
                            "source": "str",
                            "full": "str"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "index_foreign_keys",
                "lineno": 1023,
                "endlineno": 1032,
                "docstring": {
                  "value": "Create indexes for every foreign key column on every table in the database.",
                  "lineno": 1024,
                  "endlineno": 1024
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "vacuum",
                "lineno": 1034,
                "endlineno": 1036,
                "docstring": {
                  "value": "Run a SQLite ``VACUUM`` against the database.",
                  "lineno": 1035,
                  "endlineno": 1035
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "analyze",
                "lineno": 1038,
                "endlineno": 1047,
                "docstring": {
                  "value": "Run ``ANALYZE`` against the entire database or a named table or index.\n\n:param name: Run ``ANALYZE`` against this specific named table or index",
                  "lineno": 1039,
                  "endlineno": 1043
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "name",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "None"
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "init_spatialite",
                "lineno": 1049,
                "endlineno": 1088,
                "docstring": {
                  "value": "The ``init_spatialite`` method will load and initialize the SpatiaLite extension.\nThe ``path`` argument should be an absolute path to the compiled extension, which\ncan be found using ``find_spatialite``.\n\nReturns ``True`` if SpatiaLite was successfully initialized.\n\n.. code-block:: python\n\n    from sqlite_utils.db import Database\n    from sqlite_utils.utils import find_spatialite\n\n    db = Database(\"mydb.db\")\n    db.init_spatialite(find_spatialite())\n\nIf you've installed SpatiaLite somewhere unexpected (for testing an alternate version, for example)\nyou can pass in an absolute path:\n\n.. code-block:: python\n\n    from sqlite_utils.db import Database\n    from sqlite_utils.utils import find_spatialite\n\n    db = Database(\"mydb.db\")\n    db.init_spatialite(\"./local/mod_spatialite.dylib\")\n\n:param path: Path to SpatiaLite module on disk",
                  "lineno": 1050,
                  "endlineno": 1077
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "path",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": "None"
                  }
                ],
                "returns": {
                  "source": "bool",
                  "full": "bool"
                }
              }
            ],
            "bases": [],
            "decorators": []
          },
          {
            "kind": "class",
            "name": "Queryable",
            "lineno": 1091,
            "endlineno": 1225,
            "labels": [],
            "members": [
              {
                "kind": "function",
                "name": "exists",
                "lineno": 1092,
                "endlineno": 1094,
                "docstring": {
                  "value": "Does this table or view exist yet?",
                  "lineno": 1093,
                  "endlineno": 1093
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": {
                  "source": "bool",
                  "full": "bool"
                }
              },
              {
                "kind": "function",
                "name": "__init__",
                "lineno": 1096,
                "endlineno": 1098,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "db",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "name",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "attribute",
                "name": "db",
                "lineno": 1097,
                "endlineno": 1097,
                "labels": [
                  "instance-attribute"
                ],
                "members": [],
                "value": "db"
              },
              {
                "kind": "attribute",
                "name": "name",
                "lineno": 1098,
                "endlineno": 1098,
                "labels": [
                  "instance-attribute"
                ],
                "members": [],
                "value": "name"
              },
              {
                "kind": "function",
                "name": "count_where",
                "lineno": 1100,
                "endlineno": 1115,
                "docstring": {
                  "value": "Executes ``SELECT count(*) FROM table WHERE ...`` and returns a count.\n\n:param where: SQL where fragment to use, for example ``id > ?``\n:param where_args: Parameters to use with that fragment - an iterable for ``id > ?``\n  parameters, or a dictionary for ``id > :id``",
                  "lineno": 1105,
                  "endlineno": 1111
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "where",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "where_args",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          {
                            "source": "Iterable",
                            "full": "typing.Iterable"
                          },
                          ", ",
                          {
                            "source": "dict",
                            "full": "dict"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  }
                ],
                "returns": {
                  "source": "int",
                  "full": "int"
                }
              },
              {
                "kind": "function",
                "name": "execute_count",
                "lineno": 1117,
                "endlineno": 1119,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "count",
                "lineno": 1121,
                "endlineno": 1124,
                "docstring": {
                  "value": "A count of the rows in this table or view.",
                  "lineno": 1123,
                  "endlineno": 1123
                },
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 1121,
                    "endlineno": 1121
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": {
                  "source": "int",
                  "full": "int"
                }
              },
              {
                "kind": "function",
                "name": "rows",
                "lineno": 1126,
                "endlineno": 1129,
                "docstring": {
                  "value": "Iterate over every dictionaries for each row in this table or view.",
                  "lineno": 1128,
                  "endlineno": 1128
                },
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 1126,
                    "endlineno": 1126
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": [
                  {
                    "source": "Generator",
                    "full": "typing.Generator"
                  },
                  "[",
                  [
                    {
                      "source": "dict",
                      "full": "dict"
                    },
                    ", ",
                    "None",
                    ", ",
                    "None"
                  ],
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "rows_where",
                "lineno": 1131,
                "endlineno": 1167,
                "docstring": {
                  "value": "Iterate over every row in this table or view that matches the specified where clause.\n\nReturns each row as a dictionary. See :ref:`python_api_rows` for more details.\n\n:param where: SQL where fragment to use, for example ``id > ?``\n:param where_args: Parameters to use with that fragment - an iterable for ``id > ?``\n  parameters, or a dictionary for ``id > :id``\n:param order_by: Column or fragment of SQL to order by\n:param select: Comma-separated list of columns to select - defaults to ``*``\n:param limit: Integer number of rows to limit to\n:param offset: Integer for SQL offset",
                  "lineno": 1140,
                  "endlineno": 1152
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "where",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "where_args",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          {
                            "source": "Iterable",
                            "full": "typing.Iterable"
                          },
                          ", ",
                          {
                            "source": "dict",
                            "full": "dict"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "order_by",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "select",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": "'*'"
                  },
                  {
                    "name": "limit",
                    "annotation": {
                      "source": "int",
                      "full": "int"
                    },
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "offset",
                    "annotation": {
                      "source": "int",
                      "full": "int"
                    },
                    "kind": "positional or keyword",
                    "default": "None"
                  }
                ],
                "returns": [
                  {
                    "source": "Generator",
                    "full": "typing.Generator"
                  },
                  "[",
                  [
                    {
                      "source": "dict",
                      "full": "dict"
                    },
                    ", ",
                    "None",
                    ", ",
                    "None"
                  ],
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "pks_and_rows_where",
                "lineno": 1169,
                "endlineno": 1205,
                "docstring": {
                  "value": "Like ``.rows_where()`` but returns ``(pk, row)`` pairs - ``pk`` can be a single value or tuple.\n\n:param where: SQL where fragment to use, for example ``id > ?``\n:param where_args: Parameters to use with that fragment - an iterable for ``id > ?``\n  parameters, or a dictionary for ``id > :id``\n:param order_by: Column or fragment of SQL to order by\n:param select: Comma-separated list of columns to select - defaults to ``*``\n:param limit: Integer number of rows to limit to\n:param offset: Integer for SQL offset",
                  "lineno": 1177,
                  "endlineno": 1187
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "where",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "where_args",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          {
                            "source": "Iterable",
                            "full": "typing.Iterable"
                          },
                          ", ",
                          {
                            "source": "dict",
                            "full": "dict"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "order_by",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "limit",
                    "annotation": {
                      "source": "int",
                      "full": "int"
                    },
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "offset",
                    "annotation": {
                      "source": "int",
                      "full": "int"
                    },
                    "kind": "positional or keyword",
                    "default": "None"
                  }
                ],
                "returns": [
                  {
                    "source": "Generator",
                    "full": "typing.Generator"
                  },
                  "[",
                  [
                    [
                      {
                        "source": "Tuple",
                        "full": "typing.Tuple"
                      },
                      "[",
                      [
                        {
                          "source": "Any",
                          "full": "typing.Any"
                        },
                        ", ",
                        {
                          "source": "Dict",
                          "full": "typing.Dict"
                        }
                      ],
                      "]"
                    ],
                    ", ",
                    "None",
                    ", ",
                    "None"
                  ],
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "columns",
                "lineno": 1207,
                "endlineno": 1213,
                "docstring": {
                  "value": "List of :ref:`Columns <reference_db_other_column>` representing the columns in this table or view.",
                  "lineno": 1209,
                  "endlineno": 1209
                },
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 1207,
                    "endlineno": 1207
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": [
                  {
                    "source": "List",
                    "full": "typing.List"
                  },
                  "[",
                  "'Column'",
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "columns_dict",
                "lineno": 1215,
                "endlineno": 1218,
                "docstring": {
                  "value": "``{column_name: python-type}`` dictionary representing columns in this table or view.",
                  "lineno": 1217,
                  "endlineno": 1217
                },
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 1215,
                    "endlineno": 1215
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": [
                  {
                    "source": "Dict",
                    "full": "typing.Dict"
                  },
                  "[",
                  [
                    {
                      "source": "str",
                      "full": "str"
                    },
                    ", ",
                    {
                      "source": "Any",
                      "full": "typing.Any"
                    }
                  ],
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "schema",
                "lineno": 1220,
                "endlineno": 1225,
                "docstring": {
                  "value": "SQL schema for this table or view.",
                  "lineno": 1222,
                  "endlineno": 1222
                },
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 1220,
                    "endlineno": 1220
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": {
                  "source": "str",
                  "full": "str"
                }
              }
            ],
            "bases": [],
            "decorators": []
          },
          {
            "kind": "class",
            "name": "Table",
            "lineno": 1228,
            "endlineno": 3383,
            "docstring": {
              "value": "Tables should usually be initialized using the ``db.table(table_name)`` or ``db[table_name]`` methods.",
              "lineno": 1229,
              "endlineno": 1229
            },
            "labels": [],
            "members": [
              {
                "kind": "attribute",
                "name": "last_rowid",
                "lineno": 1231,
                "endlineno": 1231,
                "labels": [
                  "class-attribute"
                ],
                "members": [],
                "value": "None",
                "annotation": [
                  {
                    "source": "Optional",
                    "full": "typing.Optional"
                  },
                  "[",
                  {
                    "source": "int",
                    "full": "int"
                  },
                  "]"
                ]
              },
              {
                "kind": "attribute",
                "name": "last_pk",
                "lineno": 1233,
                "endlineno": 1233,
                "labels": [
                  "class-attribute"
                ],
                "members": [],
                "value": "None",
                "annotation": [
                  {
                    "source": "Optional",
                    "full": "typing.Optional"
                  },
                  "[",
                  {
                    "source": "Any",
                    "full": "typing.Any"
                  },
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "__init__",
                "lineno": 1235,
                "endlineno": 1270,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "db",
                    "annotation": {
                      "source": "Database",
                      "full": "sqlite_utils.db.Database"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "name",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "pk",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "Any",
                        "full": "typing.Any"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "foreign_keys",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "ForeignKeysType",
                        "full": "sqlite_utils.db.ForeignKeysType"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "column_order",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "List",
                          "full": "typing.List"
                        },
                        "[",
                        {
                          "source": "str",
                          "full": "str"
                        },
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "not_null",
                    "annotation": [
                      {
                        "source": "Iterable",
                        "full": "typing.Iterable"
                      },
                      "[",
                      {
                        "source": "str",
                        "full": "str"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "defaults",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Dict",
                          "full": "typing.Dict"
                        },
                        "[",
                        [
                          {
                            "source": "str",
                            "full": "str"
                          },
                          ", ",
                          {
                            "source": "Any",
                            "full": "typing.Any"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "batch_size",
                    "annotation": {
                      "source": "int",
                      "full": "int"
                    },
                    "kind": "positional or keyword",
                    "default": "100"
                  },
                  {
                    "name": "hash_id",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "str",
                        "full": "str"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "hash_id_columns",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Iterable",
                          "full": "typing.Iterable"
                        },
                        "[",
                        {
                          "source": "str",
                          "full": "str"
                        },
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "alter",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  },
                  {
                    "name": "ignore",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  },
                  {
                    "name": "replace",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  },
                  {
                    "name": "extracts",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          [
                            {
                              "source": "Dict",
                              "full": "typing.Dict"
                            },
                            "[",
                            [
                              {
                                "source": "str",
                                "full": "str"
                              },
                              ", ",
                              {
                                "source": "str",
                                "full": "str"
                              }
                            ],
                            "]"
                          ],
                          ", ",
                          [
                            {
                              "source": "List",
                              "full": "typing.List"
                            },
                            "[",
                            {
                              "source": "str",
                              "full": "str"
                            },
                            "]"
                          ]
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "conversions",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "dict",
                        "full": "dict"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "columns",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Dict",
                          "full": "typing.Dict"
                        },
                        "[",
                        [
                          {
                            "source": "str",
                            "full": "str"
                          },
                          ", ",
                          {
                            "source": "Any",
                            "full": "typing.Any"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  }
                ],
                "returns": null
              },
              {
                "kind": "attribute",
                "name": "_defaults",
                "lineno": 1255,
                "endlineno": 1270,
                "labels": [
                  "instance-attribute"
                ],
                "members": [],
                "value": "dict(pk=pk, foreign_keys=foreign_keys, column_order=column_order, not_null=not_null, defaults=defaults, batch_size=batch_size, hash_id=hash_id, hash_id_columns=hash_id_columns, alter=alter, ignore=ignore, replace=replace, extracts=extracts, conversions=conversions or {}, columns=columns)"
              },
              {
                "kind": "function",
                "name": "__repr__",
                "lineno": 1272,
                "endlineno": 1278,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": {
                  "source": "str",
                  "full": "str"
                }
              },
              {
                "kind": "function",
                "name": "count",
                "lineno": 1280,
                "endlineno": 1287,
                "docstring": {
                  "value": "Count of the rows in this table - optionally from the table count cache, if configured.",
                  "lineno": 1282,
                  "endlineno": 1282
                },
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 1280,
                    "endlineno": 1280
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": {
                  "source": "int",
                  "full": "int"
                }
              },
              {
                "kind": "function",
                "name": "exists",
                "lineno": 1289,
                "endlineno": 1290,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": {
                  "source": "bool",
                  "full": "bool"
                }
              },
              {
                "kind": "function",
                "name": "pks",
                "lineno": 1292,
                "endlineno": 1298,
                "docstring": {
                  "value": "Primary key columns for this table.",
                  "lineno": 1294,
                  "endlineno": 1294
                },
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 1292,
                    "endlineno": 1292
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": [
                  {
                    "source": "List",
                    "full": "typing.List"
                  },
                  "[",
                  {
                    "source": "str",
                    "full": "str"
                  },
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "use_rowid",
                "lineno": 1300,
                "endlineno": 1303,
                "docstring": {
                  "value": "Does this table use ``rowid`` for its primary key (no other primary keys are specified)?",
                  "lineno": 1302,
                  "endlineno": 1302
                },
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 1300,
                    "endlineno": 1300
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": {
                  "source": "bool",
                  "full": "bool"
                }
              },
              {
                "kind": "function",
                "name": "get",
                "lineno": 1305,
                "endlineno": 1331,
                "docstring": {
                  "value": "Return row (as dictionary) for the specified primary key.\n\nRaises ``sqlite_utils.db.NotFoundError`` if a matching row cannot be found.\n\n:param pk_values: A single value, or a tuple of values for tables that have a compound primary key",
                  "lineno": 1306,
                  "endlineno": 1312
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "pk_values",
                    "annotation": [
                      {
                        "source": "Union",
                        "full": "typing.Union"
                      },
                      "[",
                      [
                        {
                          "source": "list",
                          "full": "list"
                        },
                        ", ",
                        {
                          "source": "tuple",
                          "full": "tuple"
                        },
                        ", ",
                        {
                          "source": "str",
                          "full": "str"
                        },
                        ", ",
                        {
                          "source": "int",
                          "full": "int"
                        }
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": {
                  "source": "dict",
                  "full": "dict"
                }
              },
              {
                "kind": "function",
                "name": "foreign_keys",
                "lineno": 1333,
                "endlineno": 1350,
                "docstring": {
                  "value": "List of foreign keys defined on this table.",
                  "lineno": 1335,
                  "endlineno": 1335
                },
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 1333,
                    "endlineno": 1333
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": [
                  {
                    "source": "List",
                    "full": "typing.List"
                  },
                  "[",
                  "'ForeignKey'",
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "virtual_table_using",
                "lineno": 1352,
                "endlineno": 1358,
                "docstring": {
                  "value": "Type of virtual table, or ``None`` if this is not a virtual table.",
                  "lineno": 1354,
                  "endlineno": 1354
                },
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 1352,
                    "endlineno": 1352
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": [
                  {
                    "source": "Optional",
                    "full": "typing.Optional"
                  },
                  "[",
                  {
                    "source": "str",
                    "full": "str"
                  },
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "indexes",
                "lineno": 1360,
                "endlineno": 1382,
                "docstring": {
                  "value": "List of indexes defined on this table.",
                  "lineno": 1362,
                  "endlineno": 1362
                },
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 1360,
                    "endlineno": 1360
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": [
                  {
                    "source": "List",
                    "full": "typing.List"
                  },
                  "[",
                  {
                    "source": "Index",
                    "full": "sqlite_utils.db.Index"
                  },
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "xindexes",
                "lineno": 1384,
                "endlineno": 1401,
                "docstring": {
                  "value": "List of indexes defined on this table using the more detailed ``XIndex`` format.",
                  "lineno": 1386,
                  "endlineno": 1386
                },
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 1384,
                    "endlineno": 1384
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": [
                  {
                    "source": "List",
                    "full": "typing.List"
                  },
                  "[",
                  {
                    "source": "XIndex",
                    "full": "sqlite_utils.db.XIndex"
                  },
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "triggers",
                "lineno": 1403,
                "endlineno": 1413,
                "docstring": {
                  "value": "List of triggers defined on this table.",
                  "lineno": 1405,
                  "endlineno": 1405
                },
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 1403,
                    "endlineno": 1403
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": [
                  {
                    "source": "List",
                    "full": "typing.List"
                  },
                  "[",
                  {
                    "source": "Trigger",
                    "full": "sqlite_utils.db.Trigger"
                  },
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "triggers_dict",
                "lineno": 1415,
                "endlineno": 1418,
                "docstring": {
                  "value": "``{trigger_name: sql}`` dictionary of triggers defined on this table.",
                  "lineno": 1417,
                  "endlineno": 1417
                },
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 1415,
                    "endlineno": 1415
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": [
                  {
                    "source": "Dict",
                    "full": "typing.Dict"
                  },
                  "[",
                  [
                    {
                      "source": "str",
                      "full": "str"
                    },
                    ", ",
                    {
                      "source": "str",
                      "full": "str"
                    }
                  ],
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "strict",
                "lineno": 1420,
                "endlineno": 1425,
                "docstring": {
                  "value": "Is this a STRICT table?",
                  "lineno": 1422,
                  "endlineno": 1422
                },
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 1420,
                    "endlineno": 1420
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": {
                  "source": "bool",
                  "full": "bool"
                }
              },
              {
                "kind": "function",
                "name": "create",
                "lineno": 1427,
                "endlineno": 1471,
                "docstring": {
                  "value": "Create a table with the specified columns.\n\nSee :ref:`python_api_explicit_create` for full details.\n\n:param columns: Dictionary mapping column names to their types, for example ``{\"name\": str, \"age\": int}``\n:param pk: String name of column to use as a primary key, or a tuple of strings for a compound primary key covering multiple columns\n:param foreign_keys: List of foreign key definitions for this table\n:param column_order: List specifying which columns should come first\n:param not_null: List of columns that should be created as ``NOT NULL``\n:param defaults: Dictionary specifying default values for columns\n:param hash_id: Name of column to be used as a primary key containing a hash of the other columns\n:param hash_id_columns: List of columns to be used when calculating the hash ID for a row\n:param extracts: List or dictionary of columns to be extracted during inserts, see :ref:`python_api_extracts`\n:param if_not_exists: Use ``CREATE TABLE IF NOT EXISTS``",
                  "lineno": 1440,
                  "endlineno": 1455
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "columns",
                    "annotation": [
                      {
                        "source": "Dict",
                        "full": "typing.Dict"
                      },
                      "[",
                      [
                        {
                          "source": "str",
                          "full": "str"
                        },
                        ", ",
                        {
                          "source": "Any",
                          "full": "typing.Any"
                        }
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "pk",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "Any",
                        "full": "typing.Any"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "foreign_keys",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "ForeignKeysType",
                        "full": "sqlite_utils.db.ForeignKeysType"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "column_order",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "List",
                          "full": "typing.List"
                        },
                        "[",
                        {
                          "source": "str",
                          "full": "str"
                        },
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "not_null",
                    "annotation": [
                      {
                        "source": "Iterable",
                        "full": "typing.Iterable"
                      },
                      "[",
                      {
                        "source": "str",
                        "full": "str"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "defaults",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Dict",
                          "full": "typing.Dict"
                        },
                        "[",
                        [
                          {
                            "source": "str",
                            "full": "str"
                          },
                          ", ",
                          {
                            "source": "Any",
                            "full": "typing.Any"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "hash_id",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "str",
                        "full": "str"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "hash_id_columns",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Iterable",
                          "full": "typing.Iterable"
                        },
                        "[",
                        {
                          "source": "str",
                          "full": "str"
                        },
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "extracts",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          [
                            {
                              "source": "Dict",
                              "full": "typing.Dict"
                            },
                            "[",
                            [
                              {
                                "source": "str",
                                "full": "str"
                              },
                              ", ",
                              {
                                "source": "str",
                                "full": "str"
                              }
                            ],
                            "]"
                          ],
                          ", ",
                          [
                            {
                              "source": "List",
                              "full": "typing.List"
                            },
                            "[",
                            {
                              "source": "str",
                              "full": "str"
                            },
                            "]"
                          ]
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "if_not_exists",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  }
                ],
                "returns": "'Table'"
              },
              {
                "kind": "function",
                "name": "transform",
                "lineno": 1473,
                "endlineno": 1527,
                "docstring": {
                  "value": "Apply an advanced alter table, including operations that are not supported by\n``ALTER TABLE`` in SQLite itself.\n\nSee :ref:`python_api_transform` for full details.\n\n:param types: Columns that should have their type changed, for example ``{\"weight\": float}``\n:param rename: Columns to rename, for example ``{\"headline\": \"title\"}``\n:param drop: Columns to drop\n:param pk: New primary key for the table\n:param not_null: Columns to set as ``NOT NULL``\n:param defaults: Default values for columns\n:param drop_foreign_keys: Names of columns that should have their foreign key constraints removed\n:param column_order: List of strings specifying a full or partial column order\n  to use when creating the table.",
                  "lineno": 1485,
                  "endlineno": 1500
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "types",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "dict",
                        "full": "dict"
                      },
                      "]"
                    ],
                    "kind": "keyword-only",
                    "default": "None"
                  },
                  {
                    "name": "rename",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "dict",
                        "full": "dict"
                      },
                      "]"
                    ],
                    "kind": "keyword-only",
                    "default": "None"
                  },
                  {
                    "name": "drop",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "Iterable",
                        "full": "typing.Iterable"
                      },
                      "]"
                    ],
                    "kind": "keyword-only",
                    "default": "None"
                  },
                  {
                    "name": "pk",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "Any",
                        "full": "typing.Any"
                      },
                      "]"
                    ],
                    "kind": "keyword-only",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "not_null",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Set",
                          "full": "typing.Set"
                        },
                        "[",
                        {
                          "source": "str",
                          "full": "str"
                        },
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "keyword-only",
                    "default": "None"
                  },
                  {
                    "name": "defaults",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Dict",
                          "full": "typing.Dict"
                        },
                        "[",
                        [
                          {
                            "source": "str",
                            "full": "str"
                          },
                          ", ",
                          {
                            "source": "Any",
                            "full": "typing.Any"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "keyword-only",
                    "default": "None"
                  },
                  {
                    "name": "drop_foreign_keys",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "Iterable",
                        "full": "typing.Iterable"
                      },
                      "]"
                    ],
                    "kind": "keyword-only",
                    "default": "None"
                  },
                  {
                    "name": "column_order",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "List",
                          "full": "typing.List"
                        },
                        "[",
                        {
                          "source": "str",
                          "full": "str"
                        },
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "keyword-only",
                    "default": "None"
                  }
                ],
                "returns": "'Table'"
              },
              {
                "kind": "function",
                "name": "transform_sql",
                "lineno": 1529,
                "endlineno": 1658,
                "docstring": {
                  "value": "Return a list of SQL statements that should be executed in order to apply this transformation.\n\n:param types: Columns that should have their type changed, for example ``{\"weight\": float}``\n:param rename: Columns to rename, for example ``{\"headline\": \"title\"}``\n:param drop: Columns to drop\n:param pk: New primary key for the table\n:param not_null: Columns to set as ``NOT NULL``\n:param defaults: Default values for columns\n:param drop_foreign_keys: Names of columns that should have their foreign key constraints removed\n:param column_order: List of strings specifying a full or partial column order\n  to use when creating the table.",
                  "lineno": 1542,
                  "endlineno": 1554
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "types",
                    "annotation": null,
                    "kind": "keyword-only",
                    "default": "None"
                  },
                  {
                    "name": "rename",
                    "annotation": null,
                    "kind": "keyword-only",
                    "default": "None"
                  },
                  {
                    "name": "drop",
                    "annotation": null,
                    "kind": "keyword-only",
                    "default": "None"
                  },
                  {
                    "name": "pk",
                    "annotation": null,
                    "kind": "keyword-only",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "not_null",
                    "annotation": null,
                    "kind": "keyword-only",
                    "default": "None"
                  },
                  {
                    "name": "defaults",
                    "annotation": null,
                    "kind": "keyword-only",
                    "default": "None"
                  },
                  {
                    "name": "drop_foreign_keys",
                    "annotation": null,
                    "kind": "keyword-only",
                    "default": "None"
                  },
                  {
                    "name": "column_order",
                    "annotation": null,
                    "kind": "keyword-only",
                    "default": "None"
                  },
                  {
                    "name": "tmp_suffix",
                    "annotation": null,
                    "kind": "keyword-only",
                    "default": "None"
                  }
                ],
                "returns": [
                  {
                    "source": "List",
                    "full": "typing.List"
                  },
                  "[",
                  {
                    "source": "str",
                    "full": "str"
                  },
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "extract",
                "lineno": 1660,
                "endlineno": 1766,
                "docstring": {
                  "value": "Extract specified columns into a separate table.\n\nSee :ref:`python_api_extract` for details.\n\n:param columns: Single column or list of columns that should be extracted\n:param table: Name of table in which the new records should be created\n:param fk_column: Name of the foreign key column to populate in the original table\n:param rename: Dictionary of columns that should be renamed when populating the new table",
                  "lineno": 1667,
                  "endlineno": 1676
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "columns",
                    "annotation": [
                      {
                        "source": "Union",
                        "full": "typing.Union"
                      },
                      "[",
                      [
                        {
                          "source": "str",
                          "full": "str"
                        },
                        ", ",
                        [
                          {
                            "source": "Iterable",
                            "full": "typing.Iterable"
                          },
                          "[",
                          {
                            "source": "str",
                            "full": "str"
                          },
                          "]"
                        ]
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "table",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "str",
                        "full": "str"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "fk_column",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "str",
                        "full": "str"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "rename",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Dict",
                          "full": "typing.Dict"
                        },
                        "[",
                        [
                          {
                            "source": "str",
                            "full": "str"
                          },
                          ", ",
                          {
                            "source": "str",
                            "full": "str"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  }
                ],
                "returns": "'Table'"
              },
              {
                "kind": "function",
                "name": "create_index",
                "lineno": 1768,
                "endlineno": 1845,
                "docstring": {
                  "value": "Create an index on this table.\n\n:param columns: A single columns or list of columns to index. These can be strings or,\n  to create an index using the column in descending order, ``db.DescIndex(column_name)`` objects.\n:param index_name: The name to use for the new index. Defaults to the column names joined on ``_``.\n:param unique: Should the index be marked as unique, forcing unique values?\n:param if_not_exists: Only create the index if one with that name does not already exist.\n:param find_unique_name: If ``index_name`` is not provided and the automatically derived name\n  already exists, keep incrementing a suffix number to find an available name.\n:param analyze: Run ``ANALYZE`` against this index after creating it.\n\nSee :ref:`python_api_create_index`.",
                  "lineno": 1777,
                  "endlineno": 1790
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "columns",
                    "annotation": [
                      {
                        "source": "Iterable",
                        "full": "typing.Iterable"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          {
                            "source": "str",
                            "full": "str"
                          },
                          ", ",
                          {
                            "source": "DescIndex",
                            "full": "sqlite_utils.db.DescIndex"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "index_name",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "str",
                        "full": "str"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "unique",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  },
                  {
                    "name": "if_not_exists",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  },
                  {
                    "name": "find_unique_name",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  },
                  {
                    "name": "analyze",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "add_column",
                "lineno": 1847,
                "endlineno": 1896,
                "docstring": {
                  "value": "Add a column to this table. See :ref:`python_api_add_column`.\n\n:param col_name: Name of the new column\n:param col_type: Column type - a Python type such as ``str`` or a SQLite type string such as ``\"BLOB\"``\n:param fk: Name of a table that this column should be a foreign key reference to\n:param fk_col: Column in the foreign key table that this should reference\n:param not_null_default: Set this column to ``not null`` and give it this default value",
                  "lineno": 1855,
                  "endlineno": 1863
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "col_name",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "col_type",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "Any",
                        "full": "typing.Any"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "fk",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "str",
                        "full": "str"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "fk_col",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "str",
                        "full": "str"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "not_null_default",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "Any",
                        "full": "typing.Any"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "drop",
                "lineno": 1898,
                "endlineno": 1908,
                "docstring": {
                  "value": "Drop this table.\n\n:param ignore: Set to ``True`` to ignore the error if the table does not exist",
                  "lineno": 1899,
                  "endlineno": 1903
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "ignore",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "guess_foreign_table",
                "lineno": 1910,
                "endlineno": 1940,
                "docstring": {
                  "value": "For a given column, suggest another table that might be referenced by this\ncolumn should it be used as a foreign key.\n\nFor example, a column called ``tag_id`` or ``tag`` or ``tags`` might suggest\na ``tag`` table, if one exists.\n\nIf no candidates can be found, raises a ``NoObviousTable`` exception.\n\n:param column: Name of column",
                  "lineno": 1911,
                  "endlineno": 1921
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "column",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": {
                  "source": "str",
                  "full": "str"
                }
              },
              {
                "kind": "function",
                "name": "guess_foreign_column",
                "lineno": 1942,
                "endlineno": 1949,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "other_table",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "add_foreign_key",
                "lineno": 1951,
                "endlineno": 1999,
                "docstring": {
                  "value": "Alter the schema to mark the specified column as a foreign key to another table.\n\n:param column: The column to mark as a foreign key.\n:param other_table: The table it refers to - if omitted, will be guessed based on the column name.\n:param other_column: The column on the other table it - if omitted, will be guessed.\n:param ignore: Set this to ``True`` to ignore an existing foreign key - otherwise a ``AlterError`` will be raised.",
                  "lineno": 1958,
                  "endlineno": 1965
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "column",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "other_table",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "str",
                        "full": "str"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "other_column",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "str",
                        "full": "str"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "ignore",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "enable_counts",
                "lineno": 2001,
                "endlineno": 2048,
                "docstring": {
                  "value": "Set up triggers to update a cache of the count of rows in this table.\n\nSee :ref:`python_api_cached_table_counts` for details.",
                  "lineno": 2002,
                  "endlineno": 2006
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "has_counts_triggers",
                "lineno": 2050,
                "endlineno": 2059,
                "docstring": {
                  "value": "Does this table have triggers setup to update cached counts?",
                  "lineno": 2052,
                  "endlineno": 2052
                },
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 2050,
                    "endlineno": 2050
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": {
                  "source": "bool",
                  "full": "bool"
                }
              },
              {
                "kind": "function",
                "name": "enable_fts",
                "lineno": 2061,
                "endlineno": 2145,
                "docstring": {
                  "value": "Enable SQLite full-text search against the specified columns.\n\nSee :ref:`python_api_fts` for more details.\n\n:param columns: List of column names to include in the search index.\n:param fts_version: FTS version to use - defaults to ``FTS5`` but you may want ``FTS4`` for older SQLite versions.\n:param create_triggers: Should triggers be created to keep the search index up-to-date? Defaults to ``False``.\n:param tokenize: Custom SQLite tokenizer to use, for example ``\"porter\"`` to enable Porter stemming.\n:param replace: Should any existing FTS index for this table be replaced by the new one?",
                  "lineno": 2069,
                  "endlineno": 2079
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "columns",
                    "annotation": [
                      {
                        "source": "Iterable",
                        "full": "typing.Iterable"
                      },
                      "[",
                      {
                        "source": "str",
                        "full": "str"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "fts_version",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": "'FTS5'"
                  },
                  {
                    "name": "create_triggers",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  },
                  {
                    "name": "tokenize",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "str",
                        "full": "str"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "replace",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "populate_fts",
                "lineno": 2147,
                "endlineno": 2167,
                "docstring": {
                  "value": "Update the associated SQLite full-text search index with the latest data from the\ntable for the specified columns.\n\n:param columns: Columns to populate the data for",
                  "lineno": 2148,
                  "endlineno": 2153
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "columns",
                    "annotation": [
                      {
                        "source": "Iterable",
                        "full": "typing.Iterable"
                      },
                      "[",
                      {
                        "source": "str",
                        "full": "str"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": "'Table'"
              },
              {
                "kind": "function",
                "name": "disable_fts",
                "lineno": 2169,
                "endlineno": 2192,
                "docstring": {
                  "value": "Remove any full-text search index and related triggers configured for this table.",
                  "lineno": 2170,
                  "endlineno": 2170
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": "'Table'"
              },
              {
                "kind": "function",
                "name": "rebuild_fts",
                "lineno": 2194,
                "endlineno": 2205,
                "docstring": {
                  "value": "Run the ``rebuild`` operation against the associated full-text search index table.",
                  "lineno": 2195,
                  "endlineno": 2195
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "detect_fts",
                "lineno": 2207,
                "endlineno": 2230,
                "docstring": {
                  "value": "Detect if table has a corresponding FTS virtual table and return it",
                  "lineno": 2208,
                  "endlineno": 2208
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": [
                  {
                    "source": "Optional",
                    "full": "typing.Optional"
                  },
                  "[",
                  {
                    "source": "str",
                    "full": "str"
                  },
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "optimize",
                "lineno": 2232,
                "endlineno": 2243,
                "docstring": {
                  "value": "Run the ``optimize`` operation against the associated full-text search index table.",
                  "lineno": 2233,
                  "endlineno": 2233
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": "'Table'"
              },
              {
                "kind": "function",
                "name": "search_sql",
                "lineno": 2245,
                "endlineno": 2314,
                "docstring": {
                  "value": "\"\nReturn SQL string that can be used to execute searches against this table.\n\n:param columns: Columns to search against\n:param order_by: Column or SQL expression to sort by\n:param limit: SQL limit\n:param offset: SQL offset",
                  "lineno": 2252,
                  "endlineno": 2259
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "columns",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Iterable",
                          "full": "typing.Iterable"
                        },
                        "[",
                        {
                          "source": "str",
                          "full": "str"
                        },
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "order_by",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "str",
                        "full": "str"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "limit",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "int",
                        "full": "int"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "offset",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "int",
                        "full": "int"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  }
                ],
                "returns": {
                  "source": "str",
                  "full": "str"
                }
              },
              {
                "kind": "function",
                "name": "search",
                "lineno": 2316,
                "endlineno": 2349,
                "docstring": {
                  "value": "Execute a search against this table using SQLite full-text search, returning a sequence of\ndictionaries for each row.\n\n:param q: Terms to search for\n:param order_by: Defaults to order by rank, or specify a column here.\n:param columns: List of columns to return, defaults to all columns.\n:param limit: Optional integer limit for returned rows.\n:param offset: Optional integer SQL offset.\n:param quote: Apply quoting to disable any special characters in the search query\n\nSee :ref:`python_api_fts_search`.",
                  "lineno": 2325,
                  "endlineno": 2337
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "q",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "order_by",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "str",
                        "full": "str"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "columns",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Iterable",
                          "full": "typing.Iterable"
                        },
                        "[",
                        {
                          "source": "str",
                          "full": "str"
                        },
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "limit",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "int",
                        "full": "int"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "offset",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "int",
                        "full": "int"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "quote",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  }
                ],
                "returns": [
                  {
                    "source": "Generator",
                    "full": "typing.Generator"
                  },
                  "[",
                  [
                    {
                      "source": "dict",
                      "full": "dict"
                    },
                    ", ",
                    "None",
                    ", ",
                    "None"
                  ],
                  "]"
                ]
              },
              {
                "kind": "function",
                "name": "value_or_default",
                "lineno": 2351,
                "endlineno": 2352,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "key",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "value",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "delete",
                "lineno": 2354,
                "endlineno": 2369,
                "docstring": {
                  "value": "Delete row matching the specified primary key.\n\n:param pk_values: A single value, or a tuple of values for tables that have a compound primary key",
                  "lineno": 2355,
                  "endlineno": 2359
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "pk_values",
                    "annotation": [
                      {
                        "source": "Union",
                        "full": "typing.Union"
                      },
                      "[",
                      [
                        {
                          "source": "list",
                          "full": "list"
                        },
                        ", ",
                        {
                          "source": "tuple",
                          "full": "tuple"
                        },
                        ", ",
                        {
                          "source": "str",
                          "full": "str"
                        },
                        ", ",
                        {
                          "source": "int",
                          "full": "int"
                        },
                        ", ",
                        {
                          "source": "float",
                          "full": "float"
                        }
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": "'Table'"
              },
              {
                "kind": "function",
                "name": "delete_where",
                "lineno": 2371,
                "endlineno": 2395,
                "docstring": {
                  "value": "Delete rows matching the specified where clause, or delete all rows in the table.\n\nSee :ref:`python_api_delete_where`.\n\n:param where: SQL where fragment to use, for example ``id > ?``\n:param where_args: Parameters to use with that fragment - an iterable for ``id > ?``\n  parameters, or a dictionary for ``id > :id``\n:param analyze: Set to ``True`` to run ``ANALYZE`` after the rows have been deleted.",
                  "lineno": 2377,
                  "endlineno": 2386
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "where",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "where_args",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          {
                            "source": "Iterable",
                            "full": "typing.Iterable"
                          },
                          ", ",
                          {
                            "source": "dict",
                            "full": "dict"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "analyze",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  }
                ],
                "returns": "'Table'"
              },
              {
                "kind": "function",
                "name": "update",
                "lineno": 2397,
                "endlineno": 2451,
                "docstring": {
                  "value": "Execute a SQL ``UPDATE`` against the specified row.\n\nSee :ref:`python_api_update`.\n\n:param pk_values: The primary key of an individual record - can be a tuple if the\n  table has a compound primary key.\n:param updates: A dictionary mapping columns to their updated values.\n:param alter: Set to ``True`` to add any missing columns.\n:param conversions: Optional dictionary of SQL functions to apply during the update, for example\n  ``{\"mycolumn\": \"upper(?)\"}``.",
                  "lineno": 2404,
                  "endlineno": 2415
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "pk_values",
                    "annotation": [
                      {
                        "source": "Union",
                        "full": "typing.Union"
                      },
                      "[",
                      [
                        {
                          "source": "list",
                          "full": "list"
                        },
                        ", ",
                        {
                          "source": "tuple",
                          "full": "tuple"
                        },
                        ", ",
                        {
                          "source": "str",
                          "full": "str"
                        },
                        ", ",
                        {
                          "source": "int",
                          "full": "int"
                        },
                        ", ",
                        {
                          "source": "float",
                          "full": "float"
                        }
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "updates",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "dict",
                        "full": "dict"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "alter",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  },
                  {
                    "name": "conversions",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "dict",
                        "full": "dict"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  }
                ],
                "returns": "'Table'"
              },
              {
                "kind": "function",
                "name": "convert",
                "lineno": 2453,
                "endlineno": 2527,
                "docstring": {
                  "value": "Apply conversion function ``fn`` to every value in the specified columns.\n\n:param columns: A single column or list of string column names to convert.\n:param fn: A callable that takes a single argument, ``value``, and returns it converted.\n:param output: Optional string column name to write the results to (defaults to the input column).\n:param output_type: If the output column needs to be created, this is the type that will be used\n  for the new column.\n:param drop: Should the original column be dropped once the conversion is complete?\n:param multi: If ``True`` the return value of ``fn(value)`` will be expected to be a\n  dictionary, and new columns will be created for each key of that dictionary.\n:param where: SQL fragment to use as a ``WHERE`` clause to limit the rows to which the conversion\n  is applied, for example ``age > ?`` or ``age > :age``.\n:param where_args: List of arguments (if using ``?``) or a dictionary (if using ``:age``).\n:param show_progress: Should a progress bar be displayed?\n\nSee :ref:`python_api_convert`.",
                  "lineno": 2465,
                  "endlineno": 2482
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "columns",
                    "annotation": [
                      {
                        "source": "Union",
                        "full": "typing.Union"
                      },
                      "[",
                      [
                        {
                          "source": "str",
                          "full": "str"
                        },
                        ", ",
                        [
                          {
                            "source": "List",
                            "full": "typing.List"
                          },
                          "[",
                          {
                            "source": "str",
                            "full": "str"
                          },
                          "]"
                        ]
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "fn",
                    "annotation": {
                      "source": "Callable",
                      "full": "typing.Callable"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "output",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "str",
                        "full": "str"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "output_type",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "Any",
                        "full": "typing.Any"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "drop",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  },
                  {
                    "name": "multi",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  },
                  {
                    "name": "where",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "str",
                        "full": "str"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "where_args",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          {
                            "source": "Iterable",
                            "full": "typing.Iterable"
                          },
                          ", ",
                          {
                            "source": "dict",
                            "full": "dict"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "show_progress",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "_convert_multi",
                "lineno": 2529,
                "endlineno": 2576,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "column",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "fn",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "drop",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "show_progress",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "where",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "where_args",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "None"
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "build_insert_queries_and_params",
                "lineno": 2578,
                "endlineno": 2680,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "extracts",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "chunk",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "all_columns",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "hash_id",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "hash_id_columns",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "upsert",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "pk",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "conversions",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "num_records_processed",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "replace",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "ignore",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "insert_chunk",
                "lineno": 2682,
                "endlineno": 2771,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "alter",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "extracts",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "chunk",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "all_columns",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "hash_id",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "hash_id_columns",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "upsert",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "pk",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "conversions",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "num_records_processed",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "replace",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "ignore",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "insert",
                "lineno": 2773,
                "endlineno": 2837,
                "docstring": {
                  "value": "Insert a single record into the table. The table will be created with a schema that matches\nthe inserted record if it does not already exist, see :ref:`python_api_creating_tables`.\n\n- ``record`` - required: a dictionary representing the record to be inserted.\n\nThe other parameters are optional, and mostly influence how the new table will be created if\nthat table does not exist yet.\n\nEach of them defaults to ``DEFAULT``, which indicates that the default setting for the current\n``Table`` object (specified in the table constructor) should be used.\n\n:param record: Dictionary record to be inserted\n:param pk: If creating the table, which column should be the primary key.\n:param foreign_keys: See :ref:`python_api_foreign_keys`.\n:param column_order: List of strings specifying a full or partial column order\n  to use when creating the table.\n:param not_null: Set of strings specifying columns that should be ``NOT NULL``.\n:param defaults: Dictionary specifying default values for specific columns.\n:param hash_id: Name of a column to create and use as a primary key, where the\n  value of thet primary key will be derived as a SHA1 hash of the other column values\n  in the record. ``hash_id=\"id\"`` is a common column name used for this.\n:param alter: Boolean, should any missing columns be added automatically?\n:param ignore: Boolean, if a record already exists with this primary key, ignore this insert.\n:param replace: Boolean, if a record already exists with this primary key, replace it with this new record.\n:param extracts: A list of columns to extract to other tables, or a dictionary that maps\n  ``{column_name: other_table_name}``. See :ref:`python_api_extracts`.\n:param conversions: Dictionary specifying SQL conversion functions to be applied to the data while it\n  is being inserted, for example ``{\"name\": \"upper(?)\"}``. See :ref:`python_api_conversions`.\n:param columns: Dictionary over-riding the detected types used for the columns, for example\n  ``{\"age\": int, \"weight\": float}``.",
                  "lineno": 2790,
                  "endlineno": 2821
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "record",
                    "annotation": [
                      {
                        "source": "Dict",
                        "full": "typing.Dict"
                      },
                      "[",
                      [
                        {
                          "source": "str",
                          "full": "str"
                        },
                        ", ",
                        {
                          "source": "Any",
                          "full": "typing.Any"
                        }
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "pk",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "foreign_keys",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "column_order",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          [
                            {
                              "source": "List",
                              "full": "typing.List"
                            },
                            "[",
                            {
                              "source": "str",
                              "full": "str"
                            },
                            "]"
                          ],
                          ", ",
                          {
                            "source": "Default",
                            "full": "sqlite_utils.db.Default"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "not_null",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          [
                            {
                              "source": "Set",
                              "full": "typing.Set"
                            },
                            "[",
                            {
                              "source": "str",
                              "full": "str"
                            },
                            "]"
                          ],
                          ", ",
                          {
                            "source": "Default",
                            "full": "sqlite_utils.db.Default"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "defaults",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          [
                            {
                              "source": "Dict",
                              "full": "typing.Dict"
                            },
                            "[",
                            [
                              {
                                "source": "str",
                                "full": "str"
                              },
                              ", ",
                              {
                                "source": "Any",
                                "full": "typing.Any"
                              }
                            ],
                            "]"
                          ],
                          ", ",
                          {
                            "source": "Default",
                            "full": "sqlite_utils.db.Default"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "hash_id",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          {
                            "source": "str",
                            "full": "str"
                          },
                          ", ",
                          {
                            "source": "Default",
                            "full": "sqlite_utils.db.Default"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "hash_id_columns",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          [
                            {
                              "source": "Iterable",
                              "full": "typing.Iterable"
                            },
                            "[",
                            {
                              "source": "str",
                              "full": "str"
                            },
                            "]"
                          ],
                          ", ",
                          {
                            "source": "Default",
                            "full": "sqlite_utils.db.Default"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "alter",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          {
                            "source": "bool",
                            "full": "bool"
                          },
                          ", ",
                          {
                            "source": "Default",
                            "full": "sqlite_utils.db.Default"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "ignore",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          {
                            "source": "bool",
                            "full": "bool"
                          },
                          ", ",
                          {
                            "source": "Default",
                            "full": "sqlite_utils.db.Default"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "replace",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          {
                            "source": "bool",
                            "full": "bool"
                          },
                          ", ",
                          {
                            "source": "Default",
                            "full": "sqlite_utils.db.Default"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "extracts",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          [
                            {
                              "source": "Dict",
                              "full": "typing.Dict"
                            },
                            "[",
                            [
                              {
                                "source": "str",
                                "full": "str"
                              },
                              ", ",
                              {
                                "source": "str",
                                "full": "str"
                              }
                            ],
                            "]"
                          ],
                          ", ",
                          [
                            {
                              "source": "List",
                              "full": "typing.List"
                            },
                            "[",
                            {
                              "source": "str",
                              "full": "str"
                            },
                            "]"
                          ],
                          ", ",
                          {
                            "source": "Default",
                            "full": "sqlite_utils.db.Default"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "conversions",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          [
                            {
                              "source": "Dict",
                              "full": "typing.Dict"
                            },
                            "[",
                            [
                              {
                                "source": "str",
                                "full": "str"
                              },
                              ", ",
                              {
                                "source": "str",
                                "full": "str"
                              }
                            ],
                            "]"
                          ],
                          ", ",
                          {
                            "source": "Default",
                            "full": "sqlite_utils.db.Default"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "columns",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          [
                            {
                              "source": "Dict",
                              "full": "typing.Dict"
                            },
                            "[",
                            [
                              {
                                "source": "str",
                                "full": "str"
                              },
                              ", ",
                              {
                                "source": "Any",
                                "full": "typing.Any"
                              }
                            ],
                            "]"
                          ],
                          ", ",
                          {
                            "source": "Default",
                            "full": "sqlite_utils.db.Default"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  }
                ],
                "returns": "'Table'"
              },
              {
                "kind": "function",
                "name": "insert_all",
                "lineno": 2839,
                "endlineno": 2968,
                "docstring": {
                  "value": "Like ``.insert()`` but takes a list of records and ensures that the table\nthat it creates (if table does not exist) has columns for ALL of that data.\n\nUse ``analyze=True`` to run ``ANALYZE`` after the insert has completed.",
                  "lineno": 2860,
                  "endlineno": 2865
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "records",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "pk",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "foreign_keys",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "column_order",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "not_null",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "defaults",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "batch_size",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "hash_id",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "hash_id_columns",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "alter",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "ignore",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "replace",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "truncate",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "False"
                  },
                  {
                    "name": "extracts",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "conversions",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "columns",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "upsert",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "False"
                  },
                  {
                    "name": "analyze",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "False"
                  }
                ],
                "returns": "'Table'"
              },
              {
                "kind": "function",
                "name": "upsert",
                "lineno": 2970,
                "endlineno": 3004,
                "docstring": {
                  "value": "Like ``.insert()`` but performs an ``UPSERT``, where records are inserted if they do\nnot exist and updated if they DO exist, based on matching against their primary key.\n\nSee :ref:`python_api_upsert`.",
                  "lineno": 2985,
                  "endlineno": 2990
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "record",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "pk",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "foreign_keys",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "column_order",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "not_null",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "defaults",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "hash_id",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "hash_id_columns",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "alter",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "extracts",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "conversions",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "columns",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  }
                ],
                "returns": "'Table'"
              },
              {
                "kind": "function",
                "name": "upsert_all",
                "lineno": 3006,
                "endlineno": 3042,
                "docstring": {
                  "value": "Like ``.upsert()`` but can be applied to a list of records.",
                  "lineno": 3023,
                  "endlineno": 3025
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "records",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "pk",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "foreign_keys",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "column_order",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "not_null",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "defaults",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "batch_size",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "hash_id",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "hash_id_columns",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "alter",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "extracts",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "conversions",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "columns",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "analyze",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "False"
                  }
                ],
                "returns": "'Table'"
              },
              {
                "kind": "function",
                "name": "add_missing_columns",
                "lineno": 3044,
                "endlineno": 3050,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "records",
                    "annotation": [
                      {
                        "source": "Iterable",
                        "full": "typing.Iterable"
                      },
                      "[",
                      [
                        {
                          "source": "Dict",
                          "full": "typing.Dict"
                        },
                        "[",
                        [
                          {
                            "source": "str",
                            "full": "str"
                          },
                          ", ",
                          {
                            "source": "Any",
                            "full": "typing.Any"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": "'Table'"
              },
              {
                "kind": "function",
                "name": "lookup",
                "lineno": 3052,
                "endlineno": 3131,
                "docstring": {
                  "value": "Create or populate a lookup table with the specified values.\n\n``db[\"Species\"].lookup({\"name\": \"Palm\"})`` will create a table called ``Species``\n(if one does not already exist) with two columns: ``id`` and ``name``. It will\nset up a unique constraint on the ``name`` column to guarantee it will not\ncontain duplicate rows.\n\nIt will then insert a new row with the ``name`` set to ``Palm`` and return the\nnew integer primary key value.\n\nAn optional second argument can be provided with more ``name: value`` pairs to\nbe included only if the record is being created for the first time. These will\nbe ignored on subsequent lookup calls for records that already exist.\n\nAll other keyword arguments are passed through to ``.insert()``.\n\nSee :ref:`python_api_lookup_tables` for more details.\n\n:param lookup_values: Dictionary specifying column names and values to use for the lookup\n:param extra_values: Additional column values to be used only if creating a new record",
                  "lineno": 3065,
                  "endlineno": 3086
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "lookup_values",
                    "annotation": [
                      {
                        "source": "Dict",
                        "full": "typing.Dict"
                      },
                      "[",
                      [
                        {
                          "source": "str",
                          "full": "str"
                        },
                        ", ",
                        {
                          "source": "Any",
                          "full": "typing.Any"
                        }
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "extra_values",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Dict",
                          "full": "typing.Dict"
                        },
                        "[",
                        [
                          {
                            "source": "str",
                            "full": "str"
                          },
                          ", ",
                          {
                            "source": "Any",
                            "full": "typing.Any"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "pk",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "str",
                        "full": "str"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "'id'"
                  },
                  {
                    "name": "foreign_keys",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "ForeignKeysType",
                        "full": "sqlite_utils.db.ForeignKeysType"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "column_order",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "List",
                          "full": "typing.List"
                        },
                        "[",
                        {
                          "source": "str",
                          "full": "str"
                        },
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "not_null",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Set",
                          "full": "typing.Set"
                        },
                        "[",
                        {
                          "source": "str",
                          "full": "str"
                        },
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "defaults",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Dict",
                          "full": "typing.Dict"
                        },
                        "[",
                        [
                          {
                            "source": "str",
                            "full": "str"
                          },
                          ", ",
                          {
                            "source": "Any",
                            "full": "typing.Any"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "extracts",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          [
                            {
                              "source": "Dict",
                              "full": "typing.Dict"
                            },
                            "[",
                            [
                              {
                                "source": "str",
                                "full": "str"
                              },
                              ", ",
                              {
                                "source": "str",
                                "full": "str"
                              }
                            ],
                            "]"
                          ],
                          ", ",
                          [
                            {
                              "source": "List",
                              "full": "typing.List"
                            },
                            "[",
                            {
                              "source": "str",
                              "full": "str"
                            },
                            "]"
                          ]
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "conversions",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Dict",
                          "full": "typing.Dict"
                        },
                        "[",
                        [
                          {
                            "source": "str",
                            "full": "str"
                          },
                          ", ",
                          {
                            "source": "str",
                            "full": "str"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "columns",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Dict",
                          "full": "typing.Dict"
                        },
                        "[",
                        [
                          {
                            "source": "str",
                            "full": "str"
                          },
                          ", ",
                          {
                            "source": "Any",
                            "full": "typing.Any"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "m2m",
                "lineno": 3133,
                "endlineno": 3219,
                "docstring": {
                  "value": "After inserting a record in a table, create one or more records in some other\ntable and then create many-to-many records linking the original record and the\nnewly created records together.\n\nFor example::\n\n    db[\"dogs\"].insert({\"id\": 1, \"name\": \"Cleo\"}, pk=\"id\").m2m(\n        \"humans\", {\"id\": 1, \"name\": \"Natalie\"}, pk=\"id\"\n    )\n\nSee :ref:`python_api_m2m` for details.\n\n:param other_table: The name of the table to insert the new records into.\n:param record_or_iterable: A single dictionary record to insert, or a list of records.\n:param pk: The primary key to use if creating ``other_table``.\n:param lookup: Same dictionary as for ``.lookup()``, to create a many-to-many lookup table.\n:param m2m_table: The string name to use for the many-to-many table, defaults to creating\n  this automatically based on the names of the two tables.\n:param alter: Set to ``True`` to add any missing columns on ``other_table`` if that table\n  already exists.",
                  "lineno": 3144,
                  "endlineno": 3165
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "other_table",
                    "annotation": [
                      {
                        "source": "Union",
                        "full": "typing.Union"
                      },
                      "[",
                      [
                        {
                          "source": "str",
                          "full": "str"
                        },
                        ", ",
                        "'Table'"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "record_or_iterable",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          [
                            {
                              "source": "Iterable",
                              "full": "typing.Iterable"
                            },
                            "[",
                            [
                              {
                                "source": "Dict",
                                "full": "typing.Dict"
                              },
                              "[",
                              [
                                {
                                  "source": "str",
                                  "full": "str"
                                },
                                ", ",
                                {
                                  "source": "Any",
                                  "full": "typing.Any"
                                }
                              ],
                              "]"
                            ],
                            "]"
                          ],
                          ", ",
                          [
                            {
                              "source": "Dict",
                              "full": "typing.Dict"
                            },
                            "[",
                            [
                              {
                                "source": "str",
                                "full": "str"
                              },
                              ", ",
                              {
                                "source": "Any",
                                "full": "typing.Any"
                              }
                            ],
                            "]"
                          ]
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "pk",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Union",
                          "full": "typing.Union"
                        },
                        "[",
                        [
                          {
                            "source": "Any",
                            "full": "typing.Any"
                          },
                          ", ",
                          {
                            "source": "Default",
                            "full": "sqlite_utils.db.Default"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "DEFAULT"
                  },
                  {
                    "name": "lookup",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      [
                        {
                          "source": "Dict",
                          "full": "typing.Dict"
                        },
                        "[",
                        [
                          {
                            "source": "str",
                            "full": "str"
                          },
                          ", ",
                          {
                            "source": "Any",
                            "full": "typing.Any"
                          }
                        ],
                        "]"
                      ],
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "m2m_table",
                    "annotation": [
                      {
                        "source": "Optional",
                        "full": "typing.Optional"
                      },
                      "[",
                      {
                        "source": "str",
                        "full": "str"
                      },
                      "]"
                    ],
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "alter",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "analyze",
                "lineno": 3221,
                "endlineno": 3223,
                "docstring": {
                  "value": "Run ANALYZE against this table",
                  "lineno": 3222,
                  "endlineno": 3222
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "analyze_column",
                "lineno": 3225,
                "endlineno": 3299,
                "docstring": {
                  "value": "Return statistics about the specified column.\n\nSee :ref:`python_api_analyze_column`.\n\n:param column: Column to analyze\n:param common_limit: Show this many column values\n:param value_truncate: Truncate display of common values to this many characters\n:param total_rows: Optimization - pass the total number of rows in the table to save running a fresh ``count(*)`` query",
                  "lineno": 3228,
                  "endlineno": 3237
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "column",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "common_limit",
                    "annotation": {
                      "source": "int",
                      "full": "int"
                    },
                    "kind": "positional or keyword",
                    "default": "10"
                  },
                  {
                    "name": "value_truncate",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "None"
                  },
                  {
                    "name": "total_rows",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "None"
                  }
                ],
                "returns": "'ColumnDetails'"
              },
              {
                "kind": "function",
                "name": "add_geometry_column",
                "lineno": 3301,
                "endlineno": 3350,
                "docstring": {
                  "value": "In SpatiaLite, a geometry column can only be added to an existing table.\nTo do so, use ``table.add_geometry_column``, passing in a geometry type.\n\nBy default, this will add a nullable column using\n`SRID 4326 <https://spatialreference.org/ref/epsg/wgs-84/>`__. This can\nbe customized using the ``column_name``, ``srid`` and ``not_null`` arguments.\n\nReturns ``True`` if the column was successfully added, ``False`` if not.\n\n.. code-block:: python\n\n    from sqlite_utils.db import Database\n    from sqlite_utils.utils import find_spatialite\n\n    db = Database(\"mydb.db\")\n    db.init_spatialite(find_spatialite())\n\n    # the table must exist before adding a geometry column\n    table = db[\"locations\"].create({\"name\": str})\n    table.add_geometry_column(\"geometry\", \"POINT\")\n\n:param column_name: Name of column to add\n:param geometry_type: Type of geometry column, for example ``\"GEOMETRY\"`` or ``\"POINT\" or ``\"POLYGON\"``\n:param srid: Integer SRID, defaults to 4326 for WGS84\n:param coord_dimension: Dimensions to use, defaults to ``\"XY\"`` - set to ``\"XYZ\"`` to work in three dimensions\n:param not_null: Should the column be ``NOT NULL``",
                  "lineno": 3309,
                  "endlineno": 3336
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "column_name",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "geometry_type",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "srid",
                    "annotation": {
                      "source": "int",
                      "full": "int"
                    },
                    "kind": "positional or keyword",
                    "default": "4326"
                  },
                  {
                    "name": "coord_dimension",
                    "annotation": {
                      "source": "str",
                      "full": "str"
                    },
                    "kind": "positional or keyword",
                    "default": "'XY'"
                  },
                  {
                    "name": "not_null",
                    "annotation": {
                      "source": "bool",
                      "full": "bool"
                    },
                    "kind": "positional or keyword",
                    "default": "False"
                  }
                ],
                "returns": {
                  "source": "bool",
                  "full": "bool"
                }
              },
              {
                "kind": "function",
                "name": "create_spatial_index",
                "lineno": 3352,
                "endlineno": 3383,
                "docstring": {
                  "value": "A spatial index allows for significantly faster bounding box queries.\nTo create one, use ``create_spatial_index`` with the name of an existing geometry column.\n\nReturns ``True`` if the index was successfully created, ``False`` if not. Calling this\nfunction if an index already exists is a no-op.\n\n.. code-block:: python\n\n    # assuming SpatiaLite is loaded, create the table, add the column\n    table = db[\"locations\"].create({\"name\": str})\n    table.add_geometry_column(\"geometry\", \"POINT\")\n\n    # now we can index it\n    table.create_spatial_index(\"geometry\")\n\n    # the spatial index is a virtual table, which we can inspect\n    print(db[\"idx_locations_geometry\"].schema)\n    # outputs:\n    # CREATE VIRTUAL TABLE \"idx_locations_geometry\" USING rtree(pkid, xmin, xmax, ymin, ymax)\n\n:param column_name: Geometry column to create the spatial index against",
                  "lineno": 3353,
                  "endlineno": 3375
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "column_name",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": {
                  "source": "bool",
                  "full": "bool"
                }
              }
            ],
            "bases": [
              {
                "source": "Queryable",
                "full": "sqlite_utils.db.Queryable"
              }
            ],
            "decorators": []
          },
          {
            "kind": "class",
            "name": "View",
            "lineno": 3386,
            "endlineno": 3412,
            "labels": [],
            "members": [
              {
                "kind": "function",
                "name": "exists",
                "lineno": 3387,
                "endlineno": 3388,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "__repr__",
                "lineno": 3390,
                "endlineno": 3393,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "drop",
                "lineno": 3395,
                "endlineno": 3406,
                "docstring": {
                  "value": "Drop this view.\n\n:param ignore: Set to ``True`` to ignore the error if the view does not exist",
                  "lineno": 3396,
                  "endlineno": 3400
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "ignore",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": "False"
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "enable_fts",
                "lineno": 3408,
                "endlineno": 3412,
                "docstring": {
                  "value": "``enable_fts()`` is supported on tables but not on views.",
                  "lineno": 3409,
                  "endlineno": 3409
                },
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "*args",
                    "annotation": null,
                    "kind": "variadic positional",
                    "default": "()"
                  },
                  {
                    "name": "**kwargs",
                    "annotation": null,
                    "kind": "variadic keyword",
                    "default": "{}"
                  }
                ],
                "returns": null
              }
            ],
            "bases": [
              {
                "source": "Queryable",
                "full": "sqlite_utils.db.Queryable"
              }
            ],
            "decorators": []
          },
          {
            "kind": "function",
            "name": "jsonify_if_needed",
            "lineno": 3415,
            "endlineno": 3425,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "value",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "resolve_extracts",
            "lineno": 3428,
            "endlineno": 3435,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "extracts",
                "annotation": [
                  {
                    "source": "Optional",
                    "full": "typing.Optional"
                  },
                  "[",
                  [
                    {
                      "source": "Union",
                      "full": "typing.Union"
                    },
                    "[",
                    [
                      [
                        {
                          "source": "Dict",
                          "full": "typing.Dict"
                        },
                        "[",
                        [
                          {
                            "source": "str",
                            "full": "str"
                          },
                          ", ",
                          {
                            "source": "str",
                            "full": "str"
                          }
                        ],
                        "]"
                      ],
                      ", ",
                      [
                        {
                          "source": "List",
                          "full": "typing.List"
                        },
                        "[",
                        {
                          "source": "str",
                          "full": "str"
                        },
                        "]"
                      ],
                      ", ",
                      [
                        {
                          "source": "Tuple",
                          "full": "typing.Tuple"
                        },
                        "[",
                        {
                          "source": "str",
                          "full": "str"
                        },
                        "]"
                      ]
                    ],
                    "]"
                  ],
                  "]"
                ],
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": {
              "source": "dict",
              "full": "dict"
            }
          },
          {
            "kind": "function",
            "name": "validate_column_names",
            "lineno": 3438,
            "endlineno": 3443,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "columns",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "fix_square_braces",
            "lineno": 3446,
            "endlineno": 3454,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "records",
                "annotation": [
                  {
                    "source": "Iterable",
                    "full": "typing.Iterable"
                  },
                  "[",
                  [
                    {
                      "source": "Dict",
                      "full": "typing.Dict"
                    },
                    "[",
                    [
                      {
                        "source": "str",
                        "full": "str"
                      },
                      ", ",
                      {
                        "source": "Any",
                        "full": "typing.Any"
                      }
                    ],
                    "]"
                  ],
                  "]"
                ],
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          }
        ],
        "filepath": "/opt/hostedtoolcache/Python/3.10.4/x64/lib/python3.10/site-packages/sqlite_utils/db.py"
      },
      {
        "kind": "module",
        "name": "utils",
        "labels": [],
        "members": [
          {
            "kind": "alias",
            "name": "base64",
            "target_path": "base64",
            "lineno": 1,
            "endlineno": 1
          },
          {
            "kind": "alias",
            "name": "contextlib",
            "target_path": "contextlib",
            "lineno": 2,
            "endlineno": 2
          },
          {
            "kind": "alias",
            "name": "csv",
            "target_path": "csv",
            "lineno": 3,
            "endlineno": 3
          },
          {
            "kind": "alias",
            "name": "enum",
            "target_path": "enum",
            "lineno": 4,
            "endlineno": 4
          },
          {
            "kind": "alias",
            "name": "hashlib",
            "target_path": "hashlib",
            "lineno": 5,
            "endlineno": 5
          },
          {
            "kind": "alias",
            "name": "io",
            "target_path": "io",
            "lineno": 6,
            "endlineno": 6
          },
          {
            "kind": "alias",
            "name": "itertools",
            "target_path": "itertools",
            "lineno": 7,
            "endlineno": 7
          },
          {
            "kind": "alias",
            "name": "json",
            "target_path": "json",
            "lineno": 8,
            "endlineno": 8
          },
          {
            "kind": "alias",
            "name": "os",
            "target_path": "os",
            "lineno": 9,
            "endlineno": 9
          },
          {
            "kind": "alias",
            "name": "Dict",
            "target_path": "typing.Dict",
            "lineno": 11,
            "endlineno": 11
          },
          {
            "kind": "alias",
            "name": "cast",
            "target_path": "typing.cast",
            "lineno": 11,
            "endlineno": 11
          },
          {
            "kind": "alias",
            "name": "BinaryIO",
            "target_path": "typing.BinaryIO",
            "lineno": 11,
            "endlineno": 11
          },
          {
            "kind": "alias",
            "name": "Iterable",
            "target_path": "typing.Iterable",
            "lineno": 11,
            "endlineno": 11
          },
          {
            "kind": "alias",
            "name": "Optional",
            "target_path": "typing.Optional",
            "lineno": 11,
            "endlineno": 11
          },
          {
            "kind": "alias",
            "name": "Tuple",
            "target_path": "typing.Tuple",
            "lineno": 11,
            "endlineno": 11
          },
          {
            "kind": "alias",
            "name": "Type",
            "target_path": "typing.Type",
            "lineno": 11,
            "endlineno": 11
          },
          {
            "kind": "alias",
            "name": "click",
            "target_path": "click",
            "lineno": 13,
            "endlineno": 13
          },
          {
            "kind": "alias",
            "name": "sqlite3",
            "target_path": "sqlite3",
            "lineno": 22,
            "endlineno": 22
          },
          {
            "kind": "alias",
            "name": "pysqlite3",
            "target_path": "pysqlite3.dbapi2",
            "lineno": 17,
            "endlineno": 17
          },
          {
            "kind": "attribute",
            "name": "OperationalError",
            "lineno": 19,
            "endlineno": 19,
            "labels": [
              "module-attribute"
            ],
            "members": [],
            "value": "pysqlite3.dbapi2.OperationalError"
          },
          {
            "kind": "attribute",
            "name": "SPATIALITE_PATHS",
            "lineno": 27,
            "endlineno": 30,
            "labels": [
              "module-attribute"
            ],
            "members": [],
            "value": "('/usr/lib/x86_64-linux-gnu/mod_spatialite.so', '/usr/local/lib/mod_spatialite.dylib')"
          },
          {
            "kind": "function",
            "name": "find_spatialite",
            "lineno": 33,
            "endlineno": 58,
            "docstring": {
              "value": "The ``find_spatialite()`` function searches for the `SpatiaLite <https://www.gaia-gis.it/fossil/libspatialite/index>`__\nSQLite extension in some common places. It returns a string path to the location, or ``None`` if SpatiaLite was not found.\n\nYou can use it in code like this:\n\n.. code-block:: python\n\n    from sqlite_utils import Database\n    from sqlite_utils.utils import find_spatialite\n\n    db = Database(\"mydb.db\")\n    spatialite = find_spatialite()\n    if spatialite:\n        db.conn.enable_load_extension(True)\n        db.conn.load_extension(spatialite)\n\n    # or use with db.init_spatialite like this\n    db.init_spatialite(find_spatialite())",
              "lineno": 34,
              "endlineno": 54
            },
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [],
            "returns": [
              {
                "source": "Optional",
                "full": "typing.Optional"
              },
              "[",
              {
                "source": "str",
                "full": "str"
              },
              "]"
            ]
          },
          {
            "kind": "function",
            "name": "suggest_column_types",
            "lineno": 61,
            "endlineno": 66,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "records",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "types_for_column_types",
            "lineno": 69,
            "endlineno": 93,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "all_column_types",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "column_affinity",
            "lineno": 96,
            "endlineno": 112,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "column_type",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "decode_base64_values",
            "lineno": 115,
            "endlineno": 126,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "doc",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "class",
            "name": "UpdateWrapper",
            "lineno": 129,
            "endlineno": 137,
            "labels": [],
            "members": [
              {
                "kind": "function",
                "name": "__init__",
                "lineno": 130,
                "endlineno": 132,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "wrapped",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "update",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "attribute",
                "name": "_wrapped",
                "lineno": 131,
                "endlineno": 131,
                "labels": [
                  "instance-attribute"
                ],
                "members": [],
                "value": "wrapped"
              },
              {
                "kind": "attribute",
                "name": "_update",
                "lineno": 132,
                "endlineno": 132,
                "labels": [
                  "instance-attribute"
                ],
                "members": [],
                "value": "update"
              },
              {
                "kind": "function",
                "name": "__iter__",
                "lineno": 134,
                "endlineno": 137,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              }
            ],
            "bases": [],
            "decorators": []
          },
          {
            "kind": "function",
            "name": "file_progress",
            "lineno": 140,
            "endlineno": 156,
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 140,
                "endlineno": 140
              }
            ],
            "parameters": [
              {
                "name": "file",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "silent",
                "annotation": null,
                "kind": "positional or keyword",
                "default": "False"
              },
              {
                "name": "**kwargs",
                "annotation": null,
                "kind": "variadic keyword",
                "default": "{}"
              }
            ],
            "returns": null
          },
          {
            "kind": "class",
            "name": "Format",
            "lineno": 159,
            "endlineno": 163,
            "labels": [],
            "members": [
              {
                "kind": "attribute",
                "name": "CSV",
                "lineno": 160,
                "endlineno": 160,
                "labels": [
                  "class-attribute"
                ],
                "members": [],
                "value": "1"
              },
              {
                "kind": "attribute",
                "name": "TSV",
                "lineno": 161,
                "endlineno": 161,
                "labels": [
                  "class-attribute"
                ],
                "members": [],
                "value": "2"
              },
              {
                "kind": "attribute",
                "name": "JSON",
                "lineno": 162,
                "endlineno": 162,
                "labels": [
                  "class-attribute"
                ],
                "members": [],
                "value": "3"
              },
              {
                "kind": "attribute",
                "name": "NL",
                "lineno": 163,
                "endlineno": 163,
                "labels": [
                  "class-attribute"
                ],
                "members": [],
                "value": "4"
              }
            ],
            "bases": [
              [
                {
                  "source": "enum",
                  "full": "enum"
                },
                ".",
                {
                  "source": "Enum",
                  "full": "enum.Enum"
                }
              ]
            ],
            "decorators": []
          },
          {
            "kind": "class",
            "name": "RowsFromFileError",
            "lineno": 166,
            "endlineno": 167,
            "labels": [],
            "members": [],
            "bases": [
              {
                "source": "Exception",
                "full": "Exception"
              }
            ],
            "decorators": []
          },
          {
            "kind": "class",
            "name": "RowsFromFileBadJSON",
            "lineno": 170,
            "endlineno": 171,
            "labels": [],
            "members": [],
            "bases": [
              {
                "source": "RowsFromFileError",
                "full": "sqlite_utils.utils.RowsFromFileError"
              }
            ],
            "decorators": []
          },
          {
            "kind": "function",
            "name": "rows_from_file",
            "lineno": 174,
            "endlineno": 219,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "fp",
                "annotation": {
                  "source": "BinaryIO",
                  "full": "typing.BinaryIO"
                },
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "format",
                "annotation": [
                  {
                    "source": "Optional",
                    "full": "typing.Optional"
                  },
                  "[",
                  {
                    "source": "Format",
                    "full": "sqlite_utils.utils.Format"
                  },
                  "]"
                ],
                "kind": "positional or keyword",
                "default": "None"
              },
              {
                "name": "dialect",
                "annotation": [
                  {
                    "source": "Optional",
                    "full": "typing.Optional"
                  },
                  "[",
                  [
                    {
                      "source": "Type",
                      "full": "typing.Type"
                    },
                    "[",
                    [
                      {
                        "source": "csv",
                        "full": "csv"
                      },
                      ".",
                      {
                        "source": "Dialect",
                        "full": "csv.Dialect"
                      }
                    ],
                    "]"
                  ],
                  "]"
                ],
                "kind": "positional or keyword",
                "default": "None"
              },
              {
                "name": "encoding",
                "annotation": [
                  {
                    "source": "Optional",
                    "full": "typing.Optional"
                  },
                  "[",
                  {
                    "source": "str",
                    "full": "str"
                  },
                  "]"
                ],
                "kind": "positional or keyword",
                "default": "None"
              }
            ],
            "returns": [
              {
                "source": "Tuple",
                "full": "typing.Tuple"
              },
              "[",
              [
                [
                  {
                    "source": "Iterable",
                    "full": "typing.Iterable"
                  },
                  "[",
                  {
                    "source": "dict",
                    "full": "dict"
                  },
                  "]"
                ],
                ", ",
                {
                  "source": "Format",
                  "full": "sqlite_utils.utils.Format"
                }
              ],
              "]"
            ]
          },
          {
            "kind": "class",
            "name": "TypeTracker",
            "lineno": 222,
            "endlineno": 235,
            "labels": [],
            "members": [
              {
                "kind": "function",
                "name": "__init__",
                "lineno": 223,
                "endlineno": 224,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "attribute",
                "name": "trackers",
                "lineno": 224,
                "endlineno": 224,
                "labels": [
                  "instance-attribute"
                ],
                "members": [],
                "value": "{}"
              },
              {
                "kind": "function",
                "name": "wrap",
                "lineno": 226,
                "endlineno": 231,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "iterator",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "types",
                "lineno": 233,
                "endlineno": 235,
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 233,
                    "endlineno": 233
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              }
            ],
            "bases": [],
            "decorators": []
          },
          {
            "kind": "class",
            "name": "ValueTracker",
            "lineno": 238,
            "endlineno": 284,
            "labels": [],
            "members": [
              {
                "kind": "function",
                "name": "__init__",
                "lineno": 239,
                "endlineno": 240,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "attribute",
                "name": "couldbe",
                "lineno": 240,
                "endlineno": 240,
                "labels": [
                  "instance-attribute"
                ],
                "members": [],
                "value": "{key: getattr(self, 'test_' + key) for key in self.get_tests()}"
              },
              {
                "kind": "function",
                "name": "get_tests",
                "lineno": 242,
                "endlineno": 248,
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 242,
                    "endlineno": 242
                  }
                ],
                "parameters": [
                  {
                    "name": "cls",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "test_integer",
                "lineno": 250,
                "endlineno": 255,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "value",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "test_float",
                "lineno": 257,
                "endlineno": 262,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "value",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "__repr__",
                "lineno": 264,
                "endlineno": 265,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "guessed_type",
                "lineno": 267,
                "endlineno": 274,
                "labels": [],
                "members": [],
                "decorators": [
                  {
                    "lineno": 267,
                    "endlineno": 267
                  }
                ],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "evaluate",
                "lineno": 276,
                "endlineno": 284,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "value",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              }
            ],
            "bases": [],
            "decorators": []
          },
          {
            "kind": "class",
            "name": "NullProgressBar",
            "lineno": 287,
            "endlineno": 295,
            "labels": [],
            "members": [
              {
                "kind": "function",
                "name": "__init__",
                "lineno": 288,
                "endlineno": 289,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "*args",
                    "annotation": null,
                    "kind": "variadic positional",
                    "default": "()"
                  }
                ],
                "returns": null
              },
              {
                "kind": "attribute",
                "name": "args",
                "lineno": 289,
                "endlineno": 289,
                "labels": [
                  "instance-attribute"
                ],
                "members": [],
                "value": "args"
              },
              {
                "kind": "function",
                "name": "__iter__",
                "lineno": 291,
                "endlineno": 292,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              },
              {
                "kind": "function",
                "name": "update",
                "lineno": 294,
                "endlineno": 295,
                "labels": [],
                "members": [],
                "decorators": [],
                "parameters": [
                  {
                    "name": "self",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  },
                  {
                    "name": "value",
                    "annotation": null,
                    "kind": "positional or keyword",
                    "default": null
                  }
                ],
                "returns": null
              }
            ],
            "bases": [],
            "decorators": []
          },
          {
            "kind": "function",
            "name": "progressbar",
            "lineno": 298,
            "endlineno": 305,
            "labels": [],
            "members": [],
            "decorators": [
              {
                "lineno": 298,
                "endlineno": 298
              }
            ],
            "parameters": [
              {
                "name": "*args",
                "annotation": null,
                "kind": "variadic positional",
                "default": "()"
              },
              {
                "name": "**kwargs",
                "annotation": null,
                "kind": "variadic keyword",
                "default": "{}"
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "_compile_code",
            "lineno": 308,
            "endlineno": 342,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "code",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "imports",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "variable",
                "annotation": null,
                "kind": "positional or keyword",
                "default": "'value'"
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "chunks",
            "lineno": 345,
            "endlineno": 348,
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "sequence",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "size",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "hash_record",
            "lineno": 351,
            "endlineno": 379,
            "docstring": {
              "value": "``record`` should be a Python dictionary. Returns a sha1 hash of the\nkeys and values in that record.\n\nIf ``keys=`` is provided, uses just those keys to generate the hash.\n\nExample usage::\n\n    from sqlite_utils.utils import hash_record\n\n    hashed = hash_record({\"name\": \"Cleo\", \"twitter\": \"CleoPaws\"})\n    # Or with the keys= option:\n    hashed = hash_record(\n        {\"name\": \"Cleo\", \"twitter\": \"CleoPaws\", \"age\": 7},\n        keys=(\"name\", \"twitter\")\n    )\n\n:param record: Record to generate a hash for\n:param keys: Subset of keys to use for that hash",
              "lineno": 352,
              "endlineno": 371
            },
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "record",
                "annotation": {
                  "source": "Dict",
                  "full": "typing.Dict"
                },
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "keys",
                "annotation": [
                  {
                    "source": "Optional",
                    "full": "typing.Optional"
                  },
                  "[",
                  [
                    {
                      "source": "Iterable",
                      "full": "typing.Iterable"
                    },
                    "[",
                    {
                      "source": "str",
                      "full": "str"
                    },
                    "]"
                  ],
                  "]"
                ],
                "kind": "positional or keyword",
                "default": "None"
              }
            ],
            "returns": null
          }
        ],
        "filepath": "/opt/hostedtoolcache/Python/3.10.4/x64/lib/python3.10/site-packages/sqlite_utils/utils.py"
      },
      {
        "kind": "module",
        "name": "recipes",
        "labels": [],
        "members": [
          {
            "kind": "alias",
            "name": "parser",
            "target_path": "dateutil.parser",
            "lineno": 1,
            "endlineno": 1
          },
          {
            "kind": "alias",
            "name": "json",
            "target_path": "json",
            "lineno": 2,
            "endlineno": 2
          },
          {
            "kind": "function",
            "name": "parsedate",
            "lineno": 5,
            "endlineno": 9,
            "docstring": {
              "value": "Parse a date and convert it to ISO date format: yyyy-mm-dd",
              "lineno": 6,
              "endlineno": 6
            },
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "value",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "dayfirst",
                "annotation": null,
                "kind": "positional or keyword",
                "default": "False"
              },
              {
                "name": "yearfirst",
                "annotation": null,
                "kind": "positional or keyword",
                "default": "False"
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "parsedatetime",
            "lineno": 12,
            "endlineno": 14,
            "docstring": {
              "value": "Parse a datetime and convert it to ISO datetime format: yyyy-mm-ddTHH:MM:SS",
              "lineno": 13,
              "endlineno": 13
            },
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "value",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "dayfirst",
                "annotation": null,
                "kind": "positional or keyword",
                "default": "False"
              },
              {
                "name": "yearfirst",
                "annotation": null,
                "kind": "positional or keyword",
                "default": "False"
              }
            ],
            "returns": null
          },
          {
            "kind": "function",
            "name": "jsonsplit",
            "lineno": 17,
            "endlineno": 19,
            "docstring": {
              "value": "Convert a string like a,b,c into a JSON array [\"a\", \"b\", \"c\"]",
              "lineno": 18,
              "endlineno": 18
            },
            "labels": [],
            "members": [],
            "decorators": [],
            "parameters": [
              {
                "name": "value",
                "annotation": null,
                "kind": "positional or keyword",
                "default": null
              },
              {
                "name": "delimiter",
                "annotation": null,
                "kind": "positional or keyword",
                "default": "','"
              },
              {
                "name": "type",
                "annotation": null,
                "kind": "positional or keyword",
                "default": "str"
              }
            ],
            "returns": null
          }
        ],
        "filepath": "/opt/hostedtoolcache/Python/3.10.4/x64/lib/python3.10/site-packages/sqlite_utils/recipes.py"
      }
    ],
    "filepath": "/opt/hostedtoolcache/Python/3.10.4/x64/lib/python3.10/site-packages/sqlite_utils/__init__.py"
  }
}
