DESCRIBE-PACKAGE-VERSION()                          DESCRIBE-PACKAGE-VERSION()



NAME
       describe-package-version -

DESCRIPTION
       Returns  a  PackageVersionDescription  object that contains information
       about the requested package version.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            describe-package-version
          --domain <value>
          [--domain-owner <value>]
          --repository <value>
          --format <value>
          [--namespace <value>]
          --package <value>
          --package-version <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --domain (string)
          The name of the domain that contains the  repository  that  contains
          the package version.

       --domain-owner (string)
          The  12-digit account number of the Amazon Web Services account that
          owns the domain. It does not include dashes or spaces.

       --repository (string)
          The name of the repository that contains the package version.

       --format (string)
          A format that specifies the type of the requested package version.

          Possible values:

          o npm

          o pypi

          o maven

          o nuget

       --namespace (string)
          The namespace of the requested package version. The package  version
          component  that specifies its namespace depends on its type. For ex-
          ample:

          o The namespace of a Maven package version is its groupId .

          o The namespace of an npm package version is its scope .

          o Python and NuGet package versions do not contain  a  corresponding
            component,  package  versions of those formats do not have a name-
            space.

       --package (string)
          The name of the requested package version.

       --package-version (string)
          A string that contains the package version (for example, 3.5.2 ).

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       packageVersion -> (structure)
          A  PackageVersionDescription  object that contains information about
          the requested package version.

          format -> (string)
              The format of the package version.

          namespace -> (string)
              The namespace of the package version. The package version compo-
              nent that specifies its namespace depends on its type. For exam-
              ple:

              o The namespace of a Maven package version is its groupId .

              o The namespace of an npm package version is its scope .

              o Python and NuGet package versions do not contain a correspond-
                ing component, package versions of those formats do not have a
                namespace.

          packageName -> (string)
              The name of the requested package.

          displayName -> (string)
              The name of the  package  that  is  displayed.  The  displayName
              varies  depending  on the package version's format. For example,
              if an npm package is named ui , is in the namespace  vue  ,  and
              has the format npm , then the displayName is @vue/ui .

          version -> (string)
              The version of the package.

          summary -> (string)
              A  summary of the package version. The summary is extracted from
              the package. The information in and detail level of the  summary
              depends on the package version's format.

          homePage -> (string)
              The homepage associated with the package.

          sourceCodeRepository -> (string)
              The  repository  for  the source code in the package version, or
              the source code used to build it.

          publishedTime -> (timestamp)
              A timestamp that contains the date and time the package  version
              was published.

          licenses -> (list)
              Information about licenses associated with the package version.

              (structure)
                 Details of the license data.

                 name -> (string)
                     Name of the license.

                 url -> (string)
                     The URL for license data.

          revision -> (string)
              The revision of the package version.

          status -> (string)
              A string that contains the status of the package version.

          origin -> (structure)
              A  PackageVersionOrigin  object  that contains information about
              how the package version was added to the repository.

              domainEntryPoint -> (structure)
                 A DomainEntryPoint object  that  contains  information  about
                 from which repository or external connection the package ver-
                 sion was added to the domain.

                 repositoryName -> (string)
                     The name of the repository that a package was  originally
                     published to.

                 externalConnectionName -> (string)
                     The  name  of  the external connection that a package was
                     ingested from.

              originType -> (string)
                 Describes how the package version was originally added to the
                 domain. An INTERNAL origin type means the package version was
                 published directly to a repository in the domain. An EXTERNAL
                 origin  type  means  the package version was ingested from an
                 external connection.



                                                    DESCRIBE-PACKAGE-VERSION()
