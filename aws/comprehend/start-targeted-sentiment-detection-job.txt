START-TARGETED-SENTIMENT-DETECTION-JOBSTART-TARGETED-SENTIMENT-DETECTION-JOB()



NAME
       start-targeted-sentiment-detection-job -

DESCRIPTION
       Starts  an  asynchronous targeted sentiment detection job for a collec-
       tion of documents. Use the DescribeTargetedSentimentDetectionJob opera-
       tion to track the status of a job.

       See also: AWS API Documentation

SYNOPSIS
            start-targeted-sentiment-detection-job
          --input-data-config <value>
          --output-data-config <value>
          --data-access-role-arn <value>
          [--job-name <value>]
          --language-code <value>
          [--client-request-token <value>]
          [--volume-kms-key-id <value>]
          [--vpc-config <value>]
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --input-data-config (structure)
          The  input properties for an inference job. The document reader con-
          fig field applies only to non-text inputs for custom analysis.

          S3Uri -> (string)
              The Amazon S3 URI for the input data. The URI must  be  in  same
              Region  as  the  API  endpoint that you are calling. The URI can
              point to a single input file or it can provide the prefix for  a
              collection of data files.

              For  example, if you use the URI S3://bucketName/prefix , if the
              prefix is a single file, Amazon Comprehend uses that file as in-
              put.  If  more than one file begins with the prefix, Amazon Com-
              prehend uses all of them as input.

          InputFormat -> (string)
              Specifies how the text in an input file should be processed:

              o ONE_DOC_PER_FILE - Each file is considered  a  separate  docu-
                ment. Use this option when you are processing large documents,
                such as newspaper articles or scientific papers.

              o ONE_DOC_PER_LINE - Each line in a file is considered  a  sepa-
                rate  document.  Use  this option when you are processing many
                short documents, such as text messages.

          DocumentReaderConfig -> (structure)
              Provides configuration parameters to override  the  default  ac-
              tions for extracting text from PDF documents and image files.

              DocumentReadAction -> (string)
                 This  field  defines  the  Amazon Textract API operation that
                 Amazon Comprehend uses to extract text from PDF files and im-
                 age files. Enter one of the following values:

                 o TEXTRACT_DETECT_DOCUMENT_TEXT  - The Amazon Comprehend ser-
                   vice uses the DetectDocumentText API operation.

                 o TEXTRACT_ANALYZE_DOCUMENT - The Amazon  Comprehend  service
                   uses the AnalyzeDocument API operation.

              DocumentReadMode -> (string)
                 Determines  the  text extraction actions for PDF files. Enter
                 one of the following values:

                 o SERVICE_DEFAULT - use the  Amazon  Comprehend  service  de-
                   faults for PDF files.

                 o FORCE_DOCUMENT_READ_ACTION  -  Amazon  Comprehend  uses the
                   Textract API specified by DocumentReadAction  for  all  PDF
                   files, including digital PDF files.

              FeatureTypes -> (list)
                 Specifies  the  type of Amazon Textract features to apply. If
                 you chose TEXTRACT_ANALYZE_DOCUMENT as the read  action,  you
                 must specify one or both of the following values:

                 o TABLES  -  Returns  additional information about any tables
                   that are detected in the input document.

                 o FORMS - Returns additional information about any forms that
                   are detected in the input document.

                 (string)
                     TABLES or FORMS

       Shorthand Syntax:

          S3Uri=string,InputFormat=string,DocumentReaderConfig={DocumentReadAction=string,DocumentReadMode=string,FeatureTypes=[string,string]}

       JSON Syntax:

          {
            "S3Uri": "string",
            "InputFormat": "ONE_DOC_PER_FILE"|"ONE_DOC_PER_LINE",
            "DocumentReaderConfig": {
              "DocumentReadAction": "TEXTRACT_DETECT_DOCUMENT_TEXT"|"TEXTRACT_ANALYZE_DOCUMENT",
              "DocumentReadMode": "SERVICE_DEFAULT"|"FORCE_DOCUMENT_READ_ACTION",
              "FeatureTypes": ["TABLES"|"FORMS", ...]
            }
          }

       --output-data-config (structure)
          Specifies where to send the output files.

          S3Uri -> (string)
              When you use the OutputDataConfig object with asynchronous oper-
              ations, you specify the Amazon S3 location  where  you  want  to
              write the output data. The URI must be in the same Region as the
              API endpoint that you are calling. The location is used  as  the
              prefix for the actual location of the output file.

              When the topic detection job is finished, the service creates an
              output file in a directory specific to the job. The S3Uri  field
              contains the location of the output file, called output.tar.gz .
              It is a compressed archive that contains the ouput of the opera-
              tion.

              For  a  PII entity detection job, the output file is plain text,
              not a compressed archive. The output file name is  the  same  as
              the input file, with .out appended at the end.

          KmsKeyId -> (string)
              ID  for the Amazon Web Services Key Management Service (KMS) key
              that Amazon Comprehend uses to encrypt the output  results  from
              an  analysis job. Specify the Key Id of a symmetric key, because
              you cannot use an asymmetric key for uploading data to S3.

              The KmsKeyId can be one of the following formats:

              o KMS Key ID: "1234abcd-12ab-34cd-56ef-1234567890ab"

              o Amazon    Resource    Name    (ARN)    of    a    KMS     Key:
                "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"

              o KMS Key Alias: "alias/ExampleAlias"

              o ARN        of         a         KMS         Key         Alias:
                "arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias"

       Shorthand Syntax:

          S3Uri=string,KmsKeyId=string

       JSON Syntax:

          {
            "S3Uri": "string",
            "KmsKeyId": "string"
          }

       --data-access-role-arn (string)
          The  Amazon  Resource  Name (ARN) of the IAM role that grants Amazon
          Comprehend read access to your input data. For more information, see
          Role-based permissions .

       --job-name (string)
          The identifier of the job.

       --language-code (string)
          The  language of the input documents. Currently, English is the only
          supported language.

          Possible values:

          o en

          o es

          o fr

          o de

          o it

          o pt

          o ar

          o hi

          o ja

          o ko

          o zh

          o zh-TW

       --client-request-token (string)
          A unique identifier for the request. If you don't set the client re-
          quest token, Amazon Comprehend generates one.

       --volume-kms-key-id (string)
          ID  for  the  KMS key that Amazon Comprehend uses to encrypt data on
          the storage volume attached  to  the  ML  compute  instance(s)  that
          process  the  analysis  job. The VolumeKmsKeyId can be either of the
          following formats:

          o KMS Key ID: "1234abcd-12ab-34cd-56ef-1234567890ab"

          o Amazon    Resource    Name     (ARN)     of     a     KMS     Key:
            "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"

       --vpc-config (structure)
          Configuration parameters for an  optional  private  Virtual  Private
          Cloud  (VPC) containing the resources you are using for the job. For
          more information, see Amazon VPC .

          SecurityGroupIds -> (list)
              The ID number for a security group on an instance of  your  pri-
              vate  VPC.  Security groups on your VPC function serve as a vir-
              tual firewall to control inbound and outbound traffic  and  pro-
              vides  security for the resources that youll be accessing on the
              VPC.  This  ID  number  is  preceded  by  "sg-",  for  instance:
              "sg-03b388029b0a285ea".   For  more  information,  see  Security
              Groups for your VPC .

              (string)

          Subnets -> (list)
              The ID for each subnet being used in your private VPC. This sub-
              net is a subset of the a range of IPv4 addresses used by the VPC
              and is specific to a given availability zone in the VPCs Region.
              This  ID  number  is  preceded by "subnet-", for instance: "sub-
              net-04ccf456919e69055". For more information, see VPCs and  Sub-
              nets .

              (string)

       Shorthand Syntax:

          SecurityGroupIds=string,string,Subnets=string,string

       JSON Syntax:

          {
            "SecurityGroupIds": ["string", ...],
            "Subnets": ["string", ...]
          }

       --tags (list)
          Tags  to  associate with the targeted sentiment detection job. A tag
          is a key-value pair that adds metadata to a resource used by  Amazon
          Comprehend.  For  example,  a  tag  with "Sales" as the key might be
          added to a resource to indicate its use by the sales department.

          (structure)
              A key-value pair that adds as a metadata to a resource  used  by
              Amazon  Comprehend.  For  example, a tag with the key-value pair
              Department:Sales might be added to a resource  to  indicate  its
              use by a particular department.

              Key -> (string)
                 The initial part of a key-value pair that forms a tag associ-
                 ated with a given resource. For instance, if you want to show
                 which  resources are used by which departments, you might use
                 Department as the key portion of the pair, with multiple pos-
                 sible values such as sales, legal, and administration.

              Value -> (string)
                 The  second part of a key-value pair that forms a tag associ-
                 ated with a given resource. For instance, if you want to show
                 which  resources are used by which departments, you might use
                 Department as the initial (key) portion of the pair,  with  a
                 value of sales to indicate the sales department.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To start an asynchronous targeted sentiment analysis job

       The following start-targeted-sentiment-detection-job example starts  an
       asynchronous  targeted  sentiment  analysis detection job for all files
       located at the address specified by the --input-data-config  tag.   The
       S3  bucket folder in this example contains SampleMovieReview1.txt, Sam-
       pleMovieReview2.txt, and SampleMovieReview3.txt.  When the job is  com-
       plete,  output.tar.gz is placed at the location specified by the --out-
       put-data-config tag. output.tar.gz contains  the  files  SampleMovieRe-
       view1.txt.out,     SampleMovieReview2.txt.out,    and    SampleMovieRe-
       view3.txt.out, which each contain all of the named entities and associ-
       ated sentiments for a single input text file.

          aws comprehend start-targeted-sentiment-detection-job \
              --job-name targeted_movie_review_analysis1 \
              --language-code en \
              --input-data-config "S3Uri=s3://DOC-EXAMPLE-BUCKET/MovieData" \
              --output-data-config "S3Uri=s3://DOC-EXAMPLE-DESTINATION-BUCKET/testfolder/" \
              --data-access-role-arn arn:aws:iam::111122223333:role/service-role/AmazonComprehendServiceRole-example-role

       Contents of SampleMovieReview1.txt:

          "The film, AnyMovie, is fairly predictable and just okay."

       Contents of SampleMovieReview2.txt:

          "AnyMovie is the essential sci-fi film that I grew up watching when I was a kid. I highly recommend this movie."

       Contents of SampleMovieReview3.txt:

          "Don't get fooled by the 'awards' for AnyMovie. All parts of the film were poorly stolen from other modern directors."

       Output:

          {
              "JobId": "0b5001e25f62ebb40631a9a1a7fde7b3",
              "JobArn": "arn:aws:comprehend:us-west-2:111122223333:targeted-sentiment-detection-job/0b5001e25f62ebb40631a9a1a7fde7b3",
              "JobStatus": "SUBMITTED"
          }

       Contents  of SampleMovieReview1.txt.out with line indents for readabil-
       ity:

          {
              "Entities": [
                  {
                  "DescriptiveMentionIndex": [
                      0
                  ],
                  "Mentions": [
                      {
                      "BeginOffset": 4,
                      "EndOffset": 8,
                      "Score": 0.994972,
                      "GroupScore": 1,
                      "Text": "film",
                      "Type": "MOVIE",
                      "MentionSentiment": {
                          "Sentiment": "NEUTRAL",
                          "SentimentScore": {
                          "Mixed": 0,
                          "Negative": 0,
                          "Neutral": 1,
                          "Positive": 0
                          }
                      }
                      }
                  ]
                  },
                  {
                  "DescriptiveMentionIndex": [
                      0
                  ],
                  "Mentions": [
                      {
                      "BeginOffset": 10,
                      "EndOffset": 18,
                      "Score": 0.631368,
                      "GroupScore": 1,
                      "Text": "AnyMovie",
                      "Type": "ORGANIZATION",
                      "MentionSentiment": {
                          "Sentiment": "POSITIVE",
                          "SentimentScore": {
                          "Mixed": 0.001729,
                          "Negative": 0.000001,
                          "Neutral": 0.000318,
                          "Positive": 0.997952
                          }
                      }
                      }
                  ]
                  }
              ],
              "File": "SampleMovieReview1.txt",
              "Line": 0
          }

       Contents of SampleMovieReview2.txt.out line indents for readability:

          {
              "Entities": [
                  {
                  "DescriptiveMentionIndex": [
                      0
                  ],
                  "Mentions": [
                      {
                      "BeginOffset": 0,
                      "EndOffset": 8,
                      "Score": 0.854024,
                      "GroupScore": 1,
                      "Text": "AnyMovie",
                      "Type": "MOVIE",
                      "MentionSentiment": {
                          "Sentiment": "POSITIVE",
                          "SentimentScore": {
                          "Mixed": 0,
                          "Negative": 0,
                          "Neutral": 0.000007,
                          "Positive": 0.999993
                          }
                      }
                      },
                      {
                      "BeginOffset": 104,
                      "EndOffset": 109,
                      "Score": 0.999129,
                      "GroupScore": 0.502937,
                      "Text": "movie",
                      "Type": "MOVIE",
                      "MentionSentiment": {
                          "Sentiment": "POSITIVE",
                          "SentimentScore": {
                          "Mixed": 0,
                          "Negative": 0,
                          "Neutral": 0,
                          "Positive": 1
                          }
                      }
                      },
                      {
                      "BeginOffset": 33,
                      "EndOffset": 37,
                      "Score": 0.999823,
                      "GroupScore": 0.999252,
                      "Text": "film",
                      "Type": "MOVIE",
                      "MentionSentiment": {
                          "Sentiment": "POSITIVE",
                          "SentimentScore": {
                          "Mixed": 0,
                          "Negative": 0,
                          "Neutral": 0.000001,
                          "Positive": 0.999999
                          }
                      }
                      }
                  ]
                  },
                  {
                  "DescriptiveMentionIndex": [
                      0,
                      1,
                      2
                  ],
                  "Mentions": [
                      {
                      "BeginOffset": 43,
                      "EndOffset": 44,
                      "Score": 0.999997,
                      "GroupScore": 1,
                      "Text": "I",
                      "Type": "PERSON",
                      "MentionSentiment": {
                          "Sentiment": "NEUTRAL",
                          "SentimentScore": {
                          "Mixed": 0,
                          "Negative": 0,
                          "Neutral": 1,
                          "Positive": 0
                          }
                      }
                      },
                      {
                      "BeginOffset": 80,
                      "EndOffset": 81,
                      "Score": 0.999996,
                      "GroupScore": 0.52523,
                      "Text": "I",
                      "Type": "PERSON",
                      "MentionSentiment": {
                          "Sentiment": "NEUTRAL",
                          "SentimentScore": {
                          "Mixed": 0,
                          "Negative": 0,
                          "Neutral": 1,
                          "Positive": 0
                          }
                      }
                      },
                      {
                      "BeginOffset": 67,
                      "EndOffset": 68,
                      "Score": 0.999994,
                      "GroupScore": 0.999499,
                      "Text": "I",
                      "Type": "PERSON",
                      "MentionSentiment": {
                          "Sentiment": "NEUTRAL",
                          "SentimentScore": {
                          "Mixed": 0,
                          "Negative": 0,
                          "Neutral": 1,
                          "Positive": 0
                          }
                      }
                      }
                  ]
                  },
                  {
                  "DescriptiveMentionIndex": [
                      0
                  ],
                  "Mentions": [
                      {
                      "BeginOffset": 75,
                      "EndOffset": 78,
                      "Score": 0.999978,
                      "GroupScore": 1,
                      "Text": "kid",
                      "Type": "PERSON",
                      "MentionSentiment": {
                          "Sentiment": "NEUTRAL",
                          "SentimentScore": {
                          "Mixed": 0,
                          "Negative": 0,
                          "Neutral": 1,
                          "Positive": 0
                          }
                      }
                      }
                  ]
                  }
              ],
              "File": "SampleMovieReview2.txt",
              "Line": 0
          }

       Contents of SampleMovieReview3.txt.out with line indents for  readibil-
       ity:

          {
              "Entities": [
                  {
                  "DescriptiveMentionIndex": [
                      1
                  ],
                  "Mentions": [
                      {
                      "BeginOffset": 64,
                      "EndOffset": 68,
                      "Score": 0.992953,
                      "GroupScore": 0.999814,
                      "Text": "film",
                      "Type": "MOVIE",
                      "MentionSentiment": {
                          "Sentiment": "NEUTRAL",
                          "SentimentScore": {
                          "Mixed": 0.000004,
                          "Negative": 0.010425,
                          "Neutral": 0.989543,
                          "Positive": 0.000027
                          }
                      }
                      },
                      {
                      "BeginOffset": 37,
                      "EndOffset": 45,
                      "Score": 0.999782,
                      "GroupScore": 1,
                      "Text": "AnyMovie",
                      "Type": "ORGANIZATION",
                      "MentionSentiment": {
                          "Sentiment": "POSITIVE",
                          "SentimentScore": {
                          "Mixed": 0.000095,
                          "Negative": 0.039847,
                          "Neutral": 0.000673,
                          "Positive": 0.959384
                          }
                      }
                      }
                  ]
                  },
                  {
                  "DescriptiveMentionIndex": [
                      0
                  ],
                  "Mentions": [
                      {
                      "BeginOffset": 47,
                      "EndOffset": 50,
                      "Score": 0.999991,
                      "GroupScore": 1,
                      "Text": "All",
                      "Type": "QUANTITY",
                      "MentionSentiment": {
                          "Sentiment": "NEUTRAL",
                          "SentimentScore": {
                          "Mixed": 0.000001,
                          "Negative": 0.000001,
                          "Neutral": 0.999998,
                          "Positive": 0
                          }
                      }
                      }
                  ]
                  },
                  {
                  "DescriptiveMentionIndex": [
                      0
                  ],
                  "Mentions": [
                      {
                      "BeginOffset": 106,
                      "EndOffset": 115,
                      "Score": 0.542083,
                      "GroupScore": 1,
                      "Text": "directors",
                      "Type": "PERSON",
                      "MentionSentiment": {
                          "Sentiment": "NEUTRAL",
                          "SentimentScore": {
                          "Mixed": 0,
                          "Negative": 0,
                          "Neutral": 1,
                          "Positive": 0
                          }
                      }
                      }
                  ]
                  }
              ],
              "File": "SampleMovieReview3.txt",
              "Line": 0
          }

       For more information, see Async analysis for Amazon Comprehend insights
       in the Amazon Comprehend Developer Guide.

OUTPUT
       JobId -> (string)
          The identifier generated for the job. To get the status  of  a  job,
          use  this  identifier with the DescribeTargetedSentimentDetectionJob
          operation.

       JobArn -> (string)
          The Amazon Resource Name (ARN) of the targeted  sentiment  detection
          job.  It is a unique, fully qualified identifier for the job. It in-
          cludes the Amazon Web Services account, Amazon Web Services  Region,
          and the job ID. The format of the ARN is as follows:
              arn:<partition>:comprehend:<region>:<account-id>:targeted-senti-
              ment-detection-job/<job-id>

          The following is an example job ARN:
              arn:aws:comprehend:us-west-2:111122223333:targeted-sentiment-de-
              tection-job/1234abcd12ab34cd56ef1234567890ab

       JobStatus -> (string)
          The status of the job.

          o SUBMITTED  -  The job has been received and is queued for process-
            ing.

          o IN_PROGRESS - Amazon Comprehend is processing the job.

          o COMPLETED - The job was successfully completed and the  output  is
            available.

          o FAILED - The job did not complete. To get details, use the Descri-
            beTargetedSentimentDetectionJob operation.



                                      START-TARGETED-SENTIMENT-DETECTION-JOB()
