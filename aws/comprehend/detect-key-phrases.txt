DETECT-KEY-PHRASES()                                      DETECT-KEY-PHRASES()



NAME
       detect-key-phrases -

DESCRIPTION
       Detects the key noun phrases found in the text.

       See also: AWS API Documentation

SYNOPSIS
            detect-key-phrases
          --text <value>
          --language-code <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --text (string)
          A  UTF-8  text  string.  The string must contain less than 100 KB of
          UTF-8 encoded characters.

       --language-code (string)
          The language of the input documents. You can specify any of the pri-
          mary languages supported by Amazon Comprehend. All documents must be
          in the same language.

          Possible values:

          o en

          o es

          o fr

          o de

          o it

          o pt

          o ar

          o hi

          o ja

          o ko

          o zh

          o zh-TW

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To detect key phrases in input text

       The following detect-key-phrases example analyzes the  input  text  and
       identifies  the  key  noun  phrases. The pre-trained model's confidence
       score is also output for each prediction.

          aws comprehend detect-key-phrases \
              --language-code en \
              --text "Hello Zhang Wei, I am John. Your AnyCompany Financial Services, LLC credit card \
                  account 1111-XXXX-1111-XXXX has a minimum payment of $24.53 that is due by July 31st. Based on your autopay settings, \
                  we will withdraw your payment on the due date from your bank account number XXXXXX1111 with the routing number XXXXX0000. \
                  Customer feedback for Sunshine Spa, 123 Main St, Anywhere. Send comments to Alice at AnySpa@example.com."

       Output:

          {
              "KeyPhrases": [
                  {
                      "Score": 0.8996376395225525,
                      "Text": "Zhang Wei",
                      "BeginOffset": 6,
                      "EndOffset": 15
                  },
                  {
                      "Score": 0.9992469549179077,
                      "Text": "John",
                      "BeginOffset": 22,
                      "EndOffset": 26
                  },
                  {
                      "Score": 0.988385021686554,
                      "Text": "Your AnyCompany Financial Services",
                      "BeginOffset": 28,
                      "EndOffset": 62
                  },
                  {
                      "Score": 0.8740853071212769,
                      "Text": "LLC credit card account 1111-XXXX-1111-XXXX",
                      "BeginOffset": 64,
                      "EndOffset": 107
                  },
                  {
                      "Score": 0.9999437928199768,
                      "Text": "a minimum payment",
                      "BeginOffset": 112,
                      "EndOffset": 129
                  },
                  {
                      "Score": 0.9998900890350342,
                      "Text": ".53",
                      "BeginOffset": 133,
                      "EndOffset": 136
                  },
                  {
                      "Score": 0.9979453086853027,
                      "Text": "July 31st",
                      "BeginOffset": 152,
                      "EndOffset": 161
                  },
                  {
                      "Score": 0.9983011484146118,
                      "Text": "your autopay settings",
                      "BeginOffset": 172,
                      "EndOffset": 193
                  },
                  {
                      "Score": 0.9996572136878967,
                      "Text": "your payment",
                      "BeginOffset": 211,
                      "EndOffset": 223
                  },
                  {
                      "Score": 0.9995037317276001,
                      "Text": "the due date",
                      "BeginOffset": 227,
                      "EndOffset": 239
                  },
                  {
                      "Score": 0.9702621698379517,
                      "Text": "your bank account number XXXXXX1111",
                      "BeginOffset": 245,
                      "EndOffset": 280
                  },
                  {
                      "Score": 0.9179925918579102,
                      "Text": "the routing number XXXXX0000.Customer feedback",
                      "BeginOffset": 286,
                      "EndOffset": 332
                  },
                  {
                      "Score": 0.9978160858154297,
                      "Text": "Sunshine Spa",
                      "BeginOffset": 337,
                      "EndOffset": 349
                  },
                  {
                      "Score": 0.9706913232803345,
                      "Text": "123 Main St",
                      "BeginOffset": 351,
                      "EndOffset": 362
                  },
                  {
                      "Score": 0.9941995143890381,
                      "Text": "comments",
                      "BeginOffset": 379,
                      "EndOffset": 387
                  },
                  {
                      "Score": 0.9759287238121033,
                      "Text": "Alice",
                      "BeginOffset": 391,
                      "EndOffset": 396
                  },
                  {
                      "Score": 0.8376792669296265,
                      "Text": "AnySpa@example.com",
                      "BeginOffset": 400,
                      "EndOffset": 415
                  }
              ]
          }

       For more information, see Key Phrases in the Amazon  Comprehend  Devel-
       oper Guide.

OUTPUT
       KeyPhrases -> (list)
          A collection of key phrases that Amazon Comprehend identified in the
          input text. For each key phrase, the response provides the  text  of
          the  key phrase, where the key phrase begins and ends, and the level
          of confidence that Amazon Comprehend has in the accuracy of the  de-
          tection.

          (structure)
              Describes a key noun phrase.

              Score -> (float)
                 The level of confidence that Amazon Comprehend has in the ac-
                 curacy of the detection.

              Text -> (string)
                 The text of a key noun phrase.

              BeginOffset -> (integer)
                 The zero-based offset from the beginning of the  source  text
                 to the first character in the key phrase.

              EndOffset -> (integer)
                 The  zero-based  offset from the beginning of the source text
                 to the last character in the key phrase.



                                                          DETECT-KEY-PHRASES()
