START-PII-ENTITIES-DETECTION-JOB()          START-PII-ENTITIES-DETECTION-JOB()



NAME
       start-pii-entities-detection-job -

DESCRIPTION
       Starts  an  asynchronous  PII  entity detection job for a collection of
       documents.

       See also: AWS API Documentation

SYNOPSIS
            start-pii-entities-detection-job
          --input-data-config <value>
          --output-data-config <value>
          --mode <value>
          [--redaction-config <value>]
          --data-access-role-arn <value>
          [--job-name <value>]
          --language-code <value>
          [--client-request-token <value>]
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --input-data-config (structure)
          The input properties for a PII entities detection job.

          S3Uri -> (string)
              The Amazon S3 URI for the input data. The URI must  be  in  same
              Region  as  the  API  endpoint that you are calling. The URI can
              point to a single input file or it can provide the prefix for  a
              collection of data files.

              For  example, if you use the URI S3://bucketName/prefix , if the
              prefix is a single file, Amazon Comprehend uses that file as in-
              put.  If  more than one file begins with the prefix, Amazon Com-
              prehend uses all of them as input.

          InputFormat -> (string)
              Specifies how the text in an input file should be processed:

              o ONE_DOC_PER_FILE - Each file is considered  a  separate  docu-
                ment. Use this option when you are processing large documents,
                such as newspaper articles or scientific papers.

              o ONE_DOC_PER_LINE - Each line in a file is considered  a  sepa-
                rate  document.  Use  this option when you are processing many
                short documents, such as text messages.

          DocumentReaderConfig -> (structure)
              Provides configuration parameters to override  the  default  ac-
              tions for extracting text from PDF documents and image files.

              DocumentReadAction -> (string)
                 This  field  defines  the  Amazon Textract API operation that
                 Amazon Comprehend uses to extract text from PDF files and im-
                 age files. Enter one of the following values:

                 o TEXTRACT_DETECT_DOCUMENT_TEXT  - The Amazon Comprehend ser-
                   vice uses the DetectDocumentText API operation.

                 o TEXTRACT_ANALYZE_DOCUMENT - The Amazon  Comprehend  service
                   uses the AnalyzeDocument API operation.

              DocumentReadMode -> (string)
                 Determines  the  text extraction actions for PDF files. Enter
                 one of the following values:

                 o SERVICE_DEFAULT - use the  Amazon  Comprehend  service  de-
                   faults for PDF files.

                 o FORCE_DOCUMENT_READ_ACTION  -  Amazon  Comprehend  uses the
                   Textract API specified by DocumentReadAction  for  all  PDF
                   files, including digital PDF files.

              FeatureTypes -> (list)
                 Specifies  the  type of Amazon Textract features to apply. If
                 you chose TEXTRACT_ANALYZE_DOCUMENT as the read  action,  you
                 must specify one or both of the following values:

                 o TABLES  -  Returns  additional information about any tables
                   that are detected in the input document.

                 o FORMS - Returns additional information about any forms that
                   are detected in the input document.

                 (string)
                     TABLES or FORMS

       Shorthand Syntax:

          S3Uri=string,InputFormat=string,DocumentReaderConfig={DocumentReadAction=string,DocumentReadMode=string,FeatureTypes=[string,string]}

       JSON Syntax:

          {
            "S3Uri": "string",
            "InputFormat": "ONE_DOC_PER_FILE"|"ONE_DOC_PER_LINE",
            "DocumentReaderConfig": {
              "DocumentReadAction": "TEXTRACT_DETECT_DOCUMENT_TEXT"|"TEXTRACT_ANALYZE_DOCUMENT",
              "DocumentReadMode": "SERVICE_DEFAULT"|"FORCE_DOCUMENT_READ_ACTION",
              "FeatureTypes": ["TABLES"|"FORMS", ...]
            }
          }

       --output-data-config (structure)
          Provides  conguration parameters for the output of PII entity detec-
          tion jobs.

          S3Uri -> (string)
              When you use the OutputDataConfig object with asynchronous oper-
              ations,  you  specify  the  Amazon S3 location where you want to
              write the output data. The URI must be in the same Region as the
              API  endpoint  that you are calling. The location is used as the
              prefix for the actual location of the output file.

              When the topic detection job is finished, the service creates an
              output  file in a directory specific to the job. The S3Uri field
              contains the location of the output file, called output.tar.gz .
              It is a compressed archive that contains the ouput of the opera-
              tion.

              For a PII entity detection job, the output file is  plain  text,
              not  a  compressed  archive. The output file name is the same as
              the input file, with .out appended at the end.

          KmsKeyId -> (string)
              ID for the Amazon Web Services Key Management Service (KMS)  key
              that  Amazon  Comprehend uses to encrypt the output results from
              an analysis job. Specify the Key Id of a symmetric key,  because
              you cannot use an asymmetric key for uploading data to S3.

              The KmsKeyId can be one of the following formats:

              o KMS Key ID: "1234abcd-12ab-34cd-56ef-1234567890ab"

              o Amazon     Resource    Name    (ARN)    of    a    KMS    Key:
                "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"

              o KMS Key Alias: "alias/ExampleAlias"

              o ARN         of         a         KMS         Key        Alias:
                "arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias"

       Shorthand Syntax:

          S3Uri=string,KmsKeyId=string

       JSON Syntax:

          {
            "S3Uri": "string",
            "KmsKeyId": "string"
          }

       --mode (string)
          Specifies whether the output provides the locations (offsets) of PII
          entities or a file in which PII entities are redacted.

          Possible values:

          o ONLY_REDACTION

          o ONLY_OFFSETS

       --redaction-config (structure)
          Provides configuration parameters for PII entity redaction.

          This  parameter  is  required  if  you  set  the  Mode  parameter to
          ONLY_REDACTION . In that case, you must  provide  a  RedactionConfig
          definition that includes the PiiEntityTypes parameter.

          PiiEntityTypes -> (list)
              An array of the types of PII entities that Amazon Comprehend de-
              tects in the input text for your request.

              (string)

          MaskMode -> (string)
              Specifies whether the PII entity is redacted with the mask char-
              acter or the entity type.

          MaskCharacter -> (string)
              A character that replaces each character in the redacted PII en-
              tity.

       Shorthand Syntax:

          PiiEntityTypes=string,string,MaskMode=string,MaskCharacter=string

       JSON Syntax:

          {
            "PiiEntityTypes": ["BANK_ACCOUNT_NUMBER"|"BANK_ROUTING"|"CREDIT_DEBIT_NUMBER"|"CREDIT_DEBIT_CVV"|"CREDIT_DEBIT_EXPIRY"|"PIN"|"EMAIL"|"ADDRESS"|"NAME"|"PHONE"|"SSN"|"DATE_TIME"|"PASSPORT_NUMBER"|"DRIVER_ID"|"URL"|"AGE"|"USERNAME"|"PASSWORD"|"AWS_ACCESS_KEY"|"AWS_SECRET_KEY"|"IP_ADDRESS"|"MAC_ADDRESS"|"ALL"|"LICENSE_PLATE"|"VEHICLE_IDENTIFICATION_NUMBER"|"UK_NATIONAL_INSURANCE_NUMBER"|"CA_SOCIAL_INSURANCE_NUMBER"|"US_INDIVIDUAL_TAX_IDENTIFICATION_NUMBER"|"UK_UNIQUE_TAXPAYER_REFERENCE_NUMBER"|"IN_PERMANENT_ACCOUNT_NUMBER"|"IN_NREGA"|"INTERNATIONAL_BANK_ACCOUNT_NUMBER"|"SWIFT_CODE"|"UK_NATIONAL_HEALTH_SERVICE_NUMBER"|"CA_HEALTH_NUMBER"|"IN_AADHAAR"|"IN_VOTER_NUMBER", ...],
            "MaskMode": "MASK"|"REPLACE_WITH_PII_ENTITY_TYPE",
            "MaskCharacter": "string"
          }

       --data-access-role-arn (string)
          The Amazon Resource Name (ARN) of the IAM role  that  grants  Amazon
          Comprehend read access to your input data.

       --job-name (string)
          The identifier of the job.

       --language-code (string)
          The  language  of  the  input documents. Enter the language code for
          English (en) or Spanish (es).

          Possible values:

          o en

          o es

          o fr

          o de

          o it

          o pt

          o ar

          o hi

          o ja

          o ko

          o zh

          o zh-TW

       --client-request-token (string)
          A unique identifier for the request. If you don't set the client re-
          quest token, Amazon Comprehend generates one.

       --tags (list)
          Tags  to  associate  with the PII entities detection job. A tag is a
          key-value pair that adds metadata to a resource used by Amazon  Com-
          prehend.  For  example, a tag with "Sales" as the key might be added
          to a resource to indicate its use by the sales department.

          (structure)
              A key-value pair that adds as a metadata to a resource  used  by
              Amazon  Comprehend.  For  example, a tag with the key-value pair
              Department:Sales might be added to a resource  to  indicate  its
              use by a particular department.

              Key -> (string)
                 The initial part of a key-value pair that forms a tag associ-
                 ated with a given resource. For instance, if you want to show
                 which  resources are used by which departments, you might use
                 Department as the key portion of the pair, with multiple pos-
                 sible values such as sales, legal, and administration.

              Value -> (string)
                 The  second part of a key-value pair that forms a tag associ-
                 ated with a given resource. For instance, if you want to show
                 which  resources are used by which departments, you might use
                 Department as the initial (key) portion of the pair,  with  a
                 value of sales to indicate the sales department.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To start an asynchronous PII detection job

       The following start-pii-entities-detection-job example starts an  asyn-
       chronous personal identifiable information (PII) entities detection job
       for all files located at the address specified by the --input-data-con-
       fig  tag.  The S3 bucket in this example contains Sampletext1.txt, Sam-
       pletext2.txt, and Sampletext3.txt.   When  the  job  is  complete,  the
       folder,  output,  is  placed  in  the  location specified by the --out-
       put-data-config tag. The folder contains  SampleText1.txt.out,  Sample-
       Text2.txt.out,  and  SampleText3.txt.out  which list the named entities
       within each text file. The Json output is printed on one line per file,
       but is formatted here for readability.

          aws comprehend start-pii-entities-detection-job \
              --job-name entities_test \
              --language-code en \
              --input-data-config "S3Uri=s3://DOC-EXAMPLE-BUCKET/" \
              --output-data-config "S3Uri=s3://DOC-EXAMPLE-DESTINATION-BUCKET/testfolder/" \
              --data-access-role-arn arn:aws:iam::111122223333:role/service-role/AmazonComprehendServiceRole-example-role \
              --language-code en \
              --mode ONLY_OFFSETS

       Contents of Sampletext1.txt:

          "Hello Zhang Wei, I am John. Your AnyCompany Financial Services, LLC credit card account 1111-XXXX-1111-XXXX has a minimum payment of $24.53 that is due by July 31st."

       Contents of Sampletext2.txt:

          "Dear Max, based on your autopay settings for your account Internet.org account, we will withdraw your payment on the due date from your bank account number XXXXXX1111 with the routing number XXXXX0000. "

       Contents of Sampletext3.txt:

          "Jane, please submit any customer feedback from this weekend to Sunshine Spa, 123 Main St, Anywhere and send comments to Alice at AnySpa@example.com."

       Output:

          {
              "JobId": "123456abcdeb0e11022f22a11EXAMPLE",
              "JobArn": "arn:aws:comprehend:us-west-2:111122223333:pii-entities-detection-job/123456abcdeb0e11022f22a11EXAMPLE",
              "JobStatus": "SUBMITTED"
          }

       Contents of SampleText1.txt.out with line indents for readability:

          {
              "Entities": [
                  {
                  "BeginOffset": 6,
                  "EndOffset": 15,
                  "Type": "NAME",
                  "Score": 0.9998490510222595
                  },
                  {
                  "BeginOffset": 22,
                  "EndOffset": 26,
                  "Type": "NAME",
                  "Score": 0.9998937958019426
                  },
                  {
                  "BeginOffset": 88,
                  "EndOffset": 107,
                  "Type": "CREDIT_DEBIT_NUMBER",
                  "Score": 0.9554297245278491
                  },
                  {
                  "BeginOffset": 155,
                  "EndOffset": 164,
                  "Type": "DATE_TIME",
                  "Score": 0.9999720462925257
                  }
              ],
              "File": "SampleText1.txt",
              "Line": 0
          }

       Contents of SampleText2.txt.out with line indents for readability:

          {
              "Entities": [
                  {
                  "BeginOffset": 5,
                  "EndOffset": 8,
                  "Type": "NAME",
                  "Score": 0.9994390774924007
                  },
                  {
                  "BeginOffset": 58,
                  "EndOffset": 70,
                  "Type": "URL",
                  "Score": 0.9999958276922101
                  },
                  {
                  "BeginOffset": 156,
                  "EndOffset": 166,
                  "Type": "BANK_ACCOUNT_NUMBER",
                  "Score": 0.9999721058045592
                  },
                  {
                  "BeginOffset": 191,
                  "EndOffset": 200,
                  "Type": "BANK_ROUTING",
                  "Score": 0.9998968945989909
                  }
              ],
              "File": "SampleText2.txt",
              "Line": 0
          }

       Contents of SampleText3.txt.out with line indents for readability:

          {
              "Entities": [
                  {
                  "BeginOffset": 0,
                  "EndOffset": 4,
                  "Type": "NAME",
                  "Score": 0.999949934606805
                  },
                  {
                  "BeginOffset": 77,
                  "EndOffset": 88,
                  "Type": "ADDRESS",
                  "Score": 0.9999035300466904
                  },
                  {
                  "BeginOffset": 120,
                  "EndOffset": 125,
                  "Type": "NAME",
                  "Score": 0.9998203838716296
                  },
                  {
                  "BeginOffset": 129,
                  "EndOffset": 144,
                  "Type": "EMAIL",
                  "Score": 0.9998313473105228
                  }
              ],
              "File": "SampleText3.txt",
              "Line": 0
          }

       For more information, see Async analysis for Amazon Comprehend insights
       in the Amazon Comprehend Developer Guide.

OUTPUT
       JobId -> (string)
          The identifier generated for the job.

       JobArn -> (string)
          The Amazon Resource Name (ARN) of the PII entity detection  job.  It
          is a unique, fully qualified identifier for the job. It includes the
          Amazon Web Services account, Amazon Web Services Region, and the job
          ID. The format of the ARN is as follows:
              arn:<partition>:comprehend:<region>:<account-id>:pii-enti-
              ties-detection-job/<job-id>

          The following is an example job ARN:
              arn:aws:comprehend:us-west-2:111122223333:pii-entities-detec-
              tion-job/1234abcd12ab34cd56ef1234567890ab

       JobStatus -> (string)
          The status of the job.



                                            START-PII-ENTITIES-DETECTION-JOB()
