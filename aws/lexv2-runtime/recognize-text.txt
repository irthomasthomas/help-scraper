RECOGNIZE-TEXT()                                              RECOGNIZE-TEXT()



NAME
       recognize-text -

DESCRIPTION
       Sends  user input to Amazon Lex V2. Client applications use this API to
       send requests to Amazon Lex V2 at runtime. Amazon Lex  V2  then  inter-
       prets the user input using the machine learning model that it build for
       the bot.

       In response, Amazon Lex V2 returns the next message to  convey  to  the
       user and an optional response card to display.

       If  the  optional  post-fulfillment response is specified, the messages
       are    returned    as    follows.    For    more    information,    see
       PostFulfillmentStatusSpecification .

       o Success  message - Returned if the Lambda function completes success-
         fully and the intent state is fulfilled or ready fulfillment  if  the
         message is present.

       o Failed  message  - The failed message is returned if the Lambda func-
         tion throws an exception or if the Lambda function returns  a  failed
         intent state without a message.

       o Timeout  message  -  If  you  don't configure a timeout message and a
         timeout, and the Lambda function doesn't return  within  30  seconds,
         the  timeout  message  is  returned.  If you configure a timeout, the
         timeout message is returned when the period times out.

       For more information, see Completion message .

       See also: AWS API Documentation

SYNOPSIS
            recognize-text
          --bot-id <value>
          --bot-alias-id <value>
          --locale-id <value>
          --session-id <value>
          --text <value>
          [--session-state <value>]
          [--request-attributes <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --bot-id (string)
          The identifier of the bot that processes the request.

       --bot-alias-id (string)
          The alias identifier in use for the bot that processes the request.

       --locale-id (string)
          The locale where the session is in use.

       --session-id (string)
          The identifier of the user session that is having the conversation.

       --text (string)
          The text that the user entered. Amazon Lex V2 interprets this text.

       --session-state (structure)
          The current state of the dialog between the user and the bot.

          dialogAction -> (structure)
              The next step that Amazon Lex V2 should take in the conversation
              with a user.

              type -> (string)
                 The  next  action that the bot should take in its interaction
                 with the user. The possible values are:

                 o Close - Indicates that there will not be  a  response  from
                   the  user.  For example, the statement "Your order has been
                   placed" does not require a response.

                 o ConfirmIntent - The next action is asking the user  if  the
                   intent  is  complete  and  ready to be fulfilled. This is a
                   yes/no question such as "Place the order?"

                 o Delegate - The next action is determined by Amazon Lex V2.

                 o ElicitIntent - The next action is to elicit an intent  from
                   the user.

                 o ElicitSlot - The next action is to elicit a slot value from
                   the user.

              slotToElicit -> (string)
                 The name of the slot that should be elicited from the user.

              slotElicitationStyle -> (string)
                 Configures the slot to use spell-by-letter  or  spell-by-word
                 style.  When  you  use a style on a slot, users can spell out
                 their input to make it clear to your bot.

                 o Spell by letter - "b" "o" "b"

                 o Spell by word - "b as in boy" "o as in oscar" "b as in boy"

                 For more information, see Using spelling to enter slot values
                 .

              subSlotToElicit -> (structure)
                 The  name  of  the constituent sub slot of the composite slot
                 specified in slotToElicit that should be  elicited  from  the
                 user.

                 name -> (string)
                     The  name  of  the  slot that should be elicited from the
                     user.

                 subSlotToElicit -> (structure)
                     The field is not supported.

                     name -> (string)
                        The name of the slot that should be elicited from  the
                        user.

                     ( ... recursive ... )

          intent -> (structure)
              The active intent that Amazon Lex V2 is processing.

              name -> (string)
                 The name of the intent.

              slots -> (map)
                 A  map  of  all  of the slots for the intent. The name of the
                 slot maps to the value of the slot. If a slot  has  not  been
                 filled, the value is null.

                 key -> (string)

                 value -> (structure)
                     A value that Amazon Lex V2 uses to fulfill an intent.

                     value -> (structure)
                        The current value of the slot.

                        originalValue -> (string)
                            The  text  of the utterance from the user that was
                            entered for the slot.

                        interpretedValue -> (string)
                            The value that Amazon Lex V2  determines  for  the
                            slot.  The  actual value depends on the setting of
                            the value selection strategy for the bot. You  can
                            choose  to  use  the value entered by the user, or
                            you can have Amazon Lex V2 choose the first  value
                            in the resolvedValues list.

                        resolvedValues -> (list)
                            A  list of additional values that have been recog-
                            nized for the slot.

                            (string)

                     shape -> (string)
                        When the shape value is List , it indicates  that  the
                        values  field contains a list of slot values. When the
                        value is Scalar , it indicates that  the  value  field
                        contains a single value.

                     values -> (list)
                        A  list  of  one or more values that the user provided
                        for the slot. For example, if a for a slot that  elic-
                        its  pizza  toppings,  the values might be "pepperoni"
                        and "pineapple."

                        (structure)
                            A value that Amazon Lex V2 uses to fulfill an  in-
                            tent.

                            value -> (structure)
                               The current value of the slot.

                               originalValue -> (string)
                                   The  text  of  the  utterance from the user
                                   that was entered for the slot.

                               interpretedValue -> (string)
                                   The value that Amazon Lex V2 determines for
                                   the  slot.  The actual value depends on the
                                   setting of the value selection strategy for
                                   the  bot.  You  can choose to use the value
                                   entered by the user, or you can have Amazon
                                   Lex  V2  choose  the first value in the re-
                                   solvedValues list.

                               resolvedValues -> (list)
                                   A list of additional values that have  been
                                   recognized for the slot.

                                   (string)

                            shape -> (string)
                               When  the  shape  value  is List , it indicates
                               that the values field contains a list  of  slot
                               values. When the value is Scalar , it indicates
                               that the value field contains a single value.

                            values -> (list)
                               A list of one or more values that the user pro-
                               vided  for  the  slot.  For example, if a for a
                               slot that elicits pizza  toppings,  the  values
                               might be "pepperoni" and "pineapple."

                               ( ... recursive ... )

                            subSlots -> (map)
                               The constituent sub slots of a composite slot.

                               key -> (string)

                               ( ... recursive ... )

                     subSlots -> (map)
                        The constituent sub slots of a composite slot.

                        key -> (string)

                        value -> (structure)
                            A  value that Amazon Lex V2 uses to fulfill an in-
                            tent.

                            value -> (structure)
                               The current value of the slot.

                               originalValue -> (string)
                                   The text of the  utterance  from  the  user
                                   that was entered for the slot.

                               interpretedValue -> (string)
                                   The value that Amazon Lex V2 determines for
                                   the slot. The actual value depends  on  the
                                   setting of the value selection strategy for
                                   the bot. You can choose to  use  the  value
                                   entered by the user, or you can have Amazon
                                   Lex V2 choose the first value  in  the  re-
                                   solvedValues list.

                               resolvedValues -> (list)
                                   A  list of additional values that have been
                                   recognized for the slot.

                                   (string)

                            shape -> (string)
                               When the shape value is  List  ,  it  indicates
                               that  the  values field contains a list of slot
                               values. When the value is Scalar , it indicates
                               that the value field contains a single value.

                            values -> (list)
                               A list of one or more values that the user pro-
                               vided for the slot. For example,  if  a  for  a
                               slot  that  elicits  pizza toppings, the values
                               might be "pepperoni" and "pineapple."

                               ( ... recursive ... )

              state -> (string)
                 Contains fulfillment information for the intent.

              confirmationState -> (string)
                 Contains information about whether fulfillment of the  intent
                 has been confirmed.

          activeContexts -> (list)
              One  or more contexts that indicate to Amazon Lex V2 the context
              of a request. When a context is active, Amazon Lex V2  considers
              intents  with  the matching context as a trigger as the next in-
              tent in a session.

              (structure)
                 Contains information about the contexts that a user is  using
                 in  a  session. You can configure Amazon Lex V2 to set a con-
                 text when an intent is fulfilled, or you can  set  a  context
                 using the , , or operations.

                 Use  a  context  to  indicate  to  Amazon Lex V2 intents that
                 should be used as follow-up intents. For example, if the  ac-
                 tive  context is order-fulfilled , only intents that have or-
                 der-fulfilled configured as a trigger are considered for fol-
                 low up.

                 name -> (string)
                     The name of the context.

                 timeToLive -> (structure)
                     Indicates the number of turns or seconds that the context
                     is active. Once the time to live expires, the context  is
                     no longer returned in a response.

                     timeToLiveInSeconds -> (integer)
                        The  number of seconds that the context is active. You
                        can specify between 5 and 86400 seconds (24 hours).

                     turnsToLive -> (integer)
                        The number of turns that the context  is  active.  You
                        can  specify up to 20 turns. Each request and response
                        from the bot is a turn.

                 contextAttributes -> (map)
                     A list of contexts active for the request. A context  can
                     be  activated  when a previous intent is fulfilled, or by
                     including the context in the request.

                     If you don't specify a list of contexts,  Amazon  Lex  V2
                     will use the current list of contexts for the session. If
                     you specify an empty list, all contexts for  the  session
                     are cleared.

                     key -> (string)

                     value -> (string)

          sessionAttributes -> (map)
              Map of key/value pairs representing session-specific context in-
              formation. It contains application  information  passed  between
              Amazon Lex V2 and a client application.

              key -> (string)

              value -> (string)

          originatingRequestId -> (string)
              A unique identifier for a specific request.

          runtimeHints -> (structure)
              Hints  for  phrases that a customer is likely to use for a slot.
              Amazon Lex V2 uses the hints to help determine the correct value
              of a slot.

              slotHints -> (map)
                 A  list  of  the slots in the intent that should have runtime
                 hints added, and the phrases that should be  added  for  each
                 slot.

                 The  first  level of the slotHints map is the name of the in-
                 tent. The second level is the name of the slot within the in-
                 tent.  For more information, see Using hints to improve accu-
                 racy .

                 The intent name and slot name must exist.

                 key -> (string)

                 value -> (map)
                     key -> (string)

                     value -> (structure)
                        Provides an array of  phrases  that  should  be  given
                        preference when resolving values for a slot.

                        runtimeHintValues -> (list)
                            One or more strings that Amazon Lex V2 should look
                            for in the input to the bot. Each phrase is  given
                            preference when deciding on slot values.

                            (structure)
                               Provides  the  phrase that Amazon Lex V2 should
                               look for in the user's input to the bot.

                               phrase -> (string)
                                   The phrase that Amazon Lex V2  should  look
                                   for in the user's input to the bot.

                        subSlotHints -> (map)
                            A  map of constituent sub slot names inside a com-
                            posite slot in the intent  and  the  phrases  that
                            should  be  added  for  each sub slot. Inside each
                            composite slot hints, this  structure  provides  a
                            mechanism  to  add granular sub slot phrases. Only
                            sub slot hints are supported for composite  slots.
                            The  intent name, composite slot name and the con-
                            stituent sub slot names must exist.

                            key -> (string)

                            value -> (structure)
                               Provides an array of  phrases  that  should  be
                               given  preference  when  resolving values for a
                               slot.

                               runtimeHintValues -> (list)
                                   One or more  strings  that  Amazon  Lex  V2
                                   should  look  for  in the input to the bot.
                                   Each phrase is given preference when decid-
                                   ing on slot values.

                                   (structure)
                                      Provides  the  phrase that Amazon Lex V2
                                      should look for in the user's  input  to
                                      the bot.

                                      phrase -> (string)
                                          The phrase that Amazon Lex V2 should
                                          look for in the user's input to  the
                                          bot.

       JSON Syntax:

          {
            "dialogAction": {
              "type": "Close"|"ConfirmIntent"|"Delegate"|"ElicitIntent"|"ElicitSlot"|"None",
              "slotToElicit": "string",
              "slotElicitationStyle": "Default"|"SpellByLetter"|"SpellByWord",
              "subSlotToElicit": {
                "name": "string",
                "subSlotToElicit": {
                  "name": "string",
                  "subSlotToElicit": { ... recursive ... }
                }
              }
            },
            "intent": {
              "name": "string",
              "slots": {"string": {
                    "value": {
                      "originalValue": "string",
                      "interpretedValue": "string",
                      "resolvedValues": ["string", ...]
                    },
                    "shape": "Scalar"|"List"|"Composite",
                    "values": [
                      {
                        "value": {
                          "originalValue": "string",
                          "interpretedValue": "string",
                          "resolvedValues": ["string", ...]
                        },
                        "shape": "Scalar"|"List"|"Composite",
                        "values": [
                          { ... recursive ... }
                          ...
                        ],
                        "subSlots": {"string": { ... recursive ... }
                          ...}
                      }
                      ...
                    ],
                    "subSlots": {"string": {
                          "value": {
                            "originalValue": "string",
                            "interpretedValue": "string",
                            "resolvedValues": ["string", ...]
                          },
                          "shape": "Scalar"|"List"|"Composite",
                          "values": [
                            { ... recursive ... }
                            ...
                          ],
                          "subSlots":
                        }
                      ...}
                  }
                ...},
              "state": "Failed"|"Fulfilled"|"InProgress"|"ReadyForFulfillment"|"Waiting"|"FulfillmentInProgress",
              "confirmationState": "Confirmed"|"Denied"|"None"
            },
            "activeContexts": [
              {
                "name": "string",
                "timeToLive": {
                  "timeToLiveInSeconds": integer,
                  "turnsToLive": integer
                },
                "contextAttributes": {"string": "string"
                  ...}
              }
              ...
            ],
            "sessionAttributes": {"string": "string"
              ...},
            "originatingRequestId": "string",
            "runtimeHints": {
              "slotHints": {"string": {"string": {
                        "runtimeHintValues": [
                          {
                            "phrase": "string"
                          }
                          ...
                        ],
                        "subSlotHints": {"string": {
                              "runtimeHintValues": [
                                {
                                  "phrase": "string"
                                }
                                ...
                              ],
                              "subSlotHints":
                            }
                          ...}
                      }
                    ...}
                ...}
            }
          }

       --request-attributes (map)
          Request-specific  information  passed between the client application
          and Amazon Lex V2

          The namespace x-amz-lex: is reserved for special  attributes.  Don't
          create any request attributes with the prefix x-amz-lex: .

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       messages -> (list)
          A list of messages last sent to the user. The messages  are  ordered
          based  on  the order that you returned the messages from your Lambda
          function or the order that the messages are defined in the bot.

          (structure)
              Container for text that is returned to the customer..

              content -> (string)
                 The text of the message.

              contentType -> (string)
                 Indicates the type of response.

              imageResponseCard -> (structure)
                 A card that is shown to the user by a messaging platform. You
                 define the contents of the card, the card is displayed by the
                 platform.

                 When you use a response card, the response from the  user  is
                 constrained to the text associated with a button on the card.

                 title -> (string)
                     The  title to display on the response card. The format of
                     the title is determined by the  platform  displaying  the
                     response card.

                 subtitle -> (string)
                     The  subtitle to display on the response card. The format
                     of the subtitle is determined by the platform  displaying
                     the response card.

                 imageUrl -> (string)
                     The  URL of an image to display on the response card. The
                     image URL must be publicly available so that the platform
                     displaying the response card has access to the image.

                 buttons -> (list)
                     A  list  of  buttons  that should be displayed on the re-
                     sponse card. The arrangement of the buttons is determined
                     by the platform that displays the button.

                     (structure)
                        A  button  that appears on a response card show to the
                        user.

                        text -> (string)
                            The text that is displayed on the button.

                        value -> (string)
                            The value returned to Amazon Lex V2  when  a  user
                            chooses the button.

       sessionState -> (structure)
          Represents  the current state of the dialog between the user and the
          bot.

          Use this to determine the progress of the conversation and what  the
          next action may be.

          dialogAction -> (structure)
              The next step that Amazon Lex V2 should take in the conversation
              with a user.

              type -> (string)
                 The next action that the bot should take in  its  interaction
                 with the user. The possible values are:

                 o Close  -  Indicates  that there will not be a response from
                   the user. For example, the statement "Your order  has  been
                   placed" does not require a response.

                 o ConfirmIntent  -  The next action is asking the user if the
                   intent is complete and ready to be  fulfilled.  This  is  a
                   yes/no question such as "Place the order?"

                 o Delegate - The next action is determined by Amazon Lex V2.

                 o ElicitIntent  - The next action is to elicit an intent from
                   the user.

                 o ElicitSlot - The next action is to elicit a slot value from
                   the user.

              slotToElicit -> (string)
                 The name of the slot that should be elicited from the user.

              slotElicitationStyle -> (string)
                 Configures  the  slot to use spell-by-letter or spell-by-word
                 style. When you use a style on a slot, users  can  spell  out
                 their input to make it clear to your bot.

                 o Spell by letter - "b" "o" "b"

                 o Spell by word - "b as in boy" "o as in oscar" "b as in boy"

                 For more information, see Using spelling to enter slot values
                 .

              subSlotToElicit -> (structure)
                 The name of the constituent sub slot of  the  composite  slot
                 specified  in  slotToElicit  that should be elicited from the
                 user.

                 name -> (string)
                     The name of the slot that should  be  elicited  from  the
                     user.

                 subSlotToElicit -> (structure)
                     The field is not supported.

                     name -> (string)
                        The  name of the slot that should be elicited from the
                        user.

                     ( ... recursive ... )

          intent -> (structure)
              The active intent that Amazon Lex V2 is processing.

              name -> (string)
                 The name of the intent.

              slots -> (map)
                 A map of all of the slots for the intent.  The  name  of  the
                 slot  maps  to  the value of the slot. If a slot has not been
                 filled, the value is null.

                 key -> (string)

                 value -> (structure)
                     A value that Amazon Lex V2 uses to fulfill an intent.

                     value -> (structure)
                        The current value of the slot.

                        originalValue -> (string)
                            The text of the utterance from the user  that  was
                            entered for the slot.

                        interpretedValue -> (string)
                            The  value  that  Amazon Lex V2 determines for the
                            slot. The actual value depends on the  setting  of
                            the  value selection strategy for the bot. You can
                            choose to use the value entered by  the  user,  or
                            you  can have Amazon Lex V2 choose the first value
                            in the resolvedValues list.

                        resolvedValues -> (list)
                            A list of additional values that have been  recog-
                            nized for the slot.

                            (string)

                     shape -> (string)
                        When  the  shape value is List , it indicates that the
                        values field contains a list of slot values. When  the
                        value  is  Scalar  , it indicates that the value field
                        contains a single value.

                     values -> (list)
                        A list of one or more values that  the  user  provided
                        for  the slot. For example, if a for a slot that elic-
                        its pizza toppings, the values  might  be  "pepperoni"
                        and "pineapple."

                        (structure)
                            A  value that Amazon Lex V2 uses to fulfill an in-
                            tent.

                            value -> (structure)
                               The current value of the slot.

                               originalValue -> (string)
                                   The text of the  utterance  from  the  user
                                   that was entered for the slot.

                               interpretedValue -> (string)
                                   The value that Amazon Lex V2 determines for
                                   the slot. The actual value depends  on  the
                                   setting of the value selection strategy for
                                   the bot. You can choose to  use  the  value
                                   entered by the user, or you can have Amazon
                                   Lex V2 choose the first value  in  the  re-
                                   solvedValues list.

                               resolvedValues -> (list)
                                   A  list of additional values that have been
                                   recognized for the slot.

                                   (string)

                            shape -> (string)
                               When the shape value is  List  ,  it  indicates
                               that  the  values field contains a list of slot
                               values. When the value is Scalar , it indicates
                               that the value field contains a single value.

                            values -> (list)
                               A list of one or more values that the user pro-
                               vided for the slot. For example,  if  a  for  a
                               slot  that  elicits  pizza toppings, the values
                               might be "pepperoni" and "pineapple."

                               ( ... recursive ... )

                            subSlots -> (map)
                               The constituent sub slots of a composite slot.

                               key -> (string)

                               ( ... recursive ... )

                     subSlots -> (map)
                        The constituent sub slots of a composite slot.

                        key -> (string)

                        value -> (structure)
                            A value that Amazon Lex V2 uses to fulfill an  in-
                            tent.

                            value -> (structure)
                               The current value of the slot.

                               originalValue -> (string)
                                   The  text  of  the  utterance from the user
                                   that was entered for the slot.

                               interpretedValue -> (string)
                                   The value that Amazon Lex V2 determines for
                                   the  slot.  The actual value depends on the
                                   setting of the value selection strategy for
                                   the  bot.  You  can choose to use the value
                                   entered by the user, or you can have Amazon
                                   Lex  V2  choose  the first value in the re-
                                   solvedValues list.

                               resolvedValues -> (list)
                                   A list of additional values that have  been
                                   recognized for the slot.

                                   (string)

                            shape -> (string)
                               When  the  shape  value  is List , it indicates
                               that the values field contains a list  of  slot
                               values. When the value is Scalar , it indicates
                               that the value field contains a single value.

                            values -> (list)
                               A list of one or more values that the user pro-
                               vided  for  the  slot.  For example, if a for a
                               slot that elicits pizza  toppings,  the  values
                               might be "pepperoni" and "pineapple."

                               ( ... recursive ... )

              state -> (string)
                 Contains fulfillment information for the intent.

              confirmationState -> (string)
                 Contains  information about whether fulfillment of the intent
                 has been confirmed.

          activeContexts -> (list)
              One or more contexts that indicate to Amazon Lex V2 the  context
              of  a request. When a context is active, Amazon Lex V2 considers
              intents with the matching context as a trigger as the  next  in-
              tent in a session.

              (structure)
                 Contains  information about the contexts that a user is using
                 in a session. You can configure Amazon Lex V2 to set  a  con-
                 text  when  an  intent is fulfilled, or you can set a context
                 using the , , or operations.

                 Use a context to indicate  to  Amazon  Lex  V2  intents  that
                 should  be used as follow-up intents. For example, if the ac-
                 tive context is order-fulfilled , only intents that have  or-
                 der-fulfilled configured as a trigger are considered for fol-
                 low up.

                 name -> (string)
                     The name of the context.

                 timeToLive -> (structure)
                     Indicates the number of turns or seconds that the context
                     is  active. Once the time to live expires, the context is
                     no longer returned in a response.

                     timeToLiveInSeconds -> (integer)
                        The number of seconds that the context is active.  You
                        can specify between 5 and 86400 seconds (24 hours).

                     turnsToLive -> (integer)
                        The  number  of  turns that the context is active. You
                        can specify up to 20 turns. Each request and  response
                        from the bot is a turn.

                 contextAttributes -> (map)
                     A  list of contexts active for the request. A context can
                     be activated when a previous intent is fulfilled,  or  by
                     including the context in the request.

                     If  you  don't  specify a list of contexts, Amazon Lex V2
                     will use the current list of contexts for the session. If
                     you  specify  an empty list, all contexts for the session
                     are cleared.

                     key -> (string)

                     value -> (string)

          sessionAttributes -> (map)
              Map of key/value pairs representing session-specific context in-
              formation.  It  contains  application information passed between
              Amazon Lex V2 and a client application.

              key -> (string)

              value -> (string)

          originatingRequestId -> (string)
              A unique identifier for a specific request.

          runtimeHints -> (structure)
              Hints for phrases that a customer is likely to use for  a  slot.
              Amazon Lex V2 uses the hints to help determine the correct value
              of a slot.

              slotHints -> (map)
                 A list of the slots in the intent that  should  have  runtime
                 hints  added,  and  the phrases that should be added for each
                 slot.

                 The first level of the slotHints map is the name of  the  in-
                 tent. The second level is the name of the slot within the in-
                 tent. For more information, see Using hints to improve  accu-
                 racy .

                 The intent name and slot name must exist.

                 key -> (string)

                 value -> (map)
                     key -> (string)

                     value -> (structure)
                        Provides  an  array  of  phrases  that should be given
                        preference when resolving values for a slot.

                        runtimeHintValues -> (list)
                            One or more strings that Amazon Lex V2 should look
                            for  in the input to the bot. Each phrase is given
                            preference when deciding on slot values.

                            (structure)
                               Provides the phrase that Amazon Lex  V2  should
                               look for in the user's input to the bot.

                               phrase -> (string)
                                   The  phrase  that Amazon Lex V2 should look
                                   for in the user's input to the bot.

                        subSlotHints -> (map)
                            A map of constituent sub slot names inside a  com-
                            posite  slot  in  the  intent and the phrases that
                            should be added for each  sub  slot.  Inside  each
                            composite  slot  hints,  this structure provides a
                            mechanism to add granular sub slot  phrases.  Only
                            sub  slot hints are supported for composite slots.
                            The intent name, composite slot name and the  con-
                            stituent sub slot names must exist.

                            key -> (string)

                            value -> (structure)
                               Provides  an  array  of  phrases that should be
                               given preference when resolving  values  for  a
                               slot.

                               runtimeHintValues -> (list)
                                   One  or  more  strings  that  Amazon Lex V2
                                   should look for in the input  to  the  bot.
                                   Each phrase is given preference when decid-
                                   ing on slot values.

                                   (structure)
                                      Provides the phrase that Amazon  Lex  V2
                                      should  look  for in the user's input to
                                      the bot.

                                      phrase -> (string)
                                          The phrase that Amazon Lex V2 should
                                          look  for in the user's input to the
                                          bot.

       interpretations -> (list)
          A list of intents that Amazon Lex V2 determined  might  satisfy  the
          user's utterance.

          Each  interpretation includes the intent, a score that indicates now
          confident Amazon Lex V2 is that the interpretation  is  the  correct
          one, and an optional sentiment response that indicates the sentiment
          expressed in the utterance.

          (structure)
              An intent that Amazon Lex V2 determined might satisfy the user's
              utterance. The intents are ordered by the confidence score.

              nluConfidence -> (structure)
                 Determines  the threshold where Amazon Lex V2 will insert the
                 AMAZON.FallbackIntent , AMAZON.KendraSearchIntent ,  or  both
                 when  returning  alternative  intents  in  a  response.  AMA-
                 ZON.FallbackIntent and AMAZON.KendraSearchIntent are only in-
                 serted if they are configured for the bot.

                 score -> (double)
                     A  score  that  indicates  how confident Amazon Lex V2 is
                     that an intent satisfies the user's  intent.  Ranges  be-
                     tween 0.00 and 1.00. Higher scores indicate higher confi-
                     dence.

              sentimentResponse -> (structure)
                 The sentiment expressed in an utterance.

                 When the bot is configured to send utterances to Amazon  Com-
                 prehend  for  sentiment analysis, this field contains the re-
                 sult of the analysis.

                 sentiment -> (string)
                     The overall sentiment expressed in the  user's  response.
                     This  is  the sentiment most likely expressed by the user
                     based on the analysis by Amazon Comprehend.

                 sentimentScore -> (structure)
                     The individual sentiment responses for the utterance.

                     positive -> (double)
                        The level of confidence that Amazon Comprehend has  in
                        the  accuracy  of its detection of the POSITIVE senti-
                        ment.

                     negative -> (double)
                        The level of confidence that Amazon Comprehend has  in
                        the  accuracy  of its detection of the NEGATIVE senti-
                        ment.

                     neutral -> (double)
                        The level of confidence that Amazon Comprehend has  in
                        the  accuracy  of  its detection of the NEUTRAL senti-
                        ment.

                     mixed -> (double)
                        The level of confidence that Amazon Comprehend has  in
                        the accuracy of its detection of the MIXED sentiment.

              intent -> (structure)
                 A  list  of  intents that might satisfy the user's utterance.
                 The intents are ordered by the confidence score.

                 name -> (string)
                     The name of the intent.

                 slots -> (map)
                     A map of all of the slots for the intent. The name of the
                     slot  maps  to  the  value of the slot. If a slot has not
                     been filled, the value is null.

                     key -> (string)

                     value -> (structure)
                        A value that Amazon Lex V2 uses to fulfill an intent.

                        value -> (structure)
                            The current value of the slot.

                            originalValue -> (string)
                               The text of the utterance from  the  user  that
                               was entered for the slot.

                            interpretedValue -> (string)
                               The value that Amazon Lex V2 determines for the
                               slot. The actual value depends on  the  setting
                               of  the  value  selection strategy for the bot.
                               You can choose to use the value entered by  the
                               user,  or you can have Amazon Lex V2 choose the
                               first value in the resolvedValues list.

                            resolvedValues -> (list)
                               A list of additional values that have been rec-
                               ognized for the slot.

                               (string)

                        shape -> (string)
                            When  the  shape value is List , it indicates that
                            the values field contains a list of  slot  values.
                            When  the  value is Scalar , it indicates that the
                            value field contains a single value.

                        values -> (list)
                            A list of one or more values that  the  user  pro-
                            vided  for  the slot. For example, if a for a slot
                            that elicits pizza toppings, the values  might  be
                            "pepperoni" and "pineapple."

                            (structure)
                               A  value  that Amazon Lex V2 uses to fulfill an
                               intent.

                               value -> (structure)
                                   The current value of the slot.

                                   originalValue -> (string)
                                      The text of the utterance from the  user
                                      that was entered for the slot.

                                   interpretedValue -> (string)
                                      The  value that Amazon Lex V2 determines
                                      for the slot. The actual  value  depends
                                      on  the  setting  of the value selection
                                      strategy for the bot. You can choose  to
                                      use  the  value  entered by the user, or
                                      you can have Amazon Lex  V2  choose  the
                                      first value in the resolvedValues list.

                                   resolvedValues -> (list)
                                      A  list  of  additional values that have
                                      been recognized for the slot.

                                      (string)

                               shape -> (string)
                                   When the shape value is List , it indicates
                                   that  the  values  field contains a list of
                                   slot values. When the value is Scalar ,  it
                                   indicates  that  the value field contains a
                                   single value.

                               values -> (list)
                                   A list of one or more values that the  user
                                   provided  for  the  slot. For example, if a
                                   for a slot that elicits pizza toppings, the
                                   values  might  be  "pepperoni" and "pineap-
                                   ple."

                                   ( ... recursive ... )

                               subSlots -> (map)
                                   The constituent sub slots  of  a  composite
                                   slot.

                                   key -> (string)

                                   ( ... recursive ... )

                        subSlots -> (map)
                            The constituent sub slots of a composite slot.

                            key -> (string)

                            value -> (structure)
                               A  value  that Amazon Lex V2 uses to fulfill an
                               intent.

                               value -> (structure)
                                   The current value of the slot.

                                   originalValue -> (string)
                                      The text of the utterance from the  user
                                      that was entered for the slot.

                                   interpretedValue -> (string)
                                      The  value that Amazon Lex V2 determines
                                      for the slot. The actual  value  depends
                                      on  the  setting  of the value selection
                                      strategy for the bot. You can choose  to
                                      use  the  value  entered by the user, or
                                      you can have Amazon Lex  V2  choose  the
                                      first value in the resolvedValues list.

                                   resolvedValues -> (list)
                                      A  list  of  additional values that have
                                      been recognized for the slot.

                                      (string)

                               shape -> (string)
                                   When the shape value is List , it indicates
                                   that  the  values  field contains a list of
                                   slot values. When the value is Scalar ,  it
                                   indicates  that  the value field contains a
                                   single value.

                               values -> (list)
                                   A list of one or more values that the  user
                                   provided  for  the  slot. For example, if a
                                   for a slot that elicits pizza toppings, the
                                   values  might  be  "pepperoni" and "pineap-
                                   ple."

                                   ( ... recursive ... )

                 state -> (string)
                     Contains fulfillment information for the intent.

                 confirmationState -> (string)
                     Contains information about whether fulfillment of the in-
                     tent has been confirmed.

       requestAttributes -> (map)
          The attributes sent in the request.

          key -> (string)

          value -> (string)

       sessionId -> (string)
          The identifier of the session in use.

       recognizedBotMember -> (structure)
          The bot member that recognized the text.

          botId -> (string)
              The identifier of the bot member that processes the request.

          botName -> (string)
              The name of the bot member that processes the request.



                                                              RECOGNIZE-TEXT()
