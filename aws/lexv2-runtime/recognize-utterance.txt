RECOGNIZE-UTTERANCE()                                    RECOGNIZE-UTTERANCE()



NAME
       recognize-utterance -

DESCRIPTION
       Sends user input to Amazon Lex V2. You can send text or speech. Clients
       use this API to send text and audio requests to Amazon Lex V2  at  run-
       time.  Amazon Lex V2 interprets the user input using the machine learn-
       ing model built for the bot.

       The following request fields must be  compressed  with  gzip  and  then
       base64 encoded before you send them to Amazon Lex V2.

       o requestAttributes

       o sessionState

       The following response fields are compressed using gzip and then base64
       encoded by Amazon Lex V2. Before you can use these fields, you must de-
       code and decompress them.

       o inputTranscript

       o interpretations

       o messages

       o requestAttributes

       o sessionState

       The  example  contains a Java application that compresses and encodes a
       Java object to send to Amazon Lex V2, and a second that decodes and de-
       compresses a response from Amazon Lex V2.

       If  the  optional  post-fulfillment response is specified, the messages
       are    returned    as    follows.    For    more    information,    see
       PostFulfillmentStatusSpecification .

       o Success  message - Returned if the Lambda function completes success-
         fully and the intent state is fulfilled or ready fulfillment  if  the
         message is present.

       o Failed  message  - The failed message is returned if the Lambda func-
         tion throws an exception or if the Lambda function returns  a  failed
         intent state without a message.

       o Timeout  message  -  If  you  don't configure a timeout message and a
         timeout, and the Lambda function doesn't return  within  30  seconds,
         the  timeout  message  is  returned.  If you configure a timeout, the
         timeout message is returned when the period times out.

       For more information, see Completion message .

       See also: AWS API Documentation

SYNOPSIS
            recognize-utterance
          --bot-id <value>
          --bot-alias-id <value>
          --locale-id <value>
          --session-id <value>
          [--session-state <value>]
          [--request-attributes <value>]
          --request-content-type <value>
          [--response-content-type <value>]
          [--input-stream <value>]
          <outfile>
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --bot-id (string)
          The identifier of the bot that should receive the request.

       --bot-alias-id (string)
          The alias identifier in use for the bot that should receive the  re-
          quest.

       --locale-id (string)
          The locale where the session is in use.

       --session-id (string)
          The identifier of the session in use.

       --session-state (string)
          Sets the state of the session with the user. You can use this to set
          the current intent, attributes, context, and dialog action. Use  the
          dialog  action  to determine the next step that Amazon Lex V2 should
          use in the conversation with the user.

          The sessionState field must be compressed using gzip and then base64
          encoded before sending to Amazon Lex V2.

       --request-attributes (string)
          Request-specific  information  passed between the client application
          and Amazon Lex V2

          The namespace x-amz-lex: is reserved for special  attributes.  Don't
          create any request attributes for prefix x-amz-lex: .

          The  requestAttributes  field must be compressed using gzip and then
          base64 encoded before sending to Amazon Lex V2.

       --request-content-type (string)
          Indicates the format for audio input or that the  content  is  text.
          The header must start with one of the following prefixes:

          o PCM format, audio data must be in little-endian byte order.

            o audio/l16; rate=16000; channels=1

            o audio/x-l16; sample-rate=16000; channel-count=1

            o audio/lpcm;    sample-rate=8000;    sample-size-bits=16;   chan-
              nel-count=1; is-big-endian=false

          o Opus format

            o audio/x-cbr-opus-with-preamble;pream-
              ble-size=0;bit-rate=256000;frame-size-milliseconds=4

          o Text format

            o text/plain; charset=utf-8

       --response-content-type (string)
          The message that Amazon Lex V2 returns in the response can be either
          text or speech based on the responseContentType value.

          o If the value is text/plain;charset=utf-8 , Amazon Lex  V2  returns
            text in the response.

          o If  the value begins with audio/ , Amazon Lex V2 returns speech in
            the response. Amazon Lex V2 uses  Amazon  Polly  to  generate  the
            speech  using  the configuration that you specified in the respon-
            seContentType parameter. For example, if you specify audio/mpeg as
            the value, Amazon Lex V2 returns speech in the MPEG format.

          o If the value is audio/pcm , the speech returned is audio/pcm at 16
            KHz in 16-bit, little-endian format.

          o The following are the accepted values:

            o audio/mpeg

            o audio/ogg

            o audio/pcm (16 KHz)

            o audio/* (defaults to mpeg)

            o text/plain; charset=utf-8

       --input-stream (streaming blob)
          User input in PCM or Opus audio format or text format  as  described
          in the requestContentType parameter.

          NOTE:
              This  argument is of type: streaming blob. Its value must be the
              path to a file (e.g. path/to/file) and must not be prefixed with
              file:// or fileb://

       outfile (string) Filename where the content will be saved

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       inputMode -> (string)
          Indicates  whether  the  input  mode  to  the  operation was text or
          speech.

       contentType -> (string)
          Content type as specified in the responseContentType in the request.

       messages -> (string)
          A list of messages that were last sent to the user. The messages are
          ordered  based on the order that you returned the messages from your
          Lambda function or the order that the messages are  defined  in  the
          bot.

          The  messages field is compressed with gzip and then base64 encoded.
          Before you can use the contents of the field, you  must  decode  and
          decompress  the  contents.  See the example for a simple function to
          decode and decompress the contents.

       interpretations -> (string)
          A list of intents that Amazon Lex V2 determined  might  satisfy  the
          user's utterance.

          Each  interpretation includes the intent, a score that indicates how
          confident Amazon Lex V2 is that the interpretation  is  the  correct
          one, and an optional sentiment response that indicates the sentiment
          expressed in the utterance.

          The interpretations field is compressed with gzip  and  then  base64
          encoded.  Before you can use the contents of the field, you must de-
          code and decompress the contents. See the example for a simple func-
          tion to decode and decompress the contents.

       sessionState -> (string)
          Represents  the current state of the dialog between the user and the
          bot.

          Use this to determine the progress of the conversation and what  the
          next action might be.

          The  sessionState  field is compressed with gzip and then base64 en-
          coded. Before you can use the contents of the field, you must decode
          and  decompress  the contents. See the example for a simple function
          to decode and decompress the contents.

       requestAttributes -> (string)
          The attributes sent in the request.

          The requestAttributes field is compressed with gzip and then  base64
          encoded.  Before you can use the contents of the field, you must de-
          code and decompress the contents.

       sessionId -> (string)
          The identifier of the session in use.

       inputTranscript -> (string)
          The text used to process the request.

          If the input was an audio stream, the inputTranscript field contains
          the  text  extracted from the audio stream. This is the text that is
          actually processed to recognize intents and slot values. You can use
          this information to determine if Amazon Lex V2 is correctly process-
          ing the audio that you send.

          The inputTranscript field is compressed with gzip  and  then  base64
          encoded.  Before you can use the contents of the field, you must de-
          code and decompress the contents. See the example for a simple func-
          tion to decode and decompress the contents.

       audioStream -> (streaming blob)
          The  prompt  or  statement to send to the user. This is based on the
          bot configuration and context. For example, if Amazon Lex V2 did not
          understand the user intent, it sends the clarificationPrompt config-
          ured for the bot. If the intent requires confirmation before  taking
          the  fulfillment  action,  it sends the confirmationPrompt . Another
          example: Suppose that the Lambda function successfully fulfilled the
          intent, and sent a message to convey to the user. Then Amazon Lex V2
          sends that message in the response.

       recognizedBotMember -> (string)
          The bot member that recognized the utterance.



                                                         RECOGNIZE-UTTERANCE()
