GET-KEY()                                                            GET-KEY()



NAME
       get-key -

DESCRIPTION
       Gets  the  key material for an Amazon Web Services Payment Cryptography
       key, including the immutable and mutable data specified  when  the  key
       was created.
          Cross-account  use:  This  operation  can't be used across different
          Amazon Web Services accounts.

          Related operations:

       o CreateKey

       o DeleteKey

       o ListKeys

       See also: AWS API Documentation

SYNOPSIS
            get-key
          --key-identifier <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --key-identifier (string)
          The KeyARN of the Amazon Web Services Payment Cryptography key.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To get the metadata of a key

       The  following  get-key example returns the metadata of the key associ-
       ated with the alias. This operation does not return cryptographic mate-
       rial.

          aws payment-cryptography get-key \
              --key-identifier alias/sampleAlias1

       Output:

          {
              "Key": {
                  "CreateTimestamp": "1686800690",
                  "DeletePendingTimestamp": "1687405998",
                  "Enabled": true,
                  "Exportable": true,
                  "KeyArn": "arn:aws:payment-cryptography:us-west-2:123456789012:key/kwapwa6qaifllw2h",
                  "KeyAttributes": {
                      "KeyAlgorithm": "TDES_2KEY",
                      "KeyClass": "SYMMETRIC_KEY",
                      "KeyModesOfUse": {
                          "Decrypt": false,
                          "DeriveKey": false,
                          "Encrypt": false,
                          "Generate": true,
                          "NoRestrictions": false,
                          "Sign": false,
                          "Unwrap": false,
                          "Verify": true,
                          "Wrap": false
                      },
                      "KeyUsage": "TR31_C0_CARD_VERIFICATION_KEY"
                  },
                  "KeyCheckValue": "F2E50F",
                  "KeyCheckValueAlgorithm": "ANSI_X9_24",
                  "KeyOrigin": "AWS_PAYMENT_CRYPTOGRAPHY",
                  "KeyState": "DELETE_PENDING",
                  "UsageStartTimestamp": "1686801190"
              }
          }

       For more information, see Get keys in the AWS Payment Cryptography User
       Guide.

OUTPUT
       Key -> (structure)
          The key material, including the immutable and mutable data  for  the
          key.

          KeyArn -> (string)
              The Amazon Resource Name (ARN) of the key.

          KeyAttributes -> (structure)
              The  role of the key, the algorithm it supports, and the crypto-
              graphic operations allowed with the key. This data is  immutable
              after the key is created.

              KeyUsage -> (string)
                 The  cryptographic  usage  of  an Amazon Web Services Payment
                 Cryptography key as dened in section A.5.2 of the TR-31 spec.

              KeyClass -> (string)
                 The type of Amazon Web Services Payment Cryptography  key  to
                 create,  which  determines  the  classication  of the crypto-
                 graphic method and whether Amazon Web Services Payment  Cryp-
                 tography  key  contains  a symmetric key or an asymmetric key
                 pair.

              KeyAlgorithm -> (string)
                 The key algorithm to be use during creation of an Amazon  Web
                 Services Payment Cryptography key.

                 For  symmetric keys, Amazon Web Services Payment Cryptography
                 supports AES and TDES algorithms. For asymmetric keys, Amazon
                 Web  Services  Payment Cryptography supports RSA and ECC_NIST
                 algorithms.

              KeyModesOfUse -> (structure)
                 The list of cryptographic operations that you can perform us-
                 ing the key.

                 Encrypt -> (boolean)
                     Species whether an Amazon Web Services Payment Cryptogra-
                     phy key can be used to encrypt data.

                 Decrypt -> (boolean)
                     Species whether an Amazon Web Services Payment Cryptogra-
                     phy key can be used to decrypt data.

                 Wrap -> (boolean)
                     Species whether an Amazon Web Services Payment Cryptogra-
                     phy key can be used to wrap other keys.

                 Unwrap -> (boolean)
                     Species whether an Amazon Web Services Payment Cryptogra-
                     phy key can be used to unwrap other keys.

                 Generate -> (boolean)
                     Species whether an Amazon Web Services Payment Cryptogra-
                     phy key can be used to generate and verify other card and
                     PIN verification keys.

                 Sign -> (boolean)
                     Species whether an Amazon Web Services Payment Cryptogra-
                     phy key can be used for signing.

                 Verify -> (boolean)
                     Species whether an Amazon Web Services Payment Cryptogra-
                     phy key can be used to verify signatures.

                 DeriveKey -> (boolean)
                     Species whether an Amazon Web Services Payment Cryptogra-
                     phy key can be used to derive new keys.

                 NoRestrictions -> (boolean)
                     Species whether an Amazon Web Services Payment Cryptogra-
                     phy  key  has  no special restrictions other than the re-
                     strictions implied by KeyUsage .

          KeyCheckValue -> (string)
              The key check value (KCV) is used to check if all parties  hold-
              ing  a  given  key have the same key or to detect that a key has
              changed.

          KeyCheckValueAlgorithm -> (string)
              The algorithm that Amazon Web Services Payment Cryptography uses
              to  calculate  the key check value (KCV). It is used to validate
              the key integrity.

              For TDES keys, the KCV is computed by encrypting 8  bytes,  each
              with value of zero, with the key to be checked and retaining the
              3 highest order bytes of the encrypted result. For AES keys, the
              KCV  is  computed using a CMAC algorithm where the input data is
              16 bytes of zero and retaining the 3 highest order bytes of  the
              encrypted result.

          Enabled -> (boolean)
              Specifies whether the key is enabled.

          Exportable -> (boolean)
              Specifies  whether the key is exportable. This data is immutable
              after the key is created.

          KeyState -> (string)
              The state of key that is being created or deleted.

          KeyOrigin -> (string)
              The source of the key material. For keys created  within  Amazon
              Web   Services  Payment  Cryptography,  the  value  is  AWS_PAY-
              MENT_CRYPTOGRAPHY . For keys imported into Amazon  Web  Services
              Payment Cryptography, the value is EXTERNAL .

          CreateTimestamp -> (timestamp)
              The date and time when the key was created.

          UsageStartTimestamp -> (timestamp)
              The  date and time after which Amazon Web Services Payment Cryp-
              tography will start using the key material for cryptographic op-
              erations.

          UsageStopTimestamp -> (timestamp)
              The  date and time after which Amazon Web Services Payment Cryp-
              tography will stop using the key material for cryptographic  op-
              erations.

          DeletePendingTimestamp -> (timestamp)
              The  date and time after which Amazon Web Services Payment Cryp-
              tography will delete the key. This value is  present  only  when
              KeyState  is  DELETE_PENDING  and the key is scheduled for dele-
              tion.

          DeleteTimestamp -> (timestamp)
              The date and time after which Amazon Web Services Payment  Cryp-
              tography  will  delete  the key. This value is present only when
              when the KeyState is DELETE_COMPLETE and the Amazon Web Services
              Payment Cryptography key is deleted.



                                                                     GET-KEY()
