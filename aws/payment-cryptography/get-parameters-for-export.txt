GET-PARAMETERS-FOR-EXPORT()                        GET-PARAMETERS-FOR-EXPORT()



NAME
       get-parameters-for-export -

DESCRIPTION
       Gets  the  export  token  and the signing key certificate to initiate a
       TR-34 key export from Amazon Web Services Payment Cryptography.

       The signing key certificate signs the wrapped key under  export  within
       the  TR-34  key  payload.  The export token and signing key certificate
       must be in place and operational before calling  ExportKey . The export
       token  expires  in  7 days. You can use the same export token to export
       multiple keys from your service account.
          Cross-account use: This operation can't  be  used  across  different
          Amazon Web Services accounts.

          Related operations:

       o ExportKey

       o GetParametersForImport

       See also: AWS API Documentation

SYNOPSIS
            get-parameters-for-export
          --key-material-type <value>
          --signing-key-algorithm <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --key-material-type (string)
          The  key block format type (for example, TR-34 or TR-31) to use dur-
          ing key material export. Export token is only required for  a  TR-34
          key  export, TR34_KEY_BLOCK . Export token is not required for TR-31
          key export.

          Possible values:

          o TR34_KEY_BLOCK

          o TR31_KEY_BLOCK

          o ROOT_PUBLIC_KEY_CERTIFICATE

          o TRUSTED_PUBLIC_KEY_CERTIFICATE

          o KEY_CRYPTOGRAM

       --signing-key-algorithm (string)
          The signing key algorithm to generate  a  signing  key  certificate.
          This certificate signs the wrapped key under export within the TR-34
          key block. RSA_2048 is the only signing key algorithm allowed.

          Possible values:

          o TDES_2KEY

          o TDES_3KEY

          o AES_128

          o AES_192

          o AES_256

          o RSA_2048

          o RSA_3072

          o RSA_4096

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To initialize the export process

       The following get-parameters-for-export example generates a  key  pair,
       signs the key, and then returns the certificate and certificate root.

          aws payment-cryptography get-parameters-for-export \
              --signing-key-algorithm RSA_2048 \
              --key-material-type TR34_KEY_BLOCK

       Output:

          {
              "ExportToken": "export-token-ep5cwyzune7oya53",
              "ParametersValidUntilTimestamp": "1687415640",
              "SigningKeyAlgorithm": "RSA_2048",
              "SigningKeyCertificate":

              "MIICiTCCAfICCQD6m7oRw0uXOjANBgkqhkiG9w0BAQUFADCBiDELMAkGA1UEBhMC
              VVMxCzAJBgNVBAgTAldBMRAwDgYDVQQHEwdTZWF0dGxlMQ8wDQYDVQQKEwZBbWF6
              b24xFDASBgNVBAsTC0lBTSBDb25zb2xlMRIwEAYDVQQDEwlUZXN0Q2lsYWMxHzAd
              BgkqhkiG9w0BCQEWEG5vb25lQGFtYXpvbi5jb20wHhcNMTEwNDI1MjA0NTIxWhcN
              MTIwNDI0MjA0NTIxWjCBiDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAldBMRAwDgYD
              VQQHEwdTZWF0dGxlMQ8wDQYDVQQKEwZBbWF6b24xFDASBgNVBAsTC0lBTSBDb25z
              b2xlMRIwEAYDVQQDEwlUZXN0Q2lsYWMxHzAdBgkqhkiG9w0BCQEWEG5vb25lQGFt
              YXpvbi5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMaK0dn+a4GmWIWJ
              21uUSfwfEvySWtC2XADZ4nB+BLYgVIk60CpiwsZ3G93vUEIO3IyNoH/f0wYK8m9T
              rDHudUZg3qX4waLG5M43q7Wgc/MbQITxOUSQv7c7ugFFDzQGBzZswY6786m86gpE
              Ibb3OhjZnzcvQAaRHhdlQWIMm2nrAgMBAAEwDQYJKoZIhvcNAQEFBQADgYEAtCu4
              nUhVVxYUntneD9+h8Mg9q6q+auNKyExzyLwaxlAoo7TJHidbtS4J5iNmZgXL0Fkb
              FFBjvSfpJIlJ00zbhNYS5f6GuoEDmFJl0ZxBHjJnyp378OD8uTs7fLvjx79LjSTb
              NYiytVbZPQUQ5Yaxu2jXnimvw3rrszlaEXAMPLE=",
              "SigningKeyCertificateChain":
              "NIICiTCCAfICCQD6m7oRw0uXOjANBgkqhkiG9w0BAQUFADCBiDELMAkGA1UEBhMC
              VVMxCzAJBgNVBAgTAldBMRAwDgYDVQQHEwdTZWF0dGxlMQ8wDQYDVQQKEwZBbWF6
              b24xFDASBgNVBAsTC0lBTSBDb25zb2xlMRIwEAYDVQQDEwlUZXN0Q2lsYWMxHzAd
              BgkqhkiG9w0BCQEWEG5vb25lQGFtYXpvbi5jb20wHhcNMTEwNDI1MjA0NTIxWhcN
              MTIwNDI0MjA0NTIxWjCBiDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAldBMRAwDgYD
              VQQHEwdTZWF0dGxlMQ8wDQYDVQQKEwZBbWF6b24xFDASBgNVBAsTC0lBTSBDb25z
              b2xlMRIwEAYDVQQDEwlUZXN0Q2lsYWMxHzAdBgkqhkiG9w0BCQEWEG5vb25lQGFt
              YXpvbi5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMaK0dn+a4GmWIWJ
              21uUSfwfEvySWtC2XADZ4nB+BLYgVIk60CpiwsZ3G93vUEIO3IyNoH/f0wYK8m9T
              rDHudUZg3qX4waLG5M43q7Wgc/MbQITxOUSQv7c7ugFFDzQGBzZswY6786m86gpE
              Ibb3OhjZnzcvQAaRHhdlQWIMm2nrAgMBAAEwDQYJKoZIhvcNAQEFBQADgYEAtCu4
              nUhVVxYUntneD9+h8Mg9q6q+auNKyExzyLwaxlAoo7TJHidbtS4J5iNmZgXL0Fkb
              FFBjvSfpJIlJ00zbhNYS5f6GuoEDmFJl0ZxBHjJnyp378OD8uTs7fLvjx79LjSTb
              NYiytVbZPQUQ5Yaxu2jXnimvw3rrszlaEXAMPLE="
          }

       For  more  information, see Export keys in the AWS Payment Cryptography
       User Guide.

OUTPUT
       ExportToken -> (string)
          The export token to initiate key export  from  Amazon  Web  Services
          Payment Cryptography. The export token expires after 7 days. You can
          use the same export token to export multiple keys from the same ser-
          vice account.

       ParametersValidUntilTimestamp -> (timestamp)
          The validity period of the export token.

       SigningKeyAlgorithm -> (string)
          The  algorithm  of  the signing key certificate for use in TR-34 key
          block generation. RSA_2048 is the only  signing  key  algorithm  al-
          lowed.

       SigningKeyCertificate -> (string)
          The  signing  key  certificate in PEM format (base64 encoded) of the
          public key for signature within the TR-34 key block. The certificate
          expires after 7 days.

       SigningKeyCertificateChain -> (string)
          The root certificate authority (CA) that signed the signing key cer-
          tificate in PEM format (base64 encoded).



                                                   GET-PARAMETERS-FOR-EXPORT()
