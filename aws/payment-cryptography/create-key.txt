CREATE-KEY()                                                      CREATE-KEY()



NAME
       create-key -

DESCRIPTION
       Creates an Amazon Web Services Payment Cryptography key, a logical rep-
       resentation of a cryptographic key, that is unique in your account  and
       Amazon  Web  Services  Region. You use keys for cryptographic functions
       such as encryption and decryption.

       In addition to the key material used in  cryptographic  operations,  an
       Amazon  Web Services Payment Cryptography key includes metadata such as
       the key ARN, key usage, key origin, creation date, description, and key
       state.

       When  you  create  a  key,  you specify both immutable and mutable data
       about the key. The immutable data contains key attributes  that  define
       the  scope  and cryptographic operations that you can perform using the
       key, for example key class (example:  SYMMETRIC_KEY  ),  key  algorithm
       (example: TDES_2KEY ), key usage (example: TR31_P0_PIN_ENCRYPTION_KEY )
       and key modes of use (example: Encrypt ). For information  about  valid
       combinations of key attributes, see Understanding key attributes in the
       Amazon Web Services Payment Cryptography User Guide . The mutable  data
       contained  within a key includes usage timestamp and key deletion time-
       stamp and can be modified after creation.

       Amazon Web Services Payment Cryptography binds key attributes  to  keys
       using  key  blocks  when  you store or export them. Amazon Web Services
       Payment Cryptography stores the key contents wrapped and  never  stores
       or transmits them in the clear.
          Cross-account  use  :  This operation can't be used across different
          Amazon Web Services accounts.

          Related operations:

       o DeleteKey

       o GetKey

       o ListKeys

       See also: AWS API Documentation

SYNOPSIS
            create-key
          --key-attributes <value>
          [--key-check-value-algorithm <value>]
          --exportable | --no-exportable
          [--enabled | --no-enabled]
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --key-attributes (structure)
          The role of the key, the algorithm  it  supports,  and  the  crypto-
          graphic  operations allowed with the key. This data is immutable af-
          ter the key is created.

          KeyUsage -> (string)
              The cryptographic usage of an Amazon Web Services Payment  Cryp-
              tography key as dened in section A.5.2 of the TR-31 spec.

          KeyClass -> (string)
              The type of Amazon Web Services Payment Cryptography key to cre-
              ate, which determines  the  classication  of  the  cryptographic
              method  and whether Amazon Web Services Payment Cryptography key
              contains a symmetric key or an asymmetric key pair.

          KeyAlgorithm -> (string)
              The key algorithm to be use during creation  of  an  Amazon  Web
              Services Payment Cryptography key.

              For  symmetric  keys,  Amazon  Web Services Payment Cryptography
              supports AES and TDES algorithms. For  asymmetric  keys,  Amazon
              Web  Services Payment Cryptography supports RSA and ECC_NIST al-
              gorithms.

          KeyModesOfUse -> (structure)
              The list of cryptographic operations that you can perform  using
              the key.

              Encrypt -> (boolean)
                 Species  whether  an Amazon Web Services Payment Cryptography
                 key can be used to encrypt data.

              Decrypt -> (boolean)
                 Species whether an Amazon Web Services  Payment  Cryptography
                 key can be used to decrypt data.

              Wrap -> (boolean)
                 Species  whether  an Amazon Web Services Payment Cryptography
                 key can be used to wrap other keys.

              Unwrap -> (boolean)
                 Species whether an Amazon Web Services  Payment  Cryptography
                 key can be used to unwrap other keys.

              Generate -> (boolean)
                 Species  whether  an Amazon Web Services Payment Cryptography
                 key can be used to generate and verify  other  card  and  PIN
                 verification keys.

              Sign -> (boolean)
                 Species  whether  an Amazon Web Services Payment Cryptography
                 key can be used for signing.

              Verify -> (boolean)
                 Species whether an Amazon Web Services  Payment  Cryptography
                 key can be used to verify signatures.

              DeriveKey -> (boolean)
                 Species  whether  an Amazon Web Services Payment Cryptography
                 key can be used to derive new keys.

              NoRestrictions -> (boolean)
                 Species whether an Amazon Web Services  Payment  Cryptography
                 key  has  no special restrictions other than the restrictions
                 implied by KeyUsage .

       Shorthand Syntax:

          KeyUsage=string,KeyClass=string,KeyAlgorithm=string,KeyModesOfUse={Encrypt=boolean,Decrypt=boolean,Wrap=boolean,Unwrap=boolean,Generate=boolean,Sign=boolean,Verify=boolean,DeriveKey=boolean,NoRestrictions=boolean}

       JSON Syntax:

          {
            "KeyUsage": "TR31_B0_BASE_DERIVATION_KEY"|"TR31_C0_CARD_VERIFICATION_KEY"|"TR31_D0_SYMMETRIC_DATA_ENCRYPTION_KEY"|"TR31_D1_ASYMMETRIC_KEY_FOR_DATA_ENCRYPTION"|"TR31_E0_EMV_MKEY_APP_CRYPTOGRAMS"|"TR31_E1_EMV_MKEY_CONFIDENTIALITY"|"TR31_E2_EMV_MKEY_INTEGRITY"|"TR31_E4_EMV_MKEY_DYNAMIC_NUMBERS"|"TR31_E5_EMV_MKEY_CARD_PERSONALIZATION"|"TR31_E6_EMV_MKEY_OTHER"|"TR31_K0_KEY_ENCRYPTION_KEY"|"TR31_K1_KEY_BLOCK_PROTECTION_KEY"|"TR31_K3_ASYMMETRIC_KEY_FOR_KEY_AGREEMENT"|"TR31_M3_ISO_9797_3_MAC_KEY"|"TR31_M1_ISO_9797_1_MAC_KEY"|"TR31_M6_ISO_9797_5_CMAC_KEY"|"TR31_M7_HMAC_KEY"|"TR31_P0_PIN_ENCRYPTION_KEY"|"TR31_P1_PIN_GENERATION_KEY"|"TR31_S0_ASYMMETRIC_KEY_FOR_DIGITAL_SIGNATURE"|"TR31_V1_IBM3624_PIN_VERIFICATION_KEY"|"TR31_V2_VISA_PIN_VERIFICATION_KEY"|"TR31_K2_TR34_ASYMMETRIC_KEY",
            "KeyClass": "SYMMETRIC_KEY"|"ASYMMETRIC_KEY_PAIR"|"PRIVATE_KEY"|"PUBLIC_KEY",
            "KeyAlgorithm": "TDES_2KEY"|"TDES_3KEY"|"AES_128"|"AES_192"|"AES_256"|"RSA_2048"|"RSA_3072"|"RSA_4096",
            "KeyModesOfUse": {
              "Encrypt": true|false,
              "Decrypt": true|false,
              "Wrap": true|false,
              "Unwrap": true|false,
              "Generate": true|false,
              "Sign": true|false,
              "Verify": true|false,
              "DeriveKey": true|false,
              "NoRestrictions": true|false
            }
          }

       --key-check-value-algorithm (string)
          The algorithm that Amazon Web Services Payment Cryptography uses  to
          calculate  the key check value (KCV). It is used to validate the key
          integrity.

          For TDES keys, the KCV is computed by encrypting 8 bytes, each  with
          value  of zero, with the key to be checked and retaining the 3 high-
          est order bytes of the encrypted result. For AES keys,  the  KCV  is
          computed  using a CMAC algorithm where the input data is 16 bytes of
          zero and retaining the 3 highest order bytes of  the  encrypted  re-
          sult.

          Possible values:

          o CMAC

          o ANSI_X9_24

       --exportable | --no-exportable (boolean)
          Specifies whether the key is exportable from the service.

       --enabled | --no-enabled (boolean)
          Specifies  whether  to  enable the key. If the key is enabled, it is
          activated for use within the service. If the  key  is  not  enabled,
          then it is created but not activated. The default value is enabled.

       --tags (list)
          Assigns one or more tags to the Amazon Web Services Payment Cryptog-
          raphy key. Use this parameter to tag a key when it  is  created.  To
          tag  an  existing  Amazon Web Services Payment Cryptography key, use
          the TagResource operation.

          Each tag consists of a tag key and a tag value. Both the tag key and
          the tag value are required, but the tag value can be an empty (null)
          string. You can't have more than one tag on an Amazon  Web  Services
          Payment Cryptography key with the same tag key.

          WARNING:
              Don't include personal, confidential or sensitive information in
              this field. This field may be displayed in plaintext  in  Cloud-
              Trail logs and other output.

          NOTE:
              Tagging or untagging an Amazon Web Services Payment Cryptography
              key can allow or deny permission to the key.

          (structure)
              A structure that contains information about a tag.

              Key -> (string)
                 The key of the tag.

              Value -> (string)
                 The value of the tag.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a key

       The following create-key example generates a 2KEY TDES key you can  use
       to generate and verify CVV/CVV2 values.

          aws payment-cryptography create-key \
              --exportable \
              --key-attributes KeyAlgorithm=TDES_2KEY, KeyUsage=TR31_C0_CARD_VERIFICATION_KEY,KeyClass=SYMMETRIC_KEY, KeyModesOfUse={Generate=true,Verify=true}

       Output:

          {
              "Key": {
                  "CreateTimestamp": "1686800690",
                  "Enabled": true,
                  "Exportable": true,
                  "KeyArn": "arn:aws:payment-cryptography:us-west-2:123456789012:key/kwapwa6qaifllw2h",
                  "KeyAttributes": {
                      "KeyAlgorithm": "TDES_2KEY",
                      "KeyClass": "SYMMETRIC_KEY",
                      "KeyModesOfUse": {
                          "Decrypt": false,
                          "DeriveKey": false,
                          "Encrypt": false,
                          "Generate": true,
                          "NoRestrictions": false,
                          "Sign": false,
                          "Unwrap": false,
                          "Verify": true,
                          "Wrap": false
                      },
                      "KeyUsage": "TR31_C0_CARD_VERIFICATION_KEY"
                  },
                  "KeyCheckValue": "F2E50F",
                  "KeyCheckValueAlgorithm": "ANSI_X9_24",
                  "KeyOrigin": "AWS_PAYMENT_CRYPTOGRAPHY",
                  "KeyState": "CREATE_COMPLETE",
                  "UsageStartTimestamp": "1686800690"
              }
          }

       For more information, see Generating keys in the AWS Payment Cryptogra-
       phy User Guide.

OUTPUT
       Key -> (structure)
          The key material that contains all the key attributes.

          KeyArn -> (string)
              The Amazon Resource Name (ARN) of the key.

          KeyAttributes -> (structure)
              The role of the key, the algorithm it supports, and the  crypto-
              graphic  operations allowed with the key. This data is immutable
              after the key is created.

              KeyUsage -> (string)
                 The cryptographic usage of an  Amazon  Web  Services  Payment
                 Cryptography key as dened in section A.5.2 of the TR-31 spec.

              KeyClass -> (string)
                 The  type  of Amazon Web Services Payment Cryptography key to
                 create, which determines  the  classication  of  the  crypto-
                 graphic  method and whether Amazon Web Services Payment Cryp-
                 tography key contains a symmetric key or  an  asymmetric  key
                 pair.

              KeyAlgorithm -> (string)
                 The  key algorithm to be use during creation of an Amazon Web
                 Services Payment Cryptography key.

                 For symmetric keys, Amazon Web Services Payment  Cryptography
                 supports AES and TDES algorithms. For asymmetric keys, Amazon
                 Web Services Payment Cryptography supports RSA  and  ECC_NIST
                 algorithms.

              KeyModesOfUse -> (structure)
                 The list of cryptographic operations that you can perform us-
                 ing the key.

                 Encrypt -> (boolean)
                     Species whether an Amazon Web Services Payment Cryptogra-
                     phy key can be used to encrypt data.

                 Decrypt -> (boolean)
                     Species whether an Amazon Web Services Payment Cryptogra-
                     phy key can be used to decrypt data.

                 Wrap -> (boolean)
                     Species whether an Amazon Web Services Payment Cryptogra-
                     phy key can be used to wrap other keys.

                 Unwrap -> (boolean)
                     Species whether an Amazon Web Services Payment Cryptogra-
                     phy key can be used to unwrap other keys.

                 Generate -> (boolean)
                     Species whether an Amazon Web Services Payment Cryptogra-
                     phy key can be used to generate and verify other card and
                     PIN verification keys.

                 Sign -> (boolean)
                     Species whether an Amazon Web Services Payment Cryptogra-
                     phy key can be used for signing.

                 Verify -> (boolean)
                     Species whether an Amazon Web Services Payment Cryptogra-
                     phy key can be used to verify signatures.

                 DeriveKey -> (boolean)
                     Species whether an Amazon Web Services Payment Cryptogra-
                     phy key can be used to derive new keys.

                 NoRestrictions -> (boolean)
                     Species whether an Amazon Web Services Payment Cryptogra-
                     phy key has no special restrictions other  than  the  re-
                     strictions implied by KeyUsage .

          KeyCheckValue -> (string)
              The  key check value (KCV) is used to check if all parties hold-
              ing a given key have the same key or to detect that  a  key  has
              changed.

          KeyCheckValueAlgorithm -> (string)
              The algorithm that Amazon Web Services Payment Cryptography uses
              to calculate the key check value (KCV). It is used  to  validate
              the key integrity.

              For  TDES  keys, the KCV is computed by encrypting 8 bytes, each
              with value of zero, with the key to be checked and retaining the
              3 highest order bytes of the encrypted result. For AES keys, the
              KCV is computed using a CMAC algorithm where the input  data  is
              16  bytes of zero and retaining the 3 highest order bytes of the
              encrypted result.

          Enabled -> (boolean)
              Specifies whether the key is enabled.

          Exportable -> (boolean)
              Specifies whether the key is exportable. This data is  immutable
              after the key is created.

          KeyState -> (string)
              The state of key that is being created or deleted.

          KeyOrigin -> (string)
              The  source  of the key material. For keys created within Amazon
              Web  Services  Payment  Cryptography,  the  value  is   AWS_PAY-
              MENT_CRYPTOGRAPHY  .  For keys imported into Amazon Web Services
              Payment Cryptography, the value is EXTERNAL .

          CreateTimestamp -> (timestamp)
              The date and time when the key was created.

          UsageStartTimestamp -> (timestamp)
              The date and time after which Amazon Web Services Payment  Cryp-
              tography will start using the key material for cryptographic op-
              erations.

          UsageStopTimestamp -> (timestamp)
              The date and time after which Amazon Web Services Payment  Cryp-
              tography  will stop using the key material for cryptographic op-
              erations.

          DeletePendingTimestamp -> (timestamp)
              The date and time after which Amazon Web Services Payment  Cryp-
              tography  will  delete  the key. This value is present only when
              KeyState is DELETE_PENDING and the key is  scheduled  for  dele-
              tion.

          DeleteTimestamp -> (timestamp)
              The  date and time after which Amazon Web Services Payment Cryp-
              tography will delete the key. This value is  present  only  when
              when the KeyState is DELETE_COMPLETE and the Amazon Web Services
              Payment Cryptography key is deleted.



                                                                  CREATE-KEY()
