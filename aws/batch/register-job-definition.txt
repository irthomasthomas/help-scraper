REGISTER-JOB-DEFINITION()                            REGISTER-JOB-DEFINITION()



NAME
       register-job-definition -

DESCRIPTION
       Registers an Batch job definition.

       See also: AWS API Documentation

SYNOPSIS
            register-job-definition
          --job-definition-name <value>
          --type <value>
          [--parameters <value>]
          [--scheduling-priority <value>]
          [--container-properties <value>]
          [--node-properties <value>]
          [--retry-strategy <value>]
          [--propagate-tags | --no-propagate-tags]
          [--timeout <value>]
          [--tags <value>]
          [--platform-capabilities <value>]
          [--eks-properties <value>]
          [--ecs-properties <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --job-definition-name (string)
          The name of the job definition to register. It can be up to 128 let-
          ters long. It can contain uppercase and lowercase letters,  numbers,
          hyphens (-), and underscores (_).

       --type (string)
          The  type  of  job definition. For more information about multi-node
          parallel jobs, see Creating a multi-node parallel job definition  in
          the Batch User Guide .

          o If the value is container , then one of the following is required:
            containerProperties , ecsProperties , or eksProperties .

          o If the value is multinode , then nodeProperties is required.

          NOTE:
              If the job is run on Fargate  resources,  then  multinode  isn't
              supported.

          Possible values:

          o container

          o multinode

       --parameters (map)
          Default  parameter substitution placeholders to set in the job defi-
          nition. Parameters are specified as a key-value pair mapping. Param-
          eters  in  a  SubmitJob request override any corresponding parameter
          defaults from the job definition.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --scheduling-priority (integer)
          The scheduling priority for jobs that are submitted  with  this  job
          definition.  This  only affects jobs in job queues with a fair share
          policy. Jobs with a higher scheduling priority are scheduled  before
          jobs with a lower scheduling priority.

          The  minimum supported value is 0 and the maximum supported value is
          9999.

       --container-properties (structure)
          An object with properties specific to Amazon  ECS-based  single-node
          container-based jobs. If the job definition's type parameter is con-
          tainer , then you must specify either containerProperties  or  node-
          Properties  .  This  must  not be specified for Amazon EKS-based job
          definitions.

          NOTE:
              If the job runs on Fargate resources, then you must not  specify
              nodeProperties ; use only containerProperties .

          image -> (string)
              Required.  The  image  used to start a container. This string is
              passed directly to the Docker daemon. Images in the  Docker  Hub
              registry are available by default. Other repositories are speci-
              fied with `` repository-url /image :tag `` . It can be 255 char-
              acters  long.  It  can  contain uppercase and lowercase letters,
              numbers, hyphens (-), underscores (_), colons (:), periods  (.),
              forward  slashes  (/), and number signs (#). This parameter maps
              to Image in the Create a container section of the Docker  Remote
              API and the IMAGE parameter of docker run .

              NOTE:
                 Docker  image architecture must match the processor architec-
                 ture of the compute resources that they're scheduled on.  For
                 example,  ARM-based  Docker  images can only run on ARM-based
                 compute resources.

              o Images in Amazon ECR Public repositories  use  the  full  reg-
                istry/repository[:tag]  or registry/repository[@digest] naming
                conventions. For example,
                ``
                public.ecr.aws/registry_alias /my-web-app :latest `` .

              System Message: WARNING/2 (<string>:, line 193)
                Inline literal start-string without end-string.

              o Images in Amazon ECR repositories use the  full  registry  and
                repository   URI   (for   example,   123456789012.dkr.ecr.<re-
                gion-name>.amazonaws.com/<repository-name> ).

              o Images in official repositories on Docker  Hub  use  a  single
                name (for example, ubuntu or mongo ).

              o Images  in other repositories on Docker Hub are qualified with
                an organization name (for example, amazon/amazon-ecs-agent ).

              o Images in other online repositories are qualified further by a
                domain name (for example, quay.io/assemblyline/ubuntu ).

          vcpus -> (integer)
              This  parameter is deprecated, use resourceRequirements to spec-
              ify the vCPU requirements for the job definition. It's not  sup-
              ported  for  jobs running on Fargate resources. For jobs running
              on Amazon EC2 resources, it specifies the number  of  vCPUs  re-
              served for the job.

              Each vCPU is equivalent to 1,024 CPU shares. This parameter maps
              to CpuShares in the Create a container section of the Docker Re-
              mote  API and the --cpu-shares option to docker run . The number
              of vCPUs must be specified  but  can  be  specified  in  several
              places. You must specify it at least once for each node.

          memory -> (integer)
              This  parameter is deprecated, use resourceRequirements to spec-
              ify the memory requirements for the  job  definition.  It's  not
              supported  for  jobs running on Fargate resources. For jobs that
              run on Amazon EC2 resources, it specifies the memory hard  limit
              (in  MiB)  for a container. If your container attempts to exceed
              the specified number, it's terminated. You must specify at least
              4  MiB of memory for a job using this parameter. The memory hard
              limit can be specified in several places. It must  be  specified
              for each node at least once.

          command -> (list)
              The  command that's passed to the container. This parameter maps
              to Cmd in the Create a container section of  the  Docker  Remote
              API  and the COMMAND parameter to docker run . For more informa-
              tion, see  https://docs.docker.com/engine/reference/builder/#cmd
              .

              (string)

          jobRoleArn -> (string)
              The  Amazon  Resource  Name  (ARN) of the IAM role that the con-
              tainer can assume for Amazon Web Services permissions. For  more
              information,  see IAM roles for tasks in the Amazon Elastic Con-
              tainer Service Developer Guide .

          executionRoleArn -> (string)
              The Amazon Resource Name (ARN) of the execution role that  Batch
              can  assume.  For  jobs  that run on Fargate resources, you must
              provide an execution role. For more information, see Batch  exe-
              cution IAM role in the Batch User Guide .

          volumes -> (list)
              A list of data volumes used in a job.

              (structure)
                 A data volume that's used in a job's container properties.

                 host -> (structure)
                     The contents of the host parameter determine whether your
                     data volume persists on the host container  instance  and
                     where  it's  stored. If the host parameter is empty, then
                     the Docker daemon assigns a host path for your data  vol-
                     ume.  However, the data isn't guaranteed to persist after
                     the containers that are associated with it stop running.

                     NOTE:
                        This parameter isn't applicable to jobs that are  run-
                        ning on Fargate resources and shouldn't be provided.

                     sourcePath -> (string)
                        The  path  on  the host container instance that's pre-
                        sented to the container. If this parameter  is  empty,
                        then  the  Docker  daemon has assigned a host path for
                        you. If this parameter contains a file location,  then
                        the  data volume persists at the specified location on
                        the host container instance until you delete it  manu-
                        ally. If the source path location doesn't exist on the
                        host container instance, the Docker daemon creates it.
                        If the location does exist, the contents of the source
                        path folder are exported.

                        NOTE:
                            This parameter isn't applicable to jobs  that  run
                            on Fargate resources. Don't provide this for these
                            jobs.

                 name -> (string)
                     The name of the volume. It can be up  to  255  characters
                     long.  It  can  contain  uppercase and lowercase letters,
                     numbers, hyphens (-), and underscores (_). This  name  is
                     referenced  in  the  sourceVolume  parameter of container
                     definition mountPoints .

                 efsVolumeConfiguration -> (structure)
                     This parameter is specified when you're using  an  Amazon
                     Elastic  File  System  file  system for job storage. Jobs
                     that are running on  Fargate  resources  must  specify  a
                     platformVersion of at least 1.4.0 .

                     fileSystemId -> (string)
                        The Amazon EFS file system ID to use.

                     rootDirectory -> (string)
                        The  directory  within  the  Amazon EFS file system to
                        mount as the root directory inside the host.  If  this
                        parameter  is omitted, the root of the Amazon EFS vol-
                        ume is used instead. Specifying / has the same  effect
                        as  omitting  this  parameter.  The  maximum length is
                        4,096 characters.

                        WARNING:
                            If an EFS access point is specified in the  autho-
                            rizationConfig , the root directory parameter must
                            either be omitted or set to / , which enforces the
                            path set on the Amazon EFS access point.

                     transitEncryption -> (string)
                        Determines whether to enable encryption for Amazon EFS
                        data in transit between the Amazon ECS  host  and  the
                        Amazon  EFS server. Transit encryption must be enabled
                        if Amazon EFS IAM authorization is used. If  this  pa-
                        rameter  is  omitted, the default value of DISABLED is
                        used. For more information,  see  Encrypting  data  in
                        transit in the Amazon Elastic File System User Guide .

                     transitEncryptionPort -> (integer)
                        The  port  to  use when sending encrypted data between
                        the Amazon ECS host and the Amazon EFS server. If  you
                        don't  specify  a transit encryption port, it uses the
                        port selection strategy  that  the  Amazon  EFS  mount
                        helper  uses.  The value must be between 0 and 65,535.
                        For more information, see EFS mount helper in the Ama-
                        zon Elastic File System User Guide .

                     authorizationConfig -> (structure)
                        The authorization configuration details for the Amazon
                        EFS file system.

                        accessPointId -> (string)
                            The Amazon EFS access point ID to use. If  an  ac-
                            cess  point is specified, the root directory value
                            specified in the EFSVolumeConfiguration  must  ei-
                            ther  be  omitted  or  set to / which enforces the
                            path set on the EFS access  point.  If  an  access
                            point  is used, transit encryption must be enabled
                            in the EFSVolumeConfiguration . For more  informa-
                            tion, see Working with Amazon EFS access points in
                            the Amazon Elastic File System User Guide .

                        iam -> (string)
                            Whether or not to use the Batch job IAM  role  de-
                            fined in a job definition when mounting the Amazon
                            EFS file system. If  enabled,  transit  encryption
                            must be enabled in the EFSVolumeConfiguration . If
                            this parameter is omitted, the  default  value  of
                            DISABLED  is used. For more information, see Using
                            Amazon EFS access points in the Batch User Guide .
                            EFS IAM authorization requires that TransitEncryp-
                            tion be ENABLED and that a  JobRoleArn  is  speci-
                            fied.

          environment -> (list)
              The environment variables to pass to a container. This parameter
              maps to Env in the Create a container section of the Docker  Re-
              mote API and the --env option to docker run .

              WARNING:
                 We  don't recommend using plaintext environment variables for
                 sensitive information, such as credential data.

              NOTE:
                 Environment variables cannot start with  "AWS_BATCH  ".  This
                 naming convention is reserved for variables that Batch sets.

              (structure)
                 A key-value pair object.

                 name -> (string)
                     The  name  of  the  key-value pair. For environment vari-
                     ables, this is the name of the environment variable.

                 value -> (string)
                     The value of the key-value pair.  For  environment  vari-
                     ables, this is the value of the environment variable.

          mountPoints -> (list)
              The mount points for data volumes in your container. This param-
              eter maps to Volumes in the Create a container  section  of  the
              Docker Remote API and the --volume option to docker run .

              (structure)
                 Details  for  a  Docker  volume  mount point that's used in a
                 job's container properties. This parameter maps to Volumes in
                 the  Create  a container section of the Docker Remote API and
                 the --volume option to docker run.

                 containerPath -> (string)
                     The path on  the  container  where  the  host  volume  is
                     mounted.

                 readOnly -> (boolean)
                     If  this  value is true , the container has read-only ac-
                     cess to the volume. Otherwise, the container can write to
                     the volume. The default value is false .

                 sourceVolume -> (string)
                     The name of the volume to mount.

          readonlyRootFilesystem -> (boolean)
              When  this  parameter  is true, the container is given read-only
              access to its root file system. This parameter maps to Readonly-
              Rootfs  in  the  Create a container section of the Docker Remote
              API and the --read-only option to docker run .

          privileged -> (boolean)
              When this parameter is true, the  container  is  given  elevated
              permissions  on the host container instance (similar to the root
              user). This parameter maps to Privileged in the  Create  a  con-
              tainer section of the Docker Remote API and the --privileged op-
              tion to docker run . The default value is false.

              NOTE:
                 This parameter isn't applicable to jobs that are  running  on
                 Fargate  resources and shouldn't be provided, or specified as
                 false.

          ulimits -> (list)
              A list of ulimits to set in the container. This  parameter  maps
              to  Ulimits  in the Create a container section of the Docker Re-
              mote API and the --ulimit option to docker run .

              NOTE:
                 This parameter isn't applicable to jobs that are  running  on
                 Fargate resources and shouldn't be provided.

              (structure)
                 The ulimit settings to pass to the container. For more infor-
                 mation, see Ulimit .

                 NOTE:
                     This object isn't applicable to jobs that are running  on
                     Fargate resources.

                 hardLimit -> (integer)
                     The hard limit for the ulimit type.

                 name -> (string)
                     The  type  of the ulimit . Valid values are: core | cpu |
                     data | fsize | locks | memlock | msgqueue | nice | nofile
                     | nproc | rss | rtprio | rttime | sigpending | stack .

                 softLimit -> (integer)
                     The soft limit for the ulimit type.

          user -> (string)
              The  user  name to use inside the container. This parameter maps
              to User in the Create a container section of the  Docker  Remote
              API and the --user option to docker run .

          instanceType -> (string)
              The instance type to use for a multi-node parallel job. All node
              groups in a multi-node parallel job must use the  same  instance
              type.

              NOTE:
                 This parameter isn't applicable to single-node container jobs
                 or jobs that run on Fargate resources, and shouldn't be  pro-
                 vided.

          resourceRequirements -> (list)
              The  type  and amount of resources to assign to a container. The
              supported resources include GPU , MEMORY , and VCPU .

              (structure)
                 The type and amount of a resource to assign to  a  container.
                 The supported resources include GPU , MEMORY , and VCPU .

                 value -> (string)
                     The quantity of the specified resource to reserve for the
                     container. The values vary based on the type specified.
                        type="GPU"

                     The number of physical GPUs to reserve for the container.
                     Make  sure  that the number of GPUs reserved for all con-
                     tainers in a job doesn't exceed the number  of  available
                     GPUs on the compute resource that the job is launched on.

                     NOTE:
                        GPUs  aren't  available  for  jobs that are running on
                        Fargate resources.

                        type="MEMORY"

                     The memory hard limit (in MiB) present to the  container.
                     This  parameter is supported for jobs that are running on
                     Amazon EC2 resources. If your container attempts  to  ex-
                     ceed  the  memory specified, the container is terminated.
                     This parameter maps to Memory in the Create  a  container
                     section  of the Docker Remote API and the --memory option
                     to docker run . You must specify at least 4 MiB of memory
                     for  a job. This is required but can be specified in sev-
                     eral places for multi-node parallel (MNP) jobs.  It  must
                     be  specified for each node at least once. This parameter
                     maps to Memory in the Create a container section  of  the
                     Docker Remote API and the --memory option to docker run .

                     NOTE:
                        If you're trying to maximize your resource utilization
                        by providing your jobs as much memory as possible  for
                        a  particular  instance type, see Memory management in
                        the Batch User Guide .

                     For jobs that are  running  on  Fargate  resources,  then
                     value  is  the hard limit (in MiB), and must match one of
                     the supported values and the VCPU values must be  one  of
                     the values supported for that memory value.
                            value = 512

                        VCPU = 0.25
                            value = 1024

                        VCPU = 0.25 or 0.5
                            value = 2048

                        VCPU = 0.25, 0.5, or 1
                            value = 3072

                        VCPU = 0.5, or 1
                            value = 4096

                        VCPU = 0.5, 1, or 2
                            value = 5120, 6144, or 7168

                        VCPU = 1 or 2
                            value = 8192

                        VCPU = 1, 2, or 4
                            value  =  9216, 10240, 11264, 12288, 13312, 14336,
                            or 15360

                        VCPU = 2 or 4
                            value = 16384

                        VCPU = 2, 4, or 8
                            value = 17408, 18432, 19456, 21504, 22528,  23552,
                            25600, 26624, 27648, 29696, or 30720

                        VCPU = 4
                            value = 20480, 24576, or 28672

                        VCPU = 4 or 8
                            value = 36864, 45056, 53248, or 61440

                        VCPU = 8
                            value = 32768, 40960, 49152, or 57344

                        VCPU = 8 or 16
                            value = 65536, 73728, 81920, 90112, 98304, 106496,
                            114688, or 122880

                        VCPU = 16
                            type="VCPU"

                     The number of vCPUs reserved for the container. This  pa-
                     rameter  maps to CpuShares in the Create a container sec-
                     tion of the Docker Remote API and the --cpu-shares option
                     to  docker  run  .  Each  vCPU is equivalent to 1,024 CPU
                     shares. For Amazon EC2 resources,  you  must  specify  at
                     least  one vCPU. This is required but can be specified in
                     several places; it must be specified  for  each  node  at
                     least once.

                     The default for the Fargate On-Demand vCPU resource count
                     quota is 6 vCPUs. For more information about Fargate quo-
                     tas,  see  Fargate quotas in the Amazon Web Services Gen-
                     eral Reference .

                     For jobs that are  running  on  Fargate  resources,  then
                     value must match one of the supported values and the MEM-
                     ORY values must be one of the values supported  for  that
                     VCPU  value. The supported values are 0.25, 0.5, 1, 2, 4,
                     8, and 16
                            value = 0.25

                        MEMORY = 512, 1024, or 2048
                            value = 0.5

                        MEMORY = 1024, 2048, 3072, or 4096
                            value = 1

                        MEMORY = 2048, 3072, 4096, 5120, 6144, 7168, or 8192
                            value = 2

                        MEMORY = 4096, 5120, 6144, 7168,  8192,  9216,  10240,
                        11264, 12288, 13312, 14336, 15360, or 16384
                            value = 4

                        MEMORY  =  8192,  9216,  10240,  11264,  12288, 13312,
                        14336,  15360,  16384,  17408,  18432,  19456,  20480,
                        21504,  22528,  23552,  24576,  25600,  26624,  27648,
                        28672, 29696, or 30720
                            value = 8

                        MEMORY = 16384, 20480,  24576,  28672,  32768,  36864,
                        40960, 45056, 49152, 53248, 57344, or 61440
                            value = 16

                        MEMORY  =  32768,  40960,  49152, 57344, 65536, 73728,
                        81920, 90112, 98304, 106496, 114688, or 122880

                 type -> (string)
                     The type of resource to assign to a container.  The  sup-
                     ported resources include GPU , MEMORY , and VCPU .

          linuxParameters -> (structure)
              Linux-specific  modifications that are applied to the container,
              such as details for device mappings.

              devices -> (list)
                 Any of the host devices to expose to the container. This  pa-
                 rameter  maps to Devices in the Create a container section of
                 the Docker Remote API and the --device option to docker run .

                 NOTE:
                     This parameter isn't applicable to jobs that are  running
                     on Fargate resources. Don't provide it for these jobs.

                 (structure)
                     An  object  that represents a container instance host de-
                     vice.

                     NOTE:
                        This object isn't applicable to jobs that are  running
                        on Fargate resources and shouldn't be provided.

                     hostPath -> (string)
                        The  path  for  the  device  on the host container in-
                        stance.

                     containerPath -> (string)
                        The path inside the container that's  used  to  expose
                        the  host  device.  By  default, the hostPath value is
                        used.

                     permissions -> (list)
                        The explicit permissions to provide to  the  container
                        for  the device. By default, the container has permis-
                        sions for read , write , and mknod for the device.

                        (string)

              initProcessEnabled -> (boolean)
                 If true, run an init process inside the container  that  for-
                 wards signals and reaps processes. This parameter maps to the
                 --init option to docker run . This parameter requires version
                 1.25  of  the  Docker Remote API or greater on your container
                 instance. To check the Docker Remote API version on your con-
                 tainer  instance,  log  in to your container instance and run
                 the following command: sudo docker version | grep "Server API
                 version"

              sharedMemorySize -> (integer)
                 The  value for the size (in MiB) of the /dev/shm volume. This
                 parameter maps to the --shm-size option to docker run .

                 NOTE:
                     This parameter isn't applicable to jobs that are  running
                     on Fargate resources. Don't provide it for these jobs.

              tmpfs -> (list)
                 The  container  path, mount options, and size (in MiB) of the
                 tmpfs mount. This parameter maps to  the  --tmpfs  option  to
                 docker run .

                 NOTE:
                     This  parameter isn't applicable to jobs that are running
                     on Fargate resources. Don't provide  this  parameter  for
                     this resource type.

                 (structure)
                     The  container path, mount options, and size of the tmpfs
                     mount.

                     NOTE:
                        This object isn't applicable to jobs that are  running
                        on Fargate resources.

                     containerPath -> (string)
                        The  absolute  file  path  in  the container where the
                        tmpfs volume is mounted.

                     size -> (integer)
                        The size (in MiB) of the tmpfs volume.

                     mountOptions -> (list)
                        The list of tmpfs volume mount options.

                        Valid values: "defaults " | "ro " | "rw " | "suid "  |
                        "nosuid  " | "dev " | "nodev " | "exec " | "noexec " |
                        "sync " | "async " | "dirsync " | "remount " | "mand "
                        |  "nomand  "  | "atime " | "noatime " | "diratime " |
                        "nodiratime " | "bind " |  "rbind"  |  "unbindable"  |
                        "runbindable"  |  "private"  | "rprivate" | "shared" |
                        "rshared" | "slave" | "rslave" | "relatime " |  "nore-
                        latime " | "strictatime " | "nostrictatime " | "mode "
                        | "uid " | "gid " | "nr_inodes  "  |  "nr_blocks  "  |
                        "mpol "

                        (string)

              maxSwap -> (integer)
                 The total amount of swap memory (in MiB) a container can use.
                 This parameter is translated to the --memory-swap  option  to
                 docker run where the value is the sum of the container memory
                 plus the maxSwap value. For more information,  see  `  --mem-
                 ory-swap                      details                      <-
                 https://docs.docker.com/config/containers/resource_con-
                 straints/#--memory-swap-details>`__  in the Docker documenta-
                 tion.

                 If a maxSwap value of 0 is specified, the  container  doesn't
                 use  swap.  Accepted values are 0 or any positive integer. If
                 the maxSwap parameter is omitted, the container  doesn't  use
                 the  swap  configuration for the container instance that it's
                 running on. A maxSwap value must be set  for  the  swappiness
                 parameter to be used.

                 NOTE:
                     This  parameter isn't applicable to jobs that are running
                     on Fargate resources. Don't provide it for these jobs.

              swappiness -> (integer)
                 You can use this parameter to tune a container's memory swap-
                 piness  behavior.  A swappiness value of 0 causes swapping to
                 not occur unless absolutely necessary. A swappiness value  of
                 100 causes pages to be swapped aggressively. Valid values are
                 whole numbers between 0 and 100 . If the swappiness parameter
                 isn't  specified,  a  default value of 60 is used. If a value
                 isn't specified for maxSwap , then this parameter is ignored.
                 If  maxSwap is set to 0, the container doesn't use swap. This
                 parameter maps to the --memory-swappiness  option  to  docker
                 run .

                 Consider the following when you use a per-container swap con-
                 figuration.

                 o Swap space must be enabled and allocated on  the  container
                   instance for the containers to use.

                 NOTE:
                     By default, the Amazon ECS optimized AMIs don't have swap
                     enabled. You must enable swap on the instance to use this
                     feature.  For  more  information, see Instance store swap
                     volumes in the Amazon EC2 User Guide for Linux  Instances
                     or  How  do I allocate memory to work as swap space in an
                     Amazon EC2 instance by using a swap file?

                 o The swap space parameters are only supported for job  defi-
                   nitions using EC2 resources.

                 o If the maxSwap and swappiness parameters are omitted from a
                   job definition, each container  has  a  default  swappiness
                   value  of  60. Moreover, the total swap usage is limited to
                   two times the memory reservation of the container.

                 NOTE:
                     This parameter isn't applicable to jobs that are  running
                     on Fargate resources. Don't provide it for these jobs.

          logConfiguration -> (structure)
              The log configuration specification for the container.

              This  parameter maps to LogConfig in the Create a container sec-
              tion of the Docker Remote API and  the  --log-driver  option  to
              docker  run . By default, containers use the same logging driver
              that the Docker daemon uses. However the container might  use  a
              different  logging driver than the Docker daemon by specifying a
              log driver with this parameter in the container  definition.  To
              use  a  different logging driver for a container, the log system
              must be configured properly on the container instance (or  on  a
              different  log  server for remote logging options). For more in-
              formation on the options for different  supported  log  drivers,
              see Configure logging drivers in the Docker documentation.

              NOTE:
                 Batch  currently  supports  a  subset  of the logging drivers
                 available to the Docker daemon (shown in the LogConfiguration
                 data type).

              This parameter requires version 1.18 of the Docker Remote API or
              greater on your container instance. To check the  Docker  Remote
              API version on your container instance, log in to your container
              instance and run the following command: sudo  docker  version  |
              grep "Server API version"

              NOTE:
                 The  Amazon  ECS  container  agent running on a container in-
                 stance must register the logging drivers  available  on  that
                 instance  with  the ECS_AVAILABLE_LOGGING_DRIVERS environment
                 variable before containers placed on that  instance  can  use
                 these  log  configuration  options. For more information, see
                 Amazon ECS container agent configuration in the Amazon  Elas-
                 tic Container Service Developer Guide .

              logDriver -> (string)
                 The  log  driver  to  use for the container. The valid values
                 that are listed for this parameter are log drivers  that  the
                 Amazon ECS container agent can communicate with by default.

                 The  supported  log  drivers  are  awslogs , fluentd , gelf ,
                 json-file , journald , logentries , syslog , and splunk .

                 NOTE:
                     Jobs that are running on Fargate resources are restricted
                     to the awslogs and splunk log drivers.

                     awslogs

                 Specifies the Amazon CloudWatch Logs logging driver. For more
                 information, see Using the awslogs log driver  in  the  Batch
                 User  Guide  and Amazon CloudWatch Logs logging driver in the
                 Docker documentation.
                     fluentd

                 Specifies the Fluentd logging driver.  For  more  information
                 including  usage  and  options, see Fluentd logging driver in
                 the Docker documentation .
                     gelf

                 Specifies the Graylog Extended Format (GELF) logging  driver.
                 For more information including usage and options, see Graylog
                 Extended Format logging driver in the Docker documentation .
                     journald

                 Specifies the journald logging driver. For  more  information
                 including  usage  and options, see Journald logging driver in
                 the Docker documentation .
                     json-file

                 Specifies the JSON file logging driver. For more  information
                 including  usage and options, see JSON File logging driver in
                 the Docker documentation .
                     splunk

                 Specifies the Splunk logging driver. For more information in-
                 cluding  usage  and options, see Splunk logging driver in the
                 Docker documentation .
                     syslog

                 Specifies the syslog logging driver. For more information in-
                 cluding  usage  and options, see Syslog logging driver in the
                 Docker documentation .

                 NOTE:
                     If you have a custom driver  that's  not  listed  earlier
                     that  you  want  to  work  with  the Amazon ECS container
                     agent, you  can  fork  the  Amazon  ECS  container  agent
                     project  that's  available  on GitHub and customize it to
                     work with that driver. We encourage you  to  submit  pull
                     requests for changes that you want to have included. How-
                     ever, Amazon Web Services doesn't currently support  run-
                     ning modified copies of this software.

                 This parameter requires version 1.18 of the Docker Remote API
                 or greater on your container instance. To  check  the  Docker
                 Remote API version on your container instance, log in to your
                 container instance and run the following command: sudo docker
                 version | grep "Server API version"

              options -> (map)
                 The configuration options to send to the log driver. This pa-
                 rameter requires version 1.19 of the  Docker  Remote  API  or
                 greater  on  your container instance. To check the Docker Re-
                 mote API version on your container instance, log in  to  your
                 container instance and run the following command: sudo docker
                 version | grep "Server API version"

                 key -> (string)

                 value -> (string)

              secretOptions -> (list)
                 The secrets to pass to the log configuration. For more infor-
                 mation, see Specifying sensitive data in the Batch User Guide
                 .

                 (structure)
                     An object that represents the secret to  expose  to  your
                     container.  Secrets  can be exposed to a container in the
                     following ways:

                     o To inject sensitive data into your containers as  envi-
                       ronment variables, use the secrets container definition
                       parameter.

                     o To reference sensitive information in the log  configu-
                       ration  of a container, use the secretOptions container
                       definition parameter.

                     For more information, see Specifying  sensitive  data  in
                     the Batch User Guide .

                     name -> (string)
                        The name of the secret.

                     valueFrom -> (string)
                        The  secret  to expose to the container. The supported
                        values are either the full Amazon Resource Name  (ARN)
                        of  the  Secrets Manager secret or the full ARN of the
                        parameter in the Amazon Web Services  Systems  Manager
                        Parameter Store.

                        NOTE:
                            If the Amazon Web Services Systems Manager Parame-
                            ter Store parameter exists in the same  Region  as
                            the  job you're launching, then you can use either
                            the full Amazon Resource Name (ARN) or name of the
                            parameter.  If the parameter exists in a different
                            Region, then the full ARN must be specified.

          secrets -> (list)
              The  secrets  for  the  container.  For  more  information,  see
              Specifying sensitive data in the Batch User Guide .

              (structure)
                 An  object  that represents the secret to expose to your con-
                 tainer. Secrets can be exposed to a container in the  follow-
                 ing ways:

                 o To  inject  sensitive data into your containers as environ-
                   ment variables, use the secrets container definition param-
                   eter.

                 o To reference sensitive information in the log configuration
                   of a container, use the secretOptions container  definition
                   parameter.

                 For  more  information,  see Specifying sensitive data in the
                 Batch User Guide .

                 name -> (string)
                     The name of the secret.

                 valueFrom -> (string)
                     The secret to expose to the container. The supported val-
                     ues are either the full Amazon Resource Name (ARN) of the
                     Secrets Manager secret or the full ARN of  the  parameter
                     in  the  Amazon  Web  Services  Systems Manager Parameter
                     Store.

                     NOTE:
                        If the Amazon Web Services Systems  Manager  Parameter
                        Store  parameter  exists in the same Region as the job
                        you're launching, then you can  use  either  the  full
                        Amazon  Resource  Name (ARN) or name of the parameter.
                        If the parameter exists in a  different  Region,  then
                        the full ARN must be specified.

          networkConfiguration -> (structure)
              The  network  configuration for jobs that are running on Fargate
              resources. Jobs that are running on Amazon  EC2  resources  must
              not specify this parameter.

              assignPublicIp -> (string)
                 Indicates  whether the job has a public IP address. For a job
                 that's running on Fargate resources in a  private  subnet  to
                 send  outbound  traffic to the internet (for example, to pull
                 container images), the private subnet requires a NAT  gateway
                 be  attached  to route requests to the internet. For more in-
                 formation, see Amazon ECS task networking in the Amazon Elas-
                 tic  Container Service Developer Guide . The default value is
                 "DISABLED ".

          fargatePlatformConfiguration -> (structure)
              The platform configuration for jobs that are running on  Fargate
              resources.  Jobs  that  are running on Amazon EC2 resources must
              not specify this parameter.

              platformVersion -> (string)
                 The Fargate platform version where the jobs  are  running.  A
                 platform  version is specified only for jobs that are running
                 on Fargate resources. If  one  isn't  specified,  the  LATEST
                 platform  version is used by default. This uses a recent, ap-
                 proved version of the Fargate platform for compute resources.
                 For  more  information,  see Fargate platform versions in the
                 Amazon Elastic Container Service Developer Guide .

          ephemeralStorage -> (structure)
              The amount of ephemeral storage to allocate for the  task.  This
              parameter  is used to expand the total amount of ephemeral stor-
              age available, beyond the default amount, for  tasks  hosted  on
              Fargate.

              sizeInGiB -> (integer)
                 The total amount, in GiB, of ephemeral storage to set for the
                 task. The minimum supported value is 21 GiB and  the  maximum
                 supported value is 200 GiB.

          runtimePlatform -> (structure)
              An  object  that represents the compute environment architecture
              for Batch jobs on Fargate.

              operatingSystemFamily -> (string)
                 The operating system for the compute environment. Valid  val-
                 ues  are:  LINUX  (default),  WINDOWS_SERVER_2019_CORE , WIN-
                 DOWS_SERVER_2019_FULL , WINDOWS_SERVER_2022_CORE ,  and  WIN-
                 DOWS_SERVER_2022_FULL .

                 NOTE:
                     The following parameters cant be set for Windows contain-
                     ers: linuxParameters , privileged  ,  user  ,  ulimits  ,
                     readonlyRootFilesystem , and efsVolumeConfiguration .

                 NOTE:
                     The  Batch Scheduler checks the compute environments that
                     are attached to the job queue before registering  a  task
                     definition  with Fargate. In this scenario, the job queue
                     is where the job is submitted. If the job requires a Win-
                     dows container and the first compute environment is LINUX
                     , the compute environment is skipped and the next compute
                     environment  is checked until a Windows-based compute en-
                     vironment is found.

                 NOTE:
                     Fargate Spot is not supported for ARM64 and Windows-based
                     containers  on  Fargate. A job queue will be blocked if a
                     Fargate ARM64 or Windows job is submitted to a job  queue
                     with only Fargate Spot compute environments. However, you
                     can attach both FARGATE and FARGATE_SPOT compute environ-
                     ments to the same job queue.

              cpuArchitecture -> (string)
                 The  vCPU  architecture.  The default value is X86_64 . Valid
                 values are X86_64 and ARM64 .

                 NOTE:
                     This parameter must be set to X86_64 for Windows contain-
                     ers.

                 NOTE:
                     Fargate Spot is not supported for ARM64 and Windows-based
                     containers on Fargate. A job queue will be blocked  if  a
                     Fargate  ARM64 or Windows job is submitted to a job queue
                     with only Fargate Spot compute environments. However, you
                     can attach both FARGATE and FARGATE_SPOT compute environ-
                     ments to the same job queue.

          repositoryCredentials -> (structure)
              The private repository authentication credentials to use.

              credentialsParameter -> (string)
                 The Amazon Resource Name (ARN) of the secret  containing  the
                 private repository credentials.

       JSON Syntax:

          {
            "image": "string",
            "vcpus": integer,
            "memory": integer,
            "command": ["string", ...],
            "jobRoleArn": "string",
            "executionRoleArn": "string",
            "volumes": [
              {
                "host": {
                  "sourcePath": "string"
                },
                "name": "string",
                "efsVolumeConfiguration": {
                  "fileSystemId": "string",
                  "rootDirectory": "string",
                  "transitEncryption": "ENABLED"|"DISABLED",
                  "transitEncryptionPort": integer,
                  "authorizationConfig": {
                    "accessPointId": "string",
                    "iam": "ENABLED"|"DISABLED"
                  }
                }
              }
              ...
            ],
            "environment": [
              {
                "name": "string",
                "value": "string"
              }
              ...
            ],
            "mountPoints": [
              {
                "containerPath": "string",
                "readOnly": true|false,
                "sourceVolume": "string"
              }
              ...
            ],
            "readonlyRootFilesystem": true|false,
            "privileged": true|false,
            "ulimits": [
              {
                "hardLimit": integer,
                "name": "string",
                "softLimit": integer
              }
              ...
            ],
            "user": "string",
            "instanceType": "string",
            "resourceRequirements": [
              {
                "value": "string",
                "type": "GPU"|"VCPU"|"MEMORY"
              }
              ...
            ],
            "linuxParameters": {
              "devices": [
                {
                  "hostPath": "string",
                  "containerPath": "string",
                  "permissions": ["READ"|"WRITE"|"MKNOD", ...]
                }
                ...
              ],
              "initProcessEnabled": true|false,
              "sharedMemorySize": integer,
              "tmpfs": [
                {
                  "containerPath": "string",
                  "size": integer,
                  "mountOptions": ["string", ...]
                }
                ...
              ],
              "maxSwap": integer,
              "swappiness": integer
            },
            "logConfiguration": {
              "logDriver": "json-file"|"syslog"|"journald"|"gelf"|"fluentd"|"awslogs"|"splunk",
              "options": {"string": "string"
                ...},
              "secretOptions": [
                {
                  "name": "string",
                  "valueFrom": "string"
                }
                ...
              ]
            },
            "secrets": [
              {
                "name": "string",
                "valueFrom": "string"
              }
              ...
            ],
            "networkConfiguration": {
              "assignPublicIp": "ENABLED"|"DISABLED"
            },
            "fargatePlatformConfiguration": {
              "platformVersion": "string"
            },
            "ephemeralStorage": {
              "sizeInGiB": integer
            },
            "runtimePlatform": {
              "operatingSystemFamily": "string",
              "cpuArchitecture": "string"
            },
            "repositoryCredentials": {
              "credentialsParameter": "string"
            }
          }

       --node-properties (structure)
          An  object  with properties specific to multi-node parallel jobs. If
          you specify node properties for a job, it becomes a multi-node  par-
          allel job. For more information, see Multi-node Parallel Jobs in the
          Batch User Guide .

          NOTE:
              If the job runs on Fargate resources, then you must not  specify
              nodeProperties ; use containerProperties instead.

          NOTE:
              If the job runs on Amazon EKS resources, then you must not spec-
              ify nodeProperties .

          numNodes -> (integer)
              The number of nodes that are associated with a multi-node paral-
              lel job.

          mainNode -> (integer)
              Specifies  the node index for the main node of a multi-node par-
              allel job. This node index value must be fewer than  the  number
              of nodes.

          nodeRangeProperties -> (list)
              A  list  of node ranges and their properties that are associated
              with a multi-node parallel job.

              (structure)
                 This is an object that represents the properties of the  node
                 range for a multi-node parallel job.

                 targetNodes -> (string)
                     The  range  of nodes, using node index values. A range of
                     0:3 indicates nodes with index values of 0 through 3 . If
                     the starting range value is omitted (:n ), then 0 is used
                     to start the range. If the ending range value is  omitted
                     (n:  ),  then  the highest possible node index is used to
                     end the range. Your accumulative node ranges must account
                     for all nodes (0:n ). You can nest node ranges (for exam-
                     ple, 0:10 and 4:5 ). In this case, the 4:5 range  proper-
                     ties override the 0:10 properties.

                 container -> (structure)
                     The container details for the node range.

                     image -> (string)
                        Required.  The  image  used to start a container. This
                        string is passed directly to the Docker daemon. Images
                        in  the  Docker Hub registry are available by default.
                        Other  repositories  are  specified  with  ``  reposi-
                        tory-url  /image  :tag  ``  . It can be 255 characters
                        long. It can contain uppercase and lowercase  letters,
                        numbers, hyphens (-), underscores (_), colons (:), pe-
                        riods (.), forward slashes (/), and number signs  (#).
                        This parameter maps to Image in the Create a container
                        section of the Docker Remote API and the IMAGE parame-
                        ter of docker run .

                        NOTE:
                            Docker image architecture must match the processor
                            architecture of the compute resources that they're
                            scheduled on. For example, ARM-based Docker images
                            can only run on ARM-based compute resources.

                        o Images in Amazon ECR  Public  repositories  use  the
                          full  registry/repository[:tag]  or registry/reposi-
                          tory[@digest] naming conventions. For example,
                          ``
                          public.ecr.aws/registry_alias /my-web-app :latest ``
                          .

                        System Message: WARNING/2 (<string>:, line 1731)
                          Inline literal start-string without end-string.

                        o Images  in Amazon ECR repositories use the full reg-
                          istry   and    repository    URI    (for    example,
                          123456789012.dkr.ecr.<region-name>.amazon-
                          aws.com/<repository-name> ).

                        o Images in official repositories on Docker Hub use  a
                          single name (for example, ubuntu or mongo ).

                        o Images in other repositories on Docker Hub are qual-
                          ified with an organization name (for  example,  ama-
                          zon/amazon-ecs-agent ).

                        o Images  in  other  online repositories are qualified
                          further by a domain name (for  example,  quay.io/as-
                          semblyline/ubuntu ).

                     vcpus -> (integer)
                        This parameter is deprecated, use resourceRequirements
                        to specify the vCPU requirements for the  job  defini-
                        tion.  It's  not supported for jobs running on Fargate
                        resources. For jobs running on Amazon  EC2  resources,
                        it specifies the number of vCPUs reserved for the job.

                        Each  vCPU is equivalent to 1,024 CPU shares. This pa-
                        rameter maps to CpuShares in the  Create  a  container
                        section  of the Docker Remote API and the --cpu-shares
                        option to docker run . The number  of  vCPUs  must  be
                        specified  but can be specified in several places. You
                        must specify it at least once for each node.

                     memory -> (integer)
                        This parameter is deprecated, use resourceRequirements
                        to specify the memory requirements for the job defini-
                        tion. It's not supported for jobs running  on  Fargate
                        resources.  For jobs that run on Amazon EC2 resources,
                        it specifies the memory hard limit (in MiB) for a con-
                        tainer. If your container attempts to exceed the spec-
                        ified number, it's terminated.  You  must  specify  at
                        least  4 MiB of memory for a job using this parameter.
                        The memory hard limit  can  be  specified  in  several
                        places.  It  must  be specified for each node at least
                        once.

                     command -> (list)
                        The command that's passed to the container.  This  pa-
                        rameter  maps to Cmd in the Create a container section
                        of the Docker Remote API and the COMMAND parameter  to
                        docker    run    .    For    more   information,   see
                        https://docs.docker.com/engine/reference/builder/#cmd
                        .

                        (string)

                     jobRoleArn -> (string)
                        The  Amazon  Resource  Name (ARN) of the IAM role that
                        the container can assume for Amazon Web Services  per-
                        missions.  For  more  information,  see  IAM roles for
                        tasks in the Amazon Elastic Container  Service  Devel-
                        oper Guide .

                     executionRoleArn -> (string)
                        The  Amazon  Resource Name (ARN) of the execution role
                        that Batch can assume. For jobs that  run  on  Fargate
                        resources,  you  must  provide  an execution role. For
                        more information, see Batch execution IAM role in  the
                        Batch User Guide .

                     volumes -> (list)
                        A list of data volumes used in a job.

                        (structure)
                            A  data  volume  that's  used in a job's container
                            properties.

                            host -> (structure)
                               The contents of the  host  parameter  determine
                               whether  your  data volume persists on the host
                               container instance and where  it's  stored.  If
                               the  host  parameter  is empty, then the Docker
                               daemon assigns a host path for your  data  vol-
                               ume. However, the data isn't guaranteed to per-
                               sist after the containers that  are  associated
                               with it stop running.

                               NOTE:
                                   This  parameter  isn't  applicable  to jobs
                                   that are running on Fargate  resources  and
                                   shouldn't be provided.

                               sourcePath -> (string)
                                   The  path  on  the  host container instance
                                   that's presented to the container. If  this
                                   parameter  is empty, then the Docker daemon
                                   has assigned a host path for you.  If  this
                                   parameter  contains  a  file location, then
                                   the data volume persists at  the  specified
                                   location on the host container instance un-
                                   til you delete it manually. If  the  source
                                   path  location  doesn't  exist  on the host
                                   container instance, the Docker daemon  cre-
                                   ates  it.  If  the location does exist, the
                                   contents of the source path folder are  ex-
                                   ported.

                                   NOTE:
                                      This  parameter isn't applicable to jobs
                                      that run  on  Fargate  resources.  Don't
                                      provide this for these jobs.

                            name -> (string)
                               The  name  of  the  volume. It can be up to 255
                               characters long. It can contain  uppercase  and
                               lowercase  letters,  numbers,  hyphens (-), and
                               underscores (_). This name is referenced in the
                               sourceVolume  parameter of container definition
                               mountPoints .

                            efsVolumeConfiguration -> (structure)
                               This parameter is specified when  you're  using
                               an  Amazon  Elastic File System file system for
                               job storage. Jobs that are running  on  Fargate
                               resources  must specify a platformVersion of at
                               least 1.4.0 .

                               fileSystemId -> (string)
                                   The Amazon EFS file system ID to use.

                               rootDirectory -> (string)
                                   The directory within the  Amazon  EFS  file
                                   system  to  mount as the root directory in-
                                   side the host. If this parameter  is  omit-
                                   ted,  the  root of the Amazon EFS volume is
                                   used instead. Specifying / has the same ef-
                                   fect  as omitting this parameter. The maxi-
                                   mum length is 4,096 characters.

                                   WARNING:
                                      If an EFS access point is  specified  in
                                      the  authorizationConfig  , the root di-
                                      rectory parameter must either be omitted
                                      or  set  to  / , which enforces the path
                                      set on the Amazon EFS access point.

                               transitEncryption -> (string)
                                   Determines whether to enable encryption for
                                   Amazon EFS data in transit between the Ama-
                                   zon ECS host and  the  Amazon  EFS  server.
                                   Transit  encryption must be enabled if Ama-
                                   zon EFS IAM authorization is used. If  this
                                   parameter  is omitted, the default value of
                                   DISABLED is used. For more information, see
                                   Encrypting  data  in  transit in the Amazon
                                   Elastic File System User Guide .

                               transitEncryptionPort -> (integer)
                                   The port to use when sending encrypted data
                                   between  the Amazon ECS host and the Amazon
                                   EFS server. If you don't specify a  transit
                                   encryption port, it uses the port selection
                                   strategy that the Amazon EFS  mount  helper
                                   uses.  The  value  must  be  between  0 and
                                   65,535. For more information, see EFS mount
                                   helper  in  the  Amazon Elastic File System
                                   User Guide .

                               authorizationConfig -> (structure)
                                   The authorization configuration details for
                                   the Amazon EFS file system.

                                   accessPointId -> (string)
                                      The  Amazon  EFS access point ID to use.
                                      If an access  point  is  specified,  the
                                      root  directory  value  specified in the
                                      EFSVolumeConfiguration  must  either  be
                                      omitted  or  set to / which enforces the
                                      path set on the EFS access point. If  an
                                      access point is used, transit encryption
                                      must be enabled in the EFSVolumeConfigu-
                                      ration   .  For  more  information,  see
                                      Working with Amazon EFS access points in
                                      the  Amazon  Elastic  File  System  User
                                      Guide .

                                   iam -> (string)
                                      Whether or not to use the Batch job  IAM
                                      role  defined  in  a job definition when
                                      mounting the Amazon EFS file system.  If
                                      enabled,  transit encryption must be en-
                                      abled in the EFSVolumeConfiguration . If
                                      this  parameter  is omitted, the default
                                      value of DISABLED is used. For more  in-
                                      formation,  see  Using Amazon EFS access
                                      points in the Batch User Guide . EFS IAM
                                      authorization  requires  that TransitEn-
                                      cryption  be  ENABLED  and  that  a  Jo-
                                      bRoleArn is specified.

                     environment -> (list)
                        The environment variables to pass to a container. This
                        parameter maps to Env in the Create a  container  sec-
                        tion  of the Docker Remote API and the --env option to
                        docker run .

                        WARNING:
                            We don't  recommend  using  plaintext  environment
                            variables  for sensitive information, such as cre-
                            dential data.

                        NOTE:
                            Environment variables cannot start with "AWS_BATCH
                            ".  This  naming  convention is reserved for vari-
                            ables that Batch sets.

                        (structure)
                            A key-value pair object.

                            name -> (string)
                               The name of the key-value pair. For environment
                               variables,  this is the name of the environment
                               variable.

                            value -> (string)
                               The value of the key-value pair.  For  environ-
                               ment  variables, this is the value of the envi-
                               ronment variable.

                     mountPoints -> (list)
                        The mount points for data volumes in  your  container.
                        This  parameter  maps  to Volumes in the Create a con-
                        tainer section of the Docker Remote API and the --vol-
                        ume option to docker run .

                        (structure)
                            Details  for  a  Docker  volume mount point that's
                            used in a job's container properties. This parame-
                            ter maps to Volumes in the Create a container sec-
                            tion of the Docker Remote API and the --volume op-
                            tion to docker run.

                            containerPath -> (string)
                               The path on the container where the host volume
                               is mounted.

                            readOnly -> (boolean)
                               If this value  is  true  ,  the  container  has
                               read-only  access to the volume. Otherwise, the
                               container can write to the volume. The  default
                               value is false .

                            sourceVolume -> (string)
                               The name of the volume to mount.

                     readonlyRootFilesystem -> (boolean)
                        When  this  parameter  is true, the container is given
                        read-only access to its root file system. This parame-
                        ter  maps  to ReadonlyRootfs in the Create a container
                        section of the Docker Remote API and  the  --read-only
                        option to docker run .

                     privileged -> (boolean)
                        When  this  parameter  is true, the container is given
                        elevated permissions on the  host  container  instance
                        (similar  to  the  root  user). This parameter maps to
                        Privileged in the Create a container  section  of  the
                        Docker  Remote  API  and  the  --privileged  option to
                        docker run . The default value is false.

                        NOTE:
                            This parameter isn't applicable to jobs  that  are
                            running on Fargate resources and shouldn't be pro-
                            vided, or specified as false.

                     ulimits -> (list)
                        A list of ulimits to set in the container. This param-
                        eter maps to Ulimits in the Create a container section
                        of the Docker Remote API and the  --ulimit  option  to
                        docker run .

                        NOTE:
                            This  parameter  isn't applicable to jobs that are
                            running on Fargate resources and shouldn't be pro-
                            vided.

                        (structure)
                            The  ulimit settings to pass to the container. For
                            more information, see Ulimit .

                            NOTE:
                               This object isn't applicable to jobs  that  are
                               running on Fargate resources.

                            hardLimit -> (integer)
                               The hard limit for the ulimit type.

                            name -> (string)
                               The type of the ulimit . Valid values are: core
                               | cpu | data | fsize | locks |  memlock  |  ms-
                               gqueue | nice | nofile | nproc | rss | rtprio |
                               rttime | sigpending | stack .

                            softLimit -> (integer)
                               The soft limit for the ulimit type.

                     user -> (string)
                        The user name to use inside the container. This param-
                        eter maps to User in the Create a container section of
                        the Docker Remote API and the --user option to  docker
                        run .

                     instanceType -> (string)
                        The  instance  type  to  use for a multi-node parallel
                        job. All node groups in a multi-node parallel job must
                        use the same instance type.

                        NOTE:
                            This  parameter  isn't  applicable  to single-node
                            container jobs or jobs that  run  on  Fargate  re-
                            sources, and shouldn't be provided.

                     resourceRequirements -> (list)
                        The  type  and amount of resources to assign to a con-
                        tainer. The supported resources include GPU , MEMORY ,
                        and VCPU .

                        (structure)
                            The  type  and amount of a resource to assign to a
                            container. The supported resources include  GPU  ,
                            MEMORY , and VCPU .

                            value -> (string)
                               The  quantity  of the specified resource to re-
                               serve for the container. The values vary  based
                               on the type specified.
                                   type="GPU"

                               The  number of physical GPUs to reserve for the
                               container. Make sure that the  number  of  GPUs
                               reserved  for  all  containers in a job doesn't
                               exceed the number of available GPUs on the com-
                               pute resource that the job is launched on.

                               NOTE:
                                   GPUs  aren't  available  for  jobs that are
                                   running on Fargate resources.

                                   type="MEMORY"

                               The memory hard limit (in MiB) present  to  the
                               container. This parameter is supported for jobs
                               that are running on Amazon  EC2  resources.  If
                               your  container  attempts  to exceed the memory
                               specified, the container  is  terminated.  This
                               parameter  maps  to Memory in the Create a con-
                               tainer section of the Docker Remote API and the
                               --memory  option to docker run . You must spec-
                               ify at least 4 MiB of memory for a job. This is
                               required but can be specified in several places
                               for multi-node parallel (MNP) jobs. It must  be
                               specified for each node at least once. This pa-
                               rameter maps to Memory in  the  Create  a  con-
                               tainer section of the Docker Remote API and the
                               --memory option to docker run .

                               NOTE:
                                   If you're trying to maximize your  resource
                                   utilization  by providing your jobs as much
                                   memory as possible  for  a  particular  in-
                                   stance  type,  see Memory management in the
                                   Batch User Guide .

                               For jobs that are running on Fargate resources,
                               then value is the hard limit (in MiB), and must
                               match one of the supported values and the  VCPU
                               values  must be one of the values supported for
                               that memory value.
                                      value = 512

                                   VCPU = 0.25
                                      value = 1024

                                   VCPU = 0.25 or 0.5
                                      value = 2048

                                   VCPU = 0.25, 0.5, or 1
                                      value = 3072

                                   VCPU = 0.5, or 1
                                      value = 4096

                                   VCPU = 0.5, 1, or 2
                                      value = 5120, 6144, or 7168

                                   VCPU = 1 or 2
                                      value = 8192

                                   VCPU = 1, 2, or 4
                                      value  =  9216,  10240,  11264,   12288,
                                      13312, 14336, or 15360

                                   VCPU = 2 or 4
                                      value = 16384

                                   VCPU = 2, 4, or 8
                                      value  =  17408,  18432,  19456,  21504,
                                      22528,  23552,  25600,   26624,   27648,
                                      29696, or 30720

                                   VCPU = 4
                                      value = 20480, 24576, or 28672

                                   VCPU = 4 or 8
                                      value = 36864, 45056, 53248, or 61440

                                   VCPU = 8
                                      value = 32768, 40960, 49152, or 57344

                                   VCPU = 8 or 16
                                      value  =  65536,  73728,  81920,  90112,
                                      98304, 106496, 114688, or 122880

                                   VCPU = 16
                                      type="VCPU"

                               The number of vCPUs reserved for the container.
                               This  parameter maps to CpuShares in the Create
                               a container section of the  Docker  Remote  API
                               and  the  --cpu-shares  option  to docker run .
                               Each vCPU is equivalent to  1,024  CPU  shares.
                               For  Amazon  EC2 resources, you must specify at
                               least one vCPU. This is  required  but  can  be
                               specified  in several places; it must be speci-
                               fied for each node at least once.

                               The default for the Fargate On-Demand vCPU  re-
                               source  count quota is 6 vCPUs. For more infor-
                               mation about Fargate quotas, see Fargate quotas
                               in the Amazon Web Services General Reference .

                               For jobs that are running on Fargate resources,
                               then value must match one of the supported val-
                               ues  and  the  MEMORY values must be one of the
                               values supported for that VCPU value. The  sup-
                               ported values are 0.25, 0.5, 1, 2, 4, 8, and 16
                                      value = 0.25

                                   MEMORY = 512, 1024, or 2048
                                      value = 0.5

                                   MEMORY = 1024, 2048, 3072, or 4096
                                      value = 1

                                   MEMORY  =  2048,  3072,  4096,  5120, 6144,
                                   7168, or 8192
                                      value = 2

                                   MEMORY =  4096,  5120,  6144,  7168,  8192,
                                   9216,  10240,  11264,  12288, 13312, 14336,
                                   15360, or 16384
                                      value = 4

                                   MEMORY = 8192, 9216, 10240,  11264,  12288,
                                   13312,  14336,  15360, 16384, 17408, 18432,
                                   19456, 20480, 21504, 22528,  23552,  24576,
                                   25600, 26624, 27648, 28672, 29696, or 30720
                                      value = 8

                                   MEMORY = 16384, 20480, 24576, 28672, 32768,
                                   36864, 40960, 45056, 49152,  53248,  57344,
                                   or 61440
                                      value = 16

                                   MEMORY = 32768, 40960, 49152, 57344, 65536,
                                   73728, 81920, 90112, 98304, 106496, 114688,
                                   or 122880

                            type -> (string)
                               The  type of resource to assign to a container.
                               The supported resources include GPU , MEMORY  ,
                               and VCPU .

                     linuxParameters -> (structure)
                        Linux-specific  modifications  that are applied to the
                        container, such as details for device mappings.

                        devices -> (list)
                            Any of the host devices  to  expose  to  the  con-
                            tainer.  This  parameter  maps  to  Devices in the
                            Create a container section of  the  Docker  Remote
                            API and the --device option to docker run .

                            NOTE:
                               This  parameter  isn't  applicable to jobs that
                               are running on Fargate resources. Don't provide
                               it for these jobs.

                            (structure)
                               An  object that represents a container instance
                               host device.

                               NOTE:
                                   This object isn't applicable to  jobs  that
                                   are   running   on  Fargate  resources  and
                                   shouldn't be provided.

                               hostPath -> (string)
                                   The path for the device on  the  host  con-
                                   tainer instance.

                               containerPath -> (string)
                                   The  path  inside the container that's used
                                   to expose the host device. By default,  the
                                   hostPath value is used.

                               permissions -> (list)
                                   The  explicit permissions to provide to the
                                   container for the device. By  default,  the
                                   container  has permissions for read , write
                                   , and mknod for the device.

                                   (string)

                        initProcessEnabled -> (boolean)
                            If true, run an init process inside the  container
                            that  forwards  signals  and reaps processes. This
                            parameter maps to the --init option to docker  run
                            .  This  parameter  requires  version  1.25 of the
                            Docker Remote API or greater on your container in-
                            stance.  To check the Docker Remote API version on
                            your container instance, log in to your  container
                            instance  and  run  the  following  command:  sudo
                            docker version | grep "Server API version"

                        sharedMemorySize -> (integer)
                            The value for the size (in MiB)  of  the  /dev/shm
                            volume.  This parameter maps to the --shm-size op-
                            tion to docker run .

                            NOTE:
                               This parameter isn't applicable  to  jobs  that
                               are running on Fargate resources. Don't provide
                               it for these jobs.

                        tmpfs -> (list)
                            The container path, mount options,  and  size  (in
                            MiB)  of  the  tmpfs mount. This parameter maps to
                            the --tmpfs option to docker run .

                            NOTE:
                               This parameter isn't applicable  to  jobs  that
                               are running on Fargate resources. Don't provide
                               this parameter for this resource type.

                            (structure)
                               The container path, mount options, and size  of
                               the tmpfs mount.

                               NOTE:
                                   This  object  isn't applicable to jobs that
                                   are running on Fargate resources.

                               containerPath -> (string)
                                   The absolute file  path  in  the  container
                                   where the tmpfs volume is mounted.

                               size -> (integer)
                                   The size (in MiB) of the tmpfs volume.

                               mountOptions -> (list)
                                   The list of tmpfs volume mount options.

                                   Valid values: "defaults " | "ro " | "rw " |
                                   "suid " | "nosuid " | "dev " | "nodev  "  |
                                   "exec  " | "noexec " | "sync " | "async " |
                                   "dirsync " | "remount " | "mand " | "nomand
                                   "  |  "atime " | "noatime " | "diratime " |
                                   "nodiratime " | "bind " |  "rbind"  |  "un-
                                   bindable"  |  "runbindable"  |  "private" |
                                   "rprivate" | "shared" | "rshared" | "slave"
                                   |  "rslave" | "relatime " | "norelatime " |
                                   "strictatime " | "nostrictatime " | "mode "
                                   |  "uid  "  |  "gid  "  |  "nr_inodes  "  |
                                   "nr_blocks " | "mpol "

                                   (string)

                        maxSwap -> (integer)
                            The total amount of swap memory (in  MiB)  a  con-
                            tainer  can  use.  This parameter is translated to
                            the --memory-swap option to docker run  where  the
                            value  is the sum of the container memory plus the
                            maxSwap value. For more information, see `  --mem-
                            ory-swap                 details                <-
                            https://docs.docker.com/config/containers/re-
                            source_constraints/#--memory-swap-details>`__   in
                            the Docker documentation.

                            If a maxSwap value of 0  is  specified,  the  con-
                            tainer  doesn't use swap. Accepted values are 0 or
                            any positive integer. If the maxSwap parameter  is
                            omitted,  the  container doesn't use the swap con-
                            figuration for the container  instance  that  it's
                            running  on.  A  maxSwap value must be set for the
                            swappiness parameter to be used.

                            NOTE:
                               This parameter isn't applicable  to  jobs  that
                               are running on Fargate resources. Don't provide
                               it for these jobs.

                        swappiness -> (integer)
                            You can use this parameter to tune  a  container's
                            memory  swappiness behavior. A swappiness value of
                            0 causes swapping to not occur  unless  absolutely
                            necessary.  A swappiness value of 100 causes pages
                            to be swapped aggressively. Valid values are whole
                            numbers  between 0 and 100 . If the swappiness pa-
                            rameter isn't specified, a default value of 60  is
                            used.  If  a  value  isn't specified for maxSwap ,
                            then this parameter is ignored. If maxSwap is  set
                            to 0, the container doesn't use swap. This parame-
                            ter maps  to  the  --memory-swappiness  option  to
                            docker run .

                            Consider  the  following  when  you use a per-con-
                            tainer swap configuration.

                            o Swap space must be enabled and allocated on  the
                              container instance for the containers to use.

                            NOTE:
                               By default, the Amazon ECS optimized AMIs don't
                               have swap enabled. You must enable swap on  the
                               instance to use this feature. For more informa-
                               tion, see Instance store swap  volumes  in  the
                               Amazon  EC2  User  Guide for Linux Instances or
                               How do I allocate memory to work as swap  space
                               in an Amazon EC2 instance by using a swap file?

                            o The swap space parameters are only supported for
                              job definitions using EC2 resources.

                            o If the maxSwap  and  swappiness  parameters  are
                              omitted  from  a  job definition, each container
                              has a default swappiness value of 60.  Moreover,
                              the total swap usage is limited to two times the
                              memory reservation of the container.

                            NOTE:
                               This parameter isn't applicable  to  jobs  that
                               are running on Fargate resources. Don't provide
                               it for these jobs.

                     logConfiguration -> (structure)
                        The log configuration specification for the container.

                        This parameter maps to LogConfig in the Create a  con-
                        tainer  section  of  the  Docker  Remote  API  and the
                        --log-driver option to docker run . By  default,  con-
                        tainers  use  the  same logging driver that the Docker
                        daemon uses. However the container might use a differ-
                        ent  logging driver than the Docker daemon by specify-
                        ing a log driver with this parameter in the  container
                        definition.  To  use  a different logging driver for a
                        container, the log system must be configured  properly
                        on  the  container  instance  (or  on  a different log
                        server for remote logging options). For more  informa-
                        tion  on the options for different supported log driv-
                        ers, see Configure logging drivers in the Docker docu-
                        mentation.

                        NOTE:
                            Batch  currently  supports a subset of the logging
                            drivers available to the Docker daemon  (shown  in
                            the LogConfiguration data type).

                        This parameter requires version 1.18 of the Docker Re-
                        mote API or greater on  your  container  instance.  To
                        check  the Docker Remote API version on your container
                        instance, log in to your container  instance  and  run
                        the  following  command:  sudo  docker  version | grep
                        "Server API version"

                        NOTE:
                            The Amazon ECS container agent running on  a  con-
                            tainer  instance must register the logging drivers
                            available on that  instance  with  the  ECS_AVAIL-
                            ABLE_LOGGING_DRIVERS  environment  variable before
                            containers placed on that instance can  use  these
                            log  configuration  options. For more information,
                            see Amazon ECS container  agent  configuration  in
                            the  Amazon  Elastic  Container  Service Developer
                            Guide .

                        logDriver -> (string)
                            The log driver to use for the container. The valid
                            values  that are listed for this parameter are log
                            drivers that the Amazon ECS  container  agent  can
                            communicate with by default.

                            The  supported log drivers are awslogs , fluentd ,
                            gelf , json-file , journald , logentries ,  syslog
                            , and splunk .

                            NOTE:
                               Jobs  that are running on Fargate resources are
                               restricted to the awslogs and splunk log  driv-
                               ers.

                               awslogs

                            Specifies   the  Amazon  CloudWatch  Logs  logging
                            driver.  For  more  information,  see  Using   the
                            awslogs  log  driver  in  the Batch User Guide and
                            Amazon  CloudWatch  Logs  logging  driver  in  the
                            Docker documentation.
                               fluentd

                            Specifies the Fluentd logging driver. For more in-
                            formation including usage and options, see Fluentd
                            logging driver in the Docker documentation .
                               gelf

                            Specifies  the Graylog Extended Format (GELF) log-
                            ging driver. For more information including  usage
                            and  options,  see Graylog Extended Format logging
                            driver in the Docker documentation .
                               journald

                            Specifies the journald logging  driver.  For  more
                            information   including  usage  and  options,  see
                            Journald logging driver in the  Docker  documenta-
                            tion .
                               json-file

                            Specifies  the  JSON file logging driver. For more
                            information including usage and options, see  JSON
                            File logging driver in the Docker documentation .
                               splunk

                            Specifies  the Splunk logging driver. For more in-
                            formation including usage and options, see  Splunk
                            logging driver in the Docker documentation .
                               syslog

                            Specifies  the syslog logging driver. For more in-
                            formation including usage and options, see  Syslog
                            logging driver in the Docker documentation .

                            NOTE:
                               If  you  have a custom driver that's not listed
                               earlier that you want to work with  the  Amazon
                               ECS  container  agent,  you can fork the Amazon
                               ECS container agent project that's available on
                               GitHub  and  customize  it  to  work  with that
                               driver. We encourage you  to  submit  pull  re-
                               quests  for  changes  that you want to have in-
                               cluded. However, Amazon  Web  Services  doesn't
                               currently  support  running  modified copies of
                               this software.

                            This parameter requires version 1.18 of the Docker
                            Remote  API or greater on your container instance.
                            To check the Docker Remote  API  version  on  your
                            container  instance,  log in to your container in-
                            stance and run the following command: sudo  docker
                            version | grep "Server API version"

                        options -> (map)
                            The  configuration  options  to  send  to  the log
                            driver. This parameter requires  version  1.19  of
                            the Docker Remote API or greater on your container
                            instance. To check the Docker Remote  API  version
                            on  your  container  instance, log in to your con-
                            tainer instance and  run  the  following  command:
                            sudo docker version | grep "Server API version"

                            key -> (string)

                            value -> (string)

                        secretOptions -> (list)
                            The  secrets to pass to the log configuration. For
                            more information, see Specifying sensitive data in
                            the Batch User Guide .

                            (structure)
                               An  object that represents the secret to expose
                               to your container. Secrets can be exposed to  a
                               container in the following ways:

                               o To inject sensitive data into your containers
                                 as environment  variables,  use  the  secrets
                                 container definition parameter.

                               o To reference sensitive information in the log
                                 configuration of a container, use the  secre-
                                 tOptions container definition parameter.

                               For  more information, see Specifying sensitive
                               data in the Batch User Guide .

                               name -> (string)
                                   The name of the secret.

                               valueFrom -> (string)
                                   The secret to expose to the container.  The
                                   supported values are either the full Amazon
                                   Resource Name (ARN) of the Secrets  Manager
                                   secret  or the full ARN of the parameter in
                                   the Amazon Web Services Systems Manager Pa-
                                   rameter Store.

                                   NOTE:
                                      If  the Amazon Web Services Systems Man-
                                      ager Parameter Store parameter exists in
                                      the   same  Region  as  the  job  you're
                                      launching, then you can use  either  the
                                      full  Amazon Resource Name (ARN) or name
                                      of the parameter. If the  parameter  ex-
                                      ists  in  a  different  Region, then the
                                      full ARN must be specified.

                     secrets -> (list)
                        The secrets for the container. For  more  information,
                        see  Specifying sensitive data in the Batch User Guide
                        .

                        (structure)
                            An object that represents the secret to expose  to
                            your  container.  Secrets can be exposed to a con-
                            tainer in the following ways:

                            o To inject sensitive data into your containers as
                              environment variables, use the secrets container
                              definition parameter.

                            o To reference sensitive information  in  the  log
                              configuration  of a container, use the secretOp-
                              tions container definition parameter.

                            For more  information,  see  Specifying  sensitive
                            data in the Batch User Guide .

                            name -> (string)
                               The name of the secret.

                            valueFrom -> (string)
                               The secret to expose to the container. The sup-
                               ported values are either the  full  Amazon  Re-
                               source Name (ARN) of the Secrets Manager secret
                               or the full ARN of the parameter in the  Amazon
                               Web Services Systems Manager Parameter Store.

                               NOTE:
                                   If  the Amazon Web Services Systems Manager
                                   Parameter Store  parameter  exists  in  the
                                   same  Region  as  the job you're launching,
                                   then you can use either the full Amazon Re-
                                   source Name (ARN) or name of the parameter.
                                   If the parameter exists in a different  Re-
                                   gion, then the full ARN must be specified.

                     networkConfiguration -> (structure)
                        The network configuration for jobs that are running on
                        Fargate resources. Jobs that are running on Amazon EC2
                        resources must not specify this parameter.

                        assignPublicIp -> (string)
                            Indicates whether the job has a public IP address.
                            For a job that's running on Fargate resources in a
                            private subnet to send outbound traffic to the in-
                            ternet (for example, to  pull  container  images),
                            the  private  subnet requires a NAT gateway be at-
                            tached to route requests to the internet. For more
                            information, see Amazon ECS task networking in the
                            Amazon Elastic Container Service Developer Guide .
                            The default value is "DISABLED ".

                     fargatePlatformConfiguration -> (structure)
                        The  platform  configuration for jobs that are running
                        on Fargate resources. Jobs that are running on  Amazon
                        EC2 resources must not specify this parameter.

                        platformVersion -> (string)
                            The  Fargate  platform  version where the jobs are
                            running. A platform version is specified only  for
                            jobs that are running on Fargate resources. If one
                            isn't specified, the LATEST  platform  version  is
                            used by default. This uses a recent, approved ver-
                            sion of  the  Fargate  platform  for  compute  re-
                            sources.  For  more information, see Fargate plat-
                            form versions in the Amazon Elastic Container Ser-
                            vice Developer Guide .

                     ephemeralStorage -> (structure)
                        The  amount  of  ephemeral storage to allocate for the
                        task. This parameter  is  used  to  expand  the  total
                        amount  of ephemeral storage available, beyond the de-
                        fault amount, for tasks hosted on Fargate.

                        sizeInGiB -> (integer)
                            The total amount, in GiB, of ephemeral storage  to
                            set  for  the task. The minimum supported value is
                            21 GiB and the maximum supported value is 200 GiB.

                     runtimePlatform -> (structure)
                        An object that represents the compute environment  ar-
                        chitecture for Batch jobs on Fargate.

                        operatingSystemFamily -> (string)
                            The  operating system for the compute environment.
                            Valid   values   are:   LINUX   (default),    WIN-
                            DOWS_SERVER_2019_CORE , WINDOWS_SERVER_2019_FULL ,
                            WINDOWS_SERVER_2022_CORE      ,      and      WIN-
                            DOWS_SERVER_2022_FULL .

                            NOTE:
                               The  following  parameters cant be set for Win-
                               dows containers: linuxParameters , privileged ,
                               user  ,  ulimits , readonlyRootFilesystem , and
                               efsVolumeConfiguration .

                            NOTE:
                               The Batch Scheduler checks the compute environ-
                               ments that are attached to the job queue before
                               registering a task definition with Fargate.  In
                               this  scenario,  the job queue is where the job
                               is submitted. If the  job  requires  a  Windows
                               container  and the first compute environment is
                               LINUX , the compute environment is skipped  and
                               the next compute environment is checked until a
                               Windows-based compute environment is found.

                            NOTE:
                               Fargate Spot is not  supported  for  ARM64  and
                               Windows-based  containers  on  Fargate.  A  job
                               queue will be blocked if  a  Fargate  ARM64  or
                               Windows  job  is  submitted to a job queue with
                               only Fargate Spot  compute  environments.  How-
                               ever,  you  can  attach  both  FARGATE and FAR-
                               GATE_SPOT compute environments to the same  job
                               queue.

                        cpuArchitecture -> (string)
                            The vCPU architecture. The default value is X86_64
                            . Valid values are X86_64 and ARM64 .

                            NOTE:
                               This parameter must be set to X86_64  for  Win-
                               dows containers.

                            NOTE:
                               Fargate  Spot  is  not  supported for ARM64 and
                               Windows-based  containers  on  Fargate.  A  job
                               queue  will  be  blocked  if a Fargate ARM64 or
                               Windows job is submitted to a  job  queue  with
                               only  Fargate  Spot  compute environments. How-
                               ever, you can  attach  both  FARGATE  and  FAR-
                               GATE_SPOT  compute environments to the same job
                               queue.

                     repositoryCredentials -> (structure)
                        The private repository authentication  credentials  to
                        use.

                        credentialsParameter -> (string)
                            The  Amazon Resource Name (ARN) of the secret con-
                            taining the private repository credentials.

                 instanceTypes -> (list)
                     The instance types of the underlying host  infrastructure
                     of a multi-node parallel job.

                     NOTE:
                        This  parameter isn't applicable to jobs that are run-
                        ning on Fargate resources.

                        In addition, this list object is currently limited  to
                        one element.

                     (string)

                 ecsProperties -> (structure)
                     This  is  an object that represents the properties of the
                     node range for a multi-node parallel job.

                     taskProperties -> (list)
                        An object that contains the properties for the  Amazon
                        ECS task definition of a job.

                        NOTE:
                            This object is currently limited to one element.

                        (structure)
                            The  properties  for  a  task  definition that de-
                            scribes the container and volume definitions of an
                            Amazon  ECS task. You can specify which Docker im-
                            ages to use, the  required  resources,  and  other
                            configurations related to launching the task defi-
                            nition through an Amazon ECS service or task.

                            containers -> (list)
                               This object is a list of containers.

                               (structure)
                                   Container properties are  used  for  Amazon
                                   ECS-based job definitions. These properties
                                   to describe the container  that's  launched
                                   as part of a job.

                                   command -> (list)
                                      The  command  that's  passed to the con-
                                      tainer. This parameter maps  to  Cmd  in
                                      the  Create  a  container section of the
                                      Docker Remote API and the COMMAND param-
                                      eter  to  docker run . For more informa-
                                      tion, see Dockerfile reference: CMD .

                                      (string)

                                   dependsOn -> (list)
                                      A list of containers that this container
                                      depends on.

                                      (structure)
                                          A  list of containers that this task
                                          depends on.

                                          containerName -> (string)
                                             A unique identifier for the  con-
                                             tainer.

                                          condition -> (string)
                                             The  dependency  condition of the
                                             container. The following are  the
                                             available  conditions  and  their
                                             behavior:

                                             o START - This condition emulates
                                               the  behavior of links and vol-
                                               umes today. It validates that a
                                               dependent  container is started
                                               before  permitting  other  con-
                                               tainers to start.

                                             o COMPLETE - This condition vali-
                                               dates  that  a  dependent  con-
                                               tainer  runs to completion (ex-
                                               its)  before  permitting  other
                                               containers  to  start. This can
                                               be useful for nonessential con-
                                               tainers  that  run a script and
                                               then exit. This condition can't
                                               be  set  on  an  essential con-
                                               tainer.

                                             o SUCCESS - This condition is the
                                               same  as COMPLETE , but it also
                                               requires that the container ex-
                                               its  with  a  zero status. This
                                               condition can't be  set  on  an
                                               essential container.

                                   environment -> (list)
                                      The  environment  variables to pass to a
                                      container. This parameter  maps  to  Env
                                      inthe  Create a container section of the
                                      Docker Remote API and the --env  parame-
                                      ter to docker run .

                                      WARNING:
                                          We  don't  recommend using plaintext
                                          environment variables for  sensitive
                                          information,   such   as  credential
                                          data.

                                      NOTE:
                                          Environment variables  cannot  start
                                          with AWS_BATCH . This naming conven-
                                          tion is reserved for variables  that
                                          Batch sets.

                                      (structure)
                                          A key-value pair object.

                                          name -> (string)
                                             The  name  of the key-value pair.
                                             For environment  variables,  this
                                             is  the  name  of the environment
                                             variable.

                                          value -> (string)
                                             The value of the key-value  pair.
                                             For  environment  variables, this
                                             is the value of  the  environment
                                             variable.

                                   essential -> (boolean)
                                      If  the  essential  parameter  of a con-
                                      tainer is marked as true , and that con-
                                      tainer  fails  or  stops for any reason,
                                      all other containers that  are  part  of
                                      the  task  are stopped. If the essential
                                      parameter of a container  is  marked  as
                                      false,  its  failure  doesn't affect the
                                      rest of the containers  in  a  task.  If
                                      this  parameter  is omitted, a container
                                      is assumed to be essential.

                                      All jobs must have at least  one  essen-
                                      tial  container. If you have an applica-
                                      tion that's composed  of  multiple  con-
                                      tainers,  group containers that are used
                                      for a common  purpose  into  components,
                                      and  separate  the  different components
                                      into multiple task definitions. For more
                                      information,  see  Application Architec-
                                      ture in  the  Amazon  Elastic  Container
                                      Service Developer Guide .

                                   image -> (string)
                                      The  image  used  to  start a container.
                                      This string is passed  directly  to  the
                                      Docker daemon. By default, images in the
                                      Docker Hub registry are available. Other
                                      repositories  are  specified with either
                                      repository-url/image:tag   or    reposi-
                                      tory-url/image@digest  .  Up to 255 let-
                                      ters (uppercase and lowercase), numbers,
                                      hyphens,  underscores,  colons, periods,
                                      forward slashes, and  number  signs  are
                                      allowed. This parameter maps to Image in
                                      the Create a container  section  of  the
                                      Docker  Remote API and the IMAGE parame-
                                      ter    of    the    `     docker     run
                                      https://docs.docker.com/engine/reference/run/#security-configuration`__
                                      .

                                   linuxParameters -> (structure)
                                      Linux-specific  modifications  that  are
                                      applied  to the container, such as Linux
                                      kernel capabilities. For  more  informa-
                                      tion, see KernelCapabilities .

                                      devices -> (list)
                                          Any of the host devices to expose to
                                          the container. This  parameter  maps
                                          to Devices in the Create a container
                                          section of the Docker Remote API and
                                          the --device option to docker run .

                                          NOTE:
                                             This  parameter  isn't applicable
                                             to jobs that are running on  Far-
                                             gate  resources. Don't provide it
                                             for these jobs.

                                          (structure)
                                             An object that represents a  con-
                                             tainer instance host device.

                                             NOTE:
                                                 This  object isn't applicable
                                                 to jobs that are  running  on
                                                 Fargate     resources     and
                                                 shouldn't be provided.

                                             hostPath -> (string)
                                                 The path for  the  device  on
                                                 the host container instance.

                                             containerPath -> (string)
                                                 The path inside the container
                                                 that's  used  to  expose  the
                                                 host  device. By default, the
                                                 hostPath value is used.

                                             permissions -> (list)
                                                 The explicit  permissions  to
                                                 provide  to the container for
                                                 the device. By  default,  the
                                                 container has permissions for
                                                 read , write , and mknod  for
                                                 the device.

                                                 (string)

                                      initProcessEnabled -> (boolean)
                                          If  true, run an init process inside
                                          the container that forwards  signals
                                          and  reaps processes. This parameter
                                          maps to the --init option to  docker
                                          run  .  This parameter requires ver-
                                          sion 1.25 of the Docker  Remote  API
                                          or  greater  on  your  container in-
                                          stance. To check the  Docker  Remote
                                          API  version  on  your container in-
                                          stance, log in to your container in-
                                          stance  and  run  the following com-
                                          mand: sudo  docker  version  |  grep
                                          "Server API version"

                                      sharedMemorySize -> (integer)
                                          The  value  for the size (in MiB) of
                                          the /dev/shm volume. This  parameter
                                          maps  to  the  --shm-size  option to
                                          docker run .

                                          NOTE:
                                             This parameter  isn't  applicable
                                             to  jobs that are running on Far-
                                             gate resources. Don't provide  it
                                             for these jobs.

                                      tmpfs -> (list)
                                          The  container  path, mount options,
                                          and  size  (in  MiB)  of  the  tmpfs
                                          mount.  This  parameter  maps to the
                                          --tmpfs option to docker run .

                                          NOTE:
                                             This parameter  isn't  applicable
                                             to  jobs that are running on Far-
                                             gate  resources.  Don't   provide
                                             this  parameter for this resource
                                             type.

                                          (structure)
                                             The  container  path,  mount  op-
                                             tions,  and  size  of  the  tmpfs
                                             mount.

                                             NOTE:
                                                 This object isn't  applicable
                                                 to  jobs  that are running on
                                                 Fargate resources.

                                             containerPath -> (string)
                                                 The absolute file path in the
                                                 container   where  the  tmpfs
                                                 volume is mounted.

                                             size -> (integer)
                                                 The  size  (in  MiB)  of  the
                                                 tmpfs volume.

                                             mountOptions -> (list)
                                                 The   list  of  tmpfs  volume
                                                 mount options.

                                                 Valid values: "defaults  "  |
                                                 "ro  "  |  "rw  " | "suid " |
                                                 "nosuid " | "dev " | "nodev "
                                                 | "exec " | "noexec " | "sync
                                                 " | "async " | "dirsync  "  |
                                                 "remount  "  | "mand " | "no-
                                                 mand " | "atime " |  "noatime
                                                 " | "diratime " | "nodiratime
                                                 " | "bind " | "rbind" |  "un-
                                                 bindable"  |  "runbindable" |
                                                 "private"  |   "rprivate"   |
                                                 "shared"    |   "rshared"   |
                                                 "slave" | "rslave"  |  "rela-
                                                 time  "  |  "norelatime  "  |
                                                 "strictatime " |  "nostricta-
                                                 time  "  | "mode " | "uid " |
                                                 "gid  "  |  "nr_inodes  "   |
                                                 "nr_blocks " | "mpol "

                                                 (string)

                                      maxSwap -> (integer)
                                          The  total amount of swap memory (in
                                          MiB) a container can use.  This  pa-
                                          rameter  is translated to the --mem-
                                          ory-swap option to docker run  where
                                          the  value  is  the  sum of the con-
                                          tainer  memory  plus   the   maxSwap
                                          value.  For  more information, see `
                                          --memory-swap       details       <-
                                          https://docs.docker.com/config/con-
                                          tainers/resource_constraints/#--mem-
                                          ory-swap-details>`__  in  the Docker
                                          documentation.

                                          If a maxSwap value of  0  is  speci-
                                          fied,   the  container  doesn't  use
                                          swap. Accepted values are 0  or  any
                                          positive integer. If the maxSwap pa-
                                          rameter is  omitted,  the  container
                                          doesn't  use  the swap configuration
                                          for the container instance that it's
                                          running  on. A maxSwap value must be
                                          set for the swappiness parameter  to
                                          be used.

                                          NOTE:
                                             This  parameter  isn't applicable
                                             to jobs that are running on  Far-
                                             gate  resources. Don't provide it
                                             for these jobs.

                                      swappiness -> (integer)
                                          You can use this parameter to tune a
                                          container's memory swappiness behav-
                                          ior. A swappiness value of 0  causes
                                          swapping  to  not occur unless abso-
                                          lutely necessary. A swappiness value
                                          of  100  causes  pages to be swapped
                                          aggressively. Valid values are whole
                                          numbers  between  0 and 100 . If the
                                          swappiness  parameter  isn't  speci-
                                          fied, a default value of 60 is used.
                                          If  a  value  isn't  specified   for
                                          maxSwap , then this parameter is ig-
                                          nored. If maxSwap is set to  0,  the
                                          container doesn't use swap. This pa-
                                          rameter maps to the --memory-swappi-
                                          ness option to docker run .

                                          Consider  the following when you use
                                          a per-container swap configuration.

                                          o Swap space must be enabled and al-
                                            located  on the container instance
                                            for the containers to use.

                                          NOTE:
                                             By default, the Amazon ECS  opti-
                                             mized  AMIs  don't  have swap en-
                                             abled. You must  enable  swap  on
                                             the instance to use this feature.
                                             For   more    information,    see
                                             Instance  store  swap  volumes in
                                             the Amazon  EC2  User  Guide  for
                                             Linux Instances or How do I allo-
                                             cate memory to work as swap space
                                             in  an Amazon EC2 instance by us-
                                             ing a swap file?

                                          o The swap space parameters are only
                                            supported  for job definitions us-
                                            ing EC2 resources.

                                          o If the maxSwap and swappiness  pa-
                                            rameters  are  omitted  from a job
                                            definition, each container  has  a
                                            default  swappiness  value  of 60.
                                            Moreover, the total swap usage  is
                                            limited  to  two  times the memory
                                            reservation of the container.

                                          NOTE:
                                             This parameter  isn't  applicable
                                             to  jobs that are running on Far-
                                             gate resources. Don't provide  it
                                             for these jobs.

                                   logConfiguration -> (structure)
                                      The  log configuration specification for
                                      the container.

                                      This parameter maps to LogConfig in  the
                                      Create a container section of the Docker
                                      Remote API and the  --log-driver  option
                                      to docker run .

                                      By default, containers use the same log-
                                      ging driver that the Docker daemon uses.
                                      However  the container can use a differ-
                                      ent logging driver than the Docker  dae-
                                      mon by specifying a log driver with this
                                      parameter in the  container  definition.
                                      To  use a different logging driver for a
                                      container, the log system must  be  con-
                                      figured  properly  on  the container in-
                                      stance (or on a different log server for
                                      remote logging options). For more infor-
                                      mation about the options  for  different
                                      supported  log  drivers,  see  Configure
                                      logging drivers in the Docker documenta-
                                      tion .

                                      NOTE:
                                          Amazon ECS currently supports a sub-
                                          set of the logging drivers available
                                          to  the  Docker daemon (shown in the
                                          LogConfiguration data  type).  Addi-
                                          tional  log drivers may be available
                                          in future releases of the Amazon ECS
                                          container agent.

                                      This  parameter requires version 1.18 of
                                      the Docker Remote API or greater on your
                                      container  instance. To check the Docker
                                      Remote API version on your container in-
                                      stance,  log  in  to  your container in-
                                      stance and run  the  following  command:
                                      sudo     docker     version     --format
                                      '{{.Server.APIVersion}}'

                                      NOTE:
                                          The Amazon ECS container agent  run-
                                          ning  on  a  container instance must
                                          register the logging drivers  avail-
                                          able   on  that  instance  with  the
                                          ECS_AVAILABLE_LOGGING_DRIVERS  envi-
                                          ronment  variable  before containers
                                          placed  on  that  instance  can  use
                                          these log configuration options. For
                                          more  information,  see  Amazon  ECS
                                          container agent configuration in the
                                          Amazon Elastic Container Service De-
                                          veloper Guide .

                                      logDriver -> (string)
                                          The  log  driver to use for the con-
                                          tainer. The valid  values  that  are
                                          listed  for  this  parameter are log
                                          drivers that  the  Amazon  ECS  con-
                                          tainer agent can communicate with by
                                          default.

                                          The  supported   log   drivers   are
                                          awslogs , fluentd , gelf , json-file
                                          , journald , logentries ,  syslog  ,
                                          and splunk .

                                          NOTE:
                                             Jobs  that are running on Fargate
                                             resources are restricted  to  the
                                             awslogs and splunk log drivers.

                                             awslogs

                                          Specifies the Amazon CloudWatch Logs
                                          logging driver.  For  more  informa-
                                          tion,  see  Using  the  awslogs  log
                                          driver in the Batch User  Guide  and
                                          Amazon   CloudWatch   Logs   logging
                                          driver in the Docker documentation.
                                             fluentd

                                          Specifies   the   Fluentd    logging
                                          driver. For more information includ-
                                          ing usage and options,  see  Fluentd
                                          logging  driver  in the Docker docu-
                                          mentation .
                                             gelf

                                          Specifies the Graylog Extended  For-
                                          mat  (GELF) logging driver. For more
                                          information including usage and  op-
                                          tions,  see  Graylog Extended Format
                                          logging driver in the  Docker  docu-
                                          mentation .
                                             journald

                                          Specifies   the   journald   logging
                                          driver. For more information includ-
                                          ing  usage and options, see Journald
                                          logging driver in the  Docker  docu-
                                          mentation .
                                             json-file

                                          Specifies   the  JSON  file  logging
                                          driver. For more information includ-
                                          ing usage and options, see JSON File
                                          logging driver in the  Docker  docu-
                                          mentation .
                                             splunk

                                          Specifies the Splunk logging driver.
                                          For more information including usage
                                          and   options,  see  Splunk  logging
                                          driver in the Docker documentation .
                                             syslog

                                          Specifies the syslog logging driver.
                                          For more information including usage
                                          and  options,  see  Syslog   logging
                                          driver in the Docker documentation .

                                          NOTE:
                                             If   you  have  a  custom  driver
                                             that's not  listed  earlier  that
                                             you  want to work with the Amazon
                                             ECS container agent, you can fork
                                             the  Amazon  ECS  container agent
                                             project   that's   available   on
                                             GitHub  and  customize it to work
                                             with that  driver.  We  encourage
                                             you  to  submit pull requests for
                                             changes that you want to have in-
                                             cluded.  However, Amazon Web Ser-
                                             vices doesn't  currently  support
                                             running  modified  copies of this
                                             software.

                                          This parameter requires version 1.18
                                          of  the Docker Remote API or greater
                                          on your container instance. To check
                                          the  Docker  Remote  API  version on
                                          your container instance, log  in  to
                                          your  container instance and run the
                                          following command: sudo docker  ver-
                                          sion | grep "Server API version"

                                      options -> (map)
                                          The configuration options to send to
                                          the log driver. This  parameter  re-
                                          quires  version  1.19  of the Docker
                                          Remote API or greater on  your  con-
                                          tainer instance. To check the Docker
                                          Remote API version on your container
                                          instance,  log  in to your container
                                          instance and run the following  com-
                                          mand:  sudo  docker  version  | grep
                                          "Server API version"

                                          key -> (string)

                                          value -> (string)

                                      secretOptions -> (list)
                                          The secrets to pass to the log  con-
                                          figuration.  For  more  information,
                                          see Specifying sensitive data in the
                                          Batch User Guide .

                                          (structure)
                                             An object that represents the se-
                                             cret to expose to your container.
                                             Secrets  can be exposed to a con-
                                             tainer in the following ways:

                                             o To inject sensitive  data  into
                                               your  containers as environment
                                               variables, use the secrets con-
                                               tainer definition parameter.

                                             o To reference sensitive informa-
                                               tion in the  log  configuration
                                               of  a container, use the secre-
                                               tOptions  container  definition
                                               parameter.

                                             For    more    information,   see
                                             Specifying sensitive data in  the
                                             Batch User Guide .

                                             name -> (string)
                                                 The name of the secret.

                                             valueFrom -> (string)
                                                 The  secret  to expose to the
                                                 container. The supported val-
                                                 ues  are either the full Ama-
                                                 zon Resource  Name  (ARN)  of
                                                 the Secrets Manager secret or
                                                 the full ARN of the parameter
                                                 in  the  Amazon  Web Services
                                                 Systems   Manager   Parameter
                                                 Store.

                                                 NOTE:
                                                    If the Amazon Web Services
                                                    Systems Manager  Parameter
                                                    Store  parameter exists in
                                                    the same Region as the job
                                                    you're launching, then you
                                                    can use  either  the  full
                                                    Amazon Resource Name (ARN)
                                                    or name of the  parameter.
                                                    If the parameter exists in
                                                    a different  Region,  then
                                                    the full ARN must be spec-
                                                    ified.

                                   mountPoints -> (list)
                                      The mount points  for  data  volumes  in
                                      your container.

                                      This  parameter  maps  to Volumes in the
                                      Create a container section of the Docker
                                      Remote  API  and  the --volume option to
                                      `docker run .

                                      Windows containers can mount  whole  di-
                                      rectories on the same drive as $env:Pro-
                                      gramData  .  Windows  containers   can't
                                      mount  directories on a different drive,
                                      and mount point can't be across drives.

                                      (structure)
                                          Details for a  Docker  volume  mount
                                          point  that's  used  in a job's con-
                                          tainer  properties.  This  parameter
                                          maps to Volumes in the Create a con-
                                          tainer section of the Docker  Remote
                                          API   and  the  --volume  option  to
                                          docker run.

                                          containerPath -> (string)
                                             The path on the  container  where
                                             the host volume is mounted.

                                          readOnly -> (boolean)
                                             If  this value is true , the con-
                                             tainer has  read-only  access  to
                                             the  volume.  Otherwise, the con-
                                             tainer can write to  the  volume.
                                             The default value is false .

                                          sourceVolume -> (string)
                                             The name of the volume to mount.

                                   name -> (string)
                                      The name of a container. The name can be
                                      used as a unique  identifier  to  target
                                      your dependsOn and Overrides objects.

                                   privileged -> (boolean)
                                      When  this  parameter is true , the con-
                                      tainer is given elevated  privileges  on
                                      the  host container instance (similar to
                                      the root user). This parameter  maps  to
                                      Privileged  in  the  Create  a container
                                      section of the Docker Remote API and the
                                      --privileged option to docker run .

                                      NOTE:
                                          This  parameter is not supported for
                                          Windows containers or tasks  run  on
                                          Fargate.

                                   readonlyRootFilesystem -> (boolean)
                                      When  this  parameter  is true, the con-
                                      tainer is given read-only access to  its
                                      root file system. This parameter maps to
                                      ReadonlyRootfs in the Create a container
                                      section of the Docker Remote API and the
                                      --read-only option to docker run .

                                      NOTE:
                                          This parameter is not supported  for
                                          Windows containers.

                                   repositoryCredentials -> (structure)
                                      The  private  repository  authentication
                                      credentials to use.

                                      credentialsParameter -> (string)
                                          The Amazon Resource  Name  (ARN)  of
                                          the  secret  containing  the private
                                          repository credentials.

                                   resourceRequirements -> (list)
                                      The type and amount of a resource to as-
                                      sign  to a container. The only supported
                                      resource is a GPU.

                                      (structure)
                                          The type and amount of a resource to
                                          assign to a container. The supported
                                          resources include GPU , MEMORY , and
                                          VCPU .

                                          value -> (string)
                                             The quantity of the specified re-
                                             source to reserve  for  the  con-
                                             tainer.  The values vary based on
                                             the type specified.
                                                 type="GPU"

                                             The number of  physical  GPUs  to
                                             reserve  for  the container. Make
                                             sure that the number of GPUs  re-
                                             served  for  all  containers in a
                                             job doesn't exceed the number  of
                                             available GPUs on the compute re-
                                             source that the job  is  launched
                                             on.

                                             NOTE:
                                                 GPUs   aren't  available  for
                                                 jobs that are running on Far-
                                                 gate resources.

                                                 type="MEMORY"

                                             The  memory  hard  limit (in MiB)
                                             present to  the  container.  This
                                             parameter  is  supported for jobs
                                             that are running  on  Amazon  EC2
                                             resources.  If your container at-
                                             tempts to exceed the memory spec-
                                             ified,  the  container  is termi-
                                             nated.  This  parameter  maps  to
                                             Memory  in the Create a container
                                             section of the Docker Remote  API
                                             and the --memory option to docker
                                             run . You must specify at least 4
                                             MiB  of memory for a job. This is
                                             required but can be specified  in
                                             several   places  for  multi-node
                                             parallel (MNP) jobs. It  must  be
                                             specified  for each node at least
                                             once. This parameter maps to Mem-
                                             ory  in  the  Create  a container
                                             section of the Docker Remote  API
                                             and the --memory option to docker
                                             run .

                                             NOTE:
                                                 If you're trying to  maximize
                                                 your  resource utilization by
                                                 providing your jobs  as  much
                                                 memory as possible for a par-
                                                 ticular  instance  type,  see
                                                 Memory   management   in  the
                                                 Batch User Guide .

                                             For jobs that are running on Far-
                                             gate resources, then value is the
                                             hard limit  (in  MiB),  and  must
                                             match one of the supported values
                                             and the VCPU values must  be  one
                                             of  the values supported for that
                                             memory value.
                                                    value = 512

                                                 VCPU = 0.25
                                                    value = 1024

                                                 VCPU = 0.25 or 0.5
                                                    value = 2048

                                                 VCPU = 0.25, 0.5, or 1
                                                    value = 3072

                                                 VCPU = 0.5, or 1
                                                    value = 4096

                                                 VCPU = 0.5, 1, or 2
                                                    value  =  5120,  6144,  or
                                                    7168

                                                 VCPU = 1 or 2
                                                    value = 8192

                                                 VCPU = 1, 2, or 4
                                                    value   =   9216,   10240,
                                                    11264,    12288,    13312,
                                                    14336, or 15360

                                                 VCPU = 2 or 4
                                                    value = 16384

                                                 VCPU = 2, 4, or 8
                                                    value   =   17408,  18432,
                                                    19456,    21504,    22528,
                                                    23552,    25600,    26624,
                                                    27648, 29696, or 30720

                                                 VCPU = 4
                                                    value = 20480,  24576,  or
                                                    28672

                                                 VCPU = 4 or 8
                                                    value   =   36864,  45056,
                                                    53248, or 61440

                                                 VCPU = 8
                                                    value  =   32768,   40960,
                                                    49152, or 57344

                                                 VCPU = 8 or 16
                                                    value   =   65536,  73728,
                                                    81920,    90112,    98304,
                                                    106496, 114688, or 122880

                                                 VCPU = 16
                                                    type="VCPU"

                                             The  number of vCPUs reserved for
                                             the  container.  This   parameter
                                             maps to CpuShares in the Create a
                                             container section of  the  Docker
                                             Remote  API  and the --cpu-shares
                                             option to docker run . Each  vCPU
                                             is   equivalent   to   1,024  CPU
                                             shares. For Amazon EC2 resources,
                                             you  must  specify  at  least one
                                             vCPU. This is required but can be
                                             specified  in  several places; it
                                             must be specified for  each  node
                                             at least once.

                                             The   default   for  the  Fargate
                                             On-Demand  vCPU  resource   count
                                             quota is 6 vCPUs. For more infor-
                                             mation about Fargate quotas,  see
                                             Fargate  quotas in the Amazon Web
                                             Services General Reference .

                                             For jobs that are running on Far-
                                             gate  resources,  then value must
                                             match one of the supported values
                                             and the MEMORY values must be one
                                             of the values supported for  that
                                             VCPU  value. The supported values
                                             are 0.25, 0.5, 1, 2, 4, 8, and 16
                                                    value = 0.25

                                                 MEMORY = 512, 1024, or 2048
                                                    value = 0.5

                                                 MEMORY = 1024, 2048, 3072, or
                                                 4096
                                                    value = 1

                                                 MEMORY  =  2048,  3072, 4096,
                                                 5120, 6144, 7168, or 8192
                                                    value = 2

                                                 MEMORY =  4096,  5120,  6144,
                                                 7168,   8192,   9216,  10240,
                                                 11264, 12288,  13312,  14336,
                                                 15360, or 16384
                                                    value = 4

                                                 MEMORY  =  8192, 9216, 10240,
                                                 11264, 12288,  13312,  14336,
                                                 15360,  16384,  17408, 18432,
                                                 19456, 20480,  21504,  22528,
                                                 23552,  24576,  25600, 26624,
                                                 27648, 28672, 29696, or 30720
                                                    value = 8

                                                 MEMORY = 16384, 20480, 24576,
                                                 28672,  32768,  36864, 40960,
                                                 45056, 49152,  53248,  57344,
                                                 or 61440
                                                    value = 16

                                                 MEMORY = 32768, 40960, 49152,
                                                 57344, 65536,  73728,  81920,
                                                 90112, 98304, 106496, 114688,
                                                 or 122880

                                          type -> (string)
                                             The type of resource to assign to
                                             a  container.  The  supported re-
                                             sources include GPU  ,  MEMORY  ,
                                             and VCPU .

                                   secrets -> (list)
                                      The  secrets  to  pass to the container.
                                      For  more  information,  see  Specifying
                                      Sensitive  Data  in  the  Amazon Elastic
                                      Container Service Developer Guide.

                                      (structure)
                                          An object that represents the secret
                                          to expose to your container. Secrets
                                          can be exposed to a container in the
                                          following ways:

                                          o To inject sensitive data into your
                                            containers  as  environment  vari-
                                            ables,  use  the secrets container
                                            definition parameter.

                                          o To reference sensitive information
                                            in the log configuration of a con-
                                            tainer, use the secretOptions con-
                                            tainer definition parameter.

                                          For more information, see Specifying
                                          sensitive data  in  the  Batch  User
                                          Guide .

                                          name -> (string)
                                             The name of the secret.

                                          valueFrom -> (string)
                                             The  secret to expose to the con-
                                             tainer. The supported values  are
                                             either  the  full Amazon Resource
                                             Name (ARN) of the Secrets Manager
                                             secret or the full ARN of the pa-
                                             rameter in the  Amazon  Web  Ser-
                                             vices  Systems  Manager Parameter
                                             Store.

                                             NOTE:
                                                 If the  Amazon  Web  Services
                                                 Systems   Manager   Parameter
                                                 Store parameter exists in the
                                                 same Region as the job you're
                                                 launching, then you  can  use
                                                 either  the  full  Amazon Re-
                                                 source Name (ARN) or name  of
                                                 the parameter. If the parame-
                                                 ter exists in a different Re-
                                                 gion,  then the full ARN must
                                                 be specified.

                                   ulimits -> (list)
                                      A list of ulimits to  set  in  the  con-
                                      tainer.  If  a ulimit value is specified
                                      in a task definition, it  overrides  the
                                      default  values  set by Docker. This pa-
                                      rameter maps to Ulimits in the Create  a
                                      container  section  of the Docker Remote
                                      API and the --ulimit  option  to  docker
                                      run .

                                      Amazon  ECS  tasks hosted on Fargate use
                                      the default resource limit values set by
                                      the  operating system with the exception
                                      of the nofile resource  limit  parameter
                                      which  Fargate overrides. The nofile re-
                                      source limit sets a restriction  on  the
                                      number  of  open  files that a container
                                      can use. The default nofile  soft  limit
                                      is  1024  and  the default hard limit is
                                      65535 .

                                      This parameter requires version 1.18  of
                                      the Docker Remote API or greater on your
                                      container instance. To check the  Docker
                                      Remote API version on your container in-
                                      stance, log in  to  your  container  in-
                                      stance  and  run  the following command:
                                      sudo     docker     version     --format
                                      '{{.Server.APIVersion}}'

                                      NOTE:
                                          This  parameter is not supported for
                                          Windows containers.

                                      (structure)
                                          The ulimit settings to pass  to  the
                                          container. For more information, see
                                          Ulimit .

                                          NOTE:
                                             This object isn't  applicable  to
                                             jobs  that are running on Fargate
                                             resources.

                                          hardLimit -> (integer)
                                             The hard  limit  for  the  ulimit
                                             type.

                                          name -> (string)
                                             The  type  of  the ulimit . Valid
                                             values are: core | cpu |  data  |
                                             fsize  |  locks  |  memlock | ms-
                                             gqueue | nice | nofile | nproc  |
                                             rss  | rtprio | rttime | sigpend-
                                             ing | stack .

                                          softLimit -> (integer)
                                             The soft  limit  for  the  ulimit
                                             type.

                                   user -> (string)
                                      The  user  to  use inside the container.
                                      This parameter maps to User in the  Cre-
                                      ate  a  container  section of the Docker
                                      Remote API  and  the  --user  option  to
                                      docker run.

                                      NOTE:
                                          When  running  tasks  using the host
                                          network mode, don't  run  containers
                                          using  the  root  user  (UID 0) . We
                                          recommend using a non-root user  for
                                          better security.

                                      You  can specify the user using the fol-
                                      lowing formats. If specifying a  UID  or
                                      GID,  you  must specify it as a positive
                                      integer.

                                      o user

                                      o user:group

                                      o uid

                                      o uid:gid

                                      o user:gi

                                      o uid:group

                                      NOTE:
                                          This parameter is not supported  for
                                          Windows containers.

                            ephemeralStorage -> (structure)
                               The amount of ephemeral storage to allocate for
                               the task. This parameter is used to expand  the
                               total  amount  of  ephemeral storage available,
                               beyond the default amount, for tasks hosted  on
                               Fargate.

                               sizeInGiB -> (integer)
                                   The  total  amount,  in  GiB,  of ephemeral
                                   storage to set for the  task.  The  minimum
                                   supported  value  is 21 GiB and the maximum
                                   supported value is 200 GiB.

                            executionRoleArn -> (string)
                               The Amazon Resource Name (ARN) of the execution
                               role  that  Batch can assume. For jobs that run
                               on Fargate resources, you must provide an  exe-
                               cution  role.  For  more information, see Batch
                               execution IAM role in the Batch User Guide .

                            platformVersion -> (string)
                               The Fargate platform version where the jobs are
                               running.  A  platform version is specified only
                               for jobs that are running on Fargate resources.
                               If  one  isn't  specified,  the LATEST platform
                               version is used by default. This uses a recent,
                               approved  version  of  the Fargate platform for
                               compute resources. For  more  information,  see
                               Fargate platform versions in the Amazon Elastic
                               Container Service Developer Guide .

                            ipcMode -> (string)
                               The IPC resource namespace to use for the  con-
                               tainers  in the task. The valid values are host
                               , task , or none .

                               If host is specified, all containers within the
                               tasks  that  specified the host IPC mode on the
                               same container instance share the same IPC  re-
                               sources with the host Amazon EC2 instance.

                               If task is specified, all containers within the
                               specified task share the same IPC resources.

                               If none is specified, the IPC resources  within
                               the  containers  of a task are private, and are
                               not shared with other containers in a  task  or
                               on the container instance.

                               If no value is specified, then the IPC resource
                               namespace sharing depends on the Docker  daemon
                               setting on the container instance. For more in-
                               formation, see IPC settings in the  Docker  run
                               reference.

                            taskRoleArn -> (string)
                               The  Amazon  Resource Name (ARN) that's associ-
                               ated with the Amazon ECS task.

                               NOTE:
                                   This   is   object   is    comparable    to
                                   ContainerProperties:jobRoleArn .

                            pidMode -> (string)
                               The process namespace to use for the containers
                               in the task. The valid values are host or  task
                               .  For  example, monitoring sidecars might need
                               pidMode to access information about other  con-
                               tainers running in the same task.

                               If host is specified, all containers within the
                               tasks that specified the host PID mode  on  the
                               same container instance share the process name-
                               space with the host Amazon EC2 instance.

                               If task is specified, all containers within the
                               specified  task  share  the  same process name-
                               space.

                               If no value is specified, the default is a pri-
                               vate namespace for each container. For more in-
                               formation, see PID settings in the  Docker  run
                               reference.

                            networkConfiguration -> (structure)
                               The  network  configuration  for  jobs that are
                               running on Fargate  resources.  Jobs  that  are
                               running  on Amazon EC2 resources must not spec-
                               ify this parameter.

                               assignPublicIp -> (string)
                                   Indicates whether the job has a  public  IP
                                   address.  For  a job that's running on Far-
                                   gate resources in a private subnet to  send
                                   outbound traffic to the internet (for exam-
                                   ple, to pull container images), the private
                                   subnet  requires  a NAT gateway be attached
                                   to route requests to the internet. For more
                                   information, see Amazon ECS task networking
                                   in the Amazon Elastic Container Service De-
                                   veloper  Guide . The default value is "DIS-
                                   ABLED ".

                            runtimePlatform -> (structure)
                               An object that represents the compute  environ-
                               ment architecture for Batch jobs on Fargate.

                               operatingSystemFamily -> (string)
                                   The  operating system for the compute envi-
                                   ronment. Valid values are: LINUX (default),
                                   WINDOWS_SERVER_2019_CORE       ,       WIN-
                                   DOWS_SERVER_2019_FULL        ,         WIN-
                                   DOWS_SERVER_2022_CORE     ,     and    WIN-
                                   DOWS_SERVER_2022_FULL .

                                   NOTE:
                                      The following parameters cant be set for
                                      Windows  containers:  linuxParameters  ,
                                      privileged , user , ulimits ,  readonly-
                                      RootFilesystem , and efsVolumeConfigura-
                                      tion .

                                   NOTE:
                                      The Batch Scheduler checks  the  compute
                                      environments  that  are  attached to the
                                      job queue before registering a task def-
                                      inition  with Fargate. In this scenario,
                                      the job queue is where the job  is  sub-
                                      mitted.  If  the  job requires a Windows
                                      container and the first compute environ-
                                      ment  is LINUX , the compute environment
                                      is skipped and the next compute environ-
                                      ment  is  checked  until a Windows-based
                                      compute environment is found.

                                   NOTE:
                                      Fargate Spot is not supported for  ARM64
                                      and Windows-based containers on Fargate.
                                      A job queue will be blocked if a Fargate
                                      ARM64  or  Windows job is submitted to a
                                      job queue with only Fargate Spot compute
                                      environments.  However,  you  can attach
                                      both FARGATE  and  FARGATE_SPOT  compute
                                      environments to the same job queue.

                               cpuArchitecture -> (string)
                                   The vCPU architecture. The default value is
                                   X86_64 . Valid values are X86_64 and  ARM64
                                   .

                                   NOTE:
                                      This parameter must be set to X86_64 for
                                      Windows containers.

                                   NOTE:
                                      Fargate Spot is not supported for  ARM64
                                      and Windows-based containers on Fargate.
                                      A job queue will be blocked if a Fargate
                                      ARM64  or  Windows job is submitted to a
                                      job queue with only Fargate Spot compute
                                      environments.  However,  you  can attach
                                      both FARGATE  and  FARGATE_SPOT  compute
                                      environments to the same job queue.

                            volumes -> (list)
                               A  list of volumes that are associated with the
                               job.

                               (structure)
                                   A data volume that's used in a  job's  con-
                                   tainer properties.

                                   host -> (structure)
                                      The  contents  of the host parameter de-
                                      termine whether your  data  volume  per-
                                      sists on the host container instance and
                                      where it's stored. If the host parameter
                                      is empty, then the Docker daemon assigns
                                      a host path for your data  volume.  How-
                                      ever,  the data isn't guaranteed to per-
                                      sist after the containers that are asso-
                                      ciated with it stop running.

                                      NOTE:
                                          This  parameter  isn't applicable to
                                          jobs that are running on Fargate re-
                                          sources and shouldn't be provided.

                                      sourcePath -> (string)
                                          The  path  on the host container in-
                                          stance that's presented to the  con-
                                          tainer.  If this parameter is empty,
                                          then the Docker daemon has  assigned
                                          a host path for you. If this parame-
                                          ter contains a file  location,  then
                                          the  data  volume  persists  at  the
                                          specified location on the host  con-
                                          tainer  instance until you delete it
                                          manually. If the source  path  loca-
                                          tion  doesn't exist on the host con-
                                          tainer instance, the  Docker  daemon
                                          creates it. If the location does ex-
                                          ist, the contents of the source path
                                          folder are exported.

                                          NOTE:
                                             This  parameter  isn't applicable
                                             to jobs that run on  Fargate  re-
                                             sources.  Don't  provide this for
                                             these jobs.

                                   name -> (string)
                                      The name of the volume. It can be up  to
                                      255  characters long. It can contain up-
                                      percase and lowercase letters,  numbers,
                                      hyphens  (-),  and underscores (_). This
                                      name is referenced in  the  sourceVolume
                                      parameter of container definition mount-
                                      Points .

                                   efsVolumeConfiguration -> (structure)
                                      This parameter is specified when  you're
                                      using an Amazon Elastic File System file
                                      system for job storage.  Jobs  that  are
                                      running  on Fargate resources must spec-
                                      ify a platformVersion of at least  1.4.0
                                      .

                                      fileSystemId -> (string)
                                          The  Amazon  EFS  file  system ID to
                                          use.

                                      rootDirectory -> (string)
                                          The directory within the Amazon  EFS
                                          file system to mount as the root di-
                                          rectory inside the host. If this pa-
                                          rameter  is omitted, the root of the
                                          Amazon EFS volume is  used  instead.
                                          Specifying  / has the same effect as
                                          omitting this parameter. The maximum
                                          length is 4,096 characters.

                                          WARNING:
                                             If  an EFS access point is speci-
                                             fied in the authorizationConfig ,
                                             the root directory parameter must
                                             either be omitted or set to  /  ,
                                             which  enforces  the  path set on
                                             the Amazon EFS access point.

                                      transitEncryption -> (string)
                                          Determines whether to enable encryp-
                                          tion  for Amazon EFS data in transit
                                          between the Amazon ECS host and  the
                                          Amazon  EFS  server. Transit encryp-
                                          tion must be enabled if  Amazon  EFS
                                          IAM  authorization  is used. If this
                                          parameter is  omitted,  the  default
                                          value  of DISABLED is used. For more
                                          information, see Encrypting data  in
                                          transit  in  the Amazon Elastic File
                                          System User Guide .

                                      transitEncryptionPort -> (integer)
                                          The port to  use  when  sending  en-
                                          crypted  data between the Amazon ECS
                                          host and the Amazon EFS  server.  If
                                          you  don't specify a transit encryp-
                                          tion port, it uses the  port  selec-
                                          tion  strategy  that  the Amazon EFS
                                          mount helper uses. The value must be
                                          between  0  and 65,535. For more in-
                                          formation, see EFS mount  helper  in
                                          the  Amazon Elastic File System User
                                          Guide .

                                      authorizationConfig -> (structure)
                                          The authorization configuration  de-
                                          tails  for  the Amazon EFS file sys-
                                          tem.

                                          accessPointId -> (string)
                                             The Amazon EFS access point ID to
                                             use. If an access point is speci-
                                             fied, the  root  directory  value
                                             specified in the EFSVolumeConfig-
                                             uration must either be omitted or
                                             set  to / which enforces the path
                                             set on the EFS access  point.  If
                                             an  access point is used, transit
                                             encryption must be enabled in the
                                             EFSVolumeConfiguration . For more
                                             information,  see  Working   with
                                             Amazon  EFS  access points in the
                                             Amazon Elastic File  System  User
                                             Guide .

                                          iam -> (string)
                                             Whether  or  not to use the Batch
                                             job IAM role  defined  in  a  job
                                             definition when mounting the Ama-
                                             zon EFS file system. If  enabled,
                                             transit  encryption  must  be en-
                                             abled in the  EFSVolumeConfigura-
                                             tion . If this parameter is omit-
                                             ted, the default  value  of  DIS-
                                             ABLED  is used. For more informa-
                                             tion, see Using Amazon EFS access
                                             points  in the Batch User Guide .
                                             EFS  IAM  authorization  requires
                                             that TransitEncryption be ENABLED
                                             and that a JobRoleArn  is  speci-
                                             fied.

                 eksProperties -> (structure)
                     This  is  an object that represents the properties of the
                     node range for a multi-node parallel job.

                     podProperties -> (structure)
                        The properties for the Kubernetes pod resources  of  a
                        job.

                        serviceAccountName -> (string)
                            The name of the service account that's used to run
                            the pod. For more information, see Kubernetes ser-
                            vice  accounts  and Configure a Kubernetes service
                            account to assume an IAM role in  the  Amazon  EKS
                            User Guide and Configure service accounts for pods
                            in the Kubernetes documentation .

                        hostNetwork -> (boolean)
                            Indicates if the pod uses the  hosts'  network  IP
                            address.  The default value is true . Setting this
                            to false enables  the  Kubernetes  pod  networking
                            model.  Most  Batch  workloads are egress-only and
                            don't require the overhead of  IP  allocation  for
                            each pod for incoming connections. For more infor-
                            mation, see Host namespaces and Pod networking  in
                            the Kubernetes documentation .

                        dnsPolicy -> (string)
                            The  DNS  policy for the pod. The default value is
                            ClusterFirst . If the hostNetwork parameter is not
                            specified,  the default is ClusterFirstWithHostNet
                            . ClusterFirst indicates that any DNS  query  that
                            does  not match the configured cluster domain suf-
                            fix is forwarded to the upstream nameserver inher-
                            ited  from  the  node.  For  more information, see
                            Pod's DNS policy in the Kubernetes documentation .

                            Valid values: Default |  ClusterFirst  |  Cluster-
                            FirstWithHostNet

                        imagePullSecrets -> (list)
                            References  a Kubernetes secret resource. It holds
                            a list of secrets. These secrets help to gain  ac-
                            cess to pull an images from a private registry.
                               ImagePullSecret$name  is required when this ob-
                               ject is used.

                            (structure)
                               References a Kubernetes secret  resource.  This
                               name  of  the secret must start and end with an
                               alphanumeric character, is required to be  low-
                               ercase,  can  include  periods  (.) and hyphens
                               (-), and can't contain more  than  253  charac-
                               ters.

                               name -> (string)
                                   Provides  a  unique  identifier for the Im-
                                   agePullSecret .  This  object  is  required
                                   when  EksPodProperties$imagePullSecrets  is
                                   used.

                        containers -> (list)
                            The properties of the container that's used on the
                            Amazon EKS pod.

                            (structure)
                               EKS  container properties are used in job defi-
                               nitions for Amazon EKS based job definitions to
                               describe the properties for a container node in
                               the pod that's launched as part of a job.  This
                               can't  be  specified  for  Amazon ECS based job
                               definitions.

                               name -> (string)
                                   The name of  the  container.  If  the  name
                                   isn't  specified, the default name "Default
                                   " is used. Each container  in  a  pod  must
                                   have a unique name.

                               image -> (string)
                                   The  Docker  image  used  to start the con-
                                   tainer.

                               imagePullPolicy -> (string)
                                   The image pull policy  for  the  container.
                                   Supported  values are Always , IfNotPresent
                                   , and Never . This  parameter  defaults  to
                                   IfNotPresent  . However, if the :latest tag
                                   is specified, it defaults to Always  .  For
                                   more  information,  see  Updating images in
                                   the Kubernetes documentation .

                               command -> (list)
                                   The  entrypoint  for  the  container.  This
                                   isn't  run  within  a  shell. If this isn't
                                   specified, the ENTRYPOINT of the  container
                                   image  is used. Environment variable refer-
                                   ences are expanded  using  the  container's
                                   environment.

                                   If   the  referenced  environment  variable
                                   doesn't exist, the reference in the command
                                   isn't  changed.  For example, if the refer-
                                   ence is to "$(NAME1) " and the NAME1  envi-
                                   ronment variable doesn't exist, the command
                                   string will remain "$(NAME1) ." $$  is  re-
                                   placed  with  $  and  the  resulting string
                                   isn't expanded. For  example,  $$(VAR_NAME)
                                   will  be  passed  as $(VAR_NAME) whether or
                                   not the VAR_NAME environment  variable  ex-
                                   ists.  The entrypoint can't be updated. For
                                   more information,  see  ENTRYPOINT  in  the
                                   Dockerfile  reference  and Define a command
                                   and   arguments   for   a   container   and
                                   Entrypoint  in the Kubernetes documentation
                                   .

                                   (string)

                               args -> (list)
                                   An array of arguments to the entrypoint. If
                                   this  isn't  specified, the CMD of the con-
                                   tainer image is used. This  corresponds  to
                                   the  args  member in the Entrypoint portion
                                   of the Pod in Kubernetes. Environment vari-
                                   able references are expanded using the con-
                                   tainer's environment.

                                   If  the  referenced  environment   variable
                                   doesn't exist, the reference in the command
                                   isn't changed. For example, if  the  refer-
                                   ence  is to "$(NAME1) " and the NAME1 envi-
                                   ronment variable doesn't exist, the command
                                   string  will  remain "$(NAME1) ." $$ is re-
                                   placed with $ , and  the  resulting  string
                                   isn't  expanded.  For example, $$(VAR_NAME)
                                   is passed as $(VAR_NAME) whether or not the
                                   VAR_NAME  environment  variable exists. For
                                   more information, see Dockerfile reference:
                                   CMD  and Define a command and arguments for
                                   a pod in the Kubernetes documentation .

                                   (string)

                               env -> (list)
                                   The environment variables to pass to a con-
                                   tainer.

                                   NOTE:
                                      Environment  variables cannot start with
                                      "AWS_BATCH ". This naming convention  is
                                      reserved for variables that Batch sets.

                                   (structure)
                                      An environment variable.

                                      name -> (string)
                                          The  name  of  the environment vari-
                                          able.

                                      value -> (string)
                                          The value of the  environment  vari-
                                          able.

                               resources -> (structure)
                                   The  type and amount of resources to assign
                                   to a container. The supported resources in-
                                   clude  memory  , cpu , and nvidia.com/gpu .
                                   For more information, see Resource  manage-
                                   ment  for pods and containers in the Kuber-
                                   netes documentation .

                                   limits -> (map)
                                      The type and quantity of  the  resources
                                      to reserve for the container. The values
                                      vary based on the name that's specified.
                                      Resources  can be requested using either
                                      the limits or the requests objects.
                                          memory

                                      The memory hard limit (in MiB)  for  the
                                      container,  using whole integers, with a
                                      "Mi" suffix. If your container  attempts
                                      to exceed the memory specified, the con-
                                      tainer is terminated. You  must  specify
                                      at least 4 MiB of memory for a job. mem-
                                      ory can be specified  in  limits  ,  re-
                                      quests , or both. If memory is specified
                                      in both places, then  the  value  that's
                                      specified in limits must be equal to the
                                      value that's specified in requests .

                                      NOTE:
                                          To maximize your  resource  utiliza-
                                          tion, provide your jobs with as much
                                          memory as possible for the  specific
                                          instance type that you are using. To
                                          learn how, see Memory management  in
                                          the Batch User Guide .

                                          cpu

                                      The  number  of CPUs that's reserved for
                                      the container. Values must  be  an  even
                                      multiple  of 0.25 . cpu can be specified
                                      in limits , requests , or both.  If  cpu
                                      is  specified  in  both places, then the
                                      value that's specified in limits must be
                                      at  least  as  large as the value that's
                                      specified in requests .
                                          nvidia.com/gpu

                                      The number of GPUs that's  reserved  for
                                      the  container.  Values  must be a whole
                                      integer. memory can be specified in lim-
                                      its  ,  requests , or both. If memory is
                                      specified in both places, then the value
                                      that's specified in limits must be equal
                                      to the value  that's  specified  in  re-
                                      quests .

                                      key -> (string)

                                      value -> (string)

                                   requests -> (map)
                                      The  type  and quantity of the resources
                                      to request for the container. The values
                                      vary based on the name that's specified.
                                      Resources can be requested by using  ei-
                                      ther the limits or the requests objects.
                                          memory

                                      The  memory  hard limit (in MiB) for the
                                      container, using whole integers, with  a
                                      "Mi"  suffix. If your container attempts
                                      to exceed the memory specified, the con-
                                      tainer  is  terminated. You must specify
                                      at least 4 MiB of memory for a job. mem-
                                      ory  can  be  specified  in limits , re-
                                      quests , or both. If memory is specified
                                      in both, then the value that's specified
                                      in limits must be  equal  to  the  value
                                      that's specified in requests .

                                      NOTE:
                                          If  you're  trying  to maximize your
                                          resource  utilization  by  providing
                                          your jobs as much memory as possible
                                          for a particular instance type,  see
                                          Memory  management in the Batch User
                                          Guide .

                                          cpu

                                      The number of CPUs that are reserved for
                                      the  container.  Values  must be an even
                                      multiple of 0.25 . cpu can be  specified
                                      in  limits  , requests , or both. If cpu
                                      is specified in  both,  then  the  value
                                      that's  specified  in  limits must be at
                                      least as large as the value that's spec-
                                      ified in requests .
                                          nvidia.com/gpu

                                      The number of GPUs that are reserved for
                                      the container. Values must  be  a  whole
                                      integer. nvidia.com/gpu can be specified
                                      in limits  ,  requests  ,  or  both.  If
                                      nvidia.com/gpu  is  specified  in  both,
                                      then the value that's specified in  lim-
                                      its  must  be  equal to the value that's
                                      specified in requests .

                                      key -> (string)

                                      value -> (string)

                               volumeMounts -> (list)
                                   The volume mounts for the container.  Batch
                                   supports  emptyDir  , hostPath , and secret
                                   volume types. For  more  information  about
                                   volumes  and  volume  mounts in Kubernetes,
                                   see Volumes in the Kubernetes documentation
                                   .

                                   (structure)
                                      The volume mounts for a container for an
                                      Amazon EKS  job.  For  more  information
                                      about  volumes  and volume mounts in Ku-
                                      bernetes, see Volumes in the  Kubernetes
                                      documentation .

                                      name -> (string)
                                          The name the volume mount. This must
                                          match the name of one of the volumes
                                          in the pod.

                                      mountPath -> (string)
                                          The  path on the container where the
                                          volume is mounted.

                                      readOnly -> (boolean)
                                          If this value is  true  ,  the  con-
                                          tainer  has  read-only access to the
                                          volume. Otherwise, the container can
                                          write  to  the  volume.  The default
                                          value is false .

                               securityContext -> (structure)
                                   The security context for a  job.  For  more
                                   information,  see Configure a security con-
                                   text for a pod or container in  the  Kuber-
                                   netes documentation .

                                   runAsUser -> (long)
                                      When  this  parameter  is specified, the
                                      container is run as the  specified  user
                                      ID (uid ). If this parameter isn't spec-
                                      ified, the default is  the  user  that's
                                      specified  in  the  image metadata. This
                                      parameter maps  to  RunAsUser  and  Mus-
                                      tRanAs  policy  in  the Users and groups
                                      pod security policies in the  Kubernetes
                                      documentation .

                                   runAsGroup -> (long)
                                      When  this  parameter  is specified, the
                                      container is run as the specified  group
                                      ID (gid ). If this parameter isn't spec-
                                      ified, the default is the  group  that's
                                      specified  in  the  image metadata. This
                                      parameter maps to  RunAsGroup  and  Mus-
                                      tRunAs  policy  in  the Users and groups
                                      pod security policies in the  Kubernetes
                                      documentation .

                                   privileged -> (boolean)
                                      When  this  parameter is true , the con-
                                      tainer is given elevated permissions  on
                                      the  host  container instance. The level
                                      of permissions are similar to  the  root
                                      user  permissions.  The default value is
                                      false . This parameter  maps  to  privi-
                                      leged policy in the Privileged pod secu-
                                      rity policies in the Kubernetes documen-
                                      tation .

                                   allowPrivilegeEscalation -> (boolean)
                                      Whether  or  not a container or a Kuber-
                                      netes pod is allowed to gain more privi-
                                      leges  than  its parent process. The de-
                                      fault value is false .

                                   readOnlyRootFilesystem -> (boolean)
                                      When this parameter is true ,  the  con-
                                      tainer  is given read-only access to its
                                      root file system. The default  value  is
                                      false . This parameter maps to ReadOnly-
                                      RootFilesystem policy in the Volumes and
                                      file  systems  pod  security policies in
                                      the Kubernetes documentation .

                                   runAsNonRoot -> (boolean)
                                      When this parameter  is  specified,  the
                                      container  is  run  as a user with a uid
                                      other than 0. If  this  parameter  isn't
                                      specified,  so  such  rule  is enforced.
                                      This parameter  maps  to  RunAsUser  and
                                      MustRunAsNonRoot policy in the Users and
                                      groups pod security policies in the  Ku-
                                      bernetes documentation .

                        initContainers -> (list)
                            These  containers  run before application contain-
                            ers, always runs to completion, and must  complete
                            successfully  before  the  next  container starts.
                            These containers are registered  with  the  Amazon
                            EKS  Connector agent and persists the registration
                            information in the Kubernetes backend data  store.
                            For  more  information, see Init Containers in the
                            Kubernetes documentation .

                            NOTE:
                               This object is limited to 10 elements

                            (structure)
                               EKS container properties are used in job  defi-
                               nitions for Amazon EKS based job definitions to
                               describe the properties for a container node in
                               the  pod that's launched as part of a job. This
                               can't be specified for  Amazon  ECS  based  job
                               definitions.

                               name -> (string)
                                   The  name  of  the  container.  If the name
                                   isn't specified, the default name  "Default
                                   "  is  used.  Each  container in a pod must
                                   have a unique name.

                               image -> (string)
                                   The Docker image used  to  start  the  con-
                                   tainer.

                               imagePullPolicy -> (string)
                                   The  image  pull  policy for the container.
                                   Supported values are Always ,  IfNotPresent
                                   ,  and  Never  . This parameter defaults to
                                   IfNotPresent . However, if the :latest  tag
                                   is  specified,  it defaults to Always . For
                                   more information, see  Updating  images  in
                                   the Kubernetes documentation .

                               command -> (list)
                                   The  entrypoint  for  the  container.  This
                                   isn't run within a  shell.  If  this  isn't
                                   specified,  the ENTRYPOINT of the container
                                   image is used. Environment variable  refer-
                                   ences  are  expanded  using the container's
                                   environment.

                                   If  the  referenced  environment   variable
                                   doesn't exist, the reference in the command
                                   isn't changed. For example, if  the  refer-
                                   ence  is to "$(NAME1) " and the NAME1 envi-
                                   ronment variable doesn't exist, the command
                                   string  will  remain "$(NAME1) ." $$ is re-
                                   placed with  $  and  the  resulting  string
                                   isn't  expanded.  For example, $$(VAR_NAME)
                                   will be passed as  $(VAR_NAME)  whether  or
                                   not  the  VAR_NAME environment variable ex-
                                   ists. The entrypoint can't be updated.  For
                                   more  information,  see  ENTRYPOINT  in the
                                   Dockerfile reference and Define  a  command
                                   and   arguments   for   a   container   and
                                   Entrypoint in the Kubernetes  documentation
                                   .

                                   (string)

                               args -> (list)
                                   An array of arguments to the entrypoint. If
                                   this isn't specified, the CMD of  the  con-
                                   tainer  image  is used. This corresponds to
                                   the args member in the  Entrypoint  portion
                                   of the Pod in Kubernetes. Environment vari-
                                   able references are expanded using the con-
                                   tainer's environment.

                                   If   the  referenced  environment  variable
                                   doesn't exist, the reference in the command
                                   isn't  changed.  For example, if the refer-
                                   ence is to "$(NAME1) " and the NAME1  envi-
                                   ronment variable doesn't exist, the command
                                   string will remain "$(NAME1) ." $$  is  re-
                                   placed  with  $  , and the resulting string
                                   isn't expanded. For  example,  $$(VAR_NAME)
                                   is passed as $(VAR_NAME) whether or not the
                                   VAR_NAME environment variable  exists.  For
                                   more information, see Dockerfile reference:
                                   CMD and Define a command and arguments  for
                                   a pod in the Kubernetes documentation .

                                   (string)

                               env -> (list)
                                   The environment variables to pass to a con-
                                   tainer.

                                   NOTE:
                                      Environment variables cannot start  with
                                      "AWS_BATCH  ". This naming convention is
                                      reserved for variables that Batch sets.

                                   (structure)
                                      An environment variable.

                                      name -> (string)
                                          The name of  the  environment  vari-
                                          able.

                                      value -> (string)
                                          The  value  of the environment vari-
                                          able.

                               resources -> (structure)
                                   The type and amount of resources to  assign
                                   to a container. The supported resources in-
                                   clude memory , cpu , and  nvidia.com/gpu  .
                                   For  more information, see Resource manage-
                                   ment for pods and containers in the  Kuber-
                                   netes documentation .

                                   limits -> (map)
                                      The  type  and quantity of the resources
                                      to reserve for the container. The values
                                      vary based on the name that's specified.
                                      Resources can be requested using  either
                                      the limits or the requests objects.
                                          memory

                                      The  memory  hard limit (in MiB) for the
                                      container, using whole integers, with  a
                                      "Mi"  suffix. If your container attempts
                                      to exceed the memory specified, the con-
                                      tainer  is  terminated. You must specify
                                      at least 4 MiB of memory for a job. mem-
                                      ory  can  be  specified  in limits , re-
                                      quests , or both. If memory is specified
                                      in  both  places,  then the value that's
                                      specified in limits must be equal to the
                                      value that's specified in requests .

                                      NOTE:
                                          To  maximize  your resource utiliza-
                                          tion, provide your jobs with as much
                                          memory  as possible for the specific
                                          instance type that you are using. To
                                          learn  how, see Memory management in
                                          the Batch User Guide .

                                          cpu

                                      The number of CPUs that's  reserved  for
                                      the  container.  Values  must be an even
                                      multiple of 0.25 . cpu can be  specified
                                      in  limits  , requests , or both. If cpu
                                      is specified in both  places,  then  the
                                      value that's specified in limits must be
                                      at least as large as  the  value  that's
                                      specified in requests .
                                          nvidia.com/gpu

                                      The  number  of GPUs that's reserved for
                                      the container. Values must  be  a  whole
                                      integer. memory can be specified in lim-
                                      its , requests , or both. If  memory  is
                                      specified in both places, then the value
                                      that's specified in limits must be equal
                                      to  the  value  that's  specified in re-
                                      quests .

                                      key -> (string)

                                      value -> (string)

                                   requests -> (map)
                                      The type and quantity of  the  resources
                                      to request for the container. The values
                                      vary based on the name that's specified.
                                      Resources  can be requested by using ei-
                                      ther the limits or the requests objects.
                                          memory

                                      The memory hard limit (in MiB)  for  the
                                      container,  using whole integers, with a
                                      "Mi" suffix. If your container  attempts
                                      to exceed the memory specified, the con-
                                      tainer is terminated. You  must  specify
                                      at least 4 MiB of memory for a job. mem-
                                      ory can be specified  in  limits  ,  re-
                                      quests , or both. If memory is specified
                                      in both, then the value that's specified
                                      in  limits  must  be  equal to the value
                                      that's specified in requests .

                                      NOTE:
                                          If you're trying  to  maximize  your
                                          resource  utilization  by  providing
                                          your jobs as much memory as possible
                                          for  a particular instance type, see
                                          Memory management in the Batch  User
                                          Guide .

                                          cpu

                                      The number of CPUs that are reserved for
                                      the container. Values must  be  an  even
                                      multiple  of 0.25 . cpu can be specified
                                      in limits , requests , or both.  If  cpu
                                      is  specified  in  both,  then the value
                                      that's specified in limits  must  be  at
                                      least as large as the value that's spec-
                                      ified in requests .
                                          nvidia.com/gpu

                                      The number of GPUs that are reserved for
                                      the  container.  Values  must be a whole
                                      integer. nvidia.com/gpu can be specified
                                      in  limits  ,  requests  ,  or  both. If
                                      nvidia.com/gpu  is  specified  in  both,
                                      then  the value that's specified in lim-
                                      its must be equal to  the  value  that's
                                      specified in requests .

                                      key -> (string)

                                      value -> (string)

                               volumeMounts -> (list)
                                   The  volume mounts for the container. Batch
                                   supports emptyDir , hostPath ,  and  secret
                                   volume  types.  For  more information about
                                   volumes and volume  mounts  in  Kubernetes,
                                   see Volumes in the Kubernetes documentation
                                   .

                                   (structure)
                                      The volume mounts for a container for an
                                      Amazon  EKS  job.  For  more information
                                      about volumes and volume mounts  in  Ku-
                                      bernetes,  see Volumes in the Kubernetes
                                      documentation .

                                      name -> (string)
                                          The name the volume mount. This must
                                          match the name of one of the volumes
                                          in the pod.

                                      mountPath -> (string)
                                          The path on the container where  the
                                          volume is mounted.

                                      readOnly -> (boolean)
                                          If  this  value  is  true , the con-
                                          tainer has read-only access  to  the
                                          volume. Otherwise, the container can
                                          write to  the  volume.  The  default
                                          value is false .

                               securityContext -> (structure)
                                   The  security  context  for a job. For more
                                   information, see Configure a security  con-
                                   text  for  a pod or container in the Kuber-
                                   netes documentation .

                                   runAsUser -> (long)
                                      When this parameter  is  specified,  the
                                      container  is  run as the specified user
                                      ID (uid ). If this parameter isn't spec-
                                      ified,  the  default  is the user that's
                                      specified in the  image  metadata.  This
                                      parameter  maps  to  RunAsUser  and Mus-
                                      tRanAs policy in the  Users  and  groups
                                      pod  security policies in the Kubernetes
                                      documentation .

                                   runAsGroup -> (long)
                                      When this parameter  is  specified,  the
                                      container  is run as the specified group
                                      ID (gid ). If this parameter isn't spec-
                                      ified,  the  default is the group that's
                                      specified in the  image  metadata.  This
                                      parameter  maps  to  RunAsGroup and Mus-
                                      tRunAs policy in the  Users  and  groups
                                      pod  security policies in the Kubernetes
                                      documentation .

                                   privileged -> (boolean)
                                      When this parameter is true ,  the  con-
                                      tainer  is given elevated permissions on
                                      the host container instance.  The  level
                                      of  permissions  are similar to the root
                                      user permissions. The default  value  is
                                      false  .  This  parameter maps to privi-
                                      leged policy in the Privileged pod secu-
                                      rity policies in the Kubernetes documen-
                                      tation .

                                   allowPrivilegeEscalation -> (boolean)
                                      Whether or not a container or  a  Kuber-
                                      netes pod is allowed to gain more privi-
                                      leges than its parent process.  The  de-
                                      fault value is false .

                                   readOnlyRootFilesystem -> (boolean)
                                      When  this  parameter is true , the con-
                                      tainer is given read-only access to  its
                                      root  file  system. The default value is
                                      false . This parameter maps to ReadOnly-
                                      RootFilesystem policy in the Volumes and
                                      file systems pod  security  policies  in
                                      the Kubernetes documentation .

                                   runAsNonRoot -> (boolean)
                                      When  this  parameter  is specified, the
                                      container is run as a user  with  a  uid
                                      other  than  0.  If this parameter isn't
                                      specified, so  such  rule  is  enforced.
                                      This  parameter  maps  to  RunAsUser and
                                      MustRunAsNonRoot policy in the Users and
                                      groups  pod security policies in the Ku-
                                      bernetes documentation .

                        volumes -> (list)
                            Specifies the volumes for a  job  definition  that
                            uses Amazon EKS resources.

                            (structure)
                               Specifies  an Amazon EKS volume for a job defi-
                               nition.

                               name -> (string)
                                   The name of the volume. The  name  must  be
                                   allowed  as  a DNS subdomain name. For more
                                   information, see DNS subdomain names in the
                                   Kubernetes documentation .

                               hostPath -> (structure)
                                   Specifies the configuration of a Kubernetes
                                   hostPath volume. For more information,  see
                                   hostPath in the Kubernetes documentation .

                                   path -> (string)
                                      The path of the file or directory on the
                                      host to mount  into  containers  on  the
                                      pod.

                               emptyDir -> (structure)
                                   Specifies the configuration of a Kubernetes
                                   emptyDir volume. For more information,  see
                                   emptyDir in the Kubernetes documentation .

                                   medium -> (string)
                                      The  medium to store the volume. The de-
                                      fault value is an  empty  string,  which
                                      uses the storage of the node.
                                             ""

                                          (Default)  Use  the  disk storage of
                                          the node.
                                             "Memory"

                                      Use the tmpfs volume  that's  backed  by
                                      the  RAM  of  the  node. Contents of the
                                      volume are lost when the  node  reboots,
                                      and  any  storage  on  the volume counts
                                      against the container's memory limit.

                                   sizeLimit -> (string)
                                      The maximum size of the volume.  By  de-
                                      fault, there's no maximum size defined.

                               secret -> (structure)
                                   Specifies the configuration of a Kubernetes
                                   secret volume. For  more  information,  see
                                   secret in the Kubernetes documentation .

                                   secretName -> (string)
                                      The name of the secret. The name must be
                                      allowed as a  DNS  subdomain  name.  For
                                      more   information,  see  DNS  subdomain
                                      names in the Kubernetes documentation .

                                   optional -> (boolean)
                                      Specifies whether the secret or the  se-
                                      cret's keys must be defined.

                        metadata -> (structure)
                            Metadata about the Kubernetes pod. For more infor-
                            mation, see Understanding  Kubernetes  Objects  in
                            the Kubernetes documentation .

                            labels -> (map)
                               Key-value pairs used to identify, sort, and or-
                               ganize cube resources. Can contain up to 63 up-
                               percase  letters,  lowercase  letters, numbers,
                               hyphens (-), and underscores (_). Labels can be
                               added  or  modified  at any time. Each resource
                               can have multiple labels, but each key must  be
                               unique for a given object.

                               key -> (string)

                               value -> (string)

                        shareProcessNamespace -> (boolean)
                            Indicates  if  the  processes  in  a container are
                            shared, or visible, to  other  containers  in  the
                            same  pod. For more information, see Share Process
                            Namespace between Containers in a Pod .

       JSON Syntax:

          {
            "numNodes": integer,
            "mainNode": integer,
            "nodeRangeProperties": [
              {
                "targetNodes": "string",
                "container": {
                  "image": "string",
                  "vcpus": integer,
                  "memory": integer,
                  "command": ["string", ...],
                  "jobRoleArn": "string",
                  "executionRoleArn": "string",
                  "volumes": [
                    {
                      "host": {
                        "sourcePath": "string"
                      },
                      "name": "string",
                      "efsVolumeConfiguration": {
                        "fileSystemId": "string",
                        "rootDirectory": "string",
                        "transitEncryption": "ENABLED"|"DISABLED",
                        "transitEncryptionPort": integer,
                        "authorizationConfig": {
                          "accessPointId": "string",
                          "iam": "ENABLED"|"DISABLED"
                        }
                      }
                    }
                    ...
                  ],
                  "environment": [
                    {
                      "name": "string",
                      "value": "string"
                    }
                    ...
                  ],
                  "mountPoints": [
                    {
                      "containerPath": "string",
                      "readOnly": true|false,
                      "sourceVolume": "string"
                    }
                    ...
                  ],
                  "readonlyRootFilesystem": true|false,
                  "privileged": true|false,
                  "ulimits": [
                    {
                      "hardLimit": integer,
                      "name": "string",
                      "softLimit": integer
                    }
                    ...
                  ],
                  "user": "string",
                  "instanceType": "string",
                  "resourceRequirements": [
                    {
                      "value": "string",
                      "type": "GPU"|"VCPU"|"MEMORY"
                    }
                    ...
                  ],
                  "linuxParameters": {
                    "devices": [
                      {
                        "hostPath": "string",
                        "containerPath": "string",
                        "permissions": ["READ"|"WRITE"|"MKNOD", ...]
                      }
                      ...
                    ],
                    "initProcessEnabled": true|false,
                    "sharedMemorySize": integer,
                    "tmpfs": [
                      {
                        "containerPath": "string",
                        "size": integer,
                        "mountOptions": ["string", ...]
                      }
                      ...
                    ],
                    "maxSwap": integer,
                    "swappiness": integer
                  },
                  "logConfiguration": {
                    "logDriver": "json-file"|"syslog"|"journald"|"gelf"|"fluentd"|"awslogs"|"splunk",
                    "options": {"string": "string"
                      ...},
                    "secretOptions": [
                      {
                        "name": "string",
                        "valueFrom": "string"
                      }
                      ...
                    ]
                  },
                  "secrets": [
                    {
                      "name": "string",
                      "valueFrom": "string"
                    }
                    ...
                  ],
                  "networkConfiguration": {
                    "assignPublicIp": "ENABLED"|"DISABLED"
                  },
                  "fargatePlatformConfiguration": {
                    "platformVersion": "string"
                  },
                  "ephemeralStorage": {
                    "sizeInGiB": integer
                  },
                  "runtimePlatform": {
                    "operatingSystemFamily": "string",
                    "cpuArchitecture": "string"
                  },
                  "repositoryCredentials": {
                    "credentialsParameter": "string"
                  }
                },
                "instanceTypes": ["string", ...],
                "ecsProperties": {
                  "taskProperties": [
                    {
                      "containers": [
                        {
                          "command": ["string", ...],
                          "dependsOn": [
                            {
                              "containerName": "string",
                              "condition": "string"
                            }
                            ...
                          ],
                          "environment": [
                            {
                              "name": "string",
                              "value": "string"
                            }
                            ...
                          ],
                          "essential": true|false,
                          "image": "string",
                          "linuxParameters": {
                            "devices": [
                              {
                                "hostPath": "string",
                                "containerPath": "string",
                                "permissions": ["READ"|"WRITE"|"MKNOD", ...]
                              }
                              ...
                            ],
                            "initProcessEnabled": true|false,
                            "sharedMemorySize": integer,
                            "tmpfs": [
                              {
                                "containerPath": "string",
                                "size": integer,
                                "mountOptions": ["string", ...]
                              }
                              ...
                            ],
                            "maxSwap": integer,
                            "swappiness": integer
                          },
                          "logConfiguration": {
                            "logDriver": "json-file"|"syslog"|"journald"|"gelf"|"fluentd"|"awslogs"|"splunk",
                            "options": {"string": "string"
                              ...},
                            "secretOptions": [
                              {
                                "name": "string",
                                "valueFrom": "string"
                              }
                              ...
                            ]
                          },
                          "mountPoints": [
                            {
                              "containerPath": "string",
                              "readOnly": true|false,
                              "sourceVolume": "string"
                            }
                            ...
                          ],
                          "name": "string",
                          "privileged": true|false,
                          "readonlyRootFilesystem": true|false,
                          "repositoryCredentials": {
                            "credentialsParameter": "string"
                          },
                          "resourceRequirements": [
                            {
                              "value": "string",
                              "type": "GPU"|"VCPU"|"MEMORY"
                            }
                            ...
                          ],
                          "secrets": [
                            {
                              "name": "string",
                              "valueFrom": "string"
                            }
                            ...
                          ],
                          "ulimits": [
                            {
                              "hardLimit": integer,
                              "name": "string",
                              "softLimit": integer
                            }
                            ...
                          ],
                          "user": "string"
                        }
                        ...
                      ],
                      "ephemeralStorage": {
                        "sizeInGiB": integer
                      },
                      "executionRoleArn": "string",
                      "platformVersion": "string",
                      "ipcMode": "string",
                      "taskRoleArn": "string",
                      "pidMode": "string",
                      "networkConfiguration": {
                        "assignPublicIp": "ENABLED"|"DISABLED"
                      },
                      "runtimePlatform": {
                        "operatingSystemFamily": "string",
                        "cpuArchitecture": "string"
                      },
                      "volumes": [
                        {
                          "host": {
                            "sourcePath": "string"
                          },
                          "name": "string",
                          "efsVolumeConfiguration": {
                            "fileSystemId": "string",
                            "rootDirectory": "string",
                            "transitEncryption": "ENABLED"|"DISABLED",
                            "transitEncryptionPort": integer,
                            "authorizationConfig": {
                              "accessPointId": "string",
                              "iam": "ENABLED"|"DISABLED"
                            }
                          }
                        }
                        ...
                      ]
                    }
                    ...
                  ]
                },
                "eksProperties": {
                  "podProperties": {
                    "serviceAccountName": "string",
                    "hostNetwork": true|false,
                    "dnsPolicy": "string",
                    "imagePullSecrets": [
                      {
                        "name": "string"
                      }
                      ...
                    ],
                    "containers": [
                      {
                        "name": "string",
                        "image": "string",
                        "imagePullPolicy": "string",
                        "command": ["string", ...],
                        "args": ["string", ...],
                        "env": [
                          {
                            "name": "string",
                            "value": "string"
                          }
                          ...
                        ],
                        "resources": {
                          "limits": {"string": "string"
                            ...},
                          "requests": {"string": "string"
                            ...}
                        },
                        "volumeMounts": [
                          {
                            "name": "string",
                            "mountPath": "string",
                            "readOnly": true|false
                          }
                          ...
                        ],
                        "securityContext": {
                          "runAsUser": long,
                          "runAsGroup": long,
                          "privileged": true|false,
                          "allowPrivilegeEscalation": true|false,
                          "readOnlyRootFilesystem": true|false,
                          "runAsNonRoot": true|false
                        }
                      }
                      ...
                    ],
                    "initContainers": [
                      {
                        "name": "string",
                        "image": "string",
                        "imagePullPolicy": "string",
                        "command": ["string", ...],
                        "args": ["string", ...],
                        "env": [
                          {
                            "name": "string",
                            "value": "string"
                          }
                          ...
                        ],
                        "resources": {
                          "limits": {"string": "string"
                            ...},
                          "requests": {"string": "string"
                            ...}
                        },
                        "volumeMounts": [
                          {
                            "name": "string",
                            "mountPath": "string",
                            "readOnly": true|false
                          }
                          ...
                        ],
                        "securityContext": {
                          "runAsUser": long,
                          "runAsGroup": long,
                          "privileged": true|false,
                          "allowPrivilegeEscalation": true|false,
                          "readOnlyRootFilesystem": true|false,
                          "runAsNonRoot": true|false
                        }
                      }
                      ...
                    ],
                    "volumes": [
                      {
                        "name": "string",
                        "hostPath": {
                          "path": "string"
                        },
                        "emptyDir": {
                          "medium": "string",
                          "sizeLimit": "string"
                        },
                        "secret": {
                          "secretName": "string",
                          "optional": true|false
                        }
                      }
                      ...
                    ],
                    "metadata": {
                      "labels": {"string": "string"
                        ...}
                    },
                    "shareProcessNamespace": true|false
                  }
                }
              }
              ...
            ]
          }

       --retry-strategy (structure)
          The retry strategy to use for failed jobs that  are  submitted  with
          this  job  definition.  Any retry strategy that's specified during a
          SubmitJob operation overrides the retry strategy defined here. If  a
          job is terminated due to a timeout, it isn't retried.

          attempts -> (integer)
              The  number  of  times to move a job to the RUNNABLE status. You
              can specify between 1 and 10 attempts. If the value of  attempts
              is greater than one, the job is retried on failure the same num-
              ber of attempts as the value.

          evaluateOnExit -> (list)
              Array of up to 5 objects that specify the conditions where  jobs
              are  retried or failed. If this parameter is specified, then the
              attempts parameter must also be specified. If none of the listed
              conditions match, then the job is retried.

              (structure)
                 Specifies  an  array  of up to 5 conditions to be met, and an
                 action to take (RETRY or EXIT ) if all conditions are met. If
                 none  of  the  EvaluateOnExit  conditions  in a RetryStrategy
                 match, then the job is retried.

                 onStatusReason -> (string)
                     Contains a glob pattern to match against the StatusReason
                     returned  for  a  job.  The pattern can contain up to 512
                     characters. It can contain letters, numbers, periods (.),
                     colons  (:), and white spaces (including spaces or tabs).
                     It can optionally end with an asterisk (*) so  that  only
                     the start of the string needs to be an exact match.

                 onReason -> (string)
                     Contains  a  glob pattern to match against the Reason re-
                     turned for a job. The pattern can contain up to 512 char-
                     acters.  It  can  contain  letters, numbers, periods (.),
                     colons (:), and white space (including spaces and  tabs).
                     It  can  optionally end with an asterisk (*) so that only
                     the start of the string needs to be an exact match.

                 onExitCode -> (string)
                     Contains a glob pattern to match against the decimal rep-
                     resentation  of the ExitCode returned for a job. The pat-
                     tern can be up to 512 characters  long.  It  can  contain
                     only  numbers,  and  can end with an asterisk (*) so that
                     only the start of the string needs to be an exact match.

                     The string can contain up to 512 characters.

                 action -> (string)
                     Specifies the action to take if all of the specified con-
                     ditions (onStatusReason , onReason , and onExitCode ) are
                     met. The values aren't case sensitive.

       Shorthand Syntax:

          attempts=integer,evaluateOnExit=[{onStatusReason=string,onReason=string,onExitCode=string,action=string},{onStatusReason=string,onReason=string,onExitCode=string,action=string}]

       JSON Syntax:

          {
            "attempts": integer,
            "evaluateOnExit": [
              {
                "onStatusReason": "string",
                "onReason": "string",
                "onExitCode": "string",
                "action": "RETRY"|"EXIT"
              }
              ...
            ]
          }

       --propagate-tags | --no-propagate-tags (boolean)
          Specifies whether to propagate the tags from the job or job  defini-
          tion to the corresponding Amazon ECS task. If no value is specified,
          the tags are not propagated. Tags can  only  be  propagated  to  the
          tasks  during  task  creation. For tags with the same name, job tags
          are given priority over job definitions tags. If the total number of
          combined tags from the job and job definition is over 50, the job is
          moved to the FAILED state.

          NOTE:
              If the job runs on Amazon EKS resources, then you must not spec-
              ify propagateTags .

       --timeout (structure)
          The  timeout configuration for jobs that are submitted with this job
          definition, after which Batch terminates your jobs if they have  not
          finished. If a job is terminated due to a timeout, it isn't retried.
          The minimum value for the timeout is 60 seconds. Any timeout config-
          uration that's specified during a  SubmitJob operation overrides the
          timeout configuration defined here. For more  information,  see  Job
          Timeouts in the Batch User Guide .

          attemptDurationSeconds -> (integer)
              The  job  timeout time (in seconds) that's measured from the job
              attempt's startedAt timestamp. After  this  time  passes,  Batch
              terminates  your jobs if they aren't finished. The minimum value
              for the timeout is 60 seconds.

              For array jobs, the timeout applies to the child  jobs,  not  to
              the parent array job.

              For  multi-node  parallel (MNP) jobs, the timeout applies to the
              whole job, not to the individual nodes.

       Shorthand Syntax:

          attemptDurationSeconds=integer

       JSON Syntax:

          {
            "attemptDurationSeconds": integer
          }

       --tags (map)
          The tags that you apply to the job definition to help you categorize
          and  organize  your resources. Each tag consists of a key and an op-
          tional value. For more information, see Tagging Amazon Web  Services
          Resources in Batch User Guide .

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --platform-capabilities (list)
          The  platform  capabilities  required  by  the job definition. If no
          value is specified, it defaults to EC2 . To run the job  on  Fargate
          resources, specify FARGATE .

          NOTE:
              If the job runs on Amazon EKS resources, then you must not spec-
              ify platformCapabilities .

          (string)

       Syntax:

          "string" "string" ...

          Where valid values are:
            EC2
            FARGATE

       --eks-properties (structure)
          An object with properties that  are  specific  to  Amazon  EKS-based
          jobs.  This  must  not be specified for Amazon ECS based job defini-
          tions.

          podProperties -> (structure)
              The properties for the Kubernetes pod resources of a job.

              serviceAccountName -> (string)
                 The name of the service account that's used to run  the  pod.
                 For  more  information,  see  Kubernetes service accounts and
                 Configure a Kubernetes service account to assume an IAM  role
                 in  the  Amazon EKS User Guide and Configure service accounts
                 for pods in the Kubernetes documentation .

              hostNetwork -> (boolean)
                 Indicates if the pod uses the hosts' network IP address.  The
                 default value is true . Setting this to false enables the Ku-
                 bernetes pod  networking  model.  Most  Batch  workloads  are
                 egress-only  and  don't require the overhead of IP allocation
                 for each pod for incoming connections. For more  information,
                 see Host namespaces and Pod networking in the Kubernetes doc-
                 umentation .

              dnsPolicy -> (string)
                 The DNS policy for the pod. The default value is ClusterFirst
                 .  If the hostNetwork parameter is not specified, the default
                 is ClusterFirstWithHostNet . ClusterFirst indicates that  any
                 DNS  query  that does not match the configured cluster domain
                 suffix is forwarded to the upstream nameserver inherited from
                 the  node.  For more information, see Pod's DNS policy in the
                 Kubernetes documentation .

                 Valid values: Default | ClusterFirst |  ClusterFirstWithHost-
                 Net

              imagePullSecrets -> (list)
                 References  a  Kubernetes secret resource. It holds a list of
                 secrets. These secrets help to gain access to pull an  images
                 from a private registry.
                     ImagePullSecret$name  is  required  when  this  object is
                     used.

                 (structure)
                     References a Kubernetes secret resource. This name of the
                     secret must start and end with an alphanumeric character,
                     is required to be lowercase, can include periods (.)  and
                     hyphens (-), and can't contain more than 253 characters.

                     name -> (string)
                        Provides a unique identifier for the ImagePullSecret .
                        This  object  is  required  when  EksPodProperties$im-
                        agePullSecrets is used.

              containers -> (list)
                 The properties of the container that's used on the Amazon EKS
                 pod.

                 (structure)
                     EKS container properties are used in job definitions  for
                     Amazon  EKS based job definitions to describe the proper-
                     ties for a container node in the pod that's  launched  as
                     part  of  a  job.  This can't be specified for Amazon ECS
                     based job definitions.

                     name -> (string)
                        The name of the container. If the  name  isn't  speci-
                        fied,  the  default name "Default " is used. Each con-
                        tainer in a pod must have a unique name.

                     image -> (string)
                        The Docker image used to start the container.

                     imagePullPolicy -> (string)
                        The image pull policy  for  the  container.  Supported
                        values  are  Always  , IfNotPresent , and Never . This
                        parameter defaults to IfNotPresent . However,  if  the
                        :latest  tag is specified, it defaults to Always . For
                        more information, see Updating images  in  the  Kuber-
                        netes documentation .

                     command -> (list)
                        The  entrypoint  for  the  container.  This  isn't run
                        within a shell. If this isn't  specified,  the  ENTRY-
                        POINT  of  the  container  image  is used. Environment
                        variable references are expanded using the container's
                        environment.

                        If  the referenced environment variable doesn't exist,
                        the reference in the command isn't changed. For  exam-
                        ple,  if the reference is to "$(NAME1) " and the NAME1
                        environment variable doesn't exist, the command string
                        will remain "$(NAME1) ." $$ is replaced with $ and the
                        resulting  string   isn't   expanded.   For   example,
                        $$(VAR_NAME)  will be passed as $(VAR_NAME) whether or
                        not the VAR_NAME environment variable exists. The  en-
                        trypoint  can't  be updated. For more information, see
                        ENTRYPOINT in the Dockerfile reference  and  Define  a
                        command  and  arguments for a container and Entrypoint
                        in the Kubernetes documentation .

                        (string)

                     args -> (list)
                        An array of arguments to the entrypoint. If this isn't
                        specified,  the  CMD  of  the container image is used.
                        This corresponds to the args member in the  Entrypoint
                        portion of the Pod in Kubernetes. Environment variable
                        references are expanded using the container's environ-
                        ment.

                        If  the referenced environment variable doesn't exist,
                        the reference in the command isn't changed. For  exam-
                        ple,  if the reference is to "$(NAME1) " and the NAME1
                        environment variable doesn't exist, the command string
                        will  remain  "$(NAME1) ." $$ is replaced with $ , and
                        the resulting  string  isn't  expanded.  For  example,
                        $$(VAR_NAME)  is  passed as $(VAR_NAME) whether or not
                        the VAR_NAME environment variable exists. For more in-
                        formation,  see Dockerfile reference: CMD and Define a
                        command and arguments for a pod in the Kubernetes doc-
                        umentation .

                        (string)

                     env -> (list)
                        The environment variables to pass to a container.

                        NOTE:
                            Environment variables cannot start with "AWS_BATCH
                            ". This naming convention is  reserved  for  vari-
                            ables that Batch sets.

                        (structure)
                            An environment variable.

                            name -> (string)
                               The name of the environment variable.

                            value -> (string)
                               The value of the environment variable.

                     resources -> (structure)
                        The  type  and amount of resources to assign to a con-
                        tainer. The supported resources include memory , cpu ,
                        and   nvidia.com/gpu   .  For  more  information,  see
                        Resource management for pods and containers in the Ku-
                        bernetes documentation .

                        limits -> (map)
                            The  type and quantity of the resources to reserve
                            for the container. The values vary  based  on  the
                            name  that's specified. Resources can be requested
                            using either the limits or the requests objects.
                               memory

                            The memory hard limit (in MiB) for the  container,
                            using  whole integers, with a "Mi" suffix. If your
                            container attempts to exceed the memory specified,
                            the  container  is terminated. You must specify at
                            least 4 MiB of memory for a  job.  memory  can  be
                            specified  in limits , requests , or both. If mem-
                            ory is specified in both places,  then  the  value
                            that's  specified  in  limits must be equal to the
                            value that's specified in requests .

                            NOTE:
                               To maximize your resource utilization,  provide
                               your  jobs  with as much memory as possible for
                               the specific instance type that you are  using.
                               To  learn  how,  see  Memory  management in the
                               Batch User Guide .

                               cpu

                            The number of CPUs that's reserved  for  the  con-
                            tainer.  Values must be an even multiple of 0.25 .
                            cpu can be specified in limits  ,  requests  ,  or
                            both. If cpu is specified in both places, then the
                            value that's specified in limits must be at  least
                            as large as the value that's specified in requests
                            .
                               nvidia.com/gpu

                            The number of GPUs that's reserved  for  the  con-
                            tainer. Values must be a whole integer. memory can
                            be specified in limits , requests ,  or  both.  If
                            memory is specified in both places, then the value
                            that's specified in limits must be  equal  to  the
                            value that's specified in requests .

                            key -> (string)

                            value -> (string)

                        requests -> (map)
                            The  type and quantity of the resources to request
                            for the container. The values vary  based  on  the
                            name  that's specified. Resources can be requested
                            by using either the limits  or  the  requests  ob-
                            jects.
                               memory

                            The  memory hard limit (in MiB) for the container,
                            using whole integers, with a "Mi" suffix. If  your
                            container attempts to exceed the memory specified,
                            the container is terminated. You must  specify  at
                            least  4  MiB  of  memory for a job. memory can be
                            specified in limits , requests , or both. If  mem-
                            ory  is  specified  in both, then the value that's
                            specified in limits must be  equal  to  the  value
                            that's specified in requests .

                            NOTE:
                               If you're trying to maximize your resource uti-
                               lization by providing your jobs as much  memory
                               as possible for a particular instance type, see
                               Memory management in the Batch User Guide .

                               cpu

                            The number of CPUs that are reserved for the  con-
                            tainer.  Values must be an even multiple of 0.25 .
                            cpu can be specified in limits  ,  requests  ,  or
                            both.  If cpu is specified in both, then the value
                            that's specified in limits must  be  at  least  as
                            large as the value that's specified in requests .
                               nvidia.com/gpu

                            The  number of GPUs that are reserved for the con-
                            tainer.  Values   must   be   a   whole   integer.
                            nvidia.com/gpu  can  be  specified in limits , re-
                            quests , or both. If nvidia.com/gpu  is  specified
                            in both, then the value that's specified in limits
                            must be equal to the value that's specified in re-
                            quests .

                            key -> (string)

                            value -> (string)

                     volumeMounts -> (list)
                        The  volume  mounts  for the container. Batch supports
                        emptyDir , hostPath , and  secret  volume  types.  For
                        more  information  about  volumes and volume mounts in
                        Kubernetes, see Volumes in the  Kubernetes  documenta-
                        tion .

                        (structure)
                            The  volume  mounts  for a container for an Amazon
                            EKS job. For more information  about  volumes  and
                            volume  mounts  in  Kubernetes, see Volumes in the
                            Kubernetes documentation .

                            name -> (string)
                               The name the volume mount. This must match  the
                               name of one of the volumes in the pod.

                            mountPath -> (string)
                               The  path  on the container where the volume is
                               mounted.

                            readOnly -> (boolean)
                               If this value  is  true  ,  the  container  has
                               read-only  access to the volume. Otherwise, the
                               container can write to the volume. The  default
                               value is false .

                     securityContext -> (structure)
                        The  security context for a job. For more information,
                        see Configure a security context for  a  pod  or  con-
                        tainer in the Kubernetes documentation .

                        runAsUser -> (long)
                            When this parameter is specified, the container is
                            run as the specified user ID (uid ). If  this  pa-
                            rameter  isn't  specified, the default is the user
                            that's specified in the image metadata.  This  pa-
                            rameter  maps to RunAsUser and MustRanAs policy in
                            the Users and groups pod security policies in  the
                            Kubernetes documentation .

                        runAsGroup -> (long)
                            When this parameter is specified, the container is
                            run as the specified group ID (gid ). If this  pa-
                            rameter  isn't specified, the default is the group
                            that's specified in the image metadata.  This  pa-
                            rameter maps to RunAsGroup and MustRunAs policy in
                            the Users and groups pod security policies in  the
                            Kubernetes documentation .

                        privileged -> (boolean)
                            When  this  parameter  is  true , the container is
                            given elevated permissions on the  host  container
                            instance.  The level of permissions are similar to
                            the root user permissions. The  default  value  is
                            false  .  This parameter maps to privileged policy
                            in the Privileged pod security policies in the Ku-
                            bernetes documentation .

                        allowPrivilegeEscalation -> (boolean)
                            Whether  or not a container or a Kubernetes pod is
                            allowed to gain more privileges  than  its  parent
                            process. The default value is false .

                        readOnlyRootFilesystem -> (boolean)
                            When  this  parameter  is  true , the container is
                            given read-only access to its  root  file  system.
                            The  default  value is false . This parameter maps
                            to ReadOnlyRootFilesystem policy  in  the  Volumes
                            and  file systems pod security policies in the Ku-
                            bernetes documentation .

                        runAsNonRoot -> (boolean)
                            When this parameter is specified, the container is
                            run as a user with a uid other than 0. If this pa-
                            rameter isn't specified, so such rule is enforced.
                            This parameter maps to RunAsUser and MustRunAsNon-
                            Root policy in the Users and groups  pod  security
                            policies in the Kubernetes documentation .

              initContainers -> (list)
                 These  containers  run  before application containers, always
                 runs to completion, and must complete successfully before the
                 next  container  starts. These containers are registered with
                 the Amazon EKS Connector agent and persists the  registration
                 information  in  the  Kubernetes backend data store. For more
                 information, see Init Containers in the Kubernetes documenta-
                 tion .

                 NOTE:
                     This object is limited to 10 elements

                 (structure)
                     EKS  container properties are used in job definitions for
                     Amazon EKS based job definitions to describe the  proper-
                     ties  for  a container node in the pod that's launched as
                     part of a job. This can't be  specified  for  Amazon  ECS
                     based job definitions.

                     name -> (string)
                        The  name  of  the container. If the name isn't speci-
                        fied, the default name "Default " is used.  Each  con-
                        tainer in a pod must have a unique name.

                     image -> (string)
                        The Docker image used to start the container.

                     imagePullPolicy -> (string)
                        The  image  pull  policy  for the container. Supported
                        values are Always , IfNotPresent , and  Never  .  This
                        parameter  defaults  to IfNotPresent . However, if the
                        :latest tag is specified, it defaults to Always .  For
                        more  information,  see  Updating images in the Kuber-
                        netes documentation .

                     command -> (list)
                        The entrypoint  for  the  container.  This  isn't  run
                        within  a  shell.  If this isn't specified, the ENTRY-
                        POINT of the  container  image  is  used.  Environment
                        variable references are expanded using the container's
                        environment.

                        If the referenced environment variable doesn't  exist,
                        the  reference in the command isn't changed. For exam-
                        ple, if the reference is to "$(NAME1) " and the  NAME1
                        environment variable doesn't exist, the command string
                        will remain "$(NAME1) ." $$ is replaced with $ and the
                        resulting   string   isn't   expanded.   For  example,
                        $$(VAR_NAME) will be passed as $(VAR_NAME) whether  or
                        not  the VAR_NAME environment variable exists. The en-
                        trypoint can't be updated. For more  information,  see
                        ENTRYPOINT  in  the  Dockerfile reference and Define a
                        command and arguments for a container  and  Entrypoint
                        in the Kubernetes documentation .

                        (string)

                     args -> (list)
                        An array of arguments to the entrypoint. If this isn't
                        specified, the CMD of the  container  image  is  used.
                        This  corresponds to the args member in the Entrypoint
                        portion of the Pod in Kubernetes. Environment variable
                        references are expanded using the container's environ-
                        ment.

                        If the referenced environment variable doesn't  exist,
                        the  reference in the command isn't changed. For exam-
                        ple, if the reference is to "$(NAME1) " and the  NAME1
                        environment variable doesn't exist, the command string
                        will remain "$(NAME1) ." $$ is replaced with $  ,  and
                        the  resulting  string  isn't  expanded.  For example,
                        $$(VAR_NAME) is passed as $(VAR_NAME) whether  or  not
                        the VAR_NAME environment variable exists. For more in-
                        formation, see Dockerfile reference: CMD and Define  a
                        command and arguments for a pod in the Kubernetes doc-
                        umentation .

                        (string)

                     env -> (list)
                        The environment variables to pass to a container.

                        NOTE:
                            Environment variables cannot start with "AWS_BATCH
                            ".  This  naming  convention is reserved for vari-
                            ables that Batch sets.

                        (structure)
                            An environment variable.

                            name -> (string)
                               The name of the environment variable.

                            value -> (string)
                               The value of the environment variable.

                     resources -> (structure)
                        The type and amount of resources to assign to  a  con-
                        tainer. The supported resources include memory , cpu ,
                        and  nvidia.com/gpu  .  For  more   information,   see
                        Resource management for pods and containers in the Ku-
                        bernetes documentation .

                        limits -> (map)
                            The type and quantity of the resources to  reserve
                            for  the  container.  The values vary based on the
                            name that's specified. Resources can be  requested
                            using either the limits or the requests objects.
                               memory

                            The  memory hard limit (in MiB) for the container,
                            using whole integers, with a "Mi" suffix. If  your
                            container attempts to exceed the memory specified,
                            the container is terminated. You must  specify  at
                            least  4  MiB  of  memory for a job. memory can be
                            specified in limits , requests , or both. If  mem-
                            ory  is  specified  in both places, then the value
                            that's specified in limits must be  equal  to  the
                            value that's specified in requests .

                            NOTE:
                               To  maximize your resource utilization, provide
                               your jobs with as much memory as  possible  for
                               the  specific instance type that you are using.
                               To learn how,  see  Memory  management  in  the
                               Batch User Guide .

                               cpu

                            The  number  of  CPUs that's reserved for the con-
                            tainer. Values must be an even multiple of 0.25  .
                            cpu  can  be  specified  in limits , requests , or
                            both. If cpu is specified in both places, then the
                            value  that's specified in limits must be at least
                            as large as the value that's specified in requests
                            .
                               nvidia.com/gpu

                            The  number  of  GPUs that's reserved for the con-
                            tainer. Values must be a whole integer. memory can
                            be  specified  in  limits , requests , or both. If
                            memory is specified in both places, then the value
                            that's  specified  in  limits must be equal to the
                            value that's specified in requests .

                            key -> (string)

                            value -> (string)

                        requests -> (map)
                            The type and quantity of the resources to  request
                            for  the  container.  The values vary based on the
                            name that's specified. Resources can be  requested
                            by  using  either  the  limits or the requests ob-
                            jects.
                               memory

                            The memory hard limit (in MiB) for the  container,
                            using  whole integers, with a "Mi" suffix. If your
                            container attempts to exceed the memory specified,
                            the  container  is terminated. You must specify at
                            least 4 MiB of memory for a  job.  memory  can  be
                            specified  in limits , requests , or both. If mem-
                            ory is specified in both, then  the  value  that's
                            specified  in  limits  must  be equal to the value
                            that's specified in requests .

                            NOTE:
                               If you're trying to maximize your resource uti-
                               lization  by providing your jobs as much memory
                               as possible for a particular instance type, see
                               Memory management in the Batch User Guide .

                               cpu

                            The  number of CPUs that are reserved for the con-
                            tainer. Values must be an even multiple of 0.25  .
                            cpu  can  be  specified  in limits , requests , or
                            both. If cpu is specified in both, then the  value
                            that's  specified  in  limits  must be at least as
                            large as the value that's specified in requests .
                               nvidia.com/gpu

                            The number of GPUs that are reserved for the  con-
                            tainer.   Values   must   be   a   whole  integer.
                            nvidia.com/gpu can be specified in  limits  ,  re-
                            quests  ,  or both. If nvidia.com/gpu is specified
                            in both, then the value that's specified in limits
                            must be equal to the value that's specified in re-
                            quests .

                            key -> (string)

                            value -> (string)

                     volumeMounts -> (list)
                        The volume mounts for the  container.  Batch  supports
                        emptyDir  ,  hostPath  ,  and secret volume types. For
                        more information about volumes and  volume  mounts  in
                        Kubernetes,  see  Volumes in the Kubernetes documenta-
                        tion .

                        (structure)
                            The volume mounts for a container  for  an  Amazon
                            EKS  job.  For  more information about volumes and
                            volume mounts in Kubernetes, see  Volumes  in  the
                            Kubernetes documentation .

                            name -> (string)
                               The  name the volume mount. This must match the
                               name of one of the volumes in the pod.

                            mountPath -> (string)
                               The path on the container where the  volume  is
                               mounted.

                            readOnly -> (boolean)
                               If  this  value  is  true  ,  the container has
                               read-only access to the volume. Otherwise,  the
                               container  can write to the volume. The default
                               value is false .

                     securityContext -> (structure)
                        The security context for a job. For more  information,
                        see  Configure  a  security  context for a pod or con-
                        tainer in the Kubernetes documentation .

                        runAsUser -> (long)
                            When this parameter is specified, the container is
                            run  as  the specified user ID (uid ). If this pa-
                            rameter isn't specified, the default is  the  user
                            that's  specified  in the image metadata. This pa-
                            rameter maps to RunAsUser and MustRanAs policy  in
                            the  Users and groups pod security policies in the
                            Kubernetes documentation .

                        runAsGroup -> (long)
                            When this parameter is specified, the container is
                            run  as the specified group ID (gid ). If this pa-
                            rameter isn't specified, the default is the  group
                            that's  specified  in the image metadata. This pa-
                            rameter maps to RunAsGroup and MustRunAs policy in
                            the  Users and groups pod security policies in the
                            Kubernetes documentation .

                        privileged -> (boolean)
                            When this parameter is true  ,  the  container  is
                            given  elevated  permissions on the host container
                            instance. The level of permissions are similar  to
                            the  root  user  permissions. The default value is
                            false . This parameter maps to  privileged  policy
                            in the Privileged pod security policies in the Ku-
                            bernetes documentation .

                        allowPrivilegeEscalation -> (boolean)
                            Whether or not a container or a Kubernetes pod  is
                            allowed  to  gain  more privileges than its parent
                            process. The default value is false .

                        readOnlyRootFilesystem -> (boolean)
                            When this parameter is true  ,  the  container  is
                            given  read-only  access  to its root file system.
                            The default value is false . This  parameter  maps
                            to  ReadOnlyRootFilesystem  policy  in the Volumes
                            and file systems pod security policies in the  Ku-
                            bernetes documentation .

                        runAsNonRoot -> (boolean)
                            When this parameter is specified, the container is
                            run as a user with a uid other than 0. If this pa-
                            rameter isn't specified, so such rule is enforced.
                            This parameter maps to RunAsUser and MustRunAsNon-
                            Root  policy  in the Users and groups pod security
                            policies in the Kubernetes documentation .

              volumes -> (list)
                 Specifies the volumes for a job definition that  uses  Amazon
                 EKS resources.

                 (structure)
                     Specifies an Amazon EKS volume for a job definition.

                     name -> (string)
                        The  name of the volume. The name must be allowed as a
                        DNS subdomain name. For more information, see DNS sub-
                        domain names in the Kubernetes documentation .

                     hostPath -> (structure)
                        Specifies  the  configuration of a Kubernetes hostPath
                        volume. For more information, see hostPath in the  Ku-
                        bernetes documentation .

                        path -> (string)
                            The  path  of the file or directory on the host to
                            mount into containers on the pod.

                     emptyDir -> (structure)
                        Specifies the configuration of a  Kubernetes  emptyDir
                        volume.  For more information, see emptyDir in the Ku-
                        bernetes documentation .

                        medium -> (string)
                            The medium to store the volume. The default  value
                            is  an empty string, which uses the storage of the
                            node.
                                   ""

                               (Default) Use the disk storage of the node.
                                   "Memory"

                            Use the tmpfs volume that's backed by the  RAM  of
                            the node. Contents of the volume are lost when the
                            node reboots, and any storage on the volume counts
                            against the container's memory limit.

                        sizeLimit -> (string)
                            The  maximum  size  of  the  volume.  By  default,
                            there's no maximum size defined.

                     secret -> (structure)
                        Specifies the configuration  of  a  Kubernetes  secret
                        volume. For more information, see secret in the Kuber-
                        netes documentation .

                        secretName -> (string)
                            The name of the secret. The name must  be  allowed
                            as a DNS subdomain name. For more information, see
                            DNS subdomain names in the  Kubernetes  documenta-
                            tion .

                        optional -> (boolean)
                            Specifies  whether the secret or the secret's keys
                            must be defined.

              metadata -> (structure)
                 Metadata about the Kubernetes pod. For more information,  see
                 Understanding Kubernetes Objects in the Kubernetes documenta-
                 tion .

                 labels -> (map)
                     Key-value pairs used to identify, sort, and organize cube
                     resources. Can contain up to 63 uppercase letters, lower-
                     case letters, numbers, hyphens (-), and underscores  (_).
                     Labels  can  be  added  or modified at any time. Each re-
                     source can have multiple labels, but  each  key  must  be
                     unique for a given object.

                     key -> (string)

                     value -> (string)

              shareProcessNamespace -> (boolean)
                 Indicates if the processes in a container are shared, or vis-
                 ible, to other containers in the same pod. For more  informa-
                 tion, see Share Process Namespace between Containers in a Pod
                 .

       JSON Syntax:

          {
            "podProperties": {
              "serviceAccountName": "string",
              "hostNetwork": true|false,
              "dnsPolicy": "string",
              "imagePullSecrets": [
                {
                  "name": "string"
                }
                ...
              ],
              "containers": [
                {
                  "name": "string",
                  "image": "string",
                  "imagePullPolicy": "string",
                  "command": ["string", ...],
                  "args": ["string", ...],
                  "env": [
                    {
                      "name": "string",
                      "value": "string"
                    }
                    ...
                  ],
                  "resources": {
                    "limits": {"string": "string"
                      ...},
                    "requests": {"string": "string"
                      ...}
                  },
                  "volumeMounts": [
                    {
                      "name": "string",
                      "mountPath": "string",
                      "readOnly": true|false
                    }
                    ...
                  ],
                  "securityContext": {
                    "runAsUser": long,
                    "runAsGroup": long,
                    "privileged": true|false,
                    "allowPrivilegeEscalation": true|false,
                    "readOnlyRootFilesystem": true|false,
                    "runAsNonRoot": true|false
                  }
                }
                ...
              ],
              "initContainers": [
                {
                  "name": "string",
                  "image": "string",
                  "imagePullPolicy": "string",
                  "command": ["string", ...],
                  "args": ["string", ...],
                  "env": [
                    {
                      "name": "string",
                      "value": "string"
                    }
                    ...
                  ],
                  "resources": {
                    "limits": {"string": "string"
                      ...},
                    "requests": {"string": "string"
                      ...}
                  },
                  "volumeMounts": [
                    {
                      "name": "string",
                      "mountPath": "string",
                      "readOnly": true|false
                    }
                    ...
                  ],
                  "securityContext": {
                    "runAsUser": long,
                    "runAsGroup": long,
                    "privileged": true|false,
                    "allowPrivilegeEscalation": true|false,
                    "readOnlyRootFilesystem": true|false,
                    "runAsNonRoot": true|false
                  }
                }
                ...
              ],
              "volumes": [
                {
                  "name": "string",
                  "hostPath": {
                    "path": "string"
                  },
                  "emptyDir": {
                    "medium": "string",
                    "sizeLimit": "string"
                  },
                  "secret": {
                    "secretName": "string",
                    "optional": true|false
                  }
                }
                ...
              ],
              "metadata": {
                "labels": {"string": "string"
                  ...}
              },
              "shareProcessNamespace": true|false
            }
          }

       --ecs-properties (structure)
          An object with properties that  are  specific  to  Amazon  ECS-based
          jobs.  This  must  not be specified for Amazon EKS-based job defini-
          tions.

          taskProperties -> (list)
              An object that contains the properties for the Amazon  ECS  task
              definition of a job.

              NOTE:
                 This object is currently limited to one element.

              (structure)
                 The  properties for a task definition that describes the con-
                 tainer and volume definitions of an Amazon ECS task. You  can
                 specify  which  Docker images to use, the required resources,
                 and other configurations related to launching the task  defi-
                 nition through an Amazon ECS service or task.

                 containers -> (list)
                     This object is a list of containers.

                     (structure)
                        Container properties are used for Amazon ECS-based job
                        definitions. These properties  to  describe  the  con-
                        tainer that's launched as part of a job.

                        command -> (list)
                            The  command  that's passed to the container. This
                            parameter maps to Cmd in the  Create  a  container
                            section  of  the Docker Remote API and the COMMAND
                            parameter to docker run .  For  more  information,
                            see Dockerfile reference: CMD .

                            (string)

                        dependsOn -> (list)
                            A  list  of containers that this container depends
                            on.

                            (structure)
                               A list of containers that this task depends on.

                               containerName -> (string)
                                   A unique identifier for the container.

                               condition -> (string)
                                   The dependency condition of the  container.
                                   The  following are the available conditions
                                   and their behavior:

                                   o START - This condition emulates  the  be-
                                     havior  of  links  and  volumes today. It
                                     validates that a dependent  container  is
                                     started  before permitting other contain-
                                     ers to start.

                                   o COMPLETE - This condition validates  that
                                     a  dependent container runs to completion
                                     (exits) before permitting other  contain-
                                     ers  to  start.  This  can  be useful for
                                     nonessential containers that run a script
                                     and  then  exit.  This condition can't be
                                     set on an essential container.

                                   o SUCCESS - This condition is the  same  as
                                     COMPLETE  , but it also requires that the
                                     container exits with a zero status.  This
                                     condition  can't  be  set on an essential
                                     container.

                        environment -> (list)
                            The environment variables to pass to a  container.
                            This  parameter  maps  to  Env inthe Create a con-
                            tainer section of the Docker Remote  API  and  the
                            --env parameter to docker run .

                            WARNING:
                               We  don't recommend using plaintext environment
                               variables for sensitive  information,  such  as
                               credential data.

                            NOTE:
                               Environment   variables   cannot   start   with
                               AWS_BATCH . This naming convention is  reserved
                               for variables that Batch sets.

                            (structure)
                               A key-value pair object.

                               name -> (string)
                                   The  name  of the key-value pair. For envi-
                                   ronment variables, this is the name of  the
                                   environment variable.

                               value -> (string)
                                   The  value of the key-value pair. For envi-
                                   ronment variables, this is the value of the
                                   environment variable.

                        essential -> (boolean)
                            If  the  essential  parameter  of  a  container is
                            marked as true , and that container fails or stops
                            for any reason, all other containers that are part
                            of the task are stopped. If the essential  parame-
                            ter of a container is marked as false, its failure
                            doesn't affect the rest of  the  containers  in  a
                            task. If this parameter is omitted, a container is
                            assumed to be essential.

                            All jobs must have at  least  one  essential  con-
                            tainer. If you have an application that's composed
                            of multiple containers, group containers that  are
                            used  for  a  common  purpose into components, and
                            separate the different  components  into  multiple
                            task   definitions.   For  more  information,  see
                            Application Architecture  in  the  Amazon  Elastic
                            Container Service Developer Guide .

                        image -> (string)
                            The  image  used to start a container. This string
                            is passed directly to the Docker  daemon.  By  de-
                            fault,  images  in  the  Docker  Hub  registry are
                            available. Other repositories are  specified  with
                            either    repository-url/image:tag    or   reposi-
                            tory-url/image@digest . Up to 255 letters  (upper-
                            case  and  lowercase),  numbers,  hyphens,  under-
                            scores, colons, periods, forward slashes, and num-
                            ber  signs are allowed. This parameter maps to Im-
                            age in the  Create  a  container  section  of  the
                            Docker Remote API and the IMAGE parameter of the `
                            docker                                         run
                            https://docs.docker.com/engine/reference/run/#security-configuration`__
                            .

                        linuxParameters -> (structure)
                            Linux-specific modifications that are  applied  to
                            the  container, such as Linux kernel capabilities.
                            For more information, see KernelCapabilities .

                            devices -> (list)
                               Any of the host devices to expose to  the  con-
                               tainer.  This  parameter maps to Devices in the
                               Create a container section of the Docker Remote
                               API and the --device option to docker run .

                               NOTE:
                                   This  parameter  isn't  applicable  to jobs
                                   that  are  running  on  Fargate  resources.
                                   Don't provide it for these jobs.

                               (structure)
                                   An  object  that represents a container in-
                                   stance host device.

                                   NOTE:
                                      This object  isn't  applicable  to  jobs
                                      that  are  running  on Fargate resources
                                      and shouldn't be provided.

                                   hostPath -> (string)
                                      The path for the device on the host con-
                                      tainer instance.

                                   containerPath -> (string)
                                      The  path  inside  the  container that's
                                      used to expose the host device.  By  de-
                                      fault, the hostPath value is used.

                                   permissions -> (list)
                                      The  explicit  permissions to provide to
                                      the container for  the  device.  By  de-
                                      fault, the container has permissions for
                                      read , write , and mknod for the device.

                                      (string)

                            initProcessEnabled -> (boolean)
                               If true, run an init process  inside  the  con-
                               tainer  that  forwards  signals  and reaps pro-
                               cesses. This parameter maps to the  --init  op-
                               tion  to  docker  run . This parameter requires
                               version  1.25  of  the  Docker  Remote  API  or
                               greater  on  your  container instance. To check
                               the Docker Remote API version on your container
                               instance, log in to your container instance and
                               run the following command: sudo docker  version
                               | grep "Server API version"

                            sharedMemorySize -> (integer)
                               The value for the size (in MiB) of the /dev/shm
                               volume. This parameter maps to  the  --shm-size
                               option to docker run .

                               NOTE:
                                   This  parameter  isn't  applicable  to jobs
                                   that  are  running  on  Fargate  resources.
                                   Don't provide it for these jobs.

                            tmpfs -> (list)
                               The container path, mount options, and size (in
                               MiB) of the tmpfs mount. This parameter maps to
                               the --tmpfs option to docker run .

                               NOTE:
                                   This  parameter  isn't  applicable  to jobs
                                   that  are  running  on  Fargate  resources.
                                   Don't  provide  this parameter for this re-
                                   source type.

                               (structure)
                                   The container path, mount options, and size
                                   of the tmpfs mount.

                                   NOTE:
                                      This  object  isn't  applicable  to jobs
                                      that are running on Fargate resources.

                                   containerPath -> (string)
                                      The absolute file path in the  container
                                      where the tmpfs volume is mounted.

                                   size -> (integer)
                                      The size (in MiB) of the tmpfs volume.

                                   mountOptions -> (list)
                                      The list of tmpfs volume mount options.

                                      Valid  values: "defaults " | "ro " | "rw
                                      " | "suid " |  "nosuid  "  |  "dev  "  |
                                      "nodev " | "exec " | "noexec " | "sync "
                                      | "async " | "dirsync " | "remount  "  |
                                      "mand  " | "nomand " | "atime " | "noat-
                                      ime " | "diratime " |  "nodiratime  "  |
                                      "bind " | "rbind" | "unbindable" | "run-
                                      bindable" |  "private"  |  "rprivate"  |
                                      "shared"   |   "rshared"   |  "slave"  |
                                      "rslave" | "relatime " | "norelatime " |
                                      "strictatime  "  |  "nostrictatime  "  |
                                      "mode " | "uid " | "gid " | "nr_inodes "
                                      | "nr_blocks " | "mpol "

                                      (string)

                            maxSwap -> (integer)
                               The total amount of swap memory (in MiB) a con-
                               tainer can use. This parameter is translated to
                               the  --memory-swap  option  to docker run where
                               the value is the sum of  the  container  memory
                               plus  the  maxSwap value. For more information,
                               see     `     --memory-swap     details      <-
                               https://docs.docker.com/config/containers/re-
                               source_constraints/#--memory-swap-details>`__
                               in the Docker documentation.

                               If  a maxSwap value of 0 is specified, the con-
                               tainer doesn't use swap. Accepted values are  0
                               or any positive integer. If the maxSwap parame-
                               ter is omitted, the container doesn't  use  the
                               swap  configuration  for the container instance
                               that it's running on. A maxSwap value  must  be
                               set for the swappiness parameter to be used.

                               NOTE:
                                   This  parameter  isn't  applicable  to jobs
                                   that  are  running  on  Fargate  resources.
                                   Don't provide it for these jobs.

                            swappiness -> (integer)
                               You  can  use  this  parameter  to  tune a con-
                               tainer's memory swappiness behavior. A  swappi-
                               ness  value  of  0 causes swapping to not occur
                               unless absolutely necessary. A swappiness value
                               of 100 causes pages to be swapped aggressively.
                               Valid values are whole numbers  between  0  and
                               100  . If the swappiness parameter isn't speci-
                               fied, a default value of 60 is used. If a value
                               isn't specified for maxSwap , then this parame-
                               ter is ignored. If maxSwap is  set  to  0,  the
                               container doesn't use swap. This parameter maps
                               to the --memory-swappiness option to docker run
                               .

                               Consider  the following when you use a per-con-
                               tainer swap configuration.

                               o Swap space must be enabled and  allocated  on
                                 the  container instance for the containers to
                                 use.

                               NOTE:
                                   By default, the Amazon ECS  optimized  AMIs
                                   don't  have  swap  enabled. You must enable
                                   swap on the instance to use  this  feature.
                                   For  more  information,  see Instance store
                                   swap volumes in the Amazon EC2  User  Guide
                                   for  Linux  Instances  or How do I allocate
                                   memory to work as swap space in  an  Amazon
                                   EC2 instance by using a swap file?

                               o The  swap space parameters are only supported
                                 for job definitions using EC2 resources.

                               o If the maxSwap and swappiness parameters  are
                                 omitted from a job definition, each container
                                 has a default swappiness value of  60.  More-
                                 over,  the total swap usage is limited to two
                                 times the  memory  reservation  of  the  con-
                                 tainer.

                               NOTE:
                                   This  parameter  isn't  applicable  to jobs
                                   that  are  running  on  Fargate  resources.
                                   Don't provide it for these jobs.

                        logConfiguration -> (structure)
                            The  log  configuration specification for the con-
                            tainer.

                            This parameter maps to LogConfig in the  Create  a
                            container section of the Docker Remote API and the
                            --log-driver option to docker run .

                            By default, containers use the same logging driver
                            that the Docker daemon uses. However the container
                            can use a different logging driver than the Docker
                            daemon by specifying a log driver with this param-
                            eter in the container definition. To use a differ-
                            ent logging driver for a container, the log system
                            must be configured properly on the  container  in-
                            stance  (or  on  a different log server for remote
                            logging options). For more information  about  the
                            options  for  different supported log drivers, see
                            Configure logging drivers in the Docker documenta-
                            tion .

                            NOTE:
                               Amazon  ECS  currently supports a subset of the
                               logging drivers available to the Docker  daemon
                               (shown  in the LogConfiguration data type). Ad-
                               ditional log drivers may be available in future
                               releases of the Amazon ECS container agent.

                            This parameter requires version 1.18 of the Docker
                            Remote API or greater on your container  instance.
                            To  check  the  Docker  Remote API version on your
                            container instance, log in to your  container  in-
                            stance  and run the following command: sudo docker
                            version --format '{{.Server.APIVersion}}'

                            NOTE:
                               The Amazon ECS container  agent  running  on  a
                               container  instance  must  register the logging
                               drivers available on  that  instance  with  the
                               ECS_AVAILABLE_LOGGING_DRIVERS environment vari-
                               able before containers placed on that  instance
                               can  use  these  log configuration options. For
                               more  information,  see  Amazon  ECS  container
                               agent  configuration in the Amazon Elastic Con-
                               tainer Service Developer Guide .

                            logDriver -> (string)
                               The log driver to use for  the  container.  The
                               valid values that are listed for this parameter
                               are log drivers that the Amazon  ECS  container
                               agent can communicate with by default.

                               The supported log drivers are awslogs , fluentd
                               , gelf , json-file , journald  ,  logentries  ,
                               syslog , and splunk .

                               NOTE:
                                   Jobs  that are running on Fargate resources
                                   are restricted to the  awslogs  and  splunk
                                   log drivers.

                                   awslogs

                               Specifies  the  Amazon  CloudWatch Logs logging
                               driver. For more  information,  see  Using  the
                               awslogs  log driver in the Batch User Guide and
                               Amazon CloudWatch Logs logging  driver  in  the
                               Docker documentation.
                                   fluentd

                               Specifies  the Fluentd logging driver. For more
                               information including usage  and  options,  see
                               Fluentd logging driver in the Docker documenta-
                               tion .
                                   gelf

                               Specifies the Graylog  Extended  Format  (GELF)
                               logging  driver. For more information including
                               usage and options, see Graylog Extended  Format
                               logging driver in the Docker documentation .
                                   journald

                               Specifies the journald logging driver. For more
                               information including usage  and  options,  see
                               Journald  logging driver in the Docker documen-
                               tation .
                                   json-file

                               Specifies the JSON  file  logging  driver.  For
                               more  information  including usage and options,
                               see JSON File logging driver in the Docker doc-
                               umentation .
                                   splunk

                               Specifies  the  Splunk logging driver. For more
                               information including usage  and  options,  see
                               Splunk  logging driver in the Docker documenta-
                               tion .
                                   syslog

                               Specifies the syslog logging driver.  For  more
                               information  including  usage  and options, see
                               Syslog logging driver in the Docker  documenta-
                               tion .

                               NOTE:
                                   If  you  have  a  custom  driver that's not
                                   listed earlier that you want to  work  with
                                   the  Amazon  ECS  container  agent, you can
                                   fork the Amazon ECS container agent project
                                   that's available on GitHub and customize it
                                   to work with that driver. We encourage  you
                                   to  submit  pull  requests for changes that
                                   you want to have included. However,  Amazon
                                   Web Services doesn't currently support run-
                                   ning modified copies of this software.

                               This parameter requires  version  1.18  of  the
                               Docker  Remote API or greater on your container
                               instance. To check the Docker Remote  API  ver-
                               sion on your container instance, log in to your
                               container instance and run the  following  com-
                               mand:  sudo  docker  version | grep "Server API
                               version"

                            options -> (map)
                               The configuration options to send  to  the  log
                               driver. This parameter requires version 1.19 of
                               the Docker Remote API or greater on  your  con-
                               tainer instance. To check the Docker Remote API
                               version on your container instance, log  in  to
                               your  container  instance and run the following
                               command: sudo docker version | grep "Server API
                               version"

                               key -> (string)

                               value -> (string)

                            secretOptions -> (list)
                               The  secrets  to pass to the log configuration.
                               For more information, see Specifying  sensitive
                               data in the Batch User Guide .

                               (structure)
                                   An object that represents the secret to ex-
                                   pose to your container. Secrets can be  ex-
                                   posed to a container in the following ways:

                                   o To  inject  sensitive data into your con-
                                     tainers as environment variables, use the
                                     secrets container definition parameter.

                                   o To reference sensitive information in the
                                     log configuration of a container, use the
                                     secretOptions container definition param-
                                     eter.

                                   For more information, see Specifying sensi-
                                   tive data in the Batch User Guide .

                                   name -> (string)
                                      The name of the secret.

                                   valueFrom -> (string)
                                      The  secret  to expose to the container.
                                      The supported values are either the full
                                      Amazon  Resource  Name  (ARN) of the Se-
                                      crets Manager secret or the full ARN  of
                                      the parameter in the Amazon Web Services
                                      Systems Manager Parameter Store.

                                      NOTE:
                                          If the Amazon Web  Services  Systems
                                          Manager  Parameter  Store  parameter
                                          exists in the same Region as the job
                                          you're  launching,  then you can use
                                          either the full Amazon Resource Name
                                          (ARN)  or  name of the parameter. If
                                          the parameter exists in a  different
                                          Region,  then  the  full ARN must be
                                          specified.

                        mountPoints -> (list)
                            The mount points for data  volumes  in  your  con-
                            tainer.

                            This  parameter  maps  to  Volumes in the Create a
                            container section of the Docker Remote API and the
                            --volume option to `docker run .

                            Windows  containers can mount whole directories on
                            the same drive as $env:ProgramData . Windows  con-
                            tainers  can't  mount  directories  on a different
                            drive, and mount point can't be across drives.

                            (structure)
                               Details for a Docker volume mount point  that's
                               used  in a job's container properties. This pa-
                               rameter maps to Volumes in the  Create  a  con-
                               tainer section of the Docker Remote API and the
                               --volume option to docker run.

                               containerPath -> (string)
                                   The path on the container  where  the  host
                                   volume is mounted.

                               readOnly -> (boolean)
                                   If  this  value is true , the container has
                                   read-only access to the volume.  Otherwise,
                                   the  container can write to the volume. The
                                   default value is false .

                               sourceVolume -> (string)
                                   The name of the volume to mount.

                        name -> (string)
                            The name of a container. The name can be used as a
                            unique  identifier  to  target  your dependsOn and
                            Overrides objects.

                        privileged -> (boolean)
                            When this parameter is true  ,  the  container  is
                            given  elevated  privileges  on the host container
                            instance (similar to the root user). This  parame-
                            ter  maps  to Privileged in the Create a container
                            section of the Docker Remote API and the  --privi-
                            leged option to docker run .

                            NOTE:
                               This  parameter  is  not  supported for Windows
                               containers or tasks run on Fargate.

                        readonlyRootFilesystem -> (boolean)
                            When this parameter  is  true,  the  container  is
                            given  read-only  access  to its root file system.
                            This  parameter  maps  to  ReadonlyRootfs  in  the
                            Create  a  container  section of the Docker Remote
                            API and the --read-only option to docker run .

                            NOTE:
                               This parameter is  not  supported  for  Windows
                               containers.

                        repositoryCredentials -> (structure)
                            The  private repository authentication credentials
                            to use.

                            credentialsParameter -> (string)
                               The Amazon Resource Name (ARN)  of  the  secret
                               containing the private repository credentials.

                        resourceRequirements -> (list)
                            The  type  and amount of a resource to assign to a
                            container. The only supported resource is a GPU.

                            (structure)
                               The type and amount of a resource to assign  to
                               a  container.  The  supported resources include
                               GPU , MEMORY , and VCPU .

                               value -> (string)
                                   The quantity of the specified  resource  to
                                   reserve  for the container. The values vary
                                   based on the type specified.
                                      type="GPU"

                                   The number of physical GPUs to reserve  for
                                   the container. Make sure that the number of
                                   GPUs reserved for all containers in  a  job
                                   doesn't exceed the number of available GPUs
                                   on the compute resource  that  the  job  is
                                   launched on.

                                   NOTE:
                                      GPUs  aren't available for jobs that are
                                      running on Fargate resources.

                                      type="MEMORY"

                                   The memory hard limit (in MiB)  present  to
                                   the  container. This parameter is supported
                                   for jobs that are running on Amazon EC2 re-
                                   sources.  If your container attempts to ex-
                                   ceed the memory specified, the container is
                                   terminated.  This  parameter maps to Memory
                                   in the Create a container  section  of  the
                                   Docker  Remote  API and the --memory option
                                   to docker run . You must specify at least 4
                                   MiB  of  memory for a job. This is required
                                   but can be specified in several places  for
                                   multi-node  parallel (MNP) jobs. It must be
                                   specified for each node at least once. This
                                   parameter  maps  to  Memory in the Create a
                                   container section of the Docker Remote  API
                                   and the --memory option to docker run .

                                   NOTE:
                                      If  you're  trying  to maximize your re-
                                      source  utilization  by  providing  your
                                      jobs  as  much  memory as possible for a
                                      particular  instance  type,  see  Memory
                                      management in the Batch User Guide .

                                   For  jobs  that  are running on Fargate re-
                                   sources, then value is the hard  limit  (in
                                   MiB),  and  must match one of the supported
                                   values and the VCPU values must be  one  of
                                   the values supported for that memory value.
                                          value = 512

                                      VCPU = 0.25
                                          value = 1024

                                      VCPU = 0.25 or 0.5
                                          value = 2048

                                      VCPU = 0.25, 0.5, or 1
                                          value = 3072

                                      VCPU = 0.5, or 1
                                          value = 4096

                                      VCPU = 0.5, 1, or 2
                                          value = 5120, 6144, or 7168

                                      VCPU = 1 or 2
                                          value = 8192

                                      VCPU = 1, 2, or 4
                                          value  =  9216, 10240, 11264, 12288,
                                          13312, 14336, or 15360

                                      VCPU = 2 or 4
                                          value = 16384

                                      VCPU = 2, 4, or 8
                                          value = 17408, 18432, 19456,  21504,
                                          22528,  23552,  25600, 26624, 27648,
                                          29696, or 30720

                                      VCPU = 4
                                          value = 20480, 24576, or 28672

                                      VCPU = 4 or 8
                                          value  =  36864,  45056,  53248,  or
                                          61440

                                      VCPU = 8
                                          value  =  32768,  40960,  49152,  or
                                          57344

                                      VCPU = 8 or 16
                                          value = 65536, 73728, 81920,  90112,
                                          98304, 106496, 114688, or 122880

                                      VCPU = 16
                                          type="VCPU"

                                   The  number  of vCPUs reserved for the con-
                                   tainer. This parameter maps to CpuShares in
                                   the  Create  a  container  section  of  the
                                   Docker Remote API and the --cpu-shares  op-
                                   tion  to  docker run . Each vCPU is equiva-
                                   lent to 1,024 CPU shares.  For  Amazon  EC2
                                   resources,  you  must  specify at least one
                                   vCPU. This is required but can be specified
                                   in several places; it must be specified for
                                   each node at least once.

                                   The default for the Fargate On-Demand  vCPU
                                   resource  count  quota is 6 vCPUs. For more
                                   information  about  Fargate   quotas,   see
                                   Fargate  quotas  in the Amazon Web Services
                                   General Reference .

                                   For jobs that are running  on  Fargate  re-
                                   sources,  then  value must match one of the
                                   supported values and the MEMORY values must
                                   be  one  of  the  values supported for that
                                   VCPU value. The supported values are  0.25,
                                   0.5, 1, 2, 4, 8, and 16
                                          value = 0.25

                                      MEMORY = 512, 1024, or 2048
                                          value = 0.5

                                      MEMORY = 1024, 2048, 3072, or 4096
                                          value = 1

                                      MEMORY  =  2048, 3072, 4096, 5120, 6144,
                                      7168, or 8192
                                          value = 2

                                      MEMORY = 4096, 5120, 6144,  7168,  8192,
                                      9216, 10240, 11264, 12288, 13312, 14336,
                                      15360, or 16384
                                          value = 4

                                      MEMORY  =  8192,  9216,  10240,   11264,
                                      12288,   13312,   14336,  15360,  16384,
                                      17408,  18432,  19456,   20480,   21504,
                                      22528,   23552,   24576,  25600,  26624,
                                      27648, 28672, 29696, or 30720
                                          value = 8

                                      MEMORY =  16384,  20480,  24576,  28672,
                                      32768,   36864,   40960,  45056,  49152,
                                      53248, 57344, or 61440
                                          value = 16

                                      MEMORY =  32768,  40960,  49152,  57344,
                                      65536,   73728,   81920,  90112,  98304,
                                      106496, 114688, or 122880

                               type -> (string)
                                   The type of resource to assign  to  a  con-
                                   tainer. The supported resources include GPU
                                   , MEMORY , and VCPU .

                        secrets -> (list)
                            The secrets to pass to the container. For more in-
                            formation,  see  Specifying  Sensitive Data in the
                            Amazon Elastic Container Service Developer Guide.

                            (structure)
                               An object that represents the secret to  expose
                               to  your container. Secrets can be exposed to a
                               container in the following ways:

                               o To inject sensitive data into your containers
                                 as  environment  variables,  use  the secrets
                                 container definition parameter.

                               o To reference sensitive information in the log
                                 configuration  of a container, use the secre-
                                 tOptions container definition parameter.

                               For more information, see Specifying  sensitive
                               data in the Batch User Guide .

                               name -> (string)
                                   The name of the secret.

                               valueFrom -> (string)
                                   The  secret to expose to the container. The
                                   supported values are either the full Amazon
                                   Resource  Name (ARN) of the Secrets Manager
                                   secret or the full ARN of the parameter  in
                                   the Amazon Web Services Systems Manager Pa-
                                   rameter Store.

                                   NOTE:
                                      If the Amazon Web Services Systems  Man-
                                      ager Parameter Store parameter exists in
                                      the  same  Region  as  the  job   you're
                                      launching,  then  you can use either the
                                      full Amazon Resource Name (ARN) or  name
                                      of  the  parameter. If the parameter ex-
                                      ists in a  different  Region,  then  the
                                      full ARN must be specified.

                        ulimits -> (list)
                            A  list  of  ulimits to set in the container. If a
                            ulimit value is specified in a task definition, it
                            overrides  the  default values set by Docker. This
                            parameter maps to Ulimits in  the  Create  a  con-
                            tainer  section  of  the Docker Remote API and the
                            --ulimit option to docker run .

                            Amazon ECS tasks hosted on Fargate use the default
                            resource  limit values set by the operating system
                            with the exception of the  nofile  resource  limit
                            parameter  which Fargate overrides. The nofile re-
                            source limit sets a restriction on the  number  of
                            open  files  that a container can use. The default
                            nofile soft limit is 1024  and  the  default  hard
                            limit is 65535 .

                            This parameter requires version 1.18 of the Docker
                            Remote API or greater on your container  instance.
                            To  check  the  Docker  Remote API version on your
                            container instance, log in to your  container  in-
                            stance  and run the following command: sudo docker
                            version --format '{{.Server.APIVersion}}'

                            NOTE:
                               This parameter is  not  supported  for  Windows
                               containers.

                            (structure)
                               The  ulimit  settings to pass to the container.
                               For more information, see Ulimit .

                               NOTE:
                                   This object isn't applicable to  jobs  that
                                   are running on Fargate resources.

                               hardLimit -> (integer)
                                   The hard limit for the ulimit type.

                               name -> (string)
                                   The  type of the ulimit . Valid values are:
                                   core | cpu | data | fsize | locks | memlock
                                   |  msgqueue | nice | nofile | nproc | rss |
                                   rtprio | rttime | sigpending | stack .

                               softLimit -> (integer)
                                   The soft limit for the ulimit type.

                        user -> (string)
                            The user to use inside the container. This parame-
                            ter maps to User in the Create a container section
                            of the Docker Remote API and the --user option  to
                            docker run.

                            NOTE:
                               When running tasks using the host network mode,
                               don't run containers using the root  user  (UID
                               0)  .  We  recommend  using a non-root user for
                               better security.

                            You can specify the user using the following  for-
                            mats. If specifying a UID or GID, you must specify
                            it as a positive integer.

                            o user

                            o user:group

                            o uid

                            o uid:gid

                            o user:gi

                            o uid:group

                            NOTE:
                               This parameter is  not  supported  for  Windows
                               containers.

                 ephemeralStorage -> (structure)
                     The amount of ephemeral storage to allocate for the task.
                     This parameter is used to  expand  the  total  amount  of
                     ephemeral  storage  available, beyond the default amount,
                     for tasks hosted on Fargate.

                     sizeInGiB -> (integer)
                        The total amount, in GiB, of ephemeral storage to  set
                        for  the  task.  The minimum supported value is 21 GiB
                        and the maximum supported value is 200 GiB.

                 executionRoleArn -> (string)
                     The Amazon Resource Name (ARN) of the execution role that
                     Batch can assume. For jobs that run on Fargate resources,
                     you must provide an execution role. For more information,
                     see Batch execution IAM role in the Batch User Guide .

                 platformVersion -> (string)
                     The  Fargate platform version where the jobs are running.
                     A platform version is specified only for  jobs  that  are
                     running on Fargate resources. If one isn't specified, the
                     LATEST platform version is used by default. This  uses  a
                     recent, approved version of the Fargate platform for com-
                     pute resources. For more information, see  Fargate  plat-
                     form versions in the Amazon Elastic Container Service De-
                     veloper Guide .

                 ipcMode -> (string)
                     The IPC resource namespace to use for the  containers  in
                     the task. The valid values are host , task , or none .

                     If  host  is  specified,  all containers within the tasks
                     that specified the host IPC mode on  the  same  container
                     instance  share the same IPC resources with the host Ama-
                     zon EC2 instance.

                     If task is specified, all containers within the specified
                     task share the same IPC resources.

                     If  none  is specified, the IPC resources within the con-
                     tainers of a task are private, and are  not  shared  with
                     other containers in a task or on the container instance.

                     If no value is specified, then the IPC resource namespace
                     sharing depends on the Docker daemon setting on the  con-
                     tainer  instance.  For more information, see IPC settings
                     in the Docker run reference.

                 taskRoleArn -> (string)
                     The Amazon Resource Name (ARN) that's associated with the
                     Amazon ECS task.

                     NOTE:
                        This      is      object      is     comparable     to
                        ContainerProperties:jobRoleArn .

                 pidMode -> (string)
                     The process namespace to use for the  containers  in  the
                     task.  The  valid  values are host or task . For example,
                     monitoring sidecars might need pidMode to access informa-
                     tion about other containers running in the same task.

                     If  host  is  specified,  all containers within the tasks
                     that specified the host PID mode on  the  same  container
                     instance share the process namespace with the host Amazon
                     EC2 instance.

                     If task is specified, all containers within the specified
                     task share the same process namespace.

                     If  no value is specified, the default is a private name-
                     space for each container. For more information,  see  PID
                     settings in the Docker run reference.

                 networkConfiguration -> (structure)
                     The  network  configuration  for jobs that are running on
                     Fargate resources. Jobs that are running  on  Amazon  EC2
                     resources must not specify this parameter.

                     assignPublicIp -> (string)
                        Indicates whether the job has a public IP address. For
                        a job that's running on Fargate resources in a private
                        subnet  to  send outbound traffic to the internet (for
                        example, to pull container images), the private subnet
                        requires  a  NAT gateway be attached to route requests
                        to the internet. For more information, see Amazon  ECS
                        task  networking  in the Amazon Elastic Container Ser-
                        vice Developer Guide . The default value is  "DISABLED
                        ".

                 runtimePlatform -> (structure)
                     An  object that represents the compute environment archi-
                     tecture for Batch jobs on Fargate.

                     operatingSystemFamily -> (string)
                        The operating  system  for  the  compute  environment.
                        Valid    values    are:    LINUX    (default),    WIN-
                        DOWS_SERVER_2019_CORE  ,  WINDOWS_SERVER_2019_FULL   ,
                        WINDOWS_SERVER_2022_CORE        ,       and       WIN-
                        DOWS_SERVER_2022_FULL .

                        NOTE:
                            The following parameters cant be set  for  Windows
                            containers:  linuxParameters , privileged , user ,
                            ulimits , readonlyRootFilesystem , and  efsVolume-
                            Configuration .

                        NOTE:
                            The  Batch  Scheduler  checks the compute environ-
                            ments that are attached to the  job  queue  before
                            registering  a  task  definition  with Fargate. In
                            this scenario, the job queue is where the  job  is
                            submitted. If the job requires a Windows container
                            and the first compute environment is LINUX  ,  the
                            compute  environment  is skipped and the next com-
                            pute environment is checked until a  Windows-based
                            compute environment is found.

                        NOTE:
                            Fargate  Spot  is not supported for ARM64 and Win-
                            dows-based containers on Fargate. A job queue will
                            be  blocked  if  a Fargate ARM64 or Windows job is
                            submitted to a job queue with  only  Fargate  Spot
                            compute environments. However, you can attach both
                            FARGATE and FARGATE_SPOT compute  environments  to
                            the same job queue.

                     cpuArchitecture -> (string)
                        The  vCPU  architecture. The default value is X86_64 .
                        Valid values are X86_64 and ARM64 .

                        NOTE:
                            This parameter must be set to X86_64  for  Windows
                            containers.

                        NOTE:
                            Fargate  Spot  is not supported for ARM64 and Win-
                            dows-based containers on Fargate. A job queue will
                            be  blocked  if  a Fargate ARM64 or Windows job is
                            submitted to a job queue with  only  Fargate  Spot
                            compute environments. However, you can attach both
                            FARGATE and FARGATE_SPOT compute  environments  to
                            the same job queue.

                 volumes -> (list)
                     A list of volumes that are associated with the job.

                     (structure)
                        A data volume that's used in a job's container proper-
                        ties.

                        host -> (structure)
                            The  contents  of  the  host  parameter  determine
                            whether your data volume persists on the host con-
                            tainer instance and where it's stored. If the host
                            parameter is empty, then the Docker daemon assigns
                            a host path for your  data  volume.  However,  the
                            data  isn't  guaranteed  to persist after the con-
                            tainers that are associated with it stop running.

                            NOTE:
                               This parameter isn't applicable  to  jobs  that
                               are  running on Fargate resources and shouldn't
                               be provided.

                            sourcePath -> (string)
                               The path on the host container instance  that's
                               presented  to  the container. If this parameter
                               is empty, then the Docker daemon has assigned a
                               host path for you. If this parameter contains a
                               file location, then the data volume persists at
                               the  specified  location  on the host container
                               instance until you delete it manually.  If  the
                               source  path location doesn't exist on the host
                               container instance, the Docker  daemon  creates
                               it. If the location does exist, the contents of
                               the source path folder are exported.

                               NOTE:
                                   This parameter  isn't  applicable  to  jobs
                                   that  run  on Fargate resources. Don't pro-
                                   vide this for these jobs.

                        name -> (string)
                            The name of the volume. It can be up to 255  char-
                            acters  long.  It can contain uppercase and lower-
                            case letters, numbers,  hyphens  (-),  and  under-
                            scores   (_).  This  name  is  referenced  in  the
                            sourceVolume  parameter  of  container  definition
                            mountPoints .

                        efsVolumeConfiguration -> (structure)
                            This  parameter  is specified when you're using an
                            Amazon Elastic File System  file  system  for  job
                            storage.  Jobs  that  are  running  on Fargate re-
                            sources must specify a platformVersion of at least
                            1.4.0 .

                            fileSystemId -> (string)
                               The Amazon EFS file system ID to use.

                            rootDirectory -> (string)
                               The directory within the Amazon EFS file system
                               to mount as the root directory inside the host.
                               If  this  parameter is omitted, the root of the
                               Amazon EFS volume is used instead. Specifying /
                               has the same effect as omitting this parameter.
                               The maximum length is 4,096 characters.

                               WARNING:
                                   If an EFS access point is specified in  the
                                   authorizationConfig  ,  the  root directory
                                   parameter must either be omitted or set  to
                                   / , which enforces the path set on the Ama-
                                   zon EFS access point.

                            transitEncryption -> (string)
                               Determines whether  to  enable  encryption  for
                               Amazon  EFS  data in transit between the Amazon
                               ECS host and the Amazon EFS server. Transit en-
                               cryption  must be enabled if Amazon EFS IAM au-
                               thorization is used. If this parameter is omit-
                               ted, the default value of DISABLED is used. For
                               more information, see Encrypting data in  tran-
                               sit  in  the  Amazon  Elastic  File System User
                               Guide .

                            transitEncryptionPort -> (integer)
                               The port to use when sending encrypted data be-
                               tween  the  Amazon  ECS host and the Amazon EFS
                               server. If you don't specify a transit  encryp-
                               tion  port, it uses the port selection strategy
                               that the Amazon  EFS  mount  helper  uses.  The
                               value  must  be  between 0 and 65,535. For more
                               information, see EFS mount helper in the Amazon
                               Elastic File System User Guide .

                            authorizationConfig -> (structure)
                               The authorization configuration details for the
                               Amazon EFS file system.

                               accessPointId -> (string)
                                   The Amazon EFS access point ID to  use.  If
                                   an  access point is specified, the root di-
                                   rectory value specified in  the  EFSVolume-
                                   Configuration must either be omitted or set
                                   to / which enforces the path set on the EFS
                                   access  point.  If an access point is used,
                                   transit encryption must be enabled  in  the
                                   EFSVolumeConfiguration  . For more informa-
                                   tion, see Working with  Amazon  EFS  access
                                   points  in  the  Amazon Elastic File System
                                   User Guide .

                               iam -> (string)
                                   Whether or not to use  the  Batch  job  IAM
                                   role  defined  in  a  job  definition  when
                                   mounting the Amazon EFS file system. If en-
                                   abled,  transit  encryption must be enabled
                                   in the EFSVolumeConfiguration . If this pa-
                                   rameter  is  omitted,  the default value of
                                   DISABLED is used. For more information, see
                                   Using Amazon EFS access points in the Batch
                                   User Guide . EFS IAM authorization requires
                                   that  TransitEncryption be ENABLED and that
                                   a JobRoleArn is specified.

       JSON Syntax:

          {
            "taskProperties": [
              {
                "containers": [
                  {
                    "command": ["string", ...],
                    "dependsOn": [
                      {
                        "containerName": "string",
                        "condition": "string"
                      }
                      ...
                    ],
                    "environment": [
                      {
                        "name": "string",
                        "value": "string"
                      }
                      ...
                    ],
                    "essential": true|false,
                    "image": "string",
                    "linuxParameters": {
                      "devices": [
                        {
                          "hostPath": "string",
                          "containerPath": "string",
                          "permissions": ["READ"|"WRITE"|"MKNOD", ...]
                        }
                        ...
                      ],
                      "initProcessEnabled": true|false,
                      "sharedMemorySize": integer,
                      "tmpfs": [
                        {
                          "containerPath": "string",
                          "size": integer,
                          "mountOptions": ["string", ...]
                        }
                        ...
                      ],
                      "maxSwap": integer,
                      "swappiness": integer
                    },
                    "logConfiguration": {
                      "logDriver": "json-file"|"syslog"|"journald"|"gelf"|"fluentd"|"awslogs"|"splunk",
                      "options": {"string": "string"
                        ...},
                      "secretOptions": [
                        {
                          "name": "string",
                          "valueFrom": "string"
                        }
                        ...
                      ]
                    },
                    "mountPoints": [
                      {
                        "containerPath": "string",
                        "readOnly": true|false,
                        "sourceVolume": "string"
                      }
                      ...
                    ],
                    "name": "string",
                    "privileged": true|false,
                    "readonlyRootFilesystem": true|false,
                    "repositoryCredentials": {
                      "credentialsParameter": "string"
                    },
                    "resourceRequirements": [
                      {
                        "value": "string",
                        "type": "GPU"|"VCPU"|"MEMORY"
                      }
                      ...
                    ],
                    "secrets": [
                      {
                        "name": "string",
                        "valueFrom": "string"
                      }
                      ...
                    ],
                    "ulimits": [
                      {
                        "hardLimit": integer,
                        "name": "string",
                        "softLimit": integer
                      }
                      ...
                    ],
                    "user": "string"
                  }
                  ...
                ],
                "ephemeralStorage": {
                  "sizeInGiB": integer
                },
                "executionRoleArn": "string",
                "platformVersion": "string",
                "ipcMode": "string",
                "taskRoleArn": "string",
                "pidMode": "string",
                "networkConfiguration": {
                  "assignPublicIp": "ENABLED"|"DISABLED"
                },
                "runtimePlatform": {
                  "operatingSystemFamily": "string",
                  "cpuArchitecture": "string"
                },
                "volumes": [
                  {
                    "host": {
                      "sourcePath": "string"
                    },
                    "name": "string",
                    "efsVolumeConfiguration": {
                      "fileSystemId": "string",
                      "rootDirectory": "string",
                      "transitEncryption": "ENABLED"|"DISABLED",
                      "transitEncryptionPort": integer,
                      "authorizationConfig": {
                        "accessPointId": "string",
                        "iam": "ENABLED"|"DISABLED"
                      }
                    }
                  }
                  ...
                ]
              }
              ...
            ]
          }

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To register a job definition

       This example registers a job definition for a simple container job.

       Command:

          aws batch register-job-definition --job-definition-name sleep30 --type container --container-properties '{ "image": "busybox", "vcpus": 1, "memory": 128, "command": [ "sleep", "30"]}'

       Output:

          {
              "jobDefinitionArn": "arn:aws:batch:us-east-1:012345678910:job-definition/sleep30:1",
              "jobDefinitionName": "sleep30",
              "revision": 1
          }

OUTPUT
       jobDefinitionName -> (string)
          The name of the job definition.

       jobDefinitionArn -> (string)
          The Amazon Resource Name (ARN) of the job definition.

       revision -> (integer)
          The revision of the job definition.



                                                     REGISTER-JOB-DEFINITION()
