LIST-CHANNEL-FLOWS()                                      LIST-CHANNEL-FLOWS()



NAME
       list-channel-flows -

DESCRIPTION
       Returns a paginated lists of all the channel flows created under a sin-
       gle Chime. This is a developer API.

       See also: AWS API Documentation

SYNOPSIS
            list-channel-flows
          --app-instance-arn <value>
          [--max-results <value>]
          [--next-token <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --app-instance-arn (string)
          The ARN of the app instance.

       --max-results (integer)
          The maximum number of channel flows that you want to return.

       --next-token (string)
          The token passed by previous API calls until all  requested  channel
          flows are returned.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       ChannelFlows -> (list)
          The information about each channel flow.

          (structure)
              Summary of details of a channel flow.

              ChannelFlowArn -> (string)
                 The ARN of the channel flow.

              Name -> (string)
                 The name of the channel flow.

              Processors -> (list)
                 Information about the processor Lambda functions.

                 (structure)
                     The information about a processor in a channel flow.

                     Name -> (string)
                        The name of the channel flow.

                     Configuration -> (structure)
                        The  information  about  the type of processor and its
                        identifier.

                        Lambda -> (structure)
                            Indicates that the processor is of type Lambda.

                            ResourceArn -> (string)
                               The ARN of the Lambda message processing  func-
                               tion.

                            InvocationType -> (string)
                               Controls how the Lambda function is invoked.

                     ExecutionOrder -> (integer)
                        The sequence in which processors run. If you have mul-
                        tiple processors in a channel flow, message processing
                        goes through each processor in the sequence. The value
                        determines the sequence. At  this  point,  we  support
                        only 1 processor within a flow.

                     FallbackAction -> (string)
                        Determines whether to continue with message processing
                        or stop it in cases where communication with a proces-
                        sor  fails.  If  a  processor has a fallback action of
                        ABORT and communication with it fails,  the  processor
                        sets  the  message  status to FAILED and does not send
                        the message to any recipients. Note that if  the  last
                        processor  in the channel flow sequence has a fallback
                        action of CONTINUE and communication with the  proces-
                        sor  fails,  then  the message is considered processed
                        and sent to recipients of the channel.

       NextToken -> (string)
          The token passed by previous API calls until all requested  channels
          are returned.



                                                          LIST-CHANNEL-FLOWS()
