CREATE-VIRTUAL-ROUTER()                                CREATE-VIRTUAL-ROUTER()



NAME
       create-virtual-router -

DESCRIPTION
       Creates a virtual router within a service mesh.

       Specify a listener for any inbound traffic that your virtual router re-
       ceives. Create a virtual router for each protocol  and  port  that  you
       need  to  route. Virtual routers handle traffic for one or more virtual
       services within your mesh. After you create your virtual router, create
       and  associate  routes for your virtual router that direct incoming re-
       quests to different virtual nodes.

       For more information about virtual routers, see Virtual routers .

       See also: AWS API Documentation

SYNOPSIS
            create-virtual-router
          [--client-token <value>]
          --mesh-name <value>
          [--mesh-owner <value>]
          --spec <value>
          [--tags <value>]
          --virtual-router-name <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --client-token (string)
          Unique, case-sensitive identifier that you  provide  to  ensure  the
          idempotency  of the request. Up to 36 letters, numbers, hyphens, and
          underscores are allowed.

       --mesh-name (string)
          The name of the service mesh to create the virtual router in.

       --mesh-owner (string)
          The Amazon Web Services IAM account ID of the service mesh owner. If
          the  account  ID  is not your own, then the account that you specify
          must share the mesh with your account before you can create the  re-
          source in the service mesh. For more information about mesh sharing,
          see Working with shared meshes .

       --spec (structure)
          The virtual router specification to apply.

          listeners -> (list)
              The listeners that the virtual router is expected to receive in-
              bound traffic from. You can specify one listener.

              (structure)
                 An object that represents a virtual router listener.

                 portMapping -> (structure)
                     An object that represents a port mapping.

                     port -> (integer)
                        The port used for the port mapping.

                     protocol -> (string)
                        The  protocol  used  for the port mapping. Specify one
                        protocol.

       JSON Syntax:

          {
            "listeners": [
              {
                "portMapping": {
                  "port": integer,
                  "protocol": "http"|"tcp"|"http2"|"grpc"
                }
              }
              ...
            ]
          }

       --tags (list)
          Optional metadata that you can apply to the virtual router to assist
          with categorization and organization. Each tag consists of a key and
          an optional value, both of which you define. Tag  keys  can  have  a
          maximum  character length of 128 characters, and tag values can have
          a maximum length of 256 characters.

          (structure)
              Optional metadata that you apply to a resource  to  assist  with
              categorization  and organization. Each tag consists of a key and
              an optional value, both of which you define. Tag keys can have a
              maximum  character  length of 128 characters, and tag values can
              have a maximum length of 256 characters.

              key -> (string)
                 One part of a key-value pair that make up a tag. A key  is  a
                 general label that acts like a category for more specific tag
                 values.

              value -> (string)
                 The optional part of a key-value pair that make up a  tag.  A
                 value acts as a descriptor within a tag category (key).

       Shorthand Syntax:

          key=string,value=string ...

       JSON Syntax:

          [
            {
              "key": "string",
              "value": "string"
            }
            ...
          ]

       --virtual-router-name (string)
          The name to use for the virtual router.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a new virtual router

       The following create-virtual-router example uses a JSON input  file  to
       create a virtual router with a listener for HTTP using port 80.

          aws appmesh create-virtual-router \
              --cli-input-json file://create-virtual-router.json

       Contents of create-virtual-router.json:

          {
              "meshName": "app1",
              "spec": {
                  "listeners": [
                      {
                          "portMapping": {
                              "port": 80,
                              "protocol": "http"
                          }
                      }
                  ]
              },
              "virtualRouterName": "vrServiceB"
          }

       Output:

          {
              "virtualRouter": {
                  "meshName": "app1",
                  "metadata": {
                      "arn": "arn:aws:appmesh:us-east-1:123456789012:mesh/app1/virtualRouter/vrServiceB",
                      "createdAt": 1563810546.59,
                      "lastUpdatedAt": 1563810546.59,
                      "uid": "a1b2c3d4-5678-90ab-cdef-11111EXAMPLE",
                      "version": 1
                  },
                  "spec": {
                      "listeners": [
                          {
                              "portMapping": {
                                  "port": 80,
                                  "protocol": "http"
                              }
                          }
                      ]
                  },
                  "status": {
                      "status": "ACTIVE"
                  },
                  "virtualRouterName": "vrServiceB"
              }
          }

       For  more  information,  see  Virtual  Routers in the AWS App Mesh User
       Guide.

OUTPUT
       virtualRouter -> (structure)
          The full description of your virtual  router  following  the  create
          call.

          meshName -> (string)
              The name of the service mesh that the virtual router resides in.

          metadata -> (structure)
              The associated metadata for the virtual router.

              arn -> (string)
                 The full Amazon Resource Name (ARN) for the resource.

              createdAt -> (timestamp)
                 The Unix epoch timestamp in seconds for when the resource was
                 created.

              lastUpdatedAt -> (timestamp)
                 The Unix epoch timestamp in seconds for when the resource was
                 last updated.

              meshOwner -> (string)
                 The  Amazon  Web  Services IAM account ID of the service mesh
                 owner. If the account ID is not your own, then it's the ID of
                 the  account that shared the mesh with your account. For more
                 information about  mesh  sharing,  see  Working  with  shared
                 meshes .

              resourceOwner -> (string)
                 The Amazon Web Services IAM account ID of the resource owner.
                 If the account ID is not your own, then it's the  ID  of  the
                 mesh  owner  or  of  another  account that the mesh is shared
                 with. For more information about mesh  sharing,  see  Working
                 with shared meshes .

              uid -> (string)
                 The unique identifier for the resource.

              version -> (long)
                 The version of the resource. Resources are created at version
                 1, and this version is incremented each time that they're up-
                 dated.

          spec -> (structure)
              The specifications of the virtual router.

              listeners -> (list)
                 The  listeners that the virtual router is expected to receive
                 inbound traffic from. You can specify one listener.

                 (structure)
                     An object that represents a virtual router listener.

                     portMapping -> (structure)
                        An object that represents a port mapping.

                        port -> (integer)
                            The port used for the port mapping.

                        protocol -> (string)
                            The protocol used for the  port  mapping.  Specify
                            one protocol.

          status -> (structure)
              The current status of the virtual router.

              status -> (string)
                 The current status of the virtual router.

          virtualRouterName -> (string)
              The name of the virtual router.



                                                       CREATE-VIRTUAL-ROUTER()
