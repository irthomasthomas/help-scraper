CREATE-VIRTUAL-GATEWAY()                              CREATE-VIRTUAL-GATEWAY()



NAME
       create-virtual-gateway -

DESCRIPTION
       Creates a virtual gateway.

       A  virtual gateway allows resources outside your mesh to communicate to
       resources that are inside your mesh. The virtual gateway represents  an
       Envoy  proxy running in an Amazon ECS task, in a Kubernetes service, or
       on an Amazon EC2 instance. Unlike a virtual node, which  represents  an
       Envoy  running  with an application, a virtual gateway represents Envoy
       deployed by itself.

       For more information about virtual gateways, see Virtual gateways .

       See also: AWS API Documentation

SYNOPSIS
            create-virtual-gateway
          [--client-token <value>]
          --mesh-name <value>
          [--mesh-owner <value>]
          --spec <value>
          [--tags <value>]
          --virtual-gateway-name <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --client-token (string)
          Unique, case-sensitive identifier that you  provide  to  ensure  the
          idempotency  of the request. Up to 36 letters, numbers, hyphens, and
          underscores are allowed.

       --mesh-name (string)
          The name of the service mesh to create the virtual gateway in.

       --mesh-owner (string)
          The Amazon Web Services IAM account ID of the service mesh owner. If
          the  account  ID  is not your own, then the account that you specify
          must share the mesh with your account before you can create the  re-
          source in the service mesh. For more information about mesh sharing,
          see Working with shared meshes .

       --spec (structure)
          The virtual gateway specification to apply.

          backendDefaults -> (structure)
              A reference to an object that represents the defaults for  back-
              ends.

              clientPolicy -> (structure)
                 A reference to an object that represents a client policy.

                 tls -> (structure)
                     A  reference  to  an  object  that represents a Transport
                     Layer Security (TLS) client policy.

                     certificate -> (tagged union structure)
                        A reference to an object  that  represents  a  virtual
                        gateway's client's Transport Layer Security (TLS) cer-
                        tificate.

                        NOTE:
                            This is a Tagged Union structure. Only one of  the
                            following top level keys can be set: file, sds.

                        file -> (structure)
                            An  object  that  represents a local file certifi-
                            cate. The certificate must meet specific  require-
                            ments  and  you  must have proxy authorization en-
                            abled. For more information, see  Transport  Layer
                            Security (TLS) .

                            certificateChain -> (string)
                               The certificate chain for the certificate.

                            privateKey -> (string)
                               The private key for a certificate stored on the
                               file system of the mesh endpoint that the proxy
                               is running on.

                        sds -> (structure)
                            A reference to an object that represents a virtual
                            gateway's client's Secret Discovery  Service  cer-
                            tificate.

                            secretName -> (string)
                               A  reference  to  an object that represents the
                               name of the secret secret  requested  from  the
                               Secret  Discovery Service provider representing
                               Transport Layer Security (TLS) materials like a
                               certificate or certificate chain.

                     enforce -> (boolean)
                        Whether  the policy is enforced. The default is True ,
                        if a value isn't specified.

                     ports -> (list)
                        One or more ports that the policy is enforced for.

                        (integer)

                     validation -> (structure)
                        A reference to an object that represents  a  Transport
                        Layer Security (TLS) validation context.

                        subjectAlternativeNames -> (structure)
                            A  reference to an object that represents the SANs
                            for a virtual gateway's listener's Transport Layer
                            Security (TLS) validation context.

                            match -> (structure)
                               An  object that represents the criteria for de-
                               termining a SANs match.

                               exact -> (list)
                                   The values sent must  match  the  specified
                                   values exactly.

                                   (string)

                        trust -> (tagged union structure)
                            A  reference  to where to retrieve the trust chain
                            when validating a peers Transport  Layer  Security
                            (TLS) certificate.

                            NOTE:
                               This  is  a Tagged Union structure. Only one of
                               the following top level keys can be  set:  acm,
                               file, sds.

                            acm -> (structure)
                               A  reference  to  an  object  that represents a
                               Transport Layer Security (TLS) validation  con-
                               text  trust for an Certificate Manager certifi-
                               cate.

                               certificateAuthorityArns -> (list)
                                   One  or  more  ACM  Amazon  Resource   Name
                                   (ARN)s.

                                   (string)

                            file -> (structure)
                               An object that represents a Transport Layer Se-
                               curity (TLS) validation context trust for a lo-
                               cal file.

                               certificateChain -> (string)
                                   The  certificate trust chain for a certifi-
                                   cate stored on the file system of the  vir-
                                   tual node that the proxy is running on.

                            sds -> (structure)
                               A reference to an object that represents a vir-
                               tual gateway's Transport Layer  Security  (TLS)
                               Secret  Discovery  Service  validation  context
                               trust.

                               secretName -> (string)
                                   A reference to an  object  that  represents
                                   the  name of the secret for a virtual gate-
                                   way's Transport Layer Security (TLS) Secret
                                   Discovery Service validation context trust.

          listeners -> (list)
              The  listeners that the mesh endpoint is expected to receive in-
              bound traffic from. You can specify one listener.

              (structure)
                 An object that represents a listener for a virtual gateway.

                 connectionPool -> (tagged union structure)
                     The connection pool information for the  virtual  gateway
                     listener.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing top level keys can be set: grpc, http, http2.

                     grpc -> (structure)
                        An object that represents a type of connection pool.

                        maxRequests -> (integer)
                            Maximum number of inflight requests Envoy can con-
                            currently  support  across hosts in upstream clus-
                            ter.

                     http -> (structure)
                        An object that represents a type of connection pool.

                        maxConnections -> (integer)
                            Maximum number of outbound TCP  connections  Envoy
                            can  establish  concurrently with all hosts in up-
                            stream cluster.

                        maxPendingRequests -> (integer)
                            Number of overflowing requests  after  max_connec-
                            tions Envoy will queue to upstream cluster.

                     http2 -> (structure)
                        An object that represents a type of connection pool.

                        maxRequests -> (integer)
                            Maximum number of inflight requests Envoy can con-
                            currently support across hosts in  upstream  clus-
                            ter.

                 healthCheck -> (structure)
                     The health check information for the listener.

                     healthyThreshold -> (integer)
                        The  number  of  consecutive  successful health checks
                        that must occur before declaring the listener healthy.

                     intervalMillis -> (long)
                        The time period in milliseconds  between  each  health
                        check execution.

                     path -> (string)
                        The  destination  path  for  the health check request.
                        This value is only used if the specified  protocol  is
                        HTTP  or HTTP/2. For any other protocol, this value is
                        ignored.

                     port -> (integer)
                        The destination port for  the  health  check  request.
                        This port must match the port defined in the  PortMap-
                        ping for the listener.

                     protocol -> (string)
                        The protocol for the  health  check  request.  If  you
                        specify  grpc  , then your service must conform to the
                        GRPC Health Checking Protocol .

                     timeoutMillis -> (long)
                        The amount of time to wait when receiving  a  response
                        from the health check, in milliseconds.

                     unhealthyThreshold -> (integer)
                        The  number  of  consecutive failed health checks that
                        must occur before  declaring  a  virtual  gateway  un-
                        healthy.

                 portMapping -> (structure)
                     The port mapping information for the listener.

                     port -> (integer)
                        The port used for the port mapping. Specify one proto-
                        col.

                     protocol -> (string)
                        The protocol used for the port mapping.

                 tls -> (structure)
                     A reference to an object that  represents  the  Transport
                     Layer Security (TLS) properties for the listener.

                     certificate -> (tagged union structure)
                        An  object  that represents a Transport Layer Security
                        (TLS) certificate.

                        NOTE:
                            This is a Tagged Union structure. Only one of  the
                            following  top  level  keys can be set: acm, file,
                            sds.

                        acm -> (structure)
                            A reference to an object that represents  an  Cer-
                            tificate Manager certificate.

                            certificateArn -> (string)
                               The Amazon Resource Name (ARN) for the certifi-
                               cate. The certificate must  meet  specific  re-
                               quirements  and  you must have proxy authoriza-
                               tion  enabled.  For   more   information,   see
                               Transport Layer Security (TLS) .

                        file -> (structure)
                            A  reference  to an object that represents a local
                            file certificate.

                            certificateChain -> (string)
                               The certificate chain for the certificate.

                            privateKey -> (string)
                               The private key for a certificate stored on the
                               file system of the mesh endpoint that the proxy
                               is running on.

                        sds -> (structure)
                            A reference to an object that represents a virtual
                            gateway's listener's Secret Discovery Service cer-
                            tificate.

                            secretName -> (string)
                               A reference to an object  that  represents  the
                               name  of  the  secret secret requested from the
                               Secret Discovery Service provider  representing
                               Transport Layer Security (TLS) materials like a
                               certificate or certificate chain.

                     mode -> (string)
                        Specify one of the following modes.

                        o STRICT  Listener only accepts connections  with  TLS
                          enabled.

                        o PERMISSIVE   Listener  accepts  connections  with or
                          without TLS enabled.

                        o DISABLED  Listener only accepts connections  without
                          TLS.

                     validation -> (structure)
                        A  reference  to  an  object that represents a virtual
                        gateway's listener's Transport  Layer  Security  (TLS)
                        validation context.

                        subjectAlternativeNames -> (structure)
                            A  reference to an object that represents the SANs
                            for a virtual gateway listener's  Transport  Layer
                            Security (TLS) validation context.

                            match -> (structure)
                               An  object that represents the criteria for de-
                               termining a SANs match.

                               exact -> (list)
                                   The values sent must  match  the  specified
                                   values exactly.

                                   (string)

                        trust -> (tagged union structure)
                            A  reference  to where to retrieve the trust chain
                            when validating a peers Transport  Layer  Security
                            (TLS) certificate.

                            NOTE:
                               This  is  a Tagged Union structure. Only one of
                               the following top level keys can be set:  file,
                               sds.

                            file -> (structure)
                               An object that represents a Transport Layer Se-
                               curity (TLS) validation context trust for a lo-
                               cal file.

                               certificateChain -> (string)
                                   The  certificate trust chain for a certifi-
                                   cate stored on the file system of the  vir-
                                   tual node that the proxy is running on.

                            sds -> (structure)
                               A reference to an object that represents a vir-
                               tual gateway's listener's Transport Layer Secu-
                               rity  (TLS) Secret Discovery Service validation
                               context trust.

                               secretName -> (string)
                                   A reference to an  object  that  represents
                                   the  name of the secret for a virtual gate-
                                   way's Transport Layer Security (TLS) Secret
                                   Discovery Service validation context trust.

          logging -> (structure)
              An object that represents logging information.

              accessLog -> (tagged union structure)
                 The access log configuration.

                 NOTE:
                     This is a Tagged Union structure. Only one of the follow-
                     ing top level keys can be set: file.

                 file -> (structure)
                     The file object to send virtual gateway access logs to.

                     format -> (tagged union structure)
                        The specified format for the  virtual  gateway  access
                        logs. It can be either json_format or text_format .

                        NOTE:
                            This  is a Tagged Union structure. Only one of the
                            following top level keys can be set: json, text.

                        json -> (list)
                            (structure)
                               An object that represents the key  value  pairs
                               for the JSON.

                               key -> (string)
                                   The specified key for the JSON.

                               value -> (string)
                                   The specified value for the JSON.

                        text -> (string)

                     path -> (string)
                        The  file  path  to  write access logs to. You can use
                        /dev/stdout to send access logs to  standard  out  and
                        configure  your  Envoy  container to use a log driver,
                        such as awslogs , to export the access logs to  a  log
                        storage  service  such  as Amazon CloudWatch Logs. You
                        can also specify a path in the Envoy container's  file
                        system to write the files to disk.

       JSON Syntax:

          {
            "backendDefaults": {
              "clientPolicy": {
                "tls": {
                  "certificate": {
                    "file": {
                      "certificateChain": "string",
                      "privateKey": "string"
                    },
                    "sds": {
                      "secretName": "string"
                    }
                  },
                  "enforce": true|false,
                  "ports": [integer, ...],
                  "validation": {
                    "subjectAlternativeNames": {
                      "match": {
                        "exact": ["string", ...]
                      }
                    },
                    "trust": {
                      "acm": {
                        "certificateAuthorityArns": ["string", ...]
                      },
                      "file": {
                        "certificateChain": "string"
                      },
                      "sds": {
                        "secretName": "string"
                      }
                    }
                  }
                }
              }
            },
            "listeners": [
              {
                "connectionPool": {
                  "grpc": {
                    "maxRequests": integer
                  },
                  "http": {
                    "maxConnections": integer,
                    "maxPendingRequests": integer
                  },
                  "http2": {
                    "maxRequests": integer
                  }
                },
                "healthCheck": {
                  "healthyThreshold": integer,
                  "intervalMillis": long,
                  "path": "string",
                  "port": integer,
                  "protocol": "http"|"http2"|"grpc",
                  "timeoutMillis": long,
                  "unhealthyThreshold": integer
                },
                "portMapping": {
                  "port": integer,
                  "protocol": "http"|"http2"|"grpc"
                },
                "tls": {
                  "certificate": {
                    "acm": {
                      "certificateArn": "string"
                    },
                    "file": {
                      "certificateChain": "string",
                      "privateKey": "string"
                    },
                    "sds": {
                      "secretName": "string"
                    }
                  },
                  "mode": "STRICT"|"PERMISSIVE"|"DISABLED",
                  "validation": {
                    "subjectAlternativeNames": {
                      "match": {
                        "exact": ["string", ...]
                      }
                    },
                    "trust": {
                      "file": {
                        "certificateChain": "string"
                      },
                      "sds": {
                        "secretName": "string"
                      }
                    }
                  }
                }
              }
              ...
            ],
            "logging": {
              "accessLog": {
                "file": {
                  "format": {
                    "json": [
                      {
                        "key": "string",
                        "value": "string"
                      }
                      ...
                    ],
                    "text": "string"
                  },
                  "path": "string"
                }
              }
            }
          }

       --tags (list)
          Optional  metadata  that you can apply to the virtual gateway to as-
          sist with categorization and organization. Each tag  consists  of  a
          key  and  an  optional value, both of which you define. Tag keys can
          have a maximum character length of 128 characters,  and  tag  values
          can have a maximum length of 256 characters.

          (structure)
              Optional  metadata  that  you apply to a resource to assist with
              categorization and organization. Each tag consists of a key  and
              an optional value, both of which you define. Tag keys can have a
              maximum character length of 128 characters, and tag  values  can
              have a maximum length of 256 characters.

              key -> (string)
                 One  part  of a key-value pair that make up a tag. A key is a
                 general label that acts like a category for more specific tag
                 values.

              value -> (string)
                 The  optional  part of a key-value pair that make up a tag. A
                 value acts as a descriptor within a tag category (key).

       Shorthand Syntax:

          key=string,value=string ...

       JSON Syntax:

          [
            {
              "key": "string",
              "value": "string"
            }
            ...
          ]

       --virtual-gateway-name (string)
          The name to use for the virtual gateway.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a new virtual gateway

       The following create-virtual-gateway example uses a JSON input file  to
       create a virtual gateway with a listener for HTTP using port 9080.

          aws appmesh create-virtual-gateway \
              --mesh-name meshName \
              --virtual-gateway-name virtualGatewayName \
              --cli-input-json file://create-virtual-gateway.json

       Contents of create-virtual-gateway.json:

          {
              "spec": {
                "listeners": [
                  {
                    "portMapping": {
                      "port": 9080,
                      "protocol": "http"
                    }
                  }
                ]
              }
          }

       Output:

          {
              "virtualGateway": {
                  "meshName": "meshName",
                  "metadata": {
                      "arn": "arn:aws:appmesh:us-west-2:123456789012:mesh/meshName/virtualGateway/virtualGatewayName",
                      "createdAt": "2022-04-06T10:42:42.015000-05:00",
                      "lastUpdatedAt": "2022-04-06T10:42:42.015000-05:00",
                      "meshOwner": "123456789012",
                      "resourceOwner": "123456789012",
                      "uid": "a1b2c3d4-5678-90ab-cdef-11111EXAMPLE",
                      "version": 1
                  },
                  "spec": {
                      "listeners": [
                          {
                              "portMapping": {
                                  "port": 9080,
                                  "protocol": "http"
                              }
                          }
                      ]
                  },
                  "status": {
                      "status": "ACTIVE"
                  },
                  "virtualGatewayName": "virtualGatewayName"
              }
          }

       For  more  information,  see  Virtual Gateways in the AWS App Mesh User
       Guide.

OUTPUT
       virtualGateway -> (structure)
          The full description of your virtual gateway  following  the  create
          call.

          meshName -> (string)
              The  name  of  the service mesh that the virtual gateway resides
              in.

          metadata -> (structure)
              An object that represents metadata for a resource.

              arn -> (string)
                 The full Amazon Resource Name (ARN) for the resource.

              createdAt -> (timestamp)
                 The Unix epoch timestamp in seconds for when the resource was
                 created.

              lastUpdatedAt -> (timestamp)
                 The Unix epoch timestamp in seconds for when the resource was
                 last updated.

              meshOwner -> (string)
                 The Amazon Web Services IAM account ID of  the  service  mesh
                 owner. If the account ID is not your own, then it's the ID of
                 the account that shared the mesh with your account. For  more
                 information  about  mesh  sharing,  see  Working  with shared
                 meshes .

              resourceOwner -> (string)
                 The Amazon Web Services IAM account ID of the resource owner.
                 If  the  account  ID is not your own, then it's the ID of the
                 mesh owner or of another account  that  the  mesh  is  shared
                 with.  For  more  information about mesh sharing, see Working
                 with shared meshes .

              uid -> (string)
                 The unique identifier for the resource.

              version -> (long)
                 The version of the resource. Resources are created at version
                 1, and this version is incremented each time that they're up-
                 dated.

          spec -> (structure)
              The specifications of the virtual gateway.

              backendDefaults -> (structure)
                 A reference to an object that  represents  the  defaults  for
                 backends.

                 clientPolicy -> (structure)
                     A reference to an object that represents a client policy.

                     tls -> (structure)
                        A  reference  to an object that represents a Transport
                        Layer Security (TLS) client policy.

                        certificate -> (tagged union structure)
                            A reference to an object that represents a virtual
                            gateway's  client's Transport Layer Security (TLS)
                            certificate.

                            NOTE:
                               This is a Tagged Union structure. Only  one  of
                               the  following top level keys can be set: file,
                               sds.

                            file -> (structure)
                               An object that represents a local file certifi-
                               cate.  The  certificate  must meet specific re-
                               quirements and you must have  proxy  authoriza-
                               tion   enabled.   For   more  information,  see
                               Transport Layer Security (TLS) .

                               certificateChain -> (string)
                                   The certificate chain for the certificate.

                               privateKey -> (string)
                                   The private key for a certificate stored on
                                   the  file  system of the mesh endpoint that
                                   the proxy is running on.

                            sds -> (structure)
                               A reference to an object that represents a vir-
                               tual  gateway's  client's Secret Discovery Ser-
                               vice certificate.

                               secretName -> (string)
                                   A reference to an  object  that  represents
                                   the  name  of  the  secret secret requested
                                   from the Secret Discovery Service  provider
                                   representing Transport Layer Security (TLS)
                                   materials like a certificate or certificate
                                   chain.

                        enforce -> (boolean)
                            Whether  the  policy  is  enforced. The default is
                            True , if a value isn't specified.

                        ports -> (list)
                            One or more ports that the policy is enforced for.

                            (integer)

                        validation -> (structure)
                            A reference to an object that represents a  Trans-
                            port Layer Security (TLS) validation context.

                            subjectAlternativeNames -> (structure)
                               A  reference  to  an object that represents the
                               SANs for a virtual gateway's listener's  Trans-
                               port Layer Security (TLS) validation context.

                               match -> (structure)
                                   An  object that represents the criteria for
                                   determining a SANs match.

                                   exact -> (list)
                                      The values sent must match the specified
                                      values exactly.

                                      (string)

                            trust -> (tagged union structure)
                               A  reference  to  where  to  retrieve the trust
                               chain when validating a peers  Transport  Layer
                               Security (TLS) certificate.

                               NOTE:
                                   This  is a Tagged Union structure. Only one
                                   of the following top level keys can be set:
                                   acm, file, sds.

                               acm -> (structure)
                                   A  reference to an object that represents a
                                   Transport Layer Security  (TLS)  validation
                                   context  trust  for  an Certificate Manager
                                   certificate.

                                   certificateAuthorityArns -> (list)
                                      One or more  ACM  Amazon  Resource  Name
                                      (ARN)s.

                                      (string)

                               file -> (structure)
                                   An object that represents a Transport Layer
                                   Security (TLS) validation context trust for
                                   a local file.

                                   certificateChain -> (string)
                                      The  certificate  trust chain for a cer-
                                      tificate stored on the  file  system  of
                                      the  virtual node that the proxy is run-
                                      ning on.

                               sds -> (structure)
                                   A reference to an object that represents  a
                                   virtual  gateway's Transport Layer Security
                                   (TLS) Secret Discovery  Service  validation
                                   context trust.

                                   secretName -> (string)
                                      A reference to an object that represents
                                      the name of the  secret  for  a  virtual
                                      gateway's Transport Layer Security (TLS)
                                      Secret Discovery Service validation con-
                                      text trust.

              listeners -> (list)
                 The  listeners  that the mesh endpoint is expected to receive
                 inbound traffic from. You can specify one listener.

                 (structure)
                     An object that represents a listener for a virtual  gate-
                     way.

                     connectionPool -> (tagged union structure)
                        The  connection pool information for the virtual gate-
                        way listener.

                        NOTE:
                            This is a Tagged Union structure. Only one of  the
                            following  top  level keys can be set: grpc, http,
                            http2.

                        grpc -> (structure)
                            An object that represents  a  type  of  connection
                            pool.

                            maxRequests -> (integer)
                               Maximum  number  of inflight requests Envoy can
                               concurrently support across hosts  in  upstream
                               cluster.

                        http -> (structure)
                            An  object  that  represents  a type of connection
                            pool.

                            maxConnections -> (integer)
                               Maximum number of outbound TCP connections  En-
                               voy  can  establish concurrently with all hosts
                               in upstream cluster.

                            maxPendingRequests -> (integer)
                               Number of overflowing requests  after  max_con-
                               nections Envoy will queue to upstream cluster.

                        http2 -> (structure)
                            An  object  that  represents  a type of connection
                            pool.

                            maxRequests -> (integer)
                               Maximum number of inflight requests  Envoy  can
                               concurrently  support  across hosts in upstream
                               cluster.

                     healthCheck -> (structure)
                        The health check information for the listener.

                        healthyThreshold -> (integer)
                            The number of consecutive successful health checks
                            that  must  occur  before  declaring  the listener
                            healthy.

                        intervalMillis -> (long)
                            The  time  period  in  milliseconds  between  each
                            health check execution.

                        path -> (string)
                            The destination path for the health check request.
                            This value is only used if the specified  protocol
                            is  HTTP  or  HTTP/2. For any other protocol, this
                            value is ignored.

                        port -> (integer)
                            The destination port for the health check request.
                            This  port  must  match  the  port  defined in the
                            PortMapping for the listener.

                        protocol -> (string)
                            The protocol for the health check request. If  you
                            specify  grpc  , then your service must conform to
                            the GRPC Health Checking Protocol .

                        timeoutMillis -> (long)
                            The amount of time to wait when  receiving  a  re-
                            sponse from the health check, in milliseconds.

                        unhealthyThreshold -> (integer)
                            The  number  of  consecutive  failed health checks
                            that must occur before declaring a virtual gateway
                            unhealthy.

                     portMapping -> (structure)
                        The port mapping information for the listener.

                        port -> (integer)
                            The  port  used  for the port mapping. Specify one
                            protocol.

                        protocol -> (string)
                            The protocol used for the port mapping.

                     tls -> (structure)
                        A reference to an object that represents the Transport
                        Layer Security (TLS) properties for the listener.

                        certificate -> (tagged union structure)
                            An  object that represents a Transport Layer Secu-
                            rity (TLS) certificate.

                            NOTE:
                               This is a Tagged Union structure. Only  one  of
                               the  following  top level keys can be set: acm,
                               file, sds.

                            acm -> (structure)
                               A reference to an  object  that  represents  an
                               Certificate Manager certificate.

                               certificateArn -> (string)
                                   The Amazon Resource Name (ARN) for the cer-
                                   tificate. The certificate  must  meet  spe-
                                   cific  requirements and you must have proxy
                                   authorization enabled.  For  more  informa-
                                   tion, see Transport Layer Security (TLS) .

                            file -> (structure)
                               A  reference to an object that represents a lo-
                               cal file certificate.

                               certificateChain -> (string)
                                   The certificate chain for the certificate.

                               privateKey -> (string)
                                   The private key for a certificate stored on
                                   the  file  system of the mesh endpoint that
                                   the proxy is running on.

                            sds -> (structure)
                               A reference to an object that represents a vir-
                               tual gateway's listener's Secret Discovery Ser-
                               vice certificate.

                               secretName -> (string)
                                   A reference to an  object  that  represents
                                   the  name  of  the  secret secret requested
                                   from the Secret Discovery Service  provider
                                   representing Transport Layer Security (TLS)
                                   materials like a certificate or certificate
                                   chain.

                        mode -> (string)
                            Specify one of the following modes.

                            o STRICT   Listener  only accepts connections with
                              TLS enabled.

                            o PERMISSIVE  Listener accepts connections with or
                              without TLS enabled.

                            o DISABLED    Listener  only  accepts  connections
                              without TLS.

                        validation -> (structure)
                            A reference to an object that represents a virtual
                            gateway's   listener's  Transport  Layer  Security
                            (TLS) validation context.

                            subjectAlternativeNames -> (structure)
                               A reference to an object  that  represents  the
                               SANs for a virtual gateway listener's Transport
                               Layer Security (TLS) validation context.

                               match -> (structure)
                                   An object that represents the criteria  for
                                   determining a SANs match.

                                   exact -> (list)
                                      The values sent must match the specified
                                      values exactly.

                                      (string)

                            trust -> (tagged union structure)
                               A reference to  where  to  retrieve  the  trust
                               chain  when  validating a peers Transport Layer
                               Security (TLS) certificate.

                               NOTE:
                                   This is a Tagged Union structure. Only  one
                                   of the following top level keys can be set:
                                   file, sds.

                               file -> (structure)
                                   An object that represents a Transport Layer
                                   Security (TLS) validation context trust for
                                   a local file.

                                   certificateChain -> (string)
                                      The certificate trust chain for  a  cer-
                                      tificate  stored  on  the file system of
                                      the virtual node that the proxy is  run-
                                      ning on.

                               sds -> (structure)
                                   A  reference to an object that represents a
                                   virtual  gateway's   listener's   Transport
                                   Layer  Security (TLS) Secret Discovery Ser-
                                   vice validation context trust.

                                   secretName -> (string)
                                      A reference to an object that represents
                                      the  name  of  the  secret for a virtual
                                      gateway's Transport Layer Security (TLS)
                                      Secret Discovery Service validation con-
                                      text trust.

              logging -> (structure)
                 An object that represents logging information.

                 accessLog -> (tagged union structure)
                     The access log configuration.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing top level keys can be set: file.

                     file -> (structure)
                        The  file  object  to send virtual gateway access logs
                        to.

                        format -> (tagged union structure)
                            The specified format for the virtual  gateway  ac-
                            cess   logs.  It  can  be  either  json_format  or
                            text_format .

                            NOTE:
                               This is a Tagged Union structure. Only  one  of
                               the  following top level keys can be set: json,
                               text.

                            json -> (list)
                               (structure)
                                   An object that  represents  the  key  value
                                   pairs for the JSON.

                                   key -> (string)
                                      The specified key for the JSON.

                                   value -> (string)
                                      The specified value for the JSON.

                            text -> (string)

                        path -> (string)
                            The file path to write access logs to. You can use
                            /dev/stdout to send access logs  to  standard  out
                            and  configure  your  Envoy container to use a log
                            driver, such as awslogs ,  to  export  the  access
                            logs  to  a  log  storage  service  such as Amazon
                            CloudWatch Logs. You can also specify  a  path  in
                            the  Envoy  container's  file  system to write the
                            files to disk.

          status -> (structure)
              The current status of the virtual gateway.

              status -> (string)
                 The current status.

          virtualGatewayName -> (string)
              The name of the virtual gateway.



                                                      CREATE-VIRTUAL-GATEWAY()
