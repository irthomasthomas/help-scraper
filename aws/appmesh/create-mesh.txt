CREATE-MESH()                                                    CREATE-MESH()



NAME
       create-mesh -

DESCRIPTION
       Creates a service mesh.

       A  service  mesh is a logical boundary for network traffic between ser-
       vices that are represented by resources within the mesh. After you cre-
       ate  your service mesh, you can create virtual services, virtual nodes,
       virtual routers, and routes to distribute traffic between the  applica-
       tions in your mesh.

       For more information about service meshes, see Service meshes .

       See also: AWS API Documentation

SYNOPSIS
            create-mesh
          [--client-token <value>]
          --mesh-name <value>
          [--spec <value>]
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --client-token (string)
          Unique,  case-sensitive  identifier  that  you provide to ensure the
          idempotency of the request. Up to 36 letters, numbers, hyphens,  and
          underscores are allowed.

       --mesh-name (string)
          The name to use for the service mesh.

       --spec (structure)
          The service mesh specification to apply.

          egressFilter -> (structure)
              The egress filter rules for the service mesh.

              type -> (string)
                 The  egress  filter  type. By default, the type is DROP_ALL ,
                 which allows egress only from virtual nodes to other  defined
                 resources  in  the service mesh (and any traffic to *.amazon-
                 aws.com for Amazon Web Services API calls). You can  set  the
                 egress  filter  type to ALLOW_ALL to allow egress to any end-
                 point inside or outside of the service mesh.

          serviceDiscovery -> (structure)
              An object that represents the service discovery information  for
              a service mesh.

              ipPreference -> (string)
                 The IP version to use to control traffic within the mesh.

       Shorthand Syntax:

          egressFilter={type=string},serviceDiscovery={ipPreference=string}

       JSON Syntax:

          {
            "egressFilter": {
              "type": "ALLOW_ALL"|"DROP_ALL"
            },
            "serviceDiscovery": {
              "ipPreference": "IPv6_PREFERRED"|"IPv4_PREFERRED"|"IPv4_ONLY"|"IPv6_ONLY"
            }
          }

       --tags (list)
          Optional  metadata  that you can apply to the service mesh to assist
          with categorization and organization. Each tag consists of a key and
          an  optional  value,  both  of which you define. Tag keys can have a
          maximum character length of 128 characters, and tag values can  have
          a maximum length of 256 characters.

          (structure)
              Optional  metadata  that  you apply to a resource to assist with
              categorization and organization. Each tag consists of a key  and
              an optional value, both of which you define. Tag keys can have a
              maximum character length of 128 characters, and tag  values  can
              have a maximum length of 256 characters.

              key -> (string)
                 One  part  of a key-value pair that make up a tag. A key is a
                 general label that acts like a category for more specific tag
                 values.

              value -> (string)
                 The  optional  part of a key-value pair that make up a tag. A
                 value acts as a descriptor within a tag category (key).

       Shorthand Syntax:

          key=string,value=string ...

       JSON Syntax:

          [
            {
              "key": "string",
              "value": "string"
            }
            ...
          ]

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       Example 1: To create a new service mesh

       The following create-mesh example creates a service mesh.

          aws appmesh create-mesh \
              --mesh-name app1

       Output:

          {
              "mesh":{
                  "meshName":"app1",
                  "metadata":{
                      "arn":"arn:aws:appmesh:us-east-1:123456789012:mesh/app1",
                      "createdAt":1563809909.282,
                      "lastUpdatedAt":1563809909.282,
                      "uid":"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE",
                      "version":1
                  },
                  "spec":{},
                  "status":{
                      "status":"ACTIVE"
                  }
              }
          }

       Example 2: To create a new service mesh with multiple tags

       The following create-mesh example creates a service mesh with  multiple
       tags.

          aws appmesh create-mesh \
              --mesh-name app2 \
              --tags key=key1,value=value1 key=key2,value=value2 key=key3,value=value3

       Output:

          {
              "mesh":{
                  "meshName":"app2",
                  "metadata":{
                      "arn":"arn:aws:appmesh:us-east-1:123456789012:mesh/app2",
                      "createdAt":1563822121.877,
                      "lastUpdatedAt":1563822121.877,
                      "uid":"a1b2c3d4-5678-90ab-cdef-11111EXAMPLE",
                      "version":1
                  },
                  "spec":{},
                  "status":{
                      "status":"ACTIVE"
                  }
              }
          }

       For  more  information,  see  Service  Meshes  in the AWS App Mesh User
       Guide.

OUTPUT
       mesh -> (structure)
          The full description of your service mesh following the create call.

          meshName -> (string)
              The name of the service mesh.

          metadata -> (structure)
              The associated metadata for the service mesh.

              arn -> (string)
                 The full Amazon Resource Name (ARN) for the resource.

              createdAt -> (timestamp)
                 The Unix epoch timestamp in seconds for when the resource was
                 created.

              lastUpdatedAt -> (timestamp)
                 The Unix epoch timestamp in seconds for when the resource was
                 last updated.

              meshOwner -> (string)
                 The Amazon Web Services IAM account ID of  the  service  mesh
                 owner. If the account ID is not your own, then it's the ID of
                 the account that shared the mesh with your account. For  more
                 information  about  mesh  sharing,  see  Working  with shared
                 meshes .

              resourceOwner -> (string)
                 The Amazon Web Services IAM account ID of the resource owner.
                 If  the  account  ID is not your own, then it's the ID of the
                 mesh owner or of another account  that  the  mesh  is  shared
                 with.  For  more  information about mesh sharing, see Working
                 with shared meshes .

              uid -> (string)
                 The unique identifier for the resource.

              version -> (long)
                 The version of the resource. Resources are created at version
                 1, and this version is incremented each time that they're up-
                 dated.

          spec -> (structure)
              The associated specification for the service mesh.

              egressFilter -> (structure)
                 The egress filter rules for the service mesh.

                 type -> (string)
                     The egress filter type. By default, the type is  DROP_ALL
                     ,  which  allows  egress only from virtual nodes to other
                     defined resources in the service mesh (and any traffic to
                     *.amazonaws.com  for  Amazon Web Services API calls). You
                     can set the egress filter  type  to  ALLOW_ALL  to  allow
                     egress  to  any endpoint inside or outside of the service
                     mesh.

              serviceDiscovery -> (structure)
                 An object that represents the service  discovery  information
                 for a service mesh.

                 ipPreference -> (string)
                     The IP version to use to control traffic within the mesh.

          status -> (structure)
              The status of the service mesh.

              status -> (string)
                 The current mesh status.



                                                                 CREATE-MESH()
