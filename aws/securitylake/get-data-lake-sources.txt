GET-DATA-LAKE-SOURCES()                                GET-DATA-LAKE-SOURCES()



NAME
       get-data-lake-sources -

DESCRIPTION
       Retrieves  a  snapshot  of the current Region, including whether Amazon
       Security Lake is enabled for those accounts and which sources  Security
       Lake is collecting data from.

       See also: AWS API Documentation

       get-data-lake-sources  is a paginated operation. Multiple API calls may
       be issued in order to retrieve the entire data set of results. You  can
       disable pagination by providing the --no-paginate argument.  When using
       --output text and the --query argument on  a  paginated  response,  the
       --query  argument  must  extract data from the results of the following
       query expressions: dataLakeSources

SYNOPSIS
            get-data-lake-sources
          [--accounts <value>]
          [--cli-input-json <value>]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --accounts (list)
          The Amazon Web Services account ID for which a  static  snapshot  of
          the  current  Amazon Web Services Region, including enabled accounts
          and log sources, is retrieved.

          (string)

       Syntax:

          "string" "string" ...

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --starting-token (string)
          A  token to specify where to start paginating. This is the NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The  size of each page to get in the AWS service call. This does not
          affect the number of items returned in the command's output. Setting
          a  smaller  page  size results in more calls to the AWS service, re-
          trieving fewer items in each call. This can  help  prevent  the  AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The total number of items to return in the command's output. If  the
          total  number of items available is more than the value specified, a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent command. Do not use the NextToken response element  directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To get the status of log collection

       The following get-data-lake-sources example gets a snapshot of log col-
       lection  for  the  specified account in the current AWS Region. The ac-
       count has Amazon Security Lake enabled.

          aws securitylake get-data-lake-sources \
              --accounts "123456789012"

       Output:

          {
              "dataLakeSources": [
                  {
                      "account": "123456789012",
                      "sourceName": "SH_FINDINGS",
                      "sourceStatuses": [
                          {
                              "resource": "vpc-1234567890abcdef0",
                              "status": "COLLECTING"
                          }
                      ]
                  },
                  {
                      "account": "123456789012",
                      "sourceName": "VPC_FLOW",
                      "sourceStatuses": [
                          {
                              "resource": "vpc-1234567890abcdef0",
                              "status": "NOT_COLLECTING"
                          }
                      ]
                  },
                  {
                      "account": "123456789012",
                      "sourceName": "LAMBDA_EXECUTION",
                      "sourceStatuses": [
                          {
                              "resource": "vpc-1234567890abcdef0",
                              "status": "COLLECTING"
                          }
                      ]
                  },
                  {
                      "account": "123456789012",
                      "sourceName": "ROUTE53",
                      "sourceStatuses": [
                          {
                              "resource": "vpc-1234567890abcdef0",
                              "status": "COLLECTING"
                          }
                      ]
                  },
                  {
                      "account": "123456789012",
                      "sourceName": "CLOUD_TRAIL_MGMT",
                      "sourceStatuses": [
                          {
                              "resource": "vpc-1234567890abcdef0",
                              "status": "COLLECTING"
                          }
                      ]
                  }
              ],
              "dataLakeArn": null
          }

       For more information, see Collecting data from AWS services in the Ama-
       zon Security Lake User Guide.

OUTPUT
       dataLakeArn -> (string)
          The Amazon Resource Name (ARN) created by you to provide to the sub-
          scriber. For more information about ARNs and  how  to  use  them  in
          policies, see the Amazon Security Lake User Guide .

       dataLakeSources -> (list)
          The list of enabled accounts and enabled sources.

          (structure)
              Amazon  Security  Lake  collects  logs and events from supported
              Amazon Web Services services and custom sources. For the list of
              supported  Amazon Web Services services, see the Amazon Security
              Lake User Guide .

              account -> (string)
                 The ID of the Security Lake account for which logs  are  col-
                 lected.

              eventClasses -> (list)
                 The  Open Cybersecurity Schema Framework (OCSF) event classes
                 which describes the type of data that the custom source  will
                 send to Security Lake. The supported event classes are:

                 o ACCESS_ACTIVITY

                 o FILE_ACTIVITY

                 o KERNEL_ACTIVITY

                 o KERNEL_EXTENSION

                 o MEMORY_ACTIVITY

                 o MODULE_ACTIVITY

                 o PROCESS_ACTIVITY

                 o REGISTRY_KEY_ACTIVITY

                 o REGISTRY_VALUE_ACTIVITY

                 o RESOURCE_ACTIVITY

                 o SCHEDULED_JOB_ACTIVITY

                 o SECURITY_FINDING

                 o ACCOUNT_CHANGE

                 o AUTHENTICATION

                 o AUTHORIZATION

                 o ENTITY_MANAGEMENT_AUDIT

                 o DHCP_ACTIVITY

                 o NETWORK_ACTIVITY

                 o DNS_ACTIVITY

                 o FTP_ACTIVITY

                 o HTTP_ACTIVITY

                 o RDP_ACTIVITY

                 o SMB_ACTIVITY

                 o SSH_ACTIVITY

                 o CONFIG_STATE

                 o INVENTORY_INFO

                 o EMAIL_ACTIVITY

                 o API_ACTIVITY

                 o CLOUD_API

                 (string)

              sourceName -> (string)
                 The  supported  Amazon  Web Services services from which logs
                 and events are collected. Amazon Security Lake  supports  log
                 and  event  collection for natively supported Amazon Web Ser-
                 vices services.

              sourceStatuses -> (list)
                 The log status for the Security Lake account.

                 (structure)
                     Retrieves the Logs status for the  Amazon  Security  Lake
                     account.

                     resource -> (string)
                        Defines  path  the stored logs are available which has
                        information on your systems,  applications,  and  ser-
                        vices.

                     status -> (string)
                        The  health  status of services, including error codes
                        and patterns.

       nextToken -> (string)
          Lists if there are more results available. The value of nextToken is
          a  unique  pagination token for each page. Repeat the call using the
          returned token to retrieve the next page. Keep all  other  arguments
          unchanged.

          Each pagination token expires after 24 hours. Using an expired pagi-
          nation token will return an HTTP 400 InvalidToken error.



                                                       GET-DATA-LAKE-SOURCES()
