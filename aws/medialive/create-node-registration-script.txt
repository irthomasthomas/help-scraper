CREATE-NODE-REGISTRATION-SCRIPT()            CREATE-NODE-REGISTRATION-SCRIPT()



NAME
       create-node-registration-script -

DESCRIPTION
       Create  the  Register Node script for all the nodes intended for a spe-
       cific Cluster. You will then run the script on each hardware unit  that
       is  intended  for that Cluster. The script creates a Node in the speci-
       fied Cluster. It then binds the Node to this hardware unit,  and  acti-
       vates the node hardware for use with MediaLive Anywhere.

       See also: AWS API Documentation

SYNOPSIS
            create-node-registration-script
          --cluster-id <value>
          [--id <value>]
          [--name <value>]
          [--node-interface-mappings <value>]
          [--request-id <value>]
          [--role <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --cluster-id (string) The ID of the cluster

       --id  (string) If you're generating a re-registration script for an al-
       ready existing node, this is where you provide the id.

       --name (string) Specify a pattern for MediaLive Anywhere to use to  as-
       sign  a  name  to each Node in the Cluster. The pattern can include the
       variables $hn (hostname of the node hardware) and $ts for the date  and
       time    that    the   Node   is   created,   in   UTC   (for   example,
       2024-08-20T23:35:12Z).

       --node-interface-mappings (list) Documentation update needed(structure)
          A mapping that's used to pair a logical network interface name on  a
          Node  with the physical interface name exposed in the operating sys-
          tem.

          LogicalInterfaceName -> (string)
              A uniform logical interface name to address in a MediaLive chan-
              nel configuration.

          NetworkInterfaceMode -> (string)
              Used   in   NodeInterfaceMapping   and  NodeInterfaceMappingCre-
              ateRequest

          PhysicalInterfaceName -> (string)
              The name of the physical interface on the hardware that will  be
              running Elemental anywhere.

       Shorthand Syntax:

          LogicalInterfaceName=string,NetworkInterfaceMode=string,PhysicalInterfaceName=string ...

       JSON Syntax:

          [
            {
              "LogicalInterfaceName": "string",
              "NetworkInterfaceMode": "NAT"|"BRIDGE",
              "PhysicalInterfaceName": "string"
            }
            ...
          ]

       --request-id  (string)  An ID that you assign to a create request. This
       ID ensures idempotency when creating resources.

       --role (string) The initial role of the Node  in  the  Cluster.  ACTIVE
       means  the  Node  is available for encoding. BACKUP means the Node is a
       redundant Node and might get used if an ACTIVE Node fails.
          Possible values:

          o BACKUP

          o ACTIVE

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       NodeRegistrationScript -> (string)
          A  script  that can be run on a Bring Your Own Device Elemental Any-
          where system to create a node in a cluster.



                                             CREATE-NODE-REGISTRATION-SCRIPT()
