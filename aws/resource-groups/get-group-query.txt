GET-GROUP-QUERY()                                            GET-GROUP-QUERY()



NAME
       get-group-query -

DESCRIPTION
       Retrieves  the  resource  query  associated with the specified resource
       group. For more  information  about  resource  queries,  see  Create  a
       tag-based group in Resource Groups .
          Minimum permissions

       To run this command, you must have the following permissions:

       o resource-groups:GetGroupQuery

       See also: AWS API Documentation

SYNOPSIS
            get-group-query
          [--group-name <value>]
          [--group <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --group-name (string)
          Don't use this parameter. Use Group instead.

       --group (string)
          The name or the ARN of the resource group to query.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To get the query attached to a resource group

       The  following  get-group-query  example displays query attached to the
       specified resource group.

          aws resource-groups get-group-query \
              --group-name tbq-WebServer

       Output:

          {
              "GroupQuery": {
                  "GroupName": "tbq-WebServer",
                  "ResourceQuery": {
                      "Type": "TAG_FILTERS_1_0",
                      "Query": "{\"ResourceTypeFilters\":[\"AWS::EC2::Instance\"],\"TagFilters\":[{\"Key\":\"Name\", \"Values\":[\"WebServers\"]}]}"
                  }
              }
          }

OUTPUT
       GroupQuery -> (structure)
          The resource query associated with the specified group. For more in-
          formation  about  resource  queries, see Create a tag-based group in
          Resource Groups .

          GroupName -> (string)
              The name of the resource group that is associated with the spec-
              ified resource query.

          ResourceQuery -> (structure)
              The  resource query that determines which AWS resources are mem-
              bers of the associated resource group.

              Type -> (string)
                 The type of the query. You can use the following values:

                 o

                   *
                   CLOUDFORMATION_STACK_1_0: * Specifies that the  Query  con-
                   tains an ARN for a CloudFormation stack.

                 System Message: WARNING/2 (<string>:, line 249)
                   Inline emphasis start-string without end-string.

                 o ``TAG_FILTERS_1_0:`` * Specifies that the ``Query`` parame-
                   ter contains a JSON string that represents a collection  of
                   simple  tag  filters  for resource types and tags. The JSON
                   string uses  a  syntax  similar  to  the  ``  `GetResources
                   <https://docs.aws.amazon.com/resourcegroupstagging/lat-
                   est/APIReference/API_GetResources.html>`__  ``   operation,
                   but     uses     only     the    ``    `ResourceTypeFilters
                   <https://docs.aws.amazon.com/resourcegroupstagging/lat-
                   est/APIReference/API_GetResources.html#resourcegrouptag-
                   ging-GetResources-request-ResourceTypeFilters>`__ `` and ``
                   `TagFilters <https://docs.aws.amazon.com/resourcegroupstag-
                   ging/latest/APIReference/API_GetResources.html#resource-
                   grouptagging-GetResources-request-TagFiltersTagFilters>`__
                   `` fields. If you specify more than one tag key,  only  re-
                   sources  that match all tag keys, and at least one value of
                   each specified tag key, are returned in your query. If  you
                   specify  more  than  one  value  for  a tag key, a resource
                   matches the filter if it has a tag key value  that  matches
                   *any  of  the  specified  values. For example, consider the
                   following sample query for resources that  have  two  tags,
                   Stage    and    Version    ,    with   two   values   each:
                   [{"Stage":["Test","Deploy"]},{"Version":["1","2"]}]     The
                   results of this query could include the following.

                   o An   EC2  instance  that  has  the  following  two  tags:
                     {"Stage":"Deploy"} , and {"Version":"2"}

                   o An  S3  bucket  that  has   the   following   two   tags:
                     {"Stage":"Test"} , and {"Version":"1"}

                 The  query  would  not include the following items in the re-
                 sults, however.

                     o An EC2  instance  that  has  only  the  following  tag:
                       {"Stage":"Deploy"}  . The instance does not have all of
                       the tag keys specified in the filter, so it is excluded
                       from the results.

                     o An  RDS  database  that  has  the  following  two tags:
                       {"Stage":"Archived"} and {"Version":"4"}   The database
                       has  all of the tag keys, but none of those keys has an
                       associated value that matches at least one of the spec-
                       ified values in the filter.

              Query -> (string)
                 The query that defines a group or a search.



                                                             GET-GROUP-QUERY()
