UPDATE-KNOWLEDGE-BASE()                                UPDATE-KNOWLEDGE-BASE()



NAME
       update-knowledge-base -

DESCRIPTION
       Update an existing knowledge base

       See also: AWS API Documentation

SYNOPSIS
            update-knowledge-base
          --knowledge-base-id <value>
          --name <value>
          [--description <value>]
          --role-arn <value>
          --knowledge-base-configuration <value>
          --storage-configuration <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --knowledge-base-id (string)
          Identifier for a resource.

       --name (string)
          Name for a resource.

       --description (string)
          Description of the Resource.

       --role-arn (string)
          ARN of a IAM role.

       --knowledge-base-configuration (structure)
          Configures a bedrock knowledge base.

          type -> (string)
              The type of a knowledge base.

          vectorKnowledgeBaseConfiguration -> (structure)
              Configurations for a vector knowledge base.

              embeddingModelArn -> (string)
                 Arn of a Bedrock model.

       Shorthand Syntax:

          type=string,vectorKnowledgeBaseConfiguration={embeddingModelArn=string}

       JSON Syntax:

          {
            "type": "VECTOR",
            "vectorKnowledgeBaseConfiguration": {
              "embeddingModelArn": "string"
            }
          }

       --storage-configuration (structure)
          Configures  the  physical  storage  of  ingested data in a knowledge
          base.

          type -> (string)
              The storage type of a knowledge base.

          opensearchServerlessConfiguration -> (structure)
              Contains the configurations  to  use  OpenSearch  Serverless  to
              store knowledge base data.

              collectionArn -> (string)
                 Arn of an OpenSearch Serverless collection.

              vectorIndexName -> (string)
                 Arn of an OpenSearch Serverless index.

              fieldMapping -> (structure)
                 A  mapping  of  Bedrock  Knowledge  Base fields to OpenSearch
                 Serverless field names

                 vectorField -> (string)
                     Name of the field

                 textField -> (string)
                     Name of the field

                 metadataField -> (string)
                     Name of the field

          pineconeConfiguration -> (structure)
              Contains the configurations to use Pinecone to  store  knowledge
              base data.

              connectionString -> (string)
                 Pinecone connection string

              credentialsSecretArn -> (string)
                 Arn of a SecretsManager Secret.

              namespace -> (string)
                 Pinecone namespace

              fieldMapping -> (structure)
                 A  mapping of Bedrock Knowledge Base fields to Pinecone field
                 names

                 textField -> (string)
                     Name of the field

                 metadataField -> (string)
                     Name of the field

          redisEnterpriseCloudConfiguration -> (structure)
              Contains the configurations to use  Redis  Enterprise  Cloud  to
              store knowledge base data.

              endpoint -> (string)
                 Redis enterprise cloud endpoint

              vectorIndexName -> (string)
                 Name of a redis enterprise cloud index

              credentialsSecretArn -> (string)
                 Arn of a SecretsManager Secret.

              fieldMapping -> (structure)
                 A  mapping  of  Bedrock  Knowledge Base fields to Redis Cloud
                 field names

                 vectorField -> (string)
                     Name of the field

                 textField -> (string)
                     Name of the field

                 metadataField -> (string)
                     Name of the field

       Shorthand Syntax:

          type=string,opensearchServerlessConfiguration={collectionArn=string,vectorIndexName=string,fieldMapping={vectorField=string,textField=string,metadataField=string}},pineconeConfiguration={connectionString=string,credentialsSecretArn=string,namespace=string,fieldMapping={textField=string,metadataField=string}},redisEnterpriseCloudConfiguration={endpoint=string,vectorIndexName=string,credentialsSecretArn=string,fieldMapping={vectorField=string,textField=string,metadataField=string}}

       JSON Syntax:

          {
            "type": "OPENSEARCH_SERVERLESS"|"PINECONE"|"REDIS_ENTERPRISE_CLOUD",
            "opensearchServerlessConfiguration": {
              "collectionArn": "string",
              "vectorIndexName": "string",
              "fieldMapping": {
                "vectorField": "string",
                "textField": "string",
                "metadataField": "string"
              }
            },
            "pineconeConfiguration": {
              "connectionString": "string",
              "credentialsSecretArn": "string",
              "namespace": "string",
              "fieldMapping": {
                "textField": "string",
                "metadataField": "string"
              }
            },
            "redisEnterpriseCloudConfiguration": {
              "endpoint": "string",
              "vectorIndexName": "string",
              "credentialsSecretArn": "string",
              "fieldMapping": {
                "vectorField": "string",
                "textField": "string",
                "metadataField": "string"
              }
            }
          }

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       knowledgeBase -> (structure)
          Contains the information of a knowledge base.

          knowledgeBaseId -> (string)
              Identifier for a resource.

          name -> (string)
              Name for a resource.

          knowledgeBaseArn -> (string)
              ARN of a KnowledgeBase

          description -> (string)
              Description of the Resource.

          roleArn -> (string)
              ARN of a IAM role.

          knowledgeBaseConfiguration -> (structure)
              Configures a bedrock knowledge base.

              type -> (string)
                 The type of a knowledge base.

              vectorKnowledgeBaseConfiguration -> (structure)
                 Configurations for a vector knowledge base.

                 embeddingModelArn -> (string)
                     Arn of a Bedrock model.

          storageConfiguration -> (structure)
              Configures  the physical storage of ingested data in a knowledge
              base.

              type -> (string)
                 The storage type of a knowledge base.

              opensearchServerlessConfiguration -> (structure)
                 Contains the configurations to use OpenSearch  Serverless  to
                 store knowledge base data.

                 collectionArn -> (string)
                     Arn of an OpenSearch Serverless collection.

                 vectorIndexName -> (string)
                     Arn of an OpenSearch Serverless index.

                 fieldMapping -> (structure)
                     A  mapping of Bedrock Knowledge Base fields to OpenSearch
                     Serverless field names

                     vectorField -> (string)
                        Name of the field

                     textField -> (string)
                        Name of the field

                     metadataField -> (string)
                        Name of the field

              pineconeConfiguration -> (structure)
                 Contains the configurations to use Pinecone to  store  knowl-
                 edge base data.

                 connectionString -> (string)
                     Pinecone connection string

                 credentialsSecretArn -> (string)
                     Arn of a SecretsManager Secret.

                 namespace -> (string)
                     Pinecone namespace

                 fieldMapping -> (structure)
                     A  mapping  of  Bedrock Knowledge Base fields to Pinecone
                     field names

                     textField -> (string)
                        Name of the field

                     metadataField -> (string)
                        Name of the field

              redisEnterpriseCloudConfiguration -> (structure)
                 Contains the configurations to use Redis Enterprise Cloud  to
                 store knowledge base data.

                 endpoint -> (string)
                     Redis enterprise cloud endpoint

                 vectorIndexName -> (string)
                     Name of a redis enterprise cloud index

                 credentialsSecretArn -> (string)
                     Arn of a SecretsManager Secret.

                 fieldMapping -> (structure)
                     A mapping of Bedrock Knowledge Base fields to Redis Cloud
                     field names

                     vectorField -> (string)
                        Name of the field

                     textField -> (string)
                        Name of the field

                     metadataField -> (string)
                        Name of the field

          status -> (string)
              The status of a knowledge base.

          createdAt -> (timestamp)
              Time Stamp.

          updatedAt -> (timestamp)
              Time Stamp.

          failureReasons -> (list)
              Failure Reasons for Error.

              (string)
                 Failure Reason for Error.



                                                       UPDATE-KNOWLEDGE-BASE()
