UPDATE-KNOWLEDGE-BASE()                                UPDATE-KNOWLEDGE-BASE()



NAME
       update-knowledge-base -

DESCRIPTION
       Updates  the configuration of a knowledge base with the fields that you
       specify. Because all fields will be overwritten, you must  include  the
       same values for fields that you want to keep the same.

       You can change the following fields:

       o name

       o description

       o roleArn

       You can't change the knowledgeBaseConfiguration or storageConfiguration
       fields, so you must specify the same configurations as when you created
       the  knowledge  base.  You can send a GetKnowledgeBase request and copy
       the same configurations.

       See also: AWS API Documentation

SYNOPSIS
            update-knowledge-base
          [--description <value>]
          --knowledge-base-configuration <value>
          --knowledge-base-id <value>
          --name <value>
          --role-arn <value>
          --storage-configuration <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --description (string)
          Specifies a new description for the knowledge base.

       --knowledge-base-configuration (structure)
          Specifies the configuration for the embeddings model  used  for  the
          knowledge  base.  You  must  use  the same configuration as when the
          knowledge base was created.

          type -> (string)
              The type of data that the data source is converted into for  the
              knowledge base.

          vectorKnowledgeBaseConfiguration -> (structure)
              Contains  details  about the embeddings model that'sused to con-
              vert the data source.

              embeddingModelArn -> (string)
                 The Amazon Resource Name (ARN) of the model  used  to  create
                 vector embeddings for the knowledge base.

       Shorthand Syntax:

          type=string,vectorKnowledgeBaseConfiguration={embeddingModelArn=string}

       JSON Syntax:

          {
            "type": "VECTOR",
            "vectorKnowledgeBaseConfiguration": {
              "embeddingModelArn": "string"
            }
          }

       --knowledge-base-id (string)
          The unique identifier of the knowledge base to update.

       --name (string)
          Specifies a new name for the knowledge base.

       --role-arn (string)
          Specifies  a  different  Amazon  Resource Name (ARN) of the IAM role
          with permissions to invoke API operations on the knowledge base.

       --storage-configuration (structure)
          Specifies the configuration for the vector store used for the knowl-
          edge base. You must use the same configuration as when the knowledge
          base was created.

          mongoDbAtlasConfiguration -> (structure)
              Contains the storage configuration of the knowledge base in Mon-
              goDB Atlas.

              collectionName -> (string)
                 The collection name of the knowledge base in MongoDB Atlas.

              credentialsSecretArn -> (string)
                 The Amazon Resource Name (ARN) of the secret that you created
                 in Secrets Manager that contains user  credentials  for  your
                 MongoDB Atlas cluster.

              databaseName -> (string)
                 The  database  name  in  your  MongoDB Atlas cluster for your
                 knowledge base.

              endpoint -> (string)
                 The endpoint URL of  your  MongoDB  Atlas  cluster  for  your
                 knowledge base.

              endpointServiceName -> (string)
                 The  name of the VPC endpoint service in your account that is
                 connected to your MongoDB Atlas cluster.

              fieldMapping -> (structure)
                 Contains the names of the fields to which to map  information
                 about the vector store.

                 metadataField -> (string)
                     The  name  of  the  field  in which Amazon Bedrock stores
                     metadata about the vector store.

                 textField -> (string)
                     The name of the field in which Amazon Bedrock stores  the
                     raw  text  from your data. The text is split according to
                     the chunking strategy you choose.

                 vectorField -> (string)
                     The name of the field in which Amazon Bedrock stores  the
                     vector embeddings for your data sources.

              vectorIndexName -> (string)
                 The name of the MongoDB Atlas vector search index.

          opensearchServerlessConfiguration -> (structure)
              Contains the storage configuration of the knowledge base in Ama-
              zon OpenSearch Service.

              collectionArn -> (string)
                 The Amazon Resource Name (ARN) of the OpenSearch Service vec-
                 tor store.

              fieldMapping -> (structure)
                 Contains  the names of the fields to which to map information
                 about the vector store.

                 metadataField -> (string)
                     The name of the field  in  which  Amazon  Bedrock  stores
                     metadata about the vector store.

                 textField -> (string)
                     The  name of the field in which Amazon Bedrock stores the
                     raw text from your data. The text is split  according  to
                     the chunking strategy you choose.

                 vectorField -> (string)
                     The  name of the field in which Amazon Bedrock stores the
                     vector embeddings for your data sources.

              vectorIndexName -> (string)
                 The name of the vector store.

          pineconeConfiguration -> (structure)
              Contains the storage configuration  of  the  knowledge  base  in
              Pinecone.

              connectionString -> (string)
                 The endpoint URL for your index management page.

              credentialsSecretArn -> (string)
                 The Amazon Resource Name (ARN) of the secret that you created
                 in Secrets Manager that is linked to your Pinecone API key.

              fieldMapping -> (structure)
                 Contains the names of the fields to which to map  information
                 about the vector store.

                 metadataField -> (string)
                     The  name  of  the  field  in which Amazon Bedrock stores
                     metadata about the vector store.

                 textField -> (string)
                     The name of the field in which Amazon Bedrock stores  the
                     raw  text  from your data. The text is split according to
                     the chunking strategy you choose.

              namespace -> (string)
                 The namespace to be used to write new data to your database.

          rdsConfiguration -> (structure)
              Contains details about the storage configuration of  the  knowl-
              edge base in Amazon RDS. For more information, see Create a vec-
              tor index in Amazon RDS .

              credentialsSecretArn -> (string)
                 The Amazon Resource Name (ARN) of the secret that you created
                 in  Secrets  Manager  that is linked to your Amazon RDS data-
                 base.

              databaseName -> (string)
                 The name of your Amazon RDS database.

              fieldMapping -> (structure)
                 Contains the names of the fields to which to map  information
                 about the vector store.

                 metadataField -> (string)
                     The  name  of  the  field  in which Amazon Bedrock stores
                     metadata about the vector store.

                 primaryKeyField -> (string)
                     The name of the field in which Amazon Bedrock stores  the
                     ID for each entry.

                 textField -> (string)
                     The  name of the field in which Amazon Bedrock stores the
                     raw text from your data. The text is split  according  to
                     the chunking strategy you choose.

                 vectorField -> (string)
                     The  name of the field in which Amazon Bedrock stores the
                     vector embeddings for your data sources.

              resourceArn -> (string)
                 The Amazon Resource Name (ARN) of the vector store.

              tableName -> (string)
                 The name of the table in the database.

          redisEnterpriseCloudConfiguration -> (structure)
              Contains the storage configuration of the knowledge base in  Re-
              dis Enterprise Cloud.

              credentialsSecretArn -> (string)
                 The Amazon Resource Name (ARN) of the secret that you created
                 in Secrets Manager that is linked to  your  Redis  Enterprise
                 Cloud database.

              endpoint -> (string)
                 The endpoint URL of the Redis Enterprise Cloud database.

              fieldMapping -> (structure)
                 Contains  the names of the fields to which to map information
                 about the vector store.

                 metadataField -> (string)
                     The name of the field  in  which  Amazon  Bedrock  stores
                     metadata about the vector store.

                 textField -> (string)
                     The  name of the field in which Amazon Bedrock stores the
                     raw text from your data. The text is split  according  to
                     the chunking strategy you choose.

                 vectorField -> (string)
                     The  name of the field in which Amazon Bedrock stores the
                     vector embeddings for your data sources.

              vectorIndexName -> (string)
                 The name of the vector index.

          type -> (string)
              The vector store service in which the knowledge base is stored.

       Shorthand Syntax:

          mongoDbAtlasConfiguration={collectionName=string,credentialsSecretArn=string,databaseName=string,endpoint=string,endpointServiceName=string,fieldMapping={metadataField=string,textField=string,vectorField=string},vectorIndexName=string},opensearchServerlessConfiguration={collectionArn=string,fieldMapping={metadataField=string,textField=string,vectorField=string},vectorIndexName=string},pineconeConfiguration={connectionString=string,credentialsSecretArn=string,fieldMapping={metadataField=string,textField=string},namespace=string},rdsConfiguration={credentialsSecretArn=string,databaseName=string,fieldMapping={metadataField=string,primaryKeyField=string,textField=string,vectorField=string},resourceArn=string,tableName=string},redisEnterpriseCloudConfiguration={credentialsSecretArn=string,endpoint=string,fieldMapping={metadataField=string,textField=string,vectorField=string},vectorIndexName=string},type=string

       JSON Syntax:

          {
            "mongoDbAtlasConfiguration": {
              "collectionName": "string",
              "credentialsSecretArn": "string",
              "databaseName": "string",
              "endpoint": "string",
              "endpointServiceName": "string",
              "fieldMapping": {
                "metadataField": "string",
                "textField": "string",
                "vectorField": "string"
              },
              "vectorIndexName": "string"
            },
            "opensearchServerlessConfiguration": {
              "collectionArn": "string",
              "fieldMapping": {
                "metadataField": "string",
                "textField": "string",
                "vectorField": "string"
              },
              "vectorIndexName": "string"
            },
            "pineconeConfiguration": {
              "connectionString": "string",
              "credentialsSecretArn": "string",
              "fieldMapping": {
                "metadataField": "string",
                "textField": "string"
              },
              "namespace": "string"
            },
            "rdsConfiguration": {
              "credentialsSecretArn": "string",
              "databaseName": "string",
              "fieldMapping": {
                "metadataField": "string",
                "primaryKeyField": "string",
                "textField": "string",
                "vectorField": "string"
              },
              "resourceArn": "string",
              "tableName": "string"
            },
            "redisEnterpriseCloudConfiguration": {
              "credentialsSecretArn": "string",
              "endpoint": "string",
              "fieldMapping": {
                "metadataField": "string",
                "textField": "string",
                "vectorField": "string"
              },
              "vectorIndexName": "string"
            },
            "type": "OPENSEARCH_SERVERLESS"|"PINECONE"|"REDIS_ENTERPRISE_CLOUD"|"RDS"|"MONGO_DB_ATLAS"
          }

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       knowledgeBase -> (structure)
          Contains details about the knowledge base.

          createdAt -> (timestamp)
              The time at which the knowledge base was created.

          description -> (string)
              The description of the knowledge base.

          failureReasons -> (list)
              A  list  of reasons that the API operation on the knowledge base
              failed.

              (string)

          knowledgeBaseArn -> (string)
              The Amazon Resource Name (ARN) of the knowledge base.

          knowledgeBaseConfiguration -> (structure)
              Contains details  about  the  embeddings  configuration  of  the
              knowledge base.

              type -> (string)
                 The  type  of data that the data source is converted into for
                 the knowledge base.

              vectorKnowledgeBaseConfiguration -> (structure)
                 Contains details about the  embeddings  model  that'sused  to
                 convert the data source.

                 embeddingModelArn -> (string)
                     The  Amazon Resource Name (ARN) of the model used to cre-
                     ate vector embeddings for the knowledge base.

          knowledgeBaseId -> (string)
              The unique identifier of the knowledge base.

          name -> (string)
              The name of the knowledge base.

          roleArn -> (string)
              The Amazon Resource Name (ARN) of the IAM role with  permissions
              to invoke API operations on the knowledge base.

          status -> (string)
              The  status  of  the  knowledge base. The following statuses are
              possible:

              o CREATING  The knowledge base is being created.

              o ACTIVE  The knowledge base is ready to be queried.

              o DELETING  The knowledge base is being deleted.

              o UPDATING  The knowledge base is being updated.

              o FAILED  The knowledge base API operation failed.

          storageConfiguration -> (structure)
              Contains details about the storage configuration of  the  knowl-
              edge base.

              mongoDbAtlasConfiguration -> (structure)
                 Contains  the  storage configuration of the knowledge base in
                 MongoDB Atlas.

                 collectionName -> (string)
                     The collection name of the knowledge base in MongoDB  At-
                     las.

                 credentialsSecretArn -> (string)
                     The  Amazon  Resource  Name  (ARN) of the secret that you
                     created in Secrets Manager that contains user credentials
                     for your MongoDB Atlas cluster.

                 databaseName -> (string)
                     The  database name in your MongoDB Atlas cluster for your
                     knowledge base.

                 endpoint -> (string)
                     The endpoint URL of your MongoDB Atlas cluster  for  your
                     knowledge base.

                 endpointServiceName -> (string)
                     The name of the VPC endpoint service in your account that
                     is connected to your MongoDB Atlas cluster.

                 fieldMapping -> (structure)
                     Contains the names of the fields to which to map informa-
                     tion about the vector store.

                     metadataField -> (string)
                        The  name  of the field in which Amazon Bedrock stores
                        metadata about the vector store.

                     textField -> (string)
                        The name of the field in which Amazon  Bedrock  stores
                        the raw text from your data. The text is split accord-
                        ing to the chunking strategy you choose.

                     vectorField -> (string)
                        The name of the field in which Amazon  Bedrock  stores
                        the vector embeddings for your data sources.

                 vectorIndexName -> (string)
                     The name of the MongoDB Atlas vector search index.

              opensearchServerlessConfiguration -> (structure)
                 Contains  the  storage configuration of the knowledge base in
                 Amazon OpenSearch Service.

                 collectionArn -> (string)
                     The Amazon Resource Name (ARN) of the OpenSearch  Service
                     vector store.

                 fieldMapping -> (structure)
                     Contains the names of the fields to which to map informa-
                     tion about the vector store.

                     metadataField -> (string)
                        The name of the field in which Amazon  Bedrock  stores
                        metadata about the vector store.

                     textField -> (string)
                        The  name  of the field in which Amazon Bedrock stores
                        the raw text from your data. The text is split accord-
                        ing to the chunking strategy you choose.

                     vectorField -> (string)
                        The  name  of the field in which Amazon Bedrock stores
                        the vector embeddings for your data sources.

                 vectorIndexName -> (string)
                     The name of the vector store.

              pineconeConfiguration -> (structure)
                 Contains the storage configuration of the knowledge  base  in
                 Pinecone.

                 connectionString -> (string)
                     The endpoint URL for your index management page.

                 credentialsSecretArn -> (string)
                     The  Amazon  Resource  Name  (ARN) of the secret that you
                     created  in  Secrets  Manager  that  is  linked  to  your
                     Pinecone API key.

                 fieldMapping -> (structure)
                     Contains the names of the fields to which to map informa-
                     tion about the vector store.

                     metadataField -> (string)
                        The name of the field in which Amazon  Bedrock  stores
                        metadata about the vector store.

                     textField -> (string)
                        The  name  of the field in which Amazon Bedrock stores
                        the raw text from your data. The text is split accord-
                        ing to the chunking strategy you choose.

                 namespace -> (string)
                     The  namespace to be used to write new data to your data-
                     base.

              rdsConfiguration -> (structure)
                 Contains details  about  the  storage  configuration  of  the
                 knowledge  base  in  Amazon  RDS.  For  more information, see
                 Create a vector index in Amazon RDS .

                 credentialsSecretArn -> (string)
                     The Amazon Resource Name (ARN) of  the  secret  that  you
                     created  in Secrets Manager that is linked to your Amazon
                     RDS database.

                 databaseName -> (string)
                     The name of your Amazon RDS database.

                 fieldMapping -> (structure)
                     Contains the names of the fields to which to map informa-
                     tion about the vector store.

                     metadataField -> (string)
                        The  name  of the field in which Amazon Bedrock stores
                        metadata about the vector store.

                     primaryKeyField -> (string)
                        The name of the field in which Amazon  Bedrock  stores
                        the ID for each entry.

                     textField -> (string)
                        The  name  of the field in which Amazon Bedrock stores
                        the raw text from your data. The text is split accord-
                        ing to the chunking strategy you choose.

                     vectorField -> (string)
                        The  name  of the field in which Amazon Bedrock stores
                        the vector embeddings for your data sources.

                 resourceArn -> (string)
                     The Amazon Resource Name (ARN) of the vector store.

                 tableName -> (string)
                     The name of the table in the database.

              redisEnterpriseCloudConfiguration -> (structure)
                 Contains the storage configuration of the knowledge  base  in
                 Redis Enterprise Cloud.

                 credentialsSecretArn -> (string)
                     The  Amazon  Resource  Name  (ARN) of the secret that you
                     created in Secrets Manager that is linked to  your  Redis
                     Enterprise Cloud database.

                 endpoint -> (string)
                     The endpoint URL of the Redis Enterprise Cloud database.

                 fieldMapping -> (structure)
                     Contains the names of the fields to which to map informa-
                     tion about the vector store.

                     metadataField -> (string)
                        The name of the field in which Amazon  Bedrock  stores
                        metadata about the vector store.

                     textField -> (string)
                        The  name  of the field in which Amazon Bedrock stores
                        the raw text from your data. The text is split accord-
                        ing to the chunking strategy you choose.

                     vectorField -> (string)
                        The  name  of the field in which Amazon Bedrock stores
                        the vector embeddings for your data sources.

                 vectorIndexName -> (string)
                     The name of the vector index.

              type -> (string)
                 The vector store service  in  which  the  knowledge  base  is
                 stored.

          updatedAt -> (timestamp)
              The time at which the knowledge base was last updated.



                                                       UPDATE-KNOWLEDGE-BASE()
