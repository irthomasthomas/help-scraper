CREATE-DATA-CELLS-FILTER()                          CREATE-DATA-CELLS-FILTER()



NAME
       create-data-cells-filter -

DESCRIPTION
       Creates a data cell filter to allow one to grant access to certain col-
       umns on certain rows.

       See also: AWS API Documentation

SYNOPSIS
            create-data-cells-filter
          --table-data <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --table-data (structure)
          A DataCellsFilter structure containing information  about  the  data
          cells filter.

          TableCatalogId -> (string)
              The ID of the catalog to which the table belongs.

          DatabaseName -> (string)
              A database in the Glue Data Catalog.

          TableName -> (string)
              A table in the database.

          Name -> (string)
              The name given by the user to the data filter cell.

          RowFilter -> (structure)
              A PartiQL predicate.

              FilterExpression -> (string)
                 A filter expression.

              AllRowsWildcard -> (structure)
                 A wildcard for all rows.

          ColumnNames -> (list)
              A list of column names.

              (string)

          ColumnWildcard -> (structure)
              A wildcard with exclusions.

              You must specify either a ColumnNames list or the ColumnWildCard
              .

              ExcludedColumnNames -> (list)
                 Excludes column names. Any column with this name will be  ex-
                 cluded.

                 (string)

          VersionId -> (string)

       Shorthand Syntax:

          TableCatalogId=string,DatabaseName=string,TableName=string,Name=string,RowFilter={FilterExpression=string,AllRowsWildcard={}},ColumnNames=string,string,ColumnWildcard={ExcludedColumnNames=[string,string]},VersionId=string

       JSON Syntax:

          {
            "TableCatalogId": "string",
            "DatabaseName": "string",
            "TableName": "string",
            "Name": "string",
            "RowFilter": {
              "FilterExpression": "string",
              "AllRowsWildcard": {

              }
            },
            "ColumnNames": ["string", ...],
            "ColumnWildcard": {
              "ExcludedColumnNames": ["string", ...]
            },
            "VersionId": "string"
          }

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       Example 1: To create data cell filter

       The following create-data-cells-filter example creates a data cell fil-
       ter to allow one to grant access to certain columns based on row condi-
       tion.

          aws lakeformation create-data-cells-filter \
              --cli-input-json file://input.json

       Contents of input.json:

          {
              "TableData": {
                  "ColumnNames": ["p_channel_details", "p_start_date_sk", "p_promo_name"],
                  "DatabaseName": "tpc",
                  "Name": "developer_promotion",
                  "RowFilter": {
                      "FilterExpression": "p_promo_name='ese'"
                  },
                  "TableCatalogId": "123456789111",
                  "TableName": "dl_tpc_promotion"
              }
          }

       This command produces no output.

       For  more  information,  see  Data filtering and cell-level security in
       Lake Formation in the AWS Lake Formation Developer Guide.

       Example 2: To create column filter

       The following create-data-cells-filter example creates a data filter to
       allow one to grant access to certain columns.

          aws lakeformation create-data-cells-filter \
              --cli-input-json file://input.json

       Contents of input.json:

          {
              "TableData": {
                  "ColumnNames": ["p_channel_details", "p_start_date_sk", "p_promo_name"],
                  "DatabaseName": "tpc",
                  "Name": "developer_promotion_allrows",
                  "RowFilter": {
                      "AllRowsWildcard": {}
                  },
                  "TableCatalogId": "123456789111",
                  "TableName": "dl_tpc_promotion"
              }
          }

       This command produces no output.

       For  more  information,  see  Data filtering and cell-level security in
       Lake Formation in the AWS Lake Formation Developer Guide.

       Example 3: To create data filter with exclude columns

       The following create-data-cells-filter example creates a data filter to
       allow one to grant access all except the mentioned columns.

          aws lakeformation create-data-cells-filter \
              --cli-input-json file://input.json

       Contents of input.json:

          {
              "TableData": {
                  "ColumnWildcard": {
                      "ExcludedColumnNames": ["p_channel_details", "p_start_date_sk"]
                  },
                  "DatabaseName": "tpc",
                  "Name": "developer_promotion_excludecolumn",
                  "RowFilter": {
                      "AllRowsWildcard": {}
                  },
                  "TableCatalogId": "123456789111",
                  "TableName": "dl_tpc_promotion"
              }
          }

       This command produces no output.

       For  more  information,  see  Data filtering and cell-level security in
       Lake Formation in the AWS Lake Formation Developer Guide.

OUTPUT
       None



                                                    CREATE-DATA-CELLS-FILTER()
