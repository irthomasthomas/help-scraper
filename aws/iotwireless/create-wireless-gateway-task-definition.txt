CREATE-WIRELESS-GATEWAY-TASK-DEFINITICREATE-WIRELESS-GATEWAY-TASK-DEFINITION()



NAME
       create-wireless-gateway-task-definition -

DESCRIPTION
       Creates a gateway task definition.

       See also: AWS API Documentation

SYNOPSIS
            create-wireless-gateway-task-definition
          --auto-create-tasks | --no-auto-create-tasks
          [--name <value>]
          [--update <value>]
          [--client-request-token <value>]
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --auto-create-tasks | --no-auto-create-tasks (boolean)
          Whether to automatically create tasks using this task definition for
          all gateways with the specified current version. If false , the task
          must me created by calling CreateWirelessGatewayTask .

       --name (string)
          The name of the new resource.

       --update (structure)
          Information about the gateways to update.

          UpdateDataSource -> (string)
              The link to the S3 bucket.

          UpdateDataRole -> (string)
              The IAM role used to read data from the S3 bucket.

          LoRaWAN -> (structure)
              The properties that relate to the LoRaWAN wireless gateway.

              UpdateSignature -> (string)
                 The signature used to verify the update firmware.

              SigKeyCrc -> (long)
                 The CRC of the signature private key to check.

              CurrentVersion -> (structure)
                 The version of the gateways that should receive the update.

                 PackageVersion -> (string)
                     The version of the wireless gateway firmware.

                 Model -> (string)
                     The model number of the wireless gateway.

                 Station -> (string)
                     The basic station version of the wireless gateway.

              UpdateVersion -> (structure)
                 The firmware version to update the gateway to.

                 PackageVersion -> (string)
                     The version of the wireless gateway firmware.

                 Model -> (string)
                     The model number of the wireless gateway.

                 Station -> (string)
                     The basic station version of the wireless gateway.

       Shorthand Syntax:

          UpdateDataSource=string,UpdateDataRole=string,LoRaWAN={UpdateSignature=string,SigKeyCrc=long,CurrentVersion={PackageVersion=string,Model=string,Station=string},UpdateVersion={PackageVersion=string,Model=string,Station=string}}

       JSON Syntax:

          {
            "UpdateDataSource": "string",
            "UpdateDataRole": "string",
            "LoRaWAN": {
              "UpdateSignature": "string",
              "SigKeyCrc": long,
              "CurrentVersion": {
                "PackageVersion": "string",
                "Model": "string",
                "Station": "string"
              },
              "UpdateVersion": {
                "PackageVersion": "string",
                "Model": "string",
                "Station": "string"
              }
            }
          }

       --client-request-token (string)
          Each  resource  must  have a unique client request token. The client
          token is used to implement idempotency. It ensures that the  request
          completes  no  more  than  one time. If you retry a request with the
          same token and the same parameters, the request will  complete  suc-
          cessfully.  However,  if  you try to create a new resource using the
          same token but different parameters, an HTTP 409 conflict occurs. If
          you  omit  this value, AWS SDKs will automatically generate a unique
          client request. For more information about idempotency, see Ensuring
          idempotency in Amazon EC2 API requests .

       --tags (list)
          The tags to attach to the specified resource. Tags are metadata that
          you can use to manage a resource.

          (structure)
              A simple label consisting of a customer-defined key-value pair

              Key -> (string)
                 The tag's key value.

              Value -> (string)
                 The tag's value.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a wireless gateway task definition

       The   following  create-wireless-gateway-task-definition  automatically
       creates tasks using this task definition  for  all  gateways  with  the
       specified current version.

          aws iotwireless create-wireless-gateway-task-definition \
              --cli-input-json file://input.json

       Contents of input.json:

          {
              "AutoCreateTasks": true,
              "Name": "TestAutoUpdate",
              "Update":{
                  "UpdateDataSource" : "s3://cupsalphagafirmwarebin/station",
                  "UpdateDataRole" : "arn:aws:iam::001234567890:role/SDK_Test_Role",
                  "LoRaWAN" :{
                      "CurrentVersion" :{
                          "PackageVersion" : "1.0.0",
                          "Station" : "2.0.5",
                          "Model" : "linux"
                      },
                      "UpdateVersion" :{
                          "PackageVersion" : "1.0.1",
                          "Station" : "2.0.5",
                          "Model" : "minihub"
                      }
                  }
              }
          }

       Output:

          {
              "Id": "b7d3baad-25c7-35e7-a4e1-1683a0d61da9"
          }

       For  more  information,  see Connecting devices and gateways to AWS IoT
       Core for LoRaWAN in the AWS IoT Developers Guide.

OUTPUT
       Id -> (string)
          The ID of the new wireless gateway task definition.

       Arn -> (string)
          The Amazon Resource Name of the resource.



                                     CREATE-WIRELESS-GATEWAY-TASK-DEFINITION()
