CREATE-WIRELESS-GATEWAY()                            CREATE-WIRELESS-GATEWAY()



NAME
       create-wireless-gateway -

DESCRIPTION
       Provisions a wireless gateway.

       NOTE:
          When provisioning a wireless gateway, you might run into duplication
          errors for the following reasons.

          o If you specify a GatewayEui value that already exists.

          o If you used a ClientRequestToken with the same  parameters  within
            the last 10 minutes.

          To  avoid  this error, make sure that you use unique identifiers and
          parameters for each request within the specified time period.

       See also: AWS API Documentation

SYNOPSIS
            create-wireless-gateway
          [--name <value>]
          [--description <value>]
          [--tags <value>]
          [--client-request-token <value>]
          --lorawan <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --name (string)
          The name of the new resource.

       --description (string)
          The description of the new resource.

       --tags (list)
          The tags to attach to the new wireless gateway.  Tags  are  metadata
          that you can use to manage a resource.

          (structure)
              A simple label consisting of a customer-defined key-value pair

              Key -> (string)
                 The tag's key value.

              Value -> (string)
                 The tag's value.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --client-request-token (string)
          Each  resource  must  have a unique client request token. The client
          token is used to implement idempotency. It ensures that the  request
          completes  no  more  than  one time. If you retry a request with the
          same token and the same parameters, the request will  complete  suc-
          cessfully.  However,  if  you try to create a new resource using the
          same token but different parameters, an HTTP 409 conflict occurs. If
          you  omit  this value, AWS SDKs will automatically generate a unique
          client request. For more information about idempotency, see Ensuring
          idempotency in Amazon EC2 API requests .

       --lorawan (structure)
          The  gateway configuration information to use to create the wireless
          gateway.

          GatewayEui -> (string)
              The gateway's EUI value.

          RfRegion -> (string)
              The frequency band (RFRegion) value.

          JoinEuiFilters -> (list)
              A list of JoinEuiRange used by  LoRa  gateways  to  filter  LoRa
              frames.

              (list)
                 A  pair of join EUI describing a range [BegEui, EndEui], both
                 ends are inclusive.

                 (string)

          NetIdFilters -> (list)
              A list of NetId values that are used by LoRa gateways to  filter
              the uplink frames.

              (string)
                 LoRaWAN network ID.

          SubBands -> (list)
              A  list  of  integer indicating which sub bands are supported by
              LoRa gateway.

              (integer)
                 A subset of supported frequency channels in a  certain  RFRe-
                 gion.

          Beaconing -> (structure)
              Beaconing  object  information,  which consists of the data rate
              and frequency parameters.

              DataRate -> (integer)
                 The data rate for gateways that are sending the beacons.

              Frequencies -> (list)
                 The frequency list for the gateways to send the beacons.

                 (integer)

          MaxEirp -> (float)
              The MaxEIRP value.

       Shorthand Syntax:

          GatewayEui=string,RfRegion=string,JoinEuiFilters=[[string,string],[string,string]],NetIdFilters=string,string,SubBands=integer,integer,Beaconing={DataRate=integer,Frequencies=[integer,integer]},MaxEirp=float

       JSON Syntax:

          {
            "GatewayEui": "string",
            "RfRegion": "string",
            "JoinEuiFilters": [
              ["string", ...]
              ...
            ],
            "NetIdFilters": ["string", ...],
            "SubBands": [integer, ...],
            "Beaconing": {
              "DataRate": integer,
              "Frequencies": [integer, ...]
            },
            "MaxEirp": float
          }

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a wireless gateway

       The following create-wireless-gateway example creates  a  wireless  Lo-
       RaWAN device gateway.

          aws iotwireless create-wireless-gateway \
              --lorawan GatewayEui="a1b2c3d4567890ab",RfRegion="US915" \
              --name "myFirstLoRaWANGateway" \
              --description "Using my first LoRaWAN gateway"

       Output:

          {
              "Arn": "arn:aws:iotwireless:us-east-1:123456789012:WirelessGateway/12345678-a1b2-3c45-67d8-e90fa1b2c34d",
              "Id": "12345678-a1b2-3c45-67d8-e90fa1b2c34d"
          }

       For  more  information,  see Connecting devices and gateways to AWS IoT
       Core for LoRaWAN in the AWS IoT Developers Guide.

OUTPUT
       Arn -> (string)
          The Amazon Resource Name of the new resource.

       Id -> (string)
          The ID of the new wireless gateway.



                                                     CREATE-WIRELESS-GATEWAY()
