SEND-DATA-TO-WIRELESS-DEVICE()                  SEND-DATA-TO-WIRELESS-DEVICE()



NAME
       send-data-to-wireless-device -

DESCRIPTION
       Sends a decrypted application data frame to a device.

       See also: AWS API Documentation

SYNOPSIS
            send-data-to-wireless-device
          --id <value>
          --transmit-mode <value>
          --payload-data <value>
          [--wireless-metadata <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --id (string)
          The ID of the wireless device to receive the data.

       --transmit-mode (integer)
          The  transmit  mode  to use to send data to the wireless device. Can
          be: 0 for UM (unacknowledge mode) or 1 for AM (acknowledge mode).

       --payload-data (string)
          The binary to be sent to the end device, encoded in base64.

       --wireless-metadata (structure)
          Metadata about the message request.

          LoRaWAN -> (structure)
              LoRaWAN device info.

              FPort -> (integer)
                 The Fport value.

              ParticipatingGateways -> (structure)
                 Choose the gateways that you want to  use  for  the  downlink
                 data  traffic  when the wireless device is running in class B
                 or class C mode.

                 DownlinkMode -> (string)
                     Indicates whether to send the downlink message in sequen-
                     tial  mode  or concurrent mode, or to use only the chosen
                     gateways from the previous uplink message transmission.

                 GatewayList -> (list)
                     The list of gateways that you want to use for sending the
                     downlink data traffic.

                     (structure)
                        Gateway  list item object that specifies the frequency
                        and list of gateways for which  the  downlink  message
                        should be sent.

                        GatewayId -> (string)
                            The  ID  of the wireless gateways that you want to
                            add to the list of gateways when sending  downlink
                            messages.

                        DownlinkFrequency -> (integer)
                            The frequency to use for the gateways when sending
                            a downlink message to the wireless device.

                 TransmissionInterval -> (integer)
                     The duration of time for which AWS IoT Core  for  LoRaWAN
                     will  wait  before  transmitting  the payload to the next
                     gateway.

          Sidewalk -> (structure)
              The Sidewalk account credentials.

              Seq -> (integer)
                 The sequence number.

              MessageType -> (string)
                 Sidewalk device message type. Default  value  is  CUSTOM_COM-
                 MAND_ID_NOTIFY .

              AckModeRetryDurationSecs -> (integer)
                 The duration of time in seconds to retry sending the ACK.

       JSON Syntax:

          {
            "LoRaWAN": {
              "FPort": integer,
              "ParticipatingGateways": {
                "DownlinkMode": "SEQUENTIAL"|"CONCURRENT"|"USING_UPLINK_GATEWAY",
                "GatewayList": [
                  {
                    "GatewayId": "string",
                    "DownlinkFrequency": integer
                  }
                  ...
                ],
                "TransmissionInterval": integer
              }
            },
            "Sidewalk": {
              "Seq": integer,
              "MessageType": "CUSTOM_COMMAND_ID_NOTIFY"|"CUSTOM_COMMAND_ID_GET"|"CUSTOM_COMMAND_ID_SET"|"CUSTOM_COMMAND_ID_RESP",
              "AckModeRetryDurationSecs": integer
            }
          }

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To send data to the wireless device

       The  following  send-data-to-wireless-device  example sends a decrypted
       application data frame to the wireless device.

          aws iotwireless send-data-to-wireless-device \
              --id "11aa5eae-2f56-4b8e-a023-b28d98494e49" \
              --transmit-mode "1" \
              --payload-data "SGVsbG8gVG8gRGV2c2lt" \
              --wireless-metadata LoRaWAN={FPort=1}

       Output:

          {
              MessageId: "6011dd36-0043d6eb-0072-0008"
          }

       For more information, see Connecting devices and gateways  to  AWS  IoT
       Core for LoRaWAN in the AWS IoT Developers Guide.

OUTPUT
       MessageId -> (string)
          The ID of the message sent to the wireless device.



                                                SEND-DATA-TO-WIRELESS-DEVICE()
