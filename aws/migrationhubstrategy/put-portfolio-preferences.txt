PUT-PORTFOLIO-PREFERENCES()                        PUT-PORTFOLIO-PREFERENCES()



NAME
       put-portfolio-preferences -

DESCRIPTION
       Saves the specified migration and modernization preferences.

       See also: AWS API Documentation

SYNOPSIS
            put-portfolio-preferences
          [--application-preferences <value>]
          [--database-preferences <value>]
          [--prioritize-business-goals <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --application-preferences (structure)
          The transformation preferences for non-database applications.

          managementPreference -> (structure)
              Application preferences that you specify to prefer managed envi-
              ronment.

              awsManagedResources -> (structure)
                 Indicates interest in solutions that are managed by AWS.

                 targetDestination -> (list)
                     The choice of application destination that you specify.

                     (string)

              noPreference -> (structure)
                 No specific preference.

                 targetDestination -> (list)
                     The choice of application destination that you specify.

                     (string)

              selfManageResources -> (structure)
                 Indicates interest in managing your own resources on AWS.

                 targetDestination -> (list)
                     Self-managed resources target destination.

                     (string)

       JSON Syntax:

          {
            "managementPreference": {
              "awsManagedResources": {
                "targetDestination": ["None specified"|"AWS Elastic BeanStalk"|"AWS Fargate", ...]
              },
              "noPreference": {
                "targetDestination": ["None specified"|"AWS Elastic BeanStalk"|"AWS Fargate"|"Amazon Elastic Cloud Compute (EC2)"|"Amazon Elastic Container Service (ECS)"|"Amazon Elastic Kubernetes Service (EKS)", ...]
              },
              "selfManageResources": {
                "targetDestination": ["None specified"|"Amazon Elastic Cloud Compute (EC2)"|"Amazon Elastic Container Service (ECS)"|"Amazon Elastic Kubernetes Service (EKS)", ...]
              }
            }
          }

       --database-preferences (structure)
          The transformation preferences for database applications.

          databaseManagementPreference -> (string)
              Specifies whether you're interested in self-managed databases or
              databases managed by AWS.

          databaseMigrationPreference -> (structure)
              Specifies your preferred migration path.

              heterogeneous -> (structure)
                 Indicates  whether you are interested in moving from one type
                 of database to another. For example, from SQL Server to  Ama-
                 zon Aurora MySQL-Compatible Edition.

                 targetDatabaseEngine -> (list)
                     The target database engine for heterogeneous database mi-
                     gration preference.

                     (string)

              homogeneous -> (structure)
                 Indicates whether you are interested in moving  to  the  same
                 type  of  database  into AWS. For example, from SQL Server in
                 your environment to SQL Server on AWS.

                 targetDatabaseEngine -> (list)
                     The target database engine for homogeneous  database  mi-
                     gration preferences.

                     (string)

              noPreference -> (structure)
                 Indicated  that  you  do  not prefer heterogeneous or homoge-
                 neous.

                 targetDatabaseEngine -> (list)
                     The target database engine for database migration prefer-
                     ence that you specify.

                     (string)

       JSON Syntax:

          {
            "databaseManagementPreference": "AWS-managed"|"Self-manage"|"No preference",
            "databaseMigrationPreference": {
              "heterogeneous": {
                "targetDatabaseEngine": ["None specified"|"Amazon Aurora"|"AWS PostgreSQL"|"MySQL"|"Microsoft SQL Server"|"Oracle Database"|"MariaDB"|"SAP"|"Db2 LUW"|"MongoDB", ...]
              },
              "homogeneous": {
                "targetDatabaseEngine": ["None specified", ...]
              },
              "noPreference": {
                "targetDatabaseEngine": ["None specified"|"Amazon Aurora"|"AWS PostgreSQL"|"MySQL"|"Microsoft SQL Server"|"Oracle Database"|"MariaDB"|"SAP"|"Db2 LUW"|"MongoDB", ...]
              }
            }
          }

       --prioritize-business-goals (structure)
          The rank of the business goals based on priority.

          businessGoals -> (structure)
              Rank of business goals based on priority.

              licenseCostReduction -> (integer)
                 Business goal to reduce license costs.

              modernizeInfrastructureWithCloudNativeTechnologies -> (integer)
                 Business  goal to modernize infrastructure by moving to cloud
                 native technologies.

              reduceOperationalOverheadWithManagedServices -> (integer)
                 Business goal to reduce the operational overhead on the  team
                 by moving into managed services.

              speedOfMigration -> (integer)
                 Business goal to achieve migration at a fast pace.

       Shorthand Syntax:

          businessGoals={licenseCostReduction=integer,modernizeInfrastructureWithCloudNativeTechnologies=integer,reduceOperationalOverheadWithManagedServices=integer,speedOfMigration=integer}

       JSON Syntax:

          {
            "businessGoals": {
              "licenseCostReduction": integer,
              "modernizeInfrastructureWithCloudNativeTechnologies": integer,
              "reduceOperationalOverheadWithManagedServices": integer,
              "speedOfMigration": integer
            }
          }

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       None



                                                   PUT-PORTFOLIO-PREFERENCES()
