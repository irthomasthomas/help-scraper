PUT-CORS-POLICY()                                            PUT-CORS-POLICY()



NAME
       put-cors-policy -

DESCRIPTION
       Sets  the  cross-origin resource sharing (CORS) configuration on a con-
       tainer so that the container can service cross-origin requests. For ex-
       ample,   you   might   want   to  enable  a  request  whose  origin  is
       http://www.example.com to access your  AWS  Elemental  MediaStore  con-
       tainer  at  my.example.container.com  by using the browser's XMLHttpRe-
       quest capability.

       To enable CORS on a container, you attach a CORS  policy  to  the  con-
       tainer.  In  the CORS policy, you configure rules that identify origins
       and the HTTP methods that can be executed on your container. The policy
       can  contain up to 398,000 characters. You can add up to 100 rules to a
       CORS policy. If more than one rule applies, the service uses the  first
       applicable rule listed.

       To  learn  more about CORS, see Cross-Origin Resource Sharing (CORS) in
       AWS Elemental MediaStore .

       See also: AWS API Documentation

SYNOPSIS
            put-cors-policy
          --container-name <value>
          --cors-policy <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --container-name (string)
          The name of the container that you want to assign  the  CORS  policy
          to.

       --cors-policy (list)
          The CORS policy to apply to the container.

          (structure)
              A  rule for a CORS policy. You can add up to 100 rules to a CORS
              policy. If more than one rule  applies,  the  service  uses  the
              first applicable rule listed.

              AllowedOrigins -> (list)
                 One  or  more response headers that you want users to be able
                 to access from their applications (for example, from a  Java-
                 Script XMLHttpRequest object).

                 Each CORS rule must have at least one AllowedOrigins element.
                 The string value can include only one wildcard character (*),
                 for example, http://
                 *
                 .example.com. Additionally, you can specify only one wildcard
                 character to allow cross-origin access for all origins.

                 System Message: WARNING/2 (<string>:, line 94)
                        Inline emphasis start-string without end-string.

                        (string)

              AllowedMethods -> (list)
                 Identifies an HTTP method that the origin that  is  specified
                 in the rule is allowed to execute.

                 Each  CORS  rule must contain at least one AllowedMethods and
                 one AllowedOrigins element.

                 (string)

              AllowedHeaders -> (list)
                 Specifies which headers are allowed in  a  preflight  OPTIONS
                 request  through  the  Access-Control-Request-Headers header.
                 Each header name  that  is  specified  in  Access-Control-Re-
                 quest-Headers  must  have  a corresponding entry in the rule.
                 Only the headers that were requested are sent back.

                 This element can contain only one wildcard character (*).

                 (string)

              MaxAgeSeconds -> (integer)
                 The time in seconds that your browser  caches  the  preflight
                 response for the specified resource.

                 A CORS rule can have only one MaxAgeSeconds element.

              ExposeHeaders -> (list)
                 One or more headers in the response that you want users to be
                 able to access from their applications (for example,  from  a
                 JavaScript XMLHttpRequest object).

                 This element is optional for each rule.

                 (string)

       Shorthand Syntax:

          AllowedOrigins=string,string,AllowedMethods=string,string,AllowedHeaders=string,string,MaxAgeSeconds=integer,ExposeHeaders=string,string ...

       JSON Syntax:

          [
            {
              "AllowedOrigins": ["string", ...],
              "AllowedMethods": ["PUT"|"GET"|"DELETE"|"HEAD", ...],
              "AllowedHeaders": ["string", ...],
              "MaxAgeSeconds": integer,
              "ExposeHeaders": ["string", ...]
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       Example 1: To add a CORS policy

       The  following  put-cors-policy  example  adds  a cross-origin resource
       sharing (CORS) policy to the specified container. The contents  of  the
       CORS policy are in the file named corsPolicy.json.

          aws mediastore put-cors-policy \
              --container-name ExampleContainer \
              --cors-policy file://corsPolicy.json

       This command produces no output.

       For  more  information,  see Adding a CORS Policy to a Container in the
       AWS Elemental MediaStore User Guide.

       Example 2: To edit a CORS policy

       The following put-cors-policy example updates the cross-origin resource
       sharing  (CORS) policy that is assigned to the specified container. The
       contents of the updated CORS policy are  in  the  file  named  corsPol-
       icy2.json.

       For  more  information,  see Editing a CORS Policy in the AWS Elemental
       MediaStore User Guide.

OUTPUT
       None



                                                             PUT-CORS-POLICY()
