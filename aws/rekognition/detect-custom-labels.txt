DETECT-CUSTOM-LABELS()                                  DETECT-CUSTOM-LABELS()



NAME
       detect-custom-labels -

DESCRIPTION
       NOTE:
          This operation applies only to Amazon Rekognition Custom Labels.

       Detects  custom  labels in a supplied image by using an Amazon Rekogni-
       tion Custom Labels model.

       You specify which version of a model version to use by using  the  Pro-
       jectVersionArn input parameter.

       You  pass  the input image as base64-encoded image bytes or as a refer-
       ence to an image in an Amazon S3 bucket. If you use the AWS CLI to call
       Amazon  Rekognition  operations,  passing image bytes is not supported.
       The image must be either a PNG or JPEG formatted file.

       For each object that the model version detects on an image, the API re-
       turns a (CustomLabel ) object in an array (CustomLabels ). Each Custom-
       Label object provides the label name (Name ), the level  of  confidence
       that  the  image contains the object (Confidence ), and object location
       information, if it exists, for the label on the image (Geometry ). Note
       that  for  the DetectCustomLabelsLabels operation, Polygons are not re-
       turned in the Geometry section of the response.

       To filter labels that are returned, specify a value for MinConfidence .
       DetectCustomLabelsLabels  only  returns labels with a confidence that's
       higher than the specified value. The value of MinConfidence maps to the
       assumed threshold values created during training. For more information,
       see Assumed threshold in the Amazon Rekognition Custom Labels Developer
       Guide.  Amazon  Rekognition  Custom Labels metrics expresses an assumed
       threshold as a floating point value between 0-1. The range of MinConfi-
       dence  normalizes  the  threshold  value to a percentage value (0-100).
       Confidence responses from DetectCustomLabels are  also  returned  as  a
       percentage.  You  can use MinConfidence to change the precision and re-
       call or your model. For more information, see Analyzing an image in the
       Amazon Rekognition Custom Labels Developer Guide.

       If you don't specify a value for MinConfidence , DetectCustomLabels re-
       turns labels based on the assumed threshold of each label.

       This is a stateless API operation. That is, the operation does not per-
       sist any data.

       This  operation requires permissions to perform the rekognition:Detect-
       CustomLabels action.

       For more information, see Analyzing an image in the Amazon  Rekognition
       Custom Labels Developer Guide.

       See also: AWS API Documentation

SYNOPSIS
            detect-custom-labels
          --project-version-arn <value>
          [--image <value>]
          [--max-results <value>]
          [--min-confidence <value>]
          [--image-bytes <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --project-version-arn (string)
          The ARN of the model version that you want to use. Only models asso-
          ciated with Custom Labels projects accepted by the operation.  If  a
          provided ARN refers to a model version associated with a project for
          a different feature type, then an InvalidParameterException  is  re-
          turned.

       --image (structure)
          Provides the input image either as bytes or an S3 object.

          You pass image bytes to an Amazon Rekognition API operation by using
          the Bytes property. For example, you would use the Bytes property to
          pass an image loaded from a local file system. Image bytes passed by
          using the Bytes property must be base64-encoded. Your code  may  not
          need  to encode image bytes if you are using an AWS SDK to call Ama-
          zon Rekognition API operations.

          For more information, see Analyzing an Image  Loaded  from  a  Local
          File System in the Amazon Rekognition Developer Guide.

          You  pass images stored in an S3 bucket to an Amazon Rekognition API
          operation by using the S3Object property. Images  stored  in  an  S3
          bucket do not need to be base64-encoded.

          The region for the S3 bucket containing the S3 object must match the
          region you use for Amazon Rekognition operations.

          If you use the AWS CLI to call Amazon Rekognition operations,  pass-
          ing  image bytes using the Bytes property is not supported. You must
          first upload the image to an Amazon S3 bucket and then call the  op-
          eration using the S3Object property.

          For  Amazon  Rekognition to process an S3 object, the user must have
          permission to access the S3 object. For more  information,  see  How
          Amazon  Rekognition  works with IAM in the Amazon Rekognition Devel-
          oper Guide.

          To specify a local file use --image-bytes instead.

          Bytes -> (blob)
              Blob of image bytes up to 5 MBs. Note  that  the  maximum  image
              size you can pass to DetectCustomLabels is 4MB.

          S3Object -> (structure)
              Identifies an S3 object as the image source.

              Bucket -> (string)
                 Name of the S3 bucket.

              Name -> (string)
                 S3 object key name.

              Version -> (string)
                 If  the bucket is versioning enabled, you can specify the ob-
                 ject version.

       Shorthand Syntax:

          Bytes=blob,S3Object={Bucket=string,Name=string,Version=string}

       JSON Syntax:

          {
            "Bytes": blob,
            "S3Object": {
              "Bucket": "string",
              "Name": "string",
              "Version": "string"
            }
          }

       --max-results (integer)
          Maximum number of results you want the service to return in the  re-
          sponse.  The  service returns the specified number of highest confi-
          dence labels ranked from highest confidence to lowest.

       --min-confidence (float)
          Specifies the minimum confidence level for the labels to return. De-
          tectCustomLabels  doesn't  return any labels with a confidence value
          that's lower than this specified value. If you specify a value of 0,
          DetectCustomLabels  returns  all  labels,  regardless of the assumed
          threshold applied to each label. If you don't specify  a  value  for
          MinConfidence  ,  DetectCustomLabels returns labels based on the as-
          sumed threshold of each label.

       --image-bytes (blob)
          The content of the image to be uploaded. To specify the content of a
          local file use the fileb:// prefix. Example: fileb://image.png

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       CustomLabels -> (list)
          An array of custom labels detected in the input image.

          (structure)
              A custom label detected in an image by a call to   DetectCustom-
              Labels .

              Name -> (string)
                 The name of the custom label.

              Confidence -> (float)
                 The  confidence  that  the  model has in the detection of the
                 custom label. The range is 0-100. A higher value indicates  a
                 higher confidence.

              Geometry -> (structure)
                 The  location of the detected object on the image that corre-
                 sponds to the custom label. Includes an axis  aligned  coarse
                 bounding box surrounding the object and a finer grain polygon
                 for more accurate spatial information.

                 BoundingBox -> (structure)
                     An axis-aligned coarse  representation  of  the  detected
                     item's location on the image.

                     Width -> (float)
                        Width  of  the  bounding box as a ratio of the overall
                        image width.

                     Height -> (float)
                        Height of the bounding box as a ratio of  the  overall
                        image height.

                     Left -> (float)
                        Left  coordinate  of  the  bounding  box as a ratio of
                        overall image width.

                     Top -> (float)
                        Top coordinate of the bounding box as a ratio of over-
                        all image height.

                 Polygon -> (list)
                     Within  the  bounding  box, a fine-grained polygon around
                     the detected item.

                     (structure)
                        The X and Y coordinates of a  point  on  an  image  or
                        video  frame.  The  X  and  Y values are ratios of the
                        overall image size or video resolution.  For  example,
                        if  an input image is 700x200 and the values are X=0.5
                        and Y=0.25, then the point is at  the  (350,50)  pixel
                        coordinate on the image.

                        An array of Point objects makes up a Polygon . A Poly-
                        gon is returned by  DetectText and by  DetectCustomLa-
                        bels  Polygon represents a fine-grained polygon around
                        a detected item. For more information, see Geometry in
                        the Amazon Rekognition Developer Guide.

                        X -> (float)
                            The  value  of  the  X coordinate for a point on a
                            Polygon .

                        Y -> (float)
                            The value of the Y coordinate for  a  point  on  a
                            Polygon .



                                                        DETECT-CUSTOM-LABELS()
