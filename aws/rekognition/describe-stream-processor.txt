DESCRIBE-STREAM-PROCESSOR()                        DESCRIBE-STREAM-PROCESSOR()



NAME
       describe-stream-processor -

DESCRIPTION
       Provides information about a stream processor created by  CreateStream-
       Processor . You can get information about the input and output streams,
       the  input parameters for the face recognition being performed, and the
       current status of the stream processor.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            describe-stream-processor
          --name <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --name (string)
          Name of the stream processor for which you want information.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To get information about a stream processor

       The following describe-stream-processor command displays details  about
       the specified stream processor.

          aws rekognition describe-stream-processor \
              --name my-stream-processor

       Output:

          {
              "Status": "STOPPED",
              "Name": "my-stream-processor",
              "LastUpdateTimestamp": 1532449292.712,
              "Settings": {
                  "FaceSearch": {
                      "FaceMatchThreshold": 80.0,
                      "CollectionId": "my-collection"
                  }
              },
              "RoleArn": "arn:aws:iam::123456789012:role/AmazonRekognitionDetectStream",
              "StreamProcessorArn": "arn:aws:rekognition:us-west-2:123456789012:streamprocessor/my-stream-processpr",
              "Output": {
                  "KinesisDataStream": {
                      "Arn": "arn:aws:kinesis:us-west-2:123456789012:stream/AmazonRekognitionRekStream"
                  }
              },
              "Input": {
                  "KinesisVideoStream": {
                      "Arn": "arn:aws:kinesisvideo:us-west-2:123456789012:stream/macwebcam/123456789012"
                  }
              },
              "CreationTimestamp": 1532449292.712
          }

       For  more  information, see Working with Streaming Videos in the Amazon
       Rekognition Developer Guide.

OUTPUT
       Name -> (string)
          Name of the stream processor.

       StreamProcessorArn -> (string)
          ARN of the stream processor.

       Status -> (string)
          Current status of the stream processor.

       StatusMessage -> (string)
          Detailed status message about the stream processor.

       CreationTimestamp -> (timestamp)
          Date and time the stream processor was created

       LastUpdateTimestamp -> (timestamp)
          The time, in Unix format, the stream processor was last updated. For
          example,  when  the stream processor moves from a running state to a
          failed state, or when the user starts or stops the stream processor.

       Input -> (structure)
          Kinesis video stream that provides the source streaming video.

          KinesisVideoStream -> (structure)
              The Kinesis video stream input stream for the  source  streaming
              video.

              Arn -> (string)
                 ARN  of  the  Kinesis  video  stream  stream that streams the
                 source video.

       Output -> (structure)
          Kinesis data stream to  which  Amazon  Rekognition  Video  puts  the
          analysis results.

          KinesisDataStream -> (structure)
              The  Amazon  Kinesis  Data  Streams  stream  to which the Amazon
              Rekognition stream processor streams the analysis results.

              Arn -> (string)
                 ARN of the output Amazon Kinesis Data Streams stream.

          S3Destination -> (structure)
              The Amazon S3 bucket location to which Amazon  Rekognition  pub-
              lishes the detailed inference results of a video analysis opera-
              tion.

              Bucket -> (string)
                 The name of the Amazon S3 bucket you want to  associate  with
                 the  streaming  video  project.  You must be the owner of the
                 Amazon S3 bucket.

              KeyPrefix -> (string)
                 The prefix value of the location within the bucket  that  you
                 want  the  information  to be published to. For more informa-
                 tion, see Using prefixes .

       RoleArn -> (string)
          ARN of the IAM role that allows access to the stream processor.

       Settings -> (structure)
          Input parameters used in a streaming video analyzed by a stream pro-
          cessor.  You  can  use  FaceSearch to recognize faces in a streaming
          video, or you can use ConnectedHome to detect labels.

          FaceSearch -> (structure)
              Face search settings to use on a streaming video.

              CollectionId -> (string)
                 The ID of a collection that contains faces that you  want  to
                 search for.

              FaceMatchThreshold -> (float)
                 Minimum  face  match confidence score that must be met to re-
                 turn a result for a recognized face. The default is 80. 0  is
                 the  lowest confidence. 100 is the highest confidence. Values
                 between 0 and 100 are accepted, and values lower than 80  are
                 set to 80.

          ConnectedHome -> (structure)
              Label  detection  settings to use on a streaming video. Defining
              the settings is required in the request  parameter  for   Creat-
              eStreamProcessor  .  Including this setting in the CreateStream-
              Processor request enables you to use the  stream  processor  for
              label  detection.  You  can then select what you want the stream
              processor to detect, such as people or  pets.  When  the  stream
              processor  has started, one notification is sent for each object
              class specified. For example, if packages and pets are selected,
              one  SNS  notification  is published the first time a package is
              detected and one SNS notification is published the first time  a
              pet is detected, as well as an end-of-session summary.

              Labels -> (list)
                 Specifies  what you want to detect in the video, such as peo-
                 ple, packages, or pets. The current valid labels you can  in-
                 clude  in  this  list  are:  "PERSON",  "PET", "PACKAGE", and
                 "ALL".

                 (string)

              MinConfidence -> (float)
                 The minimum confidence required to label  an  object  in  the
                 video.

       NotificationChannel -> (structure)
          The  Amazon Simple Notification Service topic to which Amazon Rekog-
          nition publishes the object detection results and completion  status
          of a video analysis operation.

          Amazon Rekognition publishes a notification the first time an object
          of interest or a person is detected in the video stream.  For  exam-
          ple,  if  Amazon  Rekognition detects a person at second 2, a pet at
          second 4, and a person again at second 5, Amazon Rekognition sends 2
          object  class  detected  notifications, one for a person at second 2
          and one for a pet at second 4.

          Amazon Rekognition also publishes an an end-of-session  notification
          with a summary when the stream processing session is complete.

          SNSTopicArn -> (string)
              The Amazon Resource Number (ARN) of the Amazon Amazon Simple No-
              tification Service topic to which Amazon Rekognition  posts  the
              completion status.

       KmsKeyId -> (string)
          The  identifier  for  your  AWS  Key Management Service key (AWS KMS
          key). This is an optional parameter for label detection stream  pro-
          cessors.

       RegionsOfInterest -> (list)
          Specifies  locations  in  the frames where Amazon Rekognition checks
          for objects or people. This is an optional parameter for  label  de-
          tection stream processors.

          (structure)
              Specifies  a  location  within the frame that Rekognition checks
              for objects of interest such as text, labels, or faces. It  uses
              a  BoundingBox  or  object  or  Polygon  to  set a region of the
              screen.

              A word, face, or label is included in the region if it  is  more
              than  half in that region. If there is more than one region, the
              word, face, or label is compared with all regions of the screen.
              Any  object  of  interest  that is more than half in a region is
              kept in the results.

              BoundingBox -> (structure)
                 The box representing a region of interest on screen.

                 Width -> (float)
                     Width of the bounding box as a ratio of the overall image
                     width.

                 Height -> (float)
                     Height  of the bounding box as a ratio of the overall im-
                     age height.

                 Left -> (float)
                     Left coordinate of the bounding box as a ratio of overall
                     image width.

                 Top -> (float)
                     Top  coordinate of the bounding box as a ratio of overall
                     image height.

              Polygon -> (list)
                 Specifies a shape made up of up to 10 Point objects to define
                 a region of interest.

                 (structure)
                     The  X  and Y coordinates of a point on an image or video
                     frame. The X and Y values are ratios of the overall image
                     size  or video resolution. For example, if an input image
                     is 700x200 and the values are X=0.5 and Y=0.25, then  the
                     point is at the (350,50) pixel coordinate on the image.

                     An  array of Point objects makes up a Polygon . A Polygon
                     is returned by   DetectText  and  by   DetectCustomLabels
                     Polygon  represents  a  fine-grained polygon around a de-
                     tected item. For more information, see  Geometry  in  the
                     Amazon Rekognition Developer Guide.

                     X -> (float)
                        The value of the X coordinate for a point on a Polygon
                        .

                     Y -> (float)
                        The value of the Y coordinate for a point on a Polygon
                        .

       DataSharingPreference -> (structure)
          Shows whether you are sharing data with Rekognition to improve model
          performance. You can choose this option at the account level or on a
          per-stream basis. Note that if you opt out at the account level this
          setting is ignored on individual streams.

          OptIn -> (boolean)
              If this option is set to true, you choose  to  share  data  with
              Rekognition to improve model performance.



                                                   DESCRIBE-STREAM-PROCESSOR()
