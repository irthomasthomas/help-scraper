CREATE-PROJECT-VERSION()                              CREATE-PROJECT-VERSION()



NAME
       create-project-version -

DESCRIPTION
       Creates  a new version of Amazon Rekognition project (like a Custom La-
       bels model or  a  custom  adapter)  and  begins  training.  Models  and
       adapters  are  managed  as  part of a Rekognition project. The response
       from CreateProjectVersion is an Amazon  Resource  Name  (ARN)  for  the
       project version.

       The  FeatureConfig  operation argument allows you to configure specific
       model or adapter settings. You can provide a description to the project
       version  by  using  the VersionDescription argment. Training can take a
       while to complete. You can get  the  current  status  by  calling   De-
       scribeProjectVersions . Training completed successfully if the value of
       the Status field is TRAINING_COMPLETED . Once training has successfully
       completed,  call   DescribeProjectVersions  to get the training results
       and evaluate the model.

       This operation requires permissions  to  perform  the  rekognition:Cre-
       ateProjectVersion action.

       NOTE:
              The  following  applies only to projects with Amazon Rekognition
              Custom Labels as the chosen feature:

          You can train a model in a  project  that  doesn't  have  associated
          datasets  by specifying manifest files in the TrainingData and Test-
          ingData fields.

          If you open the console after training a model with manifest  files,
          Amazon  Rekognition Custom Labels creates the datasets for you using
          the most recent manifest files. You can no longer train a model ver-
          sion for the project by specifying manifest files.

          Instead  of  training with a project without associated datasets, we
          recommend that you use the manifest files  to  create  training  and
          test datasets for the project.

       See also: AWS API Documentation

SYNOPSIS
            create-project-version
          --project-arn <value>
          --version-name <value>
          --output-config <value>
          [--training-data <value>]
          [--testing-data <value>]
          [--tags <value>]
          [--kms-key-id <value>]
          [--version-description <value>]
          [--feature-config <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --project-arn (string)
          The  ARN  of  the  Amazon  Rekognition  project that will manage the
          project version you want to train.

       --version-name (string)
          A name for the version of the project version. This  value  must  be
          unique.

       --output-config (structure)
          The  Amazon S3 bucket location to store the results of training. The
          bucket can be any S3 bucket in your AWS account. You need  s3:PutOb-
          ject permission on the bucket.

          S3Bucket -> (string)
              The S3 bucket where training output is placed.

          S3KeyPrefix -> (string)
              The prefix applied to the training output files.

       Shorthand Syntax:

          S3Bucket=string,S3KeyPrefix=string

       JSON Syntax:

          {
            "S3Bucket": "string",
            "S3KeyPrefix": "string"
          }

       --training-data (structure)
          Specifies  an  external manifest that the services uses to train the
          project version. If you specify TrainingData you must  also  specify
          TestingData . The project must not have any associated datasets.

          Assets -> (list)
              A  manifest file that contains references to the training images
              and ground-truth annotations.

              (structure)
                 Assets are the images that you use to train  and  evaluate  a
                 model version. Assets can also contain validation information
                 that you use to debug a failed model training.

                 GroundTruthManifest -> (structure)
                     The S3 bucket that contains an  Amazon  Sagemaker  Ground
                     Truth format manifest file.

                     S3Object -> (structure)
                        Provides the S3 bucket name and object name.

                        The  region for the S3 bucket containing the S3 object
                        must match the region you use for  Amazon  Rekognition
                        operations.

                        For  Amazon  Rekognition  to process an S3 object, the
                        user must have permission to access the S3 object. For
                        more  information,  see  How  Amazon Rekognition works
                        with IAM in the Amazon Rekognition Developer Guide.

                        Bucket -> (string)
                            Name of the S3 bucket.

                        Name -> (string)
                            S3 object key name.

                        Version -> (string)
                            If the bucket is versioning enabled, you can spec-
                            ify the object version.

       JSON Syntax:

          {
            "Assets": [
              {
                "GroundTruthManifest": {
                  "S3Object": {
                    "Bucket": "string",
                    "Name": "string",
                    "Version": "string"
                  }
                }
              }
              ...
            ]
          }

       --testing-data (structure)
          Specifies  an  external  manifest  that the service uses to test the
          project version. If you specify TestingData you  must  also  specify
          TrainingData . The project must not have any associated datasets.

          Assets -> (list)
              The assets used for testing.

              (structure)
                 Assets  are  the  images that you use to train and evaluate a
                 model version. Assets can also contain validation information
                 that you use to debug a failed model training.

                 GroundTruthManifest -> (structure)
                     The  S3  bucket  that contains an Amazon Sagemaker Ground
                     Truth format manifest file.

                     S3Object -> (structure)
                        Provides the S3 bucket name and object name.

                        The region for the S3 bucket containing the S3  object
                        must  match  the region you use for Amazon Rekognition
                        operations.

                        For Amazon Rekognition to process an  S3  object,  the
                        user must have permission to access the S3 object. For
                        more information, see  How  Amazon  Rekognition  works
                        with IAM in the Amazon Rekognition Developer Guide.

                        Bucket -> (string)
                            Name of the S3 bucket.

                        Name -> (string)
                            S3 object key name.

                        Version -> (string)
                            If the bucket is versioning enabled, you can spec-
                            ify the object version.

          AutoCreate -> (boolean)
              If specified, Rekognition splits training dataset  to  create  a
              test dataset for the training job.

       JSON Syntax:

          {
            "Assets": [
              {
                "GroundTruthManifest": {
                  "S3Object": {
                    "Bucket": "string",
                    "Name": "string",
                    "Version": "string"
                  }
                }
              }
              ...
            ],
            "AutoCreate": true|false
          }

       --tags (map)
          A  set  of  tags  (key-value  pairs)  that you want to attach to the
          project version.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --kms-key-id (string)
          The identifier for your AWS Key  Management  Service  key  (AWS  KMS
          key). You can supply the Amazon Resource Name (ARN) of your KMS key,
          the ID of your KMS key, an alias for your KMS key, or an alias  ARN.
          The  key  is used to encrypt training images, test images, and mani-
          fest files copied into the service for  the  project  version.  Your
          source images are unaffected. The key is also used to encrypt train-
          ing results and manifest files  written  to  the  output  Amazon  S3
          bucket (OutputConfig ).

          If  you  choose to use your own KMS key, you need the following per-
          missions on the KMS key.

          o kms:CreateGrant

          o kms:DescribeKey

          o kms:GenerateDataKey

          o kms:Decrypt

          If you don't specify a value for KmsKeyId , images copied  into  the
          service are encrypted using a key that AWS owns and manages.

       --version-description (string)
          A description applied to the project version being created.

       --feature-config (structure)
          Feature-specific  configuration of the training job. If the job con-
          figuration does not match  the  feature  type  associated  with  the
          project, an InvalidParameterException is returned.

          ContentModeration -> (structure)
              Configuration options for Custom Moderation training.

              ConfidenceThreshold -> (float)
                 The  confidence  level  you plan to use to identify if unsafe
                 content is present during inference.

       Shorthand Syntax:

          ContentModeration={ConfidenceThreshold=float}

       JSON Syntax:

          {
            "ContentModeration": {
              "ConfidenceThreshold": float
            }
          }

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       ProjectVersionArn -> (string)
          The  ARN  of  the model or the project version that was created. Use
          DescribeProjectVersion to get the current status of the training op-
          eration.



                                                      CREATE-PROJECT-VERSION()
