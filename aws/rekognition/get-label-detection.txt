GET-LABEL-DETECTION()                                    GET-LABEL-DETECTION()



NAME
       get-label-detection -

DESCRIPTION
       Gets the label detection results of a Amazon Rekognition Video analysis
       started by  StartLabelDetection .

       The label detection operation is started by a call to  StartLabelDetec-
       tion  which returns a job identifier (JobId ). When the label detection
       operation finishes, Amazon Rekognition publishes a completion status to
       the  Amazon Simple Notification Service topic registered in the initial
       call to StartlabelDetection .

       To get the results of the label detection operation, first  check  that
       the  status  value  published to the Amazon SNS topic is SUCCEEDED . If
       so, call  GetLabelDetection and pass the job identifier (JobId  )  from
       the initial call to StartLabelDetection .
          GetLabelDetection  returns  an  array  of  detected labels (Labels )
          sorted by the time the labels were detected. You can  also  sort  by
          the label name by specifying NAME for the SortBy input parameter. If
          there is no NAME specified, the default sort is by timestamp.

       You can select how results are aggregated by using the AggregateBy  in-
       put  parameter.  The default aggregation method is TIMESTAMPS . You can
       also aggregate by SEGMENTS , which aggregates all instances  of  labels
       detected in a given segment.

       The returned Labels array may include the following attributes:

       o Name - The name of the detected label.

       o Confidence  -  The level of confidence in the label assigned to a de-
         tected object.

       o Parents - The ancestor labels for a detected label. GetLabelDetection
         returns  a  hierarchical  taxonomy of detected labels. For example, a
         detected car might be assigned the label car. The label car  has  two
         parent labels: Vehicle (its parent) and Transportation (its grandpar-
         ent). The response includes the all ancestors for a label, where  ev-
         ery  ancestor  is a unique label. In the previous example, Car, Vehi-
         cle, and Transportation are returned as  unique  labels  in  the  re-
         sponse.

       o Aliases - Possible Aliases for the label.

       o Categories - The label categories that the detected label belongs to.

       o BoundingBox   Bounding  boxes  are described for all instances of de-
         tected common object labels, returned in an  array  of  Instance  ob-
         jects.  An  Instance object contains a BoundingBox object, describing
         the location of the label on the input image. It  also  includes  the
         confidence for the accuracy of the detected bounding box.

       o Timestamp  -  Time, in milliseconds from the start of the video, that
         the label was detected. For aggregation by SEGMENTS , the StartTimes-
         tampMillis  ,  EndTimestampMillis , and DurationMillis structures are
         what define a segment. Although the Timestamp structure is still  re-
         turned  with  each  label,  its value is set to be the same as Start-
         TimestampMillis .

       Timestamp and Bounding box information are returned  for  detected  In-
       stances,  only if aggregation is done by TIMESTAMPS . If aggregating by
       SEGMENTS , information about detected instances isnt returned.

       The version of the label model used for the detection is also returned.
          Note ``DominantColors`` isn't returned for ``Instances`` ,  although
          it is shown as part of the response in the sample seen below.

       Use  MaxResults  parameter  to  limit the number of labels returned. If
       there are more results than specified in  MaxResults  ,  the  value  of
       NextToken  in  the  operation  response contains a pagination token for
       getting the next set of results. To get the next page of results,  call
       GetlabelDetection and populate the NextToken request parameter with the
       token value returned from the previous call to GetLabelDetection .

       See also: AWS API Documentation

SYNOPSIS
            get-label-detection
          --job-id <value>
          [--max-results <value>]
          [--next-token <value>]
          [--sort-by <value>]
          [--aggregate-by <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --job-id (string)
          Job identifier for the label detection operation for which you  want
          results  returned. You get the job identifer from an initial call to
          StartlabelDetection .

       --max-results (integer)
          Maximum number of results to return per paginated call. The  largest
          value  you  can specify is 1000. If you specify a value greater than
          1000, a maximum of 1000 results is returned. The  default  value  is
          1000.

       --next-token (string)
          If  the previous response was incomplete (because there are more la-
          bels to retrieve), Amazon Rekognition Video returns a pagination to-
          ken  in  the response. You can use this pagination token to retrieve
          the next set of labels.

       --sort-by (string)
          Sort to use for elements in the Labels array. Use TIMESTAMP to  sort
          array  elements  by the time labels are detected. Use NAME to alpha-
          betically group elements for a label  together.  Within  each  label
          group, the array element are sorted by detection confidence. The de-
          fault sort is by TIMESTAMP .

          Possible values:

          o NAME

          o TIMESTAMP

       --aggregate-by (string)
          Defines how to aggregate the returned results. Results can be aggre-
          gated by timestamps or segments.

          Possible values:

          o TIMESTAMPS

          o SEGMENTS

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To get the results of an objects and scenes detection operation

       The  following  get-label-detection  command displays the results of an
       objects and scenes detection operation that you started  previously  by
       calling start-label-detection.

          aws rekognition get-label-detection  \
              --job-id 1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef

       Output:

          {
              "Labels": [
                  {
                      "Timestamp": 0,
                      "Label": {
                          "Instances": [],
                          "Confidence": 50.19071578979492,
                          "Parents": [
                              {
                                  "Name": "Person"
                              },
                              {
                                  "Name": "Crowd"
                              }
                          ],
                          "Name": "Audience"
                      }
                  },
                  {
                      "Timestamp": 0,
                      "Label": {
                          "Instances": [],
                          "Confidence": 55.74115753173828,
                          "Parents": [
                              {
                                  "Name": "Room"
                              },
                              {
                                  "Name": "Indoors"
                              },
                              {
                                  "Name": "School"
                              }
                          ],
                          "Name": "Classroom"
                      }
                  }
              ],
              "JobStatus": "SUCCEEDED",
              "LabelModelVersion": "2.0",
              "VideoMetadata": {
                  "Format": "QuickTime / MOV",
                  "FrameRate": 29.970617294311523,
                  "Codec": "h264",
                  "DurationMillis": 6806,
                  "FrameHeight": 1080,
                  "FrameWidth": 1920
              },
              "NextToken": "BMugzAi4L72IERzQdbpyMQuEFBsjlo5W0Yx3mfG+sR9mm98E1/CpObenspRfs/5FBQFs4X7G"
          }

       For  more  information,  see  Detecting Labels in a Video in the Amazon
       Rekognition Developer Guide.

OUTPUT
       JobStatus -> (string)
          The current status of the label detection job.

       StatusMessage -> (string)
          If the job fails, StatusMessage provides a  descriptive  error  mes-
          sage.

       VideoMetadata -> (structure)
          Information  about  a  video that Amazon Rekognition Video analyzed.
          Videometadata is returned in every page of paginated responses  from
          a Amazon Rekognition video operation.

          Codec -> (string)
              Type of compression used in the analyzed video.

          DurationMillis -> (long)
              Length of the video in milliseconds.

          Format -> (string)
              Format  of  the analyzed video. Possible values are MP4, MOV and
              AVI.

          FrameRate -> (float)
              Number of frames per second in the video.

          FrameHeight -> (long)
              Vertical pixel dimension of the video.

          FrameWidth -> (long)
              Horizontal pixel dimension of the video.

          ColorRange -> (string)
              A description of the range of luminance values in a  video,  ei-
              ther LIMITED (16 to 235) or FULL (0 to 255).

       NextToken -> (string)
          If  the response is truncated, Amazon Rekognition Video returns this
          token that you can use in the subsequent  request  to  retrieve  the
          next set of labels.

       Labels -> (list)
          An  array of labels detected in the video. Each element contains the
          detected label and the time, in milliseconds from the start  of  the
          video, that the label was detected.

          (structure)
              Information  about  a label detected in a video analysis request
              and the time the label was detected in the video.

              Timestamp -> (long)
                 Time, in milliseconds from the start of the video,  that  the
                 label  was detected. Note that Timestamp is not guaranteed to
                 be accurate to the individual frame where the label first ap-
                 pears.

              Label -> (structure)
                 Details about the detected label.

                 Name -> (string)
                     The name (label) of the object or scene.

                 Confidence -> (float)
                     Level of confidence.

                 Instances -> (list)
                     If  Label  represents  an  object, Instances contains the
                     bounding boxes for each instance of the detected  object.
                     Bounding boxes are returned for common object labels such
                     as people, cars, furniture, apparel or pets.

                     (structure)
                        An instance of a label returned by Amazon  Rekognition
                        Image  ( DetectLabels ) or by Amazon Rekognition Video
                        ( GetLabelDetection ).

                        BoundingBox -> (structure)
                            The position of the label instance on the image.

                            Width -> (float)
                               Width of the bounding box as  a  ratio  of  the
                               overall image width.

                            Height -> (float)
                               Height  of  the  bounding box as a ratio of the
                               overall image height.

                            Left -> (float)
                               Left coordinate of the bounding box as a  ratio
                               of overall image width.

                            Top -> (float)
                               Top  coordinate  of the bounding box as a ratio
                               of overall image height.

                        Confidence -> (float)
                            The confidence that Amazon Rekognition has in  the
                            accuracy of the bounding box.

                        DominantColors -> (list)
                            The  dominant  colors  found  in an individual in-
                            stance of a label.

                            (structure)
                               A description of the dominant colors in an  im-
                               age.

                               Red -> (integer)
                                   The Red RGB value for a dominant color.

                               Blue -> (integer)
                                   The Blue RGB value for a dominant color.

                               Green -> (integer)
                                   The Green RGB value for a dominant color.

                               HexCode -> (string)
                                   The  Hex  code equivalent of the RGB values
                                   for a dominant color.

                               CSSColor -> (string)
                                   The CSS color name of a dominant color.

                               SimplifiedColor -> (string)
                                   One of 12 simplified color names applied to
                                   a dominant color.

                               PixelPercent -> (float)
                                   The  percentage of image pixels that have a
                                   given dominant color.

                 Parents -> (list)
                     The parent labels for a label. The response includes  all
                     ancestor labels.

                     (structure)
                        A  parent label for a label. A label can have 0, 1, or
                        more parents.

                        Name -> (string)
                            The name of the parent label.

                 Aliases -> (list)
                     A list of potential aliases for a given label.

                     (structure)
                        A potential alias of for a given label.

                        Name -> (string)
                            The name of an alias for a given label.

                 Categories -> (list)
                     A list of the categories associated with a given label.

                     (structure)
                        The category that applies to a given label.

                        Name -> (string)
                            The name of a category that applies to a given la-
                            bel.

              StartTimestampMillis -> (long)
                 The  time  in milliseconds defining the start of the timeline
                 segment containing a continuously detected label.

              EndTimestampMillis -> (long)
                 The time in milliseconds defining the  end  of  the  timeline
                 segment containing a continuously detected label.

              DurationMillis -> (long)
                 The  time  duration  of  a segment in milliseconds, I.e. time
                 elapsed from StartTimestampMillis to EndTimestampMillis.

       LabelModelVersion -> (string)
          Version number of the label detection model that was used to  detect
          labels.



                                                         GET-LABEL-DETECTION()
