CREATE-STREAM-PROCESSOR()                            CREATE-STREAM-PROCESSOR()



NAME
       create-stream-processor -

DESCRIPTION
       Creates  an Amazon Rekognition stream processor that you can use to de-
       tect and recognize faces or to detect labels in a streaming video.

       Amazon Rekognition Video is a consumer of live video from Amazon  Kine-
       sis  Video Streams. There are two different settings for stream proces-
       sors in Amazon Rekognition: detecting faces and detecting labels.

       o If you are creating a stream processor for detecting faces, you  pro-
         vide  as  input  a  Kinesis  video stream (Input ) and a Kinesis data
         stream (Output ) stream. You also specify the face recognition crite-
         ria  in  Settings . For example, the collection containing faces that
         you want to recognize. After you have finished analyzing a  streaming
         video, use  StopStreamProcessor to stop processing.

       o If  you are creating a stream processor to detect labels, you provide
         as input a Kinesis video stream (Input ), Amazon S3  bucket  informa-
         tion  (Output  ), and an Amazon SNS topic ARN (NotificationChannel ).
         You can also provide a KMS key ID to encrypt the data  sent  to  your
         Amazon  S3  bucket. You specify what you want to detect in Connected-
         HomeSettings , such as people, packages and people, or pets,  people,
         and packages. You can also specify where in the frame you want Amazon
         Rekognition to monitor with RegionsOfInterest  .  When  you  run  the
         StartStreamProcessor operation on a label detection stream processor,
         you input start and stop information to determine the length  of  the
         processing time.

       Use Name to assign an identifier for the stream processor. You use Name
       to manage the stream processor. For example, you can  start  processing
       the source video by calling  StartStreamProcessor with the Name field.

       This  operation  requires permissions to perform the rekognition:Creat-
       eStreamProcessor action. If you want to tag your stream processor,  you
       also  require  permission to perform the rekognition:TagResource opera-
       tion.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-stream-processor
          --input <value>
          --name <value>
          --settings <value>
          --role-arn <value>
          [--tags <value>]
          [--notification-channel <value>]
          [--kms-key-id <value>]
          [--regions-of-interest <value>]
          [--data-sharing-preference <value>]
          --stream-processor-output <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --input (structure)
          Kinesis video stream  stream  that  provides  the  source  streaming
          video.  If  you are using the AWS CLI, the parameter name is Stream-
          ProcessorInput . This is required for both face search and label de-
          tection stream processors.

          KinesisVideoStream -> (structure)
              The  Kinesis  video stream input stream for the source streaming
              video.

              Arn -> (string)
                 ARN of the Kinesis  video  stream  stream  that  streams  the
                 source video.

       Shorthand Syntax:

          KinesisVideoStream={Arn=string}

       JSON Syntax:

          {
            "KinesisVideoStream": {
              "Arn": "string"
            }
          }

       --name (string)
          An  identifier  you assign to the stream processor. You can use Name
          to manage the stream processor. For example, you can get the current
          status of the stream processor by calling  DescribeStreamProcessor .
          Name is idempotent. This is required for both face search and  label
          detection stream processors.

       --settings (structure)
          Input parameters used in a streaming video analyzed by a stream pro-
          cessor. You can use FaceSearch to recognize  faces  in  a  streaming
          video, or you can use ConnectedHome to detect labels.

          FaceSearch -> (structure)
              Face search settings to use on a streaming video.

              CollectionId -> (string)
                 The  ID  of a collection that contains faces that you want to
                 search for.

              FaceMatchThreshold -> (float)
                 Minimum face match confidence score that must be met  to  re-
                 turn  a result for a recognized face. The default is 80. 0 is
                 the lowest confidence. 100 is the highest confidence.  Values
                 between  0 and 100 are accepted, and values lower than 80 are
                 set to 80.

          ConnectedHome -> (structure)
              Label detection settings to use on a streaming  video.  Defining
              the  settings  is  required in the request parameter for  Creat-
              eStreamProcessor . Including this setting in  the  CreateStream-
              Processor  request  enables  you to use the stream processor for
              label detection. You can then select what you  want  the  stream
              processor  to  detect,  such  as people or pets. When the stream
              processor has started, one notification is sent for each  object
              class specified. For example, if packages and pets are selected,
              one SNS notification is published the first time  a  package  is
              detected  and one SNS notification is published the first time a
              pet is detected, as well as an end-of-session summary.

              Labels -> (list)
                 Specifies what you want to detect in the video, such as  peo-
                 ple,  packages, or pets. The current valid labels you can in-
                 clude in this  list  are:  "PERSON",  "PET",  "PACKAGE",  and
                 "ALL".

                 (string)

              MinConfidence -> (float)
                 The  minimum  confidence  required  to label an object in the
                 video.

       Shorthand Syntax:

          FaceSearch={CollectionId=string,FaceMatchThreshold=float},ConnectedHome={Labels=[string,string],MinConfidence=float}

       JSON Syntax:

          {
            "FaceSearch": {
              "CollectionId": "string",
              "FaceMatchThreshold": float
            },
            "ConnectedHome": {
              "Labels": ["string", ...],
              "MinConfidence": float
            }
          }

       --role-arn (string)
          The Amazon Resource Number (ARN) of the IAM role that allows  access
          to the stream processor. The IAM role provides Rekognition read per-
          missions for a Kinesis stream. It also provides write permissions to
          an Amazon S3 bucket and Amazon Simple Notification Service topic for
          a label detection stream processor. This is required for  both  face
          search and label detection stream processors.

       --tags (map)
          A  set  of  tags  (key-value  pairs)  that you want to attach to the
          stream processor.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --notification-channel (structure)
          The Amazon Simple Notification Service topic to which Amazon  Rekog-
          nition  publishes the object detection results and completion status
          of a video analysis operation.

          Amazon Rekognition publishes a notification the first time an object
          of  interest  or a person is detected in the video stream. For exam-
          ple, if Amazon Rekognition detects a person at second 2,  a  pet  at
          second 4, and a person again at second 5, Amazon Rekognition sends 2
          object class detected notifications, one for a person  at  second  2
          and one for a pet at second 4.

          Amazon  Rekognition also publishes an an end-of-session notification
          with a summary when the stream processing session is complete.

          SNSTopicArn -> (string)
              The Amazon Resource Number (ARN) of the Amazon Amazon Simple No-
              tification  Service  topic to which Amazon Rekognition posts the
              completion status.

       Shorthand Syntax:

          SNSTopicArn=string

       JSON Syntax:

          {
            "SNSTopicArn": "string"
          }

       --kms-key-id (string)
          The identifier for your AWS Key  Management  Service  key  (AWS  KMS
          key).  This is an optional parameter for label detection stream pro-
          cessors and should not be used to create a face search  stream  pro-
          cessor.  You  can  supply the Amazon Resource Name (ARN) of your KMS
          key, the ID of your KMS key, an alias for your KMS key, or an  alias
          ARN.  The  key is used to encrypt results and data published to your
          Amazon S3 bucket, which includes image frames and hero images.  Your
          source images are unaffected.

       --regions-of-interest (list)
          Specifies  locations  in  the frames where Amazon Rekognition checks
          for objects or people. You can specify up to 10 regions of interest,
          and  each  region has either a polygon or a bounding box. This is an
          optional parameter for label detection stream processors and  should
          not be used to create a face search stream processor.

          (structure)
              Specifies  a  location  within the frame that Rekognition checks
              for objects of interest such as text, labels, or faces. It  uses
              a BoundingBox or Polygon to set a region of the screen.

              A  word,  face, or label is included in the region if it is more
              than half in that region. If there is more than one region,  the
              word, face, or label is compared with all regions of the screen.
              Any object of interest that is more than half  in  a  region  is
              kept in the results.

              BoundingBox -> (structure)
                 The box representing a region of interest on screen.

                 Width -> (float)
                     Width of the bounding box as a ratio of the overall image
                     width.

                 Height -> (float)
                     Height of the bounding box as a ratio of the overall  im-
                     age height.

                 Left -> (float)
                     Left coordinate of the bounding box as a ratio of overall
                     image width.

                 Top -> (float)
                     Top coordinate of the bounding box as a ratio of  overall
                     image height.

              Polygon -> (list)
                 Specifies a shape made up of up to 10 Point objects to define
                 a region of interest.

                 (structure)
                     The X and Y coordinates of a point on an image  or  video
                     frame. The X and Y values are ratios of the overall image
                     size or video resolution. For example, if an input  image
                     is  700x200 and the values are X=0.5 and Y=0.25, then the
                     point is at the (350,50) pixel coordinate on the image.

                     An array of Point objects makes up a Polygon . A  Polygon
                     is  returned  by   DetectText  and by  DetectCustomLabels
                     Polygon represents a fine-grained polygon  around  a  de-
                     tected  item.  For  more information, see Geometry in the
                     Amazon Rekognition Developer Guide.

                     X -> (float)
                        The value of the X coordinate for a point on a Polygon
                        .

                     Y -> (float)
                        The value of the Y coordinate for a point on a Polygon
                        .

       Shorthand Syntax:

          BoundingBox={Width=float,Height=float,Left=float,Top=float},Polygon=[{X=float,Y=float},{X=float,Y=float}] ...

       JSON Syntax:

          [
            {
              "BoundingBox": {
                "Width": float,
                "Height": float,
                "Left": float,
                "Top": float
              },
              "Polygon": [
                {
                  "X": float,
                  "Y": float
                }
                ...
              ]
            }
            ...
          ]

       --data-sharing-preference (structure)
          Shows whether you are sharing data with Rekognition to improve model
          performance. You can choose this option at the account level or on a
          per-stream basis. Note that if you opt out at the account level this
          setting is ignored on individual streams.

          OptIn -> (boolean)
              If  this  option  is  set to true, you choose to share data with
              Rekognition to improve model performance.

       Shorthand Syntax:

          OptIn=boolean

       JSON Syntax:

          {
            "OptIn": true|false
          }

       --stream-processor-output (structure)
          Kinesis data stream stream or Amazon S3  bucket  location  to  which
          Amazon Rekognition Video puts the analysis results. If you are using
          the AWS CLI, the parameter name is StreamProcessorOutput . This must
          be  a  S3Destination of an Amazon S3 bucket that you own for a label
          detection stream processor or a Kinesis data stream ARN for  a  face
          search stream processor.

          KinesisDataStream -> (structure)
              The  Amazon  Kinesis  Data  Streams  stream  to which the Amazon
              Rekognition stream processor streams the analysis results.

              Arn -> (string)
                 ARN of the output Amazon Kinesis Data Streams stream.

          S3Destination -> (structure)
              The Amazon S3 bucket location to which Amazon  Rekognition  pub-
              lishes the detailed inference results of a video analysis opera-
              tion.

              Bucket -> (string)
                 The name of the Amazon S3 bucket you want to  associate  with
                 the  streaming  video  project.  You must be the owner of the
                 Amazon S3 bucket.

              KeyPrefix -> (string)
                 The prefix value of the location within the bucket  that  you
                 want  the  information  to be published to. For more informa-
                 tion, see Using prefixes .

       Shorthand Syntax:

          KinesisDataStream={Arn=string},S3Destination={Bucket=string,KeyPrefix=string}

       JSON Syntax:

          {
            "KinesisDataStream": {
              "Arn": "string"
            },
            "S3Destination": {
              "Bucket": "string",
              "KeyPrefix": "string"
            }
          }

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a new stream processor

       The following create-stream-processor example creates a new stream pro-
       cessor with the specified configuration.

          aws rekognition create-stream-processor --name my-stream-processor\
              --input '{"KinesisVideoStream":{"Arn":"arn:aws:kinesisvideo:us-west-2:123456789012:stream/macwebcam/1530559711205"}}'\
              --stream-processor-output '{"KinesisDataStream":{"Arn":"arn:aws:kinesis:us-west-2:123456789012:stream/AmazonRekognitionRekStream"}}'\
              --role-arn arn:aws:iam::123456789012:role/AmazonRekognitionDetect\
              --settings '{"FaceSearch":{"CollectionId":"MyCollection","FaceMatchThreshold":85.5}}'

       Output:

          {
              "StreamProcessorArn": "arn:aws:rekognition:us-west-2:123456789012:streamprocessor/my-stream-processor"
          }

       For  more  information, see Working with Streaming Videos in the Amazon
       Rekognition Developer Guide.

OUTPUT
       StreamProcessorArn -> (string)
          Amazon Resource Number for the newly created stream processor.



                                                     CREATE-STREAM-PROCESSOR()
