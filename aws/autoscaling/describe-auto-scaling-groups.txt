DESCRIBE-AUTO-SCALING-GROUPS()                  DESCRIBE-AUTO-SCALING-GROUPS()



NAME
       describe-auto-scaling-groups -

DESCRIPTION
       Gets  information  about the Auto Scaling groups in the account and Re-
       gion.

       If you specify Auto Scaling group names, the output  includes  informa-
       tion  for  only  the specified Auto Scaling groups. If you specify fil-
       ters, the output includes  information  for  only  those  Auto  Scaling
       groups that meet the filter criteria. If you do not specify group names
       or filters, the  output  includes  information  for  all  Auto  Scaling
       groups.

       This operation also returns information about instances in Auto Scaling
       groups. To retrieve information about the instances in a warm pool, you
       must call the DescribeWarmPool API.

       See also: AWS API Documentation

       describe-auto-scaling-groups  is  a  paginated  operation. Multiple API
       calls may be issued in order to retrieve the entire  data  set  of  re-
       sults.  You can disable pagination by providing the --no-paginate argu-
       ment.  When using --output text and the --query argument on a paginated
       response,  the  --query  argument must extract data from the results of
       the following query expressions: AutoScalingGroups

SYNOPSIS
            describe-auto-scaling-groups
          [--auto-scaling-group-names <value>]
          [--filters <value>]
          [--cli-input-json <value>]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --auto-scaling-group-names (list)
          The names of the Auto Scaling groups. By default, you can only spec-
          ify up to 50 names. You can optionally increase this limit using the
          MaxRecords property.

          If you omit this property, all Auto Scaling groups are described.

          (string)

       Syntax:

          "string" "string" ...

       --filters (list)
          One or more filters to limit the results based on specific tags.

          (structure)
              Describes a filter that is used to return a more  specific  list
              of results from a describe operation.

              If  you  specify multiple filters, the filters are automatically
              logically joined with an AND , and the request returns only  the
              results that match all of the specified filters.

              For  more information, see Tag Auto Scaling groups and instances
              in the Amazon EC2 Auto Scaling User Guide .

              Name -> (string)
                 The name of the filter.

                 The valid values for  Name  depend  on  which  API  operation
                 you're  using  with  the filter (DescribeAutoScalingGroups or
                 DescribeTags ).
                     DescribeAutoScalingGroups

                 Valid values for Name include the following:

                 o tag-key - Accepts tag keys. The results only include infor-
                   mation  about the Auto Scaling groups associated with these
                   tag keys.

                 o tag-value - Accepts tag values. The  results  only  include
                   information  about  the Auto Scaling groups associated with
                   these tag values.

                 o tag:<key> - Accepts the key/value combination of  the  tag.
                   Use the tag key in the filter name and the tag value as the
                   filter value. The results only  include  information  about
                   the  Auto  Scaling  groups  associated  with  the specified
                   key/value combination.
                     DescribeTags

                 Valid values for Name include the following:

                 o auto-scaling-group - Accepts  the  names  of  Auto  Scaling
                   groups. The results only include information about the tags
                   associated with these Auto Scaling groups.

                 o key - Accepts tag keys. The results only  include  informa-
                   tion about the tags associated with these tag keys.

                 o value - Accepts tag values. The results only include infor-
                   mation about the tags associated with these tag values.

                 o propagate-at-launch - Accepts a Boolean value, which speci-
                   fies whether tags propagate to instances at launch. The re-
                   sults only include information about  the  tags  associated
                   with the specified Boolean value.

              Values -> (list)
                 One or more filter values. Filter values are case-sensitive.

                 If  you  specify multiple values for a filter, the values are
                 automatically logically joined with an OR , and  the  request
                 returns  all  results that match any of the specified values.
                 For example, specify "tag:environment" for  the  filter  name
                 and  "production,development"  for  the filter values to find
                 Auto Scaling groups with the tag "environment=production"  or
                 "environment=development".

                 (string)

       Shorthand Syntax:

          Name=string,Values=string,string ...

       JSON Syntax:

          [
            {
              "Name": "string",
              "Values": ["string", ...]
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --starting-token (string)
          A token to specify where to start paginating. This is the  NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The size of each page to get in the AWS service call. This does  not
          affect the number of items returned in the command's output. Setting
          a smaller page size results in more calls to the  AWS  service,  re-
          trieving  fewer  items  in  each call. This can help prevent the AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The  total number of items to return in the command's output. If the
          total number of items available is more than the value specified,  a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent  command. Do not use the NextToken response element directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       Example 1: To describe the specified Auto Scaling group

       This example describes the specified Auto Scaling group.

          aws autoscaling describe-auto-scaling-groups \
              --auto-scaling-group-name my-asg

       Output:

          {
              "AutoScalingGroups": [
                  {
                      "AutoScalingGroupName": "my-asg",
                      "AutoScalingGroupARN": "arn:aws:autoscaling:us-west-2:123456789012:autoScalingGroup:930d940e-891e-4781-a11a-7b0acd480f03:autoScalingGroupName/my-asg",
                      "LaunchTemplate": {
                          "LaunchTemplateName": "my-launch-template",
                          "Version": "1",
                          "LaunchTemplateId": "lt-1234567890abcde12"
                      },
                      "MinSize": 0,
                      "MaxSize": 1,
                      "DesiredCapacity": 1,
                      "DefaultCooldown": 300,
                      "AvailabilityZones": [
                          "us-west-2a",
                          "us-west-2b",
                          "us-west-2c"
                      ],
                      "LoadBalancerNames": [],
                      "TargetGroupARNs": [],
                      "HealthCheckType": "EC2",
                      "HealthCheckGracePeriod": 0,
                      "Instances": [
                          {
                              "InstanceId": "i-06905f55584de02da",
                              "InstanceType": "t2.micro",
                              "AvailabilityZone": "us-west-2a",
                              "HealthStatus": "Healthy",
                              "LifecycleState": "InService",
                              "ProtectedFromScaleIn": false,
                              "LaunchTemplate": {
                                  "LaunchTemplateName": "my-launch-template",
                                  "Version": "1",
                                  "LaunchTemplateId": "lt-1234567890abcde12"
                              }
                          }
                      ],
                      "CreatedTime": "2023-10-28T02:39:22.152Z",
                      "SuspendedProcesses": [],
                      "VPCZoneIdentifier": "subnet-5ea0c127,subnet-6194ea3b,subnet-c934b782",
                      "EnabledMetrics": [],
                      "Tags": [],
                      "TerminationPolicies": [
                          "Default"
                      ],
                      "NewInstancesProtectedFromScaleIn": false,
                      "ServiceLinkedRoleARN":"arn",
                      "TrafficSources": []
                  }
              ]
          }

       Example 2: To describe the first 100 specified Auto Scaling group

       This example describes the specified Auto Scaling groups. It allows you
       to specify up to 100 group names.

          aws autoscaling describe-auto-scaling-groups \
              --max-items 100 \
              --auto-scaling-group-name "group1" "group2" "group3" "group4"

       See example 1 for sample output.

       Example 3: To describe an Auto Scaling group in the specified region

       This example describes the Auto Scaling groups in the specified region,
       up to a maximum of 75 groups.

          aws autoscaling describe-auto-scaling-groups \
              --max-items 75 \
              --region us-east-1

       See example 1 for sample output.

       Example 4: To describe the specified number of Auto Scaling group

       To return a specific number of Auto Scaling groups, use the --max-items
       option.

          aws autoscaling describe-auto-scaling-groups \
              --max-items 1

       See example 1 for sample output.

       If the output includes a NextToken field, there are more groups. To get
       the  additional  groups,  use the value of this field with the --start-
       ing-token option in a subsequent call as follows.

          aws autoscaling describe-auto-scaling-groups \
              --starting-token Z3M3LMPEXAMPLE

       See example 1 for sample output.

       Example 5: To describe Auto Scaling groups that use  launch  configura-
       tions

       This  example  uses  the --query option to describe Auto Scaling groups
       that use launch configurations.

          aws autoscaling describe-auto-scaling-groups \
              --query 'AutoScalingGroups[?LaunchConfigurationName!=`null`]'

       Output:

          [
              {
                  "AutoScalingGroupName": "my-asg",
                  "AutoScalingGroupARN": "arn:aws:autoscaling:us-west-2:123456789012:autoScalingGroup:930d940e-891e-4781-a11a-7b0acd480f03:autoScalingGroupName/my-asg",
                  "LaunchConfigurationName": "my-lc",
                  "MinSize": 0,
                  "MaxSize": 1,
                  "DesiredCapacity": 1,
                  "DefaultCooldown": 300,
                  "AvailabilityZones": [
                      "us-west-2a",
                      "us-west-2b",
                      "us-west-2c"
                  ],
                  "LoadBalancerNames": [],
                  "TargetGroupARNs": [],
                  "HealthCheckType": "EC2",
                  "HealthCheckGracePeriod": 0,
                  "Instances": [
                      {
                          "InstanceId": "i-088c57934a6449037",
                          "InstanceType": "t2.micro",
                          "AvailabilityZone": "us-west-2c",
                          "HealthStatus": "Healthy",
                          "LifecycleState": "InService",
                          "LaunchConfigurationName": "my-lc",
                          "ProtectedFromScaleIn": false
                      }
                  ],
                  "CreatedTime": "2023-10-28T02:39:22.152Z",
                  "SuspendedProcesses": [],
                  "VPCZoneIdentifier": "subnet-5ea0c127,subnet-6194ea3b,subnet-c934b782",
                  "EnabledMetrics": [],
                  "Tags": [],
                  "TerminationPolicies": [
                      "Default"
                  ],
                  "NewInstancesProtectedFromScaleIn": false,
                  "ServiceLinkedRoleARN":"arn",
                  "TrafficSources": []
              }
          ]

       For more information, see Filter AWS CLI output in the AWS Command Line
       Interface User Guide.

OUTPUT
       AutoScalingGroups -> (list)
          The groups.

          (structure)
              Describes an Auto Scaling group.

              AutoScalingGroupName -> (string)
                 The name of the Auto Scaling group.

              AutoScalingGroupARN -> (string)
                 The Amazon Resource Name (ARN) of the Auto Scaling group.

              LaunchConfigurationName -> (string)
                 The name of the associated launch configuration.

              LaunchTemplate -> (structure)
                 The launch template for the group.

                 LaunchTemplateId -> (string)
                     The  ID  of  the launch template. To get the template ID,
                     use the Amazon EC2 DescribeLaunchTemplates API operation.
                     New  launch templates can be created using the Amazon EC2
                     CreateLaunchTemplate API.

                     Conditional: You must specify either  a  LaunchTemplateId
                     or a LaunchTemplateName .

                 LaunchTemplateName -> (string)
                     The  name  of  the  launch  template. To get the template
                     name, use the Amazon EC2 DescribeLaunchTemplates API  op-
                     eration.  New  launch  templates can be created using the
                     Amazon EC2 CreateLaunchTemplate API.

                     Conditional: You must specify either  a  LaunchTemplateId
                     or a LaunchTemplateName .

                 Version -> (string)
                     The  version  number,  $Latest , or $Default . To get the
                     version     number,     use      the      Amazon      EC2
                     DescribeLaunchTemplateVersions  API operation. New launch
                     template versions can be created  using  the  Amazon  EC2
                     CreateLaunchTemplateVersion  API. If the value is $Latest
                     , Amazon EC2 Auto Scaling selects the latest  version  of
                     the  launch  template  when  launching  instances. If the
                     value is $Default , Amazon EC2 Auto Scaling  selects  the
                     default version of the launch template when launching in-
                     stances. The default value is $Default .

              MixedInstancesPolicy -> (structure)
                 The mixed instances policy for the group.

                 LaunchTemplate -> (structure)
                     One or more  launch  templates  and  the  instance  types
                     (overrides) that are used to launch EC2 instances to ful-
                     fill On-Demand and Spot capacities.

                     LaunchTemplateSpecification -> (structure)
                        The launch template.

                        LaunchTemplateId -> (string)
                            The ID of the launch template. To get the template
                            ID, use the Amazon EC2 DescribeLaunchTemplates API
                            operation. New launch templates can be created us-
                            ing the Amazon EC2 CreateLaunchTemplate API.

                            Conditional:  You must specify either a LaunchTem-
                            plateId or a LaunchTemplateName .

                        LaunchTemplateName -> (string)
                            The name of the launch template. To get  the  tem-
                            plate     name,     use     the     Amazon     EC2
                            DescribeLaunchTemplates API operation. New  launch
                            templates  can  be  created  using  the Amazon EC2
                            CreateLaunchTemplate API.

                            Conditional: You must specify either a  LaunchTem-
                            plateId or a LaunchTemplateName .

                        Version -> (string)
                            The version number, $Latest , or $Default . To get
                            the   version   number,   use   the   Amazon   EC2
                            DescribeLaunchTemplateVersions  API operation. New
                            launch template versions can be created using  the
                            Amazon EC2 CreateLaunchTemplateVersion API. If the
                            value is $Latest , Amazon EC2 Auto Scaling selects
                            the  latest  version  of  the launch template when
                            launching instances. If the value  is  $Default  ,
                            Amazon  EC2  Auto Scaling selects the default ver-
                            sion of the launch  template  when  launching  in-
                            stances. The default value is $Default .

                     Overrides -> (list)
                        Any  properties  that  you  specify  override the same
                        properties in the launch template.

                        (structure)
                            Use this structure to let Amazon EC2 Auto  Scaling
                            do the following when the Auto Scaling group has a
                            mixed instances policy:

                            o Override the instance type that is specified  in
                              the launch template.

                            o Use multiple instance types.

                            Specify  the  instance types that you want, or de-
                            fine your instance requirements  instead  and  let
                            Amazon  EC2  Auto  Scaling provision the available
                            instance types that meet your  requirements.  This
                            can  provide Amazon EC2 Auto Scaling with a larger
                            selection of instance types to  choose  from  when
                            fulfilling  Spot and On-Demand capacities. You can
                            view which instance types are matched  before  you
                            apply the instance requirements to your Auto Scal-
                            ing group.

                            After you define your instance  requirements,  you
                            don't  have to keep updating these settings to get
                            new EC2 instance types automatically.  Amazon  EC2
                            Auto Scaling uses the instance requirements of the
                            Auto Scaling group to determine whether a new  EC2
                            instance type can be used.

                            InstanceType -> (string)
                               The instance type, such as m3.xlarge . You must
                               specify an instance type that is  supported  in
                               your  requested  Region and Availability Zones.
                               For more information, see Instance types in the
                               Amazon EC2 User Guide for Linux Instances .

                               You  can  specify  up  to 40 instance types per
                               Auto Scaling group.

                            WeightedCapacity -> (string)
                               If you provide a list of instance types to use,
                               you  can  specify  the number of capacity units
                               provided by each instance type in terms of vir-
                               tual  CPUs,  memory,  storage,  throughput,  or
                               other relative performance characteristic. When
                               a  Spot  or On-Demand Instance is launched, the
                               capacity units count toward the desired  capac-
                               ity. Amazon EC2 Auto Scaling launches instances
                               until the  desired  capacity  is  totally  ful-
                               filled, even if this results in an overage. For
                               example, if there are two  units  remaining  to
                               fulfill  capacity,  and Amazon EC2 Auto Scaling
                               can only launch an instance with a  WeightedCa-
                               pacity of five units, the instance is launched,
                               and the desired capacity is exceeded  by  three
                               units.  For  more information, see Configure an
                               Auto Scaling group to use instance  weights  in
                               the  Amazon EC2 Auto Scaling User Guide . Value
                               must be in the range of 1999.

                               If you specify a value for WeightedCapacity for
                               one instance type, you must specify a value for
                               WeightedCapacity for all of them.

                               WARNING:
                                   Every Auto Scaling group has three size pa-
                                   rameters  (DesiredCapacity  , MaxSize , and
                                   MinSize ). Usually,  you  set  these  sizes
                                   based  on  a  specific number of instances.
                                   However, if you configure a mixed instances
                                   policy  that  defines  weights  for the in-
                                   stance types, you must specify these  sizes
                                   with  the  same  units  that  you  use  for
                                   weighting instances.

                            LaunchTemplateSpecification -> (structure)
                               Provides a launch template  for  the  specified
                               instance  type or set of instance requirements.
                               For example, some instance types might  require
                               a  launch template with a different AMI. If not
                               provided, Amazon  EC2  Auto  Scaling  uses  the
                               launch   template   that's   specified  in  the
                               LaunchTemplate definition.  For  more  informa-
                               tion,  see  Specifying  a different launch tem-
                               plate for an instance type in  the  Amazon  EC2
                               Auto Scaling User Guide .

                               You  can  specify up to 20 launch templates per
                               Auto Scaling group. The launch templates speci-
                               fied in the overrides and in the LaunchTemplate
                               definition count towards this limit.

                               LaunchTemplateId -> (string)
                                   The ID of the launch template. To  get  the
                                   template    ID,    use   the   Amazon   EC2
                                   DescribeLaunchTemplates API operation.  New
                                   launch  templates  can be created using the
                                   Amazon EC2 CreateLaunchTemplate API.

                                   Conditional:  You  must  specify  either  a
                                   LaunchTemplateId or a LaunchTemplateName .

                               LaunchTemplateName -> (string)
                                   The name of the launch template. To get the
                                   template   name,   use   the   Amazon   EC2
                                   DescribeLaunchTemplates  API operation. New
                                   launch templates can be created  using  the
                                   Amazon EC2 CreateLaunchTemplate API.

                                   Conditional:  You  must  specify  either  a
                                   LaunchTemplateId or a LaunchTemplateName .

                               Version -> (string)
                                   The version number, $Latest , or $Default .
                                   To  get  the version number, use the Amazon
                                   EC2 DescribeLaunchTemplateVersions API  op-
                                   eration.  New  launch template versions can
                                   be   created   using   the    Amazon    EC2
                                   CreateLaunchTemplateVersion   API.  If  the
                                   value is $Latest , Amazon EC2 Auto  Scaling
                                   selects  the  latest  version of the launch
                                   template when launching instances.  If  the
                                   value is $Default , Amazon EC2 Auto Scaling
                                   selects the default version of  the  launch
                                   template  when launching instances. The de-
                                   fault value is $Default .

                            InstanceRequirements -> (structure)
                               The  instance  requirements.  Amazon  EC2  Auto
                               Scaling  uses  your  specified  requirements to
                               identify instance types.  Then,  it  uses  your
                               On-Demand  and  Spot  allocation  strategies to
                               launch instances from these instance types.

                               You can specify up to four separate sets of in-
                               stance  requirements  per  Auto  Scaling group.
                               This is useful for provisioning instances  from
                               different  Amazon  Machine Images (AMIs) in the
                               same Auto Scaling group. To do this, create the
                               AMIs  and create a new launch template for each
                               AMI. Then, create a compatible set of  instance
                               requirements for each launch template.

                               NOTE:
                                   If  you  specify InstanceRequirements , you
                                   can't specify InstanceType .

                               VCpuCount -> (structure)
                                   The minimum and maximum number of vCPUs for
                                   an instance type.

                                   Min -> (integer)
                                      The minimum number of vCPUs.

                                   Max -> (integer)
                                      The maximum number of vCPUs.

                               MemoryMiB -> (structure)
                                   The  minimum  and  maximum  instance memory
                                   size for an instance type, in MiB.

                                   Min -> (integer)
                                      The memory minimum in MiB.

                                   Max -> (integer)
                                      The memory maximum in MiB.

                               CpuManufacturers -> (list)
                                   Lists which specific CPU  manufacturers  to
                                   include.

                                   o For instance types with Intel CPUs, spec-
                                     ify intel .

                                   o For instance types with AMD CPUs, specify
                                     amd .

                                   o For  instance  types with Amazon Web Ser-
                                     vices CPUs, specify amazon-web-services .

                                   NOTE:
                                      Don't confuse the CPU hardware  manufac-
                                      turer  with  the  CPU hardware architec-
                                      ture. Instances will be launched with  a
                                      compatible CPU architecture based on the
                                      Amazon  Machine  Image  (AMI)  that  you
                                      specify in your launch template.

                                   Default: Any manufacturer

                                   (string)

                               MemoryGiBPerVCpu -> (structure)
                                   The  minimum  and  maximum amount of memory
                                   per vCPU for an instance type, in GiB.

                                   Default: No minimum or maximum limits

                                   Min -> (double)
                                      The memory minimum in GiB.

                                   Max -> (double)
                                      The memory maximum in GiB.

                               ExcludedInstanceTypes -> (list)
                                   The instance types to exclude. You can  use
                                   strings with one or more wild cards, repre-
                                   sented by an asterisk (* ), to  exclude  an
                                   instance family, type, size, or generation.
                                   The following are  examples:  m5.8xlarge  ,
                                   c5*.* , m5a.* , r* , *3* .

                                   For  example,  if you specify c5* , you are
                                   excluding the entire  C5  instance  family,
                                   which  includes  all  C5a  and C5n instance
                                   types. If you specify m5a.*  ,  Amazon  EC2
                                   Auto  Scaling  will exclude all the M5a in-
                                   stance types,  but  not  the  M5n  instance
                                   types.

                                   NOTE:
                                      If  you  specify ExcludedInstanceTypes ,
                                      you can't specify AllowedInstanceTypes .

                                   Default: No excluded instance types

                                   (string)

                               InstanceGenerations -> (list)
                                   Indicates whether current or previous  gen-
                                   eration instance types are included.

                                   o For  current  generation  instance types,
                                     specify current . The current  generation
                                     includes  EC2  instance  types  currently
                                     recommended for use. This  typically  in-
                                     cludes  the  latest  two to three genera-
                                     tions in each instance family.  For  more
                                     information,  see  Instance  types in the
                                     Amazon EC2 User Guide for Linux Instances
                                     .

                                   o For  previous  generation instance types,
                                     specify previous .

                                   Default: Any current or previous generation

                                   (string)

                               SpotMaxPricePercentageOverLowestPrice -> (inte-
                               ger)
                                   [Price  protection]  The  price  protection
                                   threshold for Spot Instances, as a percent-
                                   age  higher  than an identified Spot price.
                                   The identified Spot price is the  price  of
                                   the  lowest priced current generation C, M,
                                   or R instance type with your specified  at-
                                   tributes. If no current generation C, M, or
                                   R instance type  matches  your  attributes,
                                   then  the  identified  price is from either
                                   the lowest priced  current  generation  in-
                                   stance  types  or, failing that, the lowest
                                   priced previous generation  instance  types
                                   that match your attributes. When Amazon EC2
                                   Auto Scaling selects  instance  types  with
                                   your  attributes,  we will exclude instance
                                   types whose price  exceeds  your  specified
                                   threshold.

                                   The  parameter  accepts  an  integer, which
                                   Amazon EC2 Auto  Scaling  interprets  as  a
                                   percentage.

                                   If  you  set DesiredCapacityType to vcpu or
                                   memory-mib , the price protection threshold
                                   is  based  on  the  per-vCPU  or per-memory
                                   price instead of the per instance price.

                                   NOTE:
                                      Only one of  SpotMaxPricePercentageOver-
                                      LowestPrice or MaxSpotPriceAsPercentage-
                                      OfOptimalOnDemandPrice can be specified.
                                      If  you don't specify either, Amazon EC2
                                      Auto Scaling  will  automatically  apply
                                      optimal price protection to consistently
                                      select from a  wide  range  of  instance
                                      types.  To  indicate no price protection
                                      threshold for  Spot  Instances,  meaning
                                      you  want to consider all instance types
                                      that match your attributes, include  one
                                      of  these  parameters and specify a high
                                      value, such as 999999 .

                               MaxSpotPriceAsPercentageOfOptimalOnDemandPrice
                               -> (integer)
                                   [Price  protection]  The  price  protection
                                   threshold for Spot Instances, as a percent-
                                   age  of  an identified On-Demand price. The
                                   identified On-Demand price is the price  of
                                   the  lowest priced current generation C, M,
                                   or R instance type with your specified  at-
                                   tributes. If no current generation C, M, or
                                   R instance type  matches  your  attributes,
                                   then  the  identified  price is from either
                                   the lowest priced  current  generation  in-
                                   stance  types  or, failing that, the lowest
                                   priced previous generation  instance  types
                                   that match your attributes. When Amazon EC2
                                   Auto Scaling selects  instance  types  with
                                   your  attributes,  we will exclude instance
                                   types whose price  exceeds  your  specified
                                   threshold.

                                   The  parameter  accepts  an  integer, which
                                   Amazon EC2 Auto  Scaling  interprets  as  a
                                   percentage.

                                   If  you  set DesiredCapacityType to vcpu or
                                   memory-mib , the price protection threshold
                                   is  based  on  the  per-vCPU  or per-memory
                                   price instead of the per instance price.

                                   NOTE:
                                      Only one of  SpotMaxPricePercentageOver-
                                      LowestPrice or MaxSpotPriceAsPercentage-
                                      OfOptimalOnDemandPrice can be specified.
                                      If  you don't specify either, Amazon EC2
                                      Auto Scaling  will  automatically  apply
                                      optimal price protection to consistently
                                      select from a  wide  range  of  instance
                                      types.  To  indicate no price protection
                                      threshold for  Spot  Instances,  meaning
                                      you  want to consider all instance types
                                      that match your attributes, include  one
                                      of  these  parameters and specify a high
                                      value, such as 999999 .

                               OnDemandMaxPricePercentageOverLowestPrice    ->
                               (integer)
                                   [Price  protection]  The  price  protection
                                   threshold for  On-Demand  Instances,  as  a
                                   percentage higher than an identified On-De-
                                   mand price. The identified On-Demand  price
                                   is  the  price of the lowest priced current
                                   generation C, M, or R  instance  type  with
                                   your  specified  attributes.  If no current
                                   generation C, M, or R instance type matches
                                   your  attributes, then the identified price
                                   is from either the  lowest  priced  current
                                   generation instance types or, failing that,
                                   the lowest priced previous  generation  in-
                                   stance  types  that  match your attributes.
                                   When Amazon EC2 Auto  Scaling  selects  in-
                                   stance  types with your attributes, we will
                                   exclude instance types whose price  exceeds
                                   your specified threshold.

                                   The  parameter  accepts  an  integer, which
                                   Amazon EC2 Auto  Scaling  interprets  as  a
                                   percentage.

                                   To  turn  off  price  protection, specify a
                                   high value, such as 999999 .

                                   If you set DesiredCapacityType to  vcpu  or
                                   memory-mib , the price protection threshold
                                   is  applied  based  on  the   per-vCPU   or
                                   per-memory  price  instead  of  the per in-
                                   stance price.

                                   Default: 20

                               BareMetal -> (string)
                                   Indicates whether bare metal instance types
                                   are included, excluded, or required.

                                   Default: excluded

                               BurstablePerformance -> (string)
                                   Indicates whether burstable performance in-
                                   stance types are included, excluded, or re-
                                   quired. For more information, see Burstable
                                   performance instances  in  the  Amazon  EC2
                                   User Guide for Linux Instances .

                                   Default: excluded

                               RequireHibernateSupport -> (boolean)
                                   Indicates  whether instance types must pro-
                                   vide On-Demand  Instance  hibernation  sup-
                                   port.

                                   Default: false

                               NetworkInterfaceCount -> (structure)
                                   The  minimum  and maximum number of network
                                   interfaces for an instance type.

                                   Default: No minimum or maximum limits

                                   Min -> (integer)
                                      The minimum  number  of  network  inter-
                                      faces.

                                   Max -> (integer)
                                      The  maximum  number  of  network inter-
                                      faces.

                               LocalStorage -> (string)
                                   Indicates whether instance types  with  in-
                                   stance  store  volumes  are  included,  ex-
                                   cluded, or required. For more  information,
                                   see Amazon EC2 instance store in the Amazon
                                   EC2 User Guide for Linux Instances .

                                   Default: included

                               LocalStorageTypes -> (list)
                                   Indicates the type of local storage that is
                                   required.

                                   o For  instance  types with hard disk drive
                                     (HDD) storage, specify hdd .

                                   o For instance types with solid state drive
                                     (SSD) storage, specify ssd .

                                   Default: Any local storage type

                                   (string)

                               TotalLocalStorageGB -> (structure)
                                   The minimum and maximum total local storage
                                   size for an instance type, in GB.

                                   Default: No minimum or maximum limits

                                   Min -> (double)
                                      The storage minimum in GB.

                                   Max -> (double)
                                      The storage maximum in GB.

                               BaselineEbsBandwidthMbps -> (structure)
                                   The minimum and maximum baseline  bandwidth
                                   performance  for an instance type, in Mbps.
                                   For more information, see  Amazon  EBSopti-
                                   mized  instances  in  the  Amazon  EC2 User
                                   Guide for Linux Instances .

                                   Default: No minimum or maximum limits

                                   Min -> (integer)
                                      The minimum value in Mbps.

                                   Max -> (integer)
                                      The maximum value in Mbps.

                               AcceleratorTypes -> (list)
                                   Lists the accelerator types that must be on
                                   an instance type.

                                   o For instance types with GPU accelerators,
                                     specify gpu .

                                   o For instance types  with  FPGA  accelera-
                                     tors, specify fpga .

                                   o For  instance types with inference accel-
                                     erators, specify inference .

                                   Default: Any accelerator type

                                   (string)

                               AcceleratorCount -> (structure)
                                   The minimum and maximum number of accelera-
                                   tors  (GPUs,  FPGAs, or Amazon Web Services
                                   Inferentia chips) for an instance type.

                                   To  exclude  accelerator-enabled   instance
                                   types, set Max to 0 .

                                   Default: No minimum or maximum limits

                                   Min -> (integer)
                                      The minimum value.

                                   Max -> (integer)
                                      The maximum value.

                               AcceleratorManufacturers -> (list)
                                   Indicates  whether instance types must have
                                   accelerators by specific manufacturers.

                                   o For instance types with  NVIDIA  devices,
                                     specify nvidia .

                                   o For  instance  types  with  AMD  devices,
                                     specify amd .

                                   o For instance types with Amazon  Web  Ser-
                                     vices  devices,  specify  amazon-web-ser-
                                     vices .

                                   o For instance types with  Xilinx  devices,
                                     specify xilinx .

                                   Default: Any manufacturer

                                   (string)

                               AcceleratorNames -> (list)
                                   Lists  the  accelerators that must be on an
                                   instance type.

                                   o For instance types with NVIDIA A100 GPUs,
                                     specify a100 .

                                   o For instance types with NVIDIA V100 GPUs,
                                     specify v100 .

                                   o For instance types with NVIDIA K80  GPUs,
                                     specify k80 .

                                   o For  instance  types with NVIDIA T4 GPUs,
                                     specify t4 .

                                   o For instance types with NVIDIA M60  GPUs,
                                     specify m60 .

                                   o For  instance  types  with AMD Radeon Pro
                                     V520 GPUs, specify radeon-pro-v520 .

                                   o For instance types with Xilinx  VU9P  FP-
                                     GAs, specify vu9p .

                                   Default: Any accelerator

                                   (string)

                               AcceleratorTotalMemoryMiB -> (structure)
                                   The  minimum  and maximum total memory size
                                   for the accelerators on an  instance  type,
                                   in MiB.

                                   Default: No minimum or maximum limits

                                   Min -> (integer)
                                      The memory minimum in MiB.

                                   Max -> (integer)
                                      The memory maximum in MiB.

                               NetworkBandwidthGbps -> (structure)
                                   The  minimum  and maximum amount of network
                                   bandwidth, in gigabits per second (Gbps).

                                   Default: No minimum or maximum limits

                                   Min -> (double)
                                      The minimum amount of network bandwidth,
                                      in gigabits per second (Gbps).

                                   Max -> (double)
                                      The maximum amount of network bandwidth,
                                      in gigabits per second (Gbps).

                               AllowedInstanceTypes -> (list)
                                   The instance types to apply your  specified
                                   attributes   against.  All  other  instance
                                   types are ignored, even if they match  your
                                   specified attributes.

                                   You  can  use strings with one or more wild
                                   cards, represented by an asterisk (* ),  to
                                   allow  an  instance  type, size, or genera-
                                   tion.   The   following    are    examples:
                                   m5.8xlarge , c5*.* , m5a.* , r* , *3* .

                                   For  example,  if  you specify c5* , Amazon
                                   EC2 Auto Scaling will allow the  entire  C5
                                   instance family, which includes all C5a and
                                   C5n instance types. If you specify m5a.*  ,
                                   Amazon  EC2 Auto Scaling will allow all the
                                   M5a instance types, but  not  the  M5n  in-
                                   stance types.

                                   NOTE:
                                      If  you  specify  AllowedInstanceTypes ,
                                      you can't specify  ExcludedInstanceTypes
                                      .

                                   Default: All instance types

                                   (string)

                               BaselinePerformanceFactors -> (structure)
                                   The  baseline  performance  factors for the
                                   instance requirements.

                                   Cpu -> (structure)
                                      The CPU performance to  consider,  using
                                      an  instance family as the baseline ref-
                                      erence.

                                      References -> (list)
                                          Specify an instance family to use as
                                          the  baseline reference for CPU per-
                                          formance. All  instance  types  that
                                          match your specified attributes will
                                          be compared against the CPU  perfor-
                                          mance  of  the  referenced  instance
                                          family, regardless of  CPU  manufac-
                                          turer or architecture differences.

                                          NOTE:
                                             Currently  only one instance fam-
                                             ily can be specified in the list.

                                          (structure)
                                             Specify an instance family to use
                                             as the baseline reference for CPU
                                             performance. All  instance  types
                                             that   All  instance  types  that
                                             match your  specified  attributes
                                             will  be compared against the CPU
                                             performance of the referenced in-
                                             stance  family, regardless of CPU
                                             manufacturer or architecture dif-
                                             ferences.

                                             NOTE:
                                                 Currently  only  one instance
                                                 family can  be  specified  in
                                                 the list.

                                             InstanceFamily -> (string)
                                                 The instance family to use as
                                                 a baseline reference.

                                                 NOTE:
                                                    Make sure that you specify
                                                    the  correct value for the
                                                    instance family.  The  in-
                                                    stance  family  is  every-
                                                    thing  before  the  period
                                                    (.)  in  the instance type
                                                    name. For example, in  the
                                                    instance  c6i.large  , the
                                                    instance family is  c6i  ,
                                                    not c6 . For more informa-
                                                    tion, see Amazon  EC2  in-
                                                    stance type naming conven-
                                                    tions in  Amazon  EC2  In-
                                                    stance Types .

                                                 The  following instance types
                                                 are not supported for perfor-
                                                 mance protection.

                                                 o c1

                                                 o g3| g3s

                                                 o hpc7g

                                                 o m1| m2

                                                 o mac1  | mac2 | mac2-m1ultra
                                                   | mac2-m2 | mac2-m2pro

                                                 o p3dn | p4d | p5

                                                 o t1

                                                 o u-12tb1 | u-18tb1 | u-24tb1
                                                   |  u-3tb1 | u-6tb1 | u-9tb1
                                                   | u7i-12tb  |  u7in-16tb  |
                                                   u7in-24tb | u7in-32tb

                                                 If you performance protection
                                                 by specifying a supported in-
                                                 stance  family,  the returned
                                                 instance types  will  exclude
                                                 the preceding unsupported in-
                                                 stance families.

                                                 If you specify an unsupported
                                                 instance  family  as  a value
                                                 for baseline performance, the
                                                 API   returns  an  empty  re-
                                                 sponse.

                 InstancesDistribution -> (structure)
                     The instances distribution.

                     OnDemandAllocationStrategy -> (string)
                        The allocation strategy to apply to your On-Demand In-
                        stances  when  they  are  launched.  Possible instance
                        types are determined by the launch template  overrides
                        that you specify.

                        The following lists the valid values:
                            lowest-price

                        Uses  price  to determine which instance types are the
                        highest priority, launching the lowest priced instance
                        types  within  an Availability Zone first. This is the
                        default value for Auto  Scaling  groups  that  specify
                        InstanceRequirements .
                            prioritized

                        You  set  the  order  of instance types for the launch
                        template overrides from  highest  to  lowest  priority
                        (from  first  to  last  in  the list). Amazon EC2 Auto
                        Scaling launches your highest priority instance  types
                        first.  If  all your On-Demand capacity cannot be ful-
                        filled using your highest priority instance type, then
                        Amazon  EC2 Auto Scaling launches the remaining capac-
                        ity using the second priority instance  type,  and  so
                        on.  This is the default value for Auto Scaling groups
                        that don't specify InstanceRequirements and cannot  be
                        used for groups that do.

                     OnDemandBaseCapacity -> (integer)
                        The  minimum amount of the Auto Scaling group's capac-
                        ity that must be  fulfilled  by  On-Demand  Instances.
                        This  base  portion  is  launched  first as your group
                        scales.

                        This number has the same unit of  measurement  as  the
                        group's  desired  capacity.  If you change the default
                        unit of measurement (number of instances) by  specify-
                        ing  weighted  capacity values in your launch template
                        overrides list, or by changing the default desired ca-
                        pacity  type  setting  of  the group, you must specify
                        this number using the same unit of measurement.

                        Default: 0

                     OnDemandPercentageAboveBaseCapacity -> (integer)
                        Controls the percentages of  On-Demand  Instances  and
                        Spot Instances for your additional capacity beyond On-
                        DemandBaseCapacity . Expressed as a number (for  exam-
                        ple,  20  specifies  20% On-Demand Instances, 80% Spot
                        Instances). If set to 100,  only  On-Demand  Instances
                        are used.

                        Default: 100

                     SpotAllocationStrategy -> (string)
                        The  allocation  strategy  to  apply  to your Spot In-
                        stances when  they  are  launched.  Possible  instance
                        types  are determined by the launch template overrides
                        that you specify.

                        The following lists the valid values:
                            capacity-optimized

                        Requests Spot Instances using pools that are optimally
                        chosen  based  on  the  available  Spot capacity. This
                        strategy has the lowest risk of interruption. To  give
                        certain  instance  types  a higher chance of launching
                        first, use capacity-optimized-prioritized .
                            capacity-optimized-prioritized

                        You set the order of instance  types  for  the  launch
                        template  overrides  from  highest  to lowest priority
                        (from first to last in  the  list).  Amazon  EC2  Auto
                        Scaling  honors the instance type priorities on a best
                        effort basis but optimizes for  capacity  first.  Note
                        that  if  the  On-Demand allocation strategy is set to
                        prioritized , the same priority is applied  when  ful-
                        filling  On-Demand capacity. This is not a valid value
                        for    Auto    Scaling     groups     that     specify
                        InstanceRequirements .
                            lowest-price

                        Requests  Spot Instances using the lowest priced pools
                        within an Availability Zone, across the number of Spot
                        pools that you specify for the SpotInstancePools prop-
                        erty. To ensure that your desired capacity is met, you
                        might  receive Spot Instances from several pools. This
                        is the default value, but it might lead to high inter-
                        ruption rates because this strategy only considers in-
                        stance price and not available capacity.
                            price-capacity-optimized (recommended)

                        The price and capacity optimized  allocation  strategy
                        looks  at  both  price and capacity to select the Spot
                        Instance pools that are the least likely to be  inter-
                        rupted and have the lowest possible price.

                     SpotInstancePools -> (integer)
                        The  number of Spot Instance pools across which to al-
                        locate your Spot Instances. The Spot pools are  deter-
                        mined  from  the different instance types in the over-
                        rides. Valid only when the  SpotAllocationStrategy  is
                        lowest-price . Value must be in the range of 120.

                        Default: 2

                     SpotMaxPrice -> (string)
                        The  maximum  price per unit hour that you are willing
                        to pay for a Spot Instance. If your maximum  price  is
                        lower  than the Spot price for the instance types that
                        you selected, your Spot Instances are not launched. We
                        do not recommend specifying a maximum price because it
                        can lead to increased  interruptions.  When  Spot  In-
                        stances launch, you pay the current Spot price. To re-
                        move a maximum price that you previously set,  include
                        the  property but specify an empty string ("") for the
                        value.

                        WARNING:
                            If you specify a  maximum  price,  your  instances
                            will be interrupted more frequently than if you do
                            not specify one.

                        Valid Range: Minimum value of 0.001

              MinSize -> (integer)
                 The minimum size of the group.

              MaxSize -> (integer)
                 The maximum size of the group.

              DesiredCapacity -> (integer)
                 The desired size of the group.

              PredictedCapacity -> (integer)
                 The predicted capacity of the group when it has a  predictive
                 scaling policy.

              DefaultCooldown -> (integer)
                 The duration of the default cooldown period, in seconds.

              AvailabilityZones -> (list)
                 One or more Availability Zones for the group.

                 (string)

              LoadBalancerNames -> (list)
                 One or more load balancers associated with the group.

                 (string)

              TargetGroupARNs -> (list)
                 The Amazon Resource Names (ARN) of the target groups for your
                 load balancer.

                 (string)

              HealthCheckType -> (string)
                 A comma-separated value string of one or  more  health  check
                 types.

              HealthCheckGracePeriod -> (integer)
                 The duration of the health check grace period, in seconds.

              Instances -> (list)
                 The EC2 instances associated with the group.

                 (structure)
                     Describes an EC2 instance.

                     InstanceId -> (string)
                        The ID of the instance.

                     InstanceType -> (string)
                        The instance type of the EC2 instance.

                     AvailabilityZone -> (string)
                        The  Availability  Zone  in which the instance is run-
                        ning.

                     LifecycleState -> (string)
                        A description of  the  current  lifecycle  state.  The
                        Quarantined  state  is not used. For more information,
                        see Amazon EC2 Auto Scaling instance lifecycle in  the
                        Amazon EC2 Auto Scaling User Guide .

                     HealthStatus -> (string)
                        The  last  reported  health  status  of  the instance.
                        Healthy means that the instance is healthy and  should
                        remain  in  service. Unhealthy means that the instance
                        is unhealthy and that Amazon EC2 Auto  Scaling  should
                        terminate and replace it.

                     LaunchConfigurationName -> (string)
                        The launch configuration associated with the instance.

                     LaunchTemplate -> (structure)
                        The launch template for the instance.

                        LaunchTemplateId -> (string)
                            The ID of the launch template. To get the template
                            ID, use the Amazon EC2 DescribeLaunchTemplates API
                            operation. New launch templates can be created us-
                            ing the Amazon EC2 CreateLaunchTemplate API.

                            Conditional: You must specify either a  LaunchTem-
                            plateId or a LaunchTemplateName .

                        LaunchTemplateName -> (string)
                            The  name  of the launch template. To get the tem-
                            plate     name,     use     the     Amazon     EC2
                            DescribeLaunchTemplates  API operation. New launch
                            templates can be  created  using  the  Amazon  EC2
                            CreateLaunchTemplate API.

                            Conditional:  You must specify either a LaunchTem-
                            plateId or a LaunchTemplateName .

                        Version -> (string)
                            The version number, $Latest , or $Default . To get
                            the   version   number,   use   the   Amazon   EC2
                            DescribeLaunchTemplateVersions API operation.  New
                            launch  template versions can be created using the
                            Amazon EC2 CreateLaunchTemplateVersion API. If the
                            value is $Latest , Amazon EC2 Auto Scaling selects
                            the latest version of  the  launch  template  when
                            launching  instances.  If  the value is $Default ,
                            Amazon EC2 Auto Scaling selects the  default  ver-
                            sion  of  the  launch  template when launching in-
                            stances. The default value is $Default .

                     ProtectedFromScaleIn -> (boolean)
                        Indicates whether the instance is protected from  ter-
                        mination by Amazon EC2 Auto Scaling when scaling in.

                     WeightedCapacity -> (string)
                        The  number  of  capacity units contributed by the in-
                        stance based on its instance type.

                        Valid Range: Minimum value of 1. Maximum value of 999.

              CreatedTime -> (timestamp)
                 The date and time the group was created.

              SuspendedProcesses -> (list)
                 The suspended processes associated with the group.

                 (structure)
                     Describes an auto scaling  process  that  has  been  sus-
                     pended.

                     For  more information, see Types of processes in the Ama-
                     zon EC2 Auto Scaling User Guide .

                     ProcessName -> (string)
                        The name of the suspended process.

                     SuspensionReason -> (string)
                        The reason that the process was suspended.

              PlacementGroup -> (string)
                 The name of the placement group into which to launch your in-
                 stances, if any.

              VPCZoneIdentifier -> (string)
                 One or more subnet IDs, if applicable, separated by commas.

              EnabledMetrics -> (list)
                 The metrics enabled for the group.

                 (structure)
                     Describes an enabled Auto Scaling group metric.

                     Metric -> (string)
                        One of the following metrics:

                        o GroupMinSize

                        o GroupMaxSize

                        o GroupDesiredCapacity

                        o GroupInServiceInstances

                        o GroupPendingInstances

                        o GroupStandbyInstances

                        o GroupTerminatingInstances

                        o GroupTotalInstances

                        o GroupInServiceCapacity

                        o GroupPendingCapacity

                        o GroupStandbyCapacity

                        o GroupTerminatingCapacity

                        o GroupTotalCapacity

                        o WarmPoolDesiredCapacity

                        o WarmPoolWarmedCapacity

                        o WarmPoolPendingCapacity

                        o WarmPoolTerminatingCapacity

                        o WarmPoolTotalCapacity

                        o GroupAndWarmPoolDesiredCapacity

                        o GroupAndWarmPoolTotalCapacity

                        For  more  information,  see Amazon CloudWatch metrics
                        for Amazon EC2 Auto Scaling in  the  Amazon  EC2  Auto
                        Scaling User Guide .

                     Granularity -> (string)
                        The granularity of the metric. The only valid value is
                        1Minute .

              Status -> (string)
                 The    current    state    of    the    group    when     the
                 DeleteAutoScalingGroup operation is in progress.

              Tags -> (list)
                 The tags for the group.

                 (structure)
                     Describes a tag for an Auto Scaling group.

                     ResourceId -> (string)
                        The name of the group.

                     ResourceType -> (string)
                        The  type  of  resource.  The  only supported value is
                        auto-scaling-group .

                     Key -> (string)
                        The tag key.

                     Value -> (string)
                        The tag value.

                     PropagateAtLaunch -> (boolean)
                        Determines whether the tag is added to  new  instances
                        as they are launched in the group.

              TerminationPolicies -> (list)
                 The termination policies for the group.

                 (string)

              NewInstancesProtectedFromScaleIn -> (boolean)
                 Indicates whether newly launched instances are protected from
                 termination by Amazon EC2 Auto Scaling when scaling in.

              ServiceLinkedRoleARN -> (string)
                 The Amazon Resource Name (ARN)  of  the  service-linked  role
                 that  the  Auto  Scaling  group uses to call other Amazon Web
                 Services on your behalf.

              MaxInstanceLifetime -> (integer)
                 The maximum amount of time, in seconds, that an instance  can
                 be in service.

                 Valid Range: Minimum value of 0.

              CapacityRebalance -> (boolean)
                 Indicates whether Capacity Rebalancing is enabled.

              WarmPoolConfiguration -> (structure)
                 The warm pool for the group.

                 MaxGroupPreparedCapacity -> (integer)
                     The maximum number of instances that are allowed to be in
                     the warm pool or in any state except Terminated  for  the
                     Auto Scaling group.

                 MinSize -> (integer)
                     The  minimum  number of instances to maintain in the warm
                     pool.

                 PoolState -> (string)
                     The instance state to transition to after  the  lifecycle
                     actions are complete.

                 Status -> (string)
                     The status of a warm pool that is marked for deletion.

                 InstanceReusePolicy -> (structure)
                     The instance reuse policy.

                     ReuseOnScaleIn -> (boolean)
                        Specifies  whether instances in the Auto Scaling group
                        can be returned to the warm pool on scale in.

              WarmPoolSize -> (integer)
                 The current size of the warm pool.

              Context -> (string)
                 Reserved.

              DesiredCapacityType -> (string)
                 The unit of measurement for the value specified  for  desired
                 capacity.  Amazon  EC2 Auto Scaling supports DesiredCapacity-
                 Type for attribute-based instance type selection only.

              DefaultInstanceWarmup -> (integer)
                 The duration of the default instance warmup, in seconds.

              TrafficSources -> (list)
                 The traffic sources associated with this Auto Scaling group.

                 (structure)
                     Identifying information for a traffic source.

                     Identifier -> (string)
                        Identifies the traffic source.

                        For Application  Load  Balancers,  Gateway  Load  Bal-
                        ancers,  Network Load Balancers, and VPC Lattice, this
                        will be the Amazon Resource Name (ARN)  for  a  target
                        group  in  this  account  and Region. For Classic Load
                        Balancers, this will be the name of the  Classic  Load
                        Balancer in this account and Region.

                        For example:

                        o Application  Load Balancer ARN: arn:aws:elasticload-
                          balancing:us-west-2:123456789012:targetgroup/my-tar-
                          gets/1234567890123456

                        o Classic Load Balancer name: my-classic-load-balancer

                        o VPC        Lattice       ARN:       arn:aws:vpc-lat-
                          tice:us-west-2:123456789012:target-
                          group/tg-1234567890123456

                        To  get  the  ARN  of a target group for a Application
                        Load Balancer, Gateway Load Balancer, or Network  Load
                        Balancer,  or the name of a Classic Load Balancer, use
                        the Elastic Load  Balancing  DescribeTargetGroups  and
                        DescribeLoadBalancers API operations.

                        To  get the ARN of a target group for VPC Lattice, use
                        the VPC Lattice GetTargetGroup API operation.

                     Type -> (string)
                        Provides additional context for the value  of  Identi-
                        fier .

                        The following lists the valid values:

                        o elb if Identifier is the name of a Classic Load Bal-
                          ancer.

                        o elbv2 if Identifier is the  ARN  of  an  Application
                          Load  Balancer,  Gateway  Load  Balancer, or Network
                          Load Balancer target group.

                        o vpc-lattice if Identifier is the ARN of a  VPC  Lat-
                          tice target group.

                        Required  if  the  identifier is the name of a Classic
                        Load Balancer.

              InstanceMaintenancePolicy -> (structure)
                 An instance maintenance policy.

                 MinHealthyPercentage -> (integer)
                     Specifies the lower threshold as a percentage of the  de-
                     sired  capacity  of the Auto Scaling group. It represents
                     the minimum percentage of the group to keep  in  service,
                     healthy,  and  ready to use to support your workload when
                     replacing instances. Value range is 0 to 100. To clear  a
                     previously set value, specify a value of -1 .

                 MaxHealthyPercentage -> (integer)
                     Specifies  the upper threshold as a percentage of the de-
                     sired capacity of the Auto Scaling group.  It  represents
                     the  maximum  percentage of the group that can be in ser-
                     vice and healthy, or pending, to  support  your  workload
                     when  replacing  instances. Value range is 100 to 200. To
                     clear a previously set value, specify a value of -1 .

                     Both MinHealthyPercentage and  MaxHealthyPercentage  must
                     be  specified,  and the difference between them cannot be
                     greater than 100. A large range increases the  number  of
                     instances that can be replaced at the same time.

              AvailabilityZoneDistribution -> (structure)
                 The instance capacity distribution across Availability Zones.

                 CapacityDistributionStrategy -> (string)
                     If  launches  fail in an Availability Zone, the following
                     strategies   are   available.   The   default   is   bal-
                     anced-best-effort .

                     o balanced-only  -  If  launches  fail in an Availability
                       Zone, Auto Scaling will continue to attempt  to  launch
                       in  the unhealthy zone to preserve a balanced distribu-
                       tion.

                     o balanced-best-effort - If launches fail  in  an  Avail-
                       ability  Zone,  Auto  Scaling will attempt to launch in
                       another healthy Availability Zone instead.

              AvailabilityZoneImpairmentPolicy -> (structure)
                 The Availability Zone impairment policy.

                 ZonalShiftEnabled -> (boolean)
                     If true , enable zonal shift for your Auto Scaling group.

                 ImpairedZoneHealthCheckBehavior -> (string)
                     Specifies the health  check  behavior  for  the  impaired
                     Availability Zone in an active zonal shift. If you select
                     Replace unhealthy , instances that appear unhealthy  will
                     be  replaced in all Availability Zones. If you select Ig-
                     nore unhealthy , instances will not be  replaced  in  the
                     Availability  Zone  with the active zonal shift. For more
                     information, see Auto Scaling group zonal  shift  in  the
                     Amazon EC2 Auto Scaling User Guide .

              CapacityReservationSpecification -> (structure)
                 The capacity reservation specification.

                 CapacityReservationPreference -> (string)
                     The  capacity  reservation  preference. The following op-
                     tions are available:

                     o capacity-reservations-only -  Auto  Scaling  will  only
                       launch  instances into a Capacity Reservation or Capac-
                       ity  Reservation  resource  group.  If  capacity  isn't
                       available, instances will fail to launch.

                     o capacity-reservations-first  - Auto Scaling will try to
                       launch instances into a Capacity Reservation or  Capac-
                       ity Reservation resource group first. If capacity isn't
                       available, instances will run in On-Demand capacity.

                     o none - Auto Scaling will not launch  instances  into  a
                       Capacity  Reservation.  Instances will run in On-Demand
                       capacity.

                     o default - Auto Scaling uses  the  Capacity  Reservation
                       preference  from your launch template or an open Capac-
                       ity Reservation.

                 CapacityReservationTarget -> (structure)
                     Describes  a  target  Capacity  Reservation  or  Capacity
                     Reservation resource group.

                     CapacityReservationIds -> (list)
                        The Capacity Reservation IDs to launch instances into.

                        (string)

                     CapacityReservationResourceGroupArns -> (list)
                        The resource group ARNs of the Capacity Reservation to
                        launch instances into.

                        (string)

       NextToken -> (string)
          A string that indicates that the response contains more  items  than
          can  be  returned in a single response. To receive additional items,
          specify this string for the NextToken value when requesting the next
          set of items. This value is null when there are no more items to re-
          turn.



                                                DESCRIBE-AUTO-SCALING-GROUPS()
