GET-METRIC-DATA()                                            GET-METRIC-DATA()



NAME
       get-metric-data -

DESCRIPTION
       You can use the GetMetricData API to retrieve CloudWatch metric values.
       The operation can also include a CloudWatch Metrics Insights query, and
       one or more metric math functions.

       A GetMetricData operation that does not include a query can retrieve as
       many as 500 different metrics in a single request, with a total  of  as
       many  as  100,800  data  points. You can also optionally perform metric
       math expressions on the values of the returned  statistics,  to  create
       new  time  series that represent new insights into your data. For exam-
       ple, using Lambda metrics, you could divide the Errors  metric  by  the
       Invocations  metric to get an error rate time series. For more informa-
       tion about metric math expressions, see Metric Math  Syntax  and  Func-
       tions in the Amazon CloudWatch User Guide .

       If  you  include a Metrics Insights query, each GetMetricData operation
       can include only one query. But the same  GetMetricData  operation  can
       also  retrieve  other  metrics. Metrics Insights queries can query only
       the most recent three hours of metric data. For more information  about
       Metrics  Insights,  see  Query your metrics with CloudWatch Metrics In-
       sights .

       Calls to the GetMetricData API have a different pricing structure  than
       calls  to GetMetricStatistics . For more information about pricing, see
       Amazon CloudWatch Pricing .

       Amazon CloudWatch retains metric data as follows:

       o Data points with a period of less than 60 seconds are available for 3
         hours.  These  data points are high-resolution metrics and are avail-
         able only for custom metrics that have  been  defined  with  a  Stor-
         ageResolution of 1.

       o Data  points with a period of 60 seconds (1-minute) are available for
         15 days.

       o Data points with a period of 300 seconds (5-minute) are available for
         63 days.

       o Data  points with a period of 3600 seconds (1 hour) are available for
         455 days (15 months).

       Data points that are initially published with a shorter period are  ag-
       gregated  together  for  long-term storage. For example, if you collect
       data using a period of 1 minute, the data remains available for 15 days
       with  1-minute resolution. After 15 days, this data is still available,
       but is aggregated and retrievable only with a resolution of 5  minutes.
       After  63  days, the data is further aggregated and is available with a
       resolution of 1 hour.

       If you omit Unit in your request, all data that was collected with  any
       unit  is  returned, along with the corresponding units that were speci-
       fied when the data was reported to CloudWatch. If you specify  a  unit,
       the operation returns only data that was collected with that unit spec-
       ified. If you specify a unit that does not match  the  data  collected,
       the results of the operation are null. CloudWatch does not perform unit
       conversions.
          Using Metrics Insights queries with metric math

       You can't mix a Metric Insights query and metric  math  syntax  in  the
       same  expression, but you can reference results from a Metrics Insights
       query within other Metric math expressions. A  Metrics  Insights  query
       without a GROUP BY clause returns a single time-series (TS), and can be
       used as input for a metric math expression that expects a  single  time
       series.  A Metrics Insights query with a GROUP BY clause returns an ar-
       ray of time-series (TS[]), and can be used as input for a  metric  math
       expression that expects an array of time series.

       See also: AWS API Documentation

       get-metric-data is a paginated operation. Multiple API calls may be is-
       sued in order to retrieve the entire data set of results. You can  dis-
       able  pagination  by  providing the --no-paginate argument.  When using
       --output text and the --query argument on  a  paginated  response,  the
       --query  argument  must  extract data from the results of the following
       query expressions: MetricDataResults, Messages

SYNOPSIS
            get-metric-data
          --metric-data-queries <value>
          --start-time <value>
          --end-time <value>
          [--scan-by <value>]
          [--label-options <value>]
          [--cli-input-json <value>]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --metric-data-queries (list)
          The metric queries to be returned. A single GetMetricData  call  can
          include  as  many  as  500 MetricDataQuery structures. Each of these
          structures can specify either a metric to retrieve,  a  Metrics  In-
          sights query, or a math expression to perform on retrieved data.

          (structure)
              This  structure is used in both GetMetricData and PutMetricAlarm
              . The supported use of this structure is different for those two
              operations.

              When used in GetMetricData , it indicates the metric data to re-
              turn, and whether this call is just retrieving a  batch  set  of
              data  for  one metric, or is performing a Metrics Insights query
              or a math expression. A single GetMetricData call can include up
              to 500 MetricDataQuery structures.

              When  used in PutMetricAlarm , it enables you to create an alarm
              based on a metric math expression. Each MetricDataQuery  in  the
              array  specifies  either a metric to retrieve, or a math expres-
              sion to be performed on retrieved metrics.  A  single  PutMetri-
              cAlarm  call  can include up to 20 MetricDataQuery structures in
              the array. The 20 structures can include as many  as  10  struc-
              tures  that contain a MetricStat parameter to retrieve a metric,
              and as many as 10 structures that contain the Expression parame-
              ter  to  perform  a  math expression. Of those Expression struc-
              tures, one must have true as the value for ReturnData . The  re-
              sult of this expression is the value the alarm watches.

              Any  expression used in a PutMetricAlarm operation must return a
              single time series. For more information, see Metric Math Syntax
              and Functions in the Amazon CloudWatch User Guide .

              Some  of  the  parameters  of this structure also have different
              uses whether you are using this structure in a GetMetricData op-
              eration or a PutMetricAlarm operation. These differences are ex-
              plained in the following parameter list.

              Id -> (string)
                 A short name used to tie this object to the  results  in  the
                 response.  This  name  must be unique within a single call to
                 GetMetricData . If you are  performing  math  expressions  on
                 this  set  of  data,  this  name represents that data and can
                 serve as a variable in the mathematical expression. The valid
                 characters  are  letters,  numbers, and underscore. The first
                 character must be a lowercase letter.

              MetricStat -> (structure)
                 The metric to be returned, along with statistics, period, and
                 units. Use this parameter only if this object is retrieving a
                 metric and not performing a math expression on returned data.

                 Within one MetricDataQuery object, you  must  specify  either
                 Expression or MetricStat but not both.

                 Metric -> (structure)
                     The  metric  to  return, including the metric name, name-
                     space, and dimensions.

                     Namespace -> (string)
                        The namespace of the metric.

                     MetricName -> (string)
                        The name of the metric. This is a required field.

                     Dimensions -> (list)
                        The dimensions for the metric.

                        (structure)
                            A dimension is a name/value pair that is  part  of
                            the  identity  of a metric. Because dimensions are
                            part of the unique identifier for a metric,  when-
                            ever  you  add  a unique name/value pair to one of
                            your metrics, you are creating a new variation  of
                            that  metric. For example, many Amazon EC2 metrics
                            publish InstanceId as a dimension  name,  and  the
                            actual  instance  ID  as the value for that dimen-
                            sion.

                            You can assign up to 30 dimensions to a metric.

                            Name -> (string)
                               The name of the dimension. Dimension names must
                               contain  only ASCII characters, must include at
                               least one non-whitespace character, and  cannot
                               start  with a colon (: ). ASCII control charac-
                               ters are not supported  as  part  of  dimension
                               names.

                            Value -> (string)
                               The  value  of  the dimension. Dimension values
                               must contain only ASCII characters and must in-
                               clude  at  least  one non-whitespace character.
                               ASCII control characters are not  supported  as
                               part of dimension values.

                 Period -> (integer)
                     The granularity, in seconds, of the returned data points.
                     For metrics with regular resolution, a period can  be  as
                     short  as  one minute (60 seconds) and must be a multiple
                     of 60. For high-resolution metrics that are collected  at
                     intervals  of  less than one minute, the period can be 1,
                     5, 10, 30, 60, or any  multiple  of  60.  High-resolution
                     metrics  are those metrics stored by a PutMetricData call
                     that includes a StorageResolution of 1 second.

                     If the StartTime parameter specifies a time stamp that is
                     greater  than 3 hours ago, you must specify the period as
                     follows or no data points in that time range is returned:

                     o Start time between 3 hours and 15 days ago - Use a mul-
                       tiple of 60 seconds (1 minute).

                     o Start  time between 15 and 63 days ago - Use a multiple
                       of 300 seconds (5 minutes).

                     o Start time greater than 63 days ago - Use a multiple of
                       3600 seconds (1 hour).

                 Stat -> (string)
                     The  statistic  to  return. It can include any CloudWatch
                     statistic or extended statistic.

                 Unit -> (string)
                     When you are using a Put  operation,  this  defines  what
                     unit you want to use when storing the metric.

                     In  a  Get operation, if you omit Unit then all data that
                     was collected with any unit is returned, along  with  the
                     corresponding units that were specified when the data was
                     reported to CloudWatch. If you specify a unit, the opera-
                     tion  returns only data that was collected with that unit
                     specified. If you specify a unit that does not match  the
                     data  collected,  the  results of the operation are null.
                     CloudWatch does not perform unit conversions.

              Expression -> (string)
                 This field can contain either a Metrics Insights query, or  a
                 metric  math expression to be performed on the returned data.
                 For more information  about  Metrics  Insights  queries,  see
                 Metrics  Insights  query  components and syntax in the Amazon
                 CloudWatch User Guide .

                 A math expression can use the Id  of  the  other  metrics  or
                 queries to refer to those metrics, and can also use the Id of
                 other expressions to use the result of those expressions. For
                 more  information  about  metric math expressions, see Metric
                 Math Syntax and Functions in the Amazon CloudWatch User Guide
                 .

                 Within  each  MetricDataQuery object, you must specify either
                 Expression or MetricStat but not both.

              Label -> (string)
                 A human-readable label for this metric or expression. This is
                 especially  useful if this is an expression, so that you know
                 what the value represents. If the  metric  or  expression  is
                 shown  in  a CloudWatch dashboard widget, the label is shown.
                 If Label is omitted, CloudWatch generates a default.

                 You can put dynamic expressions into a label, so that  it  is
                 more descriptive. For more information, see Using Dynamic La-
                 bels .

              ReturnData -> (boolean)
                 When used in GetMetricData , this option indicates whether to
                 return  the timestamps and raw data values of this metric. If
                 you are performing this call just to do math expressions  and
                 do not also need the raw data returned, you can specify false
                 . If you omit this, the default of true is used.

                 When used in PutMetricAlarm , specify true for  the  one  ex-
                 pression  result  to  use as the alarm. For all other metrics
                 and expressions in the same PutMetricAlarm operation, specify
                 ReturnData as False.

              Period -> (integer)
                 The granularity, in seconds, of the returned data points. For
                 metrics with regular resolution, a period can be as short  as
                 one  minute  (60  seconds)  and must be a multiple of 60. For
                 high-resolution metrics that are collected  at  intervals  of
                 less  than one minute, the period can be 1, 5, 10, 30, 60, or
                 any multiple of 60. High-resolution metrics are those metrics
                 stored  by  a  PutMetricData  operation that includes a Stor-
                 ageResolution of 1 second .

              AccountId -> (string)
                 The ID of the account where the metrics are located.

                 If you are performing a GetMetricData operation in a monitor-
                 ing  account,  use  this to specify which account to retrieve
                 this metric from.

                 If you are performing a PutMetricAlarm operation, use this to
                 specify  which  account contains the metric that the alarm is
                 watching.

       JSON Syntax:

          [
            {
              "Id": "string",
              "MetricStat": {
                "Metric": {
                  "Namespace": "string",
                  "MetricName": "string",
                  "Dimensions": [
                    {
                      "Name": "string",
                      "Value": "string"
                    }
                    ...
                  ]
                },
                "Period": integer,
                "Stat": "string",
                "Unit": "Seconds"|"Microseconds"|"Milliseconds"|"Bytes"|"Kilobytes"|"Megabytes"|"Gigabytes"|"Terabytes"|"Bits"|"Kilobits"|"Megabits"|"Gigabits"|"Terabits"|"Percent"|"Count"|"Bytes/Second"|"Kilobytes/Second"|"Megabytes/Second"|"Gigabytes/Second"|"Terabytes/Second"|"Bits/Second"|"Kilobits/Second"|"Megabits/Second"|"Gigabits/Second"|"Terabits/Second"|"Count/Second"|"None"
              },
              "Expression": "string",
              "Label": "string",
              "ReturnData": true|false,
              "Period": integer,
              "AccountId": "string"
            }
            ...
          ]

       --start-time (timestamp)
          The time stamp indicating the earliest data to be returned.

          The value specified is inclusive; results include data  points  with
          the specified time stamp.

          CloudWatch rounds the specified time stamp as follows:

          o Start time less than 15 days ago - Round down to the nearest whole
            minute. For example, 12:32:34 is rounded down to 12:32:00.

          o Start time between 15 and 63 days ago - Round down to the  nearest
            5-minute  clock interval. For example, 12:32:34 is rounded down to
            12:30:00.

          o Start time greater than 63 days ago - Round down  to  the  nearest
            1-hour  clock  interval.  For example, 12:32:34 is rounded down to
            12:00:00.

          If you set Period to 5, 10, or 30, the start time of your request is
          rounded  down  to the nearest time that corresponds to even 5-, 10-,
          or 30-second divisions of a minute. For example, if you make a query
          at  (HH:mm:ss) 01:05:23 for the previous 10-second period, the start
          time of your request is rounded  down  and  you  receive  data  from
          01:05:10 to 01:05:20. If you make a query at 15:07:17 for the previ-
          ous 5 minutes of data, using a period of 5 seconds, you receive data
          timestamped between 15:02:15 and 15:07:15.

          For  better  performance,  specify StartTime and EndTime values that
          align with the value of the metric's Period and sync up with the be-
          ginning  and  end of an hour. For example, if the Period of a metric
          is 5 minutes, specifying 12:05 or  12:30  as  StartTime  can  get  a
          faster  response  from CloudWatch than setting 12:07 or 12:29 as the
          StartTime .

       --end-time (timestamp)
          The time stamp indicating the latest data to be returned.

          The value specified is exclusive; results include data points up  to
          the specified time stamp.

          For  better  performance,  specify StartTime and EndTime values that
          align with the value of the metric's Period and sync up with the be-
          ginning  and  end of an hour. For example, if the Period of a metric
          is 5 minutes, specifying 12:05 or 12:30 as EndTime can get a  faster
          response  from CloudWatch than setting 12:07 or 12:29 as the EndTime
          .

       --scan-by (string)
          The order in which data points should be returned. TimestampDescend-
          ing  returns  the  newest data first and paginates when the MaxData-
          points limit is reached. TimestampAscending returns the oldest  data
          first and paginates when the MaxDatapoints limit is reached.

          If  you  omit  this parameter, the default of TimestampDescending is
          used.

          Possible values:

          o TimestampDescending

          o TimestampAscending

       --label-options (structure)
          This structure includes the Timezone parameter, which you can use to
          specify  your  time zone so that the labels of returned data display
          the correct time for your time zone.

          Timezone -> (string)
              The time zone to use for metric data return in  this  operation.
              The format is + or - followed by four digits. The first two dig-
              its indicate the number of hours ahead or behind of UTC, and the
              final  two  digits are the number of minutes. For example, +0130
              indicates a time zone that is 1 hour and  30  minutes  ahead  of
              UTC. The default is +0000.

       Shorthand Syntax:

          Timezone=string

       JSON Syntax:

          {
            "Timezone": "string"
          }

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --starting-token (string)
          A token to specify where to start paginating. This is the  NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The size of each page to get in the AWS service call. This does  not
          affect the number of items returned in the command's output. Setting
          a smaller page size results in more calls to the  AWS  service,  re-
          trieving  fewer  items  in  each call. This can help prevent the AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The  total number of items to return in the command's output. If the
          total number of items available is more than the value specified,  a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent  command. Do not use the NextToken response element directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       Example  1:  To  get the Average Total IOPS for the specified EC2 using
       math expression

       The following get-metric-data example retrieves CloudWatch metric  val-
       ues for the EC2 instance with InstanceID i-abcdef using metric math ex-
       prssion that combines EBSReadOps and EBSWriteOps metrics.

          aws cloudwatch get-metric-data \
              --metric-data-queries file://file.json \
              --start-time 2024-09-29T22:10:00Z \
              --end-time 2024-09-29T22:15:00Z

       Contents of file.json:

          [
              {
                  "Id": "m3",
                  "Expression": "(m1+m2)/300",
                  "Label": "Avg Total IOPS"
              },
              {
                  "Id": "m1",
                  "MetricStat": {
                      "Metric": {
                          "Namespace": "AWS/EC2",
                          "MetricName": "EBSReadOps",
                          "Dimensions": [
                              {
                                  "Name": "InstanceId",
                                  "Value": "i-abcdef"
                              }
                          ]
                      },
                      "Period": 300,
                      "Stat": "Sum",
                      "Unit": "Count"
                  },
                  "ReturnData": false
              },
              {
                  "Id": "m2",
                  "MetricStat": {
                      "Metric": {
                          "Namespace": "AWS/EC2",
                          "MetricName": "EBSWriteOps",
                          "Dimensions": [
                              {
                                  "Name": "InstanceId",
                                  "Value": "i-abcdef"
                              }
                          ]
                      },
                      "Period": 300,
                      "Stat": "Sum",
                      "Unit": "Count"
                  },
                  "ReturnData": false
              }
          ]

       Output:

          {
              "MetricDataResults": [
                  {
                      "Id": "m3",
                      "Label": "Avg Total IOPS",
                      "Timestamps": [
                          "2024-09-29T22:10:00+00:00"
                      ],
                      "Values": [
                          96.85
                      ],
                      "StatusCode": "Complete"
                  }
              ],
              "Messages": []
          }

       Example 2: To  monitor  the  estimated  AWS  charges  using  CloudWatch
       billing metrics

       The following get-metric-data example retrieves EstimatedCharges Cloud-
       Watch metric from AWS/Billing namespace.

          aws cloudwatch get-metric-data \
              --metric-data-queries '[{"Id":"m1","MetricStat":{"Metric":{"Namespace":"AWS/Billing","MetricName":"EstimatedCharges","Dimensions":[{"Name":"Currency","Value":"USD"}]},"Period":21600,"Stat":"Maximum"}}]' \
              --start-time 2024-09-26T12:00:00Z \
              --end-time 2024-09-26T18:00:00Z \
              --region us-east-1

       Output:

          {
              "MetricDataResults": [
                  {
                      "Id": "m1",
                      "Label": "EstimatedCharges",
                      "Timestamps": [
                          "2024-09-26T12:00:00+00:00"
                      ],
                      "Values": [
                          542.38
                      ],
                      "StatusCode": "Complete"
                  }
              ],
              "Messages": []
          }

       For more information, see Using math expressions with  CloudWatch  met-
       rics in the Amazon CloudWatch User Guide.

OUTPUT
       MetricDataResults -> (list)
          The metrics that are returned, including the metric name, namespace,
          and dimensions.

          (structure)
              A GetMetricData call returns an array of MetricDataResult struc-
              tures.  Each  of  these  structures includes the data points for
              that metric, along with the timestamps of those data points  and
              other identifying information.

              Id -> (string)
                 The short name you specified to represent this metric.

              Label -> (string)
                 The human-readable label associated with the data.

              Timestamps -> (list)
                 The  timestamps  for the data points, formatted in Unix time-
                 stamp format. The number of  timestamps  always  matches  the
                 number  of  values  and  the  value for Timestamps[x] is Val-
                 ues[x].

                 (timestamp)

              Values -> (list)
                 The data points for the metric corresponding to Timestamps  .
                 The  number of values always matches the number of timestamps
                 and the timestamp for Values[x] is Timestamps[x].

                 (double)

              StatusCode -> (string)
                 The status of the returned data. Complete indicates that  all
                 data  points  in the requested time range were returned. Par-
                 tialData means that an incomplete set of data points were re-
                 turned. You can use the NextToken value that was returned and
                 repeat your request to get more data points. NextToken is not
                 returned if you are performing a math expression. InternalEr-
                 ror indicates that an error occurred. Retry your request  us-
                 ing NextToken , if present.

              Messages -> (list)
                 A list of messages with additional information about the data
                 returned.

                 (structure)
                     A message returned by the GetMetricData API, including  a
                     code and a description.

                     If  a  cross-Region  GetMetricData operation fails with a
                     code of Forbidden and a value of Authentication too  com-
                     plex  to retrieve cross region data , you can correct the
                     problem by running the  GetMetricData  operation  in  the
                     same Region where the metric data is.

                     Code -> (string)
                        The error code or status code associated with the mes-
                        sage.

                     Value -> (string)
                        The message text.

       NextToken -> (string)
          A token that marks the next batch of returned results.

       Messages -> (list)
          Contains a message about this GetMetricData operation, if the opera-
          tion  results  in such a message. An example of a message that might
          be returned is Maximum number of allowed metrics exceeded . If there
          is  a  message,  as  much of the operation as possible is still exe-
          cuted.

          A message appears here only if it is related to the  global  GetMet-
          ricData  operation.  Any message about a specific metric returned by
          the operation appears in the MetricDataResult  object  returned  for
          that metric.

          (structure)
              A  message  returned  by the GetMetricData API, including a code
              and a description.

              If a cross-Region GetMetricData operation fails with a  code  of
              Forbidden  and a value of Authentication too complex to retrieve
              cross region data , you can correct the problem by  running  the
              GetMetricData operation in the same Region where the metric data
              is.

              Code -> (string)
                 The error code or status code associated with the message.

              Value -> (string)
                 The message text.



                                                             GET-METRIC-DATA()
