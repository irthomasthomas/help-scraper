SET-ALARM-STATE()                                            SET-ALARM-STATE()



NAME
       set-alarm-state -

DESCRIPTION
       Temporarily  sets  the state of an alarm for testing purposes. When the
       updated state differs from the previous value,  the  action  configured
       for  the  appropriate  state  is invoked. For example, if your alarm is
       configured to send an Amazon SNS message when an  alarm  is  triggered,
       temporarily changing the alarm state to ALARM sends an SNS message.

       Metric  alarms returns to their actual state quickly, often within sec-
       onds. Because the metric alarm state change happens quickly, it is typ-
       ically only visible in the alarm's History tab in the Amazon CloudWatch
       console or through DescribeAlarmHistory .

       If you use SetAlarmState on a composite alarm, the composite  alarm  is
       not  guaranteed to return to its actual state. It returns to its actual
       state only once any of its children alarms change  state.  It  is  also
       reevaluated if you update its configuration.

       If  an  alarm  triggers  EC2  Auto Scaling policies or application Auto
       Scaling policies, you must include information in  the  StateReasonData
       parameter to enable the policy to take the correct action.

       See also: AWS API Documentation

SYNOPSIS
            set-alarm-state
          --alarm-name <value>
          --state-value <value>
          --state-reason <value>
          [--state-reason-data <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --alarm-name (string)
          The name of the alarm.

       --state-value (string)
          The value of the state.

          Possible values:

          o OK

          o ALARM

          o INSUFFICIENT_DATA

       --state-reason (string)
          The  reason  that  this alarm is set to this specific state, in text
          format.

       --state-reason-data (string)
          The reason that this alarm is set to this specific  state,  in  JSON
          format.

          For  SNS  or  EC2 alarm actions, this is just informational. But for
          EC2 Auto Scaling or application Auto Scaling alarm actions, the Auto
          Scaling  policy  uses the information in this field to take the cor-
          rect action.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To temporarily change the state of an alarm

       The  following  example uses the set-alarm-state command to temporarily
       change the state of an Amazon CloudWatch alarm named "myalarm" and  set
       it to the ALARM state for testing purposes:

          aws cloudwatch set-alarm-state --alarm-name "myalarm" --state-value ALARM --state-reason "testing purposes"

       This command returns to the prompt if successful.

OUTPUT
       None



                                                             SET-ALARM-STATE()
