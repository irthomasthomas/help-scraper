PUT-COMPOSITE-ALARM()                                    PUT-COMPOSITE-ALARM()



NAME
       put-composite-alarm -

DESCRIPTION
       Creates  or  updates  a  composite  alarm . When you create a composite
       alarm, you specify a rule expression for the alarm that takes into  ac-
       count  the alarm states of other alarms that you have created. The com-
       posite alarm goes into ALARM state only if all conditions of  the  rule
       are met.

       The alarms specified in a composite alarm's rule expression can include
       metric alarms and other composite alarms. The rule expression of a com-
       posite  alarm  can include as many as 100 underlying alarms. Any single
       alarm can be included in the rule expressions of as many as 150 compos-
       ite alarms.

       Using  composite alarms can reduce alarm noise. You can create multiple
       metric alarms, and also create a composite alarm and set up alerts only
       for  the  composite  alarm.  For  example, you could create a composite
       alarm that goes into ALARM state only when more than one of the  under-
       lying metric alarms are in ALARM state.

       Composite alarms can take the following actions:

       o Notify Amazon SNS topics.

       o Invoke Lambda functions.

       o Create OpsItems in Systems Manager Ops Center.

       o Create incidents in Systems Manager Incident Manager.

       NOTE:
          It  is possible to create a loop or cycle of composite alarms, where
          composite alarm A depends on composite alarm B, and composite  alarm
          B  also  depends  on  composite alarm A. In this scenario, you can't
          delete any composite alarm that is part of the cycle  because  there
          is  always  still  a composite alarm that depends on that alarm that
          you want to delete.

          To get out of such a situation, you must break the cycle by changing
          the rule of one of the composite alarms in the cycle to remove a de-
          pendency that creates the cycle. The  simplest  change  to  make  to
          break  a  cycle  is  to change the AlarmRule of one of the alarms to
          false .

          Additionally, the evaluation of composite alarms stops if CloudWatch
          detects a cycle in the evaluation path.

       When  this  operation  creates an alarm, the alarm state is immediately
       set to INSUFFICIENT_DATA . The alarm is then evaluated and its state is
       set  appropriately.  Any actions associated with the new state are then
       executed. For a composite alarm, this initial time  after  creation  is
       the only time that the alarm can be in INSUFFICIENT_DATA state.

       When you update an existing alarm, its state is left unchanged, but the
       update completely overwrites the previous configuration of the alarm.

       To use this operation, you must be signed on with  the  cloudwatch:Put-
       CompositeAlarm permission that is scoped to * . You can't create a com-
       posite alarms if your  cloudwatch:PutCompositeAlarm  permission  has  a
       narrower scope.

       If  you  are  an IAM user, you must have iam:CreateServiceLinkedRole to
       create a composite alarm that has Systems Manager OpsItem actions.

       See also: AWS API Documentation

SYNOPSIS
            put-composite-alarm
          [--actions-enabled | --no-actions-enabled]
          [--alarm-actions <value>]
          [--alarm-description <value>]
          --alarm-name <value>
          --alarm-rule <value>
          [--insufficient-data-actions <value>]
          [--ok-actions <value>]
          [--tags <value>]
          [--actions-suppressor <value>]
          [--actions-suppressor-wait-period <value>]
          [--actions-suppressor-extension-period <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --actions-enabled | --no-actions-enabled (boolean)
          Indicates whether actions should be executed during any  changes  to
          the alarm state of the composite alarm. The default is TRUE .

       --alarm-actions (list)
          The  actions  to  execute  when  this alarm transitions to the ALARM
          state from any other state. Each action is specified  as  an  Amazon
          Resource Name (ARN).

          Valid Values: ]
              Amazon SNS actions:


              ``
              arn:aws:sns:region :account-id :sns-topic-name ``

              System Message: WARNING/2 (<string>:, line 147)
                     Inline literal start-string without end-string.

                     Lambda actions:

          o Invoke the latest version of a Lambda function:
            ``
            arn:aws:lambda:region :account-id :function:function-name ``

          System Message: WARNING/2 (<string>:, line 156)
            Inline literal start-string without end-string.

          o Invoke a specific version of a Lambda function:
            ``
            arn:aws:lambda:region  :account-id  :function:function-name  :ver-
            sion-number ``

          System Message: WARNING/2 (<string>:, line 158)
            Inline literal start-string without end-string.

          o Invoke a function by using an alias Lambda function:
            ``
            arn:aws:lambda:region     :account-id      :function:function-name
            :alias-name ``

          System Message: WARNING/2 (<string>:, line 160)
            Inline literal start-string without end-string.
              Systems Manager actions:


              ``
              arn:aws:ssm:region :account-id :opsitem:severity ``

              System Message: WARNING/2 (<string>:, line 169)
                     Inline literal start-string without end-string.

          (string)

       Syntax:

          "string" "string" ...

       --alarm-description (string)
          The description for the composite alarm.

       --alarm-name (string)
          The  name  for  the composite alarm. This name must be unique within
          the Region.

       --alarm-rule (string)
          An expression that specifies which other alarms are to be  evaluated
          to  determine  this composite alarm's state. For each alarm that you
          reference, you designate a  function  that  specifies  whether  that
          alarm  needs  to  be  in ALARM state, OK state, or INSUFFICIENT_DATA
          state. You can use operators (AND, OR and NOT) to  combine  multiple
          functions  in  a single expression. You can use parenthesis to logi-
          cally group the functions in your expression.

          You can use either alarm names or ARNs to reference the other alarms
          that are to be evaluated.

          Functions can include the following:

          o ALARM("*alarm-name*  or  *alarm-ARN* ") is TRUE if the named alarm
            is in ALARM state.

          o OK("*alarm-name* or *alarm-ARN* ") is TRUE if the named  alarm  is
            in OK state.

          o INSUFFICIENT_DATA("*alarm-name*  or  *alarm-ARN* ") is TRUE if the
            named alarm is in INSUFFICIENT_DATA state.

          o TRUE always evaluates to TRUE.

          o FALSE always evaluates to FALSE.

          TRUE and FALSE are useful for testing a complex AlarmRule structure,
          and for testing your alarm actions.

          Alarm  names  specified  in  AlarmRule  can  be surrounded with dou-
          ble-quotes ("), but do not have to be.

          The following are some examples of AlarmRule :

          o ALARM(CPUUtilizationTooHigh) AND ALARM(DiskReadOpsTooHigh)  speci-
            fies  that  the composite alarm goes into ALARM state only if both
            CPUUtilizationTooHigh and DiskReadOpsTooHigh alarms are  in  ALARM
            state.

          o ALARM(CPUUtilizationTooHigh)  AND  NOT ALARM(DeploymentInProgress)
            specifies that the alarm goes to ALARM  state  if  CPUUtilization-
            TooHigh is in ALARM state and DeploymentInProgress is not in ALARM
            state. This example reduces alarm noise during a known  deployment
            window.

          o (ALARM(CPUUtilizationTooHigh)  OR  ALARM(DiskReadOpsTooHigh))  AND
            OK(NetworkOutTooHigh) goes into  ALARM  state  if  CPUUtilization-
            TooHigh  OR  DiskReadOpsTooHigh is in ALARM state, and if Network-
            OutTooHigh is in OK state. This provides another example of  using
            a composite alarm to prevent noise. This rule ensures that you are
            not notified with an alarm action on high CPU or disk usage  if  a
            known network problem is also occurring.

          The  AlarmRule  can  specify  as  many as 100 "children" alarms. The
          AlarmRule expression can have as many as 500 elements. Elements  are
          child alarms, TRUE or FALSE statements, and parentheses.

       --insufficient-data-actions (list)
          The  actions  to execute when this alarm transitions to the INSUFFI-
          CIENT_DATA state from any other state. Each action is  specified  as
          an Amazon Resource Name (ARN).

          Valid Values: ]
              Amazon SNS actions:


              ``
              arn:aws:sns:region :account-id :sns-topic-name ``

              System Message: WARNING/2 (<string>:, line 271)
                     Inline literal start-string without end-string.

                     Lambda actions:

          o Invoke the latest version of a Lambda function:
            ``
            arn:aws:lambda:region :account-id :function:function-name ``

          System Message: WARNING/2 (<string>:, line 280)
            Inline literal start-string without end-string.

          o Invoke a specific version of a Lambda function:
            ``
            arn:aws:lambda:region  :account-id  :function:function-name  :ver-
            sion-number ``

          System Message: WARNING/2 (<string>:, line 282)
            Inline literal start-string without end-string.

          o Invoke a function by using an alias Lambda function:
            ``
            arn:aws:lambda:region     :account-id      :function:function-name
            :alias-name ``

          System Message: WARNING/2 (<string>:, line 284)
            Inline literal start-string without end-string.

          (string)

       Syntax:

          "string" "string" ...

       --ok-actions (list)
          The  actions  to  execute when this alarm transitions to an OK state
          from any other state. Each action is specified as an Amazon Resource
          Name (ARN).

          Valid Values: ]
              Amazon SNS actions:


              ``
              arn:aws:sns:region :account-id :sns-topic-name ``

              System Message: WARNING/2 (<string>:, line 318)
                     Inline literal start-string without end-string.

                     Lambda actions:

          o Invoke the latest version of a Lambda function:
            ``
            arn:aws:lambda:region :account-id :function:function-name ``

          System Message: WARNING/2 (<string>:, line 327)
            Inline literal start-string without end-string.

          o Invoke a specific version of a Lambda function:
            ``
            arn:aws:lambda:region  :account-id  :function:function-name  :ver-
            sion-number ``

          System Message: WARNING/2 (<string>:, line 329)
            Inline literal start-string without end-string.

          o Invoke a function by using an alias Lambda function:
            ``
            arn:aws:lambda:region     :account-id      :function:function-name
            :alias-name ``

          System Message: WARNING/2 (<string>:, line 331)
            Inline literal start-string without end-string.

          (string)

       Syntax:

          "string" "string" ...

       --tags (list)
          A list of key-value pairs to associate with the alarm. You can asso-
          ciate as many as 50 tags with an alarm. To be able to associate tags
          with  the  alarm when you create the alarm, you must have the cloud-
          watch:TagResource permission.

          Tags can help you organize and categorize your  resources.  You  can
          also  use  them to scope user permissions by granting a user permis-
          sion to access or change only resources with certain tag values.

          If you are using this operation to update  an  existing  alarm,  any
          tags  you  specify in this parameter are ignored. To change the tags
          of an existing alarm, use TagResource or UntagResource .

          (structure)
              A key-value pair associated with a CloudWatch resource.

              Key -> (string)
                 A string that you can use to assign a value. The  combination
                 of  tag  keys and values can help you organize and categorize
                 your resources.

              Value -> (string)
                 The value for the specified tag key.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --actions-suppressor (string)
          Actions will be suppressed if the suppressor alarm is in  the  ALARM
          state.  ActionsSuppressor  can be an AlarmName or an Amazon Resource
          Name (ARN) from an existing alarm.

       --actions-suppressor-wait-period (integer)
          The maximum time in seconds that the composite alarm waits  for  the
          suppressor  alarm  to  go into the ALARM state. After this time, the
          composite alarm performs its actions.

          WARNING:
              WaitPeriod is required only when ActionsSuppressor is specified.

       --actions-suppressor-extension-period (integer)
          The maximum time in seconds that the  composite  alarm  waits  after
          suppressor  alarm  goes out of the ALARM state. After this time, the
          composite alarm performs its actions.

          WARNING:
              ExtensionPeriod is required only when ActionsSuppressor is spec-
              ified.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       None



                                                         PUT-COMPOSITE-ALARM()
