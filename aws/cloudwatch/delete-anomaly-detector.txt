DELETE-ANOMALY-DETECTOR()                            DELETE-ANOMALY-DETECTOR()



NAME
       delete-anomaly-detector -

DESCRIPTION
       Deletes  the  specified  anomaly detection model from your account. For
       more information about how to delete an anomaly  detection  model,  see
       Deleting an anomaly detection model in the CloudWatch User Guide .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            delete-anomaly-detector
          [--namespace <value>]
          [--metric-name <value>]
          [--dimensions <value>]
          [--stat <value>]
          [--single-metric-anomaly-detector <value>]
          [--metric-math-anomaly-detector <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --namespace (string)
          The namespace associated with the anomaly detection model to delete.

       --metric-name (string)
          The  metric  name  associated  with  the  anomaly detection model to
          delete.

       --dimensions (list)
          The metric dimensions associated with the anomaly detection model to
          delete.

          (structure)
              A dimension is a name/value pair that is part of the identity of
              a metric. Because dimensions are part of the  unique  identifier
              for  a  metric, whenever you add a unique name/value pair to one
              of your metrics, you are creating a new variation of  that  met-
              ric.  For example, many Amazon EC2 metrics publish InstanceId as
              a dimension name, and the actual instance ID as  the  value  for
              that dimension.

              You can assign up to 30 dimensions to a metric.

              Name -> (string)
                 The  name of the dimension. Dimension names must contain only
                 ASCII characters, must include at  least  one  non-whitespace
                 character, and cannot start with a colon (: ).

              Value -> (string)
                 The  value  of  the  dimension. Dimension values must contain
                 only  ASCII  characters  and  must  include  at   least   one
                 non-whitespace character.

       Shorthand Syntax:

          Name=string,Value=string ...

       JSON Syntax:

          [
            {
              "Name": "string",
              "Value": "string"
            }
            ...
          ]

       --stat (string)
          The statistic associated with the anomaly detection model to delete.

       --single-metric-anomaly-detector (structure)
          A single metric anomaly detector to be deleted.

          When using SingleMetricAnomalyDetector , you cannot include the fol-
          lowing parameters in the same operation:

          o Dimensions ,

          o MetricName

          o Namespace

          o Stat

          o the MetricMathAnomalyDetector parameters of DeleteAnomalyDetector-
            Input

          Instead,  specify  the  single metric anomaly detector attributes as
          part of the SingleMetricAnomalyDetector property.

          Namespace -> (string)
              The namespace of the metric  to  create  the  anomaly  detection
              model for.

          MetricName -> (string)
              The  name  of  the  metric to create the anomaly detection model
              for.

          Dimensions -> (list)
              The metric dimensions to create the anomaly detection model for.

              (structure)
                 A dimension is a name/value pair that is part of the identity
                 of  a metric. Because dimensions are part of the unique iden-
                 tifier for a metric, whenever you  add  a  unique  name/value
                 pair to one of your metrics, you are creating a new variation
                 of that metric. For example, many Amazon EC2 metrics  publish
                 InstanceId as a dimension name, and the actual instance ID as
                 the value for that dimension.

                 You can assign up to 30 dimensions to a metric.

                 Name -> (string)
                     The name of the dimension. Dimension names  must  contain
                     only   ASCII   characters,  must  include  at  least  one
                     non-whitespace character, and cannot start with  a  colon
                     (: ).

                 Value -> (string)
                     The value of the dimension. Dimension values must contain
                     only ASCII characters  and  must  include  at  least  one
                     non-whitespace character.

          Stat -> (string)
              The statistic to use for the metric and anomaly detection model.

       Shorthand Syntax:

          Namespace=string,MetricName=string,Dimensions=[{Name=string,Value=string},{Name=string,Value=string}],Stat=string

       JSON Syntax:

          {
            "Namespace": "string",
            "MetricName": "string",
            "Dimensions": [
              {
                "Name": "string",
                "Value": "string"
              }
              ...
            ],
            "Stat": "string"
          }

       --metric-math-anomaly-detector (structure)
          The metric math anomaly detector to be deleted.

          When  using MetricMathAnomalyDetector , you cannot include following
          parameters in the same operation:

          o Dimensions ,

          o MetricName

          o Namespace

          o Stat

          o the SingleMetricAnomalyDetector parameters of  DeleteAnomalyDetec-
            torInput

          Instead, specify the metric math anomaly detector attributes as part
          of the MetricMathAnomalyDetector property.

          MetricDataQueries -> (list)
              An array of metric data query structures  that  enables  you  to
              create  an anomaly detector based on the result of a metric math
              expression. Each item in MetricDataQueries gets a metric or per-
              forms  a  math  expression. One item in MetricDataQueries is the
              expression that provides the time series that the anomaly detec-
              tor  uses  as input. Designate the expression by setting Return-
              Data to True for this object in the array. For all other expres-
              sions  and metrics, set ReturnData to False . The designated ex-
              pression must return a single time series.

              (structure)
                 This structure is used in both  GetMetricData  and  PutMetri-
                 cAlarm . The supported use of this structure is different for
                 those two operations.

                 When used in GetMetricData , it indicates the metric data  to
                 return,  and whether this call is just retrieving a batch set
                 of data for one metric, or is performing a  Metrics  Insights
                 query  or  a math expression. A single GetMetricData call can
                 include up to 500 MetricDataQuery structures.

                 When used in PutMetricAlarm , it enables  you  to  create  an
                 alarm based on a metric math expression. Each MetricDataQuery
                 in the array specifies either a metric to retrieve, or a math
                 expression  to  be  performed  on retrieved metrics. A single
                 PutMetricAlarm call can  include  up  to  20  MetricDataQuery
                 structures  in  the  array.  The 20 structures can include as
                 many as 10 structures that contain a MetricStat parameter  to
                 retrieve  a metric, and as many as 10 structures that contain
                 the Expression parameter to perform  a  math  expression.  Of
                 those  Expression structures, one must have True as the value
                 for ReturnData . The result of this expression is  the  value
                 the alarm watches.

                 Any expression used in a PutMetricAlarm operation must return
                 a single time series. For more information, see  Metric  Math
                 Syntax and Functions in the Amazon CloudWatch User Guide .

                 Some  of the parameters of this structure also have different
                 uses whether you are using this structure in a  GetMetricData
                 operation  or  a  PutMetricAlarm operation. These differences
                 are explained in the following parameter list.

                 Id -> (string)
                     A short name used to tie this object to  the  results  in
                     the  response.  This  name must be unique within a single
                     call to GetMetricData . If you are  performing  math  ex-
                     pressions  on this set of data, this name represents that
                     data and can serve as a variable in the mathematical  ex-
                     pression.  The valid characters are letters, numbers, and
                     underscore. The first character must be a lowercase  let-
                     ter.

                 MetricStat -> (structure)
                     The metric to be returned, along with statistics, period,
                     and units. Use this parameter only if this object is  re-
                     trieving a metric and not performing a math expression on
                     returned data.

                     Within one MetricDataQuery object, you must  specify  ei-
                     ther Expression or MetricStat but not both.

                     Metric -> (structure)
                        The metric to return, including the metric name, name-
                        space, and dimensions.

                        Namespace -> (string)
                            The namespace of the metric.

                        MetricName -> (string)
                            The name of the metric. This is a required field.

                        Dimensions -> (list)
                            The dimensions for the metric.

                            (structure)
                               A dimension is a name/value pair that  is  part
                               of the identity of a metric. Because dimensions
                               are part of the unique identifier for a metric,
                               whenever  you  add  a unique name/value pair to
                               one of your metrics, you  are  creating  a  new
                               variation  of  that  metric.  For example, many
                               Amazon EC2 metrics publish InstanceId as a  di-
                               mension name, and the actual instance ID as the
                               value for that dimension.

                               You can assign up to 30 dimensions to a metric.

                               Name -> (string)
                                   The name of the dimension. Dimension  names
                                   must  contain  only  ASCII characters, must
                                   include at least one non-whitespace charac-
                                   ter, and cannot start with a colon (: ).

                               Value -> (string)
                                   The  value of the dimension. Dimension val-
                                   ues must contain only ASCII characters  and
                                   must  include  at  least one non-whitespace
                                   character.

                     Period -> (integer)
                        The granularity, in  seconds,  of  the  returned  data
                        points.  For metrics with regular resolution, a period
                        can be as short as one minute (60 seconds) and must be
                        a multiple of 60. For high-resolution metrics that are
                        collected at intervals of less than  one  minute,  the
                        period can be 1, 5, 10, 30, 60, or any multiple of 60.
                        High-resolution metrics are those metrics stored by  a
                        PutMetricData  call  that includes a StorageResolution
                        of 1 second.

                        If the StartTime parameter specifies a time stamp that
                        is  greater than 3 hours ago, you must specify the pe-
                        riod as follows or no data points in that  time  range
                        is returned:

                        o Start  time  between 3 hours and 15 days ago - Use a
                          multiple of 60 seconds (1 minute).

                        o Start time between 15 and 63 days ago - Use a multi-
                          ple of 300 seconds (5 minutes).

                        o Start time greater than 63 days ago - Use a multiple
                          of 3600 seconds (1 hour).

                     Stat -> (string)
                        The statistic to return. It can include any CloudWatch
                        statistic or extended statistic.

                     Unit -> (string)
                        When  you are using a Put operation, this defines what
                        unit you want to use when storing the metric.

                        In a Get operation, if you omit  Unit  then  all  data
                        that  was  collected  with any unit is returned, along
                        with the corresponding units that were specified  when
                        the  data was reported to CloudWatch. If you specify a
                        unit, the operation returns only data  that  was  col-
                        lected with that unit specified. If you specify a unit
                        that does not match the data collected, the results of
                        the  operation  are  null. CloudWatch does not perform
                        unit conversions.

                 Expression -> (string)
                     This field can contain either a Metrics  Insights  query,
                     or  a  metric  math expression to be performed on the re-
                     turned data. For more information about Metrics  Insights
                     queries, see Metrics Insights query components and syntax
                     in the Amazon CloudWatch User Guide .

                     A math expression can use the Id of the other metrics  or
                     queries  to  refer to those metrics, and can also use the
                     Id of other expressions to use the result  of  those  ex-
                     pressions. For more information about metric math expres-
                     sions, see Metric Math Syntax and Functions in the Amazon
                     CloudWatch User Guide .

                     Within  each MetricDataQuery object, you must specify ei-
                     ther Expression or MetricStat but not both.

                 Label -> (string)
                     A human-readable label for  this  metric  or  expression.
                     This  is  especially  useful if this is an expression, so
                     that you know what the value represents. If the metric or
                     expression is shown in a CloudWatch dashboard widget, the
                     label is shown. If Label is omitted, CloudWatch generates
                     a default.

                     You  can put dynamic expressions into a label, so that it
                     is more descriptive. For more information, see Using  Dy-
                     namic Labels .

                 ReturnData -> (boolean)
                     When  used  in  GetMetricData  ,  this  option  indicates
                     whether to return the timestamps and raw data  values  of
                     this  metric.  If you are performing this call just to do
                     math expressions and do not also need the  raw  data  re-
                     turned, you can specify False . If you omit this, the de-
                     fault of True is used.

                     When used in PutMetricAlarm , specify True  for  the  one
                     expression result to use as the alarm. For all other met-
                     rics and expressions in the  same  PutMetricAlarm  opera-
                     tion, specify ReturnData as False.

                 Period -> (integer)
                     The granularity, in seconds, of the returned data points.
                     For metrics with regular resolution, a period can  be  as
                     short  as  one minute (60 seconds) and must be a multiple
                     of 60. For high-resolution metrics that are collected  at
                     intervals  of  less than one minute, the period can be 1,
                     5, 10, 30, 60, or any  multiple  of  60.  High-resolution
                     metrics are those metrics stored by a PutMetricData oper-
                     ation that includes a StorageResolution of 1 second .

                 AccountId -> (string)
                     The ID of the account where the metrics are  located,  if
                     this is a cross-account alarm.

                     Use  this field only for PutMetricAlarm operations. It is
                     not used in GetMetricData operations.

       JSON Syntax:

          {
            "MetricDataQueries": [
              {
                "Id": "string",
                "MetricStat": {
                  "Metric": {
                    "Namespace": "string",
                    "MetricName": "string",
                    "Dimensions": [
                      {
                        "Name": "string",
                        "Value": "string"
                      }
                      ...
                    ]
                  },
                  "Period": integer,
                  "Stat": "string",
                  "Unit": "Seconds"|"Microseconds"|"Milliseconds"|"Bytes"|"Kilobytes"|"Megabytes"|"Gigabytes"|"Terabytes"|"Bits"|"Kilobits"|"Megabits"|"Gigabits"|"Terabits"|"Percent"|"Count"|"Bytes/Second"|"Kilobytes/Second"|"Megabytes/Second"|"Gigabytes/Second"|"Terabytes/Second"|"Bits/Second"|"Kilobits/Second"|"Megabits/Second"|"Gigabits/Second"|"Terabits/Second"|"Count/Second"|"None"
                },
                "Expression": "string",
                "Label": "string",
                "ReturnData": true|false,
                "Period": integer,
                "AccountId": "string"
              }
              ...
            ]
          }

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       None



                                                     DELETE-ANOMALY-DETECTOR()
