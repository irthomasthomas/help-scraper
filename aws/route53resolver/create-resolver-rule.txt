CREATE-RESOLVER-RULE()                                  CREATE-RESOLVER-RULE()



NAME
       create-resolver-rule -

DESCRIPTION
       For  DNS  queries that originate in your VPCs, specifies which Resolver
       endpoint the queries pass through, one domain name  that  you  want  to
       forward  to  your network, and the IP addresses of the DNS resolvers in
       your network.

       See also: AWS API Documentation

SYNOPSIS
            create-resolver-rule
          --creator-request-id <value>
          [--name <value>]
          --rule-type <value>
          [--domain-name <value>]
          [--target-ips <value>]
          [--resolver-endpoint-id <value>]
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --creator-request-id (string)
          A unique string that identifies the request and that  allows  failed
          requests  to  be  retried  without the risk of running the operation
          twice. CreatorRequestId can be any unique  string,  for  example,  a
          date/time stamp.

       --name (string)
          A  friendly  name  that  lets you easily find a rule in the Resolver
          dashboard in the Route 53 console.

       --rule-type (string)
          When you want to forward DNS queries for specified  domain  name  to
          resolvers on your network, specify FORWARD .

          When  you have a forwarding rule to forward DNS queries for a domain
          to your network and you want Resolver to process queries for a  sub-
          domain of that domain, specify SYSTEM .

          For  example, to forward DNS queries for example.com to resolvers on
          your network, you create a rule and specify FORWARD for  RuleType  .
          To then have Resolver process queries for apex.example.com, you cre-
          ate a rule and specify SYSTEM for RuleType .

          Currently, only Resolver can create rules that have a value  of  RE-
          CURSIVE for RuleType .

          Possible values:

          o FORWARD

          o SYSTEM

          o RECURSIVE

       --domain-name (string)
          DNS  queries  for this domain name are forwarded to the IP addresses
          that you specify in TargetIps . If a query matches multiple Resolver
          rules  (example.com  and  www.example.com), outbound DNS queries are
          routed using the Resolver rule that contains the most  specific  do-
          main name (www.example.com).

       --target-ips (list)
          The  IPs  that  you want Resolver to forward DNS queries to. You can
          specify either Ipv4 or Ipv6 addresses but not both in the same rule.
          Separate IP addresses with a space.
              TargetIps  is available only when the value of Rule type is FOR-
              WARD .

          (structure)
              In a CreateResolverRule request, an array of the  IPs  that  you
              want to forward DNS queries to.

              Ip -> (string)
                 One IPv4 address that you want to forward DNS queries to.

              Port -> (integer)
                 The port at Ip that you want to forward DNS queries to.

              Ipv6 -> (string)
                 One IPv6 address that you want to forward DNS queries to.

              Protocol -> (string)
                 The  protocols for the Resolver endpoints. DoH-FIPS is appli-
                 cable for inbound endpoints only.

                 For an inbound endpoint you can apply the protocols  as  fol-
                 lows:

                 o Do53 and DoH in combination.

                 o Do53 and DoH-FIPS in combination.

                 o Do53 alone.

                 o DoH alone.

                 o DoH-FIPS alone.

                 o None, which is treated as Do53.

                 For  an outbound endpoint you can apply the protocols as fol-
                 lows:

                 o Do53 and DoH in combination.

                 o Do53 alone.

                 o DoH alone.

                 o None, which is treated as Do53.

              ServerNameIndication -> (string)
                 The Server Name Indication of the DoH server that you want to
                 forward  queries to. This is only used if the Protocol of the
                 TargetAddress is DoH .

       Shorthand Syntax:

          Ip=string,Port=integer,Ipv6=string,Protocol=string,ServerNameIndication=string ...

       JSON Syntax:

          [
            {
              "Ip": "string",
              "Port": integer,
              "Ipv6": "string",
              "Protocol": "DoH"|"Do53"|"DoH-FIPS",
              "ServerNameIndication": "string"
            }
            ...
          ]

       --resolver-endpoint-id (string)
          The ID of the outbound Resolver endpoint that you  want  to  use  to
          route  DNS queries to the IP addresses that you specify in TargetIps
          .

       --tags (list)
          A list of the tag keys and values that you want  to  associate  with
          the endpoint.

          (structure)
              One  tag  that  you want to add to the specified resource. A tag
              consists of a Key (a name for the tag) and a Value .

              Key -> (string)
                 The name for the tag. For example, if you want  to  associate
                 Resolver resources with the account IDs of your customers for
                 billing purposes, the value of Key might be account-id .

              Value -> (string)
                 The value for the tag. For example, if Key  is  account-id  ,
                 then  Value  might  be  the  ID  of the customer account that
                 you're creating the resource for.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a Resolver rule

       The  following create-resolver-rule example creates a Resolver forward-
       ing rule. The rule uses the outbound endpoint rslvr-out-d5e5920e37exam-
       ple  to  forward  DNS  queries  for  example.com  to  the  IP addresses
       10.24.8.75 and 10.24.8.156.

          aws route53resolver create-resolver-rule \
              --creator-request-id 2020-01-02-18:47 \
              --domain-name example.com \
              --name my-rule \
              --resolver-endpoint-id rslvr-out-d5e5920e37example \
              --rule-type FORWARD \
              --target-ips "Ip=10.24.8.75" "Ip=10.24.8.156"

       Output:

          {
              "ResolverRule": {
                  "Status": "COMPLETE",
                  "RuleType": "FORWARD",
                  "ResolverEndpointId": "rslvr-out-d5e5920e37example",
                  "Name": "my-rule",
                  "DomainName": "example.com.",
                  "CreationTime": "2022-05-10T21:35:30.923187Z",
                  "TargetIps": [
                      {
                          "Ip": "10.24.8.75",
                          "Port": 53
                      },
                      {
                          "Ip": "10.24.8.156",
                          "Port": 53
                      }
                  ],
                  "CreatorRequestId": "2022-05-10-16:33",
                  "ModificationTime": "2022-05-10T21:35:30.923187Z",
                  "ShareStatus": "NOT_SHARED",
                  "Arn": "arn:aws:route53resolver:us-east-1:111117012054:resolver-rule/rslvr-rr-b1e0b905e93611111",
                  "OwnerId": "111111111111",
                  "Id": "rslvr-rr-rslvr-rr-b1e0b905e93611111",
                  "StatusMessage": "[Trace id: 1-22222222-3e56afcc71a3724664f22e24] Successfully created Resolver Rule."
              }
          }

OUTPUT
       ResolverRule -> (structure)
          Information about the CreateResolverRule request, including the sta-
          tus of the request.

          Id -> (string)
              The ID that Resolver assigned to the Resolver rule when you cre-
              ated it.

          CreatorRequestId -> (string)
              A unique string that you specified when you created the Resolver
              rule.  CreatorRequestId identifies the request and allows failed
              requests to be retried without the risk of running the operation
              twice.

          Arn -> (string)
              The  ARN  (Amazon Resource Name) for the Resolver rule specified
              by Id .

          DomainName -> (string)
              DNS queries for this domain name are forwarded  to  the  IP  ad-
              dresses  that  are  specified  in TargetIps . If a query matches
              multiple Resolver rules (example.com and  www.example.com),  the
              query  is  routed using the Resolver rule that contains the most
              specific domain name (www.example.com).

          Status -> (string)
              A code that specifies the current status of the Resolver rule.

          StatusMessage -> (string)
              A detailed description of the status of a Resolver rule.

          RuleType -> (string)
              When you want to forward DNS queries for specified  domain  name
              to resolvers on your network, specify FORWARD .

              When you have a forwarding rule to forward DNS queries for a do-
              main to your network and you want Resolver  to  process  queries
              for a subdomain of that domain, specify SYSTEM .

              For example, to forward DNS queries for example.com to resolvers
              on your network, you create a rule and specify FORWARD for Rule-
              Type  .  To  then  have  Resolver process queries for apex.exam-
              ple.com, you create a rule and specify SYSTEM for RuleType .

              Currently, only Resolver can create rules that have a  value  of
              RECURSIVE for RuleType .

          Name -> (string)
              The  name  for  the  Resolver rule, which you specified when you
              created the Resolver rule.

          TargetIps -> (list)
              An array that contains the IP addresses and ports that  an  out-
              bound endpoint forwards DNS queries to. Typically, these are the
              IP addresses of DNS resolvers on your network.

              (structure)
                 In a CreateResolverRule request, an array of the IPs that you
                 want to forward DNS queries to.

                 Ip -> (string)
                     One IPv4 address that you want to forward DNS queries to.

                 Port -> (integer)
                     The port at Ip that you want to forward DNS queries to.

                 Ipv6 -> (string)
                     One IPv6 address that you want to forward DNS queries to.

                 Protocol -> (string)
                     The protocols for the Resolver endpoints. DoH-FIPS is ap-
                     plicable for inbound endpoints only.

                     For an inbound endpoint you can apply  the  protocols  as
                     follows:

                     o Do53 and DoH in combination.

                     o Do53 and DoH-FIPS in combination.

                     o Do53 alone.

                     o DoH alone.

                     o DoH-FIPS alone.

                     o None, which is treated as Do53.

                     For  an  outbound endpoint you can apply the protocols as
                     follows:

                     o Do53 and DoH in combination.

                     o Do53 alone.

                     o DoH alone.

                     o None, which is treated as Do53.

                 ServerNameIndication -> (string)
                     The Server Name Indication of the  DoH  server  that  you
                     want to forward queries to. This is only used if the Pro-
                     tocol of the TargetAddress is DoH .

          ResolverEndpointId -> (string)
              The ID of the endpoint that the rule is associated with.

          OwnerId -> (string)
              When a rule is shared with another Amazon Web Services  account,
              the account ID of the account that the rule is shared with.

          ShareStatus -> (string)
              Whether  the  rule is shared and, if so, whether the current ac-
              count is sharing the rule with another account, or  another  ac-
              count is sharing the rule with the current account.

          CreationTime -> (string)
              The  date  and  time that the Resolver rule was created, in Unix
              time format and Coordinated Universal Time (UTC).

          ModificationTime -> (string)
              The date and time that the Resolver rule was  last  updated,  in
              Unix time format and Coordinated Universal Time (UTC).



                                                        CREATE-RESOLVER-RULE()
