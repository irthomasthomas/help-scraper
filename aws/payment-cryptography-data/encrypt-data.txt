ENCRYPT-DATA()                                                  ENCRYPT-DATA()



NAME
       encrypt-data -

DESCRIPTION
       Encrypts  plaintext  data to ciphertext using symmetric, asymmetric, or
       DUKPT data encryption key. For more information, see  Encrypt  data  in
       the Amazon Web Services Payment Cryptography User Guide .

       You  can  generate an encryption key within Amazon Web Services Payment
       Cryptography by calling CreateKey . You can import your own  encryption
       key  by  calling ImportKey . For this operation, the key must have Key-
       ModesOfUse set to Encrypt . In asymmetric encryption, plaintext is  en-
       crypted  using public component. You can import the public component of
       an asymmetric key pair created  outside  Amazon  Web  Services  Payment
       Cryptography by calling ImportKey ).

       for  symmetric  and DUKPT encryption, Amazon Web Services Payment Cryp-
       tography supports TDES and AES algorithms. For  asymmetric  encryption,
       Amazon  Web Services Payment Cryptography supports RSA . To encrypt us-
       ing DUKPT, you must already have a DUKPT key in your account with  Key-
       ModesOfUse  set  to  DeriveKey , or you can generate a new DUKPT key by
       calling CreateKey .

       For information about valid keys for this operation, see  Understanding
       key attributes and Key types for specific data operations in the Amazon
       Web Services Payment Cryptography User Guide .
          Cross-account use : This operation can't be  used  across  different
          Amazon Web Services accounts.

          Related operations:

       o DecryptData

       o GetPublicCertificate

       o ImportKey

       o ReEncryptData

       See also: AWS API Documentation

SYNOPSIS
            encrypt-data
          --encryption-attributes <value>
          --key-identifier <value>
          --plain-text <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --encryption-attributes (tagged union structure)
          The encryption key type and attributes for plaintext encryption.

          NOTE:
              This  is a Tagged Union structure. Only one of the following top
              level keys can be set: Asymmetric, Dukpt, Symmetric.

          Asymmetric -> (structure)
              Parameters for plaintext encryption using asymmetric keys.

              PaddingType -> (string)
                 The padding to be included with the data.

          Dukpt -> (structure)
              Parameters that are required to  encrypt  plaintext  data  using
              DUKPT.

              DukptKeyDerivationType -> (string)
                 The key type encrypted using DUKPT from a Base Derivation Key
                 (BDK) and Key Serial Number (KSN). This must be less than  or
                 equal  to the strength of the BDK. For example, you can't use
                 AES_128 as  a  derivation  type  for  a  BDK  of  AES_128  or
                 TDES_2KEY

              DukptKeyVariant -> (string)
                 The  type of use of DUKPT, which can be incoming data decryp-
                 tion, outgoing data encryption, or both.

              InitializationVector -> (string)
                 An input to cryptographic primitive used to provide  the  in-
                 tial  state.  Typically  the InitializationVector must have a
                 random or psuedo-random value, but sometimes it only needs to
                 be  unpredictable  or  unique.  If you don't provide a value,
                 Amazon Web Services Payment Cryptography generates  a  random
                 value.

              KeySerialNumber -> (string)
                 The  unique  identifier known as Key Serial Number (KSN) that
                 comes  from  an  encrypting  device  using  DUKPT  encryption
                 method.  The KSN is derived from the encrypting device unique
                 identifier and an internal transaction counter.

              Mode -> (string)
                 The block cipher mode of operation.  Block  ciphers  are  de-
                 signed to encrypt a block of data of fixed size, for example,
                 128 bits. The size of the input block is usually same as  the
                 size  of the encrypted output block, while the key length can
                 be different. A mode of operation describes how to repeatedly
                 apply a cipher's single-block operation to securely transform
                 amounts of data larger than a block.

                 The default is CBC.

          Symmetric -> (structure)
              Parameters that are required to perform encryption  and  decryp-
              tion using symmetric keys.

              InitializationVector -> (string)
                 An  input  to cryptographic primitive used to provide the in-
                 tial state. The InitializationVector  is  typically  required
                 have  a  random or psuedo-random value, but sometimes it only
                 needs to be unpredictable or unique. If a value is  not  pro-
                 vided,  Amazon  Web Services Payment Cryptography generates a
                 random value.

              Mode -> (string)
                 The block cipher mode of operation.  Block  ciphers  are  de-
                 signed to encrypt a block of data of fixed size (for example,
                 128 bits). The size of the input block is usually same as the
                 size  of the encrypted output block, while the key length can
                 be different. A mode of operation describes how to repeatedly
                 apply a cipher's single-block operation to securely transform
                 amounts of data larger than a block.

              PaddingType -> (string)
                 The padding to be included with the data.

       Shorthand Syntax:

          Asymmetric={PaddingType=string},Dukpt={DukptKeyDerivationType=string,DukptKeyVariant=string,InitializationVector=string,KeySerialNumber=string,Mode=string},Symmetric={InitializationVector=string,Mode=string,PaddingType=string}

       JSON Syntax:

          {
            "Asymmetric": {
              "PaddingType": "PKCS1"|"OAEP_SHA1"|"OAEP_SHA256"|"OAEP_SHA512"
            },
            "Dukpt": {
              "DukptKeyDerivationType": "TDES_2KEY"|"TDES_3KEY"|"AES_128"|"AES_192"|"AES_256",
              "DukptKeyVariant": "BIDIRECTIONAL"|"REQUEST"|"RESPONSE",
              "InitializationVector": "string",
              "KeySerialNumber": "string",
              "Mode": "ECB"|"CBC"
            },
            "Symmetric": {
              "InitializationVector": "string",
              "Mode": "ECB"|"CBC"|"CFB"|"CFB1"|"CFB8"|"CFB64"|"CFB128"|"OFB",
              "PaddingType": "PKCS1"|"OAEP_SHA1"|"OAEP_SHA256"|"OAEP_SHA512"
            }
          }

       --key-identifier (string)
          The keyARN of the encryption key that Amazon  Web  Services  Payment
          Cryptography uses for plaintext encryption.

       --plain-text (string)
          The plaintext to be encrypted.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       CipherText -> (string)
          The encrypted ciphertext.

       KeyArn -> (string)
          The keyARN of the encryption key that Amazon  Web  Services  Payment
          Cryptography uses for plaintext encryption.

       KeyCheckValue -> (string)
          The  key check value (KCV) of the encryption key. The KCV is used to
          check if all parties holding a given key have the same key or to de-
          tect  that a key has changed. Amazon Web Services Payment Cryptogra-
          phy calculates the KCV by using standard  algorithms,  typically  by
          encrypting 8 or 16 bytes or "00" or "01" and then truncating the re-
          sult to the first 3 bytes, or 6 hex digits, of the resulting crypto-
          gram.



                                                                ENCRYPT-DATA()
