GENERATE-MAC()                                                  GENERATE-MAC()



NAME
       generate-mac -

DESCRIPTION
       Generates  a Message Authentication Code (MAC) cryptogram within Amazon
       Web Services Payment Cryptography.

       You can use this operation to authenticate card-related data  by  using
       known data values to generate MAC for data validation between the send-
       ing and receiving parties. This operation uses message data,  a  secret
       encryption  key  and  MAC  algorithm to generate a unique MAC value for
       transmission. The receiving party of the MAC must use the same  message
       data,  secret encryption key and MAC algorithm to reproduce another MAC
       value for comparision.

       You can use this operation to generate a DUPKT, CMAC, HMAC or  EMV  MAC
       by  setting  generation attributes and algorithm to the associated val-
       ues. The MAC generation encryption  key  must  have  valid  values  for
       KeyUsage  such  as  TR31_M7_HMAC_KEY  for HMAC generation, and they key
       must have KeyModesOfUse set to Generate and Verify .

       For information about valid keys for this operation, see  Understanding
       key attributes and Key types for specific data operations in the Amazon
       Web Services Payment Cryptography User Guide .
          Cross-account use : This operation can't be  used  across  different
          Amazon Web Services accounts.

          Related operations:

       o VerifyMac

       See also: AWS API Documentation

SYNOPSIS
            generate-mac
          --generation-attributes <value>
          --key-identifier <value>
          [--mac-length <value>]
          --message-data <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --generation-attributes (tagged union structure)
          The attributes and data values to use for MAC generation within Ama-
          zon Web Services Payment Cryptography.

          NOTE:
              This is a Tagged Union structure. Only one of the following  top
              level  keys  can be set: Algorithm, DukptCmac, DukptIso9797Algo-
              rithm1, DukptIso9797Algorithm3, EmvMac.

          Algorithm -> (string)
              The encryption algorithm for MAC generation or verification.

          DukptCmac -> (structure)
              Parameters that are required for MAC generation or  verification
              using DUKPT CMAC algorithm.

              DukptDerivationType -> (string)
                 The  key  type derived using DUKPT from a Base Derivation Key
                 (BDK) and Key Serial Number (KSN). This must be less than  or
                 equal  to the strength of the BDK. For example, you can't use
                 AES_128 as  a  derivation  type  for  a  BDK  of  AES_128  or
                 TDES_2KEY .

              DukptKeyVariant -> (string)
                 The  type  of  use of DUKPT, which can be MAC generation, MAC
                 verification, or both.

              KeySerialNumber -> (string)
                 The unique identifier known as Key Serial Number  (KSN)  that
                 comes  from  an  encrypting  device  using  DUKPT  encryption
                 method. The KSN is derived from the encrypting device  unique
                 identifier and an internal transaction counter.

          DukptIso9797Algorithm1 -> (structure)
              Parameters  that are required for MAC generation or verification
              using DUKPT ISO 9797 algorithm1.

              DukptDerivationType -> (string)
                 The key type derived using DUKPT from a Base  Derivation  Key
                 (BDK)  and Key Serial Number (KSN). This must be less than or
                 equal to the strength of the BDK. For example, you can't  use
                 AES_128  as  a  derivation  type  for  a  BDK  of  AES_128 or
                 TDES_2KEY .

              DukptKeyVariant -> (string)
                 The type of use of DUKPT, which can be  MAC  generation,  MAC
                 verification, or both.

              KeySerialNumber -> (string)
                 The  unique  identifier known as Key Serial Number (KSN) that
                 comes  from  an  encrypting  device  using  DUKPT  encryption
                 method.  The KSN is derived from the encrypting device unique
                 identifier and an internal transaction counter.

          DukptIso9797Algorithm3 -> (structure)
              Parameters that are required for MAC generation or  verification
              using DUKPT ISO 9797 algorithm3.

              DukptDerivationType -> (string)
                 The  key  type derived using DUKPT from a Base Derivation Key
                 (BDK) and Key Serial Number (KSN). This must be less than  or
                 equal  to the strength of the BDK. For example, you can't use
                 AES_128 as  a  derivation  type  for  a  BDK  of  AES_128  or
                 TDES_2KEY .

              DukptKeyVariant -> (string)
                 The  type  of  use of DUKPT, which can be MAC generation, MAC
                 verification, or both.

              KeySerialNumber -> (string)
                 The unique identifier known as Key Serial Number  (KSN)  that
                 comes  from  an  encrypting  device  using  DUKPT  encryption
                 method. The KSN is derived from the encrypting device  unique
                 identifier and an internal transaction counter.

          EmvMac -> (structure)
              Parameters  that are required for MAC generation or verification
              using EMV MAC algorithm.

              MajorKeyDerivationMode -> (string)
                 The method to use when deriving the master key  for  EMV  MAC
                 generation or verification.

              PanSequenceNumber -> (string)
                 A  number  that  identifies  and differentiates payment cards
                 with the same Primary Account Number (PAN).

              PrimaryAccountNumber -> (string)
                 The Primary Account Number (PAN), a unique identifier  for  a
                 payment  credit  or  debit  card and associates the card to a
                 specific account holder.

              SessionKeyDerivationMode -> (string)
                 The method of deriving a session key for EMV  MAC  generation
                 or verification.

              SessionKeyDerivationValue -> (tagged union structure)
                 Parameters  that are required to generate session key for EMV
                 generation and verification.

                 NOTE:
                     This is a Tagged Union structure. Only one of the follow-
                     ing top level keys can be set: ApplicationCryptogram, Ap-
                     plicationTransactionCounter.

                 ApplicationCryptogram -> (string)
                     The cryptogram provided by the terminal  during  transac-
                     tion processing.

                 ApplicationTransactionCounter -> (string)
                     The  transaction counter that is provided by the terminal
                     during transaction processing.

       Shorthand Syntax:

          Algorithm=string,DukptCmac={DukptDerivationType=string,DukptKeyVariant=string,KeySerialNumber=string},DukptIso9797Algorithm1={DukptDerivationType=string,DukptKeyVariant=string,KeySerialNumber=string},DukptIso9797Algorithm3={DukptDerivationType=string,DukptKeyVariant=string,KeySerialNumber=string},EmvMac={MajorKeyDerivationMode=string,PanSequenceNumber=string,PrimaryAccountNumber=string,SessionKeyDerivationMode=string,SessionKeyDerivationValue={ApplicationCryptogram=string,ApplicationTransactionCounter=string}}

       JSON Syntax:

          {
            "Algorithm": "ISO9797_ALGORITHM1"|"ISO9797_ALGORITHM3"|"CMAC"|"HMAC_SHA224"|"HMAC_SHA256"|"HMAC_SHA384"|"HMAC_SHA512",
            "DukptCmac": {
              "DukptDerivationType": "TDES_2KEY"|"TDES_3KEY"|"AES_128"|"AES_192"|"AES_256",
              "DukptKeyVariant": "BIDIRECTIONAL"|"REQUEST"|"RESPONSE",
              "KeySerialNumber": "string"
            },
            "DukptIso9797Algorithm1": {
              "DukptDerivationType": "TDES_2KEY"|"TDES_3KEY"|"AES_128"|"AES_192"|"AES_256",
              "DukptKeyVariant": "BIDIRECTIONAL"|"REQUEST"|"RESPONSE",
              "KeySerialNumber": "string"
            },
            "DukptIso9797Algorithm3": {
              "DukptDerivationType": "TDES_2KEY"|"TDES_3KEY"|"AES_128"|"AES_192"|"AES_256",
              "DukptKeyVariant": "BIDIRECTIONAL"|"REQUEST"|"RESPONSE",
              "KeySerialNumber": "string"
            },
            "EmvMac": {
              "MajorKeyDerivationMode": "EMV_OPTION_A"|"EMV_OPTION_B",
              "PanSequenceNumber": "string",
              "PrimaryAccountNumber": "string",
              "SessionKeyDerivationMode": "EMV_COMMON_SESSION_KEY"|"EMV2000"|"AMEX"|"MASTERCARD_SESSION_KEY"|"VISA",
              "SessionKeyDerivationValue": {
                "ApplicationCryptogram": "string",
                "ApplicationTransactionCounter": "string"
              }
            }
          }

       --key-identifier (string)
          The keyARN of the MAC generation encryption key.

       --mac-length (integer)
          The length of a MAC under generation.

       --message-data (string)
          The data for which a MAC is under generation.  This  value  must  be
          hexBinary.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To generate a MAC

       The   following   generate-card-validation-data   example  generates  a
       Hash-Based Message Authentication Code (HMAC) for card data authentica-
       tion  using  the  algorithm HMAC_SHA256 and an HMAC encryption key. The
       key must have KeyUsage set to  TR31_M7_HMAC_KEY  and  KeyModesOfUse  to
       Generate.

          aws payment-cryptography-data generate-mac \
              --key-identifier arn:aws:payment-cryptography:us-east-2:123456789012:key/kwapwa6qaifllw2h \
              --message-data "3b313038383439303031303733393431353d32343038323236303030373030303f33" \
              --generation-attributes Algorithm=HMAC_SHA256

       Output:

          {
              "KeyArn": "arn:aws:payment-cryptography:us-east-2:123456789012:key/kwapwa6qaifllw2h,
              "KeyCheckValue": "2976E7",
              "Mac": "ED87F26E961C6D0DDB78DA5038AA2BDDEA0DCE03E5B5E96BDDD494F4A7AA470C"
          }

       For  more information, see Generate MAC in the AWS Payment Cryptography
       User Guide.

OUTPUT
       KeyArn -> (string)
          The keyARN of the encryption key that Amazon  Web  Services  Payment
          Cryptography uses for MAC generation.

       KeyCheckValue -> (string)
          The  key check value (KCV) of the encryption key. The KCV is used to
          check if all parties holding a given key have the same key or to de-
          tect that a key has changed.

          Amazon  Web Services Payment Cryptography computes the KCV according
          to the CMAC specification.

       Mac -> (string)
          The MAC cryptogram generated  within  Amazon  Web  Services  Payment
          Cryptography.



                                                                GENERATE-MAC()
