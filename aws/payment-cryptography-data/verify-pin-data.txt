VERIFY-PIN-DATA()                                            VERIFY-PIN-DATA()



NAME
       verify-pin-data -

DESCRIPTION
       Verifies  pin-related  data such as PIN and PIN Offset using algorithms
       including VISA PVV and IBM3624. For more information,  see  Verify  PIN
       data in the Amazon Web Services Payment Cryptography User Guide .

       This  operation  verifies PIN data for user payment card. A card holder
       PIN data is never transmitted in clear to or from Amazon  Web  Services
       Payment  Cryptography.  This  operation uses PIN Verification Key (PVK)
       for PIN or PIN Offset generation and then encrypts it using PIN Encryp-
       tion  Key  (PEK)  to  create an EncryptedPinBlock for transmission from
       Amazon Web Services Payment Cryptography.

       For information about valid keys for this operation, see  Understanding
       key attributes and Key types for specific data operations in the Amazon
       Web Services Payment Cryptography User Guide .
          Cross-account use : This operation can't be  used  across  different
          Amazon Web Services accounts.

          Related operations:

       o GeneratePinData

       o TranslatePinData

       See also: AWS API Documentation

SYNOPSIS
            verify-pin-data
          [--dukpt-attributes <value>]
          --encrypted-pin-block <value>
          --encryption-key-identifier <value>
          --pin-block-format <value>
          [--pin-data-length <value>]
          --primary-account-number <value>
          --verification-attributes <value>
          --verification-key-identifier <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --dukpt-attributes (structure)
          The attributes and values for the DUKPT encrypted PIN block data.

          DukptDerivationType -> (string)
              The  key  type  derived  using  DUKPT from a Base Derivation Key
              (BDK) and Key Serial Number (KSN). This must  be  less  than  or
              equal  to  the  strength  of the BDK. For example, you can't use
              AES_128 as a derivation type for a BDK of AES_128 or TDES_2KEY .

          KeySerialNumber -> (string)
              The unique identifier known as  Key  Serial  Number  (KSN)  that
              comes  from  an encrypting device using DUKPT encryption method.
              The KSN is derived from the encrypting device unique  identifier
              and an internal transaction counter.

       Shorthand Syntax:

          DukptDerivationType=string,KeySerialNumber=string

       JSON Syntax:

          {
            "DukptDerivationType": "TDES_2KEY"|"TDES_3KEY"|"AES_128"|"AES_192"|"AES_256",
            "KeySerialNumber": "string"
          }

       --encrypted-pin-block (string)
          The  encrypted PIN block data that Amazon Web Services Payment Cryp-
          tography verifies.

       --encryption-key-identifier (string)
          The keyARN of the encryption key under which the PIN block  data  is
          encrypted. This key type can be PEK or BDK.

       --pin-block-format (string)
          The  PIN encoding format for pin data generation as specified in ISO
          9564. Amazon Web Services Payment Cryptography supports ISO_Format_0
          and ISO_Format_3 .

          The  ISO_Format_0  PIN  block format is equivalent to the ANSI X9.8,
          VISA-1, and ECI-1 PIN block formats. It is similar to a  VISA-4  PIN
          block format. It supports a PIN from 4 to 12 digits in length.

          The ISO_Format_3 PIN block format is the same as ISO_Format_0 except
          that the fill digits are random values from 10 to 15.

          Possible values:

          o ISO_FORMAT_0

          o ISO_FORMAT_3

       --pin-data-length (integer)
          The length of PIN being verified.

       --primary-account-number (string)
          The Primary Account Number (PAN), a unique identifier for a  payment
          credit  or  debit  card that associates the card with a specific ac-
          count holder.

       --verification-attributes (tagged union structure)
          The attributes and values for PIN data verification.

          NOTE:
              This is a Tagged Union structure. Only one of the following  top
              level keys can be set: Ibm3624Pin, VisaPin.

          Ibm3624Pin -> (structure)
              Parameters that are required to generate or verify Ibm3624 PIN.

              DecimalizationTable -> (string)
                 The  decimalization  table to use for IBM 3624 PIN algorithm.
                 The table is used to convert the algorithm  intermediate  re-
                 sult from hexadecimal characters to decimal.

              PinOffset -> (string)
                 The PIN offset value.

              PinValidationData -> (string)
                 The unique data for cardholder identification.

              PinValidationDataPadCharacter -> (string)
                 The padding character for validation data.

          VisaPin -> (structure)
              Parameters that are required to generate or verify Visa PIN.

              PinVerificationKeyIndex -> (integer)
                 The  value for PIN verification index. It is used in the Visa
                 PIN algorithm to calculate the PVV (PIN Verification Value).

              VerificationValue -> (string)
                 Parameters that are required to generate or verify  Visa  PVV
                 (PIN Verification Value).

       Shorthand Syntax:

          Ibm3624Pin={DecimalizationTable=string,PinOffset=string,PinValidationData=string,PinValidationDataPadCharacter=string},VisaPin={PinVerificationKeyIndex=integer,VerificationValue=string}

       JSON Syntax:

          {
            "Ibm3624Pin": {
              "DecimalizationTable": "string",
              "PinOffset": "string",
              "PinValidationData": "string",
              "PinValidationDataPadCharacter": "string"
            },
            "VisaPin": {
              "PinVerificationKeyIndex": integer,
              "VerificationValue": "string"
            }
          }

       --verification-key-identifier (string)
          The keyARN of the PIN verification key.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To verify a PIN

       The following verify-pin-data example validates a PIN for a PAN.

          aws payment-cryptography-data verify-pin-data \
              --verification-key-identifier arn:aws:payment-cryptography:us-east-2:111122223333:key/37y2tsl45p5zjbh2 \
              --encryption-key-identifier arn:aws:payment-cryptography:us-east-2:111122223333:key/ivi5ksfsuplneuyt \
              --primary-account-number 171234567890123 \
              --pin-block-format ISO_FORMAT_0 \
              --verification-attributes VisaPin="{PinVerificationKeyIndex=1,VerificationValue=5507}" \
              --encrypted-pin-block AC17DC148BDA645E

       Output:

          {
              "VerificationKeyArn": "arn:aws:payment-cryptography:us-east-2:111122223333:key/37y2tsl45p5zjbh2",
              "VerificationKeyCheckValue": "7F2363",
              "EncryptionKeyArn": "arn:aws:payment-cryptography:us-east-2:111122223333:key/ivi5ksfsuplneuyt",
              "EncryptionKeyCheckValue": "7CC9E2",
          }

       For more information, see Verify PIN data in the AWS Payment Cryptogra-
       phy User Guide.

OUTPUT
       EncryptionKeyArn -> (string)
          The keyARN of the PEK that Amazon Web Services Payment  Cryptography
          uses for encrypted pin block generation.

       EncryptionKeyCheckValue -> (string)
          The  key check value (KCV) of the encryption key. The KCV is used to
          check if all parties holding a given key have the same key or to de-
          tect  that a key has changed. Amazon Web Services Payment Cryptogra-
          phy calculates the KCV by using standard  algorithms,  typically  by
          encrypting 8 or 16 bytes or "00" or "01" and then truncating the re-
          sult to the first 3 bytes, or 6 hex digits, of the resulting crypto-
          gram.

       VerificationKeyArn -> (string)
          The  keyARN  of the PIN encryption key that Amazon Web Services Pay-
          ment Cryptography uses for PIN or PIN Offset verification.

       VerificationKeyCheckValue -> (string)
          The key check value (KCV) of the encryption key. The KCV is used  to
          check if all parties holding a given key have the same key or to de-
          tect that a key has changed. Amazon Web Services Payment  Cryptogra-
          phy  calculates  the  KCV by using standard algorithms, typically by
          encrypting 8 or 16 bytes or "00" or "01" and then truncating the re-
          sult to the first 3 bytes, or 6 hex digits, of the resulting crypto-
          gram.



                                                             VERIFY-PIN-DATA()
