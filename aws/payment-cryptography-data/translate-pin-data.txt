TRANSLATE-PIN-DATA()                                      TRANSLATE-PIN-DATA()



NAME
       translate-pin-data -

DESCRIPTION
       Translates  encrypted  PIN  block from and to ISO 9564 formats 0,1,3,4.
       For more information, see Translate PIN data in the Amazon Web Services
       Payment Cryptography User Guide .

       PIN block translation involves changing the encrytion of PIN block from
       one encryption key to another encryption key  and  changing  PIN  block
       format  from  one  to another without PIN block data leaving Amazon Web
       Services Payment Cryptography. The encryption key transformation can be
       from PEK (Pin Encryption Key) to BDK (Base Derivation Key) for DUKPT or
       from BDK for DUKPT to PEK. Amazon  Web  Services  Payment  Cryptography
       supports TDES and AES key derivation type for DUKPT translations.

       The allowed combinations of PIN block format translations are guided by
       PCI. It is important to note that not all encrypted PIN  block  formats
       (example,  format 1) require PAN (Primary Account Number) as input. And
       as such, PIN block format that requires PAN  (example,  formats  0,3,4)
       cannot be translated to a format (format 1) that does not require a PAN
       for generation.

       For information about valid keys for this operation, see  Understanding
       key attributes and Key types for specific data operations in the Amazon
       Web Services Payment Cryptography User Guide .

       NOTE:
              Amazon Web Services Payment Cryptography currently supports  ISO
              PIN  block  4  translation  for PIN block built using legacy PAN
              length. That is, PAN is the right most 12 digits  excluding  the
              check digits.

          Cross-account  use  :  This operation can't be used across different
          Amazon Web Services accounts.

          Related operations:

       o GeneratePinData

       o VerifyPinData

       See also: AWS API Documentation

SYNOPSIS
            translate-pin-data
          --incoming-key-identifier <value>
          --outgoing-key-identifier <value>
          --incoming-translation-attributes <value>
          --outgoing-translation-attributes <value>
          --encrypted-pin-block <value>
          [--incoming-dukpt-attributes <value>]
          [--outgoing-dukpt-attributes <value>]
          [--incoming-wrapped-key <value>]
          [--outgoing-wrapped-key <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --incoming-key-identifier (string)
          The keyARN of the encryption key under which incoming PIN block data
          is encrypted. This key type can be PEK or BDK.

          When  a  WrappedKeyBlock is provided, this value will be the identi-
          fier to the key wrapping key for PIN block. Otherwise, it is the key
          identifier used to perform the operation.

       --outgoing-key-identifier (string)
          The  keyARN  of the encryption key for encrypting outgoing PIN block
          data. This key type can be PEK or BDK.

       --incoming-translation-attributes (tagged union structure)
          The format of the incoming PIN block  data  for  translation  within
          Amazon Web Services Payment Cryptography.

          NOTE:
              This  is a Tagged Union structure. Only one of the following top
              level keys can be set: IsoFormat0, IsoFormat1, IsoFormat3,  Iso-
              Format4.

          IsoFormat0 -> (structure)
              Parameters  that  are  required for ISO9564 PIN format 0 tranla-
              tion.

              PrimaryAccountNumber -> (string)
                 The Primary Account Number (PAN) of the cardholder. A PAN  is
                 a  unique  identifier  for a payment credit or debit card and
                 associates the card to a specific account holder.

          IsoFormat1 -> (structure)
              Parameters that are required for ISO9564 PIN  format  1  tranla-
              tion.

          IsoFormat3 -> (structure)
              Parameters  that  are  required for ISO9564 PIN format 3 tranla-
              tion.

              PrimaryAccountNumber -> (string)
                 The Primary Account Number (PAN) of the cardholder. A PAN  is
                 a  unique  identifier  for a payment credit or debit card and
                 associates the card to a specific account holder.

          IsoFormat4 -> (structure)
              Parameters that are required for ISO9564 PIN  format  4  tranla-
              tion.

              PrimaryAccountNumber -> (string)
                 The  Primary Account Number (PAN) of the cardholder. A PAN is
                 a unique identifier for a payment credit or  debit  card  and
                 associates the card to a specific account holder.

       Shorthand Syntax:

          IsoFormat0={PrimaryAccountNumber=string},IsoFormat1={},IsoFormat3={PrimaryAccountNumber=string},IsoFormat4={PrimaryAccountNumber=string}

       JSON Syntax:

          {
            "IsoFormat0": {
              "PrimaryAccountNumber": "string"
            },
            "IsoFormat1": {

            },
            "IsoFormat3": {
              "PrimaryAccountNumber": "string"
            },
            "IsoFormat4": {
              "PrimaryAccountNumber": "string"
            }
          }

       --outgoing-translation-attributes (tagged union structure)
          The  format of the outgoing PIN block data after translation by Ama-
          zon Web Services Payment Cryptography.

          NOTE:
              This is a Tagged Union structure. Only one of the following  top
              level  keys can be set: IsoFormat0, IsoFormat1, IsoFormat3, Iso-
              Format4.

          IsoFormat0 -> (structure)
              Parameters that are required for ISO9564 PIN  format  0  tranla-
              tion.

              PrimaryAccountNumber -> (string)
                 The  Primary Account Number (PAN) of the cardholder. A PAN is
                 a unique identifier for a payment credit or  debit  card  and
                 associates the card to a specific account holder.

          IsoFormat1 -> (structure)
              Parameters  that  are  required for ISO9564 PIN format 1 tranla-
              tion.

          IsoFormat3 -> (structure)
              Parameters that are required for ISO9564 PIN  format  3  tranla-
              tion.

              PrimaryAccountNumber -> (string)
                 The  Primary Account Number (PAN) of the cardholder. A PAN is
                 a unique identifier for a payment credit or  debit  card  and
                 associates the card to a specific account holder.

          IsoFormat4 -> (structure)
              Parameters  that  are  required for ISO9564 PIN format 4 tranla-
              tion.

              PrimaryAccountNumber -> (string)
                 The Primary Account Number (PAN) of the cardholder. A PAN  is
                 a  unique  identifier  for a payment credit or debit card and
                 associates the card to a specific account holder.

       Shorthand Syntax:

          IsoFormat0={PrimaryAccountNumber=string},IsoFormat1={},IsoFormat3={PrimaryAccountNumber=string},IsoFormat4={PrimaryAccountNumber=string}

       JSON Syntax:

          {
            "IsoFormat0": {
              "PrimaryAccountNumber": "string"
            },
            "IsoFormat1": {

            },
            "IsoFormat3": {
              "PrimaryAccountNumber": "string"
            },
            "IsoFormat4": {
              "PrimaryAccountNumber": "string"
            }
          }

       --encrypted-pin-block (string)
          The encrypted PIN block data that Amazon Web Services Payment  Cryp-
          tography translates.

       --incoming-dukpt-attributes (structure)
          The  attributes  and values to use for incoming DUKPT encryption key
          for PIN block translation.

          KeySerialNumber -> (string)
              The unique identifier known as  Key  Serial  Number  (KSN)  that
              comes  from  an encrypting device using DUKPT encryption method.
              The KSN is derived from the encrypting device unique  identifier
              and an internal transaction counter.

          DukptKeyDerivationType -> (string)
              The  key  type  derived  using  DUKPT from a Base Derivation Key
              (BDK) and Key Serial Number (KSN). This must  be  less  than  or
              equal  to  the  strength  of the BDK. For example, you can't use
              AES_128 as a derivation type for a BDK of AES_128 or TDES_2KEY

          DukptKeyVariant -> (string)
              The type of use of DUKPT, which can be for incoming data decryp-
              tion, outgoing data encryption, or both.

       Shorthand Syntax:

          KeySerialNumber=string,DukptKeyDerivationType=string,DukptKeyVariant=string

       JSON Syntax:

          {
            "KeySerialNumber": "string",
            "DukptKeyDerivationType": "TDES_2KEY"|"TDES_3KEY"|"AES_128"|"AES_192"|"AES_256",
            "DukptKeyVariant": "BIDIRECTIONAL"|"REQUEST"|"RESPONSE"
          }

       --outgoing-dukpt-attributes (structure)
          The  attributes  and values to use for outgoing DUKPT encryption key
          after PIN block translation.

          KeySerialNumber -> (string)
              The unique identifier known as  Key  Serial  Number  (KSN)  that
              comes  from  an encrypting device using DUKPT encryption method.
              The KSN is derived from the encrypting device unique  identifier
              and an internal transaction counter.

          DukptKeyDerivationType -> (string)
              The  key  type  derived  using  DUKPT from a Base Derivation Key
              (BDK) and Key Serial Number (KSN). This must  be  less  than  or
              equal  to  the  strength  of the BDK. For example, you can't use
              AES_128 as a derivation type for a BDK of AES_128 or TDES_2KEY

          DukptKeyVariant -> (string)
              The type of use of DUKPT, which can be for incoming data decryp-
              tion, outgoing data encryption, or both.

       Shorthand Syntax:

          KeySerialNumber=string,DukptKeyDerivationType=string,DukptKeyVariant=string

       JSON Syntax:

          {
            "KeySerialNumber": "string",
            "DukptKeyDerivationType": "TDES_2KEY"|"TDES_3KEY"|"AES_128"|"AES_192"|"AES_256",
            "DukptKeyVariant": "BIDIRECTIONAL"|"REQUEST"|"RESPONSE"
          }

       --incoming-wrapped-key (structure)
          The WrappedKeyBlock containing the encryption key under which incom-
          ing PIN block data is encrypted.

          WrappedKeyMaterial -> (tagged union structure)
              Parameter information of a WrappedKeyBlock  for  encryption  key
              exchange.

              NOTE:
                 This  is  a Tagged Union structure. Only one of the following
                 top level keys can be set: Tr31KeyBlock.

              Tr31KeyBlock -> (string)
                 The TR-31 wrapped key block.

          KeyCheckValueAlgorithm -> (string)
              The algorithm that Amazon Web Services Payment Cryptography uses
              to  calculate  the key check value (KCV). It is used to validate
              the key integrity.

              For TDES keys, the KCV is computed by encrypting 8  bytes,  each
              with value of zero, with the key to be checked and retaining the
              3 highest order bytes of the encrypted result. For AES keys, the
              KCV  is  computed using a CMAC algorithm where the input data is
              16 bytes of zero and retaining the 3 highest order bytes of  the
              encrypted result.

       Shorthand Syntax:

          WrappedKeyMaterial={Tr31KeyBlock=string},KeyCheckValueAlgorithm=string

       JSON Syntax:

          {
            "WrappedKeyMaterial": {
              "Tr31KeyBlock": "string"
            },
            "KeyCheckValueAlgorithm": "CMAC"|"ANSI_X9_24"
          }

       --outgoing-wrapped-key (structure)
          The  WrappedKeyBlock  containing  the  encryption key for encrypting
          outgoing PIN block data.

          WrappedKeyMaterial -> (tagged union structure)
              Parameter information of a WrappedKeyBlock  for  encryption  key
              exchange.

              NOTE:
                 This  is  a Tagged Union structure. Only one of the following
                 top level keys can be set: Tr31KeyBlock.

              Tr31KeyBlock -> (string)
                 The TR-31 wrapped key block.

          KeyCheckValueAlgorithm -> (string)
              The algorithm that Amazon Web Services Payment Cryptography uses
              to  calculate  the key check value (KCV). It is used to validate
              the key integrity.

              For TDES keys, the KCV is computed by encrypting 8  bytes,  each
              with value of zero, with the key to be checked and retaining the
              3 highest order bytes of the encrypted result. For AES keys, the
              KCV  is  computed using a CMAC algorithm where the input data is
              16 bytes of zero and retaining the 3 highest order bytes of  the
              encrypted result.

       Shorthand Syntax:

          WrappedKeyMaterial={Tr31KeyBlock=string},KeyCheckValueAlgorithm=string

       JSON Syntax:

          {
            "WrappedKeyMaterial": {
              "Tr31KeyBlock": "string"
            },
            "KeyCheckValueAlgorithm": "CMAC"|"ANSI_X9_24"
          }

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To translate PIN data

       The following translate-pin-data example translates a PIN from PEK TDES
       encryption  using  ISO  0 PIN block to an AES ISO 4 PIN Block using the
       DUKPT algorithm.

          aws payment-cryptography-data translate-pin-data \
              --encrypted-pin-block "AC17DC148BDA645E" \
              --incoming-translation-attributes=IsoFormat0='{PrimaryAccountNumber=171234567890123}' \
              --incoming-key-identifier arn:aws:payment-cryptography:us-east-2:111122223333:key/ivi5ksfsuplneuyt \
              --outgoing-key-identifier arn:aws:payment-cryptography:us-east-2:111122223333:key/4pmyquwjs3yj4vwe \
              --outgoing-translation-attributes IsoFormat4="{PrimaryAccountNumber=171234567890123}" \
              --outgoing-dukpt-attributes KeySerialNumber="FFFF9876543210E00008"

       Output:

          {
              "PinBlock": "1F4209C670E49F83E75CC72E81B787D9",
              "KeyArn": "arn:aws:payment-cryptography:us-east-2:111122223333:key/ivi5ksfsuplneuyt
              "KeyCheckValue": "7CC9E2"
          }

       For more information, see Translate PIN data in the AWS  Payment  Cryp-
       tography User Guide.

OUTPUT
       PinBlock -> (string)
          The outgoing encrypted PIN block data after translation.

       KeyArn -> (string)
          The  keyARN  of  the encryption key that Amazon Web Services Payment
          Cryptography uses to encrypt outgoing PIN block data after  transla-
          tion.

       KeyCheckValue -> (string)
          The  key check value (KCV) of the encryption key. The KCV is used to
          check if all parties holding a given key have the same key or to de-
          tect that a key has changed.

          Amazon  Web Services Payment Cryptography computes the KCV according
          to the CMAC specification.



                                                          TRANSLATE-PIN-DATA()
