DESCRIBE-PORTAL()                                            DESCRIBE-PORTAL()



NAME
       describe-portal -

DESCRIPTION
       Retrieves information about a portal.

       See also: AWS API Documentation

SYNOPSIS
            describe-portal
          --portal-id <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --portal-id (string)
          The ID of the portal.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To describe a portal

       The following describe-portal example describes a web portal for a wind
       farm company.

          aws iotsitewise describe-portal \
              --portal-id a1b2c3d4-5678-90ab-cdef-aaaaaEXAMPLE

       Output:

          {
              "portalId": "a1b2c3d4-5678-90ab-cdef-aaaaaEXAMPLE",
              "portalArn": "arn:aws:iotsitewise:us-west-2:123456789012:portal/a1b2c3d4-5678-90ab-cdef-aaaaaEXAMPLE",
              "portalName": "WindFarmPortal",
              "portalDescription": "A portal that contains wind farm projects for Example Corp.",
              "portalClientId": "E-a1b2c3d4e5f6_a1b2c3d4e5f6EXAMPLE",
              "portalStartUrl": "https://a1b2c3d4-5678-90ab-cdef-aaaaaEXAMPLE.app.iotsitewise.aws",
              "portalContactEmail": "support@example.com",
              "portalStatus": {
                  "state": "ACTIVE"
              },
              "portalCreationDate": "2020-02-04T23:01:52.90248068Z",
              "portalLastUpdateDate": "2020-02-04T23:01:52.90248078Z",
              "roleArn": "arn:aws:iam::123456789012:role/MySiteWiseMonitorServiceRole"
          }

       For  more  information,  see  Administering your portals in the AWS IoT
       SiteWise User Guide.

OUTPUT
       portalId -> (string)
          The ID of the portal.

       portalArn -> (string)
          The ARN of the portal, which has the following format.
              arn:${Partition}:iotsitewise:${Region}:${Account}:portal/${Por-
              talId}

       portalName -> (string)
          The name of the portal.

       portalDescription -> (string)
          The portal's description.

       portalClientId -> (string)
          The  IAM  Identity Center application generated client ID (used with
          IAM Identity Center API operations). IoT SiteWise  includes  portal-
          ClientId  for only portals that use IAM Identity Center to authenti-
          cate users.

       portalStartUrl -> (string)
          The URL for the IoT SiteWise Monitor portal. You can use this URL to
          access  portals that use IAM Identity Center for authentication. For
          portals that use IAM for authentication, you must use the IoT  Site-
          Wise console to get a URL that you can use to access the portal.

       portalContactEmail -> (string)
          The Amazon Web Services administrator's contact email address.

       portalStatus -> (structure)
          The current status of the portal, which contains a state and any er-
          ror message.

          state -> (string)
              The current state of the portal.

          error -> (structure)
              Contains associated error information, if any.

              code -> (string)
                 The error code.

              message -> (string)
                 The error message.

       portalCreationDate -> (timestamp)
          The date the portal was created, in Unix epoch time.

       portalLastUpdateDate -> (timestamp)
          The date the portal was last updated, in Unix epoch time.

       portalLogoImageLocation -> (structure)
          The portal's logo image, which is available at a URL.

          id -> (string)
              The ID of the image.

          url -> (string)
              The URL where the image is available. The URL is  valid  for  15
              minutes so that you can view and download the image

       roleArn -> (string)
          The ARN of the service role that allows the portal's users to access
          your IoT SiteWise resources on your behalf.  For  more  information,
          see Using service roles for IoT SiteWise Monitor in the IoT SiteWise
          User Guide .

       portalAuthMode -> (string)
          The service to use to authenticate users to the portal.

       notificationSenderEmail -> (string)
          The email address that sends alarm notifications.

       alarms -> (structure)
          Contains the configuration information of an alarm created in an IoT
          SiteWise Monitor portal.

          alarmRoleArn -> (string)
              The ARN of the IAM role that allows the alarm to perform actions
              and access Amazon Web Services resources and services,  such  as
              IoT Events.

          notificationLambdaArn -> (string)
              The ARN of the Lambda function that manages alarm notifications.
              For more information, see Managing alarm  notifications  in  the
              IoT Events Developer Guide .

       portalType -> (string)
          Define the type of portal. The value for IoT SiteWise Monitor (Clas-
          sic) is SITEWISE_PORTAL_V1 . The  value  for  IoT  SiteWise  Monitor
          (AI-aware) is SITEWISE_PORTAL_V2 .

       portalTypeConfiguration -> (map)
          The  configuration  entry  associated with the specific portal type.
          The value for IoT SiteWise Monitor (Classic) is SITEWISE_PORTAL_V1 .
          The  value for IoT SiteWise Monitor (AI-aware) is SITEWISE_PORTAL_V2
          .

          key -> (string)

          value -> (structure)
              The configuration entry  associated  with  the  specific  portal
              type.  The portalTypeConfiguration is a map of the portalTypeKey
              to the PortalTypeEntry .

              portalTools -> (list)
                 The array of tools associated with the specified portal type.
                 The possible values are ASSISTANT and DASHBOARD .

                 (string)



                                                             DESCRIBE-PORTAL()
