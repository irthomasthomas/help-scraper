GET-TABLE-VERSIONS()                                      GET-TABLE-VERSIONS()



NAME
       get-table-versions -

DESCRIPTION
       Retrieves a list of strings that identify available versions of a spec-
       ified table.

       See also: AWS API Documentation

       get-table-versions is a paginated operation. Multiple API calls may  be
       issued  in  order  to  retrieve the entire data set of results. You can
       disable pagination by providing the --no-paginate argument.  When using
       --output  text  and  the  --query argument on a paginated response, the
       --query argument must extract data from the results  of  the  following
       query expressions: TableVersions

SYNOPSIS
            get-table-versions
          [--catalog-id <value>]
          --database-name <value>
          --table-name <value>
          [--cli-input-json <value>]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --catalog-id (string)
          The  ID of the Data Catalog where the tables reside. If none is pro-
          vided, the Amazon Web Services account ID is used by default.

       --database-name (string)
          The database in the catalog in which the  table  resides.  For  Hive
          compatibility, this name is entirely lowercase.

       --table-name (string)
          The name of the table. For Hive compatibility, this name is entirely
          lowercase.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --starting-token (string)
          A  token to specify where to start paginating. This is the NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The  size of each page to get in the AWS service call. This does not
          affect the number of items returned in the command's output. Setting
          a  smaller  page  size results in more calls to the AWS service, re-
          trieving fewer items in each call. This can  help  prevent  the  AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The total number of items to return in the command's output. If  the
          total  number of items available is more than the value specified, a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent command. Do not use the NextToken response element  directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       TableVersions -> (list)
          A list of strings identifying available versions  of  the  specified
          table.

          (structure)
              Specifies a version of a table.

              Table -> (structure)
                 The table in question.

                 Name -> (string)
                     The  table name. For Hive compatibility, this must be en-
                     tirely lowercase.

                 DatabaseName -> (string)
                     The name of the database where  the  table  metadata  re-
                     sides.  For  Hive  compatibility, this must be all lower-
                     case.

                 Description -> (string)
                     A description of the table.

                 Owner -> (string)
                     The owner of the table.

                 CreateTime -> (timestamp)
                     The time when the table definition  was  created  in  the
                     Data Catalog.

                 UpdateTime -> (timestamp)
                     The last time that the table was updated.

                 LastAccessTime -> (timestamp)
                     The  last  time that the table was accessed. This is usu-
                     ally taken from HDFS, and might not be reliable.

                 LastAnalyzedTime -> (timestamp)
                     The last time that column statistics  were  computed  for
                     this table.

                 Retention -> (integer)
                     The retention time for this table.

                 StorageDescriptor -> (structure)
                     A  storage  descriptor  containing  information about the
                     physical storage of this table.

                     Columns -> (list)
                        A list of the Columns in the table.

                        (structure)
                            A column in a Table .

                            Name -> (string)
                               The name of the Column .

                            Type -> (string)
                               The data type of the Column .

                            Comment -> (string)
                               A free-form text comment.

                            Parameters -> (map)
                               These key-value pairs define properties associ-
                               ated with the column.

                               key -> (string)

                               value -> (string)

                     Location -> (string)
                        The  physical  location of the table. By default, this
                        takes the form of the warehouse location, followed  by
                        the  database  location  in the warehouse, followed by
                        the table name.

                     AdditionalLocations -> (list)
                        A list of locations that point to  the  path  where  a
                        Delta table is located.

                        (string)

                     InputFormat -> (string)
                        The input format: SequenceFileInputFormat (binary), or
                        TextInputFormat , or a custom format.

                     OutputFormat -> (string)
                        The output format: SequenceFileOutputFormat  (binary),
                        or IgnoreKeyTextOutputFormat , or a custom format.

                     Compressed -> (boolean)
                        True  if the data in the table is compressed, or False
                        if not.

                     NumberOfBuckets -> (integer)
                        Must be specified if the table contains any  dimension
                        columns.

                     SerdeInfo -> (structure)
                        The serialization/deserialization (SerDe) information.

                        Name -> (string)
                            Name of the SerDe.

                        SerializationLibrary -> (string)
                            Usually  the  class  that implements the SerDe. An
                            example  is   org.apache.hadoop.hive.serde2.colum-
                            nar.ColumnarSerDe .

                        Parameters -> (map)
                            These key-value pairs define initialization param-
                            eters for the SerDe.

                            key -> (string)

                            value -> (string)

                     BucketColumns -> (list)
                        A list of reducer grouping  columns,  clustering  col-
                        umns, and bucketing columns in the table.

                        (string)

                     SortColumns -> (list)
                        A list specifying the sort order of each bucket in the
                        table.

                        (structure)
                            Specifies the sort order of a sorted column.

                            Column -> (string)
                               The name of the column.

                            SortOrder -> (integer)
                               Indicates that the column is sorted in  ascend-
                               ing  order (== 1 ), or in descending order (==0
                               ).

                     Parameters -> (map)
                        The user-supplied properties in key-value form.

                        key -> (string)

                        value -> (string)

                     SkewedInfo -> (structure)
                        The information about values that appear frequently in
                        a column (skewed values).

                        SkewedColumnNames -> (list)
                            A  list  of  names  of columns that contain skewed
                            values.

                            (string)

                        SkewedColumnValues -> (list)
                            A list of values that appear so frequently  as  to
                            be considered skewed.

                            (string)

                        SkewedColumnValueLocationMaps -> (map)
                            A  mapping  of  skewed  values to the columns that
                            contain them.

                            key -> (string)

                            value -> (string)

                     StoredAsSubDirectories -> (boolean)
                        True if the table data is stored in subdirectories, or
                        False if not.

                     SchemaReference -> (structure)
                        An  object that references a schema stored in the Glue
                        Schema Registry.

                        When creating a table, you can pass an empty  list  of
                        columns  for the schema, and instead use a schema ref-
                        erence.

                        SchemaId -> (structure)
                            A structure that contains schema identity  fields.
                            Either  this or the SchemaVersionId has to be pro-
                            vided.

                            SchemaArn -> (string)
                               The Amazon Resource Name (ARN) of  the  schema.
                               One  of  SchemaArn or SchemaName has to be pro-
                               vided.

                            SchemaName -> (string)
                               The name of the schema.  One  of  SchemaArn  or
                               SchemaName has to be provided.

                            RegistryName -> (string)
                               The  name  of the schema registry that contains
                               the schema.

                        SchemaVersionId -> (string)
                            The unique ID assigned to a version of the schema.
                            Either this or the SchemaId has to be provided.

                        SchemaVersionNumber -> (long)
                            The version number of the schema.

                 PartitionKeys -> (list)
                     A list of columns by which the table is partitioned. Only
                     primitive types are supported as partition keys.

                     When you create a table used by Amazon Athena, and you do
                     not specify any partitionKeys , you must at least set the
                     value of partitionKeys to an empty list. For example:
                        "PartitionKeys": []

                     (structure)
                        A column in a Table .

                        Name -> (string)
                            The name of the Column .

                        Type -> (string)
                            The data type of the Column .

                        Comment -> (string)
                            A free-form text comment.

                        Parameters -> (map)
                            These key-value pairs define properties associated
                            with the column.

                            key -> (string)

                            value -> (string)

                 ViewOriginalText -> (string)
                     Included  for  Apache Hive compatibility. Not used in the
                     normal course of Glue operations. If the table is a  VIR-
                     TUAL_VIEW  ,  certain  Athena  configuration  encoded  in
                     base64.

                 ViewExpandedText -> (string)
                     Included for Apache Hive compatibility. Not used  in  the
                     normal course of Glue operations.

                 TableType -> (string)
                     The  type of this table. Glue will create tables with the
                     EXTERNAL_TABLE type. Other services, such as Athena,  may
                     create tables with additional table types.

                     Glue related table types:
                        EXTERNAL_TABLE

                     Hive  compatible attribute - indicates a non-Hive managed
                     table.
                        GOVERNED

                     Used by Lake Formation. The Glue Data Catalog understands
                     GOVERNED .

                 Parameters -> (map)
                     These  key-value  pairs define properties associated with
                     the table.

                     key -> (string)

                     value -> (string)

                 CreatedBy -> (string)
                     The person or entity who created the table.

                 IsRegisteredWithLakeFormation -> (boolean)
                     Indicates whether the table has been registered with Lake
                     Formation.

                 TargetTable -> (structure)
                     A TableIdentifier structure that describes a target table
                     for resource linking.

                     CatalogId -> (string)
                        The ID of the Data Catalog in which the table resides.

                     DatabaseName -> (string)
                        The name of the catalog  database  that  contains  the
                        target table.

                     Name -> (string)
                        The name of the target table.

                     Region -> (string)
                        Region of the target table.

                 CatalogId -> (string)
                     The ID of the Data Catalog in which the table resides.

                 VersionId -> (string)
                     The ID of the table version.

                 FederatedTable -> (structure)
                     A FederatedTable structure that references an entity out-
                     side the Glue Data Catalog.

                     Identifier -> (string)
                        A unique identifier for the federated table.

                     DatabaseIdentifier -> (string)
                        A unique identifier for the federated database.

                     ConnectionName -> (string)
                        The name of the connection to the external metastore.

              VersionId -> (string)
                 The ID value that identifies this table version. A  VersionId
                 is a string representation of an integer. Each version is in-
                 cremented by 1.

       NextToken -> (string)
          A continuation token, if the list of available versions does not in-
          clude the last one.



                                                          GET-TABLE-VERSIONS()
