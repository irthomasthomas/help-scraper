GET-WORKFLOW-RUNS()                                        GET-WORKFLOW-RUNS()



NAME
       get-workflow-runs -

DESCRIPTION
       Retrieves metadata for all runs of a given workflow.

       See also: AWS API Documentation

       get-workflow-runs  is  a paginated operation. Multiple API calls may be
       issued in order to retrieve the entire data set  of  results.  You  can
       disable pagination by providing the --no-paginate argument.  When using
       --output text and the --query argument on  a  paginated  response,  the
       --query  argument  must  extract data from the results of the following
       query expressions: Runs

SYNOPSIS
            get-workflow-runs
          --name <value>
          [--include-graph | --no-include-graph]
          [--cli-input-json <value>]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --name (string)
          Name of the workflow whose metadata of runs should be returned.

       --include-graph | --no-include-graph (boolean)
          Specifies whether to include the workflow graph in response or not.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --starting-token (string)
          A  token to specify where to start paginating. This is the NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The  size of each page to get in the AWS service call. This does not
          affect the number of items returned in the command's output. Setting
          a  smaller  page  size results in more calls to the AWS service, re-
          trieving fewer items in each call. This can  help  prevent  the  AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The total number of items to return in the command's output. If  the
          total  number of items available is more than the value specified, a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent command. Do not use the NextToken response element  directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       Runs -> (list)
          A list of workflow run metadata objects.

          (structure)
              A workflow run is an execution of a workflow providing  all  the
              runtime information.

              Name -> (string)
                 Name of the workflow that was run.

              WorkflowRunId -> (string)
                 The ID of this workflow run.

              PreviousRunId -> (string)
                 The ID of the previous workflow run.

              WorkflowRunProperties -> (map)
                 The workflow run properties which were set during the run.

                 key -> (string)

                 value -> (string)

              StartedOn -> (timestamp)
                 The date and time when the workflow run was started.

              CompletedOn -> (timestamp)
                 The date and time when the workflow run completed.

              Status -> (string)
                 The status of the workflow run.

              ErrorMessage -> (string)
                 This error message describes any error that may have occurred
                 in starting the workflow run. Currently the only  error  mes-
                 sage is "Concurrent runs exceeded for workflow: foo ."

              Statistics -> (structure)
                 The statistics of the run.

                 TotalActions -> (integer)
                     Total number of Actions in the workflow run.

                 TimeoutActions -> (integer)
                     Total number of Actions that timed out.

                 FailedActions -> (integer)
                     Total number of Actions that have failed.

                 StoppedActions -> (integer)
                     Total number of Actions that have stopped.

                 SucceededActions -> (integer)
                     Total number of Actions that have succeeded.

                 RunningActions -> (integer)
                     Total number Actions in running state.

                 ErroredActions -> (integer)
                     Indicates the count of job runs in the ERROR state in the
                     workflow run.

                 WaitingActions -> (integer)
                     Indicates the count of job runs in WAITING state  in  the
                     workflow run.

              Graph -> (structure)
                 The graph representing all the Glue components that belong to
                 the workflow as nodes and directed connections  between  them
                 as edges.

                 Nodes -> (list)
                     A  list of the the Glue components belong to the workflow
                     represented as nodes.

                     (structure)
                        A node represents an Glue component (trigger, crawler,
                        or job) on a workflow graph.

                        Type -> (string)
                            The  type  of  Glue  component  represented by the
                            node.

                        Name -> (string)
                            The name of the Glue component represented by  the
                            node.

                        UniqueId -> (string)
                            The  unique  Id  assigned  to  the node within the
                            workflow.

                        TriggerDetails -> (structure)
                            Details of the Trigger when the node represents  a
                            Trigger.

                            Trigger -> (structure)
                               The  information  of the trigger represented by
                               the trigger node.

                               Name -> (string)
                                   The name of the trigger.

                               WorkflowName -> (string)
                                   The name of the  workflow  associated  with
                                   the trigger.

                               Id -> (string)
                                   Reserved for future use.

                               Type -> (string)
                                   The type of trigger that this is.

                               State -> (string)
                                   The current state of the trigger.

                               Description -> (string)
                                   A description of this trigger.

                               Schedule -> (string)
                                   A  cron  expression  used  to  specify  the
                                   schedule (see Time-Based Schedules for Jobs
                                   and  Crawlers  .  For example, to run some-
                                   thing every day at  12:15  UTC,  you  would
                                   specify: cron(15 12 * * ? *) .

                               Actions -> (list)
                                   The actions initiated by this trigger.

                                   (structure)
                                      Defines  an  action to be initiated by a
                                      trigger.

                                      JobName -> (string)
                                          The name of a job to be run.

                                      Arguments -> (map)
                                          The job  arguments  used  when  this
                                          trigger  fires.  For  this  job run,
                                          they replace the  default  arguments
                                          set in the job definition itself.

                                          You  can specify arguments here that
                                          your own job-execution  script  con-
                                          sumes,  as  well  as  arguments that
                                          Glue itself consumes.

                                          For information about how to specify
                                          and  consume your own Job arguments,
                                          see the Calling Glue APIs in  Python
                                          topic in the developer guide.

                                          For  information about the key-value
                                          pairs that Glue consumes to  set  up
                                          your job, see the Special Parameters
                                          Used by Glue topic in the  developer
                                          guide.

                                          key -> (string)

                                          value -> (string)

                                      Timeout -> (integer)
                                          The  JobRun timeout in minutes. This
                                          is the maximum time that a  job  run
                                          can  consume  resources before it is
                                          terminated and enters  TIMEOUT  sta-
                                          tus.  The  default  is 2,880 minutes
                                          (48 hours). This overrides the time-
                                          out value set in the parent job.

                                      SecurityConfiguration -> (string)
                                          The  name  of the SecurityConfigura-
                                          tion structure to be used with  this
                                          action.

                                      NotificationProperty -> (structure)
                                          Specifies  configuration  properties
                                          of a job run notification.

                                          NotifyDelayAfter -> (integer)
                                             After a job run starts, the  num-
                                             ber  of  minutes  to  wait before
                                             sending a job run delay notifica-
                                             tion.

                                      CrawlerName -> (string)
                                          The  name  of the crawler to be used
                                          with this action.

                               Predicate -> (structure)
                                   The predicate of this  trigger,  which  de-
                                   fines when it will fire.

                                   Logical -> (string)
                                      An  optional field if only one condition
                                      is listed. If  multiple  conditions  are
                                      listed, then this field is required.

                                   Conditions -> (list)
                                      A  list of the conditions that determine
                                      when the trigger will fire.

                                      (structure)
                                          Defines a condition  under  which  a
                                          trigger fires.

                                          LogicalOperator -> (string)
                                             A logical operator.

                                          JobName -> (string)
                                             The name of the job whose JobRuns
                                             this condition applies to, and on
                                             which this trigger waits.

                                          State -> (string)
                                             The  condition  state. Currently,
                                             the only job states that a  trig-
                                             ger  can listen for are SUCCEEDED
                                             , STOPPED , FAILED , and  TIMEOUT
                                             .  The only crawler states that a
                                             trigger can listen for  are  SUC-
                                             CEEDED , FAILED , and CANCELLED .

                                          CrawlerName -> (string)
                                             The  name of the crawler to which
                                             this condition applies.

                                          CrawlState -> (string)
                                             The state of the crawler to which
                                             this condition applies.

                               EventBatchingCondition -> (structure)
                                   Batch condition that must be met (specified
                                   number of events  received  or  batch  time
                                   window  expired)  before  EventBridge event
                                   trigger fires.

                                   BatchSize -> (integer)
                                      Number of events that must  be  received
                                      from  Amazon  EventBridge  before Event-
                                      Bridge event trigger fires.

                                   BatchWindow -> (integer)
                                      Window of time in  seconds  after  which
                                      EventBridge  event trigger fires. Window
                                      starts when first event is received.

                        JobDetails -> (structure)
                            Details of the Job when the node represents a Job.

                            JobRuns -> (list)
                               The information for the job runs represented by
                               the job node.

                               (structure)
                                   Contains information about a job run.

                                   Id -> (string)
                                      The ID of this job run.

                                   Attempt -> (integer)
                                      The  number  of  the attempt to run this
                                      job.

                                   PreviousRunId -> (string)
                                      The ID of the previous run of this  job.
                                      For  example,  the JobRunId specified in
                                      the StartJobRun action.

                                   TriggerName -> (string)
                                      The name of  the  trigger  that  started
                                      this job run.

                                   JobName -> (string)
                                      The  name  of  the  job definition being
                                      used in this run.

                                   JobMode -> (string)
                                      A mode that describes how a job was cre-
                                      ated. Valid values are:

                                      o SCRIPT - The job was created using the
                                        Glue Studio script editor.

                                      o VISUAL - The job was created using the
                                        Glue Studio visual editor.

                                      o NOTEBOOK  -  The job was created using
                                        an interactive sessions notebook.

                                      When the JobMode  field  is  missing  or
                                      null,  SCRIPT is assigned as the default
                                      value.

                                   JobRunQueuingEnabled -> (boolean)
                                      Specifies whether job run queuing is en-
                                      abled for the job run.

                                      A value of true means job run queuing is
                                      enabled for the job run. If false or not
                                      populated,  the job run will not be con-
                                      sidered for queueing.

                                   StartedOn -> (timestamp)
                                      The date and time at which this job  run
                                      was started.

                                   LastModifiedOn -> (timestamp)
                                      The last time that this job run was mod-
                                      ified.

                                   CompletedOn -> (timestamp)
                                      The date and time that this job run com-
                                      pleted.

                                   JobRunState -> (string)
                                      The  current  state  of the job run. For
                                      more information about the  statuses  of
                                      jobs  that  have  terminated abnormally,
                                      see Glue Job Run Statuses .

                                   Arguments -> (map)
                                      The job arguments associated  with  this
                                      run.  For this job run, they replace the
                                      default arguments set in the job defini-
                                      tion itself.

                                      You can specify arguments here that your
                                      own job-execution  script  consumes,  as
                                      well  as arguments that Glue itself con-
                                      sumes.

                                      Job arguments may be logged. Do not pass
                                      plaintext secrets as arguments. Retrieve
                                      secrets from a Glue Connection,  Secrets
                                      Manager or other secret management mech-
                                      anism if you intend to keep them  within
                                      the Job.

                                      For information about how to specify and
                                      consume your own Job arguments, see  the
                                      Calling Glue APIs in Python topic in the
                                      developer guide.

                                      For information about the arguments  you
                                      can provide to this field when configur-
                                      ing Spark jobs, see the Special  Parame-
                                      ters Used by Glue topic in the developer
                                      guide.

                                      For information about the arguments  you
                                      can provide to this field when configur-
                                      ing Ray jobs, see Using  job  parameters
                                      in Ray jobs in the developer guide.

                                      key -> (string)

                                      value -> (string)

                                   ErrorMessage -> (string)
                                      An  error  message  associated with this
                                      job run.

                                   PredecessorRuns -> (list)
                                      A list of predecessors to this job run.

                                      (structure)
                                          A job run that was used in the pred-
                                          icate  of a conditional trigger that
                                          triggered this job run.

                                          JobName -> (string)
                                             The name of  the  job  definition
                                             used by the predecessor job run.

                                          RunId -> (string)
                                             The job-run ID of the predecessor
                                             job run.

                                   AllocatedCapacity -> (integer)
                                      This field is deprecated. Use  MaxCapac-
                                      ity instead.

                                      The number of Glue data processing units
                                      (DPUs) allocated to this JobRun. From  2
                                      to  100  DPUs  can be allocated; the de-
                                      fault is 10. A DPU is a relative measure
                                      of  processing  power that consists of 4
                                      vCPUs of compute capacity and 16  GB  of
                                      memory.  For  more  information, see the
                                      Glue pricing page .

                                   ExecutionTime -> (integer)
                                      The amount of time (in seconds) that the
                                      job run consumed resources.

                                   Timeout -> (integer)
                                      The  JobRun  timeout in minutes. This is
                                      the maximum time that a job run can con-
                                      sume  resources  before it is terminated
                                      and enters TIMEOUT  status.  This  value
                                      overrides  the  timeout value set in the
                                      parent job.

                                      Streaming jobs must have timeout  values
                                      less  than 7 days or 10080 minutes. When
                                      the value is left blank, the job will be
                                      restarted after 7 days based if you have
                                      not setup a maintenance window.  If  you
                                      have  setup  maintenance window, it will
                                      be restarted during the maintenance win-
                                      dow after 7 days.

                                   MaxCapacity -> (double)
                                      For  Glue  version  1.0 or earlier jobs,
                                      using the standard worker type, the num-
                                      ber of Glue data processing units (DPUs)
                                      that can  be  allocated  when  this  job
                                      runs.  A  DPU  is  a relative measure of
                                      processing power that consists of 4  vC-
                                      PUs  of  compute  capacity  and 16 GB of
                                      memory. For more  information,  see  the
                                      Glue pricing page .

                                      For  Glue  version 2.0+ jobs, you cannot
                                      specify a Maximum  capacity  .  Instead,
                                      you should specify a Worker type and the
                                      Number of workers .

                                      Do not set MaxCapacity if using  Worker-
                                      Type and NumberOfWorkers .

                                      The value that can be allocated for Max-
                                      Capacity depends on whether you are run-
                                      ning a Python shell job, an Apache Spark
                                      ETL job, or an  Apache  Spark  streaming
                                      ETL job:

                                      o When  you  specify  a Python shell job
                                        (JobCommand.Name ="pythonshell"),  you
                                        can  allocate  either 0.0625 or 1 DPU.
                                        The default is 0.0625 DPU.

                                      o When you specify an Apache  Spark  ETL
                                        job  (JobCommand.Name  ="glueetl")  or
                                        Apache Spark streaming ETL  job  (Job-
                                        Command.Name   ="gluestreaming"),  you
                                        can allocate from 2 to 100  DPUs.  The
                                        default is 10 DPUs. This job type can-
                                        not have a fractional DPU allocation.

                                   WorkerType -> (string)
                                      The type of predefined  worker  that  is
                                      allocated  when  a  job  runs. Accepts a
                                      value  of  G.1X,  G.2X,  G.4X,  G.8X  or
                                      G.025X for Spark jobs. Accepts the value
                                      Z.2X for Ray jobs.

                                      o For the G.1X worker type, each  worker
                                        maps  to 1 DPU (4 vCPUs, 16 GB of mem-
                                        ory)  with  84GB  disk  (approximately
                                        34GB  free),  and  provides 1 executor
                                        per worker. We recommend  this  worker
                                        type for workloads such as data trans-
                                        forms, joins, and queries, to offers a
                                        scalable and cost effective way to run
                                        most jobs.

                                      o For the G.2X worker type, each  worker
                                        maps  to 2 DPU (8 vCPUs, 32 GB of mem-
                                        ory) with  128GB  disk  (approximately
                                        77GB  free),  and  provides 1 executor
                                        per worker. We recommend  this  worker
                                        type for workloads such as data trans-
                                        forms, joins, and queries, to offers a
                                        scalable and cost effective way to run
                                        most jobs.

                                      o For the G.4X worker type, each  worker
                                        maps to 4 DPU (16 vCPUs, 64 GB of mem-
                                        ory) with  256GB  disk  (approximately
                                        235GB  free),  and provides 1 executor
                                        per worker. We recommend  this  worker
                                        type  for jobs whose workloads contain
                                        your most demanding transforms, aggre-
                                        gations,   joins,  and  queries.  This
                                        worker type is available only for Glue
                                        version 3.0 or later Spark ETL jobs in
                                        the following Amazon Web Services  Re-
                                        gions:  US  East  (Ohio),  US East (N.
                                        Virginia), US West (Oregon), Asia  Pa-
                                        cific  (Singapore), Asia Pacific (Syd-
                                        ney),  Asia  Pacific  (Tokyo),  Canada
                                        (Central),  Europe (Frankfurt), Europe
                                        (Ireland), and Europe (Stockholm).

                                      o For the G.8X worker type, each  worker
                                        maps  to  8  DPU  (32 vCPUs, 128 GB of
                                        memory) with 512GB disk (approximately
                                        487GB  free),  and provides 1 executor
                                        per worker. We recommend  this  worker
                                        type  for jobs whose workloads contain
                                        your most demanding transforms, aggre-
                                        gations,   joins,  and  queries.  This
                                        worker type is available only for Glue
                                        version  3.0  or later Spark ETL jobs,
                                        in the same Amazon  Web  Services  Re-
                                        gions as supported for the G.4X worker
                                        type.

                                      o For  the  G.025X  worker  type,   each
                                        worker maps to 0.25 DPU (2 vCPUs, 4 GB
                                        of memory) with  84GB  disk  (approxi-
                                        mately  34GB free), and provides 1 ex-
                                        ecutor per worker. We  recommend  this
                                        worker  type  for low volume streaming
                                        jobs. This worker type is only  avail-
                                        able  for  Glue  version 3.0 streaming
                                        jobs.

                                      o For the Z.2X worker type, each  worker
                                        maps to 2 M-DPU (8vCPUs, 64 GB of mem-
                                        ory) with 128 GB  disk  (approximately
                                        120GB  free), and provides up to 8 Ray
                                        workers based on the autoscaler.

                                   NumberOfWorkers -> (integer)
                                      The number of workers of a defined work-
                                      erType  that  are  allocated  when a job
                                      runs.

                                   SecurityConfiguration -> (string)
                                      The name  of  the  SecurityConfiguration
                                      structure to be used with this job run.

                                   LogGroupName -> (string)
                                      The  name  of  the  log group for secure
                                      logging  that  can  be  server-side  en-
                                      crypted  in Amazon CloudWatch using KMS.
                                      This name can be  /aws-glue/jobs/  ,  in
                                      which  case  the  default  encryption is
                                      NONE . If you add a role name and  Secu-
                                      rityConfiguration  name (in other words,
                                      /aws-glue/jobs-yourRoleName-yourSecuri-
                                      tyConfigurationName/  ), then that secu-
                                      rity configuration is  used  to  encrypt
                                      the log group.

                                   NotificationProperty -> (structure)
                                      Specifies  configuration properties of a
                                      job run notification.

                                      NotifyDelayAfter -> (integer)
                                          After a job run starts,  the  number
                                          of  minutes to wait before sending a
                                          job run delay notification.

                                   GlueVersion -> (string)
                                      In Spark  jobs,  GlueVersion  determines
                                      the  versions of Apache Spark and Python
                                      that Glue available in a job. The Python
                                      version  indicates the version supported
                                      for jobs of type Spark.

                                      Ray jobs should set GlueVersion  to  4.0
                                      or  greater.  However,  the  versions of
                                      Ray,  Python  and  additional  libraries
                                      available in your Ray job are determined
                                      by the Runtime parameter of the Job com-
                                      mand.

                                      For more information about the available
                                      Glue versions  and  corresponding  Spark
                                      and Python versions, see Glue version in
                                      the developer guide.

                                      Jobs that are created without specifying
                                      a Glue version default to Glue 0.9.

                                   DPUSeconds -> (double)
                                      This  field  can  be  set for either job
                                      runs with execution class FLEX  or  when
                                      Auto  Scaling is enabled, and represents
                                      the total time each executor ran  during
                                      the  lifecycle  of a job run in seconds,
                                      multiplied by a DPU factor (1 for G.1X ,
                                      2  for  G.2X  , or 0.25 for G.025X work-
                                      ers). This value may be  different  than
                                      the executionEngineRuntime * MaxCapacity
                                      as in the case of Auto Scaling jobs,  as
                                      the  number  of  executors  running at a
                                      given time may be less than  the  MaxCa-
                                      pacity  . Therefore, it is possible that
                                      the value of DPUSeconds is less than ex-
                                      ecutionEngineRuntime * MaxCapacity .

                                   ExecutionClass -> (string)
                                      Indicates  whether the job is run with a
                                      standard or  flexible  execution  class.
                                      The  standard  execution-class  is ideal
                                      for time-sensitive  workloads  that  re-
                                      quire fast job startup and dedicated re-
                                      sources.

                                      The flexible execution class  is  appro-
                                      priate  for  time-insensitive jobs whose
                                      start and completion times may vary.

                                      Only jobs  with  Glue  version  3.0  and
                                      above  and  command type glueetl will be
                                      allowed to set ExecutionClass to FLEX  .
                                      The  flexible  execution class is avail-
                                      able for Spark jobs.

                                   MaintenanceWindow -> (string)
                                      This field specifies a day of  the  week
                                      and  hour  for  a maintenance window for
                                      streaming jobs. Glue  periodically  per-
                                      forms   maintenance  activities.  During
                                      these  maintenance  windows,  Glue  will
                                      need to restart your streaming jobs.

                                      Glue will restart the job within 3 hours
                                      of the specified maintenance window. For
                                      instance,  if you set up the maintenance
                                      window for Monday at 10:00AM  GMT,  your
                                      jobs  will  be restarted between 10:00AM
                                      GMT to 1:00PM GMT.

                                   ProfileName -> (string)
                                      The name of an Glue usage profile  asso-
                                      ciated with the job run.

                                   StateDetail -> (string)
                                      This field holds details that pertain to
                                      the state of a job  run.  The  field  is
                                      nullable.

                                      For  example,  when  a  job  run is in a
                                      WAITING state as a  result  of  job  run
                                      queuing,  the  field  has the reason why
                                      the job run is in that state.

                        CrawlerDetails -> (structure)
                            Details of the crawler when the node represents  a
                            crawler.

                            Crawls -> (list)
                               A list of crawls represented by the crawl node.

                               (structure)
                                   The details of a crawl in the workflow.

                                   State -> (string)
                                      The state of the crawler.

                                   StartedOn -> (timestamp)
                                      The  date  and  time  on which the crawl
                                      started.

                                   CompletedOn -> (timestamp)
                                      The date and time  on  which  the  crawl
                                      completed.

                                   ErrorMessage -> (string)
                                      The  error  message  associated with the
                                      crawl.

                                   LogGroup -> (string)
                                      The log group associated with the crawl.

                                   LogStream -> (string)
                                      The  log  stream  associated  with   the
                                      crawl.

                 Edges -> (list)
                     A  list of all the directed connections between the nodes
                     belonging to the workflow.

                     (structure)
                        An edge represents a directed connection  between  two
                        Glue components that are part of the workflow the edge
                        belongs to.

                        SourceId -> (string)
                            The unique of the node within the  workflow  where
                            the edge starts.

                        DestinationId -> (string)
                            The  unique  of the node within the workflow where
                            the edge ends.

              StartingEventBatchCondition -> (structure)
                 The batch condition that started the workflow run.

                 BatchSize -> (integer)
                     Number of events in the batch.

                 BatchWindow -> (integer)
                     Duration of the batch window in seconds.

       NextToken -> (string)
          A continuation token, if not all requested workflow runs  have  been
          returned.



                                                           GET-WORKFLOW-RUNS()
