CREATE-SCRIPT()                                                CREATE-SCRIPT()



NAME
       create-script -

DESCRIPTION
       Transforms a directed acyclic graph (DAG) into code.

       See also: AWS API Documentation

SYNOPSIS
            create-script
          [--dag-nodes <value>]
          [--dag-edges <value>]
          [--language <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --dag-nodes (list)
          A list of the nodes in the DAG.

          (structure)
              Represents a node in a directed acyclic graph (DAG)

              Id -> (string)
                 A node identifier that is unique within the node's graph.

              NodeType -> (string)
                 The type of node that this is.

              Args -> (list)
                 Properties of the node, in the form of name-value pairs.

                 (structure)
                     An argument or property of a node.

                     Name -> (string)
                        The name of the argument or property.

                     Value -> (string)
                        The value of the argument or property.

                     Param -> (boolean)
                        True if the value is used as a parameter.

              LineNumber -> (integer)
                 The line number of the node.

       Shorthand Syntax:

          Id=string,NodeType=string,Args=[{Name=string,Value=string,Param=boolean},{Name=string,Value=string,Param=boolean}],LineNumber=integer ...

       JSON Syntax:

          [
            {
              "Id": "string",
              "NodeType": "string",
              "Args": [
                {
                  "Name": "string",
                  "Value": "string",
                  "Param": true|false
                }
                ...
              ],
              "LineNumber": integer
            }
            ...
          ]

       --dag-edges (list)
          A list of the edges in the DAG.

          (structure)
              Represents a directional edge in a directed acyclic graph (DAG).

              Source -> (string)
                 The ID of the node at which the edge starts.

              Target -> (string)
                 The ID of the node at which the edge ends.

              TargetParameter -> (string)
                 The target of the edge.

       Shorthand Syntax:

          Source=string,Target=string,TargetParameter=string ...

       JSON Syntax:

          [
            {
              "Source": "string",
              "Target": "string",
              "TargetParameter": "string"
            }
            ...
          ]

       --language (string)
          The programming language of the resulting code from the DAG.

          Possible values:

          o PYTHON

          o SCALA

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       PythonScript -> (string)
          The Python script generated from the DAG.

       ScalaCode -> (string)
          The Scala code generated from the DAG.



                                                               CREATE-SCRIPT()
