GET-JOB-RUNS()                                                  GET-JOB-RUNS()



NAME
       get-job-runs -

DESCRIPTION
       Retrieves metadata for all runs of a given job definition.

       See also: AWS API Documentation

       get-job-runs is a paginated operation. Multiple API calls may be issued
       in order to retrieve the entire data set of results.  You  can  disable
       pagination  by providing the --no-paginate argument.  When using --out-
       put text and the --query argument on a paginated response, the  --query
       argument  must extract data from the results of the following query ex-
       pressions: JobRuns

SYNOPSIS
            get-job-runs
          --job-name <value>
          [--cli-input-json <value>]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --job-name (string)
          The name of the job definition for which to retrieve all job runs.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --starting-token (string)
          A  token to specify where to start paginating. This is the NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The  size of each page to get in the AWS service call. This does not
          affect the number of items returned in the command's output. Setting
          a  smaller  page  size results in more calls to the AWS service, re-
          trieving fewer items in each call. This can  help  prevent  the  AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The total number of items to return in the command's output. If  the
          total  number of items available is more than the value specified, a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent command. Do not use the NextToken response element  directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To get information about all job runs for a job

       The following get-job-runs example retrieves information about job runs
       for a job.

          aws glue get-job-runs \
              --job-name "my-testing-job"

       Output:

          {
              "JobRuns": [
                  {
                      "Id": "jr_012e176506505074d94d761755e5c62538ee1aad6f17d39f527e9140cf0c9a5e",
                      "Attempt": 0,
                      "JobName": "my-testing-job",
                      "StartedOn": 1602873931.255,
                      "LastModifiedOn": 1602874075.985,
                      "CompletedOn": 1602874075.985,
                      "JobRunState": "SUCCEEDED",
                      "Arguments": {
                          "--enable-continuous-cloudwatch-log": "true",
                          "--enable-metrics": "",
                          "--enable-spark-ui": "true",
                          "--job-bookmark-option": "job-bookmark-enable",
                          "--spark-event-logs-path": "s3://aws-glue-assets-111122223333-us-east-1/sparkHistoryLogs/"
                      },
                      "PredecessorRuns": [],
                      "AllocatedCapacity": 10,
                      "ExecutionTime": 117,
                      "Timeout": 2880,
                      "MaxCapacity": 10.0,
                      "WorkerType": "G.1X",
                      "NumberOfWorkers": 10,
                      "LogGroupName": "/aws-glue/jobs",
                      "GlueVersion": "2.0"
                  },
                  {
                      "Id": "jr_03cc19ddab11c4e244d3f735567de74ff93b0b3ef468a713ffe73e53d1aec08f_attempt_2",
                      "Attempt": 2,
                      "PreviousRunId": "jr_03cc19ddab11c4e244d3f735567de74ff93b0b3ef468a713ffe73e53d1aec08f_attempt_1",
                      "JobName": "my-testing-job",
                      "StartedOn": 1602811168.496,
                      "LastModifiedOn": 1602811282.39,
                      "CompletedOn": 1602811282.39,
                      "JobRunState": "FAILED",
                      "ErrorMessage": "An error occurred while calling o122.pyWriteDynamicFrame.
                          Access Denied (Service: Amazon S3; Status Code: 403; Error Code: AccessDenied;
                          Request ID: 021AAB703DB20A2D;
                          S3 Extended Request ID: teZk24Y09TkXzBvMPG502L5VJBhe9DJuWA9/TXtuGOqfByajkfL/Tlqt5JBGdEGpigAqzdMDM/U=)",
                      "PredecessorRuns": [],
                      "AllocatedCapacity": 10,
                      "ExecutionTime": 110,
                      "Timeout": 2880,
                      "MaxCapacity": 10.0,
                      "WorkerType": "G.1X",
                      "NumberOfWorkers": 10,
                      "LogGroupName": "/aws-glue/jobs",
                      "GlueVersion": "2.0"
                  },
                  {
                      "Id": "jr_03cc19ddab11c4e244d3f735567de74ff93b0b3ef468a713ffe73e53d1aec08f_attempt_1",
                      "Attempt": 1,
                      "PreviousRunId": "jr_03cc19ddab11c4e244d3f735567de74ff93b0b3ef468a713ffe73e53d1aec08f",
                      "JobName": "my-testing-job",
                      "StartedOn": 1602811020.518,
                      "LastModifiedOn": 1602811138.364,
                      "CompletedOn": 1602811138.364,
                      "JobRunState": "FAILED",
                      "ErrorMessage": "An error occurred while calling o122.pyWriteDynamicFrame.
                           Access Denied (Service: Amazon S3; Status Code: 403; Error Code: AccessDenied;
                           Request ID: 2671D37856AE7ABB;
                           S3 Extended Request ID: RLJCJw20brV+PpC6GpORahyF2fp9flB5SSb2bTGPnUSPVizLXRl1PN3QZldb+v1o9qRVktNYbW8=)",
                      "PredecessorRuns": [],
                      "AllocatedCapacity": 10,
                      "ExecutionTime": 113,
                      "Timeout": 2880,
                      "MaxCapacity": 10.0,
                      "WorkerType": "G.1X",
                      "NumberOfWorkers": 10,
                      "LogGroupName": "/aws-glue/jobs",
                      "GlueVersion": "2.0"
                  }
              ]
          }

       For more information, see Job Runs in the AWS Glue Developer Guide.

OUTPUT
       JobRuns -> (list)
          A list of job-run metadata objects.

          (structure)
              Contains information about a job run.

              Id -> (string)
                 The ID of this job run.

              Attempt -> (integer)
                 The number of the attempt to run this job.

              PreviousRunId -> (string)
                 The ID of the previous run of this job. For example, the  Jo-
                 bRunId specified in the StartJobRun action.

              TriggerName -> (string)
                 The name of the trigger that started this job run.

              JobName -> (string)
                 The name of the job definition being used in this run.

              JobMode -> (string)
                 A  mode  that  describes  how a job was created. Valid values
                 are:

                 o SCRIPT - The job was created using the Glue  Studio  script
                   editor.

                 o VISUAL  -  The job was created using the Glue Studio visual
                   editor.

                 o NOTEBOOK - The job was created using  an  interactive  ses-
                   sions notebook.

                 When the JobMode field is missing or null, SCRIPT is assigned
                 as the default value.

              StartedOn -> (timestamp)
                 The date and time at which this job run was started.

              LastModifiedOn -> (timestamp)
                 The last time that this job run was modified.

              CompletedOn -> (timestamp)
                 The date and time that this job run completed.

              JobRunState -> (string)
                 The current state of the job run. For more information  about
                 the  statuses  of  jobs  that have terminated abnormally, see
                 Glue Job Run Statuses .

              Arguments -> (map)
                 The job arguments associated with this run. For this job run,
                 they  replace the default arguments set in the job definition
                 itself.

                 You can specify arguments here that  your  own  job-execution
                 script  consumes,  as well as arguments that Glue itself con-
                 sumes.

                 Job arguments may be logged. Do not pass plaintext secrets as
                 arguments.  Retrieve  secrets from a Glue Connection, Secrets
                 Manager or other secret management mechanism if you intend to
                 keep them within the Job.

                 For information about how to specify and consume your own Job
                 arguments, see the Calling Glue APIs in Python topic  in  the
                 developer guide.

                 For  information  about the arguments you can provide to this
                 field when configuring Spark jobs, see the Special Parameters
                 Used by Glue topic in the developer guide.

                 For  information  about the arguments you can provide to this
                 field when configuring Ray jobs, see Using job parameters  in
                 Ray jobs in the developer guide.

                 key -> (string)

                 value -> (string)

              ErrorMessage -> (string)
                 An error message associated with this job run.

              PredecessorRuns -> (list)
                 A list of predecessors to this job run.

                 (structure)
                     A job run that was used in the predicate of a conditional
                     trigger that triggered this job run.

                     JobName -> (string)
                        The name of the job definition used by the predecessor
                        job run.

                     RunId -> (string)
                        The job-run ID of the predecessor job run.

              AllocatedCapacity -> (integer)
                 This field is deprecated. Use MaxCapacity instead.

                 The  number of Glue data processing units (DPUs) allocated to
                 this JobRun. From 2 to 100 DPUs can be allocated; the default
                 is  10.  A DPU is a relative measure of processing power that
                 consists of 4 vCPUs of compute capacity and 16 GB of  memory.
                 For more information, see the Glue pricing page .

              ExecutionTime -> (integer)
                 The amount of time (in seconds) that the job run consumed re-
                 sources.

              Timeout -> (integer)
                 The JobRun timeout in minutes. This is the maximum time  that
                 a  job  run can consume resources before it is terminated and
                 enters TIMEOUT status. This value overrides the timeout value
                 set in the parent job.

                 Streaming  jobs  must have timeout values less than 7 days or
                 10080 minutes. When the value is left blank, the job will  be
                 restarted  after 7 days based if you have not setup a mainte-
                 nance window. If you have setup maintenance window,  it  will
                 be restarted during the maintenance window after 7 days.

              MaxCapacity -> (double)
                 For  Glue  version  1.0  or  earlier jobs, using the standard
                 worker type, the number of Glue data processing units  (DPUs)
                 that can be allocated when this job runs. A DPU is a relative
                 measure of processing power that consists of 4 vCPUs of  com-
                 pute  capacity and 16 GB of memory. For more information, see
                 the Glue pricing page .

                 For Glue version 2.0+ jobs, you cannot specify a Maximum  ca-
                 pacity  .  Instead,  you should specify a Worker type and the
                 Number of workers .

                 Do not set MaxCapacity if using WorkerType and  NumberOfWork-
                 ers .

                 The  value  that  can be allocated for MaxCapacity depends on
                 whether you are running a Python shell job, an  Apache  Spark
                 ETL job, or an Apache Spark streaming ETL job:

                 o When  you  specify  a  Python  shell  job  (JobCommand.Name
                   ="pythonshell"), you can allocate either 0.0625 or  1  DPU.
                   The default is 0.0625 DPU.

                 o When  you  specify an Apache Spark ETL job (JobCommand.Name
                   ="glueetl") or Apache  Spark  streaming  ETL  job  (JobCom-
                   mand.Name ="gluestreaming"), you can allocate from 2 to 100
                   DPUs. The default is 10 DPUs. This job type cannot  have  a
                   fractional DPU allocation.

              WorkerType -> (string)
                 The  type  of  predefined worker that is allocated when a job
                 runs. Accepts a value of G.1X, G.2X, G.4X, G.8X or G.025X for
                 Spark jobs. Accepts the value Z.2X for Ray jobs.

                 o For  the G.1X worker type, each worker maps to 1 DPU (4 vC-
                   PUs, 16 GB of memory) with 84GB  disk  (approximately  34GB
                   free),  and  provides  1  executor per worker. We recommend
                   this worker type for workloads  such  as  data  transforms,
                   joins, and queries, to offers a scalable and cost effective
                   way to run most jobs.

                 o For the G.2X worker type, each worker maps to 2 DPU (8  vC-
                   PUs,  32  GB of memory) with 128GB disk (approximately 77GB
                   free), and provides 1 executor  per  worker.  We  recommend
                   this  worker  type  for  workloads such as data transforms,
                   joins, and queries, to offers a scalable and cost effective
                   way to run most jobs.

                 o For the G.4X worker type, each worker maps to 4 DPU (16 vC-
                   PUs, 64 GB of memory) with 256GB disk (approximately  235GB
                   free),  and  provides  1  executor per worker. We recommend
                   this worker type for jobs whose workloads contain your most
                   demanding  transforms,  aggregations,  joins,  and queries.
                   This worker type is available only for Glue version 3.0  or
                   later  Spark  ETL jobs in the following Amazon Web Services
                   Regions: US East (Ohio), US East  (N.  Virginia),  US  West
                   (Oregon),  Asia Pacific (Singapore), Asia Pacific (Sydney),
                   Asia Pacific (Tokyo), Canada (Central), Europe (Frankfurt),
                   Europe (Ireland), and Europe (Stockholm).

                 o For the G.8X worker type, each worker maps to 8 DPU (32 vC-
                   PUs, 128 GB of memory) with 512GB disk (approximately 487GB
                   free),  and  provides  1  executor per worker. We recommend
                   this worker type for jobs whose workloads contain your most
                   demanding  transforms,  aggregations,  joins,  and queries.
                   This worker type is available only for Glue version 3.0  or
                   later  Spark  ETL jobs, in the same Amazon Web Services Re-
                   gions as supported for the G.4X worker type.

                 o For the G.025X worker type, each worker maps to 0.25 DPU (2
                   vCPUs,  4  GB of memory) with 84GB disk (approximately 34GB
                   free), and provides 1 executor  per  worker.  We  recommend
                   this worker type for low volume streaming jobs. This worker
                   type is only available for Glue version 3.0 streaming jobs.

                 o For the Z.2X worker type, each worker maps to 2 M-DPU (8vC-
                   PUs, 64 GB of memory) with 128 GB disk (approximately 120GB
                   free), and provides up to 8 Ray workers based  on  the  au-
                   toscaler.

              NumberOfWorkers -> (integer)
                 The  number of workers of a defined workerType that are allo-
                 cated when a job runs.

              SecurityConfiguration -> (string)
                 The name of the SecurityConfiguration structure  to  be  used
                 with this job run.

              LogGroupName -> (string)
                 The  name  of  the  log  group for secure logging that can be
                 server-side encrypted in Amazon CloudWatch  using  KMS.  This
                 name  can  be /aws-glue/jobs/ , in which case the default en-
                 cryption is NONE . If you add a role name and SecurityConfig-
                 uration   name   (in  other  words,  /aws-glue/jobs-yourRole-
                 Name-yourSecurityConfigurationName/  ),  then  that  security
                 configuration is used to encrypt the log group.

              NotificationProperty -> (structure)
                 Specifies configuration properties of a job run notification.

                 NotifyDelayAfter -> (integer)
                     After a job run starts, the number of minutes to wait be-
                     fore sending a job run delay notification.

              GlueVersion -> (string)
                 In Spark jobs, GlueVersion determines the versions of  Apache
                 Spark  and  Python  that  Glue available in a job. The Python
                 version indicates the version  supported  for  jobs  of  type
                 Spark.

                 Ray  jobs  should set GlueVersion to 4.0 or greater. However,
                 the versions of Ray, Python and additional  libraries  avail-
                 able  in your Ray job are determined by the Runtime parameter
                 of the Job command.

                 For more information about the available  Glue  versions  and
                 corresponding  Spark and Python versions, see Glue version in
                 the developer guide.

                 Jobs that are created without specifying a Glue  version  de-
                 fault to Glue 0.9.

              DPUSeconds -> (double)
                 This  field  can  be  set  for either job runs with execution
                 class FLEX or when Auto Scaling is  enabled,  and  represents
                 the  total  time  each executor ran during the lifecycle of a
                 job run in seconds, multiplied by a DPU factor (1 for G.1X  ,
                 2  for  G.2X , or 0.25 for G.025X workers). This value may be
                 different than the executionEngineRuntime * MaxCapacity as in
                 the  case  of  Auto  Scaling jobs, as the number of executors
                 running at a given time may be less than  the  MaxCapacity  .
                 Therefore,  it  is  possible  that the value of DPUSeconds is
                 less than executionEngineRuntime * MaxCapacity .

              ExecutionClass -> (string)
                 Indicates whether the job is run with a standard or  flexible
                 execution  class.  The  standard execution-class is ideal for
                 time-sensitive workloads that require fast  job  startup  and
                 dedicated resources.

                 The flexible execution class is appropriate for time-insensi-
                 tive jobs whose start and completion times may vary.

                 Only jobs with Glue version 3.0 and above  and  command  type
                 glueetl  will  be allowed to set ExecutionClass to FLEX . The
                 flexible execution class is available for Spark jobs.

              MaintenanceWindow -> (string)
                 This field specifies a day of the week and hour for a mainte-
                 nance  window  for streaming jobs. Glue periodically performs
                 maintenance activities.  During  these  maintenance  windows,
                 Glue will need to restart your streaming jobs.

                 Glue  will  restart  the  job within 3 hours of the specified
                 maintenance window. For instance, if you set up  the  mainte-
                 nance  window  for  Monday  at 10:00AM GMT, your jobs will be
                 restarted between 10:00AM GMT to 1:00PM GMT.

              ProfileName -> (string)
                 The name of an Glue usage profile  associated  with  the  job
                 run.

       NextToken -> (string)
          A  continuation  token,  if not all requested job runs have been re-
          turned.



                                                                GET-JOB-RUNS()
