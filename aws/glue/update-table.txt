UPDATE-TABLE()                                                  UPDATE-TABLE()



NAME
       update-table -

DESCRIPTION
       Updates a metadata table in the Data Catalog.

       See also: AWS API Documentation

SYNOPSIS
            update-table
          [--catalog-id <value>]
          --database-name <value>
          --table-input <value>
          [--skip-archive | --no-skip-archive]
          [--transaction-id <value>]
          [--version-id <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --catalog-id (string)
          The  ID of the Data Catalog where the table resides. If none is pro-
          vided, the Amazon Web Services account ID is used by default.

       --database-name (string)
          The name of the catalog database in which  the  table  resides.  For
          Hive compatibility, this name is entirely lowercase.

       --table-input (structure)
          An  updated  TableInput  object  to define the metadata table in the
          catalog.

          Name -> (string)
              The table name. For Hive compatibility, this is folded to lower-
              case when it is stored.

          Description -> (string)
              A description of the table.

          Owner -> (string)
              The  table  owner.  Included  for Apache Hive compatibility. Not
              used in the normal course of Glue operations.

          LastAccessTime -> (timestamp)
              The last time that the table was accessed.

          LastAnalyzedTime -> (timestamp)
              The last time that column statistics were computed for this  ta-
              ble.

          Retention -> (integer)
              The retention time for this table.

          StorageDescriptor -> (structure)
              A  storage  descriptor containing information about the physical
              storage of this table.

              Columns -> (list)
                 A list of the Columns in the table.

                 (structure)
                     A column in a Table .

                     Name -> (string)
                        The name of the Column .

                     Type -> (string)
                        The data type of the Column .

                     Comment -> (string)
                        A free-form text comment.

                     Parameters -> (map)
                        These key-value  pairs  define  properties  associated
                        with the column.

                        key -> (string)

                        value -> (string)

              Location -> (string)
                 The  physical  location  of the table. By default, this takes
                 the form of the warehouse location, followed by the  database
                 location in the warehouse, followed by the table name.

              AdditionalLocations -> (list)
                 A  list of locations that point to the path where a Delta ta-
                 ble is located.

                 (string)

              InputFormat -> (string)
                 The input format: SequenceFileInputFormat (binary),  or  Tex-
                 tInputFormat , or a custom format.

              OutputFormat -> (string)
                 The  output format: SequenceFileOutputFormat (binary), or Ig-
                 noreKeyTextOutputFormat , or a custom format.

              Compressed -> (boolean)
                 True if the data in the table is compressed, or False if not.

              NumberOfBuckets -> (integer)
                 Must be specified if the table contains  any  dimension  col-
                 umns.

              SerdeInfo -> (structure)
                 The serialization/deserialization (SerDe) information.

                 Name -> (string)
                     Name of the SerDe.

                 SerializationLibrary -> (string)
                     Usually  the  class that implements the SerDe. An example
                     is org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe .

                 Parameters -> (map)
                     These key-value pairs  define  initialization  parameters
                     for the SerDe.

                     key -> (string)

                     value -> (string)

              BucketColumns -> (list)
                 A  list  of reducer grouping columns, clustering columns, and
                 bucketing columns in the table.

                 (string)

              SortColumns -> (list)
                 A list specifying the sort order of each bucket in the table.

                 (structure)
                     Specifies the sort order of a sorted column.

                     Column -> (string)
                        The name of the column.

                     SortOrder -> (integer)
                        Indicates that the column is sorted in ascending order
                        (== 1 ), or in descending order (==0 ).

              Parameters -> (map)
                 The user-supplied properties in key-value form.

                 key -> (string)

                 value -> (string)

              SkewedInfo -> (structure)
                 The information about values that appear frequently in a col-
                 umn (skewed values).

                 SkewedColumnNames -> (list)
                     A list of names of columns that contain skewed values.

                     (string)

                 SkewedColumnValues -> (list)
                     A list of values that appear so frequently as to be  con-
                     sidered skewed.

                     (string)

                 SkewedColumnValueLocationMaps -> (map)
                     A  mapping  of  skewed values to the columns that contain
                     them.

                     key -> (string)

                     value -> (string)

              StoredAsSubDirectories -> (boolean)
                 True if the table data is stored in subdirectories, or  False
                 if not.

              SchemaReference -> (structure)
                 An  object that references a schema stored in the Glue Schema
                 Registry.

                 When creating a table, you can pass an empty list of  columns
                 for the schema, and instead use a schema reference.

                 SchemaId -> (structure)
                     A  structure that contains schema identity fields. Either
                     this or the SchemaVersionId has to be provided.

                     SchemaArn -> (string)
                        The Amazon Resource Name (ARN) of the schema.  One  of
                        SchemaArn or SchemaName has to be provided.

                     SchemaName -> (string)
                        The name of the schema. One of SchemaArn or SchemaName
                        has to be provided.

                     RegistryName -> (string)
                        The name of the  schema  registry  that  contains  the
                        schema.

                 SchemaVersionId -> (string)
                     The unique ID assigned to a version of the schema. Either
                     this or the SchemaId has to be provided.

                 SchemaVersionNumber -> (long)
                     The version number of the schema.

          PartitionKeys -> (list)
              A list of columns by which the table is partitioned. Only primi-
              tive types are supported as partition keys.

              When  you  create  a table used by Amazon Athena, and you do not
              specify any partitionKeys , you must at least set the  value  of
              partitionKeys to an empty list. For example:
                 "PartitionKeys": []

              (structure)
                 A column in a Table .

                 Name -> (string)
                     The name of the Column .

                 Type -> (string)
                     The data type of the Column .

                 Comment -> (string)
                     A free-form text comment.

                 Parameters -> (map)
                     These  key-value  pairs define properties associated with
                     the column.

                     key -> (string)

                     value -> (string)

          ViewOriginalText -> (string)
              Included for Apache Hive compatibility. Not used in  the  normal
              course of Glue operations. If the table is a VIRTUAL_VIEW , cer-
              tain Athena configuration encoded in base64.

          ViewExpandedText -> (string)
              Included for Apache Hive compatibility. Not used in  the  normal
              course of Glue operations.

          TableType -> (string)
              The  type of this table. Glue will create tables with the EXTER-
              NAL_TABLE type. Other services, such as Athena, may  create  ta-
              bles with additional table types.

              Glue related table types:
                 EXTERNAL_TABLE

              Hive compatible attribute - indicates a non-Hive managed table.
                 GOVERNED

              Used  by  Lake Formation. The Glue Data Catalog understands GOV-
              ERNED .

          Parameters -> (map)
              These key-value pairs define properties associated with the  ta-
              ble.

              key -> (string)

              value -> (string)

          TargetTable -> (structure)
              A  TableIdentifier  structure  that describes a target table for
              resource linking.

              CatalogId -> (string)
                 The ID of the Data Catalog in which the table resides.

              DatabaseName -> (string)
                 The name of the catalog database that contains the target ta-
                 ble.

              Name -> (string)
                 The name of the target table.

       JSON Syntax:

          {
            "Name": "string",
            "Description": "string",
            "Owner": "string",
            "LastAccessTime": timestamp,
            "LastAnalyzedTime": timestamp,
            "Retention": integer,
            "StorageDescriptor": {
              "Columns": [
                {
                  "Name": "string",
                  "Type": "string",
                  "Comment": "string",
                  "Parameters": {"string": "string"
                    ...}
                }
                ...
              ],
              "Location": "string",
              "AdditionalLocations": ["string", ...],
              "InputFormat": "string",
              "OutputFormat": "string",
              "Compressed": true|false,
              "NumberOfBuckets": integer,
              "SerdeInfo": {
                "Name": "string",
                "SerializationLibrary": "string",
                "Parameters": {"string": "string"
                  ...}
              },
              "BucketColumns": ["string", ...],
              "SortColumns": [
                {
                  "Column": "string",
                  "SortOrder": integer
                }
                ...
              ],
              "Parameters": {"string": "string"
                ...},
              "SkewedInfo": {
                "SkewedColumnNames": ["string", ...],
                "SkewedColumnValues": ["string", ...],
                "SkewedColumnValueLocationMaps": {"string": "string"
                  ...}
              },
              "StoredAsSubDirectories": true|false,
              "SchemaReference": {
                "SchemaId": {
                  "SchemaArn": "string",
                  "SchemaName": "string",
                  "RegistryName": "string"
                },
                "SchemaVersionId": "string",
                "SchemaVersionNumber": long
              }
            },
            "PartitionKeys": [
              {
                "Name": "string",
                "Type": "string",
                "Comment": "string",
                "Parameters": {"string": "string"
                  ...}
              }
              ...
            ],
            "ViewOriginalText": "string",
            "ViewExpandedText": "string",
            "TableType": "string",
            "Parameters": {"string": "string"
              ...},
            "TargetTable": {
              "CatalogId": "string",
              "DatabaseName": "string",
              "Name": "string"
            }
          }

       --skip-archive | --no-skip-archive (boolean)
          By  default,  UpdateTable  always creates an archived version of the
          table before updating it. However, if skipArchive is  set  to  true,
          UpdateTable does not create the archived version.

       --transaction-id (string)
          The transaction ID at which to update the table contents.

       --version-id (string)
          The version ID at which to update the table contents.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       None



                                                                UPDATE-TABLE()
