PUT-EVENTS()                                                      PUT-EVENTS()



NAME
       put-events -

DESCRIPTION
       Sends  custom  events to Amazon EventBridge so that they can be matched
       to rules.

       NOTE:
          PutEvents will only process nested JSON up to 1100 levels deep.

       See also: AWS API Documentation

SYNOPSIS
            put-events
          --entries <value>
          [--endpoint-id <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --entries (list)
          The entry that defines an event in your system. You can specify sev-
          eral  parameters  for  the  entry such as the source and type of the
          event, resources associated with the event, and so on.

          (structure)
              Represents an event to be submitted.

              Time -> (timestamp)
                 The time stamp of the event, per RFC3339 . If no  time  stamp
                 is provided, the time stamp of the PutEvents call is used.

              Source -> (string)
                 The source of the event.

              Resources -> (list)
                 Amazon  Web Services resources, identified by Amazon Resource
                 Name (ARN), which the event primarily concerns.  Any  number,
                 including zero, may be present.

                 (string)

              DetailType -> (string)
                 Free-form  string used to decide what fields to expect in the
                 event detail.

              Detail -> (string)
                 A valid JSON object. There is no other  schema  imposed.  The
                 JSON object may contain fields and nested subobjects.

              EventBusName -> (string)
                 The  name  or ARN of the event bus to receive the event. Only
                 the rules that are associated with this event bus are used to
                 match  the  event. If you omit this, the default event bus is
                 used.

                 NOTE:
                     If you're using a global endpoint with a custom bus,  you
                     must enter the name, not the ARN, of the event bus in ei-
                     ther the primary or secondary Region here and the  corre-
                     sponding event bus in the other Region will be determined
                     based on the endpoint referenced by the EndpointId .

              TraceHeader -> (string)
                 An  X-Ray   trace   header,   which   is   an   http   header
                 (X-Amzn-Trace-Id)  that contains the trace-id associated with
                 the event.

                 To learn more about X-Ray trace headers, see  Tracing  header
                 in the X-Ray Developer Guide.

       Shorthand Syntax:

          Time=timestamp,Source=string,Resources=string,string,DetailType=string,Detail=string,EventBusName=string,TraceHeader=string ...

       JSON Syntax:

          [
            {
              "Time": timestamp,
              "Source": "string",
              "Resources": ["string", ...],
              "DetailType": "string",
              "Detail": "string",
              "EventBusName": "string",
              "TraceHeader": "string"
            }
            ...
          ]

       --endpoint-id (string)
          The  URL subdomain of the endpoint. For example, if the URL for End-
          point  is  abcde.veo.endpoints.event.amazonaws.com,  then  the  End-
          pointId is abcde.veo .

          WARNING:
              When using Java, you must include auth-crt on the class path.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To send a custom event to CloudWatch Events

       This  example  sends  a custom event to CloudWatch Events. The event is
       contained within the putevents.json file:

          aws events put-events --entries file://putevents.json

       Here are the contents of the putevents.json file:

          [
            {
              "Source": "com.mycompany.myapp",
              "Detail": "{ \"key1\": \"value1\", \"key2\": \"value2\" }",
              "Resources": [
                "resource1",
                "resource2"
              ],
              "DetailType": "myDetailType"
            },
            {
              "Source": "com.mycompany.myapp",
              "Detail": "{ \"key1\": \"value3\", \"key2\": \"value4\" }",
              "Resources": [
                "resource1",
                "resource2"
              ],
              "DetailType": "myDetailType"
             }
          ]

OUTPUT
       FailedEntryCount -> (integer)
          The number of failed entries.

       Entries -> (list)
          The successfully and unsuccessfully ingested events results. If  the
          ingestion  was  successful, the entry has the event ID in it. Other-
          wise, you can use the error code and error message to  identify  the
          problem with the entry.

          (structure)
              Represents an event that failed to be submitted. For information
              about the errors that are common to all actions, see Common  Er-
              rors .

              EventId -> (string)
                 The ID of the event.

              ErrorCode -> (string)
                 The  error  code  that  indicates  why  the  event submission
                 failed.

              ErrorMessage -> (string)
                 The error message that  explains  why  the  event  submission
                 failed.



                                                                  PUT-EVENTS()
