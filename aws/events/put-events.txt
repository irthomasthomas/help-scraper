PUT-EVENTS()                                                      PUT-EVENTS()



NAME
       put-events -

DESCRIPTION
       Sends  custom  events to Amazon EventBridge so that they can be matched
       to rules.

       The maximum size for a PutEvents event entry is 256 KB. Entry  size  is
       calculated including the event and any necessary characters and keys of
       the JSON representation of the event. To learn  more,  see  Calculating
       PutEvents event entry size in the Amazon EventBridge User Guide

       PutEvents  accepts  the data in JSON format. For the JSON number (inte-
       ger)  data  type,   the   constraints   are:   a   minimum   value   of
       -9,223,372,036,854,775,808      and      a     maximum     value     of
       9,223,372,036,854,775,807.

       NOTE:
          PutEvents will only process nested JSON up to 1100 levels deep.

       See also: AWS API Documentation

SYNOPSIS
            put-events
          --entries <value>
          [--endpoint-id <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --entries (list)
          The entry that defines an event in your system. You can specify sev-
          eral  parameters  for  the  entry such as the source and type of the
          event, resources associated with the event, and so on.

          (structure)
              Represents an event to be submitted.

              Time -> (timestamp)
                 The time stamp of the event, per RFC3339 . If no  time  stamp
                 is provided, the time stamp of the PutEvents call is used.

              Source -> (string)
                 The source of the event.

                 NOTE:
                     Detail  , DetailType , and Source are required for Event-
                     Bridge to successfully send an event to an event bus.  If
                     you  include  event  entries in a request that do not in-
                     clude each of those properties,  EventBridge  fails  that
                     entry.  If  you submit a request in which none of the en-
                     tries have each of these  properties,  EventBridge  fails
                     the entire request.

              Resources -> (list)
                 Amazon  Web Services resources, identified by Amazon Resource
                 Name (ARN), which the event primarily concerns.  Any  number,
                 including zero, may be present.

                 (string)

              DetailType -> (string)
                 Free-form  string,  with a maximum of 128 characters, used to
                 decide what fields to expect in the event detail.

                 NOTE:
                     Detail , DetailType , and Source are required for  Event-
                     Bridge  to successfully send an event to an event bus. If
                     you include event entries in a request that  do  not  in-
                     clude  each  of  those properties, EventBridge fails that
                     entry. If you submit a request in which none of  the  en-
                     tries  have  each  of these properties, EventBridge fails
                     the entire request.

              Detail -> (string)
                 A valid JSON object. There is no other  schema  imposed.  The
                 JSON object may contain fields and nested sub-objects.

                 NOTE:
                     Detail  , DetailType , and Source are required for Event-
                     Bridge to successfully send an event to an event bus.  If
                     you  include  event  entries in a request that do not in-
                     clude each of those properties,  EventBridge  fails  that
                     entry.  If  you submit a request in which none of the en-
                     tries have each of these  properties,  EventBridge  fails
                     the entire request.

              EventBusName -> (string)
                 The  name  or ARN of the event bus to receive the event. Only
                 the rules that are associated with this event bus are used to
                 match  the  event. If you omit this, the default event bus is
                 used.

                 NOTE:
                     If you're using a global endpoint with a custom bus,  you
                     can  enter  either the name or Amazon Resource Name (ARN)
                     of the event bus in either the primary or  secondary  Re-
                     gion  here. EventBridge then determines the corresponding
                     event bus in the other Region based on the endpoint  ref-
                     erenced  by the EndpointId . Specifying the event bus ARN
                     is preferred.

              TraceHeader -> (string)
                 An  X-Ray   trace   header,   which   is   an   http   header
                 (X-Amzn-Trace-Id)  that contains the trace-id associated with
                 the event.

                 To learn more about X-Ray trace headers, see  Tracing  header
                 in the X-Ray Developer Guide.

       Shorthand Syntax:

          Time=timestamp,Source=string,Resources=string,string,DetailType=string,Detail=string,EventBusName=string,TraceHeader=string ...

       JSON Syntax:

          [
            {
              "Time": timestamp,
              "Source": "string",
              "Resources": ["string", ...],
              "DetailType": "string",
              "Detail": "string",
              "EventBusName": "string",
              "TraceHeader": "string"
            }
            ...
          ]

       --endpoint-id (string)
          The  URL subdomain of the endpoint. For example, if the URL for End-
          point is https://abcde.veo.endpoints.event.amazonaws.com,  then  the
          EndpointId is abcde.veo .

          WARNING:
              When using Java, you must include auth-crt on the class path.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To send a custom event to CloudWatch Events

       This  example  sends  a custom event to CloudWatch Events. The event is
       contained within the putevents.json file:

          aws events put-events --entries file://putevents.json

       Here are the contents of the putevents.json file:

          [
            {
              "Source": "com.mycompany.myapp",
              "Detail": "{ \"key1\": \"value1\", \"key2\": \"value2\" }",
              "Resources": [
                "resource1",
                "resource2"
              ],
              "DetailType": "myDetailType"
            },
            {
              "Source": "com.mycompany.myapp",
              "Detail": "{ \"key1\": \"value3\", \"key2\": \"value4\" }",
              "Resources": [
                "resource1",
                "resource2"
              ],
              "DetailType": "myDetailType"
             }
          ]

OUTPUT
       FailedEntryCount -> (integer)
          The number of failed entries.

       Entries -> (list)
          The successfully and unsuccessfully ingested events results. If  the
          ingestion  was  successful, the entry has the event ID in it. Other-
          wise, you can use the error code and error message to  identify  the
          problem with the entry.

          For  each  record,  the index of the response element is the same as
          the index in the request array.

          (structure)
              Represents the results of an event submitted to an event bus.

              If the submission was successful, the entry has the event ID  in
              it.  Otherwise,  you can use the error code and error message to
              identify the problem with the entry.

              For information about the errors that are common to all actions,
              see Common Errors .

              EventId -> (string)
                 The ID of the event.

              ErrorCode -> (string)
                 The  error  code  that  indicates  why  the  event submission
                 failed.

                 Retryable errors include:

                 o

                   ``
                   InternalFailure ``   The request processing has failed  be-
                   cause of an unknown error, exception or failure.

                 System Message: WARNING/2 (<string>:, line 455)
                   Inline literal start-string without end-string.

                 o

                   ``
                   ThrottlingException  ``   The request was denied due to re-
                   quest throttling.

                 System Message: WARNING/2 (<string>:, line 457)
                   Inline literal start-string without end-string.

                 Non-retryable errors include:

                 o

                   ``
                   AccessDeniedException ``   You do not have  sufficient  ac-
                   cess to perform this action.

                 System Message: WARNING/2 (<string>:, line 467)
                   Inline literal start-string without end-string.

                 o InvalidAccountIdException    The account ID provided is not
                   valid.

                 o InvalidArgument   A specified parameter is not valid.

                 o MalformedDetail   The JSON provided is not valid.

                 o RedactionFailure   Redacting the CloudTrail event failed.

                 o NotAuthorizedForSourceException   You do not  have  permis-
                   sions  to  publish  events with this source onto this event
                   bus.

                 o NotAuthorizedForDetailTypeException   You do not have  per-
                   missions  to publish events with this detail type onto this
                   event bus.

              ErrorMessage -> (string)
                 The error message that  explains  why  the  event  submission
                 failed.



                                                                  PUT-EVENTS()
