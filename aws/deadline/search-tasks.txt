SEARCH-TASKS()                                                  SEARCH-TASKS()



NAME
       search-tasks -

DESCRIPTION
       Searches for tasks.

       See also: AWS API Documentation

SYNOPSIS
            search-tasks
          --farm-id <value>
          [--filter-expressions <value>]
          --item-offset <value>
          [--job-id <value>]
          [--page-size <value>]
          --queue-ids <value>
          [--sort-expressions <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --farm-id (string)
          The farm ID of the task.

       --filter-expressions (structure)
          The  filter  expression,  AND  or OR , to use when searching among a
          group of search strings in a resource.

          You can use two groupings per search each within parenthesis () .

          filters -> (list)
              The filters to use for the search.

              (tagged union structure)
                 The type of search filter to apply.

                 NOTE:
                     This is a Tagged Union structure. Only one of the follow-
                     ing  top level keys can be set: dateTimeFilter, groupFil-
                     ter, parameterFilter, searchTermFilter, stringFilter.

                 dateTimeFilter -> (structure)
                     Filters based on date and time.

                     dateTime -> (timestamp)
                        The date and time.

                     name -> (string)
                        The name of the date-time field to filter on.

                     operator -> (string)
                        The type of comparison to use to filter the results.

                 groupFilter -> (structure)
                     Filters by group.

                     filters -> (list)
                        The filters to use for the search.

                        (tagged union structure)
                            The type of search filter to apply.

                            NOTE:
                               This is a Tagged Union structure. Only  one  of
                               the  following top level keys can be set: date-
                               TimeFilter,    groupFilter,    parameterFilter,
                               searchTermFilter, stringFilter.

                            dateTimeFilter -> (structure)
                               Filters based on date and time.

                               dateTime -> (timestamp)
                                   The date and time.

                               name -> (string)
                                   The  name  of the date-time field to filter
                                   on.

                               operator -> (string)
                                   The type of comparison to use to filter the
                                   results.

                            (  ...  recursive  ... )parameterFilter -> (struc-
                            ture)
                               Filters by parameter.

                               name -> (string)
                                   The name of the parameter to filter on.

                               operator -> (string)
                                   The type of comparison to use to filter re-
                                   sults.

                               value -> (string)
                                   The parameter's value.

                            searchTermFilter -> (structure)
                               Filters by a specified search term.

                               searchTerm -> (string)
                                   The term to search for.

                            stringFilter -> (structure)
                               Filters by a string.

                               name -> (string)
                                   The field name to search.

                               operator -> (string)
                                   The  type  of  comparison  to  use for this
                                   search.

                               value -> (string)
                                   The string to search for.

                     operator -> (string)
                        The operators to include in the search.

                 parameterFilter -> (structure)
                     Filters by parameter.

                     name -> (string)
                        The name of the parameter to filter on.

                     operator -> (string)
                        The type of comparison to use to filter results.

                     value -> (string)
                        The parameter's value.

                 searchTermFilter -> (structure)
                     Filters by a specified search term.

                     searchTerm -> (string)
                        The term to search for.

                 stringFilter -> (structure)
                     Filters by a string.

                     name -> (string)
                        The field name to search.

                     operator -> (string)
                        The type of comparison to use for this search.

                     value -> (string)
                        The string to search for.

          operator -> (string)
              The operators to include in the search.

       JSON Syntax:

          {
            "filters": [
              {
                "dateTimeFilter": {
                  "dateTime": timestamp,
                  "name": "string",
                  "operator": "EQUAL"|"NOT_EQUAL"|"GREATER_THAN_EQUAL_TO"|"GREATER_THAN"|"LESS_THAN_EQUAL_TO"|"LESS_THAN"
                },
                "groupFilter": {
                  "filters": [
                    {
                      "dateTimeFilter": {
                        "dateTime": timestamp,
                        "name": "string",
                        "operator": "EQUAL"|"NOT_EQUAL"|"GREATER_THAN_EQUAL_TO"|"GREATER_THAN"|"LESS_THAN_EQUAL_TO"|"LESS_THAN"
                      },
                      "groupFilter": { ... recursive ... },
                      "parameterFilter": {
                        "name": "string",
                        "operator": "EQUAL"|"NOT_EQUAL"|"GREATER_THAN_EQUAL_TO"|"GREATER_THAN"|"LESS_THAN_EQUAL_TO"|"LESS_THAN",
                        "value": "string"
                      },
                      "searchTermFilter": {
                        "searchTerm": "string"
                      },
                      "stringFilter": {
                        "name": "string",
                        "operator": "EQUAL"|"NOT_EQUAL"|"GREATER_THAN_EQUAL_TO"|"GREATER_THAN"|"LESS_THAN_EQUAL_TO"|"LESS_THAN",
                        "value": "string"
                      }
                    }
                    ...
                  ],
                  "operator": "AND"|"OR"
                },
                "parameterFilter": {
                  "name": "string",
                  "operator": "EQUAL"|"NOT_EQUAL"|"GREATER_THAN_EQUAL_TO"|"GREATER_THAN"|"LESS_THAN_EQUAL_TO"|"LESS_THAN",
                  "value": "string"
                },
                "searchTermFilter": {
                  "searchTerm": "string"
                },
                "stringFilter": {
                  "name": "string",
                  "operator": "EQUAL"|"NOT_EQUAL"|"GREATER_THAN_EQUAL_TO"|"GREATER_THAN"|"LESS_THAN_EQUAL_TO"|"LESS_THAN",
                  "value": "string"
                }
              }
              ...
            ],
            "operator": "AND"|"OR"
          }

       --item-offset (integer)
          Defines how far into the scrollable list to start the return of  re-
          sults.

       --job-id (string)
          The job ID for the task search.

       --page-size (integer)
          Specifies the number of items per page for the resource.

       --queue-ids (list)
          The queue IDs to include in the search.

          (string)

       Syntax:

          "string" "string" ...

       --sort-expressions (list)
          The search terms for a resource.

          (tagged union structure)
              The resources to search.

              NOTE:
                 This  is  a Tagged Union structure. Only one of the following
                 top level keys can be set: fieldSort, parameterSort, userJob-
                 sFirst.

              fieldSort -> (structure)
                 Options for sorting by a field.

                 name -> (string)
                     The name of the field.

                 sortOrder -> (string)
                     The sort order for the field.

              parameterSort -> (structure)
                 Options for sorting by a parameter.

                 name -> (string)
                     The parameter name to sort by.

                 sortOrder -> (string)
                     The sort order for the parameter.

              userJobsFirst -> (structure)
                 Options for sorting a particular user's jobs first.

                 userIdentityId -> (string)
                     The user's ID.

       Shorthand Syntax:

          fieldSort={name=string,sortOrder=string},parameterSort={name=string,sortOrder=string},userJobsFirst={userIdentityId=string} ...

       JSON Syntax:

          [
            {
              "fieldSort": {
                "name": "string",
                "sortOrder": "ASCENDING"|"DESCENDING"
              },
              "parameterSort": {
                "name": "string",
                "sortOrder": "ASCENDING"|"DESCENDING"
              },
              "userJobsFirst": {
                "userIdentityId": "string"
              }
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       nextItemOffset -> (integer)
          The next incremental starting point after the defined itemOffset .

       tasks -> (list)
          Tasks in the search.

          (structure)
              The details of a task search.

              endedAt -> (timestamp)
                 The date and time the resource ended running.

              failureRetryCount -> (integer)
                 The number of times that the task failed and was retried.

              jobId -> (string)
                 The job ID.

              parameters -> (map)
                 The parameters to search for.

                 key -> (string)

                 value -> (tagged union structure)
                     The data types for the task parameters.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing  top  level  keys can be set: float, int, path,
                        string.

                     float -> (string)
                        A double precision IEEE-754 floating point number rep-
                        resented as a string.

                     int -> (string)
                        A signed integer represented as a string.

                     path -> (string)
                        A file system path represented as a string.

                     string -> (string)
                        A UTF-8 string.

              queueId -> (string)
                 The queue ID.

              runStatus -> (string)
                 The run status of the task.

              startedAt -> (timestamp)
                 The date and time the resource started running.

              stepId -> (string)
                 The step ID.

              targetRunStatus -> (string)
                 The run status that the task is being updated to.

              taskId -> (string)
                 The task ID.

       totalResults -> (integer)
          The total number of results in the search.



                                                                SEARCH-TASKS()
