SEARCH-JOBS()                                                    SEARCH-JOBS()



NAME
       search-jobs -

DESCRIPTION
       Searches for jobs.

       See also: AWS API Documentation

SYNOPSIS
            search-jobs
          --farm-id <value>
          --queue-ids <value>
          [--filter-expressions <value>]
          [--sort-expressions <value>]
          --item-offset <value>
          [--page-size <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --farm-id (string)
          The farm ID of the job.

       --queue-ids (list)
          The queue ID to use in the job search.

          (string)

       Syntax:

          "string" "string" ...

       --filter-expressions (structure)
          The  filter  expression,  AND  or OR , to use when searching among a
          group of search strings in a resource.

          You can use two groupings per search each within parenthesis () .

          filters -> (list)
              The filters to use for the search.

              (tagged union structure)
                 The type of search filter to apply.

                 NOTE:
                     This is a Tagged Union structure. Only one of the follow-
                     ing top level keys can be set: dateTimeFilter, parameter-
                     Filter, searchTermFilter, stringFilter, groupFilter.

                 dateTimeFilter -> (structure)
                     Filters based on date and time.

                     name -> (string)
                        The name of the date-time field to filter on.

                     operator -> (string)
                        The type of comparison to use to filter the results.

                     dateTime -> (timestamp)
                        The date and time.

                 parameterFilter -> (structure)
                     Filters by parameter.

                     name -> (string)
                        The name of the parameter to filter on.

                     operator -> (string)
                        The type of comparison to use to filter results.

                     value -> (string)
                        The parameter's value.

                 searchTermFilter -> (structure)
                     Filters by a specified search term.

                     searchTerm -> (string)
                        The term to search for.

                 stringFilter -> (structure)
                     Filters by a string.

                     name -> (string)
                        The field name to search.

                     operator -> (string)
                        The type of comparison to use for this search.

                     value -> (string)
                        The string to search for.

                 groupFilter -> (structure)
                     Filters by group.

                     filters -> (list)
                        The filters to use for the search.

                        (tagged union structure)
                            The type of search filter to apply.

                            NOTE:
                               This is a Tagged Union structure. Only  one  of
                               the  following top level keys can be set: date-
                               TimeFilter, parameterFilter,  searchTermFilter,
                               stringFilter, groupFilter.

                            dateTimeFilter -> (structure)
                               Filters based on date and time.

                               name -> (string)
                                   The  name  of the date-time field to filter
                                   on.

                               operator -> (string)
                                   The type of comparison to use to filter the
                                   results.

                               dateTime -> (timestamp)
                                   The date and time.

                            parameterFilter -> (structure)
                               Filters by parameter.

                               name -> (string)
                                   The name of the parameter to filter on.

                               operator -> (string)
                                   The type of comparison to use to filter re-
                                   sults.

                               value -> (string)
                                   The parameter's value.

                            searchTermFilter -> (structure)
                               Filters by a specified search term.

                               searchTerm -> (string)
                                   The term to search for.

                            stringFilter -> (structure)
                               Filters by a string.

                               name -> (string)
                                   The field name to search.

                               operator -> (string)
                                   The type of  comparison  to  use  for  this
                                   search.

                               value -> (string)
                                   The string to search for.

                            ( ... recursive ... )

                     operator -> (string)
                        The operators to include in the search.

          operator -> (string)
              The operators to include in the search.

       JSON Syntax:

          {
            "filters": [
              {
                "dateTimeFilter": {
                  "name": "string",
                  "operator": "EQUAL"|"NOT_EQUAL"|"GREATER_THAN_EQUAL_TO"|"GREATER_THAN"|"LESS_THAN_EQUAL_TO"|"LESS_THAN",
                  "dateTime": timestamp
                },
                "parameterFilter": {
                  "name": "string",
                  "operator": "EQUAL"|"NOT_EQUAL"|"GREATER_THAN_EQUAL_TO"|"GREATER_THAN"|"LESS_THAN_EQUAL_TO"|"LESS_THAN",
                  "value": "string"
                },
                "searchTermFilter": {
                  "searchTerm": "string"
                },
                "stringFilter": {
                  "name": "string",
                  "operator": "EQUAL"|"NOT_EQUAL"|"GREATER_THAN_EQUAL_TO"|"GREATER_THAN"|"LESS_THAN_EQUAL_TO"|"LESS_THAN",
                  "value": "string"
                },
                "groupFilter": {
                  "filters": [
                    {
                      "dateTimeFilter": {
                        "name": "string",
                        "operator": "EQUAL"|"NOT_EQUAL"|"GREATER_THAN_EQUAL_TO"|"GREATER_THAN"|"LESS_THAN_EQUAL_TO"|"LESS_THAN",
                        "dateTime": timestamp
                      },
                      "parameterFilter": {
                        "name": "string",
                        "operator": "EQUAL"|"NOT_EQUAL"|"GREATER_THAN_EQUAL_TO"|"GREATER_THAN"|"LESS_THAN_EQUAL_TO"|"LESS_THAN",
                        "value": "string"
                      },
                      "searchTermFilter": {
                        "searchTerm": "string"
                      },
                      "stringFilter": {
                        "name": "string",
                        "operator": "EQUAL"|"NOT_EQUAL"|"GREATER_THAN_EQUAL_TO"|"GREATER_THAN"|"LESS_THAN_EQUAL_TO"|"LESS_THAN",
                        "value": "string"
                      },
                      "groupFilter": { ... recursive ... }
                    }
                    ...
                  ],
                  "operator": "AND"|"OR"
                }
              }
              ...
            ],
            "operator": "AND"|"OR"
          }

       --sort-expressions (list)
          The search terms for a resource.

          (tagged union structure)
              The resources to search.

              NOTE:
                 This  is  a Tagged Union structure. Only one of the following
                 top level keys can be set: userJobsFirst, fieldSort,  parame-
                 terSort.

              userJobsFirst -> (structure)
                 Options for sorting a particular user's jobs first.

                 userIdentityId -> (string)
                     The user's ID.

              fieldSort -> (structure)
                 Options for sorting by a field.

                 sortOrder -> (string)
                     The sort order for the field.

                 name -> (string)
                     The name of the field.

              parameterSort -> (structure)
                 Options for sorting by a parameter.

                 sortOrder -> (string)
                     The sort order for the parameter.

                 name -> (string)
                     The parameter name to sort by.

       Shorthand Syntax:

          userJobsFirst={userIdentityId=string},fieldSort={sortOrder=string,name=string},parameterSort={sortOrder=string,name=string} ...

       JSON Syntax:

          [
            {
              "userJobsFirst": {
                "userIdentityId": "string"
              },
              "fieldSort": {
                "sortOrder": "ASCENDING"|"DESCENDING",
                "name": "string"
              },
              "parameterSort": {
                "sortOrder": "ASCENDING"|"DESCENDING",
                "name": "string"
              }
            }
            ...
          ]

       --item-offset (integer)
          Defines  how far into the scrollable list to start the return of re-
          sults.

       --page-size (integer)
          Specifies the number of items per page for the resource.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       jobs -> (list)
          The jobs in the search.

          (structure)
              The details of a job search.

              jobId -> (string)
                 The job ID.

              queueId -> (string)
                 The queue ID.

              name -> (string)
                 The job name.

              lifecycleStatus -> (string)
                 The life cycle status.

              lifecycleStatusMessage -> (string)
                 The life cycle status message.

              taskRunStatus -> (string)
                 The task run status for the job.

                 o PENDING pending and waiting for resources.

                 o READY ready to be processed.

                 o ASSIGNED assigned and will run next on a worker.

                 o SCHEDULED scheduled to be run on a worker.

                 o INTERRUPTING being interrupted.

                 o RUNNING running on a worker.

                 o SUSPENDED the task is suspended.

                 o CANCELED the task has been canceled.

                 o FAILED the task has failed.

                 o SUCCEEDED the task has succeeded.

              targetTaskRunStatus -> (string)
                 The task status to start with on the job.

              taskRunStatusCounts -> (map)
                 The number of tasks running on the job.

                 key -> (string)

                 value -> (integer)

              priority -> (integer)
                 The job priority.

              maxFailedTasksCount -> (integer)
                 The  number of task failures before the job stops running and
                 is marked as FAILED .

              maxRetriesPerTask -> (integer)
                 The maximum number of retries for a job.

              createdBy -> (string)
                 The user or system that created this resource.

              createdAt -> (timestamp)
                 The date and time the resource was created.

              endedAt -> (timestamp)
                 The date and time the resource ended running.

              startedAt -> (timestamp)
                 The date and time the resource started running.

              jobParameters -> (map)
                 The job parameters.

                 key -> (string)

                 value -> (tagged union structure)
                     The details of job parameters.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing  top level keys can be set: int, float, string,
                        path.

                     int -> (string)
                        A signed integer represented as a string.

                     float -> (string)
                        A double precision IEEE-754 floating point number rep-
                        resented as a string.

                     string -> (string)
                        A UTF-8 string.

                     path -> (string)
                        A file system path represented as a string.

       nextItemOffset -> (integer)
          The next incremental starting point after the defined itemOffset .

       totalResults -> (integer)
          The total number of results in the search.



                                                                 SEARCH-JOBS()
