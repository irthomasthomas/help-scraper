GET-STEP()                                                          GET-STEP()



NAME
       get-step -

DESCRIPTION
       Gets a step.

       See also: AWS API Documentation

SYNOPSIS
            get-step
          --farm-id <value>
          --queue-id <value>
          --job-id <value>
          --step-id <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --farm-id (string)
          The farm ID for the step.

       --queue-id (string)
          The queue ID for the step.

       --job-id (string)
          The job ID for the step.

       --step-id (string)
          The step ID.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       stepId -> (string)
          The step ID.

       name -> (string)
          The name of the step.

       lifecycleStatus -> (string)
          The life cycle status of the step.

       lifecycleStatusMessage -> (string)
          A message that describes the lifecycle status of the step.

       taskRunStatus -> (string)
          The task run status for the job.

       taskRunStatusCounts -> (map)
          The number of tasks running on the job.

          key -> (string)

          value -> (integer)

       targetTaskRunStatus -> (string)
          The task status with which the job started.

       createdAt -> (timestamp)
          The date and time the resource was created.

       createdBy -> (string)
          The user or system that created this resource.

       updatedAt -> (timestamp)
          The date and time the resource was updated.

       updatedBy -> (string)
          The user or system that updated this resource.

       startedAt -> (timestamp)
          The date and time the resource started running.

       endedAt -> (timestamp)
          The date and time the resource ended running.

       dependencyCounts -> (structure)
          The number of dependencies in the step.

          dependenciesResolved -> (integer)
              The number of resolved dependencies.

          dependenciesUnresolved -> (integer)
              The number of unresolved dependencies.

          consumersResolved -> (integer)
              The number of consumers resolved.

          consumersUnresolved -> (integer)
              The number of unresolved consumers.

       requiredCapabilities -> (structure)
          The required capabilities of the step.

          attributes -> (list)
              The capability attributes that the step requires.

              (structure)
                 The list of step attributes.

                 name -> (string)
                     The name of the step attribute.

                 anyOf -> (list)
                     Requires any of the step attributes in a given list.

                     (string)

                 allOf -> (list)
                     Requires all of the step attribute values.

                     (string)

          amounts -> (list)
              The capability amounts that the step requires.

              (structure)
                 The details outlining the minimum and maximum capability of a
                 step.

                 name -> (string)
                     The name of the step.

                 min -> (double)
                     The minimum amount.

                 max -> (double)
                     The maximum amount.

                 value -> (double)
                     The amount value.

       parameterSpace -> (structure)
          A list of step parameters and the  combination  expression  for  the
          step.

          parameters -> (list)
              The parameters to search for.

              (structure)
                 The details of a step parameter.

                 name -> (string)
                     The name of the parameter.

                 type -> (string)
                     The data type of the parameter.

          combination -> (string)
              The combination expression to use in the search.

       description -> (string)
          The description of the step.

          WARNING:
              This  field can store any content. Escape or encode this content
              before displaying it on a webpage or any other system that might
              interpret the content of this field.



                                                                    GET-STEP()
