START-JOB-RUN()                                                START-JOB-RUN()



NAME
       start-job-run -

DESCRIPTION
       Starts a job run.

       See also: AWS API Documentation

SYNOPSIS
            start-job-run
          --application-id <value>
          [--client-token <value>]
          --execution-role-arn <value>
          [--job-driver <value>]
          [--configuration-overrides <value>]
          [--tags <value>]
          [--execution-timeout-minutes <value>]
          [--name <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --application-id (string)
          The ID of the application on which to run the job.

       --client-token (string)
          The client idempotency token of the job run to start. Its value must
          be unique for each request.

       --execution-role-arn (string)
          The execution role ARN for the job run.

       --job-driver (tagged union structure)
          The job driver for the job run.

          NOTE:
              This is a Tagged Union structure. Only one of the following  top
              level keys can be set: sparkSubmit, hive.

          sparkSubmit -> (structure)
              The job driver parameters specified for Spark.

              entryPoint -> (string)
                 The entry point for the Spark submit job run.

              entryPointArguments -> (list)
                 The arguments for the Spark submit job run.

                 (string)

              sparkSubmitParameters -> (string)
                 The parameters for the Spark submit job run.

          hive -> (structure)
              The job driver parameters specified for Hive.

              query -> (string)
                 The query for the Hive job run.

              initQueryFile -> (string)
                 The query file for the Hive job run.

              parameters -> (string)
                 The parameters for the Hive job run.

       Shorthand Syntax:

          sparkSubmit={entryPoint=string,entryPointArguments=[string,string],sparkSubmitParameters=string},hive={query=string,initQueryFile=string,parameters=string}

       JSON Syntax:

          {
            "sparkSubmit": {
              "entryPoint": "string",
              "entryPointArguments": ["string", ...],
              "sparkSubmitParameters": "string"
            },
            "hive": {
              "query": "string",
              "initQueryFile": "string",
              "parameters": "string"
            }
          }

       --configuration-overrides (structure)
          The configuration overrides for the job run.

          applicationConfiguration -> (list)
              The override configurations for the application.

              (structure)
                 A configuration specification to be used when provisioning an
                 application. A configuration consists  of  a  classification,
                 properties, and optional nested configurations. A classifica-
                 tion refers to an  application-specific  configuration  file.
                 Properties are the settings you want to change in that file.

                 classification -> (string)
                     The classification within a configuration.

                 properties -> (map)
                     A  set  of  properties  specified  within a configuration
                     classification.

                     key -> (string)

                     value -> (string)

                 configurations -> (list)
                     A list of additional configurations  to  apply  within  a
                     configuration object.

                     (structure)
                        A  configuration  specification to be used when provi-
                        sioning an application. A configuration consists of  a
                        classification,  properties,  and optional nested con-
                        figurations. A classification refers  to  an  applica-
                        tion-specific  configuration  file. Properties are the
                        settings you want to change in that file.

                        classification -> (string)
                            The classification within a configuration.

                        properties -> (map)
                            A set of properties specified within a  configura-
                            tion classification.

                            key -> (string)

                            value -> (string)

          monitoringConfiguration -> (structure)
              The override configurations for monitoring.

              s3MonitoringConfiguration -> (structure)
                 The Amazon S3 configuration for monitoring log publishing.

                 logUri -> (string)
                     The Amazon S3 destination URI for log publishing.

                 encryptionKeyArn -> (string)
                     The  KMS  key  ARN  to  encrypt the logs published to the
                     given Amazon S3 destination.

              managedPersistenceMonitoringConfiguration -> (structure)
                 The managed log persistence configuration for a job run.

                 enabled -> (boolean)
                     Enables managed logging and defaults to true. If  set  to
                     false, managed logging will be turned off.

                 encryptionKeyArn -> (string)
                     The KMS key ARN to encrypt the logs stored in managed log
                     persistence.

              cloudWatchLoggingConfiguration -> (structure)
                 The Amazon CloudWatch configuration for monitoring logs.  You
                 can  configure  your  jobs  to send log information to Cloud-
                 Watch.

                 enabled -> (boolean)
                     Enables CloudWatch logging.

                 logGroupName -> (string)
                     The name of the log group in Amazon CloudWatch Logs where
                     you want to publish your logs.

                 logStreamNamePrefix -> (string)
                     Prefix for the CloudWatch log stream name.

                 encryptionKeyArn -> (string)
                     The  Key  Management Service (KMS) key ARN to encrypt the
                     logs that you store in CloudWatch Logs.

                 logTypes -> (map)
                     The types of logs that you want to publish to CloudWatch.
                     If  you  don't  specify  any log types, driver STDOUT and
                     STDERR logs will be published to CloudWatch Logs  by  de-
                     fault.  For  more  information  including  the  supported
                     worker types for Hive and  Spark,  see  Logging  for  EMR
                     Serverless with CloudWatch .

                     o Key  Valid  Values  :  SPARK_DRIVER  , SPARK_EXECUTOR ,
                       HIVE_DRIVER , TEZ_TASK

                     o Array Members Valid Values : STDOUT , STDERR , HIVE_LOG
                       , TEZ_AM , SYSTEM_LOGS

                     key -> (string)
                        Worker type for an analytics framework.

                     value -> (list)
                        (string)
                            Log type for a Spark/Hive job-run.

       JSON Syntax:

          {
            "applicationConfiguration": [
              {
                "classification": "string",
                "properties": {"string": "string"
                  ...},
                "configurations": [
                  {
                    "classification": "string",
                    "properties": {"string": "string"
                      ...},
                    "configurations":
                  }
                  ...
                ]
              }
              ...
            ],
            "monitoringConfiguration": {
              "s3MonitoringConfiguration": {
                "logUri": "string",
                "encryptionKeyArn": "string"
              },
              "managedPersistenceMonitoringConfiguration": {
                "enabled": true|false,
                "encryptionKeyArn": "string"
              },
              "cloudWatchLoggingConfiguration": {
                "enabled": true|false,
                "logGroupName": "string",
                "logStreamNamePrefix": "string",
                "encryptionKeyArn": "string",
                "logTypes": {"string": ["string", ...]
                  ...}
              }
            }
          }

       --tags (map)
          The tags assigned to the job run.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --execution-timeout-minutes (long)
          The maximum duration for the job run to run. If the job run runs be-
          yond this duration, it will be automatically cancelled.

       --name (string)
          The optional job run name. This doesn't have to be unique.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       applicationId -> (string)
          This  output  displays  the  application ID on which the job run was
          submitted.

       jobRunId -> (string)
          The output contains the ID of the started job run.

       arn -> (string)
          This output displays the ARN of the job run..



                                                               START-JOB-RUN()
