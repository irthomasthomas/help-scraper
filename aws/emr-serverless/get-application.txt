GET-APPLICATION()                                            GET-APPLICATION()



NAME
       get-application -

DESCRIPTION
       Displays detailed information about a specified application.

       See also: AWS API Documentation

SYNOPSIS
            get-application
          --application-id <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --application-id (string)
          The ID of the application that will be described.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       application -> (structure)
          The output displays information about the specified application.

          applicationId -> (string)
              The ID of the application.

          name -> (string)
              The name of the application.

          arn -> (string)
              The ARN of the application.

          releaseLabel -> (string)
              The Amazon EMR release associated with the application.

          type -> (string)
              The type of application, such as Spark or Hive.

          state -> (string)
              The state of the application.

          stateDetails -> (string)
              The state details of the application.

          initialCapacity -> (map)
              The initial capacity of the application.

              key -> (string)
                 Worker type for an analytics framework.

              value -> (structure)
                 The initial capacity configuration per worker.

                 workerCount -> (long)
                     The  number of workers in the initial capacity configura-
                     tion.

                 workerConfiguration -> (structure)
                     The resource configuration of the initial  capacity  con-
                     figuration.

                     cpu -> (string)
                        The  CPU requirements for every worker instance of the
                        worker type.

                     memory -> (string)
                        The memory requirements for every worker  instance  of
                        the worker type.

                     disk -> (string)
                        The disk requirements for every worker instance of the
                        worker type.

                     diskType -> (string)
                        The disk type for every worker instance  of  the  work
                        type.  Shuffle optimized disks have higher performance
                        characteristics and are better for shuffle heavy work-
                        loads. Default is STANDARD .

          maximumCapacity -> (structure)
              The  maximum  capacity  of  the  application. This is cumulative
              across all workers at any given point in time during  the  life-
              span  of  the  application  is created. No new resources will be
              created once any one of the defined limits is hit.

              cpu -> (string)
                 The maximum allowed CPU for an application.

              memory -> (string)
                 The maximum allowed resources for an application.

              disk -> (string)
                 The maximum allowed disk for an application.

          createdAt -> (timestamp)
              The date and time when the application run was created.

          updatedAt -> (timestamp)
              The date and time when the application run was last updated.

          tags -> (map)
              The tags assigned to the application.

              key -> (string)

              value -> (string)

          autoStartConfiguration -> (structure)
              The configuration for an application to automatically  start  on
              job submission.

              enabled -> (boolean)
                 Enables the application to automatically start on job submis-
                 sion. Defaults to true.

          autoStopConfiguration -> (structure)
              The configuration for an application to automatically stop after
              a certain amount of time being idle.

              enabled -> (boolean)
                 Enables the application to automatically stop after a certain
                 amount of time being idle. Defaults to true.

              idleTimeoutMinutes -> (integer)
                 The amount of idle time in minutes after which your  applica-
                 tion will automatically stop. Defaults to 15 minutes.

          networkConfiguration -> (structure)
              The  network configuration for customer VPC connectivity for the
              application.

              subnetIds -> (list)
                 The array of subnet Ids for customer VPC connectivity.

                 (string)

              securityGroupIds -> (list)
                 The array of security group Ids for customer  VPC  connectiv-
                 ity.

                 (string)

          architecture -> (string)
              The CPU architecture of an application.

          imageConfiguration -> (structure)
              The image configuration applied to all worker types.

              imageUri -> (string)
                 The image URI.

              resolvedImageDigest -> (string)
                 The SHA256 digest of the image URI. This indicates which spe-
                 cific image the application is configured for. The image  di-
                 gest doesn't exist until an application has started.

          workerTypeSpecifications -> (map)
              The specification applied to each worker type.

              key -> (string)
                 Worker type for an analytics framework.

              value -> (structure)
                 The specifications for a worker type.

                 imageConfiguration -> (structure)
                     The image configuration for a worker type.

                     imageUri -> (string)
                        The image URI.

                     resolvedImageDigest -> (string)
                        The  SHA256  digest  of  the image URI. This indicates
                        which specific image  the  application  is  configured
                        for.  The image digest doesn't exist until an applica-
                        tion has started.

          runtimeConfiguration -> (list)
              The Configuration specifications of an application. Each config-
              uration  consists  of  a  classification and properties. You use
              this parameter when creating or updating an application. To  see
              the  runtimeConfiguration  object  of  an  application,  run the
              GetApplication API operation.

              (structure)
                 A configuration specification to be used when provisioning an
                 application.  A  configuration  consists of a classification,
                 properties, and optional nested configurations. A classifica-
                 tion  refers  to  an application-specific configuration file.
                 Properties are the settings you want to change in that file.

                 classification -> (string)
                     The classification within a configuration.

                 properties -> (map)
                     A set of  properties  specified  within  a  configuration
                     classification.

                     key -> (string)

                     value -> (string)

                 configurations -> (list)
                     A  list  of  additional  configurations to apply within a
                     configuration object.

                     (structure)
                        A configuration specification to be used  when  provi-
                        sioning  an application. A configuration consists of a
                        classification, properties, and optional  nested  con-
                        figurations.  A  classification  refers to an applica-
                        tion-specific configuration file. Properties  are  the
                        settings you want to change in that file.

                        classification -> (string)
                            The classification within a configuration.

                        properties -> (map)
                            A  set of properties specified within a configura-
                            tion classification.

                            key -> (string)

                            value -> (string)

          monitoringConfiguration -> (structure)
              The configuration setting for monitoring.

              s3MonitoringConfiguration -> (structure)
                 The Amazon S3 configuration for monitoring log publishing.

                 logUri -> (string)
                     The Amazon S3 destination URI for log publishing.

                 encryptionKeyArn -> (string)
                     The KMS key ARN to encrypt  the  logs  published  to  the
                     given Amazon S3 destination.

              managedPersistenceMonitoringConfiguration -> (structure)
                 The managed log persistence configuration for a job run.

                 enabled -> (boolean)
                     Enables  managed  logging and defaults to true. If set to
                     false, managed logging will be turned off.

                 encryptionKeyArn -> (string)
                     The KMS key ARN to encrypt the logs stored in managed log
                     persistence.

              cloudWatchLoggingConfiguration -> (structure)
                 The  Amazon CloudWatch configuration for monitoring logs. You
                 can configure your jobs to send  log  information  to  Cloud-
                 Watch.

                 enabled -> (boolean)
                     Enables CloudWatch logging.

                 logGroupName -> (string)
                     The name of the log group in Amazon CloudWatch Logs where
                     you want to publish your logs.

                 logStreamNamePrefix -> (string)
                     Prefix for the CloudWatch log stream name.

                 encryptionKeyArn -> (string)
                     The Key Management Service (KMS) key ARN to  encrypt  the
                     logs that you store in CloudWatch Logs.

                 logTypes -> (map)
                     The types of logs that you want to publish to CloudWatch.
                     If you don't specify any log  types,  driver  STDOUT  and
                     STDERR  logs  will be published to CloudWatch Logs by de-
                     fault.  For  more  information  including  the  supported
                     worker  types  for  Hive  and  Spark, see Logging for EMR
                     Serverless with CloudWatch .

                     o Key Valid Values  :  SPARK_DRIVER  ,  SPARK_EXECUTOR  ,
                       HIVE_DRIVER , TEZ_TASK

                     o Array Members Valid Values : STDOUT , STDERR , HIVE_LOG
                       , TEZ_AM , SYSTEM_LOGS

                     key -> (string)
                        Worker type for an analytics framework.

                     value -> (list)
                        (string)
                            Log type for a Spark/Hive job-run.

              prometheusMonitoringConfiguration -> (structure)
                 The monitoring configuration object you can configure to send
                 metrics  to  Amazon  Managed Service for Prometheus for a job
                 run.

                 remoteWriteUrl -> (string)
                     The remote write URL in the Amazon  Managed  Service  for
                     Prometheus workspace to send metrics to.

          interactiveConfiguration -> (structure)
              The  interactive  configuration object that enables the interac-
              tive use cases for an application.

              studioEnabled -> (boolean)
                 Enables you to connect an application to Amazon EMR Studio to
                 run interactive workloads in a notebook.

              livyEndpointEnabled -> (boolean)
                 Enables  an  Apache Livy endpoint that you can connect to and
                 run interactive jobs.



                                                             GET-APPLICATION()
