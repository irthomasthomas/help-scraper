CREATE-APPLICATION()                                      CREATE-APPLICATION()



NAME
       create-application -

DESCRIPTION
       Creates an application.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-application
          [--name <value>]
          --release-label <value>
          --type <value>
          [--client-token <value>]
          [--initial-capacity <value>]
          [--maximum-capacity <value>]
          [--tags <value>]
          [--auto-start-configuration <value>]
          [--auto-stop-configuration <value>]
          [--network-configuration <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --name (string)
          The name of the application.

       --release-label (string)
          The EMR release version associated with the application.

       --type (string)
          The type of application you want to start, such as Spark or Hive.

       --client-token (string)
          The client idempotency token of the application to create. Its value
          must be unique for each request.

       --initial-capacity (map)
          The capacity to initialize when the application is created.

          key -> (string)

          value -> (structure)
              The initial capacity configuration per worker.

              workerCount -> (long)
                 The number of workers in the initial capacity configuration.

              workerConfiguration -> (structure)
                 The resource configuration of the initial capacity configura-
                 tion.

                 cpu -> (string)
                     The  CPU  requirements  for  every worker instance of the
                     worker type.

                 memory -> (string)
                     The memory requirements for every worker instance of  the
                     worker type.

                 disk -> (string)
                     The  disk  requirements  for every worker instance of the
                     worker type.

       Shorthand Syntax:

          KeyName1=workerCount=long,workerConfiguration={cpu=string,memory=string,disk=string},KeyName2=workerCount=long,workerConfiguration={cpu=string,memory=string,disk=string}

       JSON Syntax:

          {"string": {
                "workerCount": long,
                "workerConfiguration": {
                  "cpu": "string",
                  "memory": "string",
                  "disk": "string"
                }
              }
            ...}

       --maximum-capacity (structure)
          The maximum capacity to allocate when the  application  is  created.
          This  is  cumulative  across all workers at any given point in time,
          not just when an application is created. No new  resources  will  be
          created once any one of the defined limits is hit.

          cpu -> (string)
              The maximum allowed CPU for an application.

          memory -> (string)
              The maximum allowed resources for an application.

          disk -> (string)
              The maximum allowed disk for an application.

       Shorthand Syntax:

          cpu=string,memory=string,disk=string

       JSON Syntax:

          {
            "cpu": "string",
            "memory": "string",
            "disk": "string"
          }

       --tags (map)
          The tags assigned to the application.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --auto-start-configuration (structure)
          The  configuration  for an application to automatically start on job
          submission.

          enabled -> (boolean)
              Enables the application to automatically start  on  job  submis-
              sion. Defaults to true.

       Shorthand Syntax:

          enabled=boolean

       JSON Syntax:

          {
            "enabled": true|false
          }

       --auto-stop-configuration (structure)
          The  configuration  for an application to automatically stop after a
          certain amount of time being idle.

          enabled -> (boolean)
              Enables the application to automatically stop  after  a  certain
              amount of time being idle. Defaults to true.

          idleTimeoutMinutes -> (integer)
              The  amount of idle time in minutes after which your application
              will automatically stop. Defaults to 15 minutes.

       Shorthand Syntax:

          enabled=boolean,idleTimeoutMinutes=integer

       JSON Syntax:

          {
            "enabled": true|false,
            "idleTimeoutMinutes": integer
          }

       --network-configuration (structure)
          The network configuration for customer VPC connectivity.

          subnetIds -> (list)
              The array of subnet Ids for customer VPC connectivity.

              (string)

          securityGroupIds -> (list)
              The array of security group Ids for customer VPC connectivity.

              (string)

       Shorthand Syntax:

          subnetIds=string,string,securityGroupIds=string,string

       JSON Syntax:

          {
            "subnetIds": ["string", ...],
            "securityGroupIds": ["string", ...]
          }

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       applicationId -> (string)
          The output contains the application ID.

       name -> (string)
          The output contains the name of the application.

       arn -> (string)
          The output contains the ARN of the application.



                                                          CREATE-APPLICATION()
