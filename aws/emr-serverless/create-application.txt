CREATE-APPLICATION()                                      CREATE-APPLICATION()



NAME
       create-application -

DESCRIPTION
       Creates an application.

       See also: AWS API Documentation

SYNOPSIS
            create-application
          [--name <value>]
          --release-label <value>
          --type <value>
          [--client-token <value>]
          [--initial-capacity <value>]
          [--maximum-capacity <value>]
          [--tags <value>]
          [--auto-start-configuration <value>]
          [--auto-stop-configuration <value>]
          [--network-configuration <value>]
          [--architecture <value>]
          [--image-configuration <value>]
          [--worker-type-specifications <value>]
          [--runtime-configuration <value>]
          [--monitoring-configuration <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --name (string)
          The name of the application.

       --release-label (string)
          The Amazon EMR release associated with the application.

       --type (string)
          The type of application you want to start, such as Spark or Hive.

       --client-token (string)
          The client idempotency token of the application to create. Its value
          must be unique for each request.

       --initial-capacity (map)
          The capacity to initialize when the application is created.

          key -> (string)
              Worker type for an analytics framework.

          value -> (structure)
              The initial capacity configuration per worker.

              workerCount -> (long)
                 The number of workers in the initial capacity configuration.

              workerConfiguration -> (structure)
                 The resource configuration of the initial capacity configura-
                 tion.

                 cpu -> (string)
                     The  CPU  requirements  for  every worker instance of the
                     worker type.

                 memory -> (string)
                     The memory requirements for every worker instance of  the
                     worker type.

                 disk -> (string)
                     The  disk  requirements  for every worker instance of the
                     worker type.

       Shorthand Syntax:

          KeyName1=workerCount=long,workerConfiguration={cpu=string,memory=string,disk=string},KeyName2=workerCount=long,workerConfiguration={cpu=string,memory=string,disk=string}

       JSON Syntax:

          {"string": {
                "workerCount": long,
                "workerConfiguration": {
                  "cpu": "string",
                  "memory": "string",
                  "disk": "string"
                }
              }
            ...}

       --maximum-capacity (structure)
          The maximum capacity to allocate when the  application  is  created.
          This  is  cumulative  across all workers at any given point in time,
          not just when an application is created. No new  resources  will  be
          created once any one of the defined limits is hit.

          cpu -> (string)
              The maximum allowed CPU for an application.

          memory -> (string)
              The maximum allowed resources for an application.

          disk -> (string)
              The maximum allowed disk for an application.

       Shorthand Syntax:

          cpu=string,memory=string,disk=string

       JSON Syntax:

          {
            "cpu": "string",
            "memory": "string",
            "disk": "string"
          }

       --tags (map)
          The tags assigned to the application.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --auto-start-configuration (structure)
          The  configuration  for an application to automatically start on job
          submission.

          enabled -> (boolean)
              Enables the application to automatically start  on  job  submis-
              sion. Defaults to true.

       Shorthand Syntax:

          enabled=boolean

       JSON Syntax:

          {
            "enabled": true|false
          }

       --auto-stop-configuration (structure)
          The  configuration  for an application to automatically stop after a
          certain amount of time being idle.

          enabled -> (boolean)
              Enables the application to automatically stop  after  a  certain
              amount of time being idle. Defaults to true.

          idleTimeoutMinutes -> (integer)
              The  amount of idle time in minutes after which your application
              will automatically stop. Defaults to 15 minutes.

       Shorthand Syntax:

          enabled=boolean,idleTimeoutMinutes=integer

       JSON Syntax:

          {
            "enabled": true|false,
            "idleTimeoutMinutes": integer
          }

       --network-configuration (structure)
          The network configuration for customer VPC connectivity.

          subnetIds -> (list)
              The array of subnet Ids for customer VPC connectivity.

              (string)

          securityGroupIds -> (list)
              The array of security group Ids for customer VPC connectivity.

              (string)

       Shorthand Syntax:

          subnetIds=string,string,securityGroupIds=string,string

       JSON Syntax:

          {
            "subnetIds": ["string", ...],
            "securityGroupIds": ["string", ...]
          }

       --architecture (string)
          The CPU architecture of an application.

          Possible values:

          o ARM64

          o X86_64

       --image-configuration (structure)
          The image configuration for all worker types.  You  can  either  set
          this parameter or imageConfiguration for each worker type in worker-
          TypeSpecifications .

          imageUri -> (string)
              The URI of an image in the Amazon ECR registry.  This  field  is
              required  when  you  create a new application. If you leave this
              field blank in an update, Amazon EMR will remove the image  con-
              figuration.

       Shorthand Syntax:

          imageUri=string

       JSON Syntax:

          {
            "imageUri": "string"
          }

       --worker-type-specifications (map)
          The key-value pairs that specify worker type to WorkerTypeSpecifica-
          tionInput . This parameter must contain all valid worker types for a
          Spark or Hive application. Valid worker types include Driver and Ex-
          ecutor for Spark applications and HiveDriver and  TezTask  for  Hive
          applications. You can either set image details in this parameter for
          each worker type, or in imageConfiguration for all worker types.

          key -> (string)
              Worker type for an analytics framework.

          value -> (structure)
              The specifications for a worker type.

              imageConfiguration -> (structure)
                 The image configuration for a worker type.

                 imageUri -> (string)
                     The URI of an image in  the  Amazon  ECR  registry.  This
                     field  is  required when you create a new application. If
                     you leave this field blank in an update, Amazon EMR  will
                     remove the image configuration.

       Shorthand Syntax:

          KeyName1=imageConfiguration={imageUri=string},KeyName2=imageConfiguration={imageUri=string}

       JSON Syntax:

          {"string": {
                "imageConfiguration": {
                  "imageUri": "string"
                }
              }
            ...}

       --runtime-configuration (list)
          The  Configuration  specifications  to use when creating an applica-
          tion. Each configuration consists of a  classification  and  proper-
          ties.  This  configuration  is applied to all the job runs submitted
          under the application.

          (structure)
              A configuration specification to be used  when  provisioning  an
              application. A configuration consists of a classification, prop-
              erties, and optional  nested  configurations.  A  classification
              refers to an application-specific configuration file. Properties
              are the settings you want to change in that file.

              classification -> (string)
                 The classification within a configuration.

              properties -> (map)
                 A set of properties specified within a configuration  classi-
                 fication.

                 key -> (string)

                 value -> (string)

              configurations -> (list)
                 A list of additional configurations to apply within a config-
                 uration object.

                 (structure)
                     A configuration specification to be used when  provision-
                     ing an application. A configuration consists of a classi-
                     fication, properties, and optional nested configurations.
                     A  classification  refers to an application-specific con-
                     figuration file. Properties are the settings you want  to
                     change in that file.

                     classification -> (string)
                        The classification within a configuration.

                     properties -> (map)
                        A  set  of properties specified within a configuration
                        classification.

                        key -> (string)

                        value -> (string)

       Shorthand Syntax:

          classification=string,properties={KeyName1=string,KeyName2=string},configurations=[{classification=string,properties={KeyName1=string,KeyName2=string},( ... recursive ... )},{classification=string,properties={KeyName1=string,KeyName2=string},( ... recursive ... )}] ...

       JSON Syntax:

          [
            {
              "classification": "string",
              "properties": {"string": "string"
                ...},
              "configurations": [
                {
                  "classification": "string",
                  "properties": {"string": "string"
                    ...},
                  "configurations":
                }
                ...
              ]
            }
            ...
          ]

       --monitoring-configuration (structure)
          The configuration setting for monitoring.

          s3MonitoringConfiguration -> (structure)
              The Amazon S3 configuration for monitoring log publishing.

              logUri -> (string)
                 The Amazon S3 destination URI for log publishing.

              encryptionKeyArn -> (string)
                 The KMS key ARN to encrypt the logs published  to  the  given
                 Amazon S3 destination.

          managedPersistenceMonitoringConfiguration -> (structure)
              The managed log persistence configuration for a job run.

              enabled -> (boolean)
                 Enables  managed  logging  and  defaults  to  true. If set to
                 false, managed logging will be turned off.

              encryptionKeyArn -> (string)
                 The KMS key ARN to encrypt the logs  stored  in  managed  log
                 persistence.

          cloudWatchLoggingConfiguration -> (structure)
              The Amazon CloudWatch configuration for monitoring logs. You can
              configure your jobs to send log information to CloudWatch.

              enabled -> (boolean)
                 Enables CloudWatch logging.

              logGroupName -> (string)
                 The name of the log group in Amazon CloudWatch Logs where you
                 want to publish your logs.

              logStreamNamePrefix -> (string)
                 Prefix for the CloudWatch log stream name.

              encryptionKeyArn -> (string)
                 The  Key Management Service (KMS) key ARN to encrypt the logs
                 that you store in CloudWatch Logs.

              logTypes -> (map)
                 The types of logs that you want to publish to CloudWatch.  If
                 you  don't  specify  any  log types, driver STDOUT and STDERR
                 logs will be published to CloudWatch  Logs  by  default.  For
                 more  information  including  the  supported worker types for
                 Hive and Spark, see Logging for EMR  Serverless  with  Cloud-
                 Watch .

                 o Key   Valid   Values  :  SPARK_DRIVER  ,  SPARK_EXECUTOR  ,
                   HIVE_DRIVER , TEZ_TASK

                 o Array Members Valid Values : STDOUT , STDERR ,  HIVE_LOG  ,
                   TEZ_AM , SYSTEM_LOGS

                 key -> (string)
                     Worker type for an analytics framework.

                 value -> (list)
                     (string)
                        Log type for a Spark/Hive job-run.

       Shorthand Syntax:

          s3MonitoringConfiguration={logUri=string,encryptionKeyArn=string},managedPersistenceMonitoringConfiguration={enabled=boolean,encryptionKeyArn=string},cloudWatchLoggingConfiguration={enabled=boolean,logGroupName=string,logStreamNamePrefix=string,encryptionKeyArn=string,logTypes={KeyName1=[string,string],KeyName2=[string,string]}}

       JSON Syntax:

          {
            "s3MonitoringConfiguration": {
              "logUri": "string",
              "encryptionKeyArn": "string"
            },
            "managedPersistenceMonitoringConfiguration": {
              "enabled": true|false,
              "encryptionKeyArn": "string"
            },
            "cloudWatchLoggingConfiguration": {
              "enabled": true|false,
              "logGroupName": "string",
              "logStreamNamePrefix": "string",
              "encryptionKeyArn": "string",
              "logTypes": {"string": ["string", ...]
                ...}
            }
          }

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       applicationId -> (string)
          The output contains the application ID.

       name -> (string)
          The output contains the name of the application.

       arn -> (string)
          The output contains the ARN of the application.



                                                          CREATE-APPLICATION()
