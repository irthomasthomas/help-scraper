GET-JOB-RUN()                                                    GET-JOB-RUN()



NAME
       get-job-run -

DESCRIPTION
       Displays detailed information about a job run.

       See also: AWS API Documentation

SYNOPSIS
            get-job-run
          --application-id <value>
          --job-run-id <value>
          [--attempt <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --application-id (string)
          The ID of the application on which the job run is submitted.

       --job-run-id (string)
          The ID of the job run.

       --attempt (integer)
          An  optimal  parameter that indicates the amount of attempts for the
          job. If not specified, this value defaults to  the  attempt  of  the
          latest job.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       jobRun -> (structure)
          The output displays information about the job run.

          applicationId -> (string)
              The ID of the application the job is running on.

          jobRunId -> (string)
              The ID of the job run.

          name -> (string)
              The optional job run name. This doesn't have to be unique.

          arn -> (string)
              The execution role ARN of the job run.

          createdBy -> (string)
              The user who created the job run.

          createdAt -> (timestamp)
              The date and time when the job run was created.

          updatedAt -> (timestamp)
              The date and time when the job run was updated.

          executionRole -> (string)
              The execution role ARN of the job run.

          state -> (string)
              The state of the job run.

          stateDetails -> (string)
              The state details of the job run.

          releaseLabel -> (string)
              The Amazon EMR release associated with the application your  job
              is running on.

          configurationOverrides -> (structure)
              The  configuration  settings  that  are used to override default
              configuration.

              applicationConfiguration -> (list)
                 The override configurations for the application.

                 (structure)
                     A configuration specification to be used when  provision-
                     ing an application. A configuration consists of a classi-
                     fication, properties, and optional nested configurations.
                     A  classification  refers to an application-specific con-
                     figuration file. Properties are the settings you want  to
                     change in that file.

                     classification -> (string)
                        The classification within a configuration.

                     properties -> (map)
                        A  set  of properties specified within a configuration
                        classification.

                        key -> (string)

                        value -> (string)

                     configurations -> (list)
                        A list of additional configurations to apply within  a
                        configuration object.

                        (structure)
                            A configuration specification to be used when pro-
                            visioning an application. A configuration consists
                            of  a  classification,  properties,  and  optional
                            nested configurations. A classification refers  to
                            an  application-specific configuration file. Prop-
                            erties are the settings you want to change in that
                            file.

                            classification -> (string)
                               The classification within a configuration.

                            properties -> (map)
                               A set of properties specified within a configu-
                               ration classification.

                               key -> (string)

                               value -> (string)

              monitoringConfiguration -> (structure)
                 The override configurations for monitoring.

                 s3MonitoringConfiguration -> (structure)
                     The Amazon S3 configuration for monitoring  log  publish-
                     ing.

                     logUri -> (string)
                        The Amazon S3 destination URI for log publishing.

                     encryptionKeyArn -> (string)
                        The  KMS  key ARN to encrypt the logs published to the
                        given Amazon S3 destination.

                 managedPersistenceMonitoringConfiguration -> (structure)
                     The managed log persistence configuration for a job run.

                     enabled -> (boolean)
                        Enables managed logging and defaults to true.  If  set
                        to false, managed logging will be turned off.

                     encryptionKeyArn -> (string)
                        The  KMS key ARN to encrypt the logs stored in managed
                        log persistence.

                 cloudWatchLoggingConfiguration -> (structure)
                     The Amazon CloudWatch configuration for monitoring  logs.
                     You  can  configure  your jobs to send log information to
                     CloudWatch.

                     enabled -> (boolean)
                        Enables CloudWatch logging.

                     logGroupName -> (string)
                        The name of the log group in  Amazon  CloudWatch  Logs
                        where you want to publish your logs.

                     logStreamNamePrefix -> (string)
                        Prefix for the CloudWatch log stream name.

                     encryptionKeyArn -> (string)
                        The  Key  Management  Service (KMS) key ARN to encrypt
                        the logs that you store in CloudWatch Logs.

                     logTypes -> (map)
                        The types of logs that you want to publish  to  Cloud-
                        Watch. If you don't specify any log types, driver STD-
                        OUT and STDERR logs will be  published  to  CloudWatch
                        Logs  by  default.  For more information including the
                        supported worker types for Hive and Spark, see Logging
                        for EMR Serverless with CloudWatch .

                        o Key  Valid  Values : SPARK_DRIVER , SPARK_EXECUTOR ,
                          HIVE_DRIVER , TEZ_TASK

                        o Array Members Valid  Values  :  STDOUT  ,  STDERR  ,
                          HIVE_LOG , TEZ_AM , SYSTEM_LOGS

                        key -> (string)
                            Worker type for an analytics framework.

                        value -> (list)
                            (string)
                               Log type for a Spark/Hive job-run.

                 prometheusMonitoringConfiguration -> (structure)
                     The  monitoring configuration object you can configure to
                     send metrics to Amazon Managed Service for Prometheus for
                     a job run.

                     remoteWriteUrl -> (string)
                        The remote write URL in the Amazon Managed Service for
                        Prometheus workspace to send metrics to.

          jobDriver -> (tagged union structure)
              The job driver for the job run.

              NOTE:
                 This is a Tagged Union structure. Only one of  the  following
                 top level keys can be set: sparkSubmit, hive.

              sparkSubmit -> (structure)
                 The job driver parameters specified for Spark.

                 entryPoint -> (string)
                     The entry point for the Spark submit job run.

                 entryPointArguments -> (list)
                     The arguments for the Spark submit job run.

                     (string)

                 sparkSubmitParameters -> (string)
                     The parameters for the Spark submit job run.

              hive -> (structure)
                 The job driver parameters specified for Hive.

                 query -> (string)
                     The query for the Hive job run.

                 initQueryFile -> (string)
                     The query file for the Hive job run.

                 parameters -> (string)
                     The parameters for the Hive job run.

          tags -> (map)
              The tags assigned to the job run.

              key -> (string)

              value -> (string)

          totalResourceUtilization -> (structure)
              The  aggregate vCPU, memory, and storage resources used from the
              time the job starts to execute, until the time  the  job  termi-
              nates, rounded up to the nearest second.

              vCPUHour -> (double)
                 The aggregated vCPU used per hour from the time job start ex-
                 ecuting till the time job is terminated.

              memoryGBHour -> (double)
                 The aggregated memory used per hour from the time  job  start
                 executing till the time job is terminated.

              storageGBHour -> (double)
                 The  aggregated storage used per hour from the time job start
                 executing till the time job is terminated.

          networkConfiguration -> (structure)
              The network configuration for customer VPC connectivity.

              subnetIds -> (list)
                 The array of subnet Ids for customer VPC connectivity.

                 (string)

              securityGroupIds -> (list)
                 The array of security group Ids for customer  VPC  connectiv-
                 ity.

                 (string)

          totalExecutionDurationSeconds -> (integer)
              The  job  run total execution duration in seconds. This field is
              only available for job runs in a COMPLETED , FAILED  ,  or  CAN-
              CELLED state.

          executionTimeoutMinutes -> (long)
              Returns  the job run timeout value from the StartJobRun call. If
              no timeout was specified, then it returns the default timeout of
              720 minutes.

          billedResourceUtilization -> (structure)
              The aggregate vCPU, memory, and storage that Amazon Web Services
              has billed for the job  run.  The  billed  resources  include  a
              1-minute minimum usage for workers, plus additional storage over
              20 GB per worker. Note that billed resources do not include  us-
              age for idle pre-initialized workers.

              vCPUHour -> (double)
                 The  aggregated  vCPU  used  per  hour  from the time the job
                 starts executing until the job is terminated.

              memoryGBHour -> (double)
                 The aggregated memory used per hour from  the  time  the  job
                 starts executing until the job is terminated.

              storageGBHour -> (double)
                 The  aggregated  storage  used per hour from the time the job
                 starts executing until the job is terminated.

          mode -> (string)
              The mode of the job run.

          retryPolicy -> (structure)
              The retry policy of the job run.

              maxAttempts -> (integer)
                 Maximum number of attempts for the job run. This parameter is
                 only applicable for BATCH mode.

              maxFailedAttemptsPerHour -> (integer)
                 Maximum number of failed attempts per hour. This [arameter is
                 only applicable for STREAMING mode.

          attempt -> (integer)
              The attempt of the job run.

          attemptCreatedAt -> (timestamp)
              The date and time of when the job run attempt was created.

          attemptUpdatedAt -> (timestamp)
              The date and time of when the job run attempt was last updated.



                                                                 GET-JOB-RUN()
