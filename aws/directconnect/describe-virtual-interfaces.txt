DESCRIBE-VIRTUAL-INTERFACES()                    DESCRIBE-VIRTUAL-INTERFACES()



NAME
       describe-virtual-interfaces -

DESCRIPTION
       Displays  all  virtual  interfaces  for an Amazon Web Services account.
       Virtual interfaces deleted fewer than 15 minutes before  you  make  the
       request  are  also  returned.  If you specify a connection ID, only the
       virtual interfaces associated with the connection are returned. If  you
       specify a virtual interface ID, then only a single virtual interface is
       returned.

       A virtual interface (VLAN) transmits the  traffic  between  the  Direct
       Connect location and the customer network.

       See also: AWS API Documentation

SYNOPSIS
            describe-virtual-interfaces
          [--connection-id <value>]
          [--virtual-interface-id <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --connection-id (string)
          The ID of the connection.

       --virtual-interface-id (string)
          The ID of the virtual interface.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To list all virtual interfaces

       The following describe-virtual-interfaces command lists the information
       about all virtual interfaces associated with your AWS account:

          aws directconnect describe-virtual-interfaces --connection-id dxcon-ffjrkx17

       Output:

          {
              "virtualInterfaces": [
                  {
                      "virtualInterfaceState": "down",
                      "asn": 65000,
                      "vlan": 101,
                      "customerAddress": "192.168.1.2/30",
                      "ownerAccount": "123456789012",
                      "connectionId": "dxcon-ffjrkx17",
                      "virtualGatewayId": "vgw-aba37db6",
                      "virtualInterfaceId": "dxvif-ffhhk74f",
                      "authKey": "asdf34example",
                      "routeFilterPrefixes": [],
                      "location": "TIVIT",
                      "customerRouterConfig": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<logical_connection id=\"dxvif-ffhhk74f\">\n  <vlan>101</vlan>\n  <customer_address>192.168.1.2/30</customer_address>\n  <amazon_address>192.168.1.1/30</amazon_address>\n  <bgp_asn>65000</bgp_asn>\n  <bgp_auth_key>asdf34example</bgp_auth_key>\n  <amazon_bgp_asn>7224</amazon_bgp_asn>\n  <connection_type>private</connection_type>\n</logical_connection>\n",
                      "amazonAddress": "192.168.1.1/30",
                      "virtualInterfaceType": "private",
                      "virtualInterfaceName": "PrivateVirtualInterface"
                  },
                  {
                      "virtualInterfaceState": "verifying",
                      "asn": 65000,
                      "vlan": 2000,
                      "customerAddress": "203.0.113.2/30",
                      "ownerAccount": "123456789012",
                      "connectionId": "dxcon-ffjrkx17",
                      "virtualGatewayId": "",
                      "virtualInterfaceId": "dxvif-fgh0hcrk",
                      "authKey": "asdf34example",
                      "routeFilterPrefixes": [
                          {
                              "cidr": "203.0.113.4/30"
                          },
                          {
                              "cidr": "203.0.113.0/30"
                          }
                      ],
                      "location": "TIVIT",
                      "customerRouterConfig": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<logical_connection id=\"dxvif-fgh0hcrk\">\n  <vlan>2000</vlan>\n  <customer_address>203.0.113.2/30</customer_address>\n  <amazon_address>203.0.113.1/30</amazon_address>\n  <bgp_asn>65000</bgp_asn>\n  <bgp_auth_key>asdf34example</bgp_auth_key>\n  <amazon_bgp_asn>7224</amazon_bgp_asn>\n  <connection_type>public</connection_type>\n</logical_connection>\n",
                      "amazonAddress": "203.0.113.1/30",
                      "virtualInterfaceType": "public",
                      "virtualInterfaceName": "PublicVirtualInterface"
                  }
              ]
          }

OUTPUT
       virtualInterfaces -> (list)
          The virtual interfaces

          (structure)
              Information about a virtual interface.

              ownerAccount -> (string)
                 The ID of the Amazon Web Services account that owns the  vir-
                 tual interface.

              virtualInterfaceId -> (string)
                 The ID of the virtual interface.

              location -> (string)
                 The location of the connection.

              connectionId -> (string)
                 The ID of the connection.

              virtualInterfaceType -> (string)
                 The  type  of virtual interface. The possible values are pri-
                 vate and public .

              virtualInterfaceName -> (string)
                 The name of the virtual interface assigned  by  the  customer
                 network.  The  name has a maximum of 100 characters. The fol-
                 lowing are valid characters: a-z, 0-9 and a hyphen (-).

              vlan -> (integer)
                 The ID of the VLAN.

              asn -> (integer)
                 The autonomous system (AS) number for Border Gateway Protocol
                 (BGP) configuration.

                 The valid values are 1-2147483647.

              amazonSideAsn -> (long)
                 The autonomous system number (ASN) for the Amazon side of the
                 connection.

              authKey -> (string)
                 The authentication key for BGP configuration. This string has
                 a  minimum  length of 6 characters and and a maximun lenth of
                 80 characters.

              amazonAddress -> (string)
                 The IP address assigned to the Amazon interface.

              customerAddress -> (string)
                 The IP address assigned to the customer interface.

              addressFamily -> (string)
                 The address family for the BGP peer.

              virtualInterfaceState -> (string)
                 The state of the virtual interface.  The  following  are  the
                 possible values:

                 o confirming : The creation of the virtual interface is pend-
                   ing confirmation from the virtual interface owner.  If  the
                   owner  of the virtual interface is different from the owner
                   of the connection on which it is provisioned, then the vir-
                   tual  interface  will remain in this state until it is con-
                   firmed by the virtual interface owner.

                 o verifying : This state only applies to public  virtual  in-
                   terfaces.  Each  public  virtual interface needs validation
                   before the virtual interface can be created.

                 o pending : A virtual interface is in  this  state  from  the
                   time  that  it  is  created  until the virtual interface is
                   ready to forward traffic.

                 o available : A virtual interface that  is  able  to  forward
                   traffic.

                 o down : A virtual interface that is BGP down.

                 o deleting : A virtual interface is in this state immediately
                   after  calling   DeleteVirtualInterface  until  it  can  no
                   longer forward traffic.

                 o deleted : A virtual interface that cannot forward traffic.

                 o rejected  :  The  virtual interface owner has declined cre-
                   ation of the virtual interface. If a virtual  interface  in
                   the  Confirming  state  is deleted by the virtual interface
                   owner, the virtual interface enters the Rejected state.

                 o unknown : The state of the virtual interface is not  avail-
                   able.

              customerRouterConfig -> (string)
                 The customer router configuration.

              mtu -> (integer)
                 The  maximum transmission unit (MTU), in bytes. The supported
                 values are 1500 and 8500. The default value is 1500

              jumboFrameCapable -> (boolean)
                 Indicates whether jumbo frames (9001 MTU) are supported.

              virtualGatewayId -> (string)
                 The ID of the virtual private gateway. Applies only  to  pri-
                 vate virtual interfaces.

              directConnectGatewayId -> (string)
                 The ID of the Direct Connect gateway.

              routeFilterPrefixes -> (list)
                 The  routes  to be advertised to the Amazon Web Services net-
                 work in this Region. Applies to public virtual interfaces.

                 (structure)
                     Information about a route filter prefix that  a  customer
                     can  advertise through Border Gateway Protocol (BGP) over
                     a public virtual interface.

                     cidr -> (string)
                        The CIDR block for the advertised route. Separate mul-
                        tiple  routes  using commas. An IPv6 CIDR must use /64
                        or shorter.

              bgpPeers -> (list)
                 The BGP peers configured on this virtual interface.

                 (structure)
                     Information about a BGP peer.

                     bgpPeerId -> (string)
                        The ID of the BGP peer.

                     asn -> (integer)
                        The autonomous system (AS) number for  Border  Gateway
                        Protocol (BGP) configuration.

                     authKey -> (string)
                        The  authentication  key  for  BGP configuration. This
                        string has a minimum length of 6 characters and and  a
                        maximun lenth of 80 characters.

                     addressFamily -> (string)
                        The address family for the BGP peer.

                     amazonAddress -> (string)
                        The IP address assigned to the Amazon interface.

                     customerAddress -> (string)
                        The IP address assigned to the customer interface.

                     bgpPeerState -> (string)
                        The  state of the BGP peer. The following are the pos-
                        sible values:

                        o verifying : The BGP peering addresses or ASN require
                          validation  before the BGP peer can be created. This
                          state applies only to public virtual interfaces.

                        o pending : The BGP peer is created,  and  remains  in
                          this state until it is ready to be established.

                        o available : The BGP peer is ready to be established.

                        o deleting : The BGP peer is being deleted.

                        o deleted  : The BGP peer is deleted and cannot be es-
                          tablished.

                     bgpStatus -> (string)
                        The status of the BGP peer. The following are the pos-
                        sible values:

                        o up  :  The  BGP peer is established. This state does
                          not indicate the state of the routing function.  En-
                          sure that you are receiving routes over the BGP ses-
                          sion.

                        o down : The BGP peer is down.

                        o unknown : The BGP peer status is not available.

                     awsDeviceV2 -> (string)
                        The Direct Connect endpoint that  terminates  the  BGP
                        peer.

                     awsLogicalDeviceId -> (string)
                        The  Direct Connect endpoint that terminates the logi-
                        cal connection. This device might  be  different  than
                        the device that terminates the physical connection.

              region -> (string)
                 The Amazon Web Services Region where the virtual interface is
                 located.

              awsDeviceV2 -> (string)
                 The Direct Connect endpoint that terminates the physical con-
                 nection.

              awsLogicalDeviceId -> (string)
                 The  Direct Connect endpoint that terminates the logical con-
                 nection. This device might be different than the device  that
                 terminates the physical connection.

              tags -> (list)
                 The tags associated with the virtual interface.

                 (structure)
                     Information about a tag.

                     key -> (string)
                        The key.

                     value -> (string)
                        The value.

              siteLinkEnabled -> (boolean)
                 Indicates whether SiteLink is enabled.



                                                 DESCRIBE-VIRTUAL-INTERFACES()
