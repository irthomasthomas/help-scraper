DESCRIBE-LOA()                                                  DESCRIBE-LOA()



NAME
       describe-loa -

DESCRIPTION
       Gets  the  LOA-CFA  for a connection, interconnect, or link aggregation
       group (LAG).

       The Letter of Authorization - Connecting Facility Assignment  (LOA-CFA)
       is a document that is used when establishing your cross connect to Ama-
       zon Web Services at the colocation facility. For more information,  see
       Requesting  Cross  Connects  at  Direct Connect Locations in the Direct
       Connect User Guide .

       See also: AWS API Documentation

SYNOPSIS
            describe-loa
          --connection-id <value>
          [--provider-name <value>]
          [--loa-content-type <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --connection-id (string)
          The ID of a connection, LAG, or interconnect.

       --provider-name (string)
          The name of the service provider  who  establishes  connectivity  on
          your  behalf.  If  you specify this parameter, the LOA-CFA lists the
          provider name alongside your company name as the  requester  of  the
          cross connect.

       --loa-content-type (string)
          The standard media type for the LOA-CFA document. The only supported
          value is application/pdf.

          Possible values:

          o application/pdf

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To describe your LOA-CFA for a connection using Linux or Mac OS X

       The  following  example  describes  your  LOA-CFA  for  connection  dx-
       con-fh6ayh1d. The contents of the LOA-CFA are base64-encoded. This com-
       mand uses the --output and --query parameters to control the output and
       extract the contents of the loaContent structure. The final part of the
       command  decodes  the  content  using the base64 utility, and sends the
       output to a PDF file.

          aws directconnect describe-loa --connection-id dxcon-fh6ayh1d --output text --query loa.loaContent|base64 --decode > myLoaCfa.pdf

       To describe your LOA-CFA for a connection using Windows

       The previous example requires the use of the base64 utility  to  decode
       the output. On a Windows computer, you can use certutil instead. In the
       following example, the first command describes your LOA-CFA for connec-
       tion  dxcon-fh6ayh1d  and  uses  the --output and --query parameters to
       control the output and extract the contents of the loaContent structure
       to  a file called myLoaCfa.base64. The second command uses the certutil
       utility to decode the file and send the output to a PDF file.

          aws directconnect describe-loa --connection-id dxcon-fh6ayh1d --output text --query loa.loaContent > myLoaCfa.base64

          certutil -decode myLoaCfa.base64 myLoaCfa.pdf

       For more information about controlling AWS CLI output, see  Controlling
       Command  Output  from the AWS Command Line Interface in the AWS Command
       Line Interface User Guide.

OUTPUT
       loaContent -> (blob)
          The binary contents of the LOA-CFA document.

       loaContentType -> (string)
          The standard media type for the LOA-CFA document. The only supported
          value is application/pdf.



                                                                DESCRIBE-LOA()
