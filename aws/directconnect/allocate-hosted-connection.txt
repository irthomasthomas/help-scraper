ALLOCATE-HOSTED-CONNECTION()                      ALLOCATE-HOSTED-CONNECTION()



NAME
       allocate-hosted-connection -

DESCRIPTION
       Creates a hosted connection on the specified interconnect or a link ag-
       gregation group (LAG) of interconnects.

       Allocates a VLAN number and a specified amount of capacity  (bandwidth)
       for  use by a hosted connection on the specified interconnect or LAG of
       interconnects. Amazon Web Services polices the  hosted  connection  for
       the  specified capacity and the Direct Connect Partner must also police
       the hosted connection for the specified capacity.

       NOTE:
          Intended for use by Direct Connect Partners only.

       See also: AWS API Documentation

SYNOPSIS
            allocate-hosted-connection
          --connection-id <value>
          --owner-account <value>
          --bandwidth <value>
          --connection-name <value>
          --vlan <value>
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --connection-id (string)
          The ID of the interconnect or LAG.

       --owner-account (string)
          The ID of the Amazon Web Services account ID of the customer for the
          connection.

       --bandwidth (string)
          The  bandwidth  of  the  connection. The possible values are 50Mbps,
          100Mbps, 200Mbps, 300Mbps, 400Mbps, 500Mbps,  1Gbps,  2Gbps,  5Gbps,
          and  10Gbps.  Note  that only those Direct Connect Partners who have
          met specific requirements are allowed  to  create  a  1Gbps,  2Gbps,
          5Gbps or 10Gbps hosted connection.

       --connection-name (string)
          The name of the hosted connection.

       --vlan (integer)
          The dedicated VLAN provisioned to the hosted connection.

       --tags (list)
          The tags associated with the connection.

          (structure)
              Information about a tag.

              key -> (string)
                 The key.

              value -> (string)
                 The value.

       Shorthand Syntax:

          key=string,value=string ...

       JSON Syntax:

          [
            {
              "key": "string",
              "value": "string"
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a hosted connection on an interconnect

       The  following allocate-hosted-connection example creates a hosted con-
       nection on the specified interconnect.

          aws directconnect allocate-hosted-connection \
              --bandwidth 500Mbps \
              --connection-name mydcinterconnect \
              --owner-account 123456789012
              -connection-id dxcon-fgktov66
              -vlan 101

       Output:

          {
              "partnerName": "TIVIT",
              "vlan": 101,
              "ownerAccount": "123456789012",
              "connectionId": "dxcon-ffzc51m1",
              "connectionState": "ordering",
              "bandwidth": "500Mbps",
              "location": "TIVIT",
              "connectionName": "mydcinterconnect",
              "region": "sa-east-1"
          }

OUTPUT
       ownerAccount -> (string)
          The ID of the Amazon Web Services account that owns the connection.

       connectionId -> (string)
          The ID of the connection.

       connectionName -> (string)
          The name of the connection.

       connectionState -> (string)
          The state of the connection. The following are the possible values:

          o ordering : The initial state of a hosted connection provisioned on
            an  interconnect. The connection stays in the ordering state until
            the owner of the hosted connection confirms or declines  the  con-
            nection order.

          o requested  :  The initial state of a standard connection. The con-
            nection stays in the requested state until the  Letter  of  Autho-
            rization (LOA) is sent to the customer.

          o pending  :  The connection has been approved and is being initial-
            ized.

          o available : The network link is up and the connection is ready for
            use.

          o down : The network link is down.

          o deleting : The connection is being deleted.

          o deleted : The connection has been deleted.

          o rejected  :  A  hosted connection in the ordering state enters the
            rejected state if it is deleted by the customer.

          o unknown : The state of the connection is not available.

       region -> (string)
          The Amazon Web Services Region where the connection is located.

       location -> (string)
          The location of the connection.

       bandwidth -> (string)
          The bandwidth of the connection.

       vlan -> (integer)
          The ID of the VLAN.

       partnerName -> (string)
          The name of the Direct Connect service provider associated with  the
          connection.

       loaIssueTime -> (timestamp)
          The  time  of  the most recent call to  DescribeLoa for this connec-
          tion.

       lagId -> (string)
          The ID of the LAG.

       awsDevice -> (string)
          The Direct Connect endpoint on which the physical connection  termi-
          nates.

       jumboFrameCapable -> (boolean)
          Indicates whether jumbo frames are supported.

       awsDeviceV2 -> (string)
          The Direct Connect endpoint that terminates the physical connection.

       awsLogicalDeviceId -> (string)
          The  Direct Connect endpoint that terminates the logical connection.
          This device might be different than the device that  terminates  the
          physical connection.

       hasLogicalRedundancy -> (string)
          Indicates  whether  the  connection supports a secondary BGP peer in
          the same address family (IPv4/IPv6).

       tags -> (list)
          The tags associated with the connection.

          (structure)
              Information about a tag.

              key -> (string)
                 The key.

              value -> (string)
                 The value.

       providerName -> (string)
          The name of the service provider associated with the connection.

       macSecCapable -> (boolean)
          Indicates whether the connection supports MAC Security (MACsec).

       portEncryptionStatus -> (string)
          The MAC Security (MACsec) port link status of the connection.

          The valid values are Encryption Up , which means that  there  is  an
          active Connection Key Name, or Encryption Down .

       encryptionMode -> (string)
          The MAC Security (MACsec) connection encryption mode.

          The  valid values are no_encrypt , should_encrypt , and must_encrypt
          .

       macSecKeys -> (list)
          The MAC Security (MACsec) security keys associated with the  connec-
          tion.

          (structure)
              Information about the MAC Security (MACsec) secret key.

              secretARN -> (string)
                 The  Amazon  Resource Name (ARN) of the MAC Security (MACsec)
                 secret key.

              ckn -> (string)
                 The Connection Key Name (CKN) for  the  MAC  Security  secret
                 key.

              state -> (string)
                 The state of the MAC Security (MACsec) secret key.

                 The possible values are:

                 o associating : The MAC Security (MACsec) secret key is being
                   validated and not yet associated  with  the  connection  or
                   LAG.

                 o associated  : The MAC Security (MACsec) secret key is vali-
                   dated and associated with the connection or LAG.

                 o disassociating : The MAC Security (MACsec)  secret  key  is
                   being disassociated from the connection or LAG

                 o disassociated  : The MAC Security (MACsec) secret key is no
                   longer associated with the connection or LAG.

              startOn -> (string)
                 The date that the MAC Security (MACsec) secret key takes  ef-
                 fect. The value is displayed in UTC format.



                                                  ALLOCATE-HOSTED-CONNECTION()
