RUN-TASK()                                                          RUN-TASK()



NAME
       run-task -

DESCRIPTION
       Starts a new task using the specified task definition.

       You  can  allow Amazon ECS to place tasks for you, or you can customize
       how Amazon ECS places tasks using placement constraints  and  placement
       strategies.  For  more  information, see Scheduling Tasks in the Amazon
       Elastic Container Service Developer Guide .

       Alternatively, you can use  StartTask to  use  your  own  scheduler  or
       place tasks manually on specific container instances.

       NOTE:
          Starting  April  15,  2023, Amazon Web Services will not onboard new
          customers to Amazon Elastic Inference (EI), and  will  help  current
          customers migrate their workloads to options that offer better price
          and performance. After April 15, 2023, new  customers  will  not  be
          able to launch instances with Amazon EI accelerators in Amazon Sage-
          Maker, Amazon ECS, or Amazon EC2. However, customers who  have  used
          Amazon EI at least once during the past 30-day period are considered
          current customers and will be able to continue using the service.

       You can attach Amazon EBS volumes to Amazon ECS  tasks  by  configuring
       the  volume  when  creating or updating a service. For more infomation,
       see Amazon EBS volumes in the Amazon Elastic Container  Service  Devel-
       oper Guide .

       The  Amazon  ECS API follows an eventual consistency model. This is be-
       cause of the distributed nature of the system supporting the API.  This
       means  that the result of an API command you run that affects your Ama-
       zon ECS resources might not be immediately visible  to  all  subsequent
       commands  you  run. Keep this in mind when you carry out an API command
       that immediately follows a previous API command.

       To manage eventual consistency, you can do the following:

       o Confirm the state of the resource before you run a command to  modify
         it.  Run the DescribeTasks command using an exponential backoff algo-
         rithm to ensure that you allow enough time for the  previous  command
         to  propagate  through  the system. To do this, run the DescribeTasks
         command repeatedly, starting with a couple of seconds  of  wait  time
         and increasing gradually up to five minutes of wait time.

       o Add  wait time between subsequent commands, even if the DescribeTasks
         command returns an accurate response. Apply  an  exponential  backoff
         algorithm  starting  with  a  couple of seconds of wait time, and in-
         crease gradually up to about five minutes of wait time.

       See also: AWS API Documentation

SYNOPSIS
            run-task
          [--capacity-provider-strategy <value>]
          [--cluster <value>]
          [--count <value>]
          [--enable-ecs-managed-tags | --no-enable-ecs-managed-tags]
          [--enable-execute-command | --disable-execute-command]
          [--group <value>]
          [--launch-type <value>]
          [--network-configuration <value>]
          [--overrides <value>]
          [--placement-constraints <value>]
          [--placement-strategy <value>]
          [--platform-version <value>]
          [--propagate-tags <value>]
          [--reference-id <value>]
          [--started-by <value>]
          [--tags <value>]
          --task-definition <value>
          [--client-token <value>]
          [--volume-configurations <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --capacity-provider-strategy (list)
          The capacity provider strategy to use for the task.

          If a capacityProviderStrategy is specified, the launchType parameter
          must  be  omitted.  If  no capacityProviderStrategy or launchType is
          specified, the defaultCapacityProviderStrategy for  the  cluster  is
          used.

          When  you  use  cluster  auto  scaling,  you  must  specify  capaci-
          tyProviderStrategy and not launchType .

          A capacity provider strategy may contain a  maximum  of  6  capacity
          providers.

          (structure)
              The details of a capacity provider strategy. A capacity provider
              strategy can be set when using the   RunTask  or   CreateCluster
              APIs  or as the default capacity provider strategy for a cluster
              with the  CreateCluster API.

              Only capacity providers that are already associated with a clus-
              ter  and  have an ACTIVE or UPDATING status can be used in a ca-
              pacity provider strategy. The   PutClusterCapacityProviders  API
              is used to associate a capacity provider with a cluster.

              If  specifying  a  capacity  provider  that uses an Auto Scaling
              group, the capacity provider must already be created.  New  Auto
              Scaling  group  capacity providers can be created with the  Cre-
              ateCapacityProvider API operation.

              To use a Fargate capacity provider, specify either  the  FARGATE
              or   FARGATE_SPOT   capacity  providers.  The  Fargate  capacity
              providers are available to all accounts and only need to be  as-
              sociated with a cluster to be used in a capacity provider strat-
              egy.

              A capacity provider strategy may contain a maximum of 6 capacity
              providers.

              capacityProvider -> (string)
                 The short name of the capacity provider.

              weight -> (integer)
                 The  weight  value  designates the relative percentage of the
                 total number of tasks launched that should use the  specified
                 capacity  provider. The weight value is taken into considera-
                 tion after the base value, if defined, is satisfied.

                 If no weight value is specified, the default value  of  0  is
                 used. When multiple capacity providers are specified within a
                 capacity provider strategy, at  least  one  of  the  capacity
                 providers  must have a weight value greater than zero and any
                 capacity providers with a weight of 0 can't be used to  place
                 tasks. If you specify multiple capacity providers in a strat-
                 egy that all have a weight of 0 , any RunTask  or  CreateSer-
                 vice actions using the capacity provider strategy will fail.

                 An  example scenario for using weights is defining a strategy
                 that contains two capacity providers and both have  a  weight
                 of  1  ,  then  when the base is satisfied, the tasks will be
                 split evenly across the two capacity  providers.  Using  that
                 same  logic,  if  you  specify  a  weight  of  1  for capaci-
                 tyProviderA and a weight of 4 for  capacityProviderB  ,  then
                 for  every one task that's run using capacityProviderA , four
                 tasks would use capacityProviderB .

              base -> (integer)
                 The base value designates how many tasks, at  a  minimum,  to
                 run  on  the  specified  capacity provider. Only one capacity
                 provider in a capacity provider strategy can have a base  de-
                 fined.  If  no  value is specified, the default value of 0 is
                 used.

       Shorthand Syntax:

          capacityProvider=string,weight=integer,base=integer ...

       JSON Syntax:

          [
            {
              "capacityProvider": "string",
              "weight": integer,
              "base": integer
            }
            ...
          ]

       --cluster (string)
          The short name or full Amazon Resource Name (ARN) of the cluster  to
          run your task on. If you do not specify a cluster, the default clus-
          ter is assumed.

       --count (integer)
          The number of instantiations of the specified task to place on  your
          cluster. You can specify up to 10 tasks for each call.

       --enable-ecs-managed-tags | --no-enable-ecs-managed-tags (boolean)
          Specifies  whether  to use Amazon ECS managed tags for the task. For
          more information, see Tagging Your Amazon ECS Resources in the  Ama-
          zon Elastic Container Service Developer Guide .

       --enable-execute-command | --disable-execute-command (boolean)
          Determines  whether to use the execute command functionality for the
          containers in this task. If true  ,  this  enables  execute  command
          functionality on all containers in the task.

          If  true  ,  then  the task definition must have a task role, or you
          must provide one as an override.

       --group (string)
          The name of the task group to associate with the task.  The  default
          value  is  the family name of the task definition (for example, fam-
          ily:my-family-name ).

       --launch-type (string)
          The infrastructure to run your standalone task on. For more informa-
          tion,  see  Amazon  ECS launch types in the Amazon Elastic Container
          Service Developer Guide .

          The FARGATE launch type runs your tasks on Fargate On-Demand  infra-
          structure.

          NOTE:
              Fargate  Spot infrastructure is available for use but a capacity
              provider strategy  must  be  used.  For  more  information,  see
              Fargate capacity providers in the Amazon ECS Developer Guide .

          The  EC2  launch type runs your tasks on Amazon EC2 instances regis-
          tered to your cluster.

          The EXTERNAL launch type runs your tasks on your on-premises  server
          or virtual machine (VM) capacity registered to your cluster.

          A task can use either a launch type or a capacity provider strategy.
          If a launchType is specified, the capacityProviderStrategy parameter
          must be omitted.

          When  you  use  cluster  auto  scaling,  you  must  specify  capaci-
          tyProviderStrategy and not launchType .

          Possible values:

          o EC2

          o FARGATE

          o EXTERNAL

       --network-configuration (structure)
          The network configuration for the task. This parameter  is  required
          for  task  definitions  that  use the awsvpc network mode to receive
          their own elastic network interface,  and  it  isn't  supported  for
          other  network  modes.  For more information, see Task networking in
          the Amazon Elastic Container Service Developer Guide .

          awsvpcConfiguration -> (structure)
              The VPC subnets and security groups that are associated  with  a
              task.

              NOTE:
                 All  specified  subnets  and security groups must be from the
                 same VPC.

              subnets -> (list)
                 The IDs of the subnets associated with the task  or  service.
                 There's  a  limit  of  16  subnets  that can be specified per
                 AwsVpcConfiguration .

                 NOTE:
                     All specified subnets must be from the same VPC.

                 (string)

              securityGroups -> (list)
                 The IDs of the security groups associated with  the  task  or
                 service.  If  you don't specify a security group, the default
                 security group for the VPC is used. There's a limit of 5  se-
                 curity groups that can be specified per AwsVpcConfiguration .

                 NOTE:
                     All specified security groups must be from the same VPC.

                 (string)

              assignPublicIp -> (string)
                 Whether  the task's elastic network interface receives a pub-
                 lic IP address. The default value is DISABLED .

       Shorthand Syntax:

          awsvpcConfiguration={subnets=[string,string],securityGroups=[string,string],assignPublicIp=string}

       JSON Syntax:

          {
            "awsvpcConfiguration": {
              "subnets": ["string", ...],
              "securityGroups": ["string", ...],
              "assignPublicIp": "ENABLED"|"DISABLED"
            }
          }

       --overrides (structure)
          A list of container overrides in JSON format that specify  the  name
          of a container in the specified task definition and the overrides it
          should receive. You can override the default command for a container
          (that's  specified  in  the  task definition or Docker image) with a
          command override. You can also override existing  environment  vari-
          ables (that are specified in the task definition or Docker image) on
          a container or add new environment variables to it with an  environ-
          ment override.

          A total of 8192 characters are allowed for overrides. This limit in-
          cludes the JSON formatting characters of the override structure.

          containerOverrides -> (list)
              One or more container overrides that are sent to a task.

              (structure)
                 The overrides that are sent to a  container.  An  empty  con-
                 tainer override can be passed in. An example of an empty con-
                 tainer override is  {"containerOverrides":  [  ]  }  .  If  a
                 non-empty container override is specified, the name parameter
                 must be included.

                 You can use Secrets Manager or Amazon  Web  Services  Systems
                 Manager Parameter Store to store the sensitive data. For more
                 information, see Retrieve secrets through  environment  vari-
                 ables in the Amazon ECS Developer Guide.

                 name -> (string)
                     The  name  of  the  container that receives the override.
                     This parameter is required if any override is specified.

                 command -> (list)
                     The command to send to the container that  overrides  the
                     default command from the Docker image or the task defini-
                     tion. You must also specify a container name.

                     (string)

                 environment -> (list)
                     The environment variables to send to the  container.  You
                     can add new environment variables, which are added to the
                     container at launch, or you can override the existing en-
                     vironment  variables  from  the  Docker image or the task
                     definition. You must also specify a container name.

                     (structure)
                        A key-value pair object.

                        name -> (string)
                            The name of the key-value  pair.  For  environment
                            variables,  this  is  the  name of the environment
                            variable.

                        value -> (string)
                            The value of the key-value pair.  For  environment
                            variables,  this  is  the value of the environment
                            variable.

                 environmentFiles -> (list)
                     A list of files containing the environment  variables  to
                     pass  to  a container, instead of the value from the con-
                     tainer definition.

                     (structure)
                        A list of files containing the  environment  variables
                        to  pass to a container. You can specify up to ten en-
                        vironment files. The file must have a .env file exten-
                        sion.  Each line in an environment file should contain
                        an  environment  variable  in  VARIABLE=VALUE  format.
                        Lines beginning with # are treated as comments and are
                        ignored.

                        If there are environment variables specified using the
                        environment  parameter in a container definition, they
                        take precedence over the variables contained within an
                        environment  file.  If  multiple environment files are
                        specified that contain the same variable, they're pro-
                        cessed  from  the  top down. We recommend that you use
                        unique  variable  names.  For  more  information,  see
                        Specifying environment variables in the Amazon Elastic
                        Container Service Developer Guide .

                        You must use the following platforms for  the  Fargate
                        launch type:

                        o Linux platform version 1.4.0 or later.

                        o Windows platform version 1.0.0 or later.

                        Consider  the  following when using the Fargate launch
                        type:

                        o The file is handled like a native Docker env-file.

                        o There is no support for shell escape handling.

                        o The container entry point  interperts  the  VARIABLE
                          values.

                        value -> (string)
                            The  Amazon  Resource  Name (ARN) of the Amazon S3
                            object containing the environment variable file.

                        type -> (string)
                            The file type to use. The only supported value  is
                            s3 .

                 cpu -> (integer)
                     The  number  of cpu units reserved for the container, in-
                     stead of the default value from the task definition.  You
                     must also specify a container name.

                 memory -> (integer)
                     The  hard limit (in MiB) of memory to present to the con-
                     tainer, instead of the default value from the task  defi-
                     nition.  If  your container attempts to exceed the memory
                     specified here, the container is killed.  You  must  also
                     specify a container name.

                 memoryReservation -> (integer)
                     The soft limit (in MiB) of memory to reserve for the con-
                     tainer, instead of the default value from the task  defi-
                     nition. You must also specify a container name.

                 resourceRequirements -> (list)
                     The  type  and  amount  of a resource to assign to a con-
                     tainer, instead of the default value from the task  defi-
                     nition. The only supported resource is a GPU.

                     (structure)
                        The  type and amount of a resource to assign to a con-
                        tainer. The supported  resource  types  are  GPUs  and
                        Elastic  Inference accelerators. For more information,
                        see Working with GPUs on Amazon ECS  or  Working  with
                        Amazon  Elastic  Inference on Amazon ECS in the Amazon
                        Elastic Container Service Developer Guide

                        value -> (string)
                            The value for the specified resource type.

                            If the GPU type is used, the value is  the  number
                            of  physical  GPUs  the Amazon ECS container agent
                            reserves for the container.  The  number  of  GPUs
                            that's reserved for all containers in a task can't
                            exceed the number of available GPUs  on  the  con-
                            tainer instance that the task is launched on.

                            If  the  InferenceAccelerator  type  is  used, the
                            value    matches    the    deviceName    for    an
                            InferenceAccelerator  specified  in a task defini-
                            tion.

                        type -> (string)
                            The type of resource to assign to a container. The
                            supported values are GPU or InferenceAccelerator .

          cpu -> (string)
              The CPU override for the task.

          inferenceAcceleratorOverrides -> (list)
              The Elastic Inference accelerator override for the task.

              (structure)
                 Details  on  an  Elastic Inference accelerator task override.
                 This parameter is used to override the Elastic Inference  ac-
                 celerator specified in the task definition. For more informa-
                 tion, see Working with Amazon Elastic Inference on Amazon ECS
                 in the Amazon Elastic Container Service Developer Guide .

                 deviceName -> (string)
                     The Elastic Inference accelerator device name to override
                     for the task. This  parameter  must  match  a  deviceName
                     specified in the task definition.

                 deviceType -> (string)
                     The Elastic Inference accelerator type to use.

          executionRoleArn -> (string)
              The  Amazon Resource Name (ARN) of the task execution role over-
              ride for the task. For more information, see Amazon ECS task ex-
              ecution  IAM role in the Amazon Elastic Container Service Devel-
              oper Guide .

          memory -> (string)
              The memory override for the task.

          taskRoleArn -> (string)
              The Amazon Resource Name (ARN) of the role  that  containers  in
              this  task  can  assume. All containers in this task are granted
              the permissions that are specified in this role. For more infor-
              mation,  see  IAM Role for Tasks in the Amazon Elastic Container
              Service Developer Guide .

          ephemeralStorage -> (structure)
              The ephemeral storage setting override for the task.

              NOTE:
                 This parameter is only supported for tasks hosted on  Fargate
                 that use the following platform versions:

                 o Linux platform version 1.4.0 or later.

                 o Windows platform version 1.0.0 or later.

              sizeInGiB -> (integer)
                 The total amount, in GiB, of ephemeral storage to set for the
                 task. The minimum supported value is 21 GiB and  the  maximum
                 supported value is 200 GiB.

       JSON Syntax:

          {
            "containerOverrides": [
              {
                "name": "string",
                "command": ["string", ...],
                "environment": [
                  {
                    "name": "string",
                    "value": "string"
                  }
                  ...
                ],
                "environmentFiles": [
                  {
                    "value": "string",
                    "type": "s3"
                  }
                  ...
                ],
                "cpu": integer,
                "memory": integer,
                "memoryReservation": integer,
                "resourceRequirements": [
                  {
                    "value": "string",
                    "type": "GPU"|"InferenceAccelerator"
                  }
                  ...
                ]
              }
              ...
            ],
            "cpu": "string",
            "inferenceAcceleratorOverrides": [
              {
                "deviceName": "string",
                "deviceType": "string"
              }
              ...
            ],
            "executionRoleArn": "string",
            "memory": "string",
            "taskRoleArn": "string",
            "ephemeralStorage": {
              "sizeInGiB": integer
            }
          }

       --placement-constraints (list)
          An  array  of  placement constraint objects to use for the task. You
          can specify up to 10  constraints  for  each  task  (including  con-
          straints in the task definition and those specified at runtime).

          (structure)
              An  object representing a constraint on task placement. For more
              information, see Task placement constraints in the Amazon  Elas-
              tic Container Service Developer Guide .

              NOTE:
                 If  you're using the Fargate launch type, task placement con-
                 straints aren't supported.

              type -> (string)
                 The type of constraint. Use distinctInstance to  ensure  that
                 each  task  in  a  particular group is running on a different
                 container instance. Use memberOf to restrict the selection to
                 a group of valid candidates.

              expression -> (string)
                 A  cluster  query  language  expression  to apply to the con-
                 straint. The expression can have a  maximum  length  of  2000
                 characters. You can't specify an expression if the constraint
                 type is distinctInstance . For more information, see  Cluster
                 query language in the Amazon Elastic Container Service Devel-
                 oper Guide .

       Shorthand Syntax:

          type=string,expression=string ...

       JSON Syntax:

          [
            {
              "type": "distinctInstance"|"memberOf",
              "expression": "string"
            }
            ...
          ]

       --placement-strategy (list)
          The placement strategy objects to use for the task. You can  specify
          a maximum of 5 strategy rules for each task.

          (structure)
              The  task placement strategy for a task or service. For more in-
              formation, see Task placement strategies in the  Amazon  Elastic
              Container Service Developer Guide .

              type -> (string)
                 The type of placement strategy. The random placement strategy
                 randomly places tasks on  available  candidates.  The  spread
                 placement  strategy spreads placement across available candi-
                 dates evenly based on the field parameter. The binpack strat-
                 egy  places tasks on available candidates that have the least
                 available amount of the resource that's  specified  with  the
                 field  parameter.  For  example,  if you binpack on memory, a
                 task is placed on the instance with the least amount  of  re-
                 maining memory but still enough to run the task.

              field -> (string)
                 The  field  to  apply the placement strategy against. For the
                 spread placement strategy, valid values  are  instanceId  (or
                 host  , which has the same effect), or any platform or custom
                 attribute that's applied to a container instance, such as at-
                 tribute:ecs.availability-zone  .  For  the  binpack placement
                 strategy, valid values are cpu and memory .  For  the  random
                 placement strategy, this field is not used.

       Shorthand Syntax:

          type=string,field=string ...

       JSON Syntax:

          [
            {
              "type": "random"|"spread"|"binpack",
              "field": "string"
            }
            ...
          ]

       --platform-version (string)
          The platform version the task uses. A platform version is only spec-
          ified for tasks hosted on Fargate. If one isn't specified, the  LAT-
          EST  platform  version  is  used.  For more information, see Fargate
          platform versions in the Amazon Elastic Container Service  Developer
          Guide .

       --propagate-tags (string)
          Specifies  whether to propagate the tags from the task definition to
          the task. If no value is specified, the tags aren't propagated. Tags
          can only be propagated to the task during task creation. To add tags
          to a task after task creation, use the  TagResource API action.

          NOTE:
              An error will be received if you specify the SERVICE option when
              running a task.

          Possible values:

          o TASK_DEFINITION

          o SERVICE

          o NONE

       --reference-id (string)
          The  reference  ID  to use for the task. The reference ID can have a
          maximum length of 1024 characters.

       --started-by (string)
          An optional tag specified when a task is started.  For  example,  if
          you  automatically  trigger  a  task to run a batch process job, you
          could apply a unique identifier for that job to your task  with  the
          startedBy  parameter.  You  can  then identify which tasks belong to
          that job by filtering the results of  a   ListTasks  call  with  the
          startedBy  value.  Up to 128 letters (uppercase and lowercase), num-
          bers, hyphens (-), and underscores (_) are allowed.

          If a task is started by an Amazon ECS service,  then  the  startedBy
          parameter contains the deployment ID of the service that starts it.

       --tags (list)
          The  metadata  that you apply to the task to help you categorize and
          organize them. Each tag consists of a key  and  an  optional  value,
          both of which you define.

          The following basic restrictions apply to tags:

          o Maximum number of tags per resource - 50

          o For  each  resource, each tag key must be unique, and each tag key
            can have only one value.

          o Maximum key length - 128 Unicode characters in UTF-8

          o Maximum value length - 256 Unicode characters in UTF-8

          o If your tagging schema is used across multiple  services  and  re-
            sources, remember that other services may have restrictions on al-
            lowed characters. Generally allowed characters are: letters,  num-
            bers, and spaces representable in UTF-8, and the following charac-
            ters: + - = . _ : / @.

          o Tag keys and values are case-sensitive.

          o Do not use aws: , AWS: , or any upper or lowercase combination  of
            such  as  a prefix for either keys or values as it is reserved for
            Amazon Web Services use. You cannot edit or  delete  tag  keys  or
            values  with  this  prefix.  Tags  with  this  prefix do not count
            against your tags per resource limit.

          (structure)
              The metadata that you apply to a resource to help you categorize
              and  organize  them.  Each tag consists of a key and an optional
              value. You define them.

              The following basic restrictions apply to tags:

              o Maximum number of tags per resource - 50

              o For each resource, each tag key must be unique, and  each  tag
                key can have only one value.

              o Maximum key length - 128 Unicode characters in UTF-8

              o Maximum value length - 256 Unicode characters in UTF-8

              o If  your  tagging  schema is used across multiple services and
                resources, remember that other services may have  restrictions
                on  allowed characters. Generally allowed characters are: let-
                ters, numbers, and spaces representable in UTF-8, and the fol-
                lowing characters: + - = . _ : / @.

              o Tag keys and values are case-sensitive.

              o Do not use aws: , AWS: , or any upper or lowercase combination
                of such as a prefix for either keys or values  as  it  is  re-
                served  for Amazon Web Services use. You cannot edit or delete
                tag keys or values with this prefix. Tags with this prefix  do
                not count against your tags per resource limit.

              key -> (string)
                 One  part  of a key-value pair that make up a tag. A key is a
                 general label that acts like a category for more specific tag
                 values.

              value -> (string)
                 The  optional  part of a key-value pair that make up a tag. A
                 value acts as a descriptor within a tag category (key).

       Shorthand Syntax:

          key=string,value=string ...

       JSON Syntax:

          [
            {
              "key": "string",
              "value": "string"
            }
            ...
          ]

       --task-definition (string)
          The family and revision (family:revision ) or full ARN of  the  task
          definition  to run. If a revision isn't specified, the latest ACTIVE
          revision is used.

          When you create a policy for run-task, you can set the  resource  to
          be the latest task definition revision, or a specific revision.

          The  full  ARN  value must match the value that you specified as the
          Resource of the principal's permissions policy.

          When you specify the policy resource as the latest  task  definition
          version    (by    setting    the   Resource   in   the   policy   to
          arn:aws:ecs:us-east-1:111122223333:task-definition/TaskFamilyName ),
          then set this value to arn:aws:ecs:us-east-1:111122223333:task-defi-
          nition/TaskFamilyName .

          When you specify the policy resource as a specific  task  definition
          version    (by    setting    the   Resource   in   the   policy   to
          arn:aws:ecs:us-east-1:111122223333:task-definition/TaskFamilyName:1
          or    arn:aws:ecs:us-east-1:111122223333:task-definition/TaskFamily-
          Name:*       ),       then       set       this       value       to
          arn:aws:ecs:us-east-1:111122223333:task-definition/TaskFamilyName:1
          .

          For more information, see Policy Resources for  Amazon  ECS  in  the
          Amazon Elastic Container Service developer Guide.

       --client-token (string)
          An  identifier that you provide to ensure the idempotency of the re-
          quest. It must be unique and is case sensitive. Up to 64  characters
          are  allowed.  The  valid  characters are characters in the range of
          33-126, inclusive. For more information, see Ensuring idempotency .

       --volume-configurations (list)
          The details of the volume that was configuredAtLaunch . You can con-
          figure  the size, volumeType, IOPS, throughput, snapshot and encryp-
          tion in in TaskManagedEBSVolumeConfiguration . The name of the  vol-
          ume must match the name from the task definition.

          (structure)
              Configuration  settings  for the task volume that was configure-
              dAtLaunch that weren't set during RegisterTaskDef .

              name -> (string)
                 The name of the volume. This value must match the volume name
                 from the Volume object in the task definition.

              managedEBSVolume -> (structure)
                 The  configuration  for the Amazon EBS volume that Amazon ECS
                 creates and manages on your behalf. These settings  are  used
                 to create each Amazon EBS volume, with one volume created for
                 each task. The Amazon EBS volumes are visible in your account
                 in the Amazon EC2 console once they are created.

                 encrypted -> (boolean)
                     Indicates  whether  the volume should be encrypted. If no
                     value is specified, encryption is turned on  by  default.
                     This  parameter  maps 1:1 with the Encrypted parameter of
                     the CreateVolume API in the Amazon EC2 API Reference .

                 kmsKeyId -> (string)
                     The Amazon Resource Name (ARN) identifier of  the  Amazon
                     Web Services Key Management Service key to use for Amazon
                     EBS encryption. When encryption is turned on and no  Ama-
                     zon Web Services Key Management Service key is specified,
                     the default Amazon Web Services managed  key  for  Amazon
                     EBS  volumes  is  used.  This parameter maps 1:1 with the
                     KmsKeyId parameter of the CreateVolume API in the  Amazon
                     EC2 API Reference .

                     WARNING:
                        Amazon  Web Services authenticates the Amazon Web Ser-
                        vices  Key  Management  Service  key   asynchronously.
                        Therefore, if you specify an ID, alias, or ARN that is
                        invalid, the action can appear to complete, but  even-
                        tually fails.

                 volumeType -> (string)
                     The volume type. This parameter maps 1:1 with the Volume-
                     Type parameter of the CreateVolume API in the Amazon  EC2
                     API Reference . For more information, see Amazon EBS vol-
                     ume types in the Amazon EC2 User Guide .

                     The following are the supported volume types.

                     o General Purpose SSD: gp2
                       |
                       gp3

                     System Message: WARNING/2 (<string>:, line 1233)
                       Inline  substitution_reference   start-string   without
                       end-string.

                     o Provisioned IOPS SSD: io1
                       |
                       io2

                     System Message: WARNING/2 (<string>:, line 1235)
                       Inline   substitution_reference   start-string  without
                       end-string.

                     o Throughput Optimized HDD: st1

                     o Cold HDD: sc1

                     o Magnetic: standard

                     NOTE:
                        The magnetic volume type is not supported on Fargate.

                 sizeInGiB -> (integer)
                     The size of the volume in GiB. You must specify either  a
                     volume  size  or a snapshot ID. If you specify a snapshot
                     ID, the snapshot size is used for the volume size by  de-
                     fault.  You  can optionally specify a volume size greater
                     than or equal to the snapshot size. This  parameter  maps
                     1:1  with  the  Size parameter of the CreateVolume API in
                     the Amazon EC2 API Reference .

                     The following are the supported volume  size  values  for
                     each volume type.

                     o gp2 and gp3 : 1-16,384

                     o io1 and io2 : 4-16,384

                     o st1 and sc1 : 125-16,384

                     o standard : 1-1,024

                 snapshotId -> (string)
                     The  snapshot  that Amazon ECS uses to create the volume.
                     You must specify either a snapshot ID or a  volume  size.
                     This  parameter maps 1:1 with the SnapshotId parameter of
                     the CreateVolume API in the Amazon EC2 API Reference .

                 iops -> (integer)
                     The number of I/O operations per second (IOPS). For gp3 ,
                     io1 , and io2 volumes, this represents the number of IOPS
                     that are provisioned for the  volume.  For  gp2  volumes,
                     this  represents  the  baseline performance of the volume
                     and the rate at which the volume accumulates I/O  credits
                     for bursting.

                     The  following  are  the supported values for each volume
                     type.

                     o gp3 : 3,000 - 16,000 IOPS

                     o io1 : 100 - 64,000 IOPS

                     o io2 : 100 - 256,000 IOPS

                     This parameter is required for io1 and io2 volume  types.
                     The  default for gp3 volumes is 3,000 IOPS . This parame-
                     ter is not supported for st1 , sc1 , or  standard  volume
                     types.

                     This  parameter  maps  1:1 with the Iops parameter of the
                     CreateVolume API in the Amazon EC2 API Reference .

                 throughput -> (integer)
                     The throughput to provision for a volume, in MiB/s,  with
                     a  maximum  of  1,000 MiB/s. This parameter maps 1:1 with
                     the Throughput parameter of the CreateVolume API  in  the
                     Amazon EC2 API Reference .

                     WARNING:
                        This  parameter  is  only supported for the gp3 volume
                        type.

                 tagSpecifications -> (list)
                     The tags to apply to the volume. Amazon ECS applies  ser-
                     vice-managed  tags  by  default.  This parameter maps 1:1
                     with   the   TagSpecifications.N   parameter    of    the
                     CreateVolume API in the Amazon EC2 API Reference .

                     (structure)
                        The tag specifications of an Amazon EBS volume.

                        resourceType -> (string)
                            The type of volume resource.

                        tags -> (list)
                            The  tags  applied to this Amazon EBS volume. Ama-
                            zonECSCreated and  AmazonECSManaged  are  reserved
                            tags that can't be used.

                            (structure)
                               The  metadata  that  you apply to a resource to
                               help you categorize and organize them. Each tag
                               consists  of  a  key and an optional value. You
                               define them.

                               The following basic restrictions apply to tags:

                               o Maximum number of tags per resource - 50

                               o For each  resource,  each  tag  key  must  be
                                 unique,  and  each  tag key can have only one
                                 value.

                               o Maximum key length - 128  Unicode  characters
                                 in UTF-8

                               o Maximum value length - 256 Unicode characters
                                 in UTF-8

                               o If your tagging schema is used across  multi-
                                 ple  services  and  resources,  remember that
                                 other services may have restrictions  on  al-
                                 lowed  characters.  Generally allowed charac-
                                 ters are: letters, numbers, and spaces repre-
                                 sentable  in UTF-8, and the following charac-
                                 ters: + - = . _ : / @.

                               o Tag keys and values are case-sensitive.

                               o Do not use aws: , AWS: , or any upper or low-
                                 ercase  combination  of  such as a prefix for
                                 either keys or values as it is  reserved  for
                                 Amazon  Web  Services use. You cannot edit or
                                 delete tag keys or values with  this  prefix.
                                 Tags  with  this  prefix do not count against
                                 your tags per resource limit.

                               key -> (string)
                                   One part of a key-value pair that make up a
                                   tag.  A  key  is  a general label that acts
                                   like a category for more specific tag  val-
                                   ues.

                               value -> (string)
                                   The  optional part of a key-value pair that
                                   make up a tag. A value acts as a descriptor
                                   within a tag category (key).

                        propagateTags -> (string)
                            Determines  whether to propagate the tags from the
                            task definition to the Amazon EBS volume. Tags can
                            only  propagate  to  a  SERVICE  specified in Ser-
                            viceVolumeConfiguration . If no  value  is  speci-
                            fied, the tags aren't propagated.

                 roleArn -> (string)
                     The  ARN  of  the IAM role to associate with this volume.
                     This is the Amazon ECS infrastructure IAM  role  that  is
                     used  to  manage your Amazon Web Services infrastructure.
                     We recommend using the  Amazon  ECS-managed  AmazonECSIn-
                     frastructureRolePolicyForVolumes  IAM  policy  with  this
                     role. For more information, see Amazon ECS infrastructure
                     IAM role in the Amazon ECS Developer Guide .

                 terminationPolicy -> (structure)
                     The  termination  policy for the volume when the task ex-
                     its. This provides a way to control  whether  Amazon  ECS
                     terminates the Amazon EBS volume when the task stops.

                     deleteOnTermination -> (boolean)
                        Indicates whether the volume should be deleted on when
                        the task stops. If a value of true is specified,  Ama-
                        zon  ECS  deletes the Amazon EBS volume on your behalf
                        when the task goes into the STOPPED state. If no value
                        is  specified, the default value is true is used. When
                        set to false , Amazon ECS leaves the  volume  in  your
                        account.

                 filesystemType -> (string)
                     The  Linux  filesystem  type  for the volume. For volumes
                     created from  a  snapshot,  you  must  specify  the  same
                     filesystem  type that the volume was using when the snap-
                     shot was created. If there is a filesystem type mismatch,
                     the task will fail to start.

                     The  available filesystem types are ext3 , ext4 , and xfs
                     . If no value is specified, the xfs  filesystem  type  is
                     used by default.

       JSON Syntax:

          [
            {
              "name": "string",
              "managedEBSVolume": {
                "encrypted": true|false,
                "kmsKeyId": "string",
                "volumeType": "string",
                "sizeInGiB": integer,
                "snapshotId": "string",
                "iops": integer,
                "throughput": integer,
                "tagSpecifications": [
                  {
                    "resourceType": "volume",
                    "tags": [
                      {
                        "key": "string",
                        "value": "string"
                      }
                      ...
                    ],
                    "propagateTags": "TASK_DEFINITION"|"SERVICE"|"NONE"
                  }
                  ...
                ],
                "roleArn": "string",
                "terminationPolicy": {
                  "deleteOnTermination": true|false
                },
                "filesystemType": "ext3"|"ext4"|"xfs"
              }
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To run a task on your default cluster

       The  following  run-task example runs a task on the default cluster and
       uses a client token.

          aws ecs run-task \
              --cluster default \
              --task-definition sleep360:1 \
              --client-token 550e8400-e29b-41d4-a716-446655440000

       Output:

          {
              "tasks": [
                  {
                      "attachments": [],
                      "attributes": [
                          {
                              "name": "ecs.cpu-architecture",
                              "value": "x86_64"
                          }
                      ],
                      "availabilityZone": "us-east-1b",
                      "capacityProviderName": "example-capacity-provider",
                      "clusterArn": "arn:aws:ecs:us-east-1:123456789012:cluster/default",
                      "containerInstanceArn": "arn:aws:ecs:us-east-1:123456789012:container-instance/default/bc4d2ec611d04bb7bb97e83ceEXAMPLE",
                      "containers": [
                          {
                              "containerArn": "arn:aws:ecs:us-east-1:123456789012:container/default/d6f51cc5bbc94a47969c92035e9f66f8/75853d2d-711e-458a-8362-0f0aEXAMPLE",
                              "taskArn": "arn:aws:ecs:us-east-1:123456789012:task/default/d6f51cc5bbc94a47969c9203EXAMPLE",
                              "name": "sleep",
                              "image": "busybox",
                              "lastStatus": "PENDING",
                              "networkInterfaces": [],
                              "cpu": "10",
                              "memory": "10"
                          }
                      ],
                      "cpu": "10",
                      "createdAt": "2023-11-21T16:59:34.403000-05:00",
                      "desiredStatus": "RUNNING",
                      "enableExecuteCommand": false,
                      "group": "family:sleep360",
                      "lastStatus": "PENDING",
                      "launchType": "EC2",
                      "memory": "10",
                      "overrides": {
                          "containerOverrides": [
                              {
                                  "name": "sleep"
                              }
                          ],
                          "inferenceAcceleratorOverrides": []
                      },
                      "tags": [],
                      "taskArn": "arn:aws:ecs:us-east-1:123456789012:task/default/d6f51cc5bbc94a47969c9203EXAMPLE",
                      "taskDefinitionArn": "arn:aws:ecs:us-east-1:123456789012:task-definition/sleep360:1",
                      "version": 1
                  }
              ],
              "failures": []
          }

       For more information, see Running Tasks in  the  Amazon  ECS  Developer
       Guide.

OUTPUT
       tasks -> (list)
          A  full  description of the tasks that were run. The tasks that were
          successfully placed on your cluster are described here.

          (structure)
              Details on a task in a cluster.

              attachments -> (list)
                 The Elastic Network Adapter that's associated with  the  task
                 if the task uses the awsvpc network mode.

                 (structure)
                     An  object  representing a container instance or task at-
                     tachment.

                     id -> (string)
                        The unique identifier for the attachment.

                     type -> (string)
                        The type of the attachment, such as  ElasticNetworkIn-
                        terface  ,  Service  Connect , and AmazonElasticBlock-
                        Storage .

                     status -> (string)
                        The status of the attachment. Valid values are PRECRE-
                        ATED  ,  CREATED  , ATTACHING , ATTACHED , DETACHING ,
                        DETACHED , DELETED , and FAILED .

                     details -> (list)
                        Details of the attachment.

                        For elastic network interfaces, this includes the net-
                        work interface ID, the MAC address, the subnet ID, and
                        the private IPv4 address.

                        For Service Connect services, this includes portName ,
                        clientAliases  ,  discoveryName , and ingressPortOver-
                        ride .

                        For elastic block storage, this includes roleArn , en-
                        crypted , filesystemType , iops , kmsKeyId , sizeInGiB
                        , snapshotId , tagSpecifications ,  throughput  ,  and
                        volumeType .

                        (structure)
                            A key-value pair object.

                            name -> (string)
                               The name of the key-value pair. For environment
                               variables, this is the name of the  environment
                               variable.

                            value -> (string)
                               The  value  of the key-value pair. For environ-
                               ment variables, this is the value of the  envi-
                               ronment variable.

              attributes -> (list)
                 The attributes of the task

                 (structure)
                     An  attribute is a name-value pair that's associated with
                     an Amazon ECS object. Use attributes to extend the Amazon
                     ECS  data  model  by  adding  custom metadata to your re-
                     sources. For more information, see Attributes in the Ama-
                     zon Elastic Container Service Developer Guide .

                     name -> (string)
                        The  name  of the attribute. The name must contain be-
                        tween 1 and 128 characters. The name may contain  let-
                        ters  (uppercase and lowercase), numbers, hyphens (-),
                        underscores (_), forward slashes (/), back slashes (),
                        or periods (.).

                     value -> (string)
                        The value of the attribute. The value must contain be-
                        tween 1 and 128 characters.  It  can  contain  letters
                        (uppercase  and  lowercase), numbers, hyphens (-), un-
                        derscores (_), periods  (.),  at  signs  (@),  forward
                        slashes  (/),  back slashes (), colons (:), or spaces.
                        The value can't start or end with a space.

                     targetType -> (string)
                        The type of the target to attach the  attribute  with.
                        This  parameter  is required if you use the short form
                        ID for a resource instead of the full ARN.

                     targetId -> (string)
                        The ID of the target. You can specify the  short  form
                        ID  for  a  resource  or the full Amazon Resource Name
                        (ARN).

              availabilityZone -> (string)
                 The Availability Zone for the task.

              capacityProviderName -> (string)
                 The capacity provider that's associated with the task.

              clusterArn -> (string)
                 The ARN of the cluster that hosts the task.

              connectivity -> (string)
                 The connectivity status of a task.

              connectivityAt -> (timestamp)
                 The Unix timestamp for the time when the task last went  into
                 CONNECTED status.

              containerInstanceArn -> (string)
                 The ARN of the container instances that host the task.

              containers -> (list)
                 The containers that's associated with the task.

                 (structure)
                     A Docker container that's part of a task.

                     containerArn -> (string)
                        The Amazon Resource Name (ARN) of the container.

                     taskArn -> (string)
                        The ARN of the task.

                     name -> (string)
                        The name of the container.

                     image -> (string)
                        The image used for the container.

                     imageDigest -> (string)
                        The container image manifest digest.

                     runtimeId -> (string)
                        The ID of the Docker container.

                     lastStatus -> (string)
                        The last known status of the container.

                     exitCode -> (integer)
                        The exit code returned from the container.

                     reason -> (string)
                        A  short (255 max characters) human-readable string to
                        provide additional details about a running or  stopped
                        container.

                     networkBindings -> (list)
                        The network bindings associated with the container.

                        (structure)
                            Details  on  the  network  bindings between a con-
                            tainer and its host container  instance.  After  a
                            task  reaches the RUNNING status, manual and auto-
                            matic host and container port assignments are vis-
                            ible  in  the  networkBindings section of  Descri-
                            beTasks API responses.

                            bindIP -> (string)
                               The IP address that the container is  bound  to
                               on the container instance.

                            containerPort -> (integer)
                               The  port  number  on the container that's used
                               with the network binding.

                            hostPort -> (integer)
                               The port number on the host  that's  used  with
                               the network binding.

                            protocol -> (string)
                               The protocol used for the network binding.

                            containerPortRange -> (string)
                               The  port  number range on the container that's
                               bound  to  the  dynamically  mapped  host  port
                               range.

                               The  following  rules  apply when you specify a
                               containerPortRange :

                               o You must use either the bridge  network  mode
                                 or the awsvpc network mode.

                               o This  parameter is available for both the EC2
                                 and Fargate launch types.

                               o This parameter  is  available  for  both  the
                                 Linux and Windows operating systems.

                               o The  container  instance  must  have at least
                                 version 1.67.0 of the container agent and  at
                                 least  version 1.67.0-1 of the ecs-init pack-
                                 age

                               o You can specify a maximum of 100 port  ranges
                                 per container.

                               o You  do  not  specify  a  hostPortRange . The
                                 value of the hostPortRange is set as follows:

                                 o For containers in a task  with  the  awsvpc
                                   network  mode,  the hostPortRange is set to
                                   the same value as the containerPortRange  .
                                   This is a static mapping strategy.

                                 o For  containers  in  a task with the bridge
                                   network mode, the Amazon  ECS  agent  finds
                                   open  host ports from the default ephemeral
                                   range and passes it to docker to bind  them
                                   to the container ports.

                               o The  containerPortRange  valid values are be-
                                 tween 1 and 65535.

                               o A port can only be included in one port  map-
                                 ping per container.

                               o You cannot specify overlapping port ranges.

                               o The first port in the range must be less than
                                 last port in the range.

                               o Docker  recommends  that  you  turn  off  the
                                 docker-proxy in the Docker daemon config file
                                 when you have a large number  of  ports.  For
                                 more  information,  see  Issue  #11185 on the
                                 Github website. For information about how  to
                                 turn  off the docker-proxy in the Docker dae-
                                 mon config file, see  Docker  daemon  in  the
                                 Amazon ECS Developer Guide .

                               You      can      call      `     DescribeTasks
                               https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTasks.html`__
                               to  view  the  hostPortRange which are the host
                               ports that are bound to the container ports.

                            hostPortRange -> (string)
                               The port number range on the host  that's  used
                               with  the  network binding. This is assigned is
                               assigned by Docker and delivered by the  Amazon
                               ECS agent.

                     networkInterfaces -> (list)
                        The network interfaces associated with the container.

                        (structure)
                            An  object representing the elastic network inter-
                            face for tasks that use the awsvpc network mode.

                            attachmentId -> (string)
                               The attachment ID for the network interface.

                            privateIpv4Address -> (string)
                               The private IPv4 address for the network inter-
                               face.

                            ipv6Address -> (string)
                               The private IPv6 address for the network inter-
                               face.

                     healthStatus -> (string)
                        The health status of the container. If  health  checks
                        aren't configured for this container in its task defi-
                        nition, then it reports the health status as UNKNOWN .

                     managedAgents -> (list)
                        The details of any Amazon ECS managed  agents  associ-
                        ated with the container.

                        (structure)
                            Details  about  the  managed  agent status for the
                            container.

                            lastStartedAt -> (timestamp)
                               The Unix timestamp for the time when  the  man-
                               aged agent was last started.

                            name -> (string)
                               The name of the managed agent. When the execute
                               command feature is turned on, the managed agent
                               name is ExecuteCommandAgent .

                            reason -> (string)
                               The  reason for why the managed agent is in the
                               state it is in.

                            lastStatus -> (string)
                               The last known status of the managed agent.

                     cpu -> (string)
                        The number of CPU units set  for  the  container.  The
                        value  is 0 if no value was specified in the container
                        definition when the task definition was registered.

                     memory -> (string)
                        The hard limit (in MiB) of memory  set  for  the  con-
                        tainer.

                     memoryReservation -> (string)
                        The  soft  limit  (in  MiB) of memory set for the con-
                        tainer.

                     gpuIds -> (list)
                        The IDs of each GPU assigned to the container.

                        (string)

              cpu -> (string)
                 The number of CPU units used by the task as  expressed  in  a
                 task  definition. It can be expressed as an integer using CPU
                 units (for example, 1024 ). It can also  be  expressed  as  a
                 string  using  vCPUs (for example, 1 vCPU or 1 vcpu ). String
                 values are converted to an integer  that  indicates  the  CPU
                 units when the task definition is registered.

                 If  you use the EC2 launch type, this field is optional. Sup-
                 ported values are between 128 CPU  units  (0.125  vCPUs)  and
                 10240 CPU units (10 vCPUs).

                 If  you  use the Fargate launch type, this field is required.
                 You must use one of the following values. These values deter-
                 mine the range of supported values for the memory parameter:

                 The CPU units cannot be less than 1 vCPU when you use Windows
                 containers on Fargate.

                 o 256 (.25 vCPU) - Available memory  values:  512  (0.5  GB),
                   1024 (1 GB), 2048 (2 GB)

                 o 512  (.5 vCPU) - Available memory values: 1024 (1 GB), 2048
                   (2 GB), 3072 (3 GB), 4096 (4 GB)

                 o 1024 (1 vCPU) - Available memory values: 2048 (2 GB),  3072
                   (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB),
                   8192 (8 GB)

                 o 2048 (2 vCPU) - Available memory values: 4096  (4  GB)  and
                   16384 (16 GB) in increments of 1024 (1 GB)

                 o 4096  (4  vCPU)  - Available memory values: 8192 (8 GB) and
                   30720 (30 GB) in increments of 1024 (1 GB)

                 o 8192 (8 vCPU) - Available memory values: 16 GB and 60 GB in
                   4  GB  increments This option requires Linux platform 1.4.0
                   or later.

                 o 16384 (16vCPU) - Available memory values: 32GB and  120  GB
                   in  8  GB  increments  This  option requires Linux platform
                   1.4.0 or later.

              createdAt -> (timestamp)
                 The Unix timestamp for the time when the  task  was  created.
                 More  specifically,  it's  for the time when the task entered
                 the PENDING state.

              desiredStatus -> (string)
                 The desired status of the task.  For  more  information,  see
                 Task Lifecycle .

              enableExecuteCommand -> (boolean)
                 Determines whether execute command functionality is turned on
                 for this task. If true ,  execute  command  functionality  is
                 turned on all the containers in the task.

              executionStoppedAt -> (timestamp)
                 The  Unix  timestamp  for  the  time  when the task execution
                 stopped.

              group -> (string)
                 The name of the task group that's associated with the task.

              healthStatus -> (string)
                 The health status for the task. It's determined by the health
                 of  the  essential  containers  in the task. If all essential
                 containers in the task are reporting as HEALTHY  ,  the  task
                 status  also reports as HEALTHY . If any essential containers
                 in the task are reporting as UNHEALTHY or UNKNOWN , the  task
                 status also reports as UNHEALTHY or UNKNOWN .

                 NOTE:
                     The  Amazon ECS container agent doesn't monitor or report
                     on Docker health checks that are embedded in a  container
                     image  and not specified in the container definition. For
                     example, this includes those specified in a parent  image
                     or  from  the image's Dockerfile. Health check parameters
                     that are specified in a container definition override any
                     Docker  health checks that are found in the container im-
                     age.

              inferenceAccelerators -> (list)
                 The Elastic Inference accelerator that's associated with  the
                 task.

                 (structure)
                     Details on an Elastic Inference accelerator. For more in-
                     formation, see Working with Amazon Elastic  Inference  on
                     Amazon ECS in the Amazon Elastic Container Service Devel-
                     oper Guide .

                     deviceName -> (string)
                        The Elastic Inference accelerator device name. The de-
                        viceName  must also be referenced in a container defi-
                        nition as a ResourceRequirement .

                     deviceType -> (string)
                        The Elastic Inference accelerator type to use.

              lastStatus -> (string)
                 The last known status for the task. For more information, see
                 Task Lifecycle .

              launchType -> (string)
                 The infrastructure where your task runs on. For more informa-
                 tion, see Amazon ECS launch types in the Amazon Elastic  Con-
                 tainer Service Developer Guide .

              memory -> (string)
                 The amount of memory (in MiB) that the task uses as expressed
                 in a task definition. It can be expressed as an integer using
                 MiB (for example, 1024 ). If it's expressed as a string using
                 GB (for example, 1GB or 1 GB ), it's converted to an  integer
                 indicating the MiB when the task definition is registered.

                 If you use the EC2 launch type, this field is optional.

                 If  you  use the Fargate launch type, this field is required.
                 You must use one of the following values. The value that  you
                 choose  determines  the range of supported values for the cpu
                 parameter.

                 o 512 (0.5 GB), 1024 (1 GB), 2048 (2 GB) - Available cpu val-
                   ues: 256 (.25 vCPU)

                 o 1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB) - Avail-
                   able cpu values: 512 (.5 vCPU)

                 o 2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6
                   GB),  7168 (7 GB), 8192 (8 GB) - Available cpu values: 1024
                   (1 vCPU)

                 o Between 4096 (4 GB) and 16384 (16 GB) in increments of 1024
                   (1 GB) - Available cpu values: 2048 (2 vCPU)

                 o Between 8192 (8 GB) and 30720 (30 GB) in increments of 1024
                   (1 GB) - Available cpu values: 4096 (4 vCPU)

                 o Between 16 GB and 60 GB in 4 GB increments - Available  cpu
                   values:  8192  (8 vCPU) This option requires Linux platform
                   1.4.0 or later.

                 o Between 32GB and 120 GB in 8 GB increments - Available  cpu
                   values: 16384 (16 vCPU) This option requires Linux platform
                   1.4.0 or later.

              overrides -> (structure)
                 One or more container overrides.

                 containerOverrides -> (list)
                     One or more container overrides that are sent to a task.

                     (structure)
                        The overrides that are sent to a container.  An  empty
                        container  override can be passed in. An example of an
                        empty container override is {"containerOverrides": [ ]
                        }  .  If  a non-empty container override is specified,
                        the name parameter must be included.

                        You can use Secrets Manager  or  Amazon  Web  Services
                        Systems Manager Parameter Store to store the sensitive
                        data.  For  more  information,  see  Retrieve  secrets
                        through environment variables in the Amazon ECS Devel-
                        oper Guide.

                        name -> (string)
                            The name of the container that receives the  over-
                            ride.  This  parameter is required if any override
                            is specified.

                        command -> (list)
                            The command to send to the  container  that  over-
                            rides the default command from the Docker image or
                            the task definition. You must also specify a  con-
                            tainer name.

                            (string)

                        environment -> (list)
                            The  environment  variables  to  send  to the con-
                            tainer. You can  add  new  environment  variables,
                            which are added to the container at launch, or you
                            can override the  existing  environment  variables
                            from  the Docker image or the task definition. You
                            must also specify a container name.

                            (structure)
                               A key-value pair object.

                               name -> (string)
                                   The name of the key-value pair.  For  envi-
                                   ronment  variables, this is the name of the
                                   environment variable.

                               value -> (string)
                                   The value of the key-value pair. For  envi-
                                   ronment variables, this is the value of the
                                   environment variable.

                        environmentFiles -> (list)
                            A list of files containing the  environment  vari-
                            ables to pass to a container, instead of the value
                            from the container definition.

                            (structure)
                               A list  of  files  containing  the  environment
                               variables to pass to a container. You can spec-
                               ify up to ten environment files. The file  must
                               have a .env file extension. Each line in an en-
                               vironment file should  contain  an  environment
                               variable in VARIABLE=VALUE format. Lines begin-
                               ning with # are treated as comments and are ig-
                               nored.

                               If  there  are  environment variables specified
                               using the environment parameter in a  container
                               definition, they take precedence over the vari-
                               ables contained within an environment file.  If
                               multiple  environment  files are specified that
                               contain the same  variable,  they're  processed
                               from  the  top  down. We recommend that you use
                               unique variable names.  For  more  information,
                               see  Specifying  environment  variables  in the
                               Amazon  Elastic  Container  Service   Developer
                               Guide .

                               You  must  use  the following platforms for the
                               Fargate launch type:

                               o Linux platform version 1.4.0 or later.

                               o Windows platform version 1.0.0 or later.

                               Consider the following when using  the  Fargate
                               launch type:

                               o The  file  is  handled  like  a native Docker
                                 env-file.

                               o There is no support  for  shell  escape  han-
                                 dling.

                               o The  container  entry  point  interperts  the
                                 VARIABLE values.

                               value -> (string)
                                   The Amazon Resource Name (ARN) of the  Ama-
                                   zon  S3  object  containing the environment
                                   variable file.

                               type -> (string)
                                   The file type to use.  The  only  supported
                                   value is s3 .

                        cpu -> (integer)
                            The  number  of  cpu  units  reserved for the con-
                            tainer, instead of the default value from the task
                            definition.  You  must  also  specify  a container
                            name.

                        memory -> (integer)
                            The hard limit (in MiB) of memory  to  present  to
                            the  container,  instead of the default value from
                            the task definition. If your container attempts to
                            exceed the memory specified here, the container is
                            killed. You must also specify a container name.

                        memoryReservation -> (integer)
                            The soft limit (in MiB) of memory to  reserve  for
                            the  container,  instead of the default value from
                            the task definition. You must also specify a  con-
                            tainer name.

                        resourceRequirements -> (list)
                            The  type  and amount of a resource to assign to a
                            container, instead of the default value  from  the
                            task  definition. The only supported resource is a
                            GPU.

                            (structure)
                               The type and amount of a resource to assign  to
                               a  container.  The supported resource types are
                               GPUs and Elastic  Inference  accelerators.  For
                               more information, see Working with GPUs on Ama-
                               zon ECS or Working with Amazon  Elastic  Infer-
                               ence  on  Amazon ECS in the Amazon Elastic Con-
                               tainer Service Developer Guide

                               value -> (string)
                                   The value for the specified resource type.

                                   If the GPU type is used, the value  is  the
                                   number of physical GPUs the Amazon ECS con-
                                   tainer agent reserves  for  the  container.
                                   The  number of GPUs that's reserved for all
                                   containers in a task can't exceed the  num-
                                   ber  of available GPUs on the container in-
                                   stance that the task is launched on.

                                   If the InferenceAccelerator type  is  used,
                                   the  value  matches  the  deviceName for an
                                   InferenceAccelerator specified  in  a  task
                                   definition.

                               type -> (string)
                                   The  type  of  resource to assign to a con-
                                   tainer. The supported values are GPU or In-
                                   ferenceAccelerator .

                 cpu -> (string)
                     The CPU override for the task.

                 inferenceAcceleratorOverrides -> (list)
                     The Elastic Inference accelerator override for the task.

                     (structure)
                        Details on an Elastic Inference accelerator task over-
                        ride. This parameter is used to override  the  Elastic
                        Inference  accelerator  specified  in the task defini-
                        tion. For more information, see  Working  with  Amazon
                        Elastic  Inference on Amazon ECS in the Amazon Elastic
                        Container Service Developer Guide .

                        deviceName -> (string)
                            The Elastic Inference accelerator device  name  to
                            override for the task. This parameter must match a
                            deviceName specified in the task definition.

                        deviceType -> (string)
                            The Elastic Inference accelerator type to use.

                 executionRoleArn -> (string)
                     The Amazon Resource Name (ARN) of the task execution role
                     override  for  the task. For more information, see Amazon
                     ECS task execution IAM role in the  Amazon  Elastic  Con-
                     tainer Service Developer Guide .

                 memory -> (string)
                     The memory override for the task.

                 taskRoleArn -> (string)
                     The  Amazon Resource Name (ARN) of the role that contain-
                     ers in this task can assume. All containers in this  task
                     are  granted  the  permissions that are specified in this
                     role. For more information, see IAM Role for Tasks in the
                     Amazon Elastic Container Service Developer Guide .

                 ephemeralStorage -> (structure)
                     The ephemeral storage setting override for the task.

                     NOTE:
                        This  parameter  is only supported for tasks hosted on
                        Fargate that use the following platform versions:

                        o Linux platform version 1.4.0 or later.

                        o Windows platform version 1.0.0 or later.

                     sizeInGiB -> (integer)
                        The total amount, in GiB, of ephemeral storage to  set
                        for  the  task.  The minimum supported value is 21 GiB
                        and the maximum supported value is 200 GiB.

              platformVersion -> (string)
                 The platform version where your task runs on. A platform ver-
                 sion  is only specified for tasks that use the Fargate launch
                 type. If you didn't specify one, the LATEST platform  version
                 is  used. For more information, see Fargate Platform Versions
                 in the Amazon Elastic Container Service Developer Guide .

              platformFamily -> (string)
                 The operating system that your tasks are running on. A  plat-
                 form  family is specified only for tasks that use the Fargate
                 launch type.

                 All tasks that run as part of this service must use the  same
                 platformFamily value as the service (for example, LINUX. ).

              pullStartedAt -> (timestamp)
                 The Unix timestamp for the time when the container image pull
                 began.

              pullStoppedAt -> (timestamp)
                 The Unix timestamp for the time when the container image pull
                 completed.

              startedAt -> (timestamp)
                 The  Unix  timestamp for the time when the task started. More
                 specifically, it's for the time when  the  task  transitioned
                 from the PENDING state to the RUNNING state.

              startedBy -> (string)
                 The  tag  specified  when a task is started. If an Amazon ECS
                 service started the task, the  startedBy  parameter  contains
                 the deployment ID of that service.

              stopCode -> (string)
                 The  stop code indicating why a task was stopped. The stoppe-
                 dReason might contain additional details.

                 For more information about stop code, see Stopped tasks error
                 codes in the Amazon ECS Developer Guide .

              stoppedAt -> (timestamp)
                 The  Unix  timestamp  for the time when the task was stopped.
                 More specifically, it's for the time when  the  task  transi-
                 tioned from the RUNNING state to the STOPPED state.

              stoppedReason -> (string)
                 The reason that the task was stopped.

              stoppingAt -> (timestamp)
                 The  Unix  timestamp  for  the time when the task stops. More
                 specifically, it's for the time  when  the  task  transitions
                 from the RUNNING state to STOPPING .

              tags -> (list)
                 The  metadata  that you apply to the task to help you catego-
                 rize and organize the task. Each tag consists of a key and an
                 optional value. You define both the key and value.

                 The following basic restrictions apply to tags:

                 o Maximum number of tags per resource - 50

                 o For  each  resource,  each tag key must be unique, and each
                   tag key can have only one value.

                 o Maximum key length - 128 Unicode characters in UTF-8

                 o Maximum value length - 256 Unicode characters in UTF-8

                 o If your tagging schema is used across multiple services and
                   resources,  remember  that other services may have restric-
                   tions on allowed characters. Generally  allowed  characters
                   are:  letters,  numbers, and spaces representable in UTF-8,
                   and the following characters: + - = . _ : / @.

                 o Tag keys and values are case-sensitive.

                 o Do not use aws: , AWS: , or any upper or lowercase combina-
                   tion of such as a prefix for either keys or values as it is
                   reserved for Amazon Web Services use. You  cannot  edit  or
                   delete  tag keys or values with this prefix. Tags with this
                   prefix do not count against your tags per resource limit.

                 (structure)
                     The metadata that you apply to a  resource  to  help  you
                     categorize  and organize them. Each tag consists of a key
                     and an optional value. You define them.

                     The following basic restrictions apply to tags:

                     o Maximum number of tags per resource - 50

                     o For each resource, each tag key  must  be  unique,  and
                       each tag key can have only one value.

                     o Maximum key length - 128 Unicode characters in UTF-8

                     o Maximum value length - 256 Unicode characters in UTF-8

                     o If your tagging schema is used across multiple services
                       and resources, remember that other  services  may  have
                       restrictions  on  allowed characters. Generally allowed
                       characters are: letters,  numbers,  and  spaces  repre-
                       sentable  in UTF-8, and the following characters: + - =
                       . _ : / @.

                     o Tag keys and values are case-sensitive.

                     o Do not use aws: , AWS: , or any upper or lowercase com-
                       bination  of such as a prefix for either keys or values
                       as it is reserved for Amazon Web Services use. You can-
                       not edit or delete tag keys or values with this prefix.
                       Tags with this prefix do not count  against  your  tags
                       per resource limit.

                     key -> (string)
                        One part of a key-value pair that make up a tag. A key
                        is a general label that acts like a category for  more
                        specific tag values.

                     value -> (string)
                        The  optional  part of a key-value pair that make up a
                        tag. A value acts as a descriptor within a  tag  cate-
                        gory (key).

              taskArn -> (string)
                 The Amazon Resource Name (ARN) of the task.

              taskDefinitionArn -> (string)
                 The ARN of the task definition that creates the task.

              version -> (long)
                 The  version  counter for the task. Every time a task experi-
                 ences a change that starts a CloudWatch  event,  the  version
                 counter is incremented. If you replicate your Amazon ECS task
                 state with CloudWatch Events, you can compare the version  of
                 a  task  reported by the Amazon ECS API actions with the ver-
                 sion reported in CloudWatch Events for the task  (inside  the
                 detail  object)  to  verify  that  the  version in your event
                 stream is current.

              ephemeralStorage -> (structure)
                 The ephemeral storage settings for the task.

                 sizeInGiB -> (integer)
                     The total amount, in GiB, of ephemeral storage to set for
                     the  task.  The minimum supported value is 21 GiB and the
                     maximum supported value is 200 GiB.

       failures -> (list)
          Any failures associated with the call.

          For information about how to address  failures,  see  Service  event
          messages  and  API  failure  reasons in the Amazon Elastic Container
          Service Developer Guide .

          (structure)
              A failed resource. For a list of common causes, see API  failure
              reasons  in the Amazon Elastic Container Service Developer Guide
              .

              arn -> (string)
                 The Amazon Resource Name (ARN) of the failed resource.

              reason -> (string)
                 The reason for the failure.

              detail -> (string)
                 The details of the failure.



                                                                    RUN-TASK()
