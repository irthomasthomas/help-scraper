UPDATE-CAPACITY-PROVIDER()                          UPDATE-CAPACITY-PROVIDER()



NAME
       update-capacity-provider -

DESCRIPTION
       Modifies the parameters for a capacity provider.

       See also: AWS API Documentation

SYNOPSIS
            update-capacity-provider
          --name <value>
          --auto-scaling-group-provider <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --name (string)
          The name of the capacity provider to update.

       --auto-scaling-group-provider (structure)
          An object that represent the parameters to update for the Auto Scal-
          ing group capacity provider.

          managedScaling -> (structure)
              The managed scaling settings for the Auto Scaling group capacity
              provider.

              status -> (string)
                 Determines  whether  to  use managed scaling for the capacity
                 provider.

              targetCapacity -> (integer)
                 The target capacity utilization as a percentage for  the  ca-
                 pacity  provider.  The specified value must be greater than 0
                 and less than or equal to 100 . For example, if you want  the
                 capacity  provider  to maintain 10% spare capacity, then that
                 means the utilization is 90%, so use a targetCapacity of 90 .
                 The  default  value  of 100 percent results in the Amazon EC2
                 instances in your Auto Scaling group being completely used.

              minimumScalingStepSize -> (integer)
                 The minimum number of Amazon EC2 instances  that  Amazon  ECS
                 will  scale  out at one time. The scale in process is not af-
                 fected by this parameter If this parameter  is  omitted,  the
                 default value of 1 is used.

                 When  additional  capacity is required, Amazon ECS will scale
                 up the minimum scaling step size even if the actual demand is
                 less than the minimum scaling step size.

                 If  you  use  a  capacity provider with an Auto Scaling group
                 configured with more than one Amazon  EC2  instance  type  or
                 Availability Zone, Amazon ECS will scale up by the exact min-
                 imum scaling step size value and will ignore both the maximum
                 scaling step size as well as the capacity demand.

              maximumScalingStepSize -> (integer)
                 The  maximum  number  of Amazon EC2 instances that Amazon ECS
                 will scale out at one time. The scale in process is  not  af-
                 fected  by  this parameter. If this parameter is omitted, the
                 default value of 10000 is used.

              instanceWarmupPeriod -> (integer)
                 The period of time, in seconds, after a newly launched Amazon
                 EC2  instance  can  contribute to CloudWatch metrics for Auto
                 Scaling group. If this  parameter  is  omitted,  the  default
                 value of 300 seconds is used.

          managedTerminationProtection -> (string)
              The  managed  termination protection setting to use for the Auto
              Scaling group capacity provider.  This  determines  whether  the
              Auto Scaling group has managed termination protection.

              WARNING:
                 When  using  managed  termination protection, managed scaling
                 must also be used otherwise  managed  termination  protection
                 doesn't work.

              When  managed  termination protection is on, Amazon ECS prevents
              the Amazon EC2 instances in an Auto Scaling group  that  contain
              tasks  from  being terminated during a scale-in action. The Auto
              Scaling group and each instance in the Auto Scaling  group  must
              have  instance protection from scale-in actions on. For more in-
              formation, see Instance Protection  in  the  Auto  Scaling  User
              Guide .

              When  managed termination protection is off, your Amazon EC2 in-
              stances aren't protected from termination when the Auto  Scaling
              group scales in.

          managedDraining -> (string)
              The  managed draining option for the Auto Scaling group capacity
              provider. When you enable this, Amazon ECS  manages  and  grace-
              fully  drains  the  EC2 container instances that are in the Auto
              Scaling group capacity provider.

              The default is ENABLED .

       Shorthand Syntax:

          managedScaling={status=string,targetCapacity=integer,minimumScalingStepSize=integer,maximumScalingStepSize=integer,instanceWarmupPeriod=integer},managedTerminationProtection=string,managedDraining=string

       JSON Syntax:

          {
            "managedScaling": {
              "status": "ENABLED"|"DISABLED",
              "targetCapacity": integer,
              "minimumScalingStepSize": integer,
              "maximumScalingStepSize": integer,
              "instanceWarmupPeriod": integer
            },
            "managedTerminationProtection": "ENABLED"|"DISABLED",
            "managedDraining": "ENABLED"|"DISABLED"
          }

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       capacityProvider -> (structure)
          Details about the capacity provider.

          capacityProviderArn -> (string)
              The  Amazon  Resource  Name  (ARN)  that identifies the capacity
              provider.

          name -> (string)
              The name of the capacity provider.

          status -> (string)
              The current status  of  the  capacity  provider.  Only  capacity
              providers  in  an  ACTIVE state can be used in a cluster. When a
              capacity provider is successfully deleted, it  has  an  INACTIVE
              status.

          autoScalingGroupProvider -> (structure)
              The Auto Scaling group settings for the capacity provider.

              autoScalingGroupArn -> (string)
                 The Amazon Resource Name (ARN) that identifies the Auto Scal-
                 ing group, or the Auto Scaling group name.

              managedScaling -> (structure)
                 The managed scaling settings for the Auto Scaling  group  ca-
                 pacity provider.

                 status -> (string)
                     Determines  whether to use managed scaling for the capac-
                     ity provider.

                 targetCapacity -> (integer)
                     The target capacity utilization as a percentage  for  the
                     capacity  provider.  The  specified value must be greater
                     than 0 and less than or equal to 100 .  For  example,  if
                     you  want the capacity provider to maintain 10% spare ca-
                     pacity, then that means the utilization is 90%, so use  a
                     targetCapacity  of  90 . The default value of 100 percent
                     results in the Amazon EC2 instances in your Auto  Scaling
                     group being completely used.

                 minimumScalingStepSize -> (integer)
                     The  minimum  number  of Amazon EC2 instances that Amazon
                     ECS will scale out at one time. The scale in  process  is
                     not affected by this parameter If this parameter is omit-
                     ted, the default value of 1 is used.

                     When additional capacity is  required,  Amazon  ECS  will
                     scale up the minimum scaling step size even if the actual
                     demand is less than the minimum scaling step size.

                     If you use a capacity provider with an Auto Scaling group
                     configured with more than one Amazon EC2 instance type or
                     Availability Zone, Amazon ECS will scale up by the  exact
                     minimum  scaling step size value and will ignore both the
                     maximum scaling step size as well as the capacity demand.

                 maximumScalingStepSize -> (integer)
                     The maximum number of Amazon EC2  instances  that  Amazon
                     ECS  will  scale out at one time. The scale in process is
                     not affected by this  parameter.  If  this  parameter  is
                     omitted, the default value of 10000 is used.

                 instanceWarmupPeriod -> (integer)
                     The  period  of  time, in seconds, after a newly launched
                     Amazon EC2 instance can contribute to CloudWatch  metrics
                     for Auto Scaling group. If this parameter is omitted, the
                     default value of 300 seconds is used.

              managedTerminationProtection -> (string)
                 The managed termination protection setting  to  use  for  the
                 Auto Scaling group capacity provider. This determines whether
                 the Auto Scaling group has  managed  termination  protection.
                 The default is off.

                 WARNING:
                     When  using managed termination protection, managed scal-
                     ing must also be used otherwise managed termination  pro-
                     tection doesn't work.

                 When  managed  termination  protection is on, Amazon ECS pre-
                 vents the Amazon EC2 instances in an Auto Scaling group  that
                 contain tasks from being terminated during a scale-in action.
                 The Auto Scaling group and each instance in the Auto  Scaling
                 group  must have instance protection from scale-in actions on
                 as well. For more information, see Instance Protection in the
                 Auto Scaling User Guide .

                 When  managed  termination protection is off, your Amazon EC2
                 instances aren't protected from  termination  when  the  Auto
                 Scaling group scales in.

              managedDraining -> (string)
                 The managed draining option for the Auto Scaling group capac-
                 ity provider. When you enable this, Amazon  ECS  manages  and
                 gracefully drains the EC2 container instances that are in the
                 Auto Scaling group capacity provider.

                 The default is ENABLED .

          updateStatus -> (string)
              The update status of the capacity provider.  The  following  are
              the possible states that is returned.
                 DELETE_IN_PROGRESS

              The capacity provider is in the process of being deleted.
                 DELETE_COMPLETE

              The  capacity provider was successfully deleted and has an INAC-
              TIVE status.
                 DELETE_FAILED

              The capacity provider can't be deleted. The update status reason
              provides further details about why the delete failed.

          updateStatusReason -> (string)
              The  update  status  reason. This provides further details about
              the update status for the capacity provider.

          tags -> (list)
              The metadata that you apply to the capacity provider to help you
              categorize  and  organize  it. Each tag consists of a key and an
              optional value. You define both.

              The following basic restrictions apply to tags:

              o Maximum number of tags per resource - 50

              o For each resource, each tag key must be unique, and  each  tag
                key can have only one value.

              o Maximum key length - 128 Unicode characters in UTF-8

              o Maximum value length - 256 Unicode characters in UTF-8

              o If  your  tagging  schema is used across multiple services and
                resources, remember that other services may have  restrictions
                on  allowed characters. Generally allowed characters are: let-
                ters, numbers, and spaces representable in UTF-8, and the fol-
                lowing characters: + - = . _ : / @.

              o Tag keys and values are case-sensitive.

              o Do not use aws: , AWS: , or any upper or lowercase combination
                of such as a prefix for either keys or values  as  it  is  re-
                served  for Amazon Web Services use. You cannot edit or delete
                tag keys or values with this prefix. Tags with this prefix  do
                not count against your tags per resource limit.

              (structure)
                 The metadata that you apply to a resource to help you catego-
                 rize and organize them. Each tag consists of a key and an op-
                 tional value. You define them.

                 The following basic restrictions apply to tags:

                 o Maximum number of tags per resource - 50

                 o For  each  resource,  each tag key must be unique, and each
                   tag key can have only one value.

                 o Maximum key length - 128 Unicode characters in UTF-8

                 o Maximum value length - 256 Unicode characters in UTF-8

                 o If your tagging schema is used across multiple services and
                   resources,  remember  that other services may have restric-
                   tions on allowed characters. Generally  allowed  characters
                   are:  letters,  numbers, and spaces representable in UTF-8,
                   and the following characters: + - = . _ : / @.

                 o Tag keys and values are case-sensitive.

                 o Do not use aws: , AWS: , or any upper or lowercase combina-
                   tion of such as a prefix for either keys or values as it is
                   reserved for Amazon Web Services use. You  cannot  edit  or
                   delete  tag keys or values with this prefix. Tags with this
                   prefix do not count against your tags per resource limit.

                 key -> (string)
                     One part of a key-value pair that make up a tag. A key is
                     a  general  label that acts like a category for more spe-
                     cific tag values.

                 value -> (string)
                     The optional part of a key-value pair that make up a tag.
                     A value acts as a descriptor within a tag category (key).



                                                    UPDATE-CAPACITY-PROVIDER()
