SUBMIT-TASK-STATE-CHANGE()                          SUBMIT-TASK-STATE-CHANGE()



NAME
       submit-task-state-change -

DESCRIPTION
       NOTE:
          This  action is only used by the Amazon ECS agent, and it is not in-
          tended for use outside of the agent.

       Sent to acknowledge that a task changed states.

       See also: AWS API Documentation

SYNOPSIS
            submit-task-state-change
          [--cluster <value>]
          [--task <value>]
          [--status <value>]
          [--reason <value>]
          [--containers <value>]
          [--attachments <value>]
          [--managed-agents <value>]
          [--pull-started-at <value>]
          [--pull-stopped-at <value>]
          [--execution-stopped-at <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --cluster (string)
          The short name or full Amazon Resource Name  (ARN)  of  the  cluster
          that hosts the task.

       --task (string)
          The task ID or full ARN of the task in the state change request.

       --status (string)
          The status of the state change request.

       --reason (string)
          The reason for the state change request.

       --containers (list)
          Any containers that's associated with the state change request.

          (structure)
              An object that represents a change in state for a container.

              containerName -> (string)
                 The name of the container.

              imageDigest -> (string)
                 The container image SHA 256 digest.

              runtimeId -> (string)
                 The ID of the Docker container.

              exitCode -> (integer)
                 The exit code for the container, if the state change is a re-
                 sult of the container exiting.

              networkBindings -> (list)
                 Any network bindings that are associated with the container.

                 (structure)
                     Details on the network bindings between a  container  and
                     its  host  container  instance.  After a task reaches the
                     RUNNING status, manual and automatic host  and  container
                     port  assignments are visible in the networkBindings sec-
                     tion of DescribeTasks API responses.

                     bindIP -> (string)
                        The IP address that the container is bound to  on  the
                        container instance.

                     containerPort -> (integer)
                        The  port number on the container that's used with the
                        network binding.

                     hostPort -> (integer)
                        The port number on the host that's used with the  net-
                        work binding.

                     protocol -> (string)
                        The protocol used for the network binding.

                     containerPortRange -> (string)
                        The port number range on the container that's bound to
                        the dynamically mapped host port range.

                        The following rules apply when you specify a  contain-
                        erPortRange :

                        o You  must  use either the bridge network mode or the
                          awsvpc network mode.

                        o This parameter is available for  both  the  EC2  and
                          Fargate launch types.

                        o This  parameter  is available for both the Linux and
                          Windows operating systems.

                        o The container instance must have  at  least  version
                          1.67.0  of  the container agent and at least version
                          1.67.0-1 of the ecs-init package

                        o You can specify a maximum of  100  port  ranges  per
                          container.

                        o You  do  not  specify a hostPortRange . The value of
                          the hostPortRange is set as follows:

                          o For containers in a task with the  awsvpc  network
                            mode,  the  hostPortRange is set to the same value
                            as the containerPortRange . This is a static  map-
                            ping strategy.

                          o For  containers  in a task with the bridge network
                            mode, the Amazon ECS agent finds open  host  ports
                            from  the default ephemeral range and passes it to
                            docker to bind them to the container ports.

                        o The containerPortRange valid values  are  between  1
                          and 65535.

                        o A  port can only be included in one port mapping per
                          container.

                        o You cannot specify overlapping port ranges.

                        o The first port in the range must be less  than  last
                          port in the range.

                        o Docker recommends that you turn off the docker-proxy
                          in the Docker daemon config file  when  you  have  a
                          large  number  of  ports.  For more information, see
                          Issue #11185 on the Github website. For  information
                          about how to turn off the docker-proxy in the Docker
                          daemon config file, see Docker daemon in the  Amazon
                          ECS Developer Guide .

                        You        can        call       `       DescribeTasks
                        https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTasks.html`__
                        to  view  the  hostPortRange  which are the host ports
                        that are bound to the container ports.

                     hostPortRange -> (string)
                        The port number range on the host that's used with the
                        network  binding.  This  is  assigned  is  assigned by
                        Docker and delivered by the Amazon ECS agent.

              reason -> (string)
                 The reason for the state change.

              status -> (string)
                 The status of the container.

       Shorthand Syntax:

          containerName=string,imageDigest=string,runtimeId=string,exitCode=integer,networkBindings=[{bindIP=string,containerPort=integer,hostPort=integer,protocol=string,containerPortRange=string,hostPortRange=string},{bindIP=string,containerPort=integer,hostPort=integer,protocol=string,containerPortRange=string,hostPortRange=string}],reason=string,status=string ...

       JSON Syntax:

          [
            {
              "containerName": "string",
              "imageDigest": "string",
              "runtimeId": "string",
              "exitCode": integer,
              "networkBindings": [
                {
                  "bindIP": "string",
                  "containerPort": integer,
                  "hostPort": integer,
                  "protocol": "tcp"|"udp",
                  "containerPortRange": "string",
                  "hostPortRange": "string"
                }
                ...
              ],
              "reason": "string",
              "status": "string"
            }
            ...
          ]

       --attachments (list)
          Any attachments associated with the state change request.

          (structure)
              An object representing a change in state for a task attachment.

              attachmentArn -> (string)
                 The Amazon Resource Name (ARN) of the attachment.

              status -> (string)
                 The status of the attachment.

       Shorthand Syntax:

          attachmentArn=string,status=string ...

       JSON Syntax:

          [
            {
              "attachmentArn": "string",
              "status": "string"
            }
            ...
          ]

       --managed-agents (list)
          The details for the managed agent that's associated with the task.

          (structure)
              An object representing a change in state for a managed agent.

              containerName -> (string)
                 The name of the container that's associated with the  managed
                 agent.

              managedAgentName -> (string)
                 The name of the managed agent.

              status -> (string)
                 The status of the managed agent.

              reason -> (string)
                 The reason for the status of the managed agent.

       Shorthand Syntax:

          containerName=string,managedAgentName=string,status=string,reason=string ...

       JSON Syntax:

          [
            {
              "containerName": "string",
              "managedAgentName": "ExecuteCommandAgent",
              "status": "string",
              "reason": "string"
            }
            ...
          ]

       --pull-started-at (timestamp)
          The  Unix  timestamp  for  the  time  when  the container image pull
          started.

       --pull-stopped-at (timestamp)
          The Unix timestamp for the time when the container image  pull  com-
          pleted.

       --execution-stopped-at (timestamp)
          The Unix timestamp for the time when the task execution stopped.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       acknowledgment -> (string)
          Acknowledgement of the state change.



                                                    SUBMIT-TASK-STATE-CHANGE()
