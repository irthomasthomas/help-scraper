CREATE-KEY-PAIR()                                            CREATE-KEY-PAIR()



NAME
       create-key-pair -

DESCRIPTION
       Creates an ED25519 or 2048-bit RSA key pair with the specified name and
       in the specified PEM or PPK format. Amazon EC2 stores  the  public  key
       and displays the private key for you to save to a file. The private key
       is returned as an unencrypted PEM encoded PKCS#1 private key or an  un-
       encrypted  PPK  formatted private key for use with PuTTY. If a key with
       the specified name already exists, Amazon EC2 returns an error.

       The key pair returned to you is available only in the Amazon  Web  Ser-
       vices Region in which you create it. If you prefer, you can create your
       own key pair using a third-party tool and upload it to any Region using
       ImportKeyPair .

       You can have up to 5,000 key pairs per Amazon Web Services Region.

       For  more  information,  see Amazon EC2 key pairs in the Amazon Elastic
       Compute Cloud User Guide .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-key-pair
          --key-name <value>
          [--dry-run | --no-dry-run]
          [--key-type <value>]
          [--tag-specifications <value>]
          [--key-format <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --key-name (string)
          A unique name for the key pair.

          Constraints: Up to 255 ASCII characters

       --dry-run | --no-dry-run (boolean)
          Checks whether you have the required  permissions  for  the  action,
          without actually making the request, and provides an error response.
          If you have the required permissions, the error response is  DryRun-
          Operation . Otherwise, it is UnauthorizedOperation .

       --key-type (string)
          The  type  of key pair. Note that ED25519 keys are not supported for
          Windows instances.

          Default: rsa

          Possible values:

          o rsa

          o ed25519

       --tag-specifications (list)
          The tags to apply to the new key pair.

          (structure)
              The tags to apply to a resource when the resource is being  cre-
              ated.

              NOTE:
                 The  Valid  Values  lists  all the resource types that can be
                 tagged. However, the action you're using  might  not  support
                 tagging  all of these resource types. If you try to tag a re-
                 source type that is unsupported for the action you're  using,
                 you'll get an error.

              ResourceType -> (string)
                 The type of resource to tag on creation.

              Tags -> (list)
                 The tags to apply to the resource.

                 (structure)
                     Describes a tag.

                     Key -> (string)
                        The key of the tag.

                        Constraints:  Tag keys are case-sensitive and accept a
                        maximum of 127 Unicode characters. May not begin  with
                        aws: .

                     Value -> (string)
                        The value of the tag.

                        Constraints:  Tag values are case-sensitive and accept
                        a maximum of 256 Unicode characters.

       Shorthand Syntax:

          ResourceType=string,Tags=[{Key=string,Value=string},{Key=string,Value=string}] ...

       JSON Syntax:

          [
            {
              "ResourceType": "capacity-reservation"|"client-vpn-endpoint"|"customer-gateway"|"carrier-gateway"|"dedicated-host"|"dhcp-options"|"egress-only-internet-gateway"|"elastic-ip"|"elastic-gpu"|"export-image-task"|"export-instance-task"|"fleet"|"fpga-image"|"host-reservation"|"image"|"import-image-task"|"import-snapshot-task"|"instance"|"instance-event-window"|"internet-gateway"|"ipam"|"ipam-pool"|"ipam-scope"|"ipv4pool-ec2"|"ipv6pool-ec2"|"key-pair"|"launch-template"|"local-gateway"|"local-gateway-route-table"|"local-gateway-virtual-interface"|"local-gateway-virtual-interface-group"|"local-gateway-route-table-vpc-association"|"local-gateway-route-table-virtual-interface-group-association"|"natgateway"|"network-acl"|"network-interface"|"network-insights-analysis"|"network-insights-path"|"network-insights-access-scope"|"network-insights-access-scope-analysis"|"placement-group"|"prefix-list"|"replace-root-volume-task"|"reserved-instances"|"route-table"|"security-group"|"security-group-rule"|"snapshot"|"spot-fleet-request"|"spot-instances-request"|"subnet"|"subnet-cidr-reservation"|"traffic-mirror-filter"|"traffic-mirror-session"|"traffic-mirror-target"|"transit-gateway"|"transit-gateway-attachment"|"transit-gateway-connect-peer"|"transit-gateway-multicast-domain"|"transit-gateway-policy-table"|"transit-gateway-route-table"|"transit-gateway-route-table-announcement"|"volume"|"vpc"|"vpc-endpoint"|"vpc-endpoint-service"|"vpc-peering-connection"|"vpn-connection"|"vpn-gateway"|"vpc-flow-log",
              "Tags": [
                {
                  "Key": "string",
                  "Value": "string"
                }
                ...
              ]
            }
            ...
          ]

       --key-format (string)
          The format of the key pair.

          Default: pem

          Possible values:

          o pem

          o ppk

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a key pair

       This example creates a key pair named MyKeyPair.

       Command:

          aws ec2 create-key-pair --key-name MyKeyPair

       The output is an ASCII version of the private key and key  fingerprint.
       You need to save the key to a file.

       For  more  information, see Using Key Pairs in the AWS Command Line In-
       terface User Guide.

OUTPUT
       KeyFingerprint -> (string)

          o For RSA key pairs, the key fingerprint is the SHA-1 digest of  the
            DER encoded private key.

          o For  ED25519  key pairs, the key fingerprint is the base64-encoded
            SHA-256 digest, which is the default for  OpenSSH,  starting  with
            OpenSSH 6.8.

       KeyMaterial -> (string)
          An unencrypted PEM encoded RSA or ED25519 private key.

       KeyName -> (string)
          The name of the key pair.

       KeyPairId -> (string)
          The ID of the key pair.

       Tags -> (list)
          Any tags applied to the key pair.

          (structure)
              Describes a tag.

              Key -> (string)
                 The key of the tag.

                 Constraints: Tag keys are case-sensitive and accept a maximum
                 of 127 Unicode characters. May not begin with aws: .

              Value -> (string)
                 The value of the tag.

                 Constraints: Tag values are case-sensitive and accept a maxi-
                 mum of 256 Unicode characters.



                                                             CREATE-KEY-PAIR()
