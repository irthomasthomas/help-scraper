CREATE-CAPACITY-RESERVATION()                    CREATE-CAPACITY-RESERVATION()



NAME
       create-capacity-reservation -

DESCRIPTION
       Creates  a  new Capacity Reservation with the specified attributes. Ca-
       pacity Reservations enable you to reserve capacity for your Amazon  EC2
       instances in a specific Availability Zone for any duration.

       You  can  create a Capacity Reservation at any time, and you can choose
       when it starts. You can create a Capacity Reservation for immediate use
       or you can request a Capacity Reservation for a future date.

       For  more  information, see Reserve compute capacity with On-Demand Ca-
       pacity Reservations in the Amazon EC2 User Guide .

       Your request to create a Capacity Reservation could fail if:

       o Amazon EC2 does not have sufficient capacity. In this case, try again
         at  a  later time, try in a different Availability Zone, or request a
         smaller Capacity Reservation. If your workload is flexible across in-
         stance types and sizes, try with different instance attributes.

       o The requested quantity exceeds your On-Demand Instance quota. In this
         case, increase your On-Demand Instance quota for  the  requested  in-
         stance  type and try again. For more information, see Amazon EC2 Ser-
         vice Quotas in the Amazon EC2 User Guide .

       See also: AWS API Documentation

SYNOPSIS
            create-capacity-reservation
          [--client-token <value>]
          --instance-type <value>
          --instance-platform <value>
          [--availability-zone <value>]
          [--availability-zone-id <value>]
          [--tenancy <value>]
          --instance-count <value>
          [--ebs-optimized | --no-ebs-optimized]
          [--ephemeral-storage | --no-ephemeral-storage]
          [--end-date <value>]
          [--end-date-type <value>]
          [--instance-match-criteria <value>]
          [--tag-specifications <value>]
          [--dry-run | --no-dry-run]
          [--outpost-arn <value>]
          [--placement-group-arn <value>]
          [--start-date <value>]
          [--commitment-duration <value>]
          [--delivery-preference <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --client-token (string)
          Unique, case-sensitive identifier that you  provide  to  ensure  the
          idempotency of the request. For more information, see Ensure Idempo-
          tency .

       --instance-type (string)
          The instance type for which to reserve capacity.

          NOTE:
              You can request future-dated Capacity Reservations for  instance
              types in the C, M, R, I, and T instance families only.

          For  more  information,  see  Instance  types in the Amazon EC2 User
          Guide .

       --instance-platform (string)
          The type of operating system for which to reserve capacity.

          Possible values:

          o Linux/UNIX

          o Red Hat Enterprise Linux

          o SUSE Linux

          o Windows

          o Windows with SQL Server

          o Windows with SQL Server Enterprise

          o Windows with SQL Server Standard

          o Windows with SQL Server Web

          o Linux with SQL Server Standard

          o Linux with SQL Server Web

          o Linux with SQL Server Enterprise

          o RHEL with SQL Server Standard

          o RHEL with SQL Server Enterprise

          o RHEL with SQL Server Web

          o RHEL with HA

          o RHEL with HA and SQL Server Standard

          o RHEL with HA and SQL Server Enterprise

          o Ubuntu Pro

       --availability-zone (string)
          The Availability Zone in which to create the Capacity Reservation.

       --availability-zone-id (string)
          The ID of the Availability Zone in  which  to  create  the  Capacity
          Reservation.

       --tenancy (string)
          Indicates the tenancy of the Capacity Reservation. A Capacity Reser-
          vation can have one of the following tenancy settings:

          o default - The Capacity Reservation is created on hardware that  is
            shared with other Amazon Web Services accounts.

          o dedicated  -  The Capacity Reservation is created on single-tenant
            hardware that is dedicated to a single  Amazon  Web  Services  ac-
            count.

          Possible values:

          o default

          o dedicated

       --instance-count (integer)
          The number of instances for which to reserve capacity.

          NOTE:
              You  can  request  future-dated Capacity Reservations for an in-
              stance count with a minimum of 100 VPUs. For example, if you re-
              quest  a  future-dated  Capacity  Reservation  for m5.xlarge in-
              stances, you must request at least 25 instances (25 *  m5.xlarge
              = 100 vCPUs ).

          Valid range: 1 - 1000

       --ebs-optimized | --no-ebs-optimized (boolean)
          Indicates  whether  the  Capacity Reservation supports EBS-optimized
          instances. This optimization provides dedicated throughput to Amazon
          EBS and an optimized configuration stack to provide optimal I/O per-
          formance. This optimization isn't available with all instance types.
          Additional  usage  charges  apply  when  using an EBS- optimized in-
          stance.

       --ephemeral-storage | --no-ephemeral-storage (boolean)
          Deprecated.

       --end-date (timestamp)
          The date and time at which the Capacity Reservation expires. When  a
          Capacity  Reservation expires, the reserved capacity is released and
          you can no longer launch instances into it.  The  Capacity  Reserva-
          tion's  state  changes  to  expired when it reaches its end date and
          time.

          You must provide an EndDate value if EndDateType is limited  .  Omit
          EndDate if EndDateType is unlimited .

          If  the  EndDateType  is  limited , the Capacity Reservation is can-
          celled within an hour from the specified time. For example,  if  you
          specify  5/31/2019, 13:30:55, the Capacity Reservation is guaranteed
          to end between 13:30:55 and 14:30:55 on 5/31/2019.

          If you are requesting a future-dated Capacity Reservation, you can't
          specify an end date and time that is within the commitment duration.

       --end-date-type (string)
          Indicates the way in which the Capacity Reservation ends. A Capacity
          Reservation can have one of the following end types:

          o unlimited - The Capacity Reservation remains active until you  ex-
            plicitly  cancel  it. Do not provide an EndDate if the EndDateType
            is unlimited .

          o limited - The Capacity  Reservation  expires  automatically  at  a
            specified  date and time. You must provide an EndDate value if the
            EndDateType value is limited .

          Possible values:

          o unlimited

          o limited

       --instance-match-criteria (string)
          Indicates the type of instance launches that the  Capacity  Reserva-
          tion accepts. The options include:

          o open  -  The  Capacity  Reservation  automatically matches all in-
            stances that have matching attributes  (instance  type,  platform,
            and  Availability  Zone).  Instances that have matching attributes
            run in the Capacity Reservation automatically  without  specifying
            any additional parameters.

          o targeted  -  The  Capacity Reservation only accepts instances that
            have matching attributes (instance type, platform, and  Availabil-
            ity  Zone),  and  explicitly target the Capacity Reservation. This
            ensures that only permitted instances can use the reserved  capac-
            ity.

          NOTE:
              If  you  are requesting a future-dated Capacity Reservation, you
              must specify targeted .

          Default: open

          Possible values:

          o open

          o targeted

       --tag-specifications (list)
          The tags to apply to the Capacity Reservation during launch.

          (structure)
              The tags to apply to a resource when the resource is being  cre-
              ated. When you specify a tag, you must specify the resource type
              to tag, otherwise the request will fail.

              NOTE:
                 The Valid Values lists all the resource  types  that  can  be
                 tagged.  However,  the  action you're using might not support
                 tagging all of these resource types. If you try to tag a  re-
                 source  type that is unsupported for the action you're using,
                 you'll get an error.

              ResourceType -> (string)
                 The type of resource to tag on creation.

              Tags -> (list)
                 The tags to apply to the resource.

                 (structure)
                     Describes a tag.

                     Key -> (string)
                        The key of the tag.

                        Constraints: Tag keys are case-sensitive and accept  a
                        maximum  of 127 Unicode characters. May not begin with
                        aws: .

                     Value -> (string)
                        The value of the tag.

                        Constraints: Tag values are case-sensitive and  accept
                        a maximum of 256 Unicode characters.

       Shorthand Syntax:

          ResourceType=string,Tags=[{Key=string,Value=string},{Key=string,Value=string}] ...

       JSON Syntax:

          [
            {
              "ResourceType": "capacity-reservation"|"client-vpn-endpoint"|"customer-gateway"|"carrier-gateway"|"coip-pool"|"dedicated-host"|"dhcp-options"|"egress-only-internet-gateway"|"elastic-ip"|"elastic-gpu"|"export-image-task"|"export-instance-task"|"fleet"|"fpga-image"|"host-reservation"|"image"|"import-image-task"|"import-snapshot-task"|"instance"|"instance-event-window"|"internet-gateway"|"ipam"|"ipam-pool"|"ipam-scope"|"ipv4pool-ec2"|"ipv6pool-ec2"|"key-pair"|"launch-template"|"local-gateway"|"local-gateway-route-table"|"local-gateway-virtual-interface"|"local-gateway-virtual-interface-group"|"local-gateway-route-table-vpc-association"|"local-gateway-route-table-virtual-interface-group-association"|"natgateway"|"network-acl"|"network-interface"|"network-insights-analysis"|"network-insights-path"|"network-insights-access-scope"|"network-insights-access-scope-analysis"|"placement-group"|"prefix-list"|"replace-root-volume-task"|"reserved-instances"|"route-table"|"security-group"|"security-group-rule"|"snapshot"|"spot-fleet-request"|"spot-instances-request"|"subnet"|"subnet-cidr-reservation"|"traffic-mirror-filter"|"traffic-mirror-session"|"traffic-mirror-target"|"transit-gateway"|"transit-gateway-attachment"|"transit-gateway-connect-peer"|"transit-gateway-multicast-domain"|"transit-gateway-policy-table"|"transit-gateway-route-table"|"transit-gateway-route-table-announcement"|"volume"|"vpc"|"vpc-endpoint"|"vpc-endpoint-connection"|"vpc-endpoint-service"|"vpc-endpoint-service-permission"|"vpc-peering-connection"|"vpn-connection"|"vpn-gateway"|"vpc-flow-log"|"capacity-reservation-fleet"|"traffic-mirror-filter-rule"|"vpc-endpoint-connection-device-type"|"verified-access-instance"|"verified-access-group"|"verified-access-endpoint"|"verified-access-policy"|"verified-access-trust-provider"|"vpn-connection-device-type"|"vpc-block-public-access-exclusion"|"ipam-resource-discovery"|"ipam-resource-discovery-association"|"instance-connect-endpoint"|"ipam-external-resource-verification-token",
              "Tags": [
                {
                  "Key": "string",
                  "Value": "string"
                }
                ...
              ]
            }
            ...
          ]

       --dry-run | --no-dry-run (boolean)
          Checks  whether  you  have  the required permissions for the action,
          without actually making the request, and provides an error response.
          If  you have the required permissions, the error response is DryRun-
          Operation . Otherwise, it is UnauthorizedOperation .

       --outpost-arn (string)

          NOTE:
              Not supported for future-dated Capacity Reservations.

          The Amazon Resource Name (ARN) of the Outpost on which to create the
          Capacity Reservation.

       --placement-group-arn (string)

          NOTE:
              Not supported for future-dated Capacity Reservations.

          The  Amazon  Resource  Name  (ARN) of the cluster placement group in
          which to create the Capacity Reservation. For more information,  see
          Capacity Reservations for cluster placement groups in the Amazon EC2
          User Guide .

       --start-date (timestamp)

          NOTE:
              Required for future-dated Capacity Reservations only. To  create
              a Capacity Reservation for immediate use, omit this parameter.

          The  date  and  time  at which the future-dated Capacity Reservation
          should become available for use, in the ISO8601 format  in  the  UTC
          time zone (YYYY-MM-DDThh:mm:ss.sssZ ).

          You  can  request  a future-dated Capacity Reservation between 5 and
          120 days in advance.

       --commitment-duration (long)

          NOTE:
              Required for future-dated Capacity Reservations only. To  create
              a Capacity Reservation for immediate use, omit this parameter.

          Specify  a commitment duration, in seconds, for the future-dated Ca-
          pacity Reservation.

          The commitment duration is a minimum duration for which  you  commit
          to  having the future-dated Capacity Reservation in the active state
          in your account after it has been delivered.

          For more information, see Commitment duration .

       --delivery-preference (string)

          NOTE:
              Required for future-dated Capacity Reservations only. To  create
              a Capacity Reservation for immediate use, omit this parameter.

          Indicates  that the requested capacity will be delivered in addition
          to any running instances or reserved capacity that you have in  your
          account at the requested date and time.

          The only supported value is incremental .

          Possible values:

          o fixed

          o incremental

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       Example 1: To create a Capacity Reservation

       The following create-capacity-reservation example  creates  a  capacity
       reservation  in  the  eu-west-1a  Availability Zone, into which you can
       launch three t2.medium instances running a Linux/Unix operating system.
       By  default,  the  capacity  reservation  is created with open instance
       matching criteria and no support for ephemeral storage, and it  remains
       active until you manually cancel it.

          aws ec2 create-capacity-reservation \
              --availability-zone eu-west-1a \
              --instance-type t2.medium \
              --instance-platform Linux/UNIX \
              --instance-count 3

       Output:

          {
              "CapacityReservation": {
                  "CapacityReservationId": "cr-1234abcd56EXAMPLE ",
                  "EndDateType": "unlimited",
                  "AvailabilityZone": "eu-west-1a",
                  "InstanceMatchCriteria": "open",
                  "EphemeralStorage": false,
                  "CreateDate": "2019-08-16T09:27:35.000Z",
                  "AvailableInstanceCount": 3,
                  "InstancePlatform": "Linux/UNIX",
                  "TotalInstanceCount": 3,
                  "State": "active",
                  "Tenancy": "default",
                  "EbsOptimized": false,
                  "InstanceType": "t2.medium"
              }
          }

       Example  2: To create a Capacity Reservation that automatically ends at
       a specified date/time

       The following create-capacity-reservation example  creates  a  capacity
       reservation  in  the  eu-west-1a  Availability Zone, into which you can
       launch three m5.large instances running a Linux/Unix operating  system.
       This capacity reservation automatically ends on 08/31/2019 at 23:59:59.

          aws ec2 create-capacity-reservation \
              --availability-zone eu-west-1a \
              --instance-type m5.large \
              --instance-platform Linux/UNIX \
              --instance-count 3 \
              --end-date-type limited \
              --end-date 2019-08-31T23:59:59Z

       Output:

          {
              "CapacityReservation": {
                  "CapacityReservationId": "cr-1234abcd56EXAMPLE ",
                  "EndDateType": "limited",
                  "AvailabilityZone": "eu-west-1a",
                  "EndDate": "2019-08-31T23:59:59.000Z",
                  "InstanceMatchCriteria": "open",
                  "EphemeralStorage": false,
                  "CreateDate": "2019-08-16T10:15:53.000Z",
                  "AvailableInstanceCount": 3,
                  "InstancePlatform": "Linux/UNIX",
                  "TotalInstanceCount": 3,
                  "State": "active",
                  "Tenancy": "default",
                  "EbsOptimized": false,
                  "InstanceType": "m5.large"
              }
          }

       Example  3: To create a Capacity Reservation that accepts only targeted
       instance launches

       The following create-capacity-reservation example  creates  a  capacity
       reservation that accepts only targeted instance launches.

          aws ec2 create-capacity-reservation \
              --availability-zone eu-west-1a \
              --instance-type m5.large \
              --instance-platform Linux/UNIX \
              --instance-count 3 \
              --instance-match-criteria targeted

       Output:

          {
              "CapacityReservation": {
                  "CapacityReservationId": "cr-1234abcd56EXAMPLE ",
                  "EndDateType": "unlimited",
                  "AvailabilityZone": "eu-west-1a",
                  "InstanceMatchCriteria": "targeted",
                  "EphemeralStorage": false,
                  "CreateDate": "2019-08-16T10:21:57.000Z",
                  "AvailableInstanceCount": 3,
                  "InstancePlatform": "Linux/UNIX",
                  "TotalInstanceCount": 3,
                  "State": "active",
                  "Tenancy": "default",
                  "EbsOptimized": false,
                  "InstanceType": "m5.large"
              }
          }

       For more information, see Creating a Capacity Reservation in the Amazon
       Elastic Compute Cloud User Guide for Linux Instances.

OUTPUT
       CapacityReservation -> (structure)
          Information about the Capacity Reservation.

          CapacityReservationId -> (string)
              The ID of the Capacity Reservation.

          OwnerId -> (string)
              The ID of the Amazon Web Services account that owns the Capacity
              Reservation.

          CapacityReservationArn -> (string)
              The Amazon Resource Name (ARN) of the Capacity Reservation.

          AvailabilityZoneId -> (string)
              The Availability Zone ID of the Capacity Reservation.

          InstanceType -> (string)
              The type of instance for which the Capacity Reservation reserves
              capacity.

          InstancePlatform -> (string)
              The type of operating system for which the Capacity  Reservation
              reserves capacity.

          AvailabilityZone -> (string)
              The Availability Zone in which the capacity is reserved.

          Tenancy -> (string)
              Indicates  the  tenancy  of the Capacity Reservation. A Capacity
              Reservation can have one of the following tenancy settings:

              o default - The Capacity Reservation is created on hardware that
                is shared with other Amazon Web Services accounts.

              o dedicated - The Capacity Reservation is created on single-ten-
                ant hardware that is dedicated to a single Amazon Web Services
                account.

          TotalInstanceCount -> (integer)
              The total number of instances for which the Capacity Reservation
              reserves capacity.

          AvailableInstanceCount -> (integer)
              The remaining capacity. Indicates the number of  instances  that
              can be launched in the Capacity Reservation.

          EbsOptimized -> (boolean)
              Indicates  whether  the  Capacity Reservation supports EBS-opti-
              mized instances. This optimization provides dedicated throughput
              to  Amazon  EBS  and an optimized configuration stack to provide
              optimal I/O performance. This optimization isn't available  with
              all instance types. Additional usage charges apply when using an
              EBS- optimized instance.

          EphemeralStorage -> (boolean)
              Deprecated.

          State -> (string)
              The current state of the Capacity Reservation. A Capacity Reser-
              vation can be in one of the following states:

              o active - The capacity is available for use.

              o expired  -  The  Capacity Reservation expired automatically at
                the date and time specified in your reservation  request.  The
                reserved capacity is no longer available for your use.

              o cancelled  -  The  Capacity  Reservation was canceled. The re-
                served capacity is no longer available for your use.

              o pending - The Capacity Reservation request was successful  but
                the capacity provisioning is still pending.

              o failed  -  The  Capacity Reservation request has failed. A re-
                quest can fail due to request parameters that are  not  valid,
                capacity  constraints,  or instance limit constraints. You can
                view a failed request for 60 minutes.

              o scheduled - (Future-dated Capacity Reservations only ) The fu-
                ture-dated  Capacity  Reservation request was approved and the
                Capacity Reservation is scheduled  for  delivery  on  the  re-
                quested start date.

              o assessing  - (Future-dated Capacity Reservations only ) Amazon
                EC2 is assessing your  request  for  a  future-dated  Capacity
                Reservation.

              o delayed  -  (Future-dated  Capacity Reservations only ) Amazon
                EC2 encountered a delay  in  provisioning  the  requested  fu-
                ture-dated  Capacity  Reservation. Amazon EC2 is unable to de-
                liver the requested capacity by the requested start  date  and
                time.

              o unsupported  - (Future-dated Capacity Reservations only ) Ama-
                zon EC2 can't support the  future-dated  Capacity  Reservation
                request  due to capacity constraints. You can view unsupported
                requests for 30 days. The Capacity Reservation will not be de-
                livered.

          StartDate -> (timestamp)
              The date and time at which the Capacity Reservation was started.

          EndDate -> (timestamp)
              The  date  and  time  at which the Capacity Reservation expires.
              When a Capacity Reservation expires, the  reserved  capacity  is
              released and you can no longer launch instances into it. The Ca-
              pacity Reservation's state changes to expired  when  it  reaches
              its end date and time.

          EndDateType -> (string)
              Indicates  the way in which the Capacity Reservation ends. A Ca-
              pacity Reservation can have one of the following end types:

              o unlimited - The Capacity Reservation remains active until  you
                explicitly cancel it.

              o limited  - The Capacity Reservation expires automatically at a
                specified date and time.

          InstanceMatchCriteria -> (string)
              Indicates the type of instance launches that the Capacity Reser-
              vation accepts. The options include:

              o open  -  The  Capacity  Reservation accepts all instances that
                have matching attributes (instance type, platform, and  Avail-
                ability  Zone). Instances that have matching attributes launch
                into the Capacity Reservation automatically without specifying
                any additional parameters.

              o targeted  -  The  Capacity  Reservation only accepts instances
                that have matching attributes (instance  type,  platform,  and
                Availability  Zone), and explicitly target the Capacity Reser-
                vation. This ensures that only permitted instances can use the
                reserved capacity.

          CreateDate -> (timestamp)
              The date and time at which the Capacity Reservation was created.

          Tags -> (list)
              Any tags assigned to the Capacity Reservation.

              (structure)
                 Describes a tag.

                 Key -> (string)
                     The key of the tag.

                     Constraints:  Tag  keys  are  case-sensitive and accept a
                     maximum of 127 Unicode characters.  May  not  begin  with
                     aws: .

                 Value -> (string)
                     The value of the tag.

                     Constraints:  Tag  values are case-sensitive and accept a
                     maximum of 256 Unicode characters.

          OutpostArn -> (string)
              The Amazon Resource Name (ARN) of the Outpost on which  the  Ca-
              pacity Reservation was created.

          CapacityReservationFleetId -> (string)
              The  ID  of the Capacity Reservation Fleet to which the Capacity
              Reservation belongs. Only valid for Capacity  Reservations  that
              were created by a Capacity Reservation Fleet.

          PlacementGroupArn -> (string)
              The Amazon Resource Name (ARN) of the cluster placement group in
              which the Capacity Reservation was created.  For  more  informa-
              tion,  see Capacity Reservations for cluster placement groups in
              the Amazon EC2 User Guide .

          CapacityAllocations -> (list)
              Information about instance capacity usage.

              (structure)
                 Information about instance  capacity  usage  for  a  Capacity
                 Reservation.

                 AllocationType -> (string)
                     The usage type. used indicates that the instance capacity
                     is in use by instances that are running in  the  Capacity
                     Reservation.

                 Count -> (integer)
                     The  amount  of instance capacity associated with the us-
                     age. For example a value of 4 indicates that instance ca-
                     pacity for 4 instances is currently in use.

          ReservationType -> (string)
              The type of Capacity Reservation.

          UnusedReservationBillingOwnerId -> (string)
              The  ID  of  the Amazon Web Services account to which billing of
              the unused capacity of the Capacity Reservation is assigned.

          CommitmentInfo -> (structure)
              Information about your commitment for  a  future-dated  Capacity
              Reservation.

              CommittedInstanceCount -> (integer)
                 The  instance  capacity  that  you  committed to when you re-
                 quested the future-dated Capacity Reservation.

              CommitmentEndDate -> (timestamp)
                 The date and time at which the commitment  duration  expires,
                 in    the    ISO8601    format   in   the   UTC   time   zone
                 (YYYY-MM-DDThh:mm:ss.sssZ ). You can't decrease the  instance
                 count or cancel the Capacity Reservation before this date and
                 time.

          DeliveryPreference -> (string)
              The delivery method for a future-dated Capacity Reservation. in-
              cremental  indicates that the requested capacity is delivered in
              addition to any running instances and reserved capacity that you
              have in your account at the requested date and time.



                                                 CREATE-CAPACITY-RESERVATION()
