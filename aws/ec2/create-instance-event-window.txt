CREATE-INSTANCE-EVENT-WINDOW()                  CREATE-INSTANCE-EVENT-WINDOW()



NAME
       create-instance-event-window -

DESCRIPTION
       Creates  an  event  window in which scheduled events for the associated
       Amazon EC2 instances can run.

       You can define either a set of time ranges or a  cron  expression  when
       creating  the event window, but not both. All event window times are in
       UTC.

       You can create up to 200 event windows per Amazon Web Services Region.

       When you create the event window, targets (instance IDs, Dedicated Host
       IDs,  or tags) are not yet associated with it. To ensure that the event
       window can be used, you must associate one or more targets with  it  by
       using the  AssociateInstanceEventWindow API.

       WARNING:
          Event  windows  are  applicable only for scheduled events that stop,
          reboot, or terminate instances.

          Event windows are not applicable for:

          o Expedited scheduled events and network maintenance events.

          o Unscheduled maintenance such as  AutoRecovery  and  unplanned  re-
            boots.

       For  more information, see Define event windows for scheduled events in
       the Amazon EC2 User Guide .

       See also: AWS API Documentation

SYNOPSIS
            create-instance-event-window
          [--dry-run | --no-dry-run]
          [--name <value>]
          [--time-ranges <value>]
          [--cron-expression <value>]
          [--tag-specifications <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --dry-run | --no-dry-run (boolean)
          Checks whether you have the required  permissions  for  the  action,
          without actually making the request, and provides an error response.
          If you have the required permissions, the error response is  DryRun-
          Operation . Otherwise, it is UnauthorizedOperation .

       --name (string)
          The name of the event window.

       --time-ranges (list)
          The  time  range  for the event window. If you specify a time range,
          you can't specify a cron expression.

          (structure)
              The start day and time and the end day  and  time  of  the  time
              range, in UTC.

              StartWeekDay -> (string)
                 The day on which the time range begins.

              StartHour -> (integer)
                 The hour when the time range begins.

              EndWeekDay -> (string)
                 The day on which the time range ends.

              EndHour -> (integer)
                 The hour when the time range ends.

       Shorthand Syntax:

          StartWeekDay=string,StartHour=integer,EndWeekDay=string,EndHour=integer ...

       JSON Syntax:

          [
            {
              "StartWeekDay": "sunday"|"monday"|"tuesday"|"wednesday"|"thursday"|"friday"|"saturday",
              "StartHour": integer,
              "EndWeekDay": "sunday"|"monday"|"tuesday"|"wednesday"|"thursday"|"friday"|"saturday",
              "EndHour": integer
            }
            ...
          ]

       --cron-expression (string)
          The cron expression for the event window, for example, * 0-4,20-23 *
          * 1,5 . If you specify a cron expression, you can't specify  a  time
          range.

          Constraints:

          o Only hour and day of the week values are supported.

          o For  day  of  the  week  values, you can specify either integers 0
            through 6 , or alternative single values SUN through SAT .

          o The minute, month, and year must be specified by * .

          o The hour value must be one or a multiple range, for  example,  0-4
            or 0-4,20-23 .

          o Each hour range must be >= 2 hours, for example, 0-2 or 20-23 .

          o The  event  window  must  be  >=  4 hours. The combined total time
            ranges in the event window must be >= 4 hours.

          For more  information  about  cron  expressions,  see  cron  on  the
          Wikipedia website .

       --tag-specifications (list)
          The tags to apply to the event window.

          (structure)
              The  tags to apply to a resource when the resource is being cre-
              ated.

              NOTE:
                 The Valid Values lists all the resource  types  that  can  be
                 tagged.  However,  the  action you're using might not support
                 tagging all of these resource types. If you try to tag a  re-
                 source  type that is unsupported for the action you're using,
                 you'll get an error.

              ResourceType -> (string)
                 The type of resource to tag on creation.

              Tags -> (list)
                 The tags to apply to the resource.

                 (structure)
                     Describes a tag.

                     Key -> (string)
                        The key of the tag.

                        Constraints: Tag keys are case-sensitive and accept  a
                        maximum  of 127 Unicode characters. May not begin with
                        aws: .

                     Value -> (string)
                        The value of the tag.

                        Constraints: Tag values are case-sensitive and  accept
                        a maximum of 256 Unicode characters.

       Shorthand Syntax:

          ResourceType=string,Tags=[{Key=string,Value=string},{Key=string,Value=string}] ...

       JSON Syntax:

          [
            {
              "ResourceType": "capacity-reservation"|"client-vpn-endpoint"|"customer-gateway"|"carrier-gateway"|"coip-pool"|"dedicated-host"|"dhcp-options"|"egress-only-internet-gateway"|"elastic-ip"|"elastic-gpu"|"export-image-task"|"export-instance-task"|"fleet"|"fpga-image"|"host-reservation"|"image"|"import-image-task"|"import-snapshot-task"|"instance"|"instance-event-window"|"internet-gateway"|"ipam"|"ipam-pool"|"ipam-scope"|"ipv4pool-ec2"|"ipv6pool-ec2"|"key-pair"|"launch-template"|"local-gateway"|"local-gateway-route-table"|"local-gateway-virtual-interface"|"local-gateway-virtual-interface-group"|"local-gateway-route-table-vpc-association"|"local-gateway-route-table-virtual-interface-group-association"|"natgateway"|"network-acl"|"network-interface"|"network-insights-analysis"|"network-insights-path"|"network-insights-access-scope"|"network-insights-access-scope-analysis"|"placement-group"|"prefix-list"|"replace-root-volume-task"|"reserved-instances"|"route-table"|"security-group"|"security-group-rule"|"snapshot"|"spot-fleet-request"|"spot-instances-request"|"subnet"|"subnet-cidr-reservation"|"traffic-mirror-filter"|"traffic-mirror-session"|"traffic-mirror-target"|"transit-gateway"|"transit-gateway-attachment"|"transit-gateway-connect-peer"|"transit-gateway-multicast-domain"|"transit-gateway-policy-table"|"transit-gateway-route-table"|"transit-gateway-route-table-announcement"|"volume"|"vpc"|"vpc-endpoint"|"vpc-endpoint-service"|"vpc-peering-connection"|"vpn-connection"|"vpn-gateway"|"vpc-flow-log"|"capacity-reservation-fleet"|"traffic-mirror-filter-rule"|"vpc-endpoint-connection-device-type"|"vpn-connection-device-type",
              "Tags": [
                {
                  "Key": "string",
                  "Value": "string"
                }
                ...
              ]
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       Example 1: To create an event window with a time range

       The  following  create-instance-event-window  example  creates an event
       window with a time range. You can't also  specify  the  cron-expression
       parameter.

          aws ec2 create-instance-event-window \
              --region us-east-1 \
              --time-range StartWeekDay=monday,StartHour=2,EndWeekDay=wednesday,EndHour=8 \
              --tag-specifications "ResourceType=instance-event-window,Tags=[{Key=K1,Value=V1}]" \
              --name myEventWindowName

       Output:

          {
              "InstanceEventWindow": {
                  "InstanceEventWindowId": "iew-0abcdef1234567890",
                  "TimeRanges": [
                      {
                          "StartWeekDay": "monday",
                          "StartHour": 2,
                          "EndWeekDay": "wednesday",
                          "EndHour": 8
                      }
                  ],
                  "Name": "myEventWindowName",
                  "State": "creating",
                  "Tags": [
                      {
                          "Key": "K1",
                          "Value": "V1"
                      }
                  ]
              }
          }

       For  event  window  constraints,  see  Considerations  in the Scheduled
       Events section of the Amazon EC2 User Guide.

       Example 2: To create an event window with a cron expression

       The following create-instance-event-window  example  creates  an  event
       window  with  a  cron expression. You can't also specify the time-range
       parameter.

          aws ec2 create-instance-event-window \
              --region us-east-1 \
              --cron-expression "* 21-23 * * 2,3" \
              --tag-specifications "ResourceType=instance-event-window,Tags=[{Key=K1,Value=V1}]" \
              --name myEventWindowName

       Output:

          {
              "InstanceEventWindow": {
                  "InstanceEventWindowId": "iew-0abcdef1234567890",
                  "Name": "myEventWindowName",
                  "CronExpression": "* 21-23 * * 2,3",
                  "State": "creating",
                  "Tags": [
                      {
                          "Key": "K1",
                          "Value": "V1"
                      }
                  ]
              }
          }

       For event window  constraints,  see  Considerations  in  the  Scheduled
       Events section of the Amazon EC2 User Guide.

OUTPUT
       InstanceEventWindow -> (structure)
          Information about the event window.

          InstanceEventWindowId -> (string)
              The ID of the event window.

          TimeRanges -> (list)
              One or more time ranges defined for the event window.

              (structure)
                 The  start  day and time and the end day and time of the time
                 range, in UTC.

                 StartWeekDay -> (string)
                     The day on which the time range begins.

                 StartHour -> (integer)
                     The hour when the time range begins.

                 EndWeekDay -> (string)
                     The day on which the time range ends.

                 EndHour -> (integer)
                     The hour when the time range ends.

          Name -> (string)
              The name of the event window.

          CronExpression -> (string)
              The cron expression defined for the event window.

          AssociationTarget -> (structure)
              One or more targets associated with the event window.

              InstanceIds -> (list)
                 The IDs of the instances associated with the event window.

                 (string)

              Tags -> (list)
                 The instance tags associated with the event window.  Any  in-
                 stances  associated with the tags will be associated with the
                 event window.

                 (structure)
                     Describes a tag.

                     Key -> (string)
                        The key of the tag.

                        Constraints: Tag keys are case-sensitive and accept  a
                        maximum  of 127 Unicode characters. May not begin with
                        aws: .

                     Value -> (string)
                        The value of the tag.

                        Constraints: Tag values are case-sensitive and  accept
                        a maximum of 256 Unicode characters.

              DedicatedHostIds -> (list)
                 The IDs of the Dedicated Hosts associated with the event win-
                 dow.

                 (string)

          State -> (string)
              The current state of the event window.

          Tags -> (list)
              The instance tags associated with the event window.

              (structure)
                 Describes a tag.

                 Key -> (string)
                     The key of the tag.

                     Constraints: Tag keys are  case-sensitive  and  accept  a
                     maximum  of  127  Unicode  characters. May not begin with
                     aws: .

                 Value -> (string)
                     The value of the tag.

                     Constraints: Tag values are case-sensitive and  accept  a
                     maximum of 256 Unicode characters.



                                                CREATE-INSTANCE-EVENT-WINDOW()
