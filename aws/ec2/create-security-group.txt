CREATE-SECURITY-GROUP()                                CREATE-SECURITY-GROUP()



NAME
       create-security-group -

DESCRIPTION
       Creates a security group.

       A  security  group acts as a virtual firewall for your instance to con-
       trol inbound and outbound traffic. For more information, see Amazon EC2
       security  groups  in  the  Amazon  Elastic Compute Cloud User Guide and
       Security groups for your VPC in the Amazon Virtual Private  Cloud  User
       Guide .

       When  you  create a security group, you specify a friendly name of your
       choice. You can have a security group for use in EC2-Classic  with  the
       same name as a security group for use in a VPC. However, you can't have
       two security groups for use in EC2-Classic with the same  name  or  two
       security groups for use in a VPC with the same name.

       You  have a default security group for use in EC2-Classic and a default
       security group for use in your VPC. If you  don't  specify  a  security
       group  when  you  launch an instance, the instance is launched into the
       appropriate default security group. A default security group includes a
       default  rule that grants instances unrestricted network access to each
       other.

       You can add or remove rules from your  security  groups  using   Autho-
       rizeSecurityGroupIngress ,  AuthorizeSecurityGroupEgress ,  RevokeSecu-
       rityGroupIngress , and  RevokeSecurityGroupEgress .

       For more information about VPC security group limits,  see  Amazon  VPC
       Limits .

       NOTE:
          We  are  retiring  EC2-Classic.  We  recommend that you migrate from
          EC2-Classic to  a  VPC.  For  more  information,  see  Migrate  from
          EC2-Classic  to a VPC in the Amazon Elastic Compute Cloud User Guide
          .

       See also: AWS API Documentation

SYNOPSIS
            create-security-group
          --description <value>
          --group-name <value>
          [--vpc-id <value>]
          [--tag-specifications <value>]
          [--dry-run | --no-dry-run]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --description (string)
          A description for the security group. This is informational only.

          Constraints: Up to 255 characters in length

          Constraints for EC2-Classic: ASCII characters

          Constraints   for   EC2-VPC:   a-z,   A-Z,    0-9,    spaces,    and
          ._-:/()#,@[]+=&;{}!$*

       --group-name (string)
          The name of the security group.

          Constraints: Up to 255 characters in length. Cannot start with sg- .

          Constraints for EC2-Classic: ASCII characters

          Constraints    for    EC2-VPC:    a-z,   A-Z,   0-9,   spaces,   and
          ._-:/()#,@[]+=&;{}!$*

       --vpc-id (string)
          [EC2-VPC] The ID of the VPC. Required for EC2-VPC.

       --tag-specifications (list)
          The tags to assign to the security group.

          (structure)
              The tags to apply to a resource when the resource is being  cre-
              ated. When you specify a tag, you must specify the resource type
              to tag, otherwise the request will fail.

              NOTE:
                 The Valid Values lists all the resource  types  that  can  be
                 tagged.  However,  the  action you're using might not support
                 tagging all of these resource types. If you try to tag a  re-
                 source  type that is unsupported for the action you're using,
                 you'll get an error.

              ResourceType -> (string)
                 The type of resource to tag on creation.

              Tags -> (list)
                 The tags to apply to the resource.

                 (structure)
                     Describes a tag.

                     Key -> (string)
                        The key of the tag.

                        Constraints: Tag keys are case-sensitive and accept  a
                        maximum  of 127 Unicode characters. May not begin with
                        aws: .

                     Value -> (string)
                        The value of the tag.

                        Constraints: Tag values are case-sensitive and  accept
                        a maximum of 256 Unicode characters.

       Shorthand Syntax:

          ResourceType=string,Tags=[{Key=string,Value=string},{Key=string,Value=string}] ...

       JSON Syntax:

          [
            {
              "ResourceType": "capacity-reservation"|"client-vpn-endpoint"|"customer-gateway"|"carrier-gateway"|"coip-pool"|"dedicated-host"|"dhcp-options"|"egress-only-internet-gateway"|"elastic-ip"|"elastic-gpu"|"export-image-task"|"export-instance-task"|"fleet"|"fpga-image"|"host-reservation"|"image"|"import-image-task"|"import-snapshot-task"|"instance"|"instance-event-window"|"internet-gateway"|"ipam"|"ipam-pool"|"ipam-scope"|"ipv4pool-ec2"|"ipv6pool-ec2"|"key-pair"|"launch-template"|"local-gateway"|"local-gateway-route-table"|"local-gateway-virtual-interface"|"local-gateway-virtual-interface-group"|"local-gateway-route-table-vpc-association"|"local-gateway-route-table-virtual-interface-group-association"|"natgateway"|"network-acl"|"network-interface"|"network-insights-analysis"|"network-insights-path"|"network-insights-access-scope"|"network-insights-access-scope-analysis"|"placement-group"|"prefix-list"|"replace-root-volume-task"|"reserved-instances"|"route-table"|"security-group"|"security-group-rule"|"snapshot"|"spot-fleet-request"|"spot-instances-request"|"subnet"|"subnet-cidr-reservation"|"traffic-mirror-filter"|"traffic-mirror-session"|"traffic-mirror-target"|"transit-gateway"|"transit-gateway-attachment"|"transit-gateway-connect-peer"|"transit-gateway-multicast-domain"|"transit-gateway-policy-table"|"transit-gateway-route-table"|"transit-gateway-route-table-announcement"|"volume"|"vpc"|"vpc-endpoint"|"vpc-endpoint-connection"|"vpc-endpoint-service"|"vpc-endpoint-service-permission"|"vpc-peering-connection"|"vpn-connection"|"vpn-gateway"|"vpc-flow-log"|"capacity-reservation-fleet"|"traffic-mirror-filter-rule"|"vpc-endpoint-connection-device-type"|"verified-access-instance"|"verified-access-group"|"verified-access-endpoint"|"verified-access-policy"|"verified-access-trust-provider"|"vpn-connection-device-type"|"vpc-block-public-access-exclusion"|"ipam-resource-discovery"|"ipam-resource-discovery-association",
              "Tags": [
                {
                  "Key": "string",
                  "Value": "string"
                }
                ...
              ]
            }
            ...
          ]

       --dry-run | --no-dry-run (boolean)
          Checks  whether  you  have  the required permissions for the action,
          without actually making the request, and provides an error response.
          If  you have the required permissions, the error response is DryRun-
          Operation . Otherwise, it is UnauthorizedOperation .

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a security group for EC2-Classic

       This example creates a security group named MySecurityGroup.

       Command:

          aws ec2 create-security-group --group-name MySecurityGroup --description "My security group"

       Output:

          {
              "GroupId": "sg-903004f8"
          }

       To create a security group for EC2-VPC

       This example creates a security group  named  MySecurityGroup  for  the
       specified VPC.

       Command:

          aws ec2 create-security-group --group-name MySecurityGroup --description "My security group" --vpc-id vpc-1a2b3c4d

       Output:

          {
              "GroupId": "sg-903004f8"
          }

       For more information, see Using Security Groups in the AWS Command Line
       Interface User Guide.

OUTPUT
       GroupId -> (string)
          The ID of the security group.

       Tags -> (list)
          The tags assigned to the security group.

          (structure)
              Describes a tag.

              Key -> (string)
                 The key of the tag.

                 Constraints: Tag keys are case-sensitive and accept a maximum
                 of 127 Unicode characters. May not begin with aws: .

              Value -> (string)
                 The value of the tag.

                 Constraints: Tag values are case-sensitive and accept a maxi-
                 mum of 256 Unicode characters.



                                                       CREATE-SECURITY-GROUP()
