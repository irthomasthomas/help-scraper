DESCRIBE-TAGS()                                                DESCRIBE-TAGS()



NAME
       describe-tags -

DESCRIPTION
       Describes the specified tags for your EC2 resources.

       For  more  information about tags, see Tag your Amazon EC2 resources in
       the Amazon Elastic Compute Cloud User Guide .

       NOTE:
          The order of the elements in the response,  including  those  within
          nested  structures,  might  vary. Applications should not assume the
          elements appear in a particular order.

       See also: AWS API Documentation

       describe-tags is a paginated operation. Multiple API calls may  be  is-
       sued  in order to retrieve the entire data set of results. You can dis-
       able pagination by providing the --no-paginate  argument.   When  using
       --output  text  and  the  --query argument on a paginated response, the
       --query argument must extract data from the results  of  the  following
       query expressions: Tags

SYNOPSIS
            describe-tags
          [--dry-run | --no-dry-run]
          [--filters <value>]
          [--cli-input-json <value>]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --dry-run | --no-dry-run (boolean)
          Checks  whether  you  have  the required permissions for the action,
          without actually making the request, and provides an error response.
          If  you have the required permissions, the error response is DryRun-
          Operation . Otherwise, it is UnauthorizedOperation .

       --filters (list)
          The filters.

          o key - The tag key.

          o resource-id - The ID of the resource.

          o resource-type  -  The  resource  type  (customer-gateway  |  dedi-
            cated-host  |  dhcp-options  |  elastic-ip  | fleet | fpga-image |
            host-reservation | image | instance | internet-gateway |  key-pair
            | launch-template | natgateway | network-acl | network-interface |
            placement-group  |  reserved-instances  |  route-table   |   secu-
            rity-group | snapshot | spot-instances-request | subnet | volume |
            vpc | vpc-endpoint | vpc-endpoint-service | vpc-peering-connection
            | vpn-connection | vpn-gateway ).

          o tag  :<key>  -  The key/value combination of the tag. For example,
            specify "tag:Owner" for the filter name and "TeamA" for the filter
            value to find resources with the tag "Owner=TeamA".

          o value - The tag value.

          (structure)
              A  filter name and value pair that is used to return a more spe-
              cific list of results from a describe operation. Filters can  be
              used  to  match a set of resources by specific criteria, such as
              tags, attributes, or IDs.

              If you specify multiple filters, the filters are joined with  an
              AND , and the request returns only results that match all of the
              specified filters.

              Name -> (string)
                 The name of the filter. Filter names are case-sensitive.

              Values -> (list)
                 The filter values. Filter values are case-sensitive.  If  you
                 specify  multiple  values for a filter, the values are joined
                 with an OR , and the request returns all results  that  match
                 any of the specified values.

                 (string)

       Shorthand Syntax:

          Name=string,Values=string,string ...

       JSON Syntax:

          [
            {
              "Name": "string",
              "Values": ["string", ...]
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --starting-token (string)
          A token to specify where to start paginating. This is the  NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The size of each page to get in the AWS service call. This does  not
          affect the number of items returned in the command's output. Setting
          a smaller page size results in more calls to the  AWS  service,  re-
          trieving  fewer  items  in  each call. This can help prevent the AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The  total number of items to return in the command's output. If the
          total number of items available is more than the value specified,  a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent  command. Do not use the NextToken response element directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       Example 1: To describe all tags for a single resource

       The following describe-tags example describes the tags for  the  speci-
       fied instance.

          aws ec2 describe-tags \
              --filters "Name=resource-id,Values=i-1234567890abcdef8"

       Output:

          {
              "Tags": [
                  {
                      "ResourceType": "instance",
                      "ResourceId": "i-1234567890abcdef8",
                      "Value": "Test",
                      "Key": "Stack"
                  },
                  {
                      "ResourceType": "instance",
                      "ResourceId": "i-1234567890abcdef8",
                      "Value": "Beta Server",
                      "Key": "Name"
                  }
              ]
          }

       Example 2: To describe all tags for a resource type

       The  following  describe-tags  example describes the tags for your vol-
       umes.

          aws ec2 describe-tags \
              --filters "Name=resource-type,Values=volume"

       Output:

          {
              "Tags": [
                  {
                      "ResourceType": "volume",
                      "ResourceId": "vol-1234567890abcdef0",
                      "Value": "Project1",
                      "Key": "Purpose"
                  },
                  {
                      "ResourceType": "volume",
                      "ResourceId": "vol-049df61146c4d7901",
                      "Value": "Logs",
                      "Key": "Purpose"
                  }
              ]
          }

       Example 3: To describe all your tags

       The following describe-tags example describes the tags for all your re-
       sources.

          aws ec2 describe-tags

       Example 4: To describe the tags for your resources based on a tag key

       The  following  describe-tags  example  describes the tags for your re-
       sources that have a tag with the key Stack.

          aws ec2 describe-tags \
              --filters Name=key,Values=Stack

       Output:

          {
              "Tags": [
                  {
                      "ResourceType": "volume",
                      "ResourceId": "vol-027552a73f021f3b",
                      "Value": "Production",
                      "Key": "Stack"
                  },
                  {
                      "ResourceType": "instance",
                      "ResourceId": "i-1234567890abcdef8",
                      "Value": "Test",
                      "Key": "Stack"
                  }
              ]
          }

       Example 5: To describe the tags for your resources based on a  tag  key
       and tag value

       The  following  describe-tags  example  describes the tags for your re-
       sources that have the tag Stack=Test.

          aws ec2 describe-tags \
              --filters Name=key,Values=Stack Name=value,Values=Test

       Output:

          {
              "Tags": [
                  {
                      "ResourceType": "image",
                      "ResourceId": "ami-3ac336533f021f3bd",
                      "Value": "Test",
                      "Key": "Stack"
                  },
                  {
                      "ResourceType": "instance",
                      "ResourceId": "i-1234567890abcdef8",
                      "Value": "Test",
                      "Key": "Stack"
                  }
              ]
          }

       The following describe-tags example uses alternate syntax  to  describe
       resources with the tag Stack=Test.

          aws ec2 describe-tags \
              --filters "Name=tag:Stack,Values=Test"

       The following describe-tags example describes the tags for all your in-
       stances that have a tag with the key Purpose and no value.

          aws ec2 describe-tags \
              --filters "Name=resource-type,Values=instance" "Name=key,Values=Purpose" "Name=value,Values="

       Output:

          {
              "Tags": [
                  {
                      "ResourceType": "instance",
                      "ResourceId": "i-1234567890abcdef5",
                      "Value": null,
                      "Key": "Purpose"
                  }
              ]
          }

OUTPUT
       NextToken -> (string)
          The token to include in another request to  get  the  next  page  of
          items. This value is null when there are no more items to return.

       Tags -> (list)
          The tags.

          (structure)
              Describes a tag.

              Key -> (string)
                 The tag key.

              ResourceId -> (string)
                 The ID of the resource.

              ResourceType -> (string)
                 The resource type.

              Value -> (string)
                 The tag value.



                                                               DESCRIBE-TAGS()
