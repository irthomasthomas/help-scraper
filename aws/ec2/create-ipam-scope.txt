CREATE-IPAM-SCOPE()                                        CREATE-IPAM-SCOPE()



NAME
       create-ipam-scope -

DESCRIPTION
       Create  an  IPAM scope. In IPAM, a scope is the highest-level container
       within IPAM. An IPAM contains two default scopes. Each scope represents
       the  IP  space  for a single network. The private scope is intended for
       all private IP address space. The public scope is intended for all pub-
       lic  IP  address  space. Scopes enable you to reuse IP addresses across
       multiple unconnected networks without causing  IP  address  overlap  or
       conflict.

       For more information, see Add a scope in the Amazon VPC IPAM User Guide
       .

       See also: AWS API Documentation

SYNOPSIS
            create-ipam-scope
          [--dry-run | --no-dry-run]
          --ipam-id <value>
          [--description <value>]
          [--tag-specifications <value>]
          [--client-token <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --dry-run | --no-dry-run (boolean)
          A check for whether you have the required permissions for the action
          without  actually making the request and provides an error response.
          If you have the required permissions, the error response is  DryRun-
          Operation . Otherwise, it is UnauthorizedOperation .

       --ipam-id (string)
          The ID of the IPAM for which you're creating this scope.

       --description (string)
          A description for the scope you're creating.

       --tag-specifications (list)
          The key/value combination of a tag assigned to the resource. Use the
          tag key in the filter name and the tag value as  the  filter  value.
          For  example,  to  find  all  resources that have a tag with the key
          Owner and the value TeamA , specify tag:Owner for  the  filter  name
          and TeamA for the filter value.

          (structure)
              The  tags to apply to a resource when the resource is being cre-
              ated.

              NOTE:
                 The Valid Values lists all the resource  types  that  can  be
                 tagged.  However,  the  action you're using might not support
                 tagging all of these resource types. If you try to tag a  re-
                 source  type that is unsupported for the action you're using,
                 you'll get an error.

              ResourceType -> (string)
                 The type of resource to tag on creation.

              Tags -> (list)
                 The tags to apply to the resource.

                 (structure)
                     Describes a tag.

                     Key -> (string)
                        The key of the tag.

                        Constraints: Tag keys are case-sensitive and accept  a
                        maximum  of 127 Unicode characters. May not begin with
                        aws: .

                     Value -> (string)
                        The value of the tag.

                        Constraints: Tag values are case-sensitive and  accept
                        a maximum of 256 Unicode characters.

       Shorthand Syntax:

          ResourceType=string,Tags=[{Key=string,Value=string},{Key=string,Value=string}] ...

       JSON Syntax:

          [
            {
              "ResourceType": "capacity-reservation"|"client-vpn-endpoint"|"customer-gateway"|"carrier-gateway"|"coip-pool"|"dedicated-host"|"dhcp-options"|"egress-only-internet-gateway"|"elastic-ip"|"elastic-gpu"|"export-image-task"|"export-instance-task"|"fleet"|"fpga-image"|"host-reservation"|"image"|"import-image-task"|"import-snapshot-task"|"instance"|"instance-event-window"|"internet-gateway"|"ipam"|"ipam-pool"|"ipam-scope"|"ipv4pool-ec2"|"ipv6pool-ec2"|"key-pair"|"launch-template"|"local-gateway"|"local-gateway-route-table"|"local-gateway-virtual-interface"|"local-gateway-virtual-interface-group"|"local-gateway-route-table-vpc-association"|"local-gateway-route-table-virtual-interface-group-association"|"natgateway"|"network-acl"|"network-interface"|"network-insights-analysis"|"network-insights-path"|"network-insights-access-scope"|"network-insights-access-scope-analysis"|"placement-group"|"prefix-list"|"replace-root-volume-task"|"reserved-instances"|"route-table"|"security-group"|"security-group-rule"|"snapshot"|"spot-fleet-request"|"spot-instances-request"|"subnet"|"subnet-cidr-reservation"|"traffic-mirror-filter"|"traffic-mirror-session"|"traffic-mirror-target"|"transit-gateway"|"transit-gateway-attachment"|"transit-gateway-connect-peer"|"transit-gateway-multicast-domain"|"transit-gateway-policy-table"|"transit-gateway-route-table"|"transit-gateway-route-table-announcement"|"volume"|"vpc"|"vpc-endpoint"|"vpc-endpoint-service"|"vpc-peering-connection"|"vpn-connection"|"vpn-gateway"|"vpc-flow-log"|"capacity-reservation-fleet"|"traffic-mirror-filter-rule"|"vpc-endpoint-connection-device-type"|"vpn-connection-device-type",
              "Tags": [
                {
                  "Key": "string",
                  "Value": "string"
                }
                ...
              ]
            }
            ...
          ]

       --client-token (string)
          A  unique,  case-sensitive identifier that you provide to ensure the
          idempotency of the request. For more information, see Ensuring Idem-
          potency .

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create an IPAM scope

       The following create-ipam-scope example creates an IPAM scope.

       (Linux):

          aws ec2 create-ipam-scope \
              --ipam-id ipam-08440e7a3acde3908 \
              --description "Example description" \
              --tag-specifications 'ResourceType=ipam-scope,Tags=[{Key=Name,Value="Example name value"}]'

       (Windows):

          aws ec2 create-ipam-scope ^
              --ipam-id ipam-08440e7a3acde3908 ^
              --description "Example description" ^
              --tag-specifications ResourceType=ipam-scope,Tags=[{Key=Name,Value="Example name value"}]

       Output:

          {
              "IpamScope": {
                  "OwnerId": "123456789012",
                  "IpamScopeId": "ipam-scope-01c1ebab2b63bd7e4",
                  "IpamScopeArn": "arn:aws:ec2::123456789012:ipam-scope/ipam-scope-01c1ebab2b63bd7e4",
                  "IpamArn": "arn:aws:ec2::123456789012:ipam/ipam-08440e7a3acde3908",
                  "IpamRegion": "us-east-1",
                  "IpamScopeType": "private",
                  "IsDefault": false,
                  "Description": "Example description",
                  "PoolCount": 0,
                  "State": "create-in-progress",
                  "Tags": [
                      {
                          "Key": "Name",
                          "Value": "Example name value"
                      }
                  ]
              }
          }

       For  more  information,  see Create additional scopes in the Amazon VPC
       IPAM User Guide.

OUTPUT
       IpamScope -> (structure)
          Information about the created scope.

          OwnerId -> (string)
              The Amazon Web Services account ID of the owner of the scope.

          IpamScopeId -> (string)
              The ID of the scope.

          IpamScopeArn -> (string)
              The ARN of the scope.

          IpamArn -> (string)
              The ARN of the IPAM.

          IpamRegion -> (string)
              The Amazon Web Services Region of the IPAM scope.

          IpamScopeType -> (string)
              The type of the scope.

          IsDefault -> (boolean)
              Defines if the scope is the default scope or not.

          Description -> (string)
              The description of the scope.

          PoolCount -> (integer)
              The number of pools in the scope.

          State -> (string)
              The state of the IPAM scope.

          Tags -> (list)
              The key/value combination of a tag assigned to the resource. Use
              the  tag  key in the filter name and the tag value as the filter
              value. For example, to find all resources that have a  tag  with
              the  key  Owner  and the value TeamA , specify tag:Owner for the
              filter name and TeamA for the filter value.

              (structure)
                 Describes a tag.

                 Key -> (string)
                     The key of the tag.

                     Constraints: Tag keys are  case-sensitive  and  accept  a
                     maximum  of  127  Unicode  characters. May not begin with
                     aws: .

                 Value -> (string)
                     The value of the tag.

                     Constraints: Tag values are case-sensitive and  accept  a
                     maximum of 256 Unicode characters.



                                                           CREATE-IPAM-SCOPE()
