CREATE-TRAFFIC-MIRROR-FILTER-RULE()        CREATE-TRAFFIC-MIRROR-FILTER-RULE()



NAME
       create-traffic-mirror-filter-rule -

DESCRIPTION
       Creates a Traffic Mirror filter rule.

       A Traffic Mirror rule defines the Traffic Mirror source traffic to mir-
       ror.

       You need the Traffic Mirror filter ID when you create the rule.

       See also: AWS API Documentation

SYNOPSIS
            create-traffic-mirror-filter-rule
          --traffic-mirror-filter-id <value>
          --traffic-direction <value>
          --rule-number <value>
          --rule-action <value>
          [--destination-port-range <value>]
          [--source-port-range <value>]
          [--protocol <value>]
          --destination-cidr-block <value>
          --source-cidr-block <value>
          [--description <value>]
          [--dry-run | --no-dry-run]
          [--client-token <value>]
          [--tag-specifications <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --traffic-mirror-filter-id (string)
          The ID of the filter that this rule is associated with.

       --traffic-direction (string)
          The type of traffic.

          Possible values:

          o ingress

          o egress

       --rule-number (integer)
          The number of the Traffic Mirror rule. This number  must  be  unique
          for  each  Traffic  Mirror  rule in a given direction. The rules are
          processed in ascending order by rule number.

       --rule-action (string)
          The action to take on the filtered traffic.

          Possible values:

          o accept

          o reject

       --destination-port-range (structure)
          The destination port range.

          FromPort -> (integer)
              The first port in the Traffic Mirror port range. This applies to
              the TCP and UDP protocols.

          ToPort -> (integer)
              The  last port in the Traffic Mirror port range. This applies to
              the TCP and UDP protocols.

       Shorthand Syntax:

          FromPort=integer,ToPort=integer

       JSON Syntax:

          {
            "FromPort": integer,
            "ToPort": integer
          }

       --source-port-range (structure)
          The source port range.

          FromPort -> (integer)
              The first port in the Traffic Mirror port range. This applies to
              the TCP and UDP protocols.

          ToPort -> (integer)
              The  last port in the Traffic Mirror port range. This applies to
              the TCP and UDP protocols.

       Shorthand Syntax:

          FromPort=integer,ToPort=integer

       JSON Syntax:

          {
            "FromPort": integer,
            "ToPort": integer
          }

       --protocol (integer)
          The protocol, for example UDP, to assign to the Traffic Mirror rule.

          For information about the protocol value, see  Protocol  Numbers  on
          the Internet Assigned Numbers Authority (IANA) website.

       --destination-cidr-block (string)
          The destination CIDR block to assign to the Traffic Mirror rule.

       --source-cidr-block (string)
          The source CIDR block to assign to the Traffic Mirror rule.

       --description (string)
          The description of the Traffic Mirror rule.

       --dry-run | --no-dry-run (boolean)
          Checks  whether  you  have  the required permissions for the action,
          without actually making the request, and provides an error response.
          If  you have the required permissions, the error response is DryRun-
          Operation . Otherwise, it is UnauthorizedOperation .

       --client-token (string)
          Unique, case-sensitive identifier that you  provide  to  ensure  the
          idempotency  of the request. For more information, see How to ensure
          idempotency .

       --tag-specifications (list)
          Traffic Mirroring tags specifications.

          (structure)
              The tags to apply to a resource when the resource is being  cre-
              ated. When you specify a tag, you must specify the resource type
              to tag, otherwise the request will fail.

              NOTE:
                 The Valid Values lists all the resource  types  that  can  be
                 tagged.  However,  the  action you're using might not support
                 tagging all of these resource types. If you try to tag a  re-
                 source  type that is unsupported for the action you're using,
                 you'll get an error.

              ResourceType -> (string)
                 The type of resource to tag on creation.

              Tags -> (list)
                 The tags to apply to the resource.

                 (structure)
                     Describes a tag.

                     Key -> (string)
                        The key of the tag.

                        Constraints: Tag keys are case-sensitive and accept  a
                        maximum  of 127 Unicode characters. May not begin with
                        aws: .

                     Value -> (string)
                        The value of the tag.

                        Constraints: Tag values are case-sensitive and  accept
                        a maximum of 256 Unicode characters.

       Shorthand Syntax:

          ResourceType=string,Tags=[{Key=string,Value=string},{Key=string,Value=string}] ...

       JSON Syntax:

          [
            {
              "ResourceType": "capacity-reservation"|"client-vpn-endpoint"|"customer-gateway"|"carrier-gateway"|"coip-pool"|"declarative-policies-report"|"dedicated-host"|"dhcp-options"|"egress-only-internet-gateway"|"elastic-ip"|"elastic-gpu"|"export-image-task"|"export-instance-task"|"fleet"|"fpga-image"|"host-reservation"|"image"|"import-image-task"|"import-snapshot-task"|"instance"|"instance-event-window"|"internet-gateway"|"ipam"|"ipam-pool"|"ipam-scope"|"ipv4pool-ec2"|"ipv6pool-ec2"|"key-pair"|"launch-template"|"local-gateway"|"local-gateway-route-table"|"local-gateway-virtual-interface"|"local-gateway-virtual-interface-group"|"local-gateway-route-table-vpc-association"|"local-gateway-route-table-virtual-interface-group-association"|"natgateway"|"network-acl"|"network-interface"|"network-insights-analysis"|"network-insights-path"|"network-insights-access-scope"|"network-insights-access-scope-analysis"|"placement-group"|"prefix-list"|"replace-root-volume-task"|"reserved-instances"|"route-table"|"security-group"|"security-group-rule"|"snapshot"|"spot-fleet-request"|"spot-instances-request"|"subnet"|"subnet-cidr-reservation"|"traffic-mirror-filter"|"traffic-mirror-session"|"traffic-mirror-target"|"transit-gateway"|"transit-gateway-attachment"|"transit-gateway-connect-peer"|"transit-gateway-multicast-domain"|"transit-gateway-policy-table"|"transit-gateway-route-table"|"transit-gateway-route-table-announcement"|"volume"|"vpc"|"vpc-endpoint"|"vpc-endpoint-connection"|"vpc-endpoint-service"|"vpc-endpoint-service-permission"|"vpc-peering-connection"|"vpn-connection"|"vpn-gateway"|"vpc-flow-log"|"capacity-reservation-fleet"|"traffic-mirror-filter-rule"|"vpc-endpoint-connection-device-type"|"verified-access-instance"|"verified-access-group"|"verified-access-endpoint"|"verified-access-policy"|"verified-access-trust-provider"|"vpn-connection-device-type"|"vpc-block-public-access-exclusion"|"ipam-resource-discovery"|"ipam-resource-discovery-association"|"instance-connect-endpoint"|"verified-access-endpoint-target"|"ipam-external-resource-verification-token",
              "Tags": [
                {
                  "Key": "string",
                  "Value": "string"
                }
                ...
              ]
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a filter rule for incoming TCP traffic

       The following create-traffic-mirror-filter-rule example creates a  rule
       that  you  can  use  to mirror all incoming TCP traffic. Before you run
       this command, use create-traffic-mirror-filter to create the the  Traf-
       fic Mirror filter.

          aws ec2 create-traffic-mirror-filter-rule \
              --description "TCP Rule" \
              --destination-cidr-block 0.0.0.0/0  \
              --protocol 6 \
              --rule-action accept \
              --rule-number 1 \
              --source-cidr-block 0.0.0.0/0 \
              --traffic-direction ingress \
              --traffic-mirror-filter-id tmf-04812ff784b25ae67

       Output:

          {
              "TrafficMirrorFilterRule": {
                  "DestinationCidrBlock": "0.0.0.0/0",
                  "TrafficMirrorFilterId": "tmf-04812ff784b25ae67",
                  "TrafficMirrorFilterRuleId": "tmfr-02d20d996673f3732",
                  "SourceCidrBlock": "0.0.0.0/0",
                  "TrafficDirection": "ingress",
                  "Description": "TCP Rule",
                  "RuleNumber": 1,
                  "RuleAction": "accept",
                  "Protocol": 6
              },
              "ClientToken": "4752b573-40a6-4eac-a8a4-a72058761219"
          }

       For  more  information,  see  Create a Traffic Mirror Filter in the AWS
       Traffic Mirroring Guide.

OUTPUT
       TrafficMirrorFilterRule -> (structure)
          The Traffic Mirror rule.

          TrafficMirrorFilterRuleId -> (string)
              The ID of the Traffic Mirror rule.

          TrafficMirrorFilterId -> (string)
              The ID of the Traffic Mirror filter that the rule is  associated
              with.

          TrafficDirection -> (string)
              The traffic direction assigned to the Traffic Mirror rule.

          RuleNumber -> (integer)
              The rule number of the Traffic Mirror rule.

          RuleAction -> (string)
              The action assigned to the Traffic Mirror rule.

          Protocol -> (integer)
              The protocol assigned to the Traffic Mirror rule.

          DestinationPortRange -> (structure)
              The destination port range assigned to the Traffic Mirror rule.

              FromPort -> (integer)
                 The  start  of the Traffic Mirror port range. This applies to
                 the TCP and UDP protocols.

              ToPort -> (integer)
                 The end of the Traffic Mirror port range. This applies to the
                 TCP and UDP protocols.

          SourcePortRange -> (structure)
              The source port range assigned to the Traffic Mirror rule.

              FromPort -> (integer)
                 The  start  of the Traffic Mirror port range. This applies to
                 the TCP and UDP protocols.

              ToPort -> (integer)
                 The end of the Traffic Mirror port range. This applies to the
                 TCP and UDP protocols.

          DestinationCidrBlock -> (string)
              The destination CIDR block assigned to the Traffic Mirror rule.

          SourceCidrBlock -> (string)
              The source CIDR block assigned to the Traffic Mirror rule.

          Description -> (string)
              The description of the Traffic Mirror rule.

          Tags -> (list)
              Tags on Traffic Mirroring filter rules.

              (structure)
                 Describes a tag.

                 Key -> (string)
                     The key of the tag.

                     Constraints:  Tag  keys  are  case-sensitive and accept a
                     maximum of 127 Unicode characters.  May  not  begin  with
                     aws: .

                 Value -> (string)
                     The value of the tag.

                     Constraints:  Tag  values are case-sensitive and accept a
                     maximum of 256 Unicode characters.

       ClientToken -> (string)
          Unique, case-sensitive identifier that you  provide  to  ensure  the
          idempotency  of the request. For more information, see How to ensure
          idempotency .



                                           CREATE-TRAFFIC-MIRROR-FILTER-RULE()
