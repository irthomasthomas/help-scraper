GET-LAUNCH-TEMPLATE-DATA()                          GET-LAUNCH-TEMPLATE-DATA()



NAME
       get-launch-template-data -

DESCRIPTION
       Retrieves the configuration data of the specified instance. You can use
       this data to create a launch template.

       This action calls on other describe actions to  get  instance  informa-
       tion.  Depending  on your instance configuration, you may need to allow
       the following actions in your IAM policy:  DescribeSpotInstanceRequests
       ,  DescribeInstanceCreditSpecifications , DescribeVolumes , DescribeIn-
       stanceAttribute , and DescribeElasticGpus . Or, you can allow describe*
       depending on your instance requirements.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-launch-template-data
          [--dry-run | --no-dry-run]
          --instance-id <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --dry-run | --no-dry-run (boolean)
          Checks  whether  you  have  the required permissions for the action,
          without actually making the request, and provides an error response.
          If  you have the required permissions, the error response is DryRun-
          Operation . Otherwise, it is UnauthorizedOperation .

       --instance-id (string)
          The ID of the instance.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To get instance data for a launch template

       This  example  gets  data  about  the  specified  instance and uses the
       --query option to return the contents in  LaunchTemplateData.  You  can
       use the output as a base to create a new launch template or launch tem-
       plate version.

       Command:

          aws ec2 get-launch-template-data --instance-id i-0123d646e8048babc --query 'LaunchTemplateData'

       Output:

          {
                "Monitoring": {},
                "ImageId": "ami-8c1be5f6",
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {
                            "DeleteOnTermination": true
                        }
                    }
                ],
                "EbsOptimized": false,
                "Placement": {
                    "Tenancy": "default",
                    "GroupName": "",
                    "AvailabilityZone": "us-east-1a"
                },
                "InstanceType": "t2.micro",
                "NetworkInterfaces": [
                    {
                        "Description": "",
                        "NetworkInterfaceId": "eni-35306abc",
                        "PrivateIpAddresses": [
                            {
                                "Primary": true,
                                "PrivateIpAddress": "10.0.0.72"
                            }
                        ],
                        "SubnetId": "subnet-7b16de0c",
                        "Groups": [
                            "sg-7c227019"
                        ],
                        "Ipv6Addresses": [
                            {
                                "Ipv6Address": "2001:db8:1234:1a00::123"
                            }
                        ],
                        "PrivateIpAddress": "10.0.0.72"
                    }
                ]
          }

OUTPUT
       LaunchTemplateData -> (structure)
          The instance data.

          KernelId -> (string)
              The ID of the kernel, if applicable.

          EbsOptimized -> (boolean)
              Indicates whether the instance is optimized for Amazon EBS I/O.

          IamInstanceProfile -> (structure)
              The IAM instance profile.

              Arn -> (string)
                 The Amazon Resource Name (ARN) of the instance profile.

              Name -> (string)
                 The name of the instance profile.

          BlockDeviceMappings -> (list)
              The block device mappings.

              (structure)
                 Describes a block device mapping.

                 DeviceName -> (string)
                     The device name.

                 VirtualName -> (string)
                     The virtual device name (ephemeralN).

                 Ebs -> (structure)
                     Information about the block device for an EBS volume.

                     Encrypted -> (boolean)
                        Indicates whether the EBS volume is encrypted.

                     DeleteOnTermination -> (boolean)
                        Indicates whether the EBS volume  is  deleted  on  in-
                        stance termination.

                     Iops -> (integer)
                        The  number  of  I/O operations per second (IOPS) that
                        the volume supports.

                     KmsKeyId -> (string)
                        The ARN of the Key Management Service (KMS)  CMK  used
                        for encryption.

                     SnapshotId -> (string)
                        The ID of the snapshot.

                     VolumeSize -> (integer)
                        The size of the volume, in GiB.

                     VolumeType -> (string)
                        The volume type.

                     Throughput -> (integer)
                        The throughput that the volume supports, in MiB/s.

                 NoDevice -> (string)
                     To omit the device from the block device mapping, specify
                     an empty string.

          NetworkInterfaces -> (list)
              The network interfaces.

              (structure)
                 Describes a network interface.

                 AssociateCarrierIpAddress -> (boolean)
                     Indicates whether to associate a Carrier IP address  with
                     eth0 for a new network interface.

                     Use  this  option  when you launch an instance in a Wave-
                     length Zone and want to associate a  Carrier  IP  address
                     with  the  network  interface. For more information about
                     Carrier IP addresses, see Carrier  IP  addresses  in  the
                     Wavelength Developer Guide .

                 AssociatePublicIpAddress -> (boolean)
                     Indicates whether to associate a public IPv4 address with
                     eth0 for a new network interface.

                 DeleteOnTermination -> (boolean)
                     Indicates whether the network interface is  deleted  when
                     the instance is terminated.

                 Description -> (string)
                     A description for the network interface.

                 DeviceIndex -> (integer)
                     The device index for the network interface attachment.

                 Groups -> (list)
                     The IDs of one or more security groups.

                     (string)

                 InterfaceType -> (string)
                     The type of network interface.

                 Ipv6AddressCount -> (integer)
                     The number of IPv6 addresses for the network interface.

                 Ipv6Addresses -> (list)
                     The IPv6 addresses for the network interface.

                     (structure)
                        Describes an IPv6 address.

                        Ipv6Address -> (string)
                            The IPv6 address.

                 NetworkInterfaceId -> (string)
                     The ID of the network interface.

                 PrivateIpAddress -> (string)
                     The  primary  private  IPv4 address of the network inter-
                     face.

                 PrivateIpAddresses -> (list)
                     One or more private IPv4 addresses.

                     (structure)
                        Describes a secondary private IPv4 address for a  net-
                        work interface.

                        Primary -> (boolean)
                            Indicates  whether the private IPv4 address is the
                            primary private IPv4 address. Only  one  IPv4  ad-
                            dress can be designated as primary.

                        PrivateIpAddress -> (string)
                            The private IPv4 addresses.

                 SecondaryPrivateIpAddressCount -> (integer)
                     The  number  of  secondary private IPv4 addresses for the
                     network interface.

                 SubnetId -> (string)
                     The ID of the subnet for the network interface.

                 NetworkCardIndex -> (integer)
                     The index of the network card.

                 Ipv4Prefixes -> (list)
                     One or more IPv4 prefixes assigned to the network  inter-
                     face.

                     (structure)
                        Information about the IPv4 delegated prefixes assigned
                        to a network interface.

                        Ipv4Prefix -> (string)
                            One or more IPv4 delegated  prefixes  assigned  to
                            the network interface.

                 Ipv4PrefixCount -> (integer)
                     The  number of IPv4 prefixes that Amazon Web Services au-
                     tomatically assigned to the network interface.

                 Ipv6Prefixes -> (list)
                     One or more IPv6 prefixes assigned to the network  inter-
                     face.

                     (structure)
                        Information about the IPv6 delegated prefixes assigned
                        to a network interface.

                        Ipv6Prefix -> (string)
                            One or more IPv6 delegated  prefixes  assigned  to
                            the network interface.

                 Ipv6PrefixCount -> (integer)
                     The  number of IPv6 prefixes that Amazon Web Services au-
                     tomatically assigned to the network interface.

          ImageId -> (string)
              The ID of the AMI that was used to launch the instance.

          InstanceType -> (string)
              The instance type.

          KeyName -> (string)
              The name of the key pair.

          Monitoring -> (structure)
              The monitoring for the instance.

              Enabled -> (boolean)
                 Indicates whether detailed monitoring is enabled.  Otherwise,
                 basic monitoring is enabled.

          Placement -> (structure)
              The placement of the instance.

              AvailabilityZone -> (string)
                 The Availability Zone of the instance.

              Affinity -> (string)
                 The affinity setting for the instance on the Dedicated Host.

              GroupName -> (string)
                 The name of the placement group for the instance.

              HostId -> (string)
                 The ID of the Dedicated Host for the instance.

              Tenancy -> (string)
                 The  tenancy of the instance (if the instance is running in a
                 VPC). An instance with a tenancy of dedicated  runs  on  sin-
                 gle-tenant hardware.

              SpreadDomain -> (string)
                 Reserved for future use.

              HostResourceGroupArn -> (string)
                 The ARN of the host resource group in which to launch the in-
                 stances.

              PartitionNumber -> (integer)
                 The number of the partition the instance  should  launch  in.
                 Valid  only  if the placement group strategy is set to parti-
                 tion .

          RamDiskId -> (string)
              The ID of the RAM disk, if applicable.

          DisableApiTermination -> (boolean)
              If set to true , indicates that the instance  cannot  be  termi-
              nated using the Amazon EC2 console, command line tool, or API.

          InstanceInitiatedShutdownBehavior -> (string)
              Indicates  whether an instance stops or terminates when you ini-
              tiate shutdown from the instance  (using  the  operating  system
              command for system shutdown).

          UserData -> (string)
              The user data for the instance.

          TagSpecifications -> (list)
              The tags that are applied to the resources that are created dur-
              ing instance launch.

              (structure)
                 The tags specification for the launch template.

                 ResourceType -> (string)
                     The type of resource to tag.

                 Tags -> (list)
                     The tags for the resource.

                     (structure)
                        Describes a tag.

                        Key -> (string)
                            The key of the tag.

                            Constraints: Tag keys are case-sensitive  and  ac-
                            cept  a maximum of 127 Unicode characters. May not
                            begin with aws: .

                        Value -> (string)
                            The value of the tag.

                            Constraints: Tag values are case-sensitive and ac-
                            cept a maximum of 256 Unicode characters.

          ElasticGpuSpecifications -> (list)
              The elastic GPU specification.

              (structure)
                 Describes an elastic GPU.

                 Type -> (string)
                     The elastic GPU type.

          ElasticInferenceAccelerators -> (list)
              The elastic inference accelerator for the instance.

              (structure)
                 Describes an elastic inference accelerator.

                 Type -> (string)
                     The  type  of elastic inference accelerator. The possible
                     values are eia1.medium, eia1.large, and eia1.xlarge.

                 Count -> (integer)
                     The number of elastic inference accelerators to attach to
                     the instance.

                     Default: 1

          SecurityGroupIds -> (list)
              The security group IDs.

              (string)

          SecurityGroups -> (list)
              The security group names.

              (string)

          InstanceMarketOptions -> (structure)
              The market (purchasing) option for the instances.

              MarketType -> (string)
                 The market type.

              SpotOptions -> (structure)
                 The options for Spot Instances.

                 MaxPrice -> (string)
                     The  maximum  hourly  price you're willing to pay for the
                     Spot Instances. We do not recommend using this  parameter
                     because it can lead to increased interruptions. If you do
                     not specify this parameter, you will pay the current Spot
                     price.

                     WARNING:
                        If  you  specify  a maximum price, your Spot Instances
                        will be interrupted more frequently than if you do not
                        specify this parameter.

                 SpotInstanceType -> (string)
                     The Spot Instance request type.

                 BlockDurationMinutes -> (integer)
                     The  required duration for the Spot Instances (also known
                     as Spot blocks), in minutes. This value must be a  multi-
                     ple of 60 (60, 120, 180, 240, 300, or 360).

                 ValidUntil -> (timestamp)
                     The  end date of the request. For a one-time request, the
                     request remains active until all  instances  launch,  the
                     request  is canceled, or this date is reached. If the re-
                     quest is persistent, it remains active until it  is  can-
                     celed or this date and time is reached.

                 InstanceInterruptionBehavior -> (string)
                     The behavior when a Spot Instance is interrupted.

          CreditSpecification -> (structure)
              The credit option for CPU usage of the instance.

              CpuCredits -> (string)
                 The credit option for CPU usage of a T instance.

                 Valid values: standard | unlimited

          CpuOptions -> (structure)
              The  CPU  options  for  the  instance. For more information, see
              Optimizing CPU options in the Amazon Elastic Compute Cloud  User
              Guide .

              CoreCount -> (integer)
                 The number of CPU cores for the instance.

              ThreadsPerCore -> (integer)
                 The number of threads per CPU core.

          CapacityReservationSpecification -> (structure)
              Information about the Capacity Reservation targeting option.

              CapacityReservationPreference -> (string)
                 Indicates  the  instance's  Capacity Reservation preferences.
                 Possible preferences include:

                 o open - The instance can run in any open  Capacity  Reserva-
                   tion that has matching attributes (instance type, platform,
                   Availability Zone).

                 o none - The instance avoids running in a  Capacity  Reserva-
                   tion  even if one is available. The instance runs in On-De-
                   mand capacity.

              CapacityReservationTarget -> (structure)
                 Information about the target Capacity Reservation or Capacity
                 Reservation group.

                 CapacityReservationId -> (string)
                     The ID of the targeted Capacity Reservation.

                 CapacityReservationResourceGroupArn -> (string)
                     The ARN of the targeted Capacity Reservation group.

          LicenseSpecifications -> (list)
              The license configurations.

              (structure)
                 Describes a license configuration.

                 LicenseConfigurationArn -> (string)
                     The  Amazon Resource Name (ARN) of the license configura-
                     tion.

          HibernationOptions -> (structure)
              Indicates whether an instance is configured for hibernation. For
              more  information,  see  Hibernate  your  instance in the Amazon
              Elastic Compute Cloud User Guide .

              Configured -> (boolean)
                 If this parameter is set to true , the  instance  is  enabled
                 for  hibernation;  otherwise,  it is not enabled for hiberna-
                 tion.

          MetadataOptions -> (structure)
              The metadata options for the instance. For more information, see
              Instance  metadata  and  user data in the Amazon Elastic Compute
              Cloud User Guide .

              State -> (string)
                 The state of the metadata option changes.
                     pending - The metadata options are being updated and  the
                     instance  is  not  ready to process metadata traffic with
                     the new selection.

                     applied - The metadata options have been successfully ap-
                     plied on the instance.

              HttpTokens -> (string)
                 The state of token usage for your instance metadata requests.
                 If the parameter is not specified in the request, the default
                 state is optional .

                 If  the  state  is  optional , you can choose to retrieve in-
                 stance metadata with or without a signed token header on your
                 request.  If  you retrieve the IAM role credentials without a
                 token, the version 1.0 role credentials are returned. If  you
                 retrieve the IAM role credentials using a valid signed token,
                 the version 2.0 role credentials are returned.

                 If the state is required ,  you  must  send  a  signed  token
                 header with any instance metadata retrieval requests. In this
                 state, retrieving the IAM role credentials always returns the
                 version  2.0 credentials; the version 1.0 credentials are not
                 available.

              HttpPutResponseHopLimit -> (integer)
                 The desired HTTP PUT response hop limit for instance metadata
                 requests.  The  larger the number, the further instance meta-
                 data requests can travel.

                 Default: 1

                 Possible values: Integers from 1 to 64

              HttpEndpoint -> (string)
                 Enables or disables the HTTP metadata endpoint  on  your  in-
                 stances. If the parameter is not specified, the default state
                 is enabled .

                 NOTE:
                     If you specify a value of disabled , you will not be able
                     to access your instance metadata.

              HttpProtocolIpv6 -> (string)
                 Enables  or disables the IPv6 endpoint for the instance meta-
                 data service.

                 Default: disabled

              InstanceMetadataTags -> (string)
                 Set to enabled to allow access to instance tags from the  in-
                 stance  metadata.  Set  to disabled to turn off access to in-
                 stance tags from the instance metadata. For more information,
                 see Work with instance tags using the instance metadata .

                 Default: disabled

          EnclaveOptions -> (structure)
              Indicates  whether  the  instance is enabled for Amazon Web Ser-
              vices Nitro Enclaves.

              Enabled -> (boolean)
                 If this parameter is set to true , the  instance  is  enabled
                 for  Amazon Web Services Nitro Enclaves; otherwise, it is not
                 enabled for Amazon Web Services Nitro Enclaves.

          InstanceRequirements -> (structure)
              The attributes for the instance types. When you specify instance
              attributes,  Amazon  EC2 will identify instance types with these
              attributes.

              If you specify InstanceRequirements  ,  you  can't  specify  In-
              stanceTypes .

              VCpuCount -> (structure)
                 The minimum and maximum number of vCPUs.

                 Min -> (integer)
                     The minimum number of vCPUs. If the value is 0 , there is
                     no minimum limit.

                 Max -> (integer)
                     The maximum number of vCPUs. If  this  parameter  is  not
                     specified, there is no maximum limit.

              MemoryMiB -> (structure)
                 The minimum and maximum amount of memory, in MiB.

                 Min -> (integer)
                     The  minimum  amount of memory, in MiB. If this parameter
                     is not specified, there is no minimum limit.

                 Max -> (integer)
                     The maximum amount of memory, in MiB. If  this  parameter
                     is not specified, there is no maximum limit.

              CpuManufacturers -> (list)
                 The CPU manufacturers to include.

                 o For instance types with Intel CPUs, specify intel .

                 o For instance types with AMD CPUs, specify amd .

                 o For  instance  types with Amazon Web Services CPUs, specify
                   amazon-web-services .

                 NOTE:
                     Don't confuse the CPU manufacturer with the CPU architec-
                     ture.  Instances  will  be launched with a compatible CPU
                     architecture based on the Amazon Machine Image (AMI) that
                     you specify in your launch template.

                 Default: Any manufacturer

                 (string)

              MemoryGiBPerVCpu -> (structure)
                 The minimum and maximum amount of memory per vCPU, in GiB.

                 Default: No minimum or maximum limits

                 Min -> (double)
                     The  minimum  amount  of memory per vCPU, in GiB. If this
                     parameter is not specified, there is no minimum limit.

                 Max -> (double)
                     The maximum amount of memory per vCPU, in  GiB.  If  this
                     parameter is not specified, there is no maximum limit.

              ExcludedInstanceTypes -> (list)
                 The  instance  types to exclude. You can use strings with one
                 or more wild cards, represented by an asterisk (* ),  to  ex-
                 clude  an  instance  type, size, or generation. The following
                 are examples: m5.8xlarge , c5*.* , m5a.* , r* , *3* .

                 For example, if you specify c5* ,Amazon EC2 will exclude  the
                 entire C5 instance family, which includes all C5a and C5n in-
                 stance types. If you specify m5a.* , Amazon EC2 will  exclude
                 all the M5a instance types, but not the M5n instance types.

                 Default: No excluded instance types

                 (string)

              InstanceGenerations -> (list)
                 Indicates  whether  current  or  previous generation instance
                 types are included. The current generation instance types are
                 recommended  for  use.  Current generation instance types are
                 typically the latest two to three  generations  in  each  in-
                 stance  family.  For  more information, see Instance types in
                 the Amazon EC2 User Guide .

                 For current generation instance types, specify current .

                 For previous generation instance types, specify previous .

                 Default: Current and previous generation instance types

                 (string)

              SpotMaxPricePercentageOverLowestPrice -> (integer)
                 The price protection threshold for Spot  Instances.  This  is
                 the  maximum  youll  pay  for a Spot Instance, expressed as a
                 percentage above the least expensive current generation M, C,
                 or  R instance type with your specified attributes. When Ama-
                 zon EC2 selects instance types with your attributes,  it  ex-
                 cludes instance types priced above your threshold.

                 The parameter accepts an integer, which Amazon EC2 interprets
                 as a percentage.

                 To turn off price protection, specify a high value,  such  as
                 999999 .

                 This  parameter  is  not supported for GetSpotPlacementScores
                 and GetInstanceTypesFromInstanceRequirements .

                 NOTE:
                     If you set TargetCapacityUnitType to vcpu or memory-mib ,
                     the  price  protection  threshold is applied based on the
                     per-vCPU or per-memory price instead of the  per-instance
                     price.

                 Default: 100

              OnDemandMaxPricePercentageOverLowestPrice -> (integer)
                 The  price protection threshold for On-Demand Instances. This
                 is the maximum youll pay for an On-Demand Instance, expressed
                 as  a percentage above the least expensive current generation
                 M, C, or R instance type with your specified attributes. When
                 Amazon  EC2  selects  instance types with your attributes, it
                 excludes instance types priced above your threshold.

                 The parameter accepts an integer, which Amazon EC2 interprets
                 as a percentage.

                 To  turn  off price protection, specify a high value, such as
                 999999 .

                 This parameter is not  supported  for  GetSpotPlacementScores
                 and GetInstanceTypesFromInstanceRequirements .

                 NOTE:
                     If you set TargetCapacityUnitType to vcpu or memory-mib ,
                     the price protection threshold is applied  based  on  the
                     per-vCPU  or per-memory price instead of the per-instance
                     price.

                 Default: 20

              BareMetal -> (string)
                 Indicates whether bare metal instance types must be included,
                 excluded, or required.

                 o To include bare metal instance types, specify included .

                 o To require only bare metal instance types, specify required
                   .

                 o To exclude bare metal instance types, specify excluded .

                 Default: excluded

              BurstablePerformance -> (string)
                 Indicates whether burstable performance T instance types  are
                 included,  excluded,  or  required. For more information, see
                 Burstable performance instances .

                 o To include burstable performance  instance  types,  specify
                   included .

                 o To require only burstable performance instance types, spec-
                   ify required .

                 o To exclude burstable performance  instance  types,  specify
                   excluded .

                 Default: excluded

              RequireHibernateSupport -> (boolean)
                 Indicates whether instance types must support hibernation for
                 On-Demand Instances.

                 This parameter is not supported for GetSpotPlacementScores .

                 Default: false

              NetworkInterfaceCount -> (structure)
                 The minimum and maximum number of network interfaces.

                 Default: No minimum or maximum limits

                 Min -> (integer)
                     The minimum number of network interfaces. If this parame-
                     ter is not specified, there is no minimum limit.

                 Max -> (integer)
                     The maximum number of network interfaces. If this parame-
                     ter is not specified, there is no maximum limit.

              LocalStorage -> (string)
                 Indicates whether instance types with instance store  volumes
                 are  included,  excluded,  or required. For more information,
                 Amazon EC2 instance store in the Amazon EC2 User Guide .

                 o To include instance  types  with  instance  store  volumes,
                   specify included .

                 o To require only instance types with instance store volumes,
                   specify required .

                 o To exclude instance  types  with  instance  store  volumes,
                   specify excluded .

                 Default: included

              LocalStorageTypes -> (list)
                 The type of local storage that is required.

                 o For  instance  types  with  hard  disk drive (HDD) storage,
                   specify hdd .

                 o For instance types with solid state  drive  (SSD)  storage,
                   specify ssd .

                 Default: hdd and ssd

                 (string)

              TotalLocalStorageGB -> (structure)
                 The minimum and maximum amount of total local storage, in GB.

                 Default: No minimum or maximum limits

                 Min -> (double)
                     The minimum amount of total local storage, in GB. If this
                     parameter is not specified, there is no minimum limit.

                 Max -> (double)
                     The maximum amount of total local storage, in GB. If this
                     parameter is not specified, there is no maximum limit.

              BaselineEbsBandwidthMbps -> (structure)
                 The  minimum and maximum baseline bandwidth to Amazon EBS, in
                 Mbps. For more information, see Amazon EBSoptimized instances
                 in the Amazon EC2 User Guide .

                 Default: No minimum or maximum limits

                 Min -> (integer)
                     The  minimum baseline bandwidth, in Mbps. If this parame-
                     ter is not specified, there is no minimum limit.

                 Max -> (integer)
                     The maximum baseline bandwidth, in Mbps. If this  parame-
                     ter is not specified, there is no maximum limit.

              AcceleratorTypes -> (list)
                 The accelerator types that must be on the instance type.

                 o For instance types with GPU accelerators, specify gpu .

                 o For instance types with FPGA accelerators, specify fpga .

                 o For instance types with inference accelerators, specify in-
                   ference .

                 Default: Any accelerator type

                 (string)

              AcceleratorCount -> (structure)
                 The minimum and maximum number of accelerators (GPUs,  FPGAs,
                 or Amazon Web Services Inferentia chips) on an instance.

                 To exclude accelerator-enabled instance types, set Max to 0 .

                 Default: No minimum or maximum limits

                 Min -> (integer)
                     The  minimum number of accelerators. If this parameter is
                     not specified, there is no minimum limit.

                 Max -> (integer)
                     The maximum number of accelerators. If this parameter  is
                     not specified, there is no maximum limit.

              AcceleratorManufacturers -> (list)
                 Indicates  whether  instance  types must have accelerators by
                 specific manufacturers.

                 o For instance types with NVIDIA devices, specify nvidia .

                 o For instance types with AMD devices, specify amd .

                 o For instance types with Amazon Web Services devices,  spec-
                   ify amazon-web-services .

                 o For instance types with Xilinx devices, specify xilinx .

                 Default: Any manufacturer

                 (string)

              AcceleratorNames -> (list)
                 The accelerators that must be on the instance type.

                 o For instance types with NVIDIA A100 GPUs, specify a100 .

                 o For instance types with NVIDIA V100 GPUs, specify v100 .

                 o For instance types with NVIDIA K80 GPUs, specify k80 .

                 o For instance types with NVIDIA T4 GPUs, specify t4 .

                 o For instance types with NVIDIA M60 GPUs, specify m60 .

                 o For  instance  types with AMD Radeon Pro V520 GPUs, specify
                   radeon-pro-v520 .

                 o For instance types with Xilinx VU9P FPGAs, specify vu9p .

                 Default: Any accelerator

                 (string)

              AcceleratorTotalMemoryMiB -> (structure)
                 The minimum and maximum amount of total  accelerator  memory,
                 in MiB.

                 Default: No minimum or maximum limits

                 Min -> (integer)
                     The minimum amount of accelerator memory, in MiB. If this
                     parameter is not specified, there is no minimum limit.

                 Max -> (integer)
                     The maximum amount of accelerator memory, in MiB. If this
                     parameter is not specified, there is no maximum limit.

          PrivateDnsNameOptions -> (structure)
              The options for the instance hostname.

              HostnameType -> (string)
                 The type of hostname to assign to an instance.

              EnableResourceNameDnsARecord -> (boolean)
                 Indicates  whether  to  respond  to  DNS queries for instance
                 hostnames with DNS A records.

              EnableResourceNameDnsAAAARecord -> (boolean)
                 Indicates whether to respond  to  DNS  queries  for  instance
                 hostnames with DNS AAAA records.

          MaintenanceOptions -> (structure)
              The maintenance options for your instance.

              AutoRecovery -> (string)
                 Disables  the automatic recovery behavior of your instance or
                 sets it to default.

          DisableApiStop -> (boolean)
              Indicates whether the instance is enabled for  stop  protection.
              For more information, see Stop Protection .



                                                    GET-LAUNCH-TEMPLATE-DATA()
