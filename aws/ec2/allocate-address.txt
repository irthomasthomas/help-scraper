ALLOCATE-ADDRESS()                                          ALLOCATE-ADDRESS()



NAME
       allocate-address -

DESCRIPTION
       Allocates  an  Elastic  IP address to your Amazon Web Services account.
       After you allocate the Elastic IP address you can associate it with  an
       instance or network interface. After you release an Elastic IP address,
       it is released to the IP address pool and can be allocated to a differ-
       ent Amazon Web Services account.

       You  can  allocate  an Elastic IP address from an address pool owned by
       Amazon Web Services or from an address pool created from a public  IPv4
       address range that you have brought to Amazon Web Services for use with
       your Amazon Web Services resources using bring your  own  IP  addresses
       (BYOIP).  For more information, see Bring Your Own IP Addresses (BYOIP)
       in the Amazon EC2 User Guide .

       If you release an Elastic IP address, you might be able to recover  it.
       You  cannot recover an Elastic IP address that you released after it is
       allocated to another Amazon Web Services account. To attempt to recover
       an Elastic IP address that you released, specify it in this operation.

       For  more  information, see Elastic IP Addresses in the Amazon EC2 User
       Guide .

       You can allocate a carrier IP address which is a public IP address from
       a  telecommunication carrier, to a network interface which resides in a
       subnet in a Wavelength Zone (for example an EC2 instance).

       See also: AWS API Documentation

SYNOPSIS
            allocate-address
          [--domain <value>]
          [--address <value>]
          [--public-ipv4-pool <value>]
          [--network-border-group <value>]
          [--customer-owned-ipv4-pool <value>]
          [--dry-run | --no-dry-run]
          [--tag-specifications <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --domain (string)
          The network (vpc ).

          Possible values:

          o vpc

          o standard

       --address (string)
          The Elastic IP address to recover or an IPv4 address from an address
          pool.

       --public-ipv4-pool (string)
          The  ID  of  an address pool that you own. Use this parameter to let
          Amazon EC2 select an address from the address  pool.  To  specify  a
          specific  address  from  the address pool, use the Address parameter
          instead.

       --network-border-group (string)
          A unique set of Availability Zones, Local Zones, or Wavelength Zones
          from which Amazon Web Services advertises IP addresses. Use this pa-
          rameter to limit the IP address to this location. IP addresses  can-
          not move between network border groups.

       --customer-owned-ipv4-pool (string)
          The  ID  of a customer-owned address pool. Use this parameter to let
          Amazon EC2 select an address from the address  pool.  Alternatively,
          specify a specific address from the address pool.

       --dry-run | --no-dry-run (boolean)
          Checks  whether  you  have  the required permissions for the action,
          without actually making the request, and provides an error response.
          If  you have the required permissions, the error response is DryRun-
          Operation . Otherwise, it is UnauthorizedOperation .

       --tag-specifications (list)
          The tags to assign to the Elastic IP address.

          (structure)
              The tags to apply to a resource when the resource is being  cre-
              ated. When you specify a tag, you must specify the resource type
              to tag, otherwise the request will fail.

              NOTE:
                 The Valid Values lists all the resource  types  that  can  be
                 tagged.  However,  the  action you're using might not support
                 tagging all of these resource types. If you try to tag a  re-
                 source  type that is unsupported for the action you're using,
                 you'll get an error.

              ResourceType -> (string)
                 The type of resource to tag on creation.

              Tags -> (list)
                 The tags to apply to the resource.

                 (structure)
                     Describes a tag.

                     Key -> (string)
                        The key of the tag.

                        Constraints: Tag keys are case-sensitive and accept  a
                        maximum  of 127 Unicode characters. May not begin with
                        aws: .

                     Value -> (string)
                        The value of the tag.

                        Constraints: Tag values are case-sensitive and  accept
                        a maximum of 256 Unicode characters.

       Shorthand Syntax:

          ResourceType=string,Tags=[{Key=string,Value=string},{Key=string,Value=string}] ...

       JSON Syntax:

          [
            {
              "ResourceType": "capacity-reservation"|"client-vpn-endpoint"|"customer-gateway"|"carrier-gateway"|"coip-pool"|"dedicated-host"|"dhcp-options"|"egress-only-internet-gateway"|"elastic-ip"|"elastic-gpu"|"export-image-task"|"export-instance-task"|"fleet"|"fpga-image"|"host-reservation"|"image"|"import-image-task"|"import-snapshot-task"|"instance"|"instance-event-window"|"internet-gateway"|"ipam"|"ipam-pool"|"ipam-scope"|"ipv4pool-ec2"|"ipv6pool-ec2"|"key-pair"|"launch-template"|"local-gateway"|"local-gateway-route-table"|"local-gateway-virtual-interface"|"local-gateway-virtual-interface-group"|"local-gateway-route-table-vpc-association"|"local-gateway-route-table-virtual-interface-group-association"|"natgateway"|"network-acl"|"network-interface"|"network-insights-analysis"|"network-insights-path"|"network-insights-access-scope"|"network-insights-access-scope-analysis"|"placement-group"|"prefix-list"|"replace-root-volume-task"|"reserved-instances"|"route-table"|"security-group"|"security-group-rule"|"snapshot"|"spot-fleet-request"|"spot-instances-request"|"subnet"|"subnet-cidr-reservation"|"traffic-mirror-filter"|"traffic-mirror-session"|"traffic-mirror-target"|"transit-gateway"|"transit-gateway-attachment"|"transit-gateway-connect-peer"|"transit-gateway-multicast-domain"|"transit-gateway-policy-table"|"transit-gateway-route-table"|"transit-gateway-route-table-announcement"|"volume"|"vpc"|"vpc-endpoint"|"vpc-endpoint-connection"|"vpc-endpoint-service"|"vpc-endpoint-service-permission"|"vpc-peering-connection"|"vpn-connection"|"vpn-gateway"|"vpc-flow-log"|"capacity-reservation-fleet"|"traffic-mirror-filter-rule"|"vpc-endpoint-connection-device-type"|"verified-access-instance"|"verified-access-group"|"verified-access-endpoint"|"verified-access-policy"|"verified-access-trust-provider"|"vpn-connection-device-type"|"vpc-block-public-access-exclusion"|"vpc-encryption-control"|"ipam-resource-discovery"|"ipam-resource-discovery-association"|"instance-connect-endpoint"|"ipam-external-resource-verification-token",
              "Tags": [
                {
                  "Key": "string",
                  "Value": "string"
                }
                ...
              ]
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       Example 1: To allocate an Elastic IP address from Amazon's address pool

       The following allocate-address example allocates an Elastic IP address.
       Amazon EC2 selects the address from Amazon's address pool.

          aws ec2 allocate-address

       Output:

          {
              "PublicIp": "70.224.234.241",
              "AllocationId": "eipalloc-01435ba59eEXAMPLE",
              "PublicIpv4Pool": "amazon",
              "NetworkBorderGroup": "us-west-2",
              "Domain": "vpc"
          }

       For more information, see Elastic IP addresses in the Amazon  EC2  User
       Guide.

       Example  2:  To  allocate an Elastic IP address and associate it with a
       network border group

       The following allocate-address example allocates an Elastic IP  address
       and associates it with the specified network border group.

          aws ec2 allocate-address \
              --network-border-group us-west-2-lax-1

       Output:

          {
              "PublicIp": "70.224.234.241",
              "AllocationId": "eipalloc-e03dd489ceEXAMPLE",
              "PublicIpv4Pool": "amazon",
              "NetworkBorderGroup": "us-west-2-lax-1",
              "Domain": "vpc"
          }

       For  more  information, see Elastic IP addresses in the Amazon EC2 User
       Guide.

       Example 3: To allocate an Elastic IP address from an address pool  that
       you own

       The  following allocate-address example allocates an Elastic IP address
       from an address pool that you have brought to your Amazon Web  Services
       account. Amazon EC2 selects the address from the address pool.

          aws ec2 allocate-address \
              --public-ipv4-pool ipv4pool-ec2-1234567890abcdef0

       Output:

          {
              "AllocationId": "eipalloc-02463d08ceEXAMPLE",
              "NetworkBorderGroup": "us-west-2",
              "CustomerOwnedIp": "18.218.95.81",
              "CustomerOwnedIpv4Pool": "ipv4pool-ec2-1234567890abcdef0",
              "Domain": "vpc"
              "NetworkBorderGroup": "us-west-2",
          }

       For  more  information, see Elastic IP addresses in the Amazon EC2 User
       Guide.

OUTPUT
       PublicIp -> (string)
          The Elastic IP address.

       AllocationId -> (string)
          The ID that represents the allocation of the Elastic IP address.

       PublicIpv4Pool -> (string)
          The ID of an address pool.

       NetworkBorderGroup -> (string)
          The set of Availability Zones, Local Zones, or Wavelength Zones from
          which Amazon Web Services advertises IP addresses.

       Domain -> (string)
          The network (vpc ).

       CustomerOwnedIp -> (string)
          The customer-owned IP address.

       CustomerOwnedIpv4Pool -> (string)
          The ID of the customer-owned address pool.

       CarrierIp -> (string)
          The  carrier  IP  address. This option is only available for network
          interfaces that reside in a subnet in a Wavelength Zone.



                                                            ALLOCATE-ADDRESS()
