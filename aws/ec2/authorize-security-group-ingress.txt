AUTHORIZE-SECURITY-GROUP-INGRESS()          AUTHORIZE-SECURITY-GROUP-INGRESS()



NAME
       authorize-security-group-ingress -

       NOTE:
          To  specify  multiple rules in a single command use the --ip-permis-
          sions option

DESCRIPTION
       Adds the specified inbound (ingress) rules to a security group.

       An inbound rule permits instances to receive traffic from the specified
       IPv4 or IPv6 CIDR address range, or from the instances that are associ-
       ated with the specified destination security groups. When specifying an
       inbound  rule  for your security group in a VPC, the IpPermissions must
       include a source for the traffic.

       You specify a protocol for each rule (for example, TCP).  For  TCP  and
       UDP,  you  must  also  specify  the destination port or port range. For
       ICMP/ICMPv6, you must also specify the ICMP/ICMPv6 type and  code.  You
       can use -1 to mean all types or all codes.

       Rule  changes  are propagated to instances within the security group as
       quickly as possible. However, a small delay might occur.

       For more information about VPC security group quotas,  see  Amazon  VPC
       quotas .

       NOTE:
          We  are  retiring  EC2-Classic.  We  recommend that you migrate from
          EC2-Classic to  a  VPC.  For  more  information,  see  Migrate  from
          EC2-Classic  to a VPC in the Amazon Elastic Compute Cloud User Guide
          .

       See also: AWS API Documentation

SYNOPSIS
            authorize-security-group-ingress
          [--group-id <value>]
          [--group-name <value>]
          [--ip-permissions <value>]
          [--dry-run | --no-dry-run]
          [--tag-specifications <value>]
          [--protocol <value>]
          [--port <value>]
          [--cidr <value>]
          [--source-group <value>]
          [--group-owner <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --group-id (string)
          The ID of the security group. You must specify either  the  security
          group  ID  or  the  security group name in the request. For security
          groups in a nondefault VPC, you must specify the security group ID.

       --group-name (string)
          [EC2-Classic, default VPC] The name of the security group. You  must
          specify  either  the security group ID or the security group name in
          the request. For security groups in a nondefault VPC, you must spec-
          ify the security group ID.

       --ip-permissions (list)
          The sets of IP permissions.

          (structure)
              Describes a set of permissions for a security group rule.

              FromPort -> (integer)
                 If  the protocol is TCP or UDP, this is the start of the port
                 range. If the protocol is ICMP or ICMPv6, this  is  the  type
                 number. A value of -1 indicates all ICMP/ICMPv6 types. If you
                 specify  all  ICMP/ICMPv6  types,  you   must   specify   all
                 ICMP/ICMPv6 codes.

              IpProtocol -> (string)
                 The  IP  protocol name (tcp , udp , icmp , icmpv6 ) or number
                 (see Protocol Numbers ).

                 [VPC only] Use -1 to specify all protocols. When  authorizing
                 security  group  rules,  specifying  -1  or a protocol number
                 other than tcp , udp , icmp , or icmpv6 allows traffic on all
                 ports,  regardless  of  any port range you specify. For tcp ,
                 udp , and icmp , you must specify a port range. For icmpv6  ,
                 the port range is optional; if you omit the port range, traf-
                 fic for all types and codes is allowed.

              IpRanges -> (list)
                 The IPv4 ranges.

                 (structure)
                     Describes an IPv4 range.

                     CidrIp -> (string)
                        The IPv4 CIDR range. You can  either  specify  a  CIDR
                        range or a source security group, not both. To specify
                        a single IPv4 address, use the /32 prefix length.

                     Description -> (string)
                        A description for the security group rule that  refer-
                        ences this IPv4 address range.

                        Constraints:  Up  to 255 characters in length. Allowed
                        characters   are   a-z,   A-Z,   0-9,   spaces,    and
                        ._-:/()#,@[]+=&;{}!$*

              Ipv6Ranges -> (list)
                 [VPC only] The IPv6 ranges.

                 (structure)
                     [EC2-VPC only] Describes an IPv6 range.

                     CidrIpv6 -> (string)
                        The  IPv6  CIDR  range.  You can either specify a CIDR
                        range or a source security group, not both. To specify
                        a single IPv6 address, use the /128 prefix length.

                     Description -> (string)
                        A  description for the security group rule that refer-
                        ences this IPv6 address range.

                        Constraints: Up to 255 characters in  length.  Allowed
                        characters    are   a-z,   A-Z,   0-9,   spaces,   and
                        ._-:/()#,@[]+=&;{}!$*

              PrefixListIds -> (list)
                 [VPC only] The prefix list IDs.

                 (structure)
                     Describes a prefix list ID.

                     Description -> (string)
                        A description for the security group rule that  refer-
                        ences this prefix list ID.

                        Constraints:  Up  to 255 characters in length. Allowed
                        characters   are   a-z,   A-Z,   0-9,   spaces,    and
                        ._-:/()#,@[]+=;{}!$*

                     PrefixListId -> (string)
                        The ID of the prefix.

              ToPort -> (integer)
                 If  the  protocol  is TCP or UDP, this is the end of the port
                 range. If the protocol is ICMP or ICMPv6, this is the code. A
                 value  of  -1 indicates all ICMP/ICMPv6 codes. If you specify
                 all ICMP/ICMPv6  types,  you  must  specify  all  ICMP/ICMPv6
                 codes.

              UserIdGroupPairs -> (list)
                 The security group and Amazon Web Services account ID pairs.

                 (structure)
                     Describes  a  security  group and Amazon Web Services ac-
                     count ID pair.

                     NOTE:
                        We are retiring EC2-Classic. We recommend that you mi-
                        grate from EC2-Classic to a VPC. For more information,
                        see Migrate from EC2-Classic to a VPC  in  the  Amazon
                        Elastic Compute Cloud User Guide .

                     Description -> (string)
                        A  description for the security group rule that refer-
                        ences this user ID group pair.

                        Constraints: Up to 255 characters in  length.  Allowed
                        characters    are   a-z,   A-Z,   0-9,   spaces,   and
                        ._-:/()#,@[]+=;{}!$*

                     GroupId -> (string)
                        The ID of the security group.

                     GroupName -> (string)
                        The name of the security group. In a request, use this
                        parameter for a security group in EC2-Classic or a de-
                        fault VPC only. For a security group in  a  nondefault
                        VPC, use the security group ID.

                        For  a  referenced security group in another VPC, this
                        value is not returned if the referenced security group
                        is deleted.

                     PeeringStatus -> (string)
                        The status of a VPC peering connection, if applicable.

                     UserId -> (string)
                        The ID of an Amazon Web Services account.

                        For  a  referenced  security group in another VPC, the
                        account ID of the referenced  security  group  is  re-
                        turned  in  the  response.  If the referenced security
                        group is deleted, this value is not returned.

                        [EC2-Classic] Required when adding or  removing  rules
                        that  reference a security group in another Amazon Web
                        Services account.

                     VpcId -> (string)
                        The ID of the VPC for the referenced  security  group,
                        if applicable.

                     VpcPeeringConnectionId -> (string)
                        The ID of the VPC peering connection, if applicable.

       Shorthand Syntax:

          FromPort=integer,IpProtocol=string,IpRanges=[{CidrIp=string,Description=string},{CidrIp=string,Description=string}],Ipv6Ranges=[{CidrIpv6=string,Description=string},{CidrIpv6=string,Description=string}],PrefixListIds=[{Description=string,PrefixListId=string},{Description=string,PrefixListId=string}],ToPort=integer,UserIdGroupPairs=[{Description=string,GroupId=string,GroupName=string,PeeringStatus=string,UserId=string,VpcId=string,VpcPeeringConnectionId=string},{Description=string,GroupId=string,GroupName=string,PeeringStatus=string,UserId=string,VpcId=string,VpcPeeringConnectionId=string}] ...

       JSON Syntax:

          [
            {
              "FromPort": integer,
              "IpProtocol": "string",
              "IpRanges": [
                {
                  "CidrIp": "string",
                  "Description": "string"
                }
                ...
              ],
              "Ipv6Ranges": [
                {
                  "CidrIpv6": "string",
                  "Description": "string"
                }
                ...
              ],
              "PrefixListIds": [
                {
                  "Description": "string",
                  "PrefixListId": "string"
                }
                ...
              ],
              "ToPort": integer,
              "UserIdGroupPairs": [
                {
                  "Description": "string",
                  "GroupId": "string",
                  "GroupName": "string",
                  "PeeringStatus": "string",
                  "UserId": "string",
                  "VpcId": "string",
                  "VpcPeeringConnectionId": "string"
                }
                ...
              ]
            }
            ...
          ]

       --dry-run | --no-dry-run (boolean)
          Checks  whether  you  have  the required permissions for the action,
          without actually making the request, and provides an error response.
          If  you have the required permissions, the error response is DryRun-
          Operation . Otherwise, it is UnauthorizedOperation .

       --tag-specifications (list)
          [VPC Only] The tags applied to the security group rule.

          (structure)
              The tags to apply to a resource when the resource is being  cre-
              ated.

              NOTE:
                 The  Valid  Values  lists  all the resource types that can be
                 tagged. However, the action you're using  might  not  support
                 tagging  all of these resource types. If you try to tag a re-
                 source type that is unsupported for the action you're  using,
                 you'll get an error.

              ResourceType -> (string)
                 The type of resource to tag on creation.

              Tags -> (list)
                 The tags to apply to the resource.

                 (structure)
                     Describes a tag.

                     Key -> (string)
                        The key of the tag.

                        Constraints:  Tag keys are case-sensitive and accept a
                        maximum of 127 Unicode characters. May not begin  with
                        aws: .

                     Value -> (string)
                        The value of the tag.

                        Constraints:  Tag values are case-sensitive and accept
                        a maximum of 256 Unicode characters.

       Shorthand Syntax:

          ResourceType=string,Tags=[{Key=string,Value=string},{Key=string,Value=string}] ...

       JSON Syntax:

          [
            {
              "ResourceType": "capacity-reservation"|"client-vpn-endpoint"|"customer-gateway"|"carrier-gateway"|"coip-pool"|"dedicated-host"|"dhcp-options"|"egress-only-internet-gateway"|"elastic-ip"|"elastic-gpu"|"export-image-task"|"export-instance-task"|"fleet"|"fpga-image"|"host-reservation"|"image"|"import-image-task"|"import-snapshot-task"|"instance"|"instance-event-window"|"internet-gateway"|"ipam"|"ipam-pool"|"ipam-scope"|"ipv4pool-ec2"|"ipv6pool-ec2"|"key-pair"|"launch-template"|"local-gateway"|"local-gateway-route-table"|"local-gateway-virtual-interface"|"local-gateway-virtual-interface-group"|"local-gateway-route-table-vpc-association"|"local-gateway-route-table-virtual-interface-group-association"|"natgateway"|"network-acl"|"network-interface"|"network-insights-analysis"|"network-insights-path"|"network-insights-access-scope"|"network-insights-access-scope-analysis"|"placement-group"|"prefix-list"|"replace-root-volume-task"|"reserved-instances"|"route-table"|"security-group"|"security-group-rule"|"snapshot"|"spot-fleet-request"|"spot-instances-request"|"subnet"|"subnet-cidr-reservation"|"traffic-mirror-filter"|"traffic-mirror-session"|"traffic-mirror-target"|"transit-gateway"|"transit-gateway-attachment"|"transit-gateway-connect-peer"|"transit-gateway-multicast-domain"|"transit-gateway-policy-table"|"transit-gateway-route-table"|"transit-gateway-route-table-announcement"|"volume"|"vpc"|"vpc-endpoint"|"vpc-endpoint-connection"|"vpc-endpoint-service"|"vpc-endpoint-service-permission"|"vpc-peering-connection"|"vpn-connection"|"vpn-gateway"|"vpc-flow-log"|"capacity-reservation-fleet"|"traffic-mirror-filter-rule"|"vpc-endpoint-connection-device-type"|"verified-access-instance"|"verified-access-group"|"verified-access-endpoint"|"verified-access-policy"|"verified-access-trust-provider"|"vpn-connection-device-type"|"vpc-block-public-access-exclusion",
              "Tags": [
                {
                  "Key": "string",
                  "Value": "string"
                }
                ...
              ]
            }
            ...
          ]

       --protocol (string)
          The IP protocol: tcp | udp | icmp

          (VPC only) Use all to specify all protocols.

          If this argument is provided without also providing the  port  argu-
          ment,  then it will be applied to all ports for the specified proto-
          col.

       --port (string)
          For TCP or UDP: The range of ports to allow. A single integer  or  a
          range (min-max ).

          For  ICMP: A single integer or a range (type-code ) representing the
          ICMP type number and the ICMP code number respectively. A  value  of
          -1  indicates  all ICMP codes for all ICMP types. A value of -1 just
          for type indicates all ICMP codes for the specified ICMP type.

       --cidr (string)
          The CIDR IP range.

       --source-group (string)
          The name or ID of the source security group.

       --group-owner (string)
          The AWS account ID that owns the source security  group.  Cannot  be
          used when specifying a CIDR IP address.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       Example 1: To add a rule that allows inbound SSH traffic

       The following authorize-security-group-ingress example adds a rule that
       allows inbound traffic on TCP port 22 (SSH).

          aws ec2 authorize-security-group-ingress \
              --group-id sg-1234567890abcdef0 \
              --protocol tcp \
              --port 22 \
              --cidr 203.0.113.0/24

       Output:

          {
              "Return": true,
              "SecurityGroupRules": [
                  {
                      "SecurityGroupRuleId": "sgr-01afa97ef3e1bedfc",
                      "GroupId": "sg-1234567890abcdef0",
                      "GroupOwnerId": "123456789012",
                      "IsEgress": false,
                      "IpProtocol": "tcp",
                      "FromPort": 22,
                      "ToPort": 22,
                      "CidrIpv4": "203.0.113.0/24"
                  }
              ]
          }

       Example 2: To add a rule that allows inbound HTTP traffic from  another
       security group

       The following authorize-security-group-ingress example adds a rule that
       allows inbound access on TCP port 80 from  the  source  security  group
       sg-1a2b3c4d.  The source group must be in the same VPC or in a peer VPC
       (requires a VPC peering connection). Incoming traffic is allowed  based
       on  the  private IP addresses of instances that are associated with the
       source security group (not the public IP  address  or  Elastic  IP  ad-
       dress).

          aws ec2 authorize-security-group-ingress \
              --group-id sg-1234567890abcdef0 \
              --protocol tcp \
              --port 80 \
              --source-group sg-1a2b3c4d

       Output:

          {
              "Return": true,
              "SecurityGroupRules": [
                  {
                      "SecurityGroupRuleId": "sgr-01f4be99110f638a7",
                      "GroupId": "sg-1234567890abcdef0",
                      "GroupOwnerId": "123456789012",
                      "IsEgress": false,
                      "IpProtocol": "tcp",
                      "FromPort": 80,
                      "ToPort": 80,
                      "ReferencedGroupInfo": {
                          "GroupId": "sg-1a2b3c4d",
                          "UserId": "123456789012"
                      }
                  }
              ]
          }

       Example 3: To add multiple rules in the same call

       The following authorize-security-group-ingress example uses the ip-per-
       missions parameter to add two inbound rules, one that  enables  inbound
       access on TCP port 3389 (RDP) and the other that enables ping/ICMP.

          aws ec2 authorize-security-group-ingress
                 --group-id   sg-1234567890abcdef0  --ip-permissions  IpProto-
                 col=tcp,FromPort=3389,ToPort=3389,IpRanges="[{CidrIp=172.31.0.0/16}]"
                 IpProto-
                 col=icmp,FromPort=-1,ToPort=-1,IpRanges="[{CidrIp=172.31.0.0/16}]"

       Output:

          {
              "Return": true,
              "SecurityGroupRules": [
                  {
                      "SecurityGroupRuleId": "sgr-00e06e5d3690f29f3",
                      "GroupId": "sg-1234567890abcdef0",
                      "GroupOwnerId": "123456789012",
                      "IsEgress": false,
                      "IpProtocol": "tcp",
                      "FromPort": 3389,
                      "ToPort": 3389,
                      "CidrIpv4": "172.31.0.0/16"
                  },
                  {
                      "SecurityGroupRuleId": "sgr-0a133dd4493944b87",
                      "GroupId": "sg-1234567890abcdef0",
                      "GroupOwnerId": "123456789012",
                      "IsEgress": false,
                      "IpProtocol": "tcp",
                      "FromPort": -1,
                      "ToPort": -1,
                      "CidrIpv4": "172.31.0.0/16"
                  }
              ]
          }

       Example 4: To add a rule for ICMP traffic

       The following authorize-security-group-ingress example uses the ip-per-
       missions parameter to add an inbound rule that allows the ICMP  message
       Destination  Unreachable:  Fragmentation  Needed and Don't Fragment was
       Set (Type 3, Code 4) from anywhere.

          aws ec2 authorize-security-group-ingress
                 --group-id  sg-1234567890abcdef0  --ip-permissions   IpProto-
                 col=icmp,FromPort=3,ToPort=4,IpRanges="[{CidrIp=0.0.0.0/0}]"

       Output:

          {
              "Return": true,
              "SecurityGroupRules": [
                  {
                      "SecurityGroupRuleId": "sgr-0de3811019069b787",
                      "GroupId": "sg-1234567890abcdef0",
                      "GroupOwnerId": "123456789012",
                      "IsEgress": false,
                      "IpProtocol": "icmp",
                      "FromPort": 3,
                      "ToPort": 4,
                      "CidrIpv4": "0.0.0.0/0"
                  }
              ]
          }

       Example 5: To add a rule for IPv6 traffic

       The following authorize-security-group-ingress example uses the ip-per-
       missions parameter to add an inbound rule that allows SSH access  (port
       22) from the IPv6 range 2001:db8:1234:1a00::/64.

          aws ec2 authorize-security-group-ingress
                 --group-id   sg-1234567890abcdef0  --ip-permissions  IpProto-
                 col=tcp,FromPort=22,ToPort=22,Ipv6Ranges="[{CidrIpv6=2001:db8:1234:1a00::/64}]"

       Output:

          {
              "Return": true,
              "SecurityGroupRules": [
                  {
                      "SecurityGroupRuleId": "sgr-0455bc68b60805563",
                      "GroupId": "sg-1234567890abcdef0",
                      "GroupOwnerId": "123456789012",
                      "IsEgress": false,
                      "IpProtocol": "tcp",
                      "FromPort": 22,
                      "ToPort": 22,
                      "CidrIpv6": "2001:db8:1234:1a00::/64"
                  }
              ]
          }

       Example 6: To add a rule for ICMPv6 traffic

       The following authorize-security-group-ingress example uses the ip-per-
       missions parameter to add an inbound rule that  allows  ICMPv6  traffic
       from anywhere.

          aws ec2 authorize-security-group-ingress
                 --group-id   sg-1234567890abcdef0  --ip-permissions  IpProto-
                 col=icmpv6,Ipv6Ranges="[{CidrIpv6=::/0}]"

       Output:

          {
              "Return": true,
              "SecurityGroupRules": [
                  {
                      "SecurityGroupRuleId": "sgr-04b612d9363ab6327",
                      "GroupId": "sg-1234567890abcdef0",
                      "GroupOwnerId": "123456789012",
                      "IsEgress": false,
                      "IpProtocol": "icmpv6",
                      "FromPort": -1,
                      "ToPort": -1,
                      "CidrIpv6": "::/0"
                  }
              ]
          }

       Example 7: Add a rule with a description

       The following authorize-security-group-ingress example uses the ip-per-
       missions  parameter to add an inbound rule that allows RDP traffic from
       the specified IPv4 address range. The rule includes  a  description  to
       help you identify it later.

          aws ec2 authorize-security-group-ingress
                 --group-id   sg-1234567890abcdef0  --ip-permissions  IpProto-
                 col=tcp,FromPort=3389,ToPort=3389,IpRanges="[{CidrIp=203.0.113.0/24,De-
                 scription='RDP access from NY office'}]"

       Output:

          {
              "Return": true,
              "SecurityGroupRules": [
                  {
                      "SecurityGroupRuleId": "sgr-0397bbcc01e974db3",
                      "GroupId": "sg-1234567890abcdef0",
                      "GroupOwnerId": "123456789012",
                      "IsEgress": false,
                      "IpProtocol": "tcp",
                      "FromPort": 3389,
                      "ToPort": 3389,
                      "CidrIpv4": "203.0.113.0/24",
                      "Description": "RDP access from NY office"
                  }
              ]
          }

       Example 8: To add an inbound rule that uses a prefix list

       The following authorize-security-group-ingress example uses the ip-per-
       missions parameter to add an inbound rule that allows all  traffic  for
       the CIDR ranges in the specified prefix list.

          aws ec2 authorize-security-group-ingress
                 --group-id   sg-04a351bfe432d4e71  --ip-permissions  IpProto-
                 col=all,PrefixListIds="[{PrefixListId=pl-002dc3ec097de1514}]"

       Output:

          {
              "Return": true,
              "SecurityGroupRules": [
                  {
                      "SecurityGroupRuleId": "sgr-09c74b32f677c6c7c",
                      "GroupId": "sg-1234567890abcdef0",
                      "GroupOwnerId": "123456789012",
                      "IsEgress": false,
                      "IpProtocol": "-1",
                      "FromPort": -1,
                      "ToPort": -1,
                      "PrefixListId": "pl-0721453c7ac4ec009"
                  }
              ]
          }

       For more information, see Security groups in the Amazon VPC User Guide.

OUTPUT
       Return -> (boolean)
          Returns true if the request succeeds; otherwise, returns an error.

       SecurityGroupRules -> (list)
          Information about the inbound (ingress) security  group  rules  that
          were added.

          (structure)
              Describes a security group rule.

              SecurityGroupRuleId -> (string)
                 The ID of the security group rule.

              GroupId -> (string)
                 The ID of the security group.

              GroupOwnerId -> (string)
                 The ID of the Amazon Web Services account that owns the secu-
                 rity group.

              IsEgress -> (boolean)
                 Indicates whether the security  group  rule  is  an  outbound
                 rule.

              IpProtocol -> (string)
                 The  IP  protocol name (tcp , udp , icmp , icmpv6 ) or number
                 (see Protocol Numbers ).

                 Use -1 to specify all protocols.

              FromPort -> (integer)
                 If the protocol is TCP or UDP, this is the start of the  port
                 range.  If  the  protocol is ICMP or ICMPv6, this is the type
                 number. A value of -1 indicates all ICMP/ICMPv6 types. If you
                 specify   all   ICMP/ICMPv6   types,  you  must  specify  all
                 ICMP/ICMPv6 codes.

              ToPort -> (integer)
                 If the protocol is TCP or UDP, this is the end  of  the  port
                 range.  If  the  protocol is ICMP or ICMPv6, this is the type
                 number. A value of -1 indicates all ICMP/ICMPv6 codes. If you
                 specify   all   ICMP/ICMPv6   types,  you  must  specify  all
                 ICMP/ICMPv6 codes.

              CidrIpv4 -> (string)
                 The IPv4 CIDR range.

              CidrIpv6 -> (string)
                 The IPv6 CIDR range.

              PrefixListId -> (string)
                 The ID of the prefix list.

              ReferencedGroupInfo -> (structure)
                 Describes the security group that is referenced in the rule.

                 GroupId -> (string)
                     The ID of the security group.

                 PeeringStatus -> (string)
                     The status of a VPC peering connection, if applicable.

                 UserId -> (string)
                     The Amazon Web Services account ID.

                 VpcId -> (string)
                     The ID of the VPC.

                 VpcPeeringConnectionId -> (string)
                     The ID of the VPC peering connection.

              Description -> (string)
                 The security group rule description.

              Tags -> (list)
                 The tags applied to the security group rule.

                 (structure)
                     Describes a tag.

                     Key -> (string)
                        The key of the tag.

                        Constraints: Tag keys are case-sensitive and accept  a
                        maximum  of 127 Unicode characters. May not begin with
                        aws: .

                     Value -> (string)
                        The value of the tag.

                        Constraints: Tag values are case-sensitive and  accept
                        a maximum of 256 Unicode characters.



                                            AUTHORIZE-SECURITY-GROUP-INGRESS()
