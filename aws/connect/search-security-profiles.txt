SEARCH-SECURITY-PROFILES()                          SEARCH-SECURITY-PROFILES()



NAME
       search-security-profiles -

DESCRIPTION
       This  API  is  in  preview release for Amazon Connect and is subject to
       change.

       Searches security profiles in an Amazon Connect instance, with optional
       filtering.

       See also: AWS API Documentation

       search-security-profiles  is  a paginated operation. Multiple API calls
       may be issued in order to retrieve the entire data set of results.  You
       can  disable  pagination by providing the --no-paginate argument.  When
       using --output text and the --query argument on a  paginated  response,
       the  --query argument must extract data from the results of the follow-
       ing query expressions: SecurityProfiles

SYNOPSIS
            search-security-profiles
          --instance-id <value>
          [--search-criteria <value>]
          [--search-filter <value>]
          [--cli-input-json <value>]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --instance-id (string)
          The identifier of the Amazon Connect instance. You can find the  in-
          stance ID in the Amazon Resource Name (ARN) of the instance.

       --search-criteria (structure)
          The search criteria to be used to return security profiles.

          NOTE:
              The  name  field  support "contains" queries with a minimum of 2
              characters and maximum of 25 characters. Any queries with  char-
              acter lengths outside of this range will throw invalid results.

          NOTE:
              The currently supported value for FieldName : name

          OrConditions -> (list)
              A  list of conditions which would be applied together with an OR
              condition.

              (structure)
                 The search criteria to be used to return security profiles.

                 NOTE:
                     The name field support "contains" queries with a  minimum
                     of 2 characters and maximum of 25 characters. Any queries
                     with character lengths outside of this range  will  throw
                     invalid results.

                 OrConditions -> (list)
                     A list of conditions which would be applied together with
                     an OR condition.

                     ( ... recursive ... )

                 AndConditions -> (list)
                     A list of conditions which would be applied together with
                     an AND condition.

                     ( ... recursive ... )

                 StringCondition -> (structure)
                     A  leaf  node  condition  which  can be used to specify a
                     string condition.

                     NOTE:
                        The currently supported value for FieldName : name

                     FieldName -> (string)
                        The name of the field in the string condition.

                     Value -> (string)
                        The value of the string.

                     ComparisonType -> (string)
                        The type of comparison to be made when evaluating  the
                        string condition.

          AndConditions -> (list)
              A list of conditions which would be applied together with an AND
              condition.

              (structure)
                 The search criteria to be used to return security profiles.

                 NOTE:
                     The name field support "contains" queries with a  minimum
                     of 2 characters and maximum of 25 characters. Any queries
                     with character lengths outside of this range  will  throw
                     invalid results.

                 OrConditions -> (list)
                     A list of conditions which would be applied together with
                     an OR condition.

                     ( ... recursive ... )

                 AndConditions -> (list)
                     A list of conditions which would be applied together with
                     an AND condition.

                     ( ... recursive ... )

                 StringCondition -> (structure)
                     A  leaf  node  condition  which  can be used to specify a
                     string condition.

                     NOTE:
                        The currently supported value for FieldName : name

                     FieldName -> (string)
                        The name of the field in the string condition.

                     Value -> (string)
                        The value of the string.

                     ComparisonType -> (string)
                        The type of comparison to be made when evaluating  the
                        string condition.

          StringCondition -> (structure)
              A leaf node condition which can be used to specify a string con-
              dition.

              NOTE:
                 The currently supported value for FieldName : name

              FieldName -> (string)
                 The name of the field in the string condition.

              Value -> (string)
                 The value of the string.

              ComparisonType -> (string)
                 The type of comparison to be made when evaluating the  string
                 condition.

       JSON Syntax:

          {
            "OrConditions": [
              {
                "OrConditions": [
                  { ... recursive ... }
                  ...
                ],
                "AndConditions": [
                  { ... recursive ... }
                  ...
                ],
                "StringCondition": {
                  "FieldName": "string",
                  "Value": "string",
                  "ComparisonType": "STARTS_WITH"|"CONTAINS"|"EXACT"
                }
              }
              ...
            ],
            "AndConditions": [
              {
                "OrConditions": [
                  { ... recursive ... }
                  ...
                ],
                "AndConditions": [
                  { ... recursive ... }
                  ...
                ],
                "StringCondition": {
                  "FieldName": "string",
                  "Value": "string",
                  "ComparisonType": "STARTS_WITH"|"CONTAINS"|"EXACT"
                }
              }
              ...
            ],
            "StringCondition": {
              "FieldName": "string",
              "Value": "string",
              "ComparisonType": "STARTS_WITH"|"CONTAINS"|"EXACT"
            }
          }

       --search-filter (structure)
          Filters to be applied to search results.

          TagFilter -> (structure)
              An  object that can be used to specify Tag conditions inside the
              SearchFilter . This accepts an OR of AND (List  of  List)  input
              where:

              o Top  level  list  specifies conditions that need to be applied
                with OR operator

              o Inner list specifies conditions that need to be  applied  with
                AND operator.

              OrConditions -> (list)
                 A  list of conditions which would be applied together with an
                 OR condition.

                 (list)
                     (structure)
                        A leaf node condition which can be used to  specify  a
                        tag condition, for example, HAVE BPO = 123 .

                        TagKey -> (string)
                            The tag key in the tag condition.

                        TagValue -> (string)
                            The tag value in the tag condition.

              AndConditions -> (list)
                 A  list of conditions which would be applied together with an
                 AND condition.

                 (structure)
                     A leaf node condition which can be used to specify a  tag
                     condition, for example, HAVE BPO = 123 .

                     TagKey -> (string)
                        The tag key in the tag condition.

                     TagValue -> (string)
                        The tag value in the tag condition.

              TagCondition -> (structure)
                 A leaf node condition which can be used to specify a tag con-
                 dition.

                 TagKey -> (string)
                     The tag key in the tag condition.

                 TagValue -> (string)
                     The tag value in the tag condition.

       JSON Syntax:

          {
            "TagFilter": {
              "OrConditions": [
                [
                  {
                    "TagKey": "string",
                    "TagValue": "string"
                  }
                  ...
                ]
                ...
              ],
              "AndConditions": [
                {
                  "TagKey": "string",
                  "TagValue": "string"
                }
                ...
              ],
              "TagCondition": {
                "TagKey": "string",
                "TagValue": "string"
              }
            }
          }

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --starting-token (string)
          A  token to specify where to start paginating. This is the NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The  size of each page to get in the AWS service call. This does not
          affect the number of items returned in the command's output. Setting
          a  smaller  page  size results in more calls to the AWS service, re-
          trieving fewer items in each call. This can  help  prevent  the  AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The total number of items to return in the command's output. If  the
          total  number of items available is more than the value specified, a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent command. Do not use the NextToken response element  directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       SecurityProfiles -> (list)
          Information about the security profiles.

          (structure)
              Information about the returned security profiles.

              Id -> (string)
                 The identifier of the security profile.

              OrganizationResourceId -> (string)
                 The organization resource identifier.

              Arn -> (string)
                 The Amazon Resource Name (ARN) of the security profile.

              SecurityProfileName -> (string)
                 The name of the security profile.

              Description -> (string)
                 The description of the security profile.

              Tags -> (map)
                 The tags used to organize, track, or control access for  this
                 resource.    For   example,   {   "tags":   {"key1":"value1",
                 "key2":"value2"} }.

                 key -> (string)

                 value -> (string)

       NextToken -> (string)
          If there are additional results, this is the token for the next  set
          of results.

       ApproximateTotalCount -> (long)
          The  total  number  of  security  profiles which matched your search
          query.



                                                    SEARCH-SECURITY-PROFILES()
