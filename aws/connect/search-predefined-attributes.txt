SEARCH-PREDEFINED-ATTRIBUTES()                  SEARCH-PREDEFINED-ATTRIBUTES()



NAME
       search-predefined-attributes -

DESCRIPTION
       Searches  predefined  attributes that meet certain criteria. Predefined
       attributes are attributes in an Amazon Connect  instance  that  can  be
       used  to  route contacts to an agent or pools of agents within a queue.
       For more information, see Create predefined attributes for routing con-
       tacts to agents .

       See also: AWS API Documentation

       search-predefined-attributes  is  a  paginated  operation. Multiple API
       calls may be issued in order to retrieve the entire  data  set  of  re-
       sults.  You can disable pagination by providing the --no-paginate argu-
       ment.  When using --output text and the --query argument on a paginated
       response,  the  --query  argument must extract data from the results of
       the following query expressions: PredefinedAttributes

SYNOPSIS
            search-predefined-attributes
          --instance-id <value>
          [--search-criteria <value>]
          [--cli-input-json <value>]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --instance-id (string)
          The identifier of the Amazon Connect instance. You can find the  in-
          stance ID in the Amazon Resource Name (ARN) of the instance.

       --search-criteria (structure)
          The search criteria to be used to return predefined attributes.

          OrConditions -> (list)
              A  list of conditions which would be applied together with an OR
              condition.

              (structure)
                 The search criteria to  be  used  to  return  predefined  at-
                 tributes.

                 OrConditions -> (list)
                     A list of conditions which would be applied together with
                     an OR condition.

                     ( ... recursive ... )

                 AndConditions -> (list)
                     A list of conditions which would be applied together with
                     an AND condition.

                     ( ... recursive ... )

                 StringCondition -> (structure)
                     A  leaf  node  condition  which  can be used to specify a
                     string condition.

                     FieldName -> (string)
                        The name of the field in the string condition.

                     Value -> (string)
                        The value of the string.

                     ComparisonType -> (string)
                        The type of comparison to be made when evaluating  the
                        string condition.

          AndConditions -> (list)
              A list of conditions which would be applied together with an AND
              condition.

              (structure)
                 The search criteria to  be  used  to  return  predefined  at-
                 tributes.

                 OrConditions -> (list)
                     A list of conditions which would be applied together with
                     an OR condition.

                     ( ... recursive ... )

                 AndConditions -> (list)
                     A list of conditions which would be applied together with
                     an AND condition.

                     ( ... recursive ... )

                 StringCondition -> (structure)
                     A  leaf  node  condition  which  can be used to specify a
                     string condition.

                     FieldName -> (string)
                        The name of the field in the string condition.

                     Value -> (string)
                        The value of the string.

                     ComparisonType -> (string)
                        The type of comparison to be made when evaluating  the
                        string condition.

          StringCondition -> (structure)
              A leaf node condition which can be used to specify a string con-
              dition.

              FieldName -> (string)
                 The name of the field in the string condition.

              Value -> (string)
                 The value of the string.

              ComparisonType -> (string)
                 The type of comparison to be made when evaluating the  string
                 condition.

       JSON Syntax:

          {
            "OrConditions": [
              {
                "OrConditions": [
                  { ... recursive ... }
                  ...
                ],
                "AndConditions": [
                  { ... recursive ... }
                  ...
                ],
                "StringCondition": {
                  "FieldName": "string",
                  "Value": "string",
                  "ComparisonType": "STARTS_WITH"|"CONTAINS"|"EXACT"
                }
              }
              ...
            ],
            "AndConditions": [
              {
                "OrConditions": [
                  { ... recursive ... }
                  ...
                ],
                "AndConditions": [
                  { ... recursive ... }
                  ...
                ],
                "StringCondition": {
                  "FieldName": "string",
                  "Value": "string",
                  "ComparisonType": "STARTS_WITH"|"CONTAINS"|"EXACT"
                }
              }
              ...
            ],
            "StringCondition": {
              "FieldName": "string",
              "Value": "string",
              "ComparisonType": "STARTS_WITH"|"CONTAINS"|"EXACT"
            }
          }

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --starting-token (string)
          A token to specify where to start paginating. This is the  NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The size of each page to get in the AWS service call. This does  not
          affect the number of items returned in the command's output. Setting
          a smaller page size results in more calls to the  AWS  service,  re-
          trieving  fewer  items  in  each call. This can help prevent the AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The  total number of items to return in the command's output. If the
          total number of items available is more than the value specified,  a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent  command. Do not use the NextToken response element directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       PredefinedAttributes -> (list)
          Predefined attributes matched by the search criteria.

          (structure)
              Information about a predefined attribute.

              Name -> (string)
                 The name of the predefined attribute.

              Values -> (tagged union structure)
                 The values of the predefined attribute.

                 NOTE:
                     This is a Tagged Union structure. Only one of the follow-
                     ing top level keys can be set: StringList.

                 StringList -> (list)
                     Predefined attribute values of type string list.

                     (string)

              LastModifiedTime -> (timestamp)
                 Last modified time.

              LastModifiedRegion -> (string)
                 Last modified region.

       NextToken -> (string)
          The token for the next set of results. Use the value returned in the
          previous response in the next request to retrieve the  next  set  of
          results.

       ApproximateTotalCount -> (long)
          The  approximate  number of predefined attributes which matched your
          search query.



                                                SEARCH-PREDEFINED-ATTRIBUTES()
