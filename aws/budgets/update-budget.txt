UPDATE-BUDGET()                                                UPDATE-BUDGET()



NAME
       update-budget -

DESCRIPTION
       Updates  a budget. You can change every part of a budget except for the
       budgetName and the calculatedSpend . When you modify a budget, the cal-
       culatedSpend drops to zero until Amazon Web Services has new usage data
       to use for forecasting.

       WARNING:
          Only one of BudgetLimit or PlannedBudgetLimits can be present in the
          syntax  at  one time. Use the syntax that matches your case. The Re-
          quest Syntax section shows the BudgetLimit syntax.  For  PlannedBud-
          getLimits , see the Examples section.

       See also: AWS API Documentation

SYNOPSIS
            update-budget
          --account-id <value>
          --new-budget <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --account-id (string)
          The  accountId  that  is associated with the budget that you want to
          update.

       --new-budget (structure)
          The budget that you want to update your budget to.

          BudgetName -> (string)
              The name of a budget. The name must be unique within an account.
              The : and \ characters aren't allowed in BudgetName .

          BudgetLimit -> (structure)
              The  total  amount  of cost, usage, RI utilization, RI coverage,
              Savings Plans utilization, or Savings Plans  coverage  that  you
              want to track with your budget.
                 BudgetLimit  is  required  for cost or usage budgets, but op-
                 tional for RI or Savings Plans utilization or  coverage  bud-
                 gets.  RI  and  Savings Plans utilization or coverage budgets
                 default to 100 . This is the only valid value for RI or  Sav-
                 ings  Plans  utilization  or  coverage budgets. You can't use
                 BudgetLimit with PlannedBudgetLimits for CreateBudget and Up-
                 dateBudget actions.

              Amount -> (string)
                 The  cost  or  usage  amount  that's associated with a budget
                 forecast, actual spend, or budget threshold.

              Unit -> (string)
                 The unit of measurement that's used for the budget  forecast,
                 actual spend, or budget threshold, such as USD or GBP.

          PlannedBudgetLimits -> (map)
              A map containing multiple BudgetLimit , including current or fu-
              ture limits.
                 PlannedBudgetLimits is available for cost or usage budget and
                 supports both monthly and quarterly TimeUnit .

              For  monthly  budgets,  provide 12 months of PlannedBudgetLimits
              values. This must start from the current month and  include  the
              next  11 months. The key is the start of the month, UTC in epoch
              seconds.

              For quarterly budgets,  provide  four  quarters  of  PlannedBud-
              getLimits value entries in standard calendar quarter increments.
              This must start from the current quarter and  include  the  next
              three  quarters.  The  key  is  the start of the quarter, UTC in
              epoch seconds.

              If the planned budget expires before 12 months  for  monthly  or
              four  quarters  for  quarterly,  provide the PlannedBudgetLimits
              values only for the remaining periods.

              If the budget begins at a date in the future,  provide  Planned-
              BudgetLimits values from the start date of the budget.

              After  all  of the BudgetLimit values in PlannedBudgetLimits are
              used, the budget continues to use the last  limit  as  the  Bud-
              getLimit  .  At that point, the planned budget provides the same
              experience as a fixed budget.
                 DescribeBudget  and  DescribeBudgets  response   along   with
                 PlannedBudgetLimits also contain BudgetLimit representing the
                 current month or quarter limit present in PlannedBudgetLimits
                 . This only applies to budgets that are created with Planned-
                 BudgetLimits . Budgets that are created  without  PlannedBud-
                 getLimits  only  contain  BudgetLimit  .  They  don't contain
                 PlannedBudgetLimits .

              key -> (string)
                 A generic string.

              value -> (structure)
                 The amount of cost or usage that's measured for a budget.

                 For example, a Spend for 3 GB of S3 usage has  the  following
                 parameters:

                 o An Amount of 3

                 o A unit of GB

                 Amount -> (string)
                     The  cost or usage amount that's associated with a budget
                     forecast, actual spend, or budget threshold.

                 Unit -> (string)
                     The unit of measurement that's used for the budget  fore-
                     cast,  actual  spend, or budget threshold, such as USD or
                     GBP.

          CostFilters -> (map)
              The cost filters, such as Region , Service ,  member  account  ,
              Tag , or Cost Category , that are applied to a budget.

              Amazon Web Services Budgets supports the following services as a
              Service filter for RI budgets:

              o Amazon EC2

              o Amazon Redshift

              o Amazon Relational Database Service

              o Amazon ElastiCache

              o Amazon OpenSearch Service

              key -> (string)
                 A generic string.

              value -> (list)
                 (string)

          CostTypes -> (structure)
              The types of costs that are included in this COST budget.
                 USAGE , RI_UTILIZATION , RI_COVERAGE , SAVINGS_PLANS_UTILIZA-
                 TION  ,  and SAVINGS_PLANS_COVERAGE budgets do not have Cost-
                 Types .

              IncludeTax -> (boolean)
                 Specifies whether a budget includes taxes.

                 The default value is true .

              IncludeSubscription -> (boolean)
                 Specifies whether a budget includes subscriptions.

                 The default value is true .

              UseBlended -> (boolean)
                 Specifies whether a budget uses a blended rate.

                 The default value is false .

              IncludeRefund -> (boolean)
                 Specifies whether a budget includes refunds.

                 The default value is true .

              IncludeCredit -> (boolean)
                 Specifies whether a budget includes credits.

                 The default value is true .

              IncludeUpfront -> (boolean)
                 Specifies whether a budget includes upfront RI costs.

                 The default value is true .

              IncludeRecurring -> (boolean)
                 Specifies whether a budget includes recurring  fees  such  as
                 monthly RI fees.

                 The default value is true .

              IncludeOtherSubscription -> (boolean)
                 Specifies  whether  a  budget  includes  non-RI  subscription
                 costs.

                 The default value is true .

              IncludeSupport -> (boolean)
                 Specifies whether  a  budget  includes  support  subscription
                 fees.

                 The default value is true .

              IncludeDiscount -> (boolean)
                 Specifies whether a budget includes discounts.

                 The default value is true .

              UseAmortized -> (boolean)
                 Specifies whether a budget uses the amortized rate.

                 The default value is false .

          TimeUnit -> (string)
              The  length  of  time until a budget resets the actual and fore-
              casted spend.

          TimePeriod -> (structure)
              The period of time that's covered by a budget. You setthe  start
              date and end date. The start date must come before the end date.
              The end date must come before 06/15/87 00:00 UTC .

              If you create your budget and don't specify a start date, Amazon
              Web  Services  defaults  to the start of your chosen time period
              (DAILY, MONTHLY, QUARTERLY, or ANNUALLY). For  example,  if  you
              created  your  budget  on  January  24,  2018, chose DAILY , and
              didn't set a start date, Amazon Web Services set your start date
              to  01/24/18  00:00 UTC . If you chose MONTHLY , Amazon Web Ser-
              vices set your start date to 01/01/18 00:00 UTC . If you  didn't
              specify  an  end  date, Amazon Web Services set your end date to
              06/15/87 00:00 UTC . The defaults are the same for  the  Billing
              and Cost Management console and the API.

              You can change either date with the UpdateBudget operation.

              After  the  end date, Amazon Web Services deletes the budget and
              all the associated notifications and subscribers.

              Start -> (timestamp)
                 The start date for a budget. If you created your  budget  and
                 didn't  specify a start date, Amazon Web Services defaults to
                 the start of your chosen time period (DAILY,  MONTHLY,  QUAR-
                 TERLY,  or ANNUALLY). For example, if you created your budget
                 on January 24, 2018, chose DAILY , and  didn't  set  a  start
                 date,  Amazon  Web  Services  set your start date to 01/24/18
                 00:00 UTC . If you chose MONTHLY , Amazon  Web  Services  set
                 your  start date to 01/01/18 00:00 UTC . The defaults are the
                 same for the Billing and Cost Management console and the API.

                 You can change your start date with the  UpdateBudget  opera-
                 tion.

              End -> (timestamp)
                 The end date for a budget. If you didn't specify an end date,
                 Amazon Web Services set your end date to 06/15/87 00:00 UTC .
                 The defaults are the same for the Billing and Cost Management
                 console and the API.

                 After the end date, Amazon Web Services  deletes  the  budget
                 and all the associated notifications and subscribers. You can
                 change your end date with the UpdateBudget operation.

          CalculatedSpend -> (structure)
              The actual and forecasted cost or usage that the budget tracks.

              ActualSpend -> (structure)
                 The amount of cost, usage, RI units, or Savings  Plans  units
                 that you used.

                 Amount -> (string)
                     The  cost or usage amount that's associated with a budget
                     forecast, actual spend, or budget threshold.

                 Unit -> (string)
                     The unit of measurement that's used for the budget  fore-
                     cast,  actual  spend, or budget threshold, such as USD or
                     GBP.

              ForecastedSpend -> (structure)
                 The amount of cost, usage, RI units, or Savings  Plans  units
                 that you're forecasted to use.

                 Amount -> (string)
                     The  cost or usage amount that's associated with a budget
                     forecast, actual spend, or budget threshold.

                 Unit -> (string)
                     The unit of measurement that's used for the budget  fore-
                     cast,  actual  spend, or budget threshold, such as USD or
                     GBP.

          BudgetType -> (string)
              Specifies whether this budget tracks costs, usage,  RI  utiliza-
              tion,  RI  coverage, Savings Plans utilization, or Savings Plans
              coverage.

          LastUpdatedTime -> (timestamp)
              The last time that you updated this budget.

          AutoAdjustData -> (structure)
              The parameters that determine the budget amount for an  auto-ad-
              justing budget.

              AutoAdjustType -> (string)
                 The  string  that  defines  whether  your budget auto-adjusts
                 based on historical or forecasted data.

              HistoricalOptions -> (structure)
                 The parameters that define or describe  the  historical  data
                 that your auto-adjusting budget is based on.

                 BudgetAdjustmentPeriod -> (integer)
                     The number of budget periods included in the moving-aver-
                     age calculation that determines your auto-adjusted budget
                     amount.  The maximum value depends on the TimeUnit granu-
                     larity of the budget:

                     o For the DAILY granularity, the maximum value is 60 .

                     o For the MONTHLY granularity, the maximum value is 12 .

                     o For the QUARTERLY granularity, the maximum value is 4 .

                     o For the ANNUALLY granularity, the maximum value is 1 .

                 LookBackAvailablePeriods -> (integer)
                     The integer that describes how  many  budget  periods  in
                     your  BudgetAdjustmentPeriod are included in the calcula-
                     tion of your current BudgetLimit . If  the  first  budget
                     period  in  your BudgetAdjustmentPeriod has no cost data,
                     then that budget period isnt included in the average that
                     determines your budget limit.

                     For example, if you set BudgetAdjustmentPeriod as 4 quar-
                     ters, but your account had no  cost  data  in  the  first
                     quarter,  then  only the last three quarters are included
                     in the  calculation.  In  this  scenario,  LookBackAvail-
                     ablePeriods returns 3 .

                     You  cant  set  your  own  LookBackAvailablePeriods . The
                     value is automatically calculated from the  BudgetAdjust-
                     mentPeriod and your historical cost data.

              LastAutoAdjustTime -> (timestamp)
                 The last time that your budget was auto-adjusted.

       Shorthand Syntax:

          BudgetName=string,BudgetLimit={Amount=string,Unit=string},PlannedBudgetLimits={KeyName1={Amount=string,Unit=string},KeyName2={Amount=string,Unit=string}},CostFilters={KeyName1=string,string,KeyName2=string,string},CostTypes={IncludeTax=boolean,IncludeSubscription=boolean,UseBlended=boolean,IncludeRefund=boolean,IncludeCredit=boolean,IncludeUpfront=boolean,IncludeRecurring=boolean,IncludeOtherSubscription=boolean,IncludeSupport=boolean,IncludeDiscount=boolean,UseAmortized=boolean},TimeUnit=string,TimePeriod={Start=timestamp,End=timestamp},CalculatedSpend={ActualSpend={Amount=string,Unit=string},ForecastedSpend={Amount=string,Unit=string}},BudgetType=string,LastUpdatedTime=timestamp,AutoAdjustData={AutoAdjustType=string,HistoricalOptions={BudgetAdjustmentPeriod=integer,LookBackAvailablePeriods=integer},LastAutoAdjustTime=timestamp}

       JSON Syntax:

          {
            "BudgetName": "string",
            "BudgetLimit": {
              "Amount": "string",
              "Unit": "string"
            },
            "PlannedBudgetLimits": {"string": {
                  "Amount": "string",
                  "Unit": "string"
                }
              ...},
            "CostFilters": {"string": ["string", ...]
              ...},
            "CostTypes": {
              "IncludeTax": true|false,
              "IncludeSubscription": true|false,
              "UseBlended": true|false,
              "IncludeRefund": true|false,
              "IncludeCredit": true|false,
              "IncludeUpfront": true|false,
              "IncludeRecurring": true|false,
              "IncludeOtherSubscription": true|false,
              "IncludeSupport": true|false,
              "IncludeDiscount": true|false,
              "UseAmortized": true|false
            },
            "TimeUnit": "DAILY"|"MONTHLY"|"QUARTERLY"|"ANNUALLY",
            "TimePeriod": {
              "Start": timestamp,
              "End": timestamp
            },
            "CalculatedSpend": {
              "ActualSpend": {
                "Amount": "string",
                "Unit": "string"
              },
              "ForecastedSpend": {
                "Amount": "string",
                "Unit": "string"
              }
            },
            "BudgetType": "USAGE"|"COST"|"RI_UTILIZATION"|"RI_COVERAGE"|"SAVINGS_PLANS_UTILIZATION"|"SAVINGS_PLANS_COVERAGE",
            "LastUpdatedTime": timestamp,
            "AutoAdjustData": {
              "AutoAdjustType": "HISTORICAL"|"FORECAST",
              "HistoricalOptions": {
                "BudgetAdjustmentPeriod": integer,
                "LookBackAvailablePeriods": integer
              },
              "LastAutoAdjustTime": timestamp
            }
          }

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To replace a budget for a Cost and Usage budget

       This example replaces a Cost and Usage budget with a new budget.

       Command:

          aws budgets update-budget --account-id 111122223333 --new-budget file://new-budget.json

       new-budget.json:

          {
              "BudgetLimit": {
                 "Amount": "100",
                 "Unit": "USD"
              },
              "BudgetName": "Example Budget",
              "BudgetType": "COST",
              "CostFilters": {
                 "AZ" : [ "us-east-1" ]
              },
              "CostTypes": {
                 "IncludeCredit": false,
                 "IncludeDiscount": true,
                 "IncludeOtherSubscription": true,
                 "IncludeRecurring": true,
                 "IncludeRefund": true,
                 "IncludeSubscription": true,
                 "IncludeSupport": true,
                 "IncludeTax": true,
                 "IncludeUpfront": true,
                 "UseBlended": false,
                 "UseAmortized": true
              },
              "TimePeriod": {
                 "Start": 1477958399,
                 "End": 3706473600
              },
              "TimeUnit": "MONTHLY"
           }

OUTPUT
       None



                                                               UPDATE-BUDGET()
