DEPRECATE-DOMAIN()                                          DEPRECATE-DOMAIN()



NAME
       deprecate-domain -

DESCRIPTION
       Deprecates  the specified domain. After a domain has been deprecated it
       cannot be used to create new workflow executions or register new types.
       However, you can still use visibility actions on this domain. Deprecat-
       ing a domain also deprecates all activity and workflow types registered
       in  the domain. Executions that were started before the domain was dep-
       recated continues to run.

       NOTE:
              This operation is eventually consistent. The  results  are  best
              effort and may not exactly reflect recent updates and changes.

          Access Control

       You  can use IAM policies to control this action's access to Amazon SWF
       resources as follows:

       o Use a Resource element with the domain name to limit  the  action  to
         only specified domains.

       o Use  an  Action  element to allow or deny permission to call this ac-
         tion.

       o You cannot use an IAM policy to constrain this action's parameters.

       If the caller doesn't have sufficient permissions to invoke the action,
       or the parameter values fall outside the specified constraints, the ac-
       tion fails. The associated event attribute's cause parameter is set  to
       OPERATION_NOT_PERMITTED  .  For  details  and example IAM policies, see
       Using IAM to Manage Access to Amazon SWF Workflows in  the  Amazon  SWF
       Developer Guide .

       See also: AWS API Documentation

SYNOPSIS
            deprecate-domain
          --name <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --name (string)
          The name of the domain to deprecate.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       Deprecating a Domain

       To  deprecate  a  domain  (you  can still see it, but cannot create new
       workflow executions or register types on it), use swf deprecate-domain.
       It  has  a sole required parameter, --name, which takes the name of the
       domain to deprecate.

          aws swf deprecate-domain \
              --name MyNeatNewDomain ""

       As with register-domain, no output is returned. If you use list-domains
       to  view  the registered domains, however, you will see that the domain
       has been deprecated and no longer appears in the returned data.

          aws swf list-domains \
              --registration-status REGISTERED
                  {
                      "domainInfos": [
                          {
                              "status": "REGISTERED",
                              "name": "DataFrobotz"
                          },
                          {
                              "status": "REGISTERED",
                              "name": "erontest"
                          }
                      ]
                  }

       If you use --registration-status DEPRECATED with list-domains, you will
       see your deprecated domain.

          aws swf list-domains \
              --registration-status DEPRECATED
                  {
                      "domainInfos": [
                          {
                              "status": "DEPRECATED",
                              "name": "MyNeatNewDomain"
                          }
                      ]
                  }

       You can still use describe-domain to get information about a deprecated
       domain.

          aws swf describe-domain \
              --name MyNeatNewDomain
                  {
                      "domainInfo": {
                          "status": "DEPRECATED",
                          "name": "MyNeatNewDomain"
                      },
                      "configuration": {
                          "workflowExecutionRetentionPeriodInDays": "0"
                      }
                  }

   See Also
       o DeprecateDomain in the Amazon Simple Workflow Service API Reference

OUTPUT
       None



                                                            DEPRECATE-DOMAIN()
