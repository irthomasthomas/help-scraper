CREATE-AUTO-SCALING-CONFIGURATION()        CREATE-AUTO-SCALING-CONFIGURATION()



NAME
       create-auto-scaling-configuration -

DESCRIPTION
       Create an App Runner automatic scaling configuration resource. App Run-
       ner requires this resource when you create or update  App  Runner  ser-
       vices  and you require non-default auto scaling settings. You can share
       an auto scaling configuration across multiple services.

       Create multiple revisions of a configuration  by  calling  this  action
       multiple  times  using the same AutoScalingConfigurationName . The call
       returns incremental AutoScalingConfigurationRevision values.  When  you
       create  a service and configure an auto scaling configuration resource,
       the service uses the latest active revision of the auto scaling config-
       uration  by  default. You can optionally configure the service to use a
       specific revision.

       Configure a higher MinSize to increase the spread of  your  App  Runner
       service over more Availability Zones in the Amazon Web Services Region.
       The tradeoff is a higher minimal cost.

       Configure a lower MaxSize to control your cost. The tradeoff  is  lower
       responsiveness during peak demand.

       See also: AWS API Documentation

SYNOPSIS
            create-auto-scaling-configuration
          --auto-scaling-configuration-name <value>
          [--max-concurrency <value>]
          [--min-size <value>]
          [--max-size <value>]
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --auto-scaling-configuration-name (string)
          A  name  for the auto scaling configuration. When you use it for the
          first time in an Amazon Web Services Region, App Runner creates  re-
          vision  number  1 of this name. When you use the same name in subse-
          quent calls, App Runner creates incremental revisions of the config-
          uration.

          NOTE:
              Prior  to the release of Auto scale configuration enhancements ,
              the name DefaultConfiguration was reserved.

              This restriction is no longer in place. You can now  manage  De-
              faultConfiguration  the  same  way  you  manage your custom auto
              scaling configurations. This means you can do the following with
              the DefaultConfiguration that App Runner provides:

              o Create new revisions of the DefaultConfiguration .

              o Delete the revisions of the DefaultConfiguration .

              o Delete the auto scaling configuration for which the App Runner
                DefaultConfiguration was created.

              o If you delete the auto scaling configuration  you  can  create
                another  custom  auto  scaling configuration with the same De-
                faultConfiguration name. The original DefaultConfiguration re-
                source  provided  by App Runner remains in your account unless
                you make changes to it.

       --max-concurrency (integer)
          The maximum number of concurrent requests that you want an  instance
          to process. If the number of concurrent requests exceeds this limit,
          App Runner scales up your service.

          Default: 100

       --min-size (integer)
          The minimum number of instances that App Runner provisions for  your
          service.  The  service  always  has at least MinSize provisioned in-
          stances. Some of them actively serve traffic. The rest of them (pro-
          visioned and inactive instances) are a cost-effective compute capac-
          ity reserve and are ready to be quickly activated. You pay for  mem-
          ory usage of all the provisioned instances. You pay for CPU usage of
          only the active subset.

          App Runner temporarily doubles the number of  provisioned  instances
          during  deployments,  to maintain the same capacity for both old and
          new code.

          Default: 1

       --max-size (integer)
          The maximum number of instances that your service scales up  to.  At
          most MaxSize instances actively serve traffic for your service.

          Default: 25

       --tags (list)
          A list of metadata items that you can associate with your auto scal-
          ing configuration resource. A tag is a key-value pair.

          (structure)
              Describes a tag that is applied to an App Runner resource. A tag
              is a metadata item consisting of a key-value pair.

              Key -> (string)
                 The key of the tag.

              Value -> (string)
                 The value of the tag.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a high availability auto scaling configuration

       The following create-auto-scaling-configuration example creates an auto
       scaling  configuration  optimized for high availability by setting Min-
       Size to 5.  With this configuration, App Runner attempts to spread your
       service  instances  over  the  most  Availability Zones possible, up to
       five, depending on the AWS Region.

       The call returns an AutoScalingConfiguration object with the other set-
       tings set to their defaults.  In the example, this is the first call to
       create a configuration named high-availability. The revision is set  to
       1, and it's the latest revision.

          aws apprunner create-auto-scaling-configuration \
              --cli-input-json file://input.json

       Contents of input.json:

          {
              "AutoScalingConfigurationName": "high-availability",
              "MinSize": 5
          }

       Output:

          {
              "AutoScalingConfiguration": {
                  "AutoScalingConfigurationArn": "arn:aws:apprunner:us-east-1:123456789012:autoscalingconfiguration/high-availability/1/2f50e7656d7819fead0f59672e68042e",
                  "AutoScalingConfigurationName": "high-availability",
                  "AutoScalingConfigurationRevision": 1,
                  "CreatedAt": "2020-11-03T00:29:17Z",
                  "Latest": true,
                  "Status": "ACTIVE",
                  "MaxConcurrency": 100,
                  "MaxSize": 50,
                  "MinSize": 5
              }
          }

OUTPUT
       AutoScalingConfiguration -> (structure)
          A  description  of  the App Runner auto scaling configuration that's
          created by this request.

          AutoScalingConfigurationArn -> (string)
              The Amazon Resource Name (ARN) of this auto  scaling  configura-
              tion.

          AutoScalingConfigurationName -> (string)
              The customer-provided auto scaling configuration name. It can be
              used in multiple revisions of a configuration.

          AutoScalingConfigurationRevision -> (integer)
              The revision of this auto  scaling  configuration.  It's  unique
              among  all  the active configurations ("Status": "ACTIVE" ) that
              share the same AutoScalingConfigurationName .

          Latest -> (boolean)
              It's set to true for the configuration with the highest Revision
              among all configurations that share the same AutoScalingConfigu-
              rationName . It's set to false otherwise.

          Status -> (string)
              The current state of the auto scaling configuration. If the sta-
              tus of a configuration revision is INACTIVE , it was deleted and
              can't be used. Inactive configuration revisions are  permanently
              removed some time after they are deleted.

          MaxConcurrency -> (integer)
              The  maximum number of concurrent requests that an instance pro-
              cesses. If the number of concurrent requests exceeds this limit,
              App Runner scales the service up.

          MinSize -> (integer)
              The minimum number of instances that App Runner provisions for a
              service. The service always has at least MinSize provisioned in-
              stances.  Some  of them actively serve traffic. The rest of them
              (provisioned and inactive instances) are a  cost-effective  com-
              pute capacity reserve and are ready to be quickly activated. You
              pay for memory usage of all the provisioned instances.  You  pay
              for CPU usage of only the active subset.

              App  Runner  temporarily  doubles  the number of provisioned in-
              stances during deployments, to maintain the  same  capacity  for
              both old and new code.

          MaxSize -> (integer)
              The  maximum number of instances that a service scales up to. At
              most MaxSize instances actively serve traffic for your service.

          CreatedAt -> (timestamp)
              The time when the auto scaling configuration was  created.  It's
              in Unix time stamp format.

          DeletedAt -> (timestamp)
              The  time  when the auto scaling configuration was deleted. It's
              in Unix time stamp format.

          HasAssociatedService -> (boolean)
              Indicates if this auto scaling configuration has an  App  Runner
              service  associated  with  it.  A value of true indicates one or
              more services are associated. A value of false indicates no ser-
              vices are associated.

          IsDefault -> (boolean)
              Indicates  if  this auto scaling configuration should be used as
              the default for a new App Runner service that does not  have  an
              auto  scaling  configuration ARN specified during creation. Each
              account can have only one default  AutoScalingConfiguration  per
              region. The default AutoScalingConfiguration can be any revision
              under the same AutoScalingConfigurationName .



                                           CREATE-AUTO-SCALING-CONFIGURATION()
