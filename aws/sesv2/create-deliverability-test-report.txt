CREATE-DELIVERABILITY-TEST-REPORT()        CREATE-DELIVERABILITY-TEST-REPORT()



NAME
       create-deliverability-test-report -

DESCRIPTION
       Create  a  new predictive inbox placement test. Predictive inbox place-
       ment tests can help you predict how your messages will  be  handled  by
       various email providers around the world. When you perform a predictive
       inbox placement test, you provide a sample message  that  contains  the
       content  that you plan to send to your customers. Amazon SES then sends
       that message to special email addresses  spread  across  several  major
       email  providers.  After  about 24 hours, the test is complete, and you
       can use the GetDeliverabilityTestReport operation to view  the  results
       of the test.

       See also: AWS API Documentation

SYNOPSIS
            create-deliverability-test-report
          [--report-name <value>]
          --from-email-address <value>
          --content <value>
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --report-name (string)
          A unique name that helps you to identify the predictive inbox place-
          ment test when you retrieve the results.

       --from-email-address (string)
          The email address that the predictive inbox placement test email was
          sent from.

       --content (structure)
          The  HTML  body  of the message that you sent when you performed the
          predictive inbox placement test.

          Simple -> (structure)
              The simple email message. The message consists of a subject  and
              a message body.

              Subject -> (structure)
                 The subject line of the email. The subject line can only con-
                 tain  7-bit  ASCII  characters.  However,  you  can   specify
                 non-ASCII  characters  in  the  subject  line  by  using  en-
                 coded-word syntax, as described in RFC 2047 .

                 Data -> (string)
                     The content of the message itself.

                 Charset -> (string)
                     The character set for the content. Because  of  the  con-
                     straints  of  the  SMTP  protocol,  Amazon SES uses 7-bit
                     ASCII by default. If the text includes characters outside
                     of  the ASCII range, you have to specify a character set.
                     For example, you could specify UTF-8 ,  ISO-8859-1  ,  or
                     Shift_JIS .

              Body -> (structure)
                 The  body  of the message. You can specify an HTML version of
                 the message, a text-only version of the message, or both.

                 Text -> (structure)
                     An object that represents the version of the message that
                     is displayed in email clients that don't support HTML, or
                     clients where the recipient has disabled HTML rendering.

                     Data -> (string)
                        The content of the message itself.

                     Charset -> (string)
                        The character set for the content. Because of the con-
                        straints  of  the SMTP protocol, Amazon SES uses 7-bit
                        ASCII by default. If the text includes characters out-
                        side of the ASCII range, you have to specify a charac-
                        ter set.  For  example,  you  could  specify  UTF-8  ,
                        ISO-8859-1 , or Shift_JIS .

                 Html -> (structure)
                     An object that represents the version of the message that
                     is displayed in email clients  that  support  HTML.  HTML
                     messages  can include formatted text, hyperlinks, images,
                     and more.

                     Data -> (string)
                        The content of the message itself.

                     Charset -> (string)
                        The character set for the content. Because of the con-
                        straints  of  the SMTP protocol, Amazon SES uses 7-bit
                        ASCII by default. If the text includes characters out-
                        side of the ASCII range, you have to specify a charac-
                        ter set.  For  example,  you  could  specify  UTF-8  ,
                        ISO-8859-1 , or Shift_JIS .

              Headers -> (list)
                 The  list  of message headers that will be added to the email
                 message.

                 (structure)
                     Contains the name and value of a message header that  you
                     add to an email.

                     Name -> (string)
                        The  name  of  the  message header. The message header
                        name has to meet the following criteria:

                        o Can contain any printable ASCII character (33 - 126)
                          except for colon (:).

                        o Can contain no more than 126 characters.

                     Value -> (string)
                        The  value  of  the message header. The message header
                        value has to meet the following criteria:

                        o Can contain any printable ASCII character.

                        o Can contain no more than 870 characters.

          Raw -> (structure)
              The raw email message. The message has  to  meet  the  following
              criteria:

              o The  message  has to contain a header and a body, separated by
                one blank line.

              o All of the required header fields must be present in the  mes-
                sage.

              o Each  part of a multipart MIME message must be formatted prop-
                erly.

              o If you include attachments, they must be in a file format that
                the Amazon SES API v2 supports.

              o The raw data of the message needs to base64-encoded if you are
                accessing Amazon SES directly through the HTTPS interface.  If
                you are accessing Amazon SES using an Amazon Web Services SDK,
                the SDK takes care of the base 64-encoding for you.

              o If any of the MIME parts in your message contain content  that
                is  outside of the 7-bit ASCII character range, you should en-
                code that content to ensure  that  recipients'  email  clients
                render the message properly.

              o The length of any single line of text in the message can't ex-
                ceed 1,000 characters. This restriction is defined in RFC 5321
                .

              Data -> (blob)
                 The  raw email message. The message has to meet the following
                 criteria:

                 o The message has to contain a header and a  body,  separated
                   by one blank line.

                 o All  of  the  required header fields must be present in the
                   message.

                 o Each part of a multipart MIME  message  must  be  formatted
                   properly.

                 o Attachments  must  be  in a file format that the Amazon SES
                   supports.

                 o The raw data of the message needs to base64-encoded if  you
                   are  accessing Amazon SES directly through the HTTPS inter-
                   face. If you are accessing Amazon SES using an  Amazon  Web
                   Services  SDK,  the  SDK takes care of the base 64-encoding
                   for you.

                 o If any of the MIME parts in your  message  contain  content
                   that  is  outside  of  the 7-bit ASCII character range, you
                   should encode that content to ensure that recipients' email
                   clients render the message properly.

                 o The  length of any single line of text in the message can't
                   exceed 1,000 characters. This restriction is defined in RFC
                   5321 .

          Template -> (structure)
              The template to use for the email message.

              TemplateName -> (string)
                 The  name  of  the template. You will refer to this name when
                 you send email using the SendTemplatedEmail  or  SendBulkTem-
                 platedEmail operations.

              TemplateArn -> (string)
                 The Amazon Resource Name (ARN) of the template.

              TemplateData -> (string)
                 An  object  that  defines the values to use for message vari-
                 ables in the template. This object  is  a  set  of  key-value
                 pairs.  Each  key defines a message variable in the template.
                 The corresponding value defines the value  to  use  for  that
                 variable.

              Headers -> (list)
                 The  list  of message headers that will be added to the email
                 message.

                 (structure)
                     Contains the name and value of a message header that  you
                     add to an email.

                     Name -> (string)
                        The  name  of  the  message header. The message header
                        name has to meet the following criteria:

                        o Can contain any printable ASCII character (33 - 126)
                          except for colon (:).

                        o Can contain no more than 126 characters.

                     Value -> (string)
                        The  value  of  the message header. The message header
                        value has to meet the following criteria:

                        o Can contain any printable ASCII character.

                        o Can contain no more than 870 characters.

       JSON Syntax:

          {
            "Simple": {
              "Subject": {
                "Data": "string",
                "Charset": "string"
              },
              "Body": {
                "Text": {
                  "Data": "string",
                  "Charset": "string"
                },
                "Html": {
                  "Data": "string",
                  "Charset": "string"
                }
              },
              "Headers": [
                {
                  "Name": "string",
                  "Value": "string"
                }
                ...
              ]
            },
            "Raw": {
              "Data": blob
            },
            "Template": {
              "TemplateName": "string",
              "TemplateArn": "string",
              "TemplateData": "string",
              "Headers": [
                {
                  "Name": "string",
                  "Value": "string"
                }
                ...
              ]
            }
          }

       --tags (list)
          An array of objects that define the tags (keys and values) that  you
          want to associate with the predictive inbox placement test.

          (structure)
              An  object  that defines the tags that are associated with a re-
              source. A tag is a label that you optionally  define  and  asso-
              ciate  with  a resource. Tags can help you categorize and manage
              resources in different ways, such as by purpose, owner, environ-
              ment, or other criteria. A resource can have as many as 50 tags.

              Each  tag  consists  of a required tag key and an associated tag
              value , both of which you define. A tag key is a  general  label
              that  acts  as  a  category for a more specific tag value. A tag
              value acts as a descriptor within a tag key. A tag key can  con-
              tain  as many as 128 characters. A tag value can contain as many
              as 256 characters. The characters can be Unicode  letters,  dig-
              its,  white  space, or one of the following symbols: _ . : / = +
              -. The following additional restrictions apply to tags:

              o Tag keys and values are case sensitive.

              o For each associated resource, each tag key must be unique  and
                it can have only one value.

              o The  aws:  prefix  is reserved for use by Amazon Web Services;
                you cant use it in any tag keys or values that you define.  In
                addition, you can't edit or remove tag keys or values that use
                this prefix. Tags that use this prefix dont count against  the
                limit of 50 tags per resource.

              o You  can  associate  tags with public or shared resources, but
                the tags are available only for your Amazon Web  Services  ac-
                count,  not any other accounts that share the resource. In ad-
                dition, the tags are available only for resources that are lo-
                cated  in  the  specified  Amazon Web Services Region for your
                Amazon Web Services account.

              Key -> (string)
                 One part of a key-value pair that defines a tag. The  maximum
                 length  of a tag key is 128 characters. The minimum length is
                 1 character.

              Value -> (string)
                 The optional part of a key-value pair that defines a tag. The
                 maximum  length of a tag value is 256 characters. The minimum
                 length is 0 characters. If you don't want a resource to  have
                 a  specific tag value, don't specify a value for this parame-
                 ter. If you don't specify a value, Amazon SES sets the  value
                 to an empty string.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       ReportId -> (string)
          A unique string that identifies the predictive inbox placement test.

       DeliverabilityTestStatus -> (string)
          The  status of the predictive inbox placement test. If the status is
          IN_PROGRESS , then the predictive inbox placement test is  currently
          running.  Predictive  inbox  placement  tests  are  usually complete
          within 24 hours of creating the test. If the status  is  COMPLETE  ,
          then  the  test  is  finished,  and you can use the GetDeliverabili-
          tyTestReport to view the results of the test.



                                           CREATE-DELIVERABILITY-TEST-REPORT()
