VALIDATE-CONFIGURATION-SETTINGS()            VALIDATE-CONFIGURATION-SETTINGS()



NAME
       validate-configuration-settings -

DESCRIPTION
       Takes  a  set of configuration settings and either a configuration tem-
       plate or environment, and determines whether those values are valid.

       This action returns a list of messages indicating any errors  or  warn-
       ings associated with the selection of option values.

       See also: AWS API Documentation

SYNOPSIS
            validate-configuration-settings
          --application-name <value>
          [--template-name <value>]
          [--environment-name <value>]
          --option-settings <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --application-name (string)
          The name of the application that the configuration template or envi-
          ronment belongs to.

       --template-name (string)
          The name of the configuration  template  to  validate  the  settings
          against.

          Condition: You cannot specify both this and an environment name.

       --environment-name (string)
          The name of the environment to validate the settings against.

          Condition: You cannot specify both this and a configuration template
          name.

       --option-settings (list)
          A list of the options and desired values to evaluate.

          (structure)
              A specification identifying an individual  configuration  option
              along  with its current value. For a list of possible namespaces
              and  option  values,  see  Option  Values  in  the  AWS  Elastic
              Beanstalk Developer Guide .

              ResourceName -> (string)
                 A  unique  resource name for the option setting. Use it for a
                 timebased scaling configuration option.

              Namespace -> (string)
                 A unique namespace that identifies  the  option's  associated
                 AWS resource.

              OptionName -> (string)
                 The name of the configuration option.

              Value -> (string)
                 The current value for the configuration option.

       Shorthand Syntax:

          ResourceName=string,Namespace=string,OptionName=string,Value=string ...

       JSON Syntax:

          [
            {
              "ResourceName": "string",
              "Namespace": "string",
              "OptionName": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To validate configuration settings

       The following command validates a CloudWatch custom metrics config doc-
       ument:

          aws elasticbeanstalk validate-configuration-settings --application-name my-app --environment-name my-env --option-settings file://options.json

       options.json is a JSON document that includes one or more configuration
       settings to validate:

          [
              {
                  "Namespace": "aws:elasticbeanstalk:healthreporting:system",
                  "OptionName": "ConfigDocument",
                  "Value": "{\"CloudWatchMetrics\": {\"Environment\": {\"ApplicationLatencyP99.9\": null,\"InstancesSevere\": 60,\"ApplicationLatencyP90\": 60,\"ApplicationLatencyP99\": null,\"ApplicationLatencyP95\": 60,\"InstancesUnknown\": 60,\"ApplicationLatencyP85\": 60,\"InstancesInfo\": null,\"ApplicationRequests2xx\": null,\"InstancesDegraded\": null,\"InstancesWarning\": 60,\"ApplicationLatencyP50\": 60,\"ApplicationRequestsTotal\": null,\"InstancesNoData\": null,\"InstancesPending\": 60,\"ApplicationLatencyP10\": null,\"ApplicationRequests5xx\": null,\"ApplicationLatencyP75\": null,\"InstancesOk\": 60,\"ApplicationRequests3xx\": null,\"ApplicationRequests4xx\": null},\"Instance\": {\"ApplicationLatencyP99.9\": null,\"ApplicationLatencyP90\": 60,\"ApplicationLatencyP99\": null,\"ApplicationLatencyP95\": null,\"ApplicationLatencyP85\": null,\"CPUUser\": 60,\"ApplicationRequests2xx\": null,\"CPUIdle\": null,\"ApplicationLatencyP50\": null,\"ApplicationRequestsTotal\": 60,\"RootFilesystemUtil\": null,\"LoadAverage1min\": null,\"CPUIrq\": null,\"CPUNice\": 60,\"CPUIowait\": 60,\"ApplicationLatencyP10\": null,\"LoadAverage5min\": null,\"ApplicationRequests5xx\": null,\"ApplicationLatencyP75\": 60,\"CPUSystem\": 60,\"ApplicationRequests3xx\": 60,\"ApplicationRequests4xx\": null,\"InstanceHealth\": null,\"CPUSoftirq\": 60}},\"Version\": 1}"
              }
          ]

       If  the  options  that you specify are valid for the specified environ-
       ment, Elastic Beanstalk returns an empty Messages array:

          {
              "Messages": []
          }

       If validation fails, the response will include  information  about  the
       error:

          {
              "Messages": [
                  {
                      "OptionName": "ConfigDocumet",
                      "Message": "Invalid option specification (Namespace: 'aws:elasticbeanstalk:healthreporting:system', OptionName: 'ConfigDocumet'): Unknown configuration setting.",
                      "Namespace": "aws:elasticbeanstalk:healthreporting:system",
                      "Severity": "error"
                  }
              ]
          }

       For more information about namespaces and supported options, see Option
       Values in the AWS Elastic Beanstalk Developer Guide.

OUTPUT
       Messages -> (list)
          A list of  ValidationMessage .

          (structure)
              An error or warning for a desired configuration option value.

              Message -> (string)
                 A message describing the error or warning.

              Severity -> (string)
                 An indication of the severity of this message:

                 o error : This message indicates that this  is  not  a  valid
                   setting for an option.

                 o warning  : This message is providing information you should
                   take into account.

              Namespace -> (string)
                 The namespace to which the option belongs.

              OptionName -> (string)
                 The name of the option.



                                             VALIDATE-CONFIGURATION-SETTINGS()
