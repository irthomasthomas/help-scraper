PUT-LOG-EVENTS()                                              PUT-LOG-EVENTS()



NAME
       put-log-events -

DESCRIPTION
       Uploads a batch of log events to the specified log stream.

       WARNING:
          The  sequence  token  is now ignored in PutLogEvents actions. PutLo-
          gEvents actions are always  accepted  and  never  return  InvalidSe-
          quenceTokenException or DataAlreadyAcceptedException even if the se-
          quence token is not valid. You can use parallel PutLogEvents actions
          on the same log stream.

       The batch of events must satisfy the following constraints:

       o The maximum batch size is 1,048,576 bytes. This size is calculated as
         the sum of all event messages in UTF-8, plus 26 bytes  for  each  log
         event.

       o None  of  the log events in the batch can be more than 2 hours in the
         future.

       o None of the log events in the batch can be more than 14 days  in  the
         past.  Also,  none of the log events can be from earlier than the re-
         tention period of the log group.

       o The log events in the batch must be in chronological order  by  their
         timestamp.  The  timestamp  is  the time that the event occurred, ex-
         pressed as the number of milliseconds after Jan 1, 1970 00:00:00  UTC
         .  (In  Amazon  Web  Services Tools for PowerShell and the Amazon Web
         Services SDK for .NET, the timestamp is  specified  in  .NET  format:
         yyyy-mm-ddThh:mm:ss . For example, 2017-09-15T13:45:30 .)

       o A  batch  of  log events in a single request cannot span more than 24
         hours. Otherwise, the operation fails.

       o Each log event can be no larger than 256 KB.

       o The maximum number of log events in a batch is 10,000.

       o

       WARNING:
          The quota of five requests per second per log stream  has  been  re-
          moved.  Instead,  PutLogEvents  actions  are  throttled  based  on a
          per-second per-account quota. You can request  an  increase  to  the
          per-second throttling quota by using the Service Quotas service.

       If  a  call  to  PutLogEvents returns "UnrecognizedClientException" the
       most likely cause is a non-valid Amazon Web Services access key  ID  or
       secret key.

       See also: AWS API Documentation

SYNOPSIS
            put-log-events
          --log-group-name <value>
          --log-stream-name <value>
          --log-events <value>
          [--sequence-token <value>]
          [--entity <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --log-group-name (string)
          The name of the log group.

       --log-stream-name (string)
          The name of the log stream.

       --log-events (list)
          The log events.

          (structure)
              Represents  a  log event, which is a record of activity that was
              recorded by the application or resource being monitored.

              timestamp -> (long)
                 The time the event occurred, expressed as the number of  mil-
                 liseconds after Jan 1, 1970 00:00:00 UTC .

              message -> (string)
                 The  raw  event message. Each log event can be no larger than
                 256 KB.

       Shorthand Syntax:

          timestamp=long,message=string ...

       JSON Syntax:

          [
            {
              "timestamp": long,
              "message": "string"
            }
            ...
          ]

       --sequence-token (string)
          The sequence token obtained from the response of the previous PutLo-
          gEvents call.

          WARNING:
              The  sequenceToken  parameter is now ignored in PutLogEvents ac-
              tions. PutLogEvents actions are now accepted  and  never  return
              InvalidSequenceTokenException   or  DataAlreadyAcceptedException
              even if the sequence token is not valid.

       --entity (structure)
          The entity associated with the log events.

          keyAttributes -> (map)
              The attributes of the entity which identify the specific entity,
              as  a  list  of  key-value  pairs. Entities with the same keyAt-
              tributes are considered to be the same entity.

              There are five allowed attributes (key names): Type ,  Resource-
              Type , Identifier  Name , and Environment .

              For  details about how to use the key attributes, see How to add
              related information to telemetry in the CloudWatch User Guide .

              key -> (string)

              value -> (string)

          attributes -> (map)
              Additional attributes of the entity that are not used to specify
              the identity of the entity. A list of key-value pairs.

              For  details about how to use the attributes, see How to add re-
              lated information to telemetry in the CloudWatch User Guide .

              key -> (string)

              value -> (string)

       Shorthand Syntax:

          keyAttributes={KeyName1=string,KeyName2=string},attributes={KeyName1=string,KeyName2=string}

       JSON Syntax:

          {
            "keyAttributes": {"string": "string"
              ...},
            "attributes": {"string": "string"
              ...}
          }

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       The following command puts log events to a log stream named 20150601 in
       the log group my-logs:

          aws logs put-log-events --log-group-name my-logs --log-stream-name 20150601 --log-events file://events

       Output:

          {
              "nextSequenceToken": "49542672486831074009579604567656788214806863282469607346"
          }

       The above example reads a JSON array of events from a file named events
       in the current directory:

          [
            {
              "timestamp": 1433190184356,
              "message": "Example Event 1"
            },
            {
              "timestamp": 1433190184358,
              "message": "Example Event 2"
            },
            {
              "timestamp": 1433190184360,
              "message": "Example Event 3"
            }
          ]

       Each  subsequent  call requires the next sequence token provided by the
       previous call to be specified with the sequence token option:

          aws logs put-log-events --log-group-name my-logs --log-stream-name 20150601 --log-events file://events2 --sequence-token "49542672486831074009579604567656788214806863282469607346"

       Output:

          {
              "nextSequenceToken": "49542672486831074009579604567900991230369019956308219826"
          }

OUTPUT
       nextSequenceToken -> (string)
          The next sequence token.

          WARNING:
              This field has been deprecated.

              The sequence token is now ignored in PutLogEvents actions.  Put-
              LogEvents actions are always accepted even if the sequence token
              is not valid. You can use parallel PutLogEvents actions  on  the
              same  log stream and you do not need to wait for the response of
              a previous PutLogEvents action to obtain  the  nextSequenceToken
              value.

       rejectedLogEventsInfo -> (structure)
          The rejected events.

          tooNewLogEventStartIndex -> (integer)
              The  index of the first log event that is too new. This field is
              inclusive.

          tooOldLogEventEndIndex -> (integer)
              The index of the last log event that is too old. This  field  is
              exclusive.

          expiredLogEventEndIndex -> (integer)
              The expired log events.

       rejectedEntityInfo -> (structure)
          Information  about  why  the  entity is rejected when calling PutLo-
          gEvents . Only returned when the entity is rejected.

          NOTE:
              When the entity is rejected, the events may still be accepted.

          errorType -> (string)
              The type of error that caused the rejection of the  entity  when
              calling PutLogEvents .



                                                              PUT-LOG-EVENTS()
