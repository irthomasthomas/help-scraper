PUT-METRIC-FILTER()                                        PUT-METRIC-FILTER()



NAME
       put-metric-filter -

DESCRIPTION
       Creates or updates a metric filter and associates it with the specified
       log group. With metric filters, you can configure rules to extract met-
       ric data from log events ingested through PutLogEvents .

       The  maximum number of metric filters that can be associated with a log
       group is 100.

       Using regular expressions to create metric filters  is  supported.  For
       these  filters,  there  is  a quotas of quota of two regular expression
       patterns within a single filter pattern. There is also a quota of  five
       regular  expression  patterns per log group. For more information about
       using regular expressions in metric filters, see Filter pattern  syntax
       for  metric  filters, subscription filters, filter log events, and Live
       Tail .

       When you create a metric filter, you can also optionally assign a  unit
       and dimensions to the metric that is created.

       WARNING:
          Metrics  extracted from log events are charged as custom metrics. To
          prevent unexpected high charges,  do  not  specify  high-cardinality
          fields  such as IPAddress or requestID as dimensions. Each different
          value found for a dimension is treated as a separate metric and  ac-
          crues charges as a separate custom metric.

          CloudWatch  Logs might disable a metric filter if it generates 1,000
          different name/value pairs for your specified dimensions within  one
          hour.

          You can also set up a billing alarm to alert you if your charges are
          higher than expected. For more information, see Creating  a  Billing
          Alarm to Monitor Your Estimated Amazon Web Services Charges .

       See also: AWS API Documentation

SYNOPSIS
            put-metric-filter
          --log-group-name <value>
          --filter-name <value>
          --filter-pattern <value>
          --metric-transformations <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --log-group-name (string)
          The name of the log group.

       --filter-name (string)
          A name for the metric filter.

       --filter-pattern (string)
          A  filter  pattern  for  extracting  metric data out of ingested log
          events.

       --metric-transformations (list)
          A collection of information that defines how metric data gets  emit-
          ted.

          (structure)
              Indicates how to transform ingested log events to metric data in
              a CloudWatch metric.

              metricName -> (string)
                 The name of the CloudWatch metric.

              metricNamespace -> (string)
                 A custom namespace to contain your metric in CloudWatch.  Use
                 namespaces  to  group  together metrics that are similar. For
                 more information, see Namespaces .

              metricValue -> (string)
                 The value to publish to the CloudWatch metric when  a  filter
                 pattern matches a log event.

              defaultValue -> (double)
                 (Optional)  The  value to emit when a filter pattern does not
                 match a log event. This value can be null.

              dimensions -> (map)
                 The fields to use as dimensions for the  metric.  One  metric
                 filter can include as many as three dimensions.

                 WARNING:
                     Metrics  extracted  from log events are charged as custom
                     metrics. To prevent unexpected high charges, do not spec-
                     ify  high-cardinality  fields  such  as  IPAddress or re-
                     questID as dimensions. Each different value found  for  a
                     dimension  is  treated  as  a separate metric and accrues
                     charges as a separate custom metric.

                     CloudWatch Logs disables a metric filter if it  generates
                     1000 different name/value pairs for your specified dimen-
                     sions within a certain amount of time. This helps to pre-
                     vent accidental high charges.

                     You  can also set up a billing alarm to alert you if your
                     charges are higher than expected. For  more  information,
                     see  Creating  a  Billing Alarm to Monitor Your Estimated
                     Amazon Web Services Charges .

                 key -> (string)

                 value -> (string)

              unit -> (string)
                 The unit to assign to the metric. If you omit this, the  unit
                 is set as None .

       Shorthand Syntax:

          metricName=string,metricNamespace=string,metricValue=string,defaultValue=double,dimensions={KeyName1=string,KeyName2=string},unit=string ...

       JSON Syntax:

          [
            {
              "metricName": "string",
              "metricNamespace": "string",
              "metricValue": "string",
              "defaultValue": double,
              "dimensions": {"string": "string"
                ...},
              "unit": "Seconds"|"Microseconds"|"Milliseconds"|"Bytes"|"Kilobytes"|"Megabytes"|"Gigabytes"|"Terabytes"|"Bits"|"Kilobits"|"Megabits"|"Gigabits"|"Terabits"|"Percent"|"Count"|"Bytes/Second"|"Kilobytes/Second"|"Megabytes/Second"|"Gigabytes/Second"|"Terabytes/Second"|"Bits/Second"|"Kilobits/Second"|"Megabits/Second"|"Gigabits/Second"|"Terabits/Second"|"Count/Second"|"None"
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       None



                                                           PUT-METRIC-FILTER()
