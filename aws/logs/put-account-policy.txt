PUT-ACCOUNT-POLICY()                                      PUT-ACCOUNT-POLICY()



NAME
       put-account-policy -

DESCRIPTION
       Creates an account-level data protection policy that applies to all log
       groups in the account. A data protection policy can help safeguard sen-
       sitive  data that's ingested by your log groups by auditing and masking
       the sensitive log data. Each account can have  only  one  account-level
       policy.

       WARNING:
          Sensitive data is detected and masked when it is ingested into a log
          group. When you set a data protection policy,  log  events  ingested
          into the log groups before that time are not masked.

       If you use PutAccountPolicy to create a data protection policy for your
       whole account, it applies to both  existing  log  groups  and  all  log
       groups  that  are  created later in this account. The account policy is
       applied to existing log groups with eventual consistency. It might take
       up  to 5 minutes before sensitive data in existing log groups begins to
       be masked.

       By default, when a user views a log event that  includes  masked  data,
       the  sensitive  data  is  replaced  by  asterisks.  A  user who has the
       logs:Unmask permission can use a GetLogEvents or FilterLogEvents opera-
       tion  with  the  unmask  parameter set to true to view the unmasked log
       events. Users with the logs:Unmask can also view unmasked data  in  the
       CloudWatch  Logs  console  by  running a CloudWatch Logs Insights query
       with the unmask query command.

       For more information, including a list of types of data that can be au-
       dited and masked, see Protect sensitive log data with masking .

       To  use  the PutAccountPolicy operation, you must be signed on with the
       logs:PutDataProtectionPolicy and logs:PutAccountPolicy permissions.

       The PutAccountPolicy operation applies to all log  groups  in  the  ac-
       count.  You  can also use PutDataProtectionPolicy to create a data pro-
       tection policy that applies to just one log group. If a log  group  has
       its  own  data  protection  policy  and  the  account  also  has an ac-
       count-level data protection policy, then the two policies  are  cumula-
       tive. Any sensitive term specified in either policy is masked.

       See also: AWS API Documentation

SYNOPSIS
            put-account-policy
          --policy-name <value>
          --policy-document <value>
          --policy-type <value>
          [--scope <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --policy-name (string)
          A name for the policy. This must be unique within the account.

       --policy-document (string)
          Specify the data protection policy, in JSON.

          This policy must include two JSON blocks:

          o The first block must include both a DataIdentifer array and an Op-
            eration property with an Audit  action.  The  DataIdentifer  array
            lists  the types of sensitive data that you want to mask. For more
            information about the available options, see Types  of  data  that
            you  can mask . The Operation property with an Audit action is re-
            quired to find the sensitive data terms. This  Audit  action  must
            contain  a FindingsDestination object. You can optionally use that
            FindingsDestination object to list one  or  more  destinations  to
            send  audit  findings  to. If you specify destinations such as log
            groups, Kinesis Data Firehose streams, and S3 buckets,  they  must
            already exist.

          o The  second  block  must include both a DataIdentifer array and an
            Operation property with an Deidentify  action.  The  DataIdentifer
            array  must  exactly  match  the  DataIdentifer array in the first
            block of the policy. The Operation property  with  the  Deidentify
            action  is  what  actually masks the data, and it must contain the
            "MaskConfig": {} object.  The  "MaskConfig":  {}  object  must  be
            empty.

          For  an  example data protection policy, see the Examples section on
          this page.

          WARNING:
              The contents of the two DataIdentifer arrays must match exactly.

          In addition to the two JSON blocks, the policyDocument can also  in-
          clude Name , Description , and Version fields. The Name is different
          than the operation's policyName parameter, and is used as  a  dimen-
          sion  when  CloudWatch Logs reports audit findings metrics to Cloud-
          Watch.

          The JSON specified in policyDocument can be up to 30,720 characters.

       --policy-type (string)
          Currently the only valid value for this  parameter  is  DATA_PROTEC-
          TION_POLICY .

          Possible values:

          o DATA_PROTECTION_POLICY

       --scope (string)
          Currently  the  only  valid  value for this parameter is ALL , which
          specifies that the data protection policy applies to all log  groups
          in  the  account.  If you omit this parameter, the default of ALL is
          used.

          Possible values:

          o ALL

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       accountPolicy -> (structure)
          The account policy that you created.

          policyName -> (string)
              The name of the account policy.

          policyDocument -> (string)
              The policy document for this account policy.

              The JSON specified in policyDocument can be up to 30,720 charac-
              ters.

          lastUpdatedTime -> (long)
              The date and time that this policy was most recently updated.

          policyType -> (string)
              The type of policy for this account policy.

          scope -> (string)
              The scope of the account policy.

          accountId -> (string)
              The Amazon Web Services account ID that the policy applies to.



                                                          PUT-ACCOUNT-POLICY()
