PUT-ACCOUNT-POLICY()                                      PUT-ACCOUNT-POLICY()



NAME
       put-account-policy -

DESCRIPTION
       Creates  an account-level data protection policy or subscription filter
       policy that applies to all log groups or a subset of log groups in  the
       account.
          Data protection policy

       A  data  protection policy can help safeguard sensitive data that's in-
       gested by your log groups by auditing and  masking  the  sensitive  log
       data. Each account can have only one account-level data protection pol-
       icy.

       WARNING:
          Sensitive data is detected and masked when it is ingested into a log
          group.  When  you  set a data protection policy, log events ingested
          into the log groups before that time are not masked.

       If you use PutAccountPolicy to create a data protection policy for your
       whole  account,  it  applies  to  both  existing log groups and all log
       groups that are created later in this account. The account-level policy
       is  applied  to existing log groups with eventual consistency. It might
       take up to 5 minutes before sensitive data in existing log  groups  be-
       gins to be masked.

       By  default,  when  a user views a log event that includes masked data,
       the sensitive data is  replaced  by  asterisks.  A  user  who  has  the
       logs:Unmask permission can use a GetLogEvents or FilterLogEvents opera-
       tion with the unmask parameter set to true to  view  the  unmasked  log
       events.  Users  with the logs:Unmask can also view unmasked data in the
       CloudWatch Logs console by running a  CloudWatch  Logs  Insights  query
       with the unmask query command.

       For more information, including a list of types of data that can be au-
       dited and masked, see Protect sensitive log data with masking .

       To use the PutAccountPolicy operation for a data protection policy, you
       must be signed on with the logs:PutDataProtectionPolicy and logs:PutAc-
       countPolicy permissions.

       The PutAccountPolicy operation applies to all log  groups  in  the  ac-
       count.  You can use PutDataProtectionPolicy to create a data protection
       policy that applies to just one log group. If a log group has  its  own
       data  protection  policy and the account also has an account-level data
       protection policy, then the two policies are cumulative. Any  sensitive
       term specified in either policy is masked.
          Subscription filter policy

       A  subscription  filter  policy  sets up a real-time feed of log events
       from CloudWatch  Logs  to  other  Amazon  Web  Services  services.  Ac-
       count-level  subscription  filter  policies  apply to both existing log
       groups and log groups that are created later in this account. Supported
       destinations  are  Kinesis Data Streams, Firehose, and Lambda. When log
       events are sent to the receiving service, they are Base64  encoded  and
       compressed with the GZIP format.

       The following destinations are supported for subscription filters:

       o An  Kinesis  Data Streams data stream in the same account as the sub-
         scription policy, for same-account delivery.

       o An Firehose data stream in the same account as the subscription  pol-
         icy, for same-account delivery.

       o A Lambda function in the same account as the subscription policy, for
         same-account delivery.

       o A  logical  destination  in  a   different   account   created   with
         PutDestination , for cross-account delivery. Kinesis Data Streams and
         Firehose are supported as logical destinations.

       Each account can have one account-level subscription filter policy  per
       Region.  If  you  are updating an existing filter, you must specify the
       correct name in PolicyName . To perform a PutAccountPolicy subscription
       filter operation for any destination except a Lambda function, you must
       also have the iam:PassRole permission.

       See also: AWS API Documentation

SYNOPSIS
            put-account-policy
          --policy-name <value>
          --policy-document <value>
          --policy-type <value>
          [--scope <value>]
          [--selection-criteria <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --policy-name (string)
          A name for the policy. This must be unique within the account.

       --policy-document (string)
          Specify the policy, in JSON.
              Data protection policy

          A data protection policy must include two JSON blocks:

          o The first block must include both a DataIdentifer array and an Op-
            eration  property  with  an  Audit action. The DataIdentifer array
            lists the types of sensitive data that you want to mask. For  more
            information  about  the  available options, see Types of data that
            you can mask . The Operation property with an Audit action is  re-
            quired  to  find  the sensitive data terms. This Audit action must
            contain a FindingsDestination object. You can optionally use  that
            FindingsDestination  object  to  list  one or more destinations to
            send audit findings to. If you specify destinations  such  as  log
            groups, Firehose streams, and S3 buckets, they must already exist.

          o The  second  block  must include both a DataIdentifer array and an
            Operation property with an Deidentify  action.  The  DataIdentifer
            array  must  exactly  match  the  DataIdentifer array in the first
            block of the policy. The Operation property  with  the  Deidentify
            action  is  what  actually masks the data, and it must contain the
            "MaskConfig": {} object.  The  "MaskConfig":  {}  object  must  be
            empty.

          For  an  example data protection policy, see the Examples section on
          this page.

          WARNING:
              The contents of the two DataIdentifer arrays must match exactly.

          In addition to the two JSON blocks, the policyDocument can also  in-
          clude Name , Description , and Version fields. The Name is different
          than the operation's policyName parameter, and is used as  a  dimen-
          sion  when  CloudWatch Logs reports audit findings metrics to Cloud-
          Watch.

          The JSON specified in policyDocument can be up to 30,720  characters
          long.
              Subscription filter policy

          A subscription filter policy can include the following attributes in
          a JSON block:

          o DestinationArn The ARN of the destination to  deliver  log  events
            to. Supported destinations are:

            o An  Kinesis  Data Streams data stream in the same account as the
              subscription policy, for same-account delivery.

            o An Firehose data stream in the same account as the  subscription
              policy, for same-account delivery.

            o A  Lambda  function in the same account as the subscription pol-
              icy, for same-account delivery.

            o A logical  destination  in  a  different  account  created  with
              PutDestination   ,  for  cross-account  delivery.  Kinesis  Data
              Streams and Firehose are supported as logical destinations.

          o RoleArn The ARN of an IAM role that grants CloudWatch Logs permis-
            sions  to  deliver  ingested log events to the destination stream.
            You don't need to provide the ARN when you are working with a log-
            ical destination for cross-account delivery.

          o FilterPattern  A  filter  pattern  for  subscribing  to a filtered
            stream of log events.

          o Distribution The method used to distribute log data to the  desti-
            nation.  By  default,  log  data is grouped by log stream, but the
            grouping can be set to Random for a more even  distribution.  This
            property  is  only  applicable  when the destination is an Kinesis
            Data Streams data stream.

       --policy-type (string)
          The type of policy that you're creating or updating.

          Possible values:

          o DATA_PROTECTION_POLICY

          o SUBSCRIPTION_FILTER_POLICY

       --scope (string)
          Currently the only valid value for this parameter  is  ALL  ,  which
          specifies  that the data protection policy applies to all log groups
          in the account. If you omit this parameter, the default  of  ALL  is
          used.

          Possible values:

          o ALL

       --selection-criteria (string)
          Use this parameter to apply the subscription filter policy to a sub-
          set of log groups in the account. Currently, the only supported fil-
          ter  is LogGroupName NOT IN [] . The selectionCriteria string can be
          up to 25KB in length. The length is determined by  using  its  UTF-8
          bytes.

          Using  the selectionCriteria parameter is useful to help prevent in-
          finite loops. For more information, see Log recursion prevention .

          Specifing selectionCriteria is valid only when you specify SUBSCRIP-
          TION_FILTER_POLICY for policyType .

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       accountPolicy -> (structure)
          The account policy that you created.

          policyName -> (string)
              The name of the account policy.

          policyDocument -> (string)
              The policy document for this account policy.

              The JSON specified in policyDocument can be up to 30,720 charac-
              ters.

          lastUpdatedTime -> (long)
              The date and time that this policy was most recently updated.

          policyType -> (string)
              The type of policy for this account policy.

          scope -> (string)
              The scope of the account policy.

          selectionCriteria -> (string)
              The  log  group  selection criteria for this subscription filter
              policy.

          accountId -> (string)
              The Amazon Web Services account ID that the policy applies to.



                                                          PUT-ACCOUNT-POLICY()
