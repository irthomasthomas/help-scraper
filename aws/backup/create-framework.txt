CREATE-FRAMEWORK()                                          CREATE-FRAMEWORK()



NAME
       create-framework -

DESCRIPTION
       Creates a framework with one or more controls. A framework is a collec-
       tion of controls that you can use to evaluate your backup practices. By
       using  pre-built customizable controls to define your policies, you can
       evaluate whether your backup practices comply with  your  policies  and
       which resources are not yet in compliance.

       See also: AWS API Documentation

SYNOPSIS
            create-framework
          --framework-name <value>
          [--framework-description <value>]
          --framework-controls <value>
          [--idempotency-token <value>]
          [--framework-tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --framework-name (string)
          The unique name of the framework. The name must be between 1 and 256
          characters, starting with a letter, and consisting of letters  (a-z,
          A-Z), numbers (0-9), and underscores (_).

       --framework-description (string)
          An  optional  description  of  the framework with a maximum of 1,024
          characters.

       --framework-controls (list)
          A list of the controls that make up the framework. Each  control  in
          the list has a name, input parameters, and scope.

          (structure)
              Contains  detailed  information  about  all of the controls of a
              framework. Each framework must contain at least one control.

              ControlName -> (string)
                 The name of a control. This name is between 1 and 256 charac-
                 ters.

              ControlInputParameters -> (list)
                 A list of ParameterName and ParameterValue pairs.

                 (structure)
                     A  list  of  parameters for a control. A control can have
                     zero, one, or more than one parameter. An  example  of  a
                     control with two parameters is: "backup plan frequency is
                     at least daily and the retention period  is  at  least  1
                     year ". The first parameter is daily . The second parame-
                     ter is 1 year .

                     ParameterName -> (string)
                        The name of a parameter, for  example,  BackupPlanFre-
                        quency .

                     ParameterValue -> (string)
                        The value of parameter, for example, hourly .

              ControlScope -> (structure)
                 The  scope  of  a control. The control scope defines what the
                 control will evaluate. Three examples of control scopes  are:
                 a specific backup plan, all backup plans with a specific tag,
                 or all backup plans.

                 ComplianceResourceIds -> (list)
                     The ID of the only Amazon Web Services resource that  you
                     want your control scope to contain.

                     (string)

                 ComplianceResourceTypes -> (list)
                     Describes  whether the control scope includes one or more
                     types of resources, such as EFS or RDS .

                     (string)

                 Tags -> (map)
                     The tag key-value pair applied to those Amazon  Web  Ser-
                     vices  resources  that  you want to trigger an evaluation
                     for a rule. A maximum of one key-value pair can  be  pro-
                     vided.  The  tag  value  is optional, but it cannot be an
                     empty  string.  The  structure  to  assign  a   tag   is:
                     [{"Key":"string","Value":"string"}] .

                     key -> (string)

                     value -> (string)

       Shorthand Syntax:

          ControlName=string,ControlInputParameters=[{ParameterName=string,ParameterValue=string},{ParameterName=string,ParameterValue=string}],ControlScope={ComplianceResourceIds=[string,string],ComplianceResourceTypes=[string,string],Tags={KeyName1=string,KeyName2=string}} ...

       JSON Syntax:

          [
            {
              "ControlName": "string",
              "ControlInputParameters": [
                {
                  "ParameterName": "string",
                  "ParameterValue": "string"
                }
                ...
              ],
              "ControlScope": {
                "ComplianceResourceIds": ["string", ...],
                "ComplianceResourceTypes": ["string", ...],
                "Tags": {"string": "string"
                  ...}
              }
            }
            ...
          ]

       --idempotency-token (string)
          A  customer-chosen  string  that  you can use to distinguish between
          otherwise identical calls to CreateFrameworkInput . Retrying a  suc-
          cessful request with the same idempotency token results in a success
          message with no action taken.

       --framework-tags (map)
          Metadata that you can assign to help organize  the  frameworks  that
          you create. Each tag is a key-value pair.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       FrameworkName -> (string)
          The unique name of the framework. The name must be between 1 and 256
          characters,  starting with a letter, and consisting of letters (a-z,
          A-Z), numbers (0-9), and underscores (_).

       FrameworkArn -> (string)
          An Amazon Resource Name (ARN) that uniquely identifies  a  resource.
          The format of the ARN depends on the resource type.



                                                            CREATE-FRAMEWORK()
