CREATE-APP-AUTHORIZATION()                          CREATE-APP-AUTHORIZATION()



NAME
       create-app-authorization -

DESCRIPTION
       Creates an app authorization within an app bundle, which allows AppFab-
       ric to connect to an application.

       See also: AWS API Documentation

SYNOPSIS
            create-app-authorization
          --app-bundle-identifier <value>
          --app <value>
          --credential <value>
          --tenant <value>
          --auth-type <value>
          [--client-token <value>]
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --app-bundle-identifier (string)
          The Amazon Resource Name (ARN) or Universal Unique Identifier (UUID)
          of the app bundle to use for the request.

       --app (string)
          The name of the application.

          Valid values are:

          o SLACK

          o ASANA

          o JIRA

          o M365

          o M365AUDITLOGS

          o ZOOM

          o ZENDESK

          o OKTA

          o GOOGLE

          o DROPBOX

          o SMARTSHEET

          o CISCO

       --credential (tagged union structure)
          Contains  credentials  for  the  application,  such as an API key or
          OAuth2 client ID and secret.

          Specify credentials that match the authorization type for  your  re-
          quest.  For  example,  if the authorization type for your request is
          OAuth2 (oauth2 ), then you should provide only  the  OAuth2  creden-
          tials.

          NOTE:
              This  is a Tagged Union structure. Only one of the following top
              level keys can be set: oauth2Credential, apiKeyCredential.

          oauth2Credential -> (structure)
              Contains OAuth2 client credential information.

              clientId -> (string)
                 The client ID of the client application.

              clientSecret -> (string)
                 The client secret of the client application.

          apiKeyCredential -> (structure)
              Contains API key credential information.

              apiKey -> (string)
                 An API key for an application.

       Shorthand Syntax:

          oauth2Credential={clientId=string,clientSecret=string},apiKeyCredential={apiKey=string}

       JSON Syntax:

          {
            "oauth2Credential": {
              "clientId": "string",
              "clientSecret": "string"
            },
            "apiKeyCredential": {
              "apiKey": "string"
            }
          }

       --tenant (structure)
          Contains information about an application tenant, such as the appli-
          cation display name and identifier.

          tenantIdentifier -> (string)
              The ID of the application tenant.

          tenantDisplayName -> (string)
              The display name of the tenant.

       Shorthand Syntax:

          tenantIdentifier=string,tenantDisplayName=string

       JSON Syntax:

          {
            "tenantIdentifier": "string",
            "tenantDisplayName": "string"
          }

       --auth-type (string)
          The authorization type for the app authorization.

          Possible values:

          o oauth2

          o apiKey

       --client-token (string)
          Specifies  a  unique,  case-sensitive identifier that you provide to
          ensure the idempotency of the request. This lets  you  safely  retry
          the  request  without  accidentally  performing the same operation a
          second time. Passing the same value to a later call to an  operation
          requires that you also pass the same value for all other parameters.
          We recommend that you use a UUID type of value .

          If you don't provide this value, then Amazon Web Services  generates
          a random one for you.

          If you retry the operation with the same ClientToken , but with dif-
          ferent parameters, the retry fails with  an  IdempotentParameterMis-
          match error.

       --tags (list)
          A map of the key-value pairs of the tag or tags to assign to the re-
          source.

          (structure)
              The key or keys of the key-value pairs for the tag or  tags  as-
              signed to a resource.

              key -> (string)
                 Tag key.

              value -> (string)
                 Tag value.

       Shorthand Syntax:

          key=string,value=string ...

       JSON Syntax:

          [
            {
              "key": "string",
              "value": "string"
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       appAuthorization -> (structure)
          Contains information about an app authorization.

          appAuthorizationArn -> (string)
              The Amazon Resource Name (ARN) of the app authorization.

          appBundleArn -> (string)
              The Amazon Resource Name (ARN) of the app bundle for the app au-
              thorization.

          app -> (string)
              The name of the application.

          tenant -> (structure)
              Contains information about an application tenant,  such  as  the
              application display name and identifier.

              tenantIdentifier -> (string)
                 The ID of the application tenant.

              tenantDisplayName -> (string)
                 The display name of the tenant.

          authType -> (string)
              The authorization type.

          status -> (string)
              The state of the app authorization.

              The following states are possible:

              o PendingConnect  :  The initial state of the app authorization.
                The app authorization is created but not yet connected.

              o Connected : The app authorization is connected to the applica-
                tion, and is ready to be used.

              o ConnectionValidationFailed  : The app authorization received a
                validation exception when trying to connect  to  the  applica-
                tion.  If  the  app authorization is in this state, you should
                verify the configured credentials and try to connect  the  app
                authorization again.

              o TokenAutoRotationFailed  : AppFabric failed to refresh the ac-
                cess token. If the app authorization is  in  this  state,  you
                should try to reconnect the app authorization.

          createdAt -> (timestamp)
              The timestamp of when the app authorization was created.

          updatedAt -> (timestamp)
              The timestamp of when the app authorization was last updated.

          persona -> (string)
              The user persona of the app authorization.

              This field should always be admin .

          authUrl -> (string)
              The application URL for the OAuth flow.



                                                    CREATE-APP-AUTHORIZATION()
