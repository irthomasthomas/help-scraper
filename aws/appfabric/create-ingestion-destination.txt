CREATE-INGESTION-DESTINATION()                  CREATE-INGESTION-DESTINATION()



NAME
       create-ingestion-destination -

DESCRIPTION
       Creates  an ingestion destination, which specifies how an application's
       ingested data is processed by Amazon Web Services AppFabric  and  where
       it's delivered.

       See also: AWS API Documentation

SYNOPSIS
            create-ingestion-destination
          --app-bundle-identifier <value>
          --ingestion-identifier <value>
          --processing-configuration <value>
          --destination-configuration <value>
          [--client-token <value>]
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --app-bundle-identifier (string)
          The Amazon Resource Name (ARN) or Universal Unique Identifier (UUID)
          of the app bundle to use for the request.

       --ingestion-identifier (string)
          The Amazon Resource Name (ARN) or Universal Unique Identifier (UUID)
          of the ingestion to use for the request.

       --processing-configuration (tagged union structure)
          Contains information about how ingested data is processed.

          NOTE:
              This  is a Tagged Union structure. Only one of the following top
              level keys can be set: auditLog.

          auditLog -> (structure)
              Contains information about an audit  log  processing  configura-
              tion.

              schema -> (string)
                 The  event  schema in which the audit logs need to be format-
                 ted.

              format -> (string)
                 The format in which the audit logs need to be formatted.

       Shorthand Syntax:

          auditLog={schema=string,format=string}

       JSON Syntax:

          {
            "auditLog": {
              "schema": "ocsf"|"raw",
              "format": "json"|"parquet"
            }
          }

       --destination-configuration (tagged union structure)
          Contains information about the destination of ingested data.

          NOTE:
              This is a Tagged Union structure. Only one of the following  top
              level keys can be set: auditLog.

          auditLog -> (structure)
              Contains  information  about an audit log destination configura-
              tion.

              destination -> (tagged union structure)
                 Contains information about an audit log destination.

                 NOTE:
                     This is a Tagged Union structure. Only one of the follow-
                     ing top level keys can be set: s3Bucket, firehoseStream.

                 s3Bucket -> (structure)
                     Contains information about an Amazon S3 bucket.

                     bucketName -> (string)
                        The name of the Amazon S3 bucket.

                     prefix -> (string)
                        The object key to use.

                 firehoseStream -> (structure)
                     Contains  information  about an Amazon Kinesis Data Fire-
                     hose delivery stream.

                     streamName -> (string)
                        The name of the Amazon Kinesis Data Firehose  delivery
                        stream.

       JSON Syntax:

          {
            "auditLog": {
              "destination": {
                "s3Bucket": {
                  "bucketName": "string",
                  "prefix": "string"
                },
                "firehoseStream": {
                  "streamName": "string"
                }
              }
            }
          }

       --client-token (string)
          Specifies  a  unique,  case-sensitive identifier that you provide to
          ensure the idempotency of the request. This lets  you  safely  retry
          the  request  without  accidentally  performing the same operation a
          second time. Passing the same value to a later call to an  operation
          requires that you also pass the same value for all other parameters.
          We recommend that you use a UUID type of value .

          If you don't provide this value, then Amazon Web Services  generates
          a random one for you.

          If you retry the operation with the same ClientToken , but with dif-
          ferent parameters, the retry fails with  an  IdempotentParameterMis-
          match error.

       --tags (list)
          A map of the key-value pairs of the tag or tags to assign to the re-
          source.

          (structure)
              The key or keys of the key-value pairs for the tag or  tags  as-
              signed to a resource.

              key -> (string)
                 Tag key.

              value -> (string)
                 Tag value.

       Shorthand Syntax:

          key=string,value=string ...

       JSON Syntax:

          [
            {
              "key": "string",
              "value": "string"
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       ingestionDestination -> (structure)
          Contains information about an ingestion destination.

          arn -> (string)
              The Amazon Resource Name (ARN) of the ingestion destination.

          ingestionArn -> (string)
              The Amazon Resource Name (ARN) of the ingestion.

          processingConfiguration -> (tagged union structure)
              Contains information about how ingested data is processed.

              NOTE:
                 This  is  a Tagged Union structure. Only one of the following
                 top level keys can be set: auditLog.

              auditLog -> (structure)
                 Contains information about an audit log processing configura-
                 tion.

                 schema -> (string)
                     The  event schema in which the audit logs need to be for-
                     matted.

                 format -> (string)
                     The format in which the audit logs need to be formatted.

          destinationConfiguration -> (tagged union structure)
              Contains information about the destination of ingested data.

              NOTE:
                 This is a Tagged Union structure. Only one of  the  following
                 top level keys can be set: auditLog.

              auditLog -> (structure)
                 Contains  information about an audit log destination configu-
                 ration.

                 destination -> (tagged union structure)
                     Contains information about an audit log destination.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing top level keys can be set: s3Bucket, firehoseS-
                        tream.

                     s3Bucket -> (structure)
                        Contains information about an Amazon S3 bucket.

                        bucketName -> (string)
                            The name of the Amazon S3 bucket.

                        prefix -> (string)
                            The object key to use.

                     firehoseStream -> (structure)
                        Contains information  about  an  Amazon  Kinesis  Data
                        Firehose delivery stream.

                        streamName -> (string)
                            The  name  of the Amazon Kinesis Data Firehose de-
                            livery stream.

          status -> (string)
              The state of the ingestion destination.

              The following states are possible:

              o Active : The ingestion destination is active and is  ready  to
                be used.

              o Failed  :  The ingestion destination has failed. If the inges-
                tion destination is in this state, you should verify  the  in-
                gestion destination configuration and try again.

          statusReason -> (string)
              The reason for the current status of the ingestion destination.

              Only  present when the status of ingestion destination is Failed
              .

          createdAt -> (timestamp)
              The timestamp of when the ingestion destination was created.

          updatedAt -> (timestamp)
              The timestamp of when the ingestion  destination  was  last  up-
              dated.



                                                CREATE-INGESTION-DESTINATION()
