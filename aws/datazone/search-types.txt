SEARCH-TYPES()                                                  SEARCH-TYPES()



NAME
       search-types -

DESCRIPTION
       Searches for types in Amazon DataZone.

       See also: AWS API Documentation

       search-types is a paginated operation. Multiple API calls may be issued
       in order to retrieve the entire data set of results.  You  can  disable
       pagination  by providing the --no-paginate argument.  When using --out-
       put text and the --query argument on a paginated response, the  --query
       argument  must extract data from the results of the following query ex-
       pressions: items

SYNOPSIS
            search-types
          --domain-identifier <value>
          [--filters <value>]
          --managed | --no-managed
          [--search-in <value>]
          --search-scope <value>
          [--search-text <value>]
          [--sort <value>]
          [--cli-input-json <value>]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --domain-identifier (string)
          The identifier of the Amazon DataZone domain in which to invoke  the
          SearchTypes action.

       --filters (tagged union structure)
          The filters for the SearchTypes action.

          NOTE:
              This  is a Tagged Union structure. Only one of the following top
              level keys can be set: and, filter, or.

          and -> (list)
              The 'and' search filter clause in Amazon DataZone.

              (tagged union structure)
                 A search filter clause in Amazon DataZone.

                 NOTE:
                     This is a Tagged Union structure. Only one of the follow-
                     ing top level keys can be set: and, filter, or.

                 and -> (list)
                     The 'and' search filter clause in Amazon DataZone.

                     ( ... recursive ... )

                 filter -> (structure)
                     A search filter in Amazon DataZone.

                     attribute -> (string)
                        A search filter attribute in Amazon DataZone.

                     value -> (string)
                        A search filter value in Amazon DataZone.

                 or -> (list)
                     The 'or' search filter clause in Amazon DataZone.

                     ( ... recursive ... )

          filter -> (structure)
              A search filter in Amazon DataZone.

              attribute -> (string)
                 A search filter attribute in Amazon DataZone.

              value -> (string)
                 A search filter value in Amazon DataZone.

          or -> (list)
              The 'or' search filter clause in Amazon DataZone.

              (tagged union structure)
                 A search filter clause in Amazon DataZone.

                 NOTE:
                     This is a Tagged Union structure. Only one of the follow-
                     ing top level keys can be set: and, filter, or.

                 and -> (list)
                     The 'and' search filter clause in Amazon DataZone.

                     ( ... recursive ... )

                 filter -> (structure)
                     A search filter in Amazon DataZone.

                     attribute -> (string)
                        A search filter attribute in Amazon DataZone.

                     value -> (string)
                        A search filter value in Amazon DataZone.

                 or -> (list)
                     The 'or' search filter clause in Amazon DataZone.

                     ( ... recursive ... )

       JSON Syntax:

          {
            "and": [
              {
                "and": [
                  { ... recursive ... }
                  ...
                ],
                "filter": {
                  "attribute": "string",
                  "value": "string"
                },
                "or": [
                  { ... recursive ... }
                  ...
                ]
              }
              ...
            ],
            "filter": {
              "attribute": "string",
              "value": "string"
            },
            "or": [
              {
                "and": [
                  { ... recursive ... }
                  ...
                ],
                "filter": {
                  "attribute": "string",
                  "value": "string"
                },
                "or": [
                  { ... recursive ... }
                  ...
                ]
              }
              ...
            ]
          }

       --managed | --no-managed (boolean)
          Specifies whether the search is managed.

       --search-in (list)
          The details of the search.

          (structure)
              The details of the search.

              attribute -> (string)
                 The search attribute.

       Shorthand Syntax:

          attribute=string ...

       JSON Syntax:

          [
            {
              "attribute": "string"
            }
            ...
          ]

       --search-scope (string)
          Specifies the scope of the search for types.

          Possible values:

          o ASSET_TYPE

          o FORM_TYPE

          o LINEAGE_NODE_TYPE

       --search-text (string)
          Specifies the text for which to search.

       --sort (structure)
          The specifies the way to sort the SearchTypes results.

          attribute -> (string)
              The attribute detail of the way to sort search results.

          order -> (string)
              The order detail of the wya to sort search results.

       Shorthand Syntax:

          attribute=string,order=string

       JSON Syntax:

          {
            "attribute": "string",
            "order": "ASCENDING"|"DESCENDING"
          }

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --starting-token (string)
          A  token to specify where to start paginating. This is the NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The  size of each page to get in the AWS service call. This does not
          affect the number of items returned in the command's output. Setting
          a  smaller  page  size results in more calls to the AWS service, re-
          trieving fewer items in each call. This can  help  prevent  the  AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The total number of items to return in the command's output. If  the
          total  number of items available is more than the value specified, a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent command. Do not use the NextToken response element  directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       items -> (list)
          The results of the SearchTypes action.

          (tagged union structure)
              The details of the results of the SearchTypes action.

              NOTE:
                 This  is  a Tagged Union structure. Only one of the following
                 top level keys can be set: assetTypeItem, formTypeItem,  lin-
                 eageNodeTypeItem.

              assetTypeItem -> (structure)
                 The asset type included in the results of the SearchTypes ac-
                 tion.

                 createdAt -> (timestamp)
                     The timestamp of when the asset type was created.

                 createdBy -> (string)
                     The Amazon DataZone user who created the asset type.

                 description -> (string)
                     The description of the asset type.

                 domainId -> (string)
                     The identifier of the Amazon DataZone  domain  where  the
                     asset type exists.

                 formsOutput -> (map)
                     The forms included in the details of the asset type.

                     key -> (string)

                     value -> (structure)
                        The details of the form entry.

                        required -> (boolean)
                            Specifies whether a form entry is required.

                        typeName -> (string)
                            The name of the type of the form entry.

                        typeRevision -> (string)
                            The type revision of the form entry.

                 name -> (string)
                     The name of the asset type.

                 originDomainId -> (string)
                     The  identifier  of  the Amazon DataZone domain where the
                     asset type was originally created.

                 originProjectId -> (string)
                     The identifier of the Amazon DataZone project  where  the
                     asset type exists.

                 owningProjectId -> (string)
                     The  identifier  of the Amazon DataZone project that owns
                     the asset type.

                 revision -> (string)
                     The revision of the asset type.

                 updatedAt -> (timestamp)
                     The timestamp of when the asset type was updated.

                 updatedBy -> (string)
                     The Amazon DataZone user who updated the asset type.

              formTypeItem -> (structure)
                 The form type included in the results of the SearchTypes  ac-
                 tion.

                 createdAt -> (timestamp)
                     The timestamp of when the metadata form type was created.

                 createdBy -> (string)
                     The  Amazon  DataZone  user who created teh metadata form
                     type.

                 description -> (string)
                     The description of the metadata form type.

                 domainId -> (string)
                     The identifier of the Amazon DataZone domain in which the
                     form type exists.

                 imports -> (list)
                     The imports specified in the form type.

                     (structure)
                        The details of the import of the metadata form type.

                        name -> (string)
                            The name of the import.

                        revision -> (string)
                            The revision of the import.

                 model -> (tagged union structure)
                     The model of the form type.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing top level keys can be set: smithy.

                     smithy -> (string)
                        Indicates the smithy model of the API.

                 name -> (string)
                     The name of the form type.

                 originDomainId -> (string)
                     The identifier of the Amazon DataZone domain in which the
                     form type was originally created.

                 originProjectId -> (string)
                     The  identifier of the project in which the form type was
                     originally created.

                 owningProjectId -> (string)
                     The identifier of the project that owns the form type.

                 revision -> (string)
                     The revision of the form type.

                 status -> (string)
                     The status of the form type.

              lineageNodeTypeItem -> (structure)
                 The details of a data lineage node type.

                 createdAt -> (timestamp)
                     The timestamp at which the data  lineage  node  type  was
                     created.

                 createdBy -> (string)
                     The user who created the data lineage node type.

                 description -> (string)
                     The description of the data lineage node type.

                 domainId -> (string)
                     The  ID  of  the  domain where the data lineage node type
                     lives.

                 formsOutput -> (map)
                     The forms output of the data lineage node type.

                     key -> (string)

                     value -> (structure)
                        The details of the form entry.

                        required -> (boolean)
                            Specifies whether a form entry is required.

                        typeName -> (string)
                            The name of the type of the form entry.

                        typeRevision -> (string)
                            The type revision of the form entry.

                 name -> (string)
                     The name of the data lineage node type.

                 revision -> (string)
                     The revision of the data lineage node type.

                 updatedAt -> (timestamp)
                     The timestamp at which the data lineage node type was up-
                     dated.

                 updatedBy -> (string)
                     The user who updated the data lineage node type.

       nextToken -> (string)
          When the number of results is greater than the default value for the
          MaxResults parameter, or if  you  explicitly  specify  a  value  for
          MaxResults that is less than the number of results, the response in-
          cludes a pagination token named NextToken .  You  can  specify  this
          NextToken value in a subsequent call to SearchTypes to list the next
          set of results.

       totalMatchCount -> (integer)
          Total number of search results.



                                                                SEARCH-TYPES()
