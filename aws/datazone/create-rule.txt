CREATE-RULE()                                                    CREATE-RULE()



NAME
       create-rule -

DESCRIPTION
       Creates  a  rule  in Amazon DataZone. A rule is a formal agreement that
       enforces specific requirements across user workflows (e.g.,  publishing
       assets  to  the  catalog,  requesting subscriptions, creating projects)
       within the Amazon DataZone data portal. These rules help maintain  con-
       sistency,  ensure  compliance,  and uphold governance standards in data
       management processes. For instance, a  metadata  enforcement  rule  can
       specify the required information for creating a subscription request or
       publishing a data asset to the catalog, ensuring alignment with organi-
       zational standards.

       See also: AWS API Documentation

SYNOPSIS
            create-rule
          --action <value>
          [--client-token <value>]
          [--description <value>]
          --detail <value>
          --domain-identifier <value>
          --name <value>
          --scope <value>
          --target <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --action (string)
          The action of the rule.

          Possible values:

          o CREATE_SUBSCRIPTION_REQUEST

       --client-token (string)
          A  unique,  case-sensitive identifier that is provided to ensure the
          idempotency of the request.

       --description (string)
          The description of the rule.

       --detail (tagged union structure)
          The detail of the rule.

          NOTE:
              This is a Tagged Union structure. Only one of the following  top
              level keys can be set: metadataFormEnforcementDetail.

          metadataFormEnforcementDetail -> (structure)
              The enforcement detail of the metadata form.

              requiredMetadataForms -> (list)
                 The required metadata forms.

                 (structure)
                     The reference of a metadata form.

                     typeIdentifier -> (string)
                        The type ID of the metadata form reference.

                     typeRevision -> (string)
                        The type revision of the metadata form reference.

       JSON Syntax:

          {
            "metadataFormEnforcementDetail": {
              "requiredMetadataForms": [
                {
                  "typeIdentifier": "string",
                  "typeRevision": "string"
                }
                ...
              ]
            }
          }

       --domain-identifier (string)
          The ID of the domain where the rule is created.

       --name (string)
          The name of the rule.

       --scope (structure)
          The scope of the rule.

          assetType -> (structure)
              The asset type included in the rule scope.

              selectionMode -> (string)
                 The selection mode for the rule.

              specificAssetTypes -> (list)
                 The specific asset types that are included in the rule.

                 (string)

          dataProduct -> (boolean)
              The data product included in the rule scope.

          project -> (structure)
              The project included in the rule scope.

              selectionMode -> (string)
                 The selection mode of the rule.

              specificProjects -> (list)
                 The specific projects in which the rule is created.

                 (string)

       Shorthand Syntax:

          assetType={selectionMode=string,specificAssetTypes=[string,string]},dataProduct=boolean,project={selectionMode=string,specificProjects=[string,string]}

       JSON Syntax:

          {
            "assetType": {
              "selectionMode": "ALL"|"SPECIFIC",
              "specificAssetTypes": ["string", ...]
            },
            "dataProduct": true|false,
            "project": {
              "selectionMode": "ALL"|"SPECIFIC",
              "specificProjects": ["string", ...]
            }
          }

       --target (tagged union structure)
          The target of the rule.

          NOTE:
              This  is a Tagged Union structure. Only one of the following top
              level keys can be set: domainUnitTarget.

          domainUnitTarget -> (structure)
              The ID of the domain unit.

              domainUnitId -> (string)
                 The ID of the domain unit.

              includeChildDomainUnits -> (boolean)
                 Specifies whether to apply a rule to the child domain units.

       Shorthand Syntax:

          domainUnitTarget={domainUnitId=string,includeChildDomainUnits=boolean}

       JSON Syntax:

          {
            "domainUnitTarget": {
              "domainUnitId": "string",
              "includeChildDomainUnits": true|false
            }
          }

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       action -> (string)
          The action of the rule.

       createdAt -> (timestamp)
          The timestamp at which the rule is created.

       createdBy -> (string)
          The user who creates the rule.

       description -> (string)
          The description of the rule.

       detail -> (tagged union structure)
          The detail of the rule.

          NOTE:
              This is a Tagged Union structure. Only one of the following  top
              level keys can be set: metadataFormEnforcementDetail.

          metadataFormEnforcementDetail -> (structure)
              The enforcement detail of the metadata form.

              requiredMetadataForms -> (list)
                 The required metadata forms.

                 (structure)
                     The reference of a metadata form.

                     typeIdentifier -> (string)
                        The type ID of the metadata form reference.

                     typeRevision -> (string)
                        The type revision of the metadata form reference.

       identifier -> (string)
          The ID of the rule.

       name -> (string)
          The name of the rule.

       ruleType -> (string)
          The type of the rule.

       scope -> (structure)
          The scope of the rule.

          assetType -> (structure)
              The asset type included in the rule scope.

              selectionMode -> (string)
                 The selection mode for the rule.

              specificAssetTypes -> (list)
                 The specific asset types that are included in the rule.

                 (string)

          dataProduct -> (boolean)
              The data product included in the rule scope.

          project -> (structure)
              The project included in the rule scope.

              selectionMode -> (string)
                 The selection mode of the rule.

              specificProjects -> (list)
                 The specific projects in which the rule is created.

                 (string)

       target -> (tagged union structure)
          The target of the rule.

          NOTE:
              This  is a Tagged Union structure. Only one of the following top
              level keys can be set: domainUnitTarget.

          domainUnitTarget -> (structure)
              The ID of the domain unit.

              domainUnitId -> (string)
                 The ID of the domain unit.

              includeChildDomainUnits -> (boolean)
                 Specifies whether to apply a rule to the child domain units.

       targetType -> (string)
          The target type of the rule.



                                                                 CREATE-RULE()
