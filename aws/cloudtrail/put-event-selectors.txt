PUT-EVENT-SELECTORS()                                    PUT-EVENT-SELECTORS()



NAME
       put-event-selectors -

DESCRIPTION
       Configures  an  event  selector  or  advanced  event selectors for your
       trail. Use event selectors or advanced event selectors to specify  man-
       agement  and data event settings for your trail. If you want your trail
       to log Insights events, be sure the event selector enables  logging  of
       the  Insights  event types you want configured for your trail. For more
       information about logging Insights events, see Logging Insights  events
       in  the CloudTrail User Guide . By default, trails created without spe-
       cific event selectors are configured to log all read and write  manage-
       ment events, and no data events.

       When  an  event  occurs in your account, CloudTrail evaluates the event
       selectors or advanced event selectors in all trails. For each trail, if
       the  event matches any event selector, the trail processes and logs the
       event. If the event doesn't match any event selector, the trail doesn't
       log the event.

       Example

       o You  create  an  event selector for a trail and specify that you want
         write-only events.

       o The EC2 GetConsoleOutput and RunInstances  API  operations  occur  in
         your account.

       o CloudTrail evaluates whether the events match your event selectors.

       o The  RunInstances is a write-only event and it matches your event se-
         lector. The trail logs the event.

       o The GetConsoleOutput is a read-only event  that  doesn't  match  your
         event selector. The trail doesn't log the event.

       The PutEventSelectors operation must be called from the Region in which
       the trail was created; otherwise, an InvalidHomeRegionException  excep-
       tion is thrown.

       You  can  configure up to five event selectors for each trail. For more
       information, see Logging management events , Logging data events ,  and
       Quotas in CloudTrail in the CloudTrail User Guide .

       You  can add advanced event selectors, and conditions for your advanced
       event selectors, up to a maximum of 500 values for all  conditions  and
       selectors  on  a  trail.  You  can use either AdvancedEventSelectors or
       EventSelectors , but not both. If you apply AdvancedEventSelectors to a
       trail,  any  existing EventSelectors are overwritten. For more informa-
       tion about advanced event selectors, see Logging  data  events  in  the
       CloudTrail User Guide .

       See also: AWS API Documentation

SYNOPSIS
            put-event-selectors
          --trail-name <value>
          [--event-selectors <value>]
          [--advanced-event-selectors <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --trail-name (string)
          Specifies the name of the trail or trail ARN. If you specify a trail
          name, the string must meet the following requirements:

          o Contain only ASCII letters (a-z, A-Z), numbers (0-9), periods (.),
            underscores (_), or dashes (-)

          o Start with a letter or number, and end with a letter or number

          o Be between 3 and 128 characters

          o Have  no  adjacent  periods,  underscores  or  dashes.  Names like
            my-_namespace and my--namespace are not valid.

          o Not be in IP address format (for example, 192.168.5.4)

          If you specify a trail ARN, it must be in the following format.
              arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail

       --event-selectors (list)
          Specifies the settings for your event selectors. You  can  configure
          up  to five event selectors for a trail. You can use either EventSe-
          lectors or AdvancedEventSelectors in  a  PutEventSelectors  request,
          but  not  both. If you apply EventSelectors to a trail, any existing
          AdvancedEventSelectors are overwritten.

          (structure)
              Use event selectors to further specify the management  and  data
              event  settings for your trail. By default, trails created with-
              out specific event selectors will be configured to log all  read
              and  write  management events, and no data events. When an event
              occurs in your account, CloudTrail evaluates the event  selector
              for  all  trails. For each trail, if the event matches any event
              selector, the trail processes and logs the event. If  the  event
              doesn't  match  any  event  selector,  the trail doesn't log the
              event.

              You can configure up to five event selectors for a trail.

              You cannot apply both event selectors and advanced event  selec-
              tors to a trail.

              ReadWriteType -> (string)
                 Specify  if  you  want  your  trail  to log read-only events,
                 write-only events, or all. For example, the  EC2  GetConsole-
                 Output  is  a  read-only  API operation and RunInstances is a
                 write-only API operation.

                 By default, the value is All .

              IncludeManagementEvents -> (boolean)
                 Specify if you want your event selector to include management
                 events for your trail.

                 For more information, see Management Events in the CloudTrail
                 User Guide .

                 By default, the value is true .

                 The first copy of management events is free. You are  charged
                 for  additional copies of management events that you are log-
                 ging on any subsequent trail in the same Region. For more in-
                 formation about CloudTrail pricing, see CloudTrail Pricing .

              DataResources -> (list)
                 CloudTrail supports data event logging for Amazon S3 objects,
                 Lambda functions, and Amazon DynamoDB tables with basic event
                 selectors.  You  can specify up to 250 resources for an indi-
                 vidual event selector, but the total number of data resources
                 cannot exceed 250 across all event selectors in a trail. This
                 limit does not apply if you configure  resource  logging  for
                 all data events.

                 For  more  information,  see Data Events and Limits in Cloud-
                 Trail in the CloudTrail User Guide .

                 (structure)
                     Data events provide information about the resource opera-
                     tions performed on or within a resource itself. These are
                     also known as data plane operations. You can  specify  up
                     to 250 data resources for a trail.

                     Configure  the  DataResource to specify the resource type
                     and resource ARNs for which you want to log data events.

                     You can specify the  following  resource  types  in  your
                     event selectors for your trail:

                     o AWS::DynamoDB::Table

                     o AWS::Lambda::Function

                     o AWS::S3::Object

                     NOTE:
                        The  total  number  of  allowed data resources is 250.
                        This number can be distributed between 1 and  5  event
                        selectors,  but the total cannot exceed 250 across all
                        selectors for the trail.

                        If you are using advanced event selectors, the maximum
                        total  number of values for all conditions, across all
                        advanced event selectors for the trail, is 500.

                     The following example demonstrates how logging works when
                     you configure logging of all data events for an S3 bucket
                     named bucket-1 . In this  example,  the  CloudTrail  user
                     specified  an  empty  prefix,  and the option to log both
                     Read and Write data events.

                     o A user uploads an image file to bucket-1 .

                     o The  PutObject  API  operation  is  an  Amazon  S3  ob-
                       ject-level  API.  It  is  recorded  as  a data event in
                       CloudTrail. Because the CloudTrail user specified an S3
                       bucket  with  an empty prefix, events that occur on any
                       object in that bucket are logged. The  trail  processes
                       and logs the event.

                     o A  user  uploads an object to an Amazon S3 bucket named
                       arn:aws:s3:::bucket-2 .

                     o The PutObject API operation occurred for an  object  in
                       an  S3  bucket  that the CloudTrail user didn't specify
                       for the trail. The trail doesnt log the event.

                     The following example demonstrates how logging works when
                     you  configure logging of Lambda data events for a Lambda
                     function named MyLambdaFunction , but not for all  Lambda
                     functions.

                     o A  user  runs  a script that includes a call to the My-
                       LambdaFunction function and  the  MyOtherLambdaFunction
                       function.

                     o The  Invoke  API  operation  on  MyLambdaFunction is an
                       Lambda API. It is recorded as a data  event  in  Cloud-
                       Trail.  Because  the  CloudTrail user specified logging
                       data events for MyLambdaFunction , any  invocations  of
                       that  function are logged. The trail processes and logs
                       the event.

                     o The Invoke API operation on MyOtherLambdaFunction is an
                       Lambda API. Because the CloudTrail user did not specify
                       logging data events for all Lambda functions,  the  In-
                       voke operation for MyOtherLambdaFunction does not match
                       the function specified for the trail. The trail  doesnt
                       log the event.

                     Type -> (string)
                        The  resource  type  in  which  you  want  to log data
                        events. You can specify the following basic event  se-
                        lector resource types:

                        o AWS::DynamoDB::Table

                        o AWS::Lambda::Function

                        o AWS::S3::Object

                        Additional  resource  types  are available through ad-
                        vanced event selectors.  For  more  information  about
                        these      additional      resource     types,     see
                        AdvancedFieldSelector .

                     Values -> (list)
                        An array of Amazon Resource Name (ARN) strings or par-
                        tial ARN strings for the specified resource type.

                        o To log data events for all objects in all S3 buckets
                          in your Amazon Web  Services  account,  specify  the
                          prefix as arn:aws:s3 .

                        NOTE:
                            This  also  enables logging of data event activity
                            performed by any user or role in your  Amazon  Web
                            Services  account,  even  if that activity is per-
                            formed on a bucket that belongs to another  Amazon
                            Web Services account.

                        o To  log data events for all objects in an S3 bucket,
                          specify the bucket and an empty object  prefix  such
                          as  arn:aws:s3:::bucket-1/  .  The  trail  logs data
                          events for all objects in this S3 bucket.

                        o To log data events for specific objects, specify the
                          S3    bucket    and    object    prefix    such   as
                          arn:aws:s3:::bucket-1/example-images  .  The   trail
                          logs  data events for objects in this S3 bucket that
                          match the prefix.

                        o To log data events for all Lambda functions in  your
                          Amazon  Web  Services account, specify the prefix as
                          arn:aws:lambda .

                        NOTE:
                            This also enables logging of Invoke activity  per-
                            formed by any user or role in your Amazon Web Ser-
                            vices account, even if that activity is  performed
                            on  a  function that belongs to another Amazon Web
                            Services account.

                        o To log data events for a specific  Lambda  function,
                          specify the function ARN.

                        NOTE:
                            Lambda  function  ARNs  are exact. For example, if
                            you       specify       a       function       ARN
                            arn:aws:lambda:us-west-2:111111111111:func-
                            tion:helloworld , data events will only be  logged
                            for    arn:aws:lambda:us-west-2:111111111111:func-
                            tion:helloworld . They  will  not  be  logged  for
                            arn:aws:lambda:us-west-2:111111111111:func-
                            tion:helloworld2 .

                        o To log data events for all DynamoDB tables  in  your
                          Amazon  Web  Services account, specify the prefix as
                          arn:aws:dynamodb .

                        (string)

              ExcludeManagementEventSources -> (list)
                 An optional list of service event sources from which  you  do
                 not  want  management  events  to be logged on your trail. In
                 this release, the list can be empty (disables the filter), or
                 it  can  filter out Key Management Service or Amazon RDS Data
                 API events by containing kms.amazonaws.com or rdsdata.amazon-
                 aws.com . By default, ExcludeManagementEventSources is empty,
                 and KMS and Amazon RDS Data API events  are  logged  to  your
                 trail.  You  can exclude management event sources only in Re-
                 gions that support the event source.

                 (string)

       JSON Syntax:

          [
            {
              "ReadWriteType": "ReadOnly"|"WriteOnly"|"All",
              "IncludeManagementEvents": true|false,
              "DataResources": [
                {
                  "Type": "string",
                  "Values": ["string", ...]
                }
                ...
              ],
              "ExcludeManagementEventSources": ["string", ...]
            }
            ...
          ]

       --advanced-event-selectors (list)
          Specifies the settings for advanced event selectors. You can add ad-
          vanced  event  selectors, and conditions for your advanced event se-
          lectors, up to a maximum of 500 values for all conditions and selec-
          tors  on  a  trail.  You  can  use  either AdvancedEventSelectors or
          EventSelectors , but not both. If you  apply  AdvancedEventSelectors
          to  a  trail,  any existing EventSelectors are overwritten. For more
          information about advanced event selectors, see Logging data  events
          in the CloudTrail User Guide .

          (structure)
              Advanced  event  selectors let you create fine-grained selectors
              for CloudTrail management and data events. They help you control
              costs  by  logging  only those events that are important to you.
              For more information about advanced event selectors, see Logging
              management events and Logging data events in the CloudTrail User
              Guide .

              You cannot apply both event selectors and advanced event  selec-
              tors to a trail.
                 Supported  CloudTrail  event  record  fields  for  management
                 events

              o eventCategory (required)

              o eventSource

              o readOnly
                 Supported CloudTrail event record fields for data events

              o eventCategory (required)

              o resources.type (required)

              o readOnly

              o eventName

              o resources.ARN

              NOTE:
                 For event data stores for CloudTrail Insights events,  Config
                 configuration  items,  Audit Manager evidence, or events out-
                 side of Amazon Web Services,  the  only  supported  field  is
                 eventCategory .

              Name -> (string)
                 An optional, descriptive name for an advanced event selector,
                 such as "Log data events for only two S3 buckets".

              FieldSelectors -> (list)
                 Contains all selector statements in an advanced event  selec-
                 tor.

                 (structure)
                     A  single  selector statement in an advanced event selec-
                     tor.

                     Field -> (string)
                        A field in a CloudTrail event record on which to  fil-
                        ter  events  to  be  logged. For event data stores for
                        CloudTrail  Insights  events,   Config   configuration
                        items,  Audit  Manager  evidence, or events outside of
                        Amazon Web Services, the field is used  only  for  se-
                        lecting events as filtering is not supported.

                        For CloudTrail management events, supported fields in-
                        clude readOnly , eventCategory , and eventSource .

                        For CloudTrail data events, supported  fields  include
                        readOnly  , eventCategory , eventName , resources.type
                        , and resources.ARN .

                        For event data stores for CloudTrail Insights  events,
                        Config configuration items, Audit Manager evidence, or
                        events outside of Amazon Web Services, the  only  sup-
                        ported field is eventCategory .

                        o

                          **
                          readOnly ** - Optional. Can be set to Equals a value
                          of true or false . If you do  not  add  this  field,
                          CloudTrail  logs both read and write events. A value
                          of true logs only read events. A value of false logs
                          only write events.

                        System Message: WARNING/2 (<string>:, line 487)
                          Inline strong start-string without end-string.

                        o

                          **
                          eventSource  **  -  For  filtering management events
                          only. This can  be  set  to  NotEquals   kms.amazon-
                          aws.com or NotEquals  rdsdata.amazonaws.com .

                        System Message: WARNING/2 (<string>:, line 489)
                          Inline strong start-string without end-string.

                        o

                          **
                          eventName  ** - Can use any operator. You can use it
                          to lter in or lter out  any  data  event  logged  to
                          CloudTrail,  such as PutBucket or GetSnapshotBlock .
                          You can have multiple values for this eld, separated
                          by commas.

                        System Message: WARNING/2 (<string>:, line 491)
                          Inline strong start-string without end-string.

                        o

                          **
                          eventCategory  ** - This is required and must be set
                          to Equals .

                        System Message: WARNING/2 (<string>:, line 493)
                          Inline strong start-string without end-string.

                          o For CloudTrail management events, the  value  must
                            be Management .

                          o For CloudTrail data events, the value must be Data
                            .

                        The following are used only for event data stores:

                            o For CloudTrail Insights events, the  value  must
                              be Insight .

                            o For  Config  configuration items, the value must
                              be ConfigurationItem .

                            o For Audit Manager evidence, the  value  must  be
                              Evidence .

                            o For  non-Amazon  Web  Services events, the value
                              must be ActivityAuditLog .

                        o

                          **
                          resources.type ** - This eld is required for  Cloud-
                          Trail  data  events. resources.type can only use the
                          Equals operator, and the value can  be  one  of  the
                          following:

                        System Message: WARNING/2 (<string>:, line 519)
                          Inline strong start-string without end-string.

                          o AWS::DynamoDB::Table

                          o AWS::Lambda::Function

                          o AWS::S3::Object

                          o AWS::AppConfig::Configuration

                          o AWS::B2BI::Transformer

                          o AWS::Bedrock::AgentAlias

                          o AWS::Bedrock::KnowledgeBase

                          o AWS::Cassandra::Table

                          o AWS::CloudFront::KeyValueStore

                          o AWS::CloudTrail::Channel

                          o AWS::CodeWhisperer::Customization

                          o AWS::CodeWhisperer::Profile

                          o AWS::Cognito::IdentityPool

                          o AWS::DynamoDB::Stream

                          o AWS::EC2::Snapshot

                          o AWS::EMRWAL::Workspace

                          o AWS::FinSpace::Environment

                          o AWS::Glue::Table

                          o AWS::GreengrassV2::ComponentVersion

                          o AWS::GreengrassV2::Deployment

                          o AWS::GuardDuty::Detector

                          o AWS::IoT::Certificate

                          o AWS::IoT::Thing

                          o AWS::IoTSiteWise::Asset

                          o AWS::IoTSiteWise::TimeSeries

                          o AWS::IoTTwinMaker::Entity

                          o AWS::IoTTwinMaker::Workspace

                          o AWS::KendraRanking::ExecutionPlan

                          o AWS::KinesisVideo::Stream

                          o AWS::ManagedBlockchain::Network

                          o AWS::ManagedBlockchain::Node

                          o AWS::MedicalImaging::Datastore

                          o AWS::NeptuneGraph::Graph

                          o AWS::PCAConnectorAD::Connector

                          o AWS::QApps:QApp

                          o AWS::QBusiness::Application

                          o AWS::QBusiness::DataSource

                          o AWS::QBusiness::Index

                          o AWS::QBusiness::WebExperience

                          o AWS::RDS::DBCluster

                          o AWS::S3::AccessPoint

                          o AWS::S3ObjectLambda::AccessPoint

                          o AWS::S3Outposts::Object

                          o AWS::SageMaker::Endpoint

                          o AWS::SageMaker::ExperimentTrialComponent

                          o AWS::SageMaker::FeatureGroup

                          o AWS::ServiceDiscovery::Namespace

                          o AWS::ServiceDiscovery::Service

                          o AWS::SCN::Instance

                          o AWS::SNS::PlatformEndpoint

                          o AWS::SNS::Topic

                          o AWS::SQS::Queue

                          o AWS::SSM::ManagedNode

                          o AWS::SSMMessages::ControlChannel

                          o AWS::SWF::Domain

                          o AWS::ThinClient::Device

                          o AWS::ThinClient::Environment

                          o AWS::Timestream::Database

                          o AWS::Timestream::Table

                          o AWS::VerifiedPermissions::PolicyStore

                          o AWS::XRay::Trace

                        You can have only one resources.type eld per selector.
                        To log data events on more than one resource type, add
                        another selector.

                        o

                          **
                          resources.ARN ** - You can use any operator with re-
                          sources.ARN , but if you use Equals or  NotEquals  ,
                          the  value must exactly match the ARN of a valid re-
                          source of the type you've specied in the template as
                          the value of resources.type.

                        System Message: WARNING/2 (<string>:, line 651)
                          Inline strong start-string without end-string.

                        NOTE:
                               You can't use the resources.ARN field to filter
                               resource types that do not have ARNs.

                            The resources.ARN field can be set one of the fol-
                            lowing. If resources.type equals AWS::S3::Object ,
                            the ARN must be in one of the  following  formats.
                            To  log  all data events for all objects in a spe-
                            cific S3 bucket, use the StartsWith operator,  and
                            include only the bucket ARN as the matching value.
                            The trailing slash is intentional; do not  exclude
                            it. Replace the text between less than and greater
                            than symbols (<>) with resource-specific  informa-
                            tion.

                               o arn:<partition>:s3:::<bucket_name>/

                               o arn:<partition>:s3:::<bucket_name>/<ob-
                                 ject_path>/

                        When resources.type equals AWS::DynamoDB::Table ,  and
                        the  operator  is set to Equals or NotEquals , the ARN
                        must be in the following format:

                            o arn:<partition>:dynamodb:<region>:<ac-
                              count_ID>:table/<table_name>

                        When resources.type equals AWS::Lambda::Function , and
                        the operator is set to Equals or NotEquals ,  the  ARN
                        must be in the following format:

                            o arn:<partition>:lambda:<region>:<ac-
                              count_ID>:function:<function_name>

                        When resources.type equals  AWS::AppConfig::Configura-
                        tion  , and the operator is set to Equals or NotEquals
                        , the ARN must be in the following format:

                            o arn:<partition>:appconfig:<region>:<ac-
                              count_ID>:application/<application_ID>/environ-
                              ment/<environment_ID>/configuration/<configura-
                              tion_profile_ID>

                        When  resources.type  equals  AWS::B2BI::Transformer ,
                        and the operator is set to Equals or NotEquals  ,  the
                        ARN must be in the following format:

                            o arn:<partition>:b2bi:<region>:<ac-
                              count_ID>:transformer/<transformer_ID>

                        When resources.type equals AWS::Bedrock::AgentAlias  ,
                        and  the  operator is set to Equals or NotEquals , the
                        ARN must be in the following format:

                            o arn:<partition>:bedrock:<region>:<ac-
                              count_ID>:agent-alias/<agent_ID>/<alias_ID>

                        When resources.type equals AWS::Bedrock::KnowledgeBase
                        , and the operator is set to Equals or NotEquals , the
                        ARN must be in the following format:

                            o arn:<partition>:bedrock:<region>:<ac-
                              count_ID>:knowledge-base/<knowledge_base_ID>

                        When resources.type equals AWS::Cassandra::Table , and
                        the  operator  is set to Equals or NotEquals , the ARN
                        must be in the following format:

                            o arn:<partition>:cassandra:<region>:<ac-
                              count_ID>:/keyspace/<keyspace_name>/table/<ta-
                              ble_name>

                        When resources.type equals  AWS::CloudFront::KeyValue-
                        Store , and the operator is set to Equals or NotEquals
                        , the ARN must be in the following format:

                            o arn:<partition>:cloudfront:<region>:<ac-
                              count_ID>:key-value-store/<KVS_name>

                        When  resources.type equals AWS::CloudTrail::Channel ,
                        and the operator is set to Equals or NotEquals  ,  the
                        ARN must be in the following format:

                            o arn:<partition>:cloudtrail:<region>:<ac-
                              count_ID>:channel/<channel_UUID>

                        When  resources.type  equals  AWS::CodeWhisperer::Cus-
                        tomization  ,  and  the  operator  is set to Equals or
                        NotEquals , the ARN must be in the following format:

                            o arn:<partition>:codewhisperer:<region>:<ac-
                              count_ID>:customization/<customization_ID>

                        When resources.type equals AWS::CodeWhisperer::Profile
                        , and the operator is set to Equals or NotEquals , the
                        ARN must be in the following format:

                            o arn:<partition>:codewhisperer:<region>:<ac-
                              count_ID>:profile/<profile_ID>

                        When resources.type equals  AWS::Cognito::IdentityPool
                        , and the operator is set to Equals or NotEquals , the
                        ARN must be in the following format:

                            o arn:<partition>:cognito-identity:<region>:<ac-
                              count_ID>:identitypool/<identity_pool_ID>

                        When resources.type equals AWS::DynamoDB::Stream , and
                        the operator is set to Equals or NotEquals ,  the  ARN
                        must be in the following format:

                            o arn:<partition>:dynamodb:<region>:<ac-
                              count_ID>:table/<table_name>/stream/<date_time>

                        When resources.type equals  AWS::EC2::Snapshot  ,  and
                        the  operator  is set to Equals or NotEquals , the ARN
                        must be in the following format:

                            o arn:<partition>:ec2:<region>::snapshot/<snap-
                              shot_ID>

                        When  resources.type  equals  AWS::EMRWAL::Workspace ,
                        and the operator is set to Equals or NotEquals  ,  the
                        ARN must be in the following format:

                            o arn:<partition>:emrwal:<region>:<ac-
                              count_ID>:workspace/<workspace_name>

                        When resources.type equals  AWS::FinSpace::Environment
                        , and the operator is set to Equals or NotEquals , the
                        ARN must be in the following format:

                            o arn:<partition>:finspace:<region>:<ac-
                              count_ID>:environment/<environment_ID>

                        When  resources.type equals AWS::Glue::Table , and the
                        operator is set to Equals or NotEquals , the ARN  must
                        be in the following format:

                            o arn:<partition>:glue:<region>:<account_ID>:ta-
                              ble/<database_name>/<table_name>

                        When resources.type  equals  AWS::GreengrassV2::Compo-
                        nentVersion  ,  and  the  operator is set to Equals or
                        NotEquals , the ARN must be in the following format:

                            o arn:<partition>:greengrass:<region>:<ac-
                              count_ID>:components/<component_name>

                        When  resources.type equals AWS::GreengrassV2::Deploy-
                        ment , and the operator is set to Equals or  NotEquals
                        , the ARN must be in the following format:

                            o arn:<partition>:greengrass:<region>:<ac-
                              count_ID>:deployments/<deployment_ID

                        When resources.type equals AWS::GuardDuty::Detector  ,
                        and  the  operator is set to Equals or NotEquals , the
                        ARN must be in the following format:

                            o arn:<partition>:guardduty:<region>:<ac-
                              count_ID>:detector/<detector_ID>

                        When resources.type equals AWS::IoT::Certificate , and
                        the operator is set to Equals or NotEquals ,  the  ARN
                        must be in the following format:

                            o arn:<partition>:iot:<region>:<ac-
                              count_ID>:cert/<certificate_ID>

                        When resources.type equals AWS::IoT::Thing ,  and  the
                        operator  is set to Equals or NotEquals , the ARN must
                        be in the following format:

                            o arn:<partition>:iot:<region>:<ac-
                              count_ID>:thing/<thing_ID>

                        When  resources.type  equals AWS::IoTSiteWise::Asset ,
                        and the operator is set to Equals or NotEquals  ,  the
                        ARN must be in the following format:

                            o arn:<partition>:iotsitewise:<region>:<ac-
                              count_ID>:asset/<asset_ID>

                        When  resources.type  equals   AWS::IoTSiteWise::Time-
                        Series  ,  and  the operator is set to Equals or NotE-
                        quals , the ARN must be in the following format:

                            o arn:<partition>:iotsitewise:<region>:<ac-
                              count_ID>:timeseries/<timeseries_ID>

                        When resources.type equals AWS::IoTTwinMaker::Entity ,
                        and the operator is set to Equals or NotEquals  ,  the
                        ARN must be in the following format:

                            o arn:<partition>:iottwinmaker:<region>:<ac-
                              count_ID>:workspace/<workspace_ID>/entity/<en-
                              tity_ID>

                        When      resources.type      equals     AWS::IoTTwin-
                        Maker::Workspace , and the operator is set  to  Equals
                        or  NotEquals  , the ARN must be in the following for-
                        mat:

                            o arn:<partition>:iottwinmaker:<region>:<ac-
                              count_ID>:workspace/<workspace_ID>

                        When  resources.type equals AWS::KendraRanking::Execu-
                        tionPlan , and the operator is set to Equals or  NotE-
                        quals , the ARN must be in the following format:

                            o arn:<partition>:kendra-ranking:<region>:<ac-
                              count_ID>:rescore-execution-plan/<rescore_execu-
                              tion_plan_ID>

                        When resources.type equals AWS::KinesisVideo::Stream ,
                        and the operator is set to Equals or NotEquals  ,  the
                        ARN must be in the following format:

                            o arn:<partition>:kinesisvideo:<region>:<ac-
                              count_ID>:stream/<stream_name>/<creation_time>

                        When     resources.type      equals      AWS::Managed-
                        Blockchain::Network  ,  and  the  operator  is  set to
                        Equals or NotEquals , the ARN must be in the following
                        format:

                            o arn:<partition>:managedblockchain:::net-
                              works/<network_name>

                        When     resources.type      equals      AWS::Managed-
                        Blockchain::Node  ,  and the operator is set to Equals
                        or NotEquals , the ARN must be in the  following  for-
                        mat:

                            o arn:<partition>:managedblockchain:<region>:<ac-
                              count_ID>:nodes/<node_ID>

                        When resources.type equals AWS::MedicalImaging::Datas-
                        tore  , and the operator is set to Equals or NotEquals
                        , the ARN must be in the following format:

                            o arn:<partition>:medical-imaging:<region>:<ac-
                              count_ID>:datastore/<data_store_ID>

                        When  resources.type equals AWS::NeptuneGraph::Graph ,
                        and the operator is set to Equals or NotEquals  ,  the
                        ARN must be in the following format:

                            o arn:<partition>:neptune-graph:<region>:<ac-
                              count_ID>:graph/<graph_ID>

                        When resources.type  equals  AWS::PCAConnectorAD::Con-
                        nector  ,  and  the operator is set to Equals or NotE-
                        quals , the ARN must be in the following format:

                            o arn:<partition>:pca-connector-ad:<region>:<ac-
                              count_ID>:connector/<connector_ID>

                        When  resources.type  equals AWS::QApps:QApp , and the
                        operator is set to Equals or NotEquals , the ARN  must
                        be in the following format:

                            o arn:<partition>:qapps:<region>:<account_ID>:ap-
                              plication/<application_UUID>/qapp/<qapp_UUID>

                        When resources.type equals AWS::QBusiness::Application
                        , and the operator is set to Equals or NotEquals , the
                        ARN must be in the following format:

                            o arn:<partition>:qbusiness:<region>:<ac-
                              count_ID>:application/<application_ID>

                        When  resources.type equals AWS::QBusiness::DataSource
                        , and the operator is set to Equals or NotEquals , the
                        ARN must be in the following format:

                            o arn:<partition>:qbusiness:<region>:<ac-
                              count_ID>:application/<application_ID>/in-
                              dex/<index_ID>/data-source/<datasource_ID>

                        When resources.type equals AWS::QBusiness::Index , and
                        the operator is set to Equals or NotEquals ,  the  ARN
                        must be in the following format:

                            o arn:<partition>:qbusiness:<region>:<ac-
                              count_ID>:application/<application_ID>/in-
                              dex/<index_ID>

                        When  resources.type equals AWS::QBusiness::WebExperi-
                        ence , and the operator is set to Equals or  NotEquals
                        , the ARN must be in the following format:

                            o arn:<partition>:qbusiness:<region>:<ac-
                              count_ID>:application/<application_ID>/web-expe-
                              rience/<web_experience_ID>

                        When  resources.type  equals AWS::RDS::DBCluster , and
                        the operator is set to Equals or NotEquals ,  the  ARN
                        must be in the following format:

                            o arn:<partition>:rds:<region>:<account_ID>:clus-
                              ter/<cluster_name>

                        When resources.type equals AWS::S3::AccessPoint ,  and
                        the  operator  is set to Equals or NotEquals , the ARN
                        must be in one of the following formats. To log events
                        on  all  objects  in  an S3 access point, we recommend
                        that you use only the access point ARN,  dont  include
                        the  object  path,  and  use  the  StartsWith  or Not-
                        StartsWith operators.

                            o arn:<partition>:s3:<region>:<account_ID>:access-
                              point/<access_point_name>

                            o arn:<partition>:s3:<region>:<account_ID>:access-
                              point/<access_point_name>/object/<object_path>

                        When  resources.type  equals  AWS::S3ObjectLambda::Ac-
                        cessPoint , and the operator is set to Equals or NotE-
                        quals , the ARN must be in the following format:

                            o arn:<partition>:s3-object-lambda:<region>:<ac-
                              count_ID>:accesspoint/<access_point_name>

                        When  resources.type  equals AWS::S3Outposts::Object ,
                        and the operator is set to Equals or NotEquals  ,  the
                        ARN must be in the following format:

                            o arn:<partition>:s3-outposts:<region>:<ac-
                              count_ID>:<object_path>

                        When resources.type equals AWS::SageMaker::Endpoint  ,
                        and  the  operator is set to Equals or NotEquals , the
                        ARN must be in the following format:

                            o arn:<partition>:sagemaker:<region>:<ac-
                              count_ID>:endpoint/<endpoint_name>

                        When resources.type equals AWS::SageMaker::Experiment-
                        TrialComponent , and the operator is set to Equals  or
                        NotEquals , the ARN must be in the following format:

                            o arn:<partition>:sagemaker:<region>:<ac-
                              count_ID>:experiment-trial-component/<experi-
                              ment_trial_component_name>

                        When  resources.type  equals  AWS::SageMaker::Feature-
                        Group , and the operator is set to Equals or NotEquals
                        , the ARN must be in the following format:

                            o arn:<partition>:sagemaker:<region>:<ac-
                              count_ID>:feature-group/<feature_group_name>

                        When resources.type equals  AWS::SCN::Instance  ,  and
                        the  operator  is set to Equals or NotEquals , the ARN
                        must be in the following format:

                            o arn:<partition>:scn:<region>:<account_ID>:in-
                              stance/<instance_ID>

                        When    resources.type    equals   AWS::ServiceDiscov-
                        ery::Namespace , and the operator is set to Equals  or
                        NotEquals , the ARN must be in the following format:

                            o arn:<partition>:servicediscovery:<region>:<ac-
                              count_ID>:namespace/<namespace_ID>

                        When resources.type equals AWS::ServiceDiscovery::Ser-
                        vice  , and the operator is set to Equals or NotEquals
                        , the ARN must be in the following format:

                            o arn:<partition>:servicediscovery:<region>:<ac-
                              count_ID>:service/<service_ID>

                        When  resources.type equals AWS::SNS::PlatformEndpoint
                        , and the operator is set to Equals or NotEquals , the
                        ARN must be in the following format:

                            o arn:<partition>:sns:<region>:<account_ID>:end-
                              point/<endpoint_type>/<endpoint_name>/<end-
                              point_ID>

                        When  resources.type  equals AWS::SNS::Topic , and the
                        operator is set to Equals or NotEquals , the ARN  must
                        be in the following format:

                            o arn:<partition>:sns:<region>:<ac-
                              count_ID>:<topic_name>

                        When resources.type equals AWS::SQS::Queue ,  and  the
                        operator  is set to Equals or NotEquals , the ARN must
                        be in the following format:

                            o arn:<partition>:sqs:<region>:<ac-
                              count_ID>:<queue_name>

                        When resources.type equals AWS::SSM::ManagedNode , and
                        the operator is set to Equals or NotEquals ,  the  ARN
                        must be in one of the following formats:

                            o arn:<partition>:ssm:<region>:<account_ID>:man-
                              aged-instance/<instance_ID>

                            o arn:<partition>:ec2:<region>:<account_ID>:in-
                              stance/<instance_ID>

                        When   resources.type   equals  AWS::SSMMessages::Con-
                        trolChannel , and the operator is  set  to  Equals  or
                        NotEquals , the ARN must be in the following format:

                            o arn:<partition>:ssmmessages:<region>:<ac-
                              count_ID>:control-channel/<channel_ID>

                        When resources.type equals AWS::SWF::Domain , and  the
                        operator  is set to Equals or NotEquals , the ARN must
                        be in the following format:

                            o arn:<partition>:swf:<region>:<account_ID>:do-
                              main/<domain_name>

                        When  resources.type  equals AWS::ThinClient::Device ,
                        and the operator is set to Equals or NotEquals  ,  the
                        ARN must be in the following format:

                            o arn:<partition>:thinclient:<region>:<ac-
                              count_ID>:device/<device_ID>

                        When resources.type  equals  AWS::ThinClient::Environ-
                        ment  , and the operator is set to Equals or NotEquals
                        , the ARN must be in the following format:

                            o arn:<partition>:thinclient:<region>:<ac-
                              count_ID>:environment/<environment_ID>

                        When resources.type equals AWS::Timestream::Database ,
                        and the operator is set to Equals or NotEquals  ,  the
                        ARN must be in the following format:

                            o arn:<partition>:timestream:<region>:<ac-
                              count_ID>:database/<database_name>

                        When resources.type  equals  AWS::Timestream::Table  ,
                        and  the  operator is set to Equals or NotEquals , the
                        ARN must be in the following format:

                            o arn:<partition>:timestream:<region>:<ac-
                              count_ID>:database/<database_name>/table/<ta-
                              ble_name>

                        When   resources.type   equals    AWS::VerifiedPermis-
                        sions::PolicyStore , and the operator is set to Equals
                        or NotEquals , the ARN must be in the  following  for-
                        mat:

                            o arn:<partition>:verifiedpermissions:<re-
                              gion>:<account_ID>:policy-store/<pol-
                              icy_store_UUID>

                     Equals -> (list)
                        An  operator that includes events that match the exact
                        value of the event record field specified as the value
                        of  Field  .  This is the only valid operator that you
                        can use with the readOnly , eventCategory  ,  and  re-
                        sources.type fields.

                        (string)

                     StartsWith -> (list)
                        An  operator that includes events that match the first
                        few characters of the event record field specified  as
                        the value of Field .

                        (string)

                     EndsWith -> (list)
                        An  operator  that includes events that match the last
                        few characters of the event record field specified  as
                        the value of Field .

                        (string)

                     NotEquals -> (list)
                        An  operator that excludes events that match the exact
                        value of the event record field specified as the value
                        of Field .

                        (string)

                     NotStartsWith -> (list)
                        An  operator that excludes events that match the first
                        few characters of the event record field specified  as
                        the value of Field .

                        (string)

                     NotEndsWith -> (list)
                        An  operator  that excludes events that match the last
                        few characters of the event record field specified  as
                        the value of Field .

                        (string)

       JSON Syntax:

          [
            {
              "Name": "string",
              "FieldSelectors": [
                {
                  "Field": "string",
                  "Equals": ["string", ...],
                  "StartsWith": ["string", ...],
                  "EndsWith": ["string", ...],
                  "NotEquals": ["string", ...],
                  "NotStartsWith": ["string", ...],
                  "NotEndsWith": ["string", ...]
                }
                ...
              ]
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       Example 1: Configure a trail to log management events and  data  events
       by using advanced event selectors

       You  can add advanced event selectors, and conditions for your advanced
       event selectors, up to a maximum of 500 values for all  conditions  and
       selectors  on  a trail. You can use advanced event selectors to log all
       available data event types. You can use either advanced event selectors
       or basic event selectors, but not both. If you apply advanced event se-
       lectors to a trail, any existing basic event selectors are overwritten.

       The following example creates an advanced event selector  for  a  trail
       named  myTrail to log all management events, log S3 PutObject and Dele-
       teObject API calls for all but one S3 bucket, log data API calls for  a
       Lambda  function  named myFunction, and log Publish API calls on an SNS
       topic named myTopic.

          aws cloudtrail put-event-selectors \
              --trail-name myTrail \
              --advanced-event-selectors '[{"Name": "Log all management events", "FieldSelectors": [{ "Field": "eventCategory", "Equals": ["Management"] }] },{"Name": "Log PutObject and DeleteObject events for all but one bucket","FieldSelectors": [{ "Field": "eventCategory", "Equals": ["Data"] },{ "Field": "resources.type", "Equals": ["AWS::S3::Object"] },{ "Field": "eventName", "Equals": ["PutObject","DeleteObject"] },{ "Field": "resources.ARN", "NotStartsWith": ["arn:aws:s3:::sample_bucket_name/"] }]},{"Name": "Log data events for a specific Lambda function","FieldSelectors": [{ "Field": "eventCategory", "Equals": ["Data"] },{ "Field": "resources.type", "Equals": ["AWS::Lambda::Function"] },{ "Field": "resources.ARN", "Equals": ["arn:aws:lambda:us-east-1:123456789012:function:myFunction"] }]},{"Name": "Log all Publish API calls on a specific SNS topic","FieldSelectors": [{ "Field": "eventCategory", "Equals": ["Data"] },{ "Field": "resources.type", "Equals": ["AWS::SNS::Topic"] },{ "Field": "eventName", "Equals": ["Publish"] },{ "Field": "resources.ARN", "Equals": ["arn:aws:sns:us-east-1:123456789012:myTopic.fifo"] }]}]'

       Output:

          {
              "TrailARN": "arn:aws:cloudtrail:us-east-1:123456789012:trail/myTrail",
              "AdvancedEventSelectors": [
                  {
                      "Name": "Log all management events",
                      "FieldSelectors": [
                          {
                              "Field": "eventCategory",
                              "Equals": [
                                  "Management"
                              ]
                          }
                      ]
                  },
                  {
                      "Name": "Log PutObject and DeleteObject events for all but one bucket",
                      "FieldSelectors": [
                          {
                              "Field": "eventCategory",
                              "Equals": [
                                  "Data"
                              ]
                          },
                          {
                              "Field": "resources.type",
                              "Equals": [
                                  "AWS::S3::Object"
                              ]
                          },
                          {
                              "Field": "eventName",
                              "Equals": [
                                  "PutObject",
                                  "DeleteObject"
                              ]
                          },
                          {
                              "Field": "resources.ARN",
                              "NotStartsWith": [
                                  "arn:aws:s3:::sample_bucket_name/"
                              ]
                          }
                      ]
                  },
                  {
                      "Name": "Log data events for a specific Lambda function",
                      "FieldSelectors": [
                          {
                              "Field": "eventCategory",
                              "Equals": [
                                  "Data"
                              ]
                          },
                          {
                              "Field": "resources.type",
                              "Equals": [
                                  "AWS::Lambda::Function"
                              ]
                          },
                          {
                              "Field": "resources.ARN",
                              "Equals": [
                                  "arn:aws:lambda:us-east-1:123456789012:function:myFunction"
                              ]
                          }
                      ]
                  },
                  {
                      "Name": "Log all Publish API calls on a specific SNS topic",
                      "FieldSelectors": [
                          {
                              "Field": "eventCategory",
                              "Equals": [
                                  "Data"
                              ]
                          },
                          {
                              "Field": "resources.type",
                              "Equals": [
                                  "AWS::SNS::Topic"
                              ]
                          },
                          {
                              "Field": "eventName",
                              "Equals": [
                                  "Publish"
                              ]
                          },
                          {
                              "Field": "resources.ARN",
                              "Equals": [
                                  "arn:aws:sns:us-east-1:123456789012:myTopic.fifo"
                              ]
                          }
                      ]
                  }
              ]
          }

       For more information, see Log events by using advanced event  selectors
       in the AWS CloudTrail User Guide.

       Example  2: Configure event selectors for a trail to log all management
       events and data events

       You can configure up to 5 event selectors for a trail  and  up  to  250
       data resources for a trail. Event selectors are also referred to as ba-
       sic event selectors. You can use  event  selectors  to  log  management
       events  and data events for S3 objects, Lambda functions, and DynnamoDB
       tables. To log data events for other resource types, you must  use  ad-
       vanced event selectors.

       The  following  example  creates  an  event  selector for a trail named
       TrailName to include all management events, data events for two  Amazon
       S3  bucket/prefix combinations, and data events for a single AWS Lambda
       function named hello-world-python-function.

          aws cloudtrail put-event-selectors \
              --trail-name TrailName \
              --event-selectors '[{"ReadWriteType": "All","IncludeManagementEvents": true,"DataResources": [{"Type":"AWS::S3::Object", "Values": ["arn:aws:s3:::mybucket/prefix","arn:aws:s3:::mybucket2/prefix2"]},{"Type": "AWS::Lambda::Function","Values": ["arn:aws:lambda:us-west-2:999999999999:function:hello-world-python-function"]}]}]'

       Output:

          {
              "EventSelectors": [
                  {
                      "IncludeManagementEvents": true,
                      "DataResources": [
                          {
                              "Values": [
                                  "arn:aws:s3:::mybucket/prefix",
                                  "arn:aws:s3:::mybucket2/prefix2"
                              ],
                              "Type": "AWS::S3::Object"
                          },
                          {
                              "Values": [
                                  "arn:aws:lambda:us-west-2:123456789012:function:hello-world-python-function"
                              ],
                              "Type": "AWS::Lambda::Function"
                          },
                      ],
                      "ReadWriteType": "All"
                  }
              ],
              "TrailARN": "arn:aws:cloudtrail:us-east-2:123456789012:trail/TrailName"
          }

       For more information, see Log events by using basic event selectors  in
       the AWS CloudTrail User Guide.

       Example  3:  Configure  event  selectors  for a trail to log management
       events, all S3 data events on S3 objects, and all Lambda data events on
       functions in your account

       The  following  example  creates  an  event  selector for a trail named
       TrailName2 that includes all management events, and all data events for
       all Amazon S3 buckets and AWS Lambda functions in the AWS account.

          aws cloudtrail put-event-selectors \
              --trail-name TrailName2 \
              --event-selectors '[{"ReadWriteType": "All","IncludeManagementEvents": true,"DataResources": [{"Type":"AWS::S3::Object", "Values": ["arn:aws:s3"]},{"Type": "AWS::Lambda::Function","Values": ["arn:aws:lambda"]}]}]'

       Output:

          {
              "EventSelectors": [
                  {
                      "IncludeManagementEvents": true,
                      "DataResources": [
                          {
                              "Values": [
                                  "arn:aws:s3"
                              ],
                              "Type": "AWS::S3::Object"
                          },
                          {
                              "Values": [
                                  "arn:aws:lambda"
                              ],
                              "Type": "AWS::Lambda::Function"
                          },
                      ],
                      "ReadWriteType": "All"
                  }
              ],
              "TrailARN": "arn:aws:cloudtrail:us-east-2:123456789012:trail/TrailName2"
          }

       For  more information, see Log events by using basic event selectors in
       the AWS CloudTrail User Guide.

OUTPUT
       TrailARN -> (string)
          Specifies the ARN of the trail that was updated  with  event  selec-
          tors. The following is the format of a trail ARN.
              arn:aws:cloudtrail:us-east-2:123456789012:trail/MyTrail

       EventSelectors -> (list)
          Specifies the event selectors configured for your trail.

          (structure)
              Use  event  selectors to further specify the management and data
              event settings for your trail. By default, trails created  with-
              out  specific event selectors will be configured to log all read
              and write management events, and no data events. When  an  event
              occurs  in your account, CloudTrail evaluates the event selector
              for all trails. For each trail, if the event matches  any  event
              selector,  the  trail processes and logs the event. If the event
              doesn't match any event selector,  the  trail  doesn't  log  the
              event.

              You can configure up to five event selectors for a trail.

              You  cannot apply both event selectors and advanced event selec-
              tors to a trail.

              ReadWriteType -> (string)
                 Specify if you want  your  trail  to  log  read-only  events,
                 write-only  events,  or all. For example, the EC2 GetConsole-
                 Output is a read-only API operation  and  RunInstances  is  a
                 write-only API operation.

                 By default, the value is All .

              IncludeManagementEvents -> (boolean)
                 Specify if you want your event selector to include management
                 events for your trail.

                 For more information, see Management Events in the CloudTrail
                 User Guide .

                 By default, the value is true .

                 The  first copy of management events is free. You are charged
                 for additional copies of management events that you are  log-
                 ging on any subsequent trail in the same Region. For more in-
                 formation about CloudTrail pricing, see CloudTrail Pricing .

              DataResources -> (list)
                 CloudTrail supports data event logging for Amazon S3 objects,
                 Lambda functions, and Amazon DynamoDB tables with basic event
                 selectors. You can specify up to 250 resources for  an  indi-
                 vidual event selector, but the total number of data resources
                 cannot exceed 250 across all event selectors in a trail. This
                 limit  does  not  apply if you configure resource logging for
                 all data events.

                 For more information, see Data Events and  Limits  in  Cloud-
                 Trail in the CloudTrail User Guide .

                 (structure)
                     Data events provide information about the resource opera-
                     tions performed on or within a resource itself. These are
                     also  known  as data plane operations. You can specify up
                     to 250 data resources for a trail.

                     Configure the DataResource to specify the  resource  type
                     and resource ARNs for which you want to log data events.

                     You  can  specify  the  following  resource types in your
                     event selectors for your trail:

                     o AWS::DynamoDB::Table

                     o AWS::Lambda::Function

                     o AWS::S3::Object

                     NOTE:
                        The total number of allowed  data  resources  is  250.
                        This  number  can be distributed between 1 and 5 event
                        selectors, but the total cannot exceed 250 across  all
                        selectors for the trail.

                        If you are using advanced event selectors, the maximum
                        total number of values for all conditions, across  all
                        advanced event selectors for the trail, is 500.

                     The following example demonstrates how logging works when
                     you configure logging of all data events for an S3 bucket
                     named  bucket-1  .  In  this example, the CloudTrail user
                     specified an empty prefix, and the  option  to  log  both
                     Read and Write data events.

                     o A user uploads an image file to bucket-1 .

                     o The  PutObject  API  operation  is  an  Amazon  S3  ob-
                       ject-level API. It is  recorded  as  a  data  event  in
                       CloudTrail. Because the CloudTrail user specified an S3
                       bucket with an empty prefix, events that occur  on  any
                       object  in  that bucket are logged. The trail processes
                       and logs the event.

                     o A user uploads an object to an Amazon S3  bucket  named
                       arn:aws:s3:::bucket-2 .

                     o The  PutObject  API operation occurred for an object in
                       an S3 bucket that the CloudTrail  user  didn't  specify
                       for the trail. The trail doesnt log the event.

                     The following example demonstrates how logging works when
                     you configure logging of Lambda data events for a  Lambda
                     function  named MyLambdaFunction , but not for all Lambda
                     functions.

                     o A user runs a script that includes a call  to  the  My-
                       LambdaFunction  function  and the MyOtherLambdaFunction
                       function.

                     o The Invoke API  operation  on  MyLambdaFunction  is  an
                       Lambda  API.  It  is recorded as a data event in Cloud-
                       Trail. Because the CloudTrail  user  specified  logging
                       data  events  for MyLambdaFunction , any invocations of
                       that function are logged. The trail processes and  logs
                       the event.

                     o The Invoke API operation on MyOtherLambdaFunction is an
                       Lambda API. Because the CloudTrail user did not specify
                       logging  data  events for all Lambda functions, the In-
                       voke operation for MyOtherLambdaFunction does not match
                       the  function specified for the trail. The trail doesnt
                       log the event.

                     Type -> (string)
                        The resource type  in  which  you  want  to  log  data
                        events.  You can specify the following basic event se-
                        lector resource types:

                        o AWS::DynamoDB::Table

                        o AWS::Lambda::Function

                        o AWS::S3::Object

                        Additional resource types are  available  through  ad-
                        vanced  event  selectors.  For  more information about
                        these     additional     resource      types,      see
                        AdvancedFieldSelector .

                     Values -> (list)
                        An array of Amazon Resource Name (ARN) strings or par-
                        tial ARN strings for the specified resource type.

                        o To log data events for all objects in all S3 buckets
                          in  your  Amazon  Web  Services account, specify the
                          prefix as arn:aws:s3 .

                        NOTE:
                            This also enables logging of data  event  activity
                            performed  by  any user or role in your Amazon Web
                            Services account, even if that  activity  is  per-
                            formed  on a bucket that belongs to another Amazon
                            Web Services account.

                        o To log data events for all objects in an S3  bucket,
                          specify  the  bucket and an empty object prefix such
                          as arn:aws:s3:::bucket-1/  .  The  trail  logs  data
                          events for all objects in this S3 bucket.

                        o To log data events for specific objects, specify the
                          S3   bucket    and    object    prefix    such    as
                          arn:aws:s3:::bucket-1/example-images   .  The  trail
                          logs data events for objects in this S3 bucket  that
                          match the prefix.

                        o To  log data events for all Lambda functions in your
                          Amazon Web Services account, specify the  prefix  as
                          arn:aws:lambda .

                        NOTE:
                            This  also enables logging of Invoke activity per-
                            formed by any user or role in your Amazon Web Ser-
                            vices  account, even if that activity is performed
                            on a function that belongs to another  Amazon  Web
                            Services account.

                        o To  log  data events for a specific Lambda function,
                          specify the function ARN.

                        NOTE:
                            Lambda function ARNs are exact.  For  example,  if
                            you       specify       a       function       ARN
                            arn:aws:lambda:us-west-2:111111111111:func-
                            tion:helloworld  , data events will only be logged
                            for    arn:aws:lambda:us-west-2:111111111111:func-
                            tion:helloworld  .  They  will  not  be logged for
                            arn:aws:lambda:us-west-2:111111111111:func-
                            tion:helloworld2 .

                        o To  log  data events for all DynamoDB tables in your
                          Amazon Web Services account, specify the  prefix  as
                          arn:aws:dynamodb .

                        (string)

              ExcludeManagementEventSources -> (list)
                 An  optional  list of service event sources from which you do
                 not want management events to be logged  on  your  trail.  In
                 this release, the list can be empty (disables the filter), or
                 it can filter out Key Management Service or Amazon  RDS  Data
                 API events by containing kms.amazonaws.com or rdsdata.amazon-
                 aws.com . By default, ExcludeManagementEventSources is empty,
                 and  KMS  and  Amazon  RDS Data API events are logged to your
                 trail. You can exclude management event sources only  in  Re-
                 gions that support the event source.

                 (string)

       AdvancedEventSelectors -> (list)
          Specifies the advanced event selectors configured for your trail.

          (structure)
              Advanced  event  selectors let you create fine-grained selectors
              for CloudTrail management and data events. They help you control
              costs  by  logging  only those events that are important to you.
              For more information about advanced event selectors, see Logging
              management events and Logging data events in the CloudTrail User
              Guide .

              You cannot apply both event selectors and advanced event  selec-
              tors to a trail.
                 Supported  CloudTrail  event  record  fields  for  management
                 events

              o eventCategory (required)

              o eventSource

              o readOnly
                 Supported CloudTrail event record fields for data events

              o eventCategory (required)

              o resources.type (required)

              o readOnly

              o eventName

              o resources.ARN

              NOTE:
                 For event data stores for CloudTrail Insights events,  Config
                 configuration  items,  Audit Manager evidence, or events out-
                 side of Amazon Web Services,  the  only  supported  field  is
                 eventCategory .

              Name -> (string)
                 An optional, descriptive name for an advanced event selector,
                 such as "Log data events for only two S3 buckets".

              FieldSelectors -> (list)
                 Contains all selector statements in an advanced event  selec-
                 tor.

                 (structure)
                     A  single  selector statement in an advanced event selec-
                     tor.

                     Field -> (string)
                        A field in a CloudTrail event record on which to  fil-
                        ter  events  to  be  logged. For event data stores for
                        CloudTrail  Insights  events,   Config   configuration
                        items,  Audit  Manager  evidence, or events outside of
                        Amazon Web Services, the field is used  only  for  se-
                        lecting events as filtering is not supported.

                        For CloudTrail management events, supported fields in-
                        clude readOnly , eventCategory , and eventSource .

                        For CloudTrail data events, supported  fields  include
                        readOnly  , eventCategory , eventName , resources.type
                        , and resources.ARN .

                        For event data stores for CloudTrail Insights  events,
                        Config configuration items, Audit Manager evidence, or
                        events outside of Amazon Web Services, the  only  sup-
                        ported field is eventCategory .

                        o

                          **
                          readOnly ** - Optional. Can be set to Equals a value
                          of true or false . If you do  not  add  this  field,
                          CloudTrail  logs both read and write events. A value
                          of true logs only read events. A value of false logs
                          only write events.

                        System Message: WARNING/2 (<string>:, line 2054)
                          Inline strong start-string without end-string.

                        o

                          **
                          eventSource  **  -  For  filtering management events
                          only. This can  be  set  to  NotEquals   kms.amazon-
                          aws.com or NotEquals  rdsdata.amazonaws.com .

                        System Message: WARNING/2 (<string>:, line 2056)
                          Inline strong start-string without end-string.

                        o

                          **
                          eventName  ** - Can use any operator. You can use it
                          to lter in or lter out  any  data  event  logged  to
                          CloudTrail,  such as PutBucket or GetSnapshotBlock .
                          You can have multiple values for this eld, separated
                          by commas.

                        System Message: WARNING/2 (<string>:, line 2058)
                          Inline strong start-string without end-string.

                        o

                          **
                          eventCategory  ** - This is required and must be set
                          to Equals .

                        System Message: WARNING/2 (<string>:, line 2060)
                          Inline strong start-string without end-string.

                          o For CloudTrail management events, the  value  must
                            be Management .

                          o For CloudTrail data events, the value must be Data
                            .

                        The following are used only for event data stores:

                            o For CloudTrail Insights events, the  value  must
                              be Insight .

                            o For  Config  configuration items, the value must
                              be ConfigurationItem .

                            o For Audit Manager evidence, the  value  must  be
                              Evidence .

                            o For  non-Amazon  Web  Services events, the value
                              must be ActivityAuditLog .

                        o

                          **
                          resources.type ** - This eld is required for  Cloud-
                          Trail  data  events. resources.type can only use the
                          Equals operator, and the value can  be  one  of  the
                          following:

                        System Message: WARNING/2 (<string>:, line 2086)
                          Inline strong start-string without end-string.

                          o AWS::DynamoDB::Table

                          o AWS::Lambda::Function

                          o AWS::S3::Object

                          o AWS::AppConfig::Configuration

                          o AWS::B2BI::Transformer

                          o AWS::Bedrock::AgentAlias

                          o AWS::Bedrock::KnowledgeBase

                          o AWS::Cassandra::Table

                          o AWS::CloudFront::KeyValueStore

                          o AWS::CloudTrail::Channel

                          o AWS::CodeWhisperer::Customization

                          o AWS::CodeWhisperer::Profile

                          o AWS::Cognito::IdentityPool

                          o AWS::DynamoDB::Stream

                          o AWS::EC2::Snapshot

                          o AWS::EMRWAL::Workspace

                          o AWS::FinSpace::Environment

                          o AWS::Glue::Table

                          o AWS::GreengrassV2::ComponentVersion

                          o AWS::GreengrassV2::Deployment

                          o AWS::GuardDuty::Detector

                          o AWS::IoT::Certificate

                          o AWS::IoT::Thing

                          o AWS::IoTSiteWise::Asset

                          o AWS::IoTSiteWise::TimeSeries

                          o AWS::IoTTwinMaker::Entity

                          o AWS::IoTTwinMaker::Workspace

                          o AWS::KendraRanking::ExecutionPlan

                          o AWS::KinesisVideo::Stream

                          o AWS::ManagedBlockchain::Network

                          o AWS::ManagedBlockchain::Node

                          o AWS::MedicalImaging::Datastore

                          o AWS::NeptuneGraph::Graph

                          o AWS::PCAConnectorAD::Connector

                          o AWS::QApps:QApp

                          o AWS::QBusiness::Application

                          o AWS::QBusiness::DataSource

                          o AWS::QBusiness::Index

                          o AWS::QBusiness::WebExperience

                          o AWS::RDS::DBCluster

                          o AWS::S3::AccessPoint

                          o AWS::S3ObjectLambda::AccessPoint

                          o AWS::S3Outposts::Object

                          o AWS::SageMaker::Endpoint

                          o AWS::SageMaker::ExperimentTrialComponent

                          o AWS::SageMaker::FeatureGroup

                          o AWS::ServiceDiscovery::Namespace

                          o AWS::ServiceDiscovery::Service

                          o AWS::SCN::Instance

                          o AWS::SNS::PlatformEndpoint

                          o AWS::SNS::Topic

                          o AWS::SQS::Queue

                          o AWS::SSM::ManagedNode

                          o AWS::SSMMessages::ControlChannel

                          o AWS::SWF::Domain

                          o AWS::ThinClient::Device

                          o AWS::ThinClient::Environment

                          o AWS::Timestream::Database

                          o AWS::Timestream::Table

                          o AWS::VerifiedPermissions::PolicyStore

                          o AWS::XRay::Trace

                        You can have only one resources.type eld per selector.
                        To log data events on more than one resource type, add
                        another selector.

                        o

                          **
                          resources.ARN ** - You can use any operator with re-
                          sources.ARN , but if you use Equals or  NotEquals  ,
                          the  value must exactly match the ARN of a valid re-
                          source of the type you've specied in the template as
                          the value of resources.type.

                        System Message: WARNING/2 (<string>:, line 2218)
                          Inline strong start-string without end-string.

                        NOTE:
                               You can't use the resources.ARN field to filter
                               resource types that do not have ARNs.

                            The resources.ARN field can be set one of the fol-
                            lowing. If resources.type equals AWS::S3::Object ,
                            the ARN must be in one of the  following  formats.
                            To  log  all data events for all objects in a spe-
                            cific S3 bucket, use the StartsWith operator,  and
                            include only the bucket ARN as the matching value.
                            The trailing slash is intentional; do not  exclude
                            it. Replace the text between less than and greater
                            than symbols (<>) with resource-specific  informa-
                            tion.

                               o arn:<partition>:s3:::<bucket_name>/

                               o arn:<partition>:s3:::<bucket_name>/<ob-
                                 ject_path>/

                        When resources.type equals AWS::DynamoDB::Table ,  and
                        the  operator  is set to Equals or NotEquals , the ARN
                        must be in the following format:

                            o arn:<partition>:dynamodb:<region>:<ac-
                              count_ID>:table/<table_name>

                        When resources.type equals AWS::Lambda::Function , and
                        the operator is set to Equals or NotEquals ,  the  ARN
                        must be in the following format:

                            o arn:<partition>:lambda:<region>:<ac-
                              count_ID>:function:<function_name>

                        When resources.type equals  AWS::AppConfig::Configura-
                        tion  , and the operator is set to Equals or NotEquals
                        , the ARN must be in the following format:

                            o arn:<partition>:appconfig:<region>:<ac-
                              count_ID>:application/<application_ID>/environ-
                              ment/<environment_ID>/configuration/<configura-
                              tion_profile_ID>

                        When  resources.type  equals  AWS::B2BI::Transformer ,
                        and the operator is set to Equals or NotEquals  ,  the
                        ARN must be in the following format:

                            o arn:<partition>:b2bi:<region>:<ac-
                              count_ID>:transformer/<transformer_ID>

                        When resources.type equals AWS::Bedrock::AgentAlias  ,
                        and  the  operator is set to Equals or NotEquals , the
                        ARN must be in the following format:

                            o arn:<partition>:bedrock:<region>:<ac-
                              count_ID>:agent-alias/<agent_ID>/<alias_ID>

                        When resources.type equals AWS::Bedrock::KnowledgeBase
                        , and the operator is set to Equals or NotEquals , the
                        ARN must be in the following format:

                            o arn:<partition>:bedrock:<region>:<ac-
                              count_ID>:knowledge-base/<knowledge_base_ID>

                        When resources.type equals AWS::Cassandra::Table , and
                        the  operator  is set to Equals or NotEquals , the ARN
                        must be in the following format:

                            o arn:<partition>:cassandra:<region>:<ac-
                              count_ID>:/keyspace/<keyspace_name>/table/<ta-
                              ble_name>

                        When resources.type equals  AWS::CloudFront::KeyValue-
                        Store , and the operator is set to Equals or NotEquals
                        , the ARN must be in the following format:

                            o arn:<partition>:cloudfront:<region>:<ac-
                              count_ID>:key-value-store/<KVS_name>

                        When  resources.type equals AWS::CloudTrail::Channel ,
                        and the operator is set to Equals or NotEquals  ,  the
                        ARN must be in the following format:

                            o arn:<partition>:cloudtrail:<region>:<ac-
                              count_ID>:channel/<channel_UUID>

                        When  resources.type  equals  AWS::CodeWhisperer::Cus-
                        tomization  ,  and  the  operator  is set to Equals or
                        NotEquals , the ARN must be in the following format:

                            o arn:<partition>:codewhisperer:<region>:<ac-
                              count_ID>:customization/<customization_ID>

                        When resources.type equals AWS::CodeWhisperer::Profile
                        , and the operator is set to Equals or NotEquals , the
                        ARN must be in the following format:

                            o arn:<partition>:codewhisperer:<region>:<ac-
                              count_ID>:profile/<profile_ID>

                        When resources.type equals  AWS::Cognito::IdentityPool
                        , and the operator is set to Equals or NotEquals , the
                        ARN must be in the following format:

                            o arn:<partition>:cognito-identity:<region>:<ac-
                              count_ID>:identitypool/<identity_pool_ID>

                        When resources.type equals AWS::DynamoDB::Stream , and
                        the operator is set to Equals or NotEquals ,  the  ARN
                        must be in the following format:

                            o arn:<partition>:dynamodb:<region>:<ac-
                              count_ID>:table/<table_name>/stream/<date_time>

                        When resources.type equals  AWS::EC2::Snapshot  ,  and
                        the  operator  is set to Equals or NotEquals , the ARN
                        must be in the following format:

                            o arn:<partition>:ec2:<region>::snapshot/<snap-
                              shot_ID>

                        When  resources.type  equals  AWS::EMRWAL::Workspace ,
                        and the operator is set to Equals or NotEquals  ,  the
                        ARN must be in the following format:

                            o arn:<partition>:emrwal:<region>:<ac-
                              count_ID>:workspace/<workspace_name>

                        When resources.type equals  AWS::FinSpace::Environment
                        , and the operator is set to Equals or NotEquals , the
                        ARN must be in the following format:

                            o arn:<partition>:finspace:<region>:<ac-
                              count_ID>:environment/<environment_ID>

                        When  resources.type equals AWS::Glue::Table , and the
                        operator is set to Equals or NotEquals , the ARN  must
                        be in the following format:

                            o arn:<partition>:glue:<region>:<account_ID>:ta-
                              ble/<database_name>/<table_name>

                        When resources.type  equals  AWS::GreengrassV2::Compo-
                        nentVersion  ,  and  the  operator is set to Equals or
                        NotEquals , the ARN must be in the following format:

                            o arn:<partition>:greengrass:<region>:<ac-
                              count_ID>:components/<component_name>

                        When  resources.type equals AWS::GreengrassV2::Deploy-
                        ment , and the operator is set to Equals or  NotEquals
                        , the ARN must be in the following format:

                            o arn:<partition>:greengrass:<region>:<ac-
                              count_ID>:deployments/<deployment_ID

                        When resources.type equals AWS::GuardDuty::Detector  ,
                        and  the  operator is set to Equals or NotEquals , the
                        ARN must be in the following format:

                            o arn:<partition>:guardduty:<region>:<ac-
                              count_ID>:detector/<detector_ID>

                        When resources.type equals AWS::IoT::Certificate , and
                        the operator is set to Equals or NotEquals ,  the  ARN
                        must be in the following format:

                            o arn:<partition>:iot:<region>:<ac-
                              count_ID>:cert/<certificate_ID>

                        When resources.type equals AWS::IoT::Thing ,  and  the
                        operator  is set to Equals or NotEquals , the ARN must
                        be in the following format:

                            o arn:<partition>:iot:<region>:<ac-
                              count_ID>:thing/<thing_ID>

                        When  resources.type  equals AWS::IoTSiteWise::Asset ,
                        and the operator is set to Equals or NotEquals  ,  the
                        ARN must be in the following format:

                            o arn:<partition>:iotsitewise:<region>:<ac-
                              count_ID>:asset/<asset_ID>

                        When  resources.type  equals   AWS::IoTSiteWise::Time-
                        Series  ,  and  the operator is set to Equals or NotE-
                        quals , the ARN must be in the following format:

                            o arn:<partition>:iotsitewise:<region>:<ac-
                              count_ID>:timeseries/<timeseries_ID>

                        When resources.type equals AWS::IoTTwinMaker::Entity ,
                        and the operator is set to Equals or NotEquals  ,  the
                        ARN must be in the following format:

                            o arn:<partition>:iottwinmaker:<region>:<ac-
                              count_ID>:workspace/<workspace_ID>/entity/<en-
                              tity_ID>

                        When      resources.type      equals     AWS::IoTTwin-
                        Maker::Workspace , and the operator is set  to  Equals
                        or  NotEquals  , the ARN must be in the following for-
                        mat:

                            o arn:<partition>:iottwinmaker:<region>:<ac-
                              count_ID>:workspace/<workspace_ID>

                        When  resources.type equals AWS::KendraRanking::Execu-
                        tionPlan , and the operator is set to Equals or  NotE-
                        quals , the ARN must be in the following format:

                            o arn:<partition>:kendra-ranking:<region>:<ac-
                              count_ID>:rescore-execution-plan/<rescore_execu-
                              tion_plan_ID>

                        When resources.type equals AWS::KinesisVideo::Stream ,
                        and the operator is set to Equals or NotEquals  ,  the
                        ARN must be in the following format:

                            o arn:<partition>:kinesisvideo:<region>:<ac-
                              count_ID>:stream/<stream_name>/<creation_time>

                        When     resources.type      equals      AWS::Managed-
                        Blockchain::Network  ,  and  the  operator  is  set to
                        Equals or NotEquals , the ARN must be in the following
                        format:

                            o arn:<partition>:managedblockchain:::net-
                              works/<network_name>

                        When     resources.type      equals      AWS::Managed-
                        Blockchain::Node  ,  and the operator is set to Equals
                        or NotEquals , the ARN must be in the  following  for-
                        mat:

                            o arn:<partition>:managedblockchain:<region>:<ac-
                              count_ID>:nodes/<node_ID>

                        When resources.type equals AWS::MedicalImaging::Datas-
                        tore  , and the operator is set to Equals or NotEquals
                        , the ARN must be in the following format:

                            o arn:<partition>:medical-imaging:<region>:<ac-
                              count_ID>:datastore/<data_store_ID>

                        When  resources.type equals AWS::NeptuneGraph::Graph ,
                        and the operator is set to Equals or NotEquals  ,  the
                        ARN must be in the following format:

                            o arn:<partition>:neptune-graph:<region>:<ac-
                              count_ID>:graph/<graph_ID>

                        When resources.type  equals  AWS::PCAConnectorAD::Con-
                        nector  ,  and  the operator is set to Equals or NotE-
                        quals , the ARN must be in the following format:

                            o arn:<partition>:pca-connector-ad:<region>:<ac-
                              count_ID>:connector/<connector_ID>

                        When  resources.type  equals AWS::QApps:QApp , and the
                        operator is set to Equals or NotEquals , the ARN  must
                        be in the following format:

                            o arn:<partition>:qapps:<region>:<account_ID>:ap-
                              plication/<application_UUID>/qapp/<qapp_UUID>

                        When resources.type equals AWS::QBusiness::Application
                        , and the operator is set to Equals or NotEquals , the
                        ARN must be in the following format:

                            o arn:<partition>:qbusiness:<region>:<ac-
                              count_ID>:application/<application_ID>

                        When  resources.type equals AWS::QBusiness::DataSource
                        , and the operator is set to Equals or NotEquals , the
                        ARN must be in the following format:

                            o arn:<partition>:qbusiness:<region>:<ac-
                              count_ID>:application/<application_ID>/in-
                              dex/<index_ID>/data-source/<datasource_ID>

                        When resources.type equals AWS::QBusiness::Index , and
                        the operator is set to Equals or NotEquals ,  the  ARN
                        must be in the following format:

                            o arn:<partition>:qbusiness:<region>:<ac-
                              count_ID>:application/<application_ID>/in-
                              dex/<index_ID>

                        When  resources.type equals AWS::QBusiness::WebExperi-
                        ence , and the operator is set to Equals or  NotEquals
                        , the ARN must be in the following format:

                            o arn:<partition>:qbusiness:<region>:<ac-
                              count_ID>:application/<application_ID>/web-expe-
                              rience/<web_experience_ID>

                        When  resources.type  equals AWS::RDS::DBCluster , and
                        the operator is set to Equals or NotEquals ,  the  ARN
                        must be in the following format:

                            o arn:<partition>:rds:<region>:<account_ID>:clus-
                              ter/<cluster_name>

                        When resources.type equals AWS::S3::AccessPoint ,  and
                        the  operator  is set to Equals or NotEquals , the ARN
                        must be in one of the following formats. To log events
                        on  all  objects  in  an S3 access point, we recommend
                        that you use only the access point ARN,  dont  include
                        the  object  path,  and  use  the  StartsWith  or Not-
                        StartsWith operators.

                            o arn:<partition>:s3:<region>:<account_ID>:access-
                              point/<access_point_name>

                            o arn:<partition>:s3:<region>:<account_ID>:access-
                              point/<access_point_name>/object/<object_path>

                        When  resources.type  equals  AWS::S3ObjectLambda::Ac-
                        cessPoint , and the operator is set to Equals or NotE-
                        quals , the ARN must be in the following format:

                            o arn:<partition>:s3-object-lambda:<region>:<ac-
                              count_ID>:accesspoint/<access_point_name>

                        When  resources.type  equals AWS::S3Outposts::Object ,
                        and the operator is set to Equals or NotEquals  ,  the
                        ARN must be in the following format:

                            o arn:<partition>:s3-outposts:<region>:<ac-
                              count_ID>:<object_path>

                        When resources.type equals AWS::SageMaker::Endpoint  ,
                        and  the  operator is set to Equals or NotEquals , the
                        ARN must be in the following format:

                            o arn:<partition>:sagemaker:<region>:<ac-
                              count_ID>:endpoint/<endpoint_name>

                        When resources.type equals AWS::SageMaker::Experiment-
                        TrialComponent , and the operator is set to Equals  or
                        NotEquals , the ARN must be in the following format:

                            o arn:<partition>:sagemaker:<region>:<ac-
                              count_ID>:experiment-trial-component/<experi-
                              ment_trial_component_name>

                        When  resources.type  equals  AWS::SageMaker::Feature-
                        Group , and the operator is set to Equals or NotEquals
                        , the ARN must be in the following format:

                            o arn:<partition>:sagemaker:<region>:<ac-
                              count_ID>:feature-group/<feature_group_name>

                        When resources.type equals  AWS::SCN::Instance  ,  and
                        the  operator  is set to Equals or NotEquals , the ARN
                        must be in the following format:

                            o arn:<partition>:scn:<region>:<account_ID>:in-
                              stance/<instance_ID>

                        When    resources.type    equals   AWS::ServiceDiscov-
                        ery::Namespace , and the operator is set to Equals  or
                        NotEquals , the ARN must be in the following format:

                            o arn:<partition>:servicediscovery:<region>:<ac-
                              count_ID>:namespace/<namespace_ID>

                        When resources.type equals AWS::ServiceDiscovery::Ser-
                        vice  , and the operator is set to Equals or NotEquals
                        , the ARN must be in the following format:

                            o arn:<partition>:servicediscovery:<region>:<ac-
                              count_ID>:service/<service_ID>

                        When  resources.type equals AWS::SNS::PlatformEndpoint
                        , and the operator is set to Equals or NotEquals , the
                        ARN must be in the following format:

                            o arn:<partition>:sns:<region>:<account_ID>:end-
                              point/<endpoint_type>/<endpoint_name>/<end-
                              point_ID>

                        When  resources.type  equals AWS::SNS::Topic , and the
                        operator is set to Equals or NotEquals , the ARN  must
                        be in the following format:

                            o arn:<partition>:sns:<region>:<ac-
                              count_ID>:<topic_name>

                        When resources.type equals AWS::SQS::Queue ,  and  the
                        operator  is set to Equals or NotEquals , the ARN must
                        be in the following format:

                            o arn:<partition>:sqs:<region>:<ac-
                              count_ID>:<queue_name>

                        When resources.type equals AWS::SSM::ManagedNode , and
                        the operator is set to Equals or NotEquals ,  the  ARN
                        must be in one of the following formats:

                            o arn:<partition>:ssm:<region>:<account_ID>:man-
                              aged-instance/<instance_ID>

                            o arn:<partition>:ec2:<region>:<account_ID>:in-
                              stance/<instance_ID>

                        When   resources.type   equals  AWS::SSMMessages::Con-
                        trolChannel , and the operator is  set  to  Equals  or
                        NotEquals , the ARN must be in the following format:

                            o arn:<partition>:ssmmessages:<region>:<ac-
                              count_ID>:control-channel/<channel_ID>

                        When resources.type equals AWS::SWF::Domain , and  the
                        operator  is set to Equals or NotEquals , the ARN must
                        be in the following format:

                            o arn:<partition>:swf:<region>:<account_ID>:do-
                              main/<domain_name>

                        When  resources.type  equals AWS::ThinClient::Device ,
                        and the operator is set to Equals or NotEquals  ,  the
                        ARN must be in the following format:

                            o arn:<partition>:thinclient:<region>:<ac-
                              count_ID>:device/<device_ID>

                        When resources.type  equals  AWS::ThinClient::Environ-
                        ment  , and the operator is set to Equals or NotEquals
                        , the ARN must be in the following format:

                            o arn:<partition>:thinclient:<region>:<ac-
                              count_ID>:environment/<environment_ID>

                        When resources.type equals AWS::Timestream::Database ,
                        and the operator is set to Equals or NotEquals  ,  the
                        ARN must be in the following format:

                            o arn:<partition>:timestream:<region>:<ac-
                              count_ID>:database/<database_name>

                        When resources.type  equals  AWS::Timestream::Table  ,
                        and  the  operator is set to Equals or NotEquals , the
                        ARN must be in the following format:

                            o arn:<partition>:timestream:<region>:<ac-
                              count_ID>:database/<database_name>/table/<ta-
                              ble_name>

                        When   resources.type   equals    AWS::VerifiedPermis-
                        sions::PolicyStore , and the operator is set to Equals
                        or NotEquals , the ARN must be in the  following  for-
                        mat:

                            o arn:<partition>:verifiedpermissions:<re-
                              gion>:<account_ID>:policy-store/<pol-
                              icy_store_UUID>

                     Equals -> (list)
                        An  operator that includes events that match the exact
                        value of the event record field specified as the value
                        of  Field  .  This is the only valid operator that you
                        can use with the readOnly , eventCategory  ,  and  re-
                        sources.type fields.

                        (string)

                     StartsWith -> (list)
                        An  operator that includes events that match the first
                        few characters of the event record field specified  as
                        the value of Field .

                        (string)

                     EndsWith -> (list)
                        An  operator  that includes events that match the last
                        few characters of the event record field specified  as
                        the value of Field .

                        (string)

                     NotEquals -> (list)
                        An  operator that excludes events that match the exact
                        value of the event record field specified as the value
                        of Field .

                        (string)

                     NotStartsWith -> (list)
                        An  operator that excludes events that match the first
                        few characters of the event record field specified  as
                        the value of Field .

                        (string)

                     NotEndsWith -> (list)
                        An  operator  that excludes events that match the last
                        few characters of the event record field specified  as
                        the value of Field .

                        (string)



                                                         PUT-EVENT-SELECTORS()
