UPDATE-SIGNAL-CATALOG()                                UPDATE-SIGNAL-CATALOG()



NAME
       update-signal-catalog -

DESCRIPTION
       Updates a signal catalog.

       See also: AWS API Documentation

SYNOPSIS
            update-signal-catalog
          --name <value>
          [--description <value>]
          [--nodes-to-add <value>]
          [--nodes-to-update <value>]
          [--nodes-to-remove <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --name (string)
          The name of the signal catalog to update.

       --description (string)
          A brief description of the signal catalog to update.

       --nodes-to-add (list)
          A list of information about nodes to add to the signal catalog.

          (tagged union structure)
              A general abstraction of a signal. A node can be specified as an
              actuator, attribute, branch, or sensor.

              NOTE:
                 This is a Tagged Union structure. Only one of  the  following
                 top  level  keys can be set: branch, sensor, actuator, attri-
                 bute.

              branch -> (structure)
                 Information about a node specified as a branch.

                 NOTE:
                     A group of signals that are  defined  in  a  hierarchical
                     structure.

                 fullyQualifiedName -> (string)
                     The  fully qualified name of the branch. For example, the
                     fully  qualified  name  of  a  branch  might   be   Vehi-
                     cle.Body.Engine .

                 description -> (string)
                     A brief description of the branch.

              sensor -> (structure)
                 An  input  component that reports the environmental condition
                 of a vehicle.

                 NOTE:
                     You can collect data about  fluid  levels,  temperatures,
                     vibrations, or battery voltage from sensors.

                 fullyQualifiedName -> (string)
                     The  fully qualified name of the sensor. For example, the
                     fully  qualified  name  of  a  sensor  might   be   Vehi-
                     cle.Body.Engine.Battery .

                 dataType -> (string)
                     The specified data type of the sensor.

                 description -> (string)
                     A brief description of a sensor.

                 unit -> (string)
                     The  scientific unit of measurement for data collected by
                     the sensor.

                 allowedValues -> (list)
                     A list of possible values a sensor can take.

                     (string)

                 min -> (double)
                     The specified possible minimum value of the sensor.

                 max -> (double)
                     The specified possible maximum value of the sensor.

              actuator -> (structure)
                 Information about a node specified as an actuator.

                 NOTE:
                     An actuator is a digital representation of a vehicle  de-
                     vice.

                 fullyQualifiedName -> (string)
                     The  fully  qualified  name of the actuator. For example,
                     the fully qualified name of an actuator  might  be  Vehi-
                     cle.Front.Left.Door.Lock .

                 dataType -> (string)
                     The specified data type of the actuator.

                 description -> (string)
                     A brief description of the actuator.

                 unit -> (string)
                     The scientific unit for the actuator.

                 allowedValues -> (list)
                     A list of possible values an actuator can take.

                     (string)

                 min -> (double)
                     The specified possible minimum value of an actuator.

                 max -> (double)
                     The specified possible maximum value of an actuator.

                 assignedValue -> (string)
                     A specified value for the actuator.

              attribute -> (structure)
                 Information about a node specified as an attribute.

                 NOTE:
                     An  attribute represents static information about a vehi-
                     cle.

                 fullyQualifiedName -> (string)
                     The fully qualified name of the attribute.  For  example,
                     the  fully  qualified name of an attribute might be Vehi-
                     cle.Body.Engine.Type .

                 dataType -> (string)
                     The specified data type of the attribute.

                 description -> (string)
                     A brief description of the attribute.

                 unit -> (string)
                     The scientific unit for the attribute.

                 allowedValues -> (list)
                     A list of possible values an attribute can be assigned.

                     (string)

                 min -> (double)
                     The specified possible minimum value of the attribute.

                 max -> (double)
                     The specified possible maximum value of the attribute.

                 assignedValue -> (string)
                     A specified value for the attribute.

                 defaultValue -> (string)
                     The default value of the attribute.

       Shorthand Syntax:

          branch={fullyQualifiedName=string,description=string},sensor={fullyQualifiedName=string,dataType=string,description=string,unit=string,allowedValues=[string,string],min=double,max=double},actuator={fullyQualifiedName=string,dataType=string,description=string,unit=string,allowedValues=[string,string],min=double,max=double,assignedValue=string},attribute={fullyQualifiedName=string,dataType=string,description=string,unit=string,allowedValues=[string,string],min=double,max=double,assignedValue=string,defaultValue=string} ...

       JSON Syntax:

          [
            {
              "branch": {
                "fullyQualifiedName": "string",
                "description": "string"
              },
              "sensor": {
                "fullyQualifiedName": "string",
                "dataType": "INT8"|"UINT8"|"INT16"|"UINT16"|"INT32"|"UINT32"|"INT64"|"UINT64"|"BOOLEAN"|"FLOAT"|"DOUBLE"|"STRING"|"UNIX_TIMESTAMP"|"INT8_ARRAY"|"UINT8_ARRAY"|"INT16_ARRAY"|"UINT16_ARRAY"|"INT32_ARRAY"|"UINT32_ARRAY"|"INT64_ARRAY"|"UINT64_ARRAY"|"BOOLEAN_ARRAY"|"FLOAT_ARRAY"|"DOUBLE_ARRAY"|"STRING_ARRAY"|"UNIX_TIMESTAMP_ARRAY"|"UNKNOWN",
                "description": "string",
                "unit": "string",
                "allowedValues": ["string", ...],
                "min": double,
                "max": double
              },
              "actuator": {
                "fullyQualifiedName": "string",
                "dataType": "INT8"|"UINT8"|"INT16"|"UINT16"|"INT32"|"UINT32"|"INT64"|"UINT64"|"BOOLEAN"|"FLOAT"|"DOUBLE"|"STRING"|"UNIX_TIMESTAMP"|"INT8_ARRAY"|"UINT8_ARRAY"|"INT16_ARRAY"|"UINT16_ARRAY"|"INT32_ARRAY"|"UINT32_ARRAY"|"INT64_ARRAY"|"UINT64_ARRAY"|"BOOLEAN_ARRAY"|"FLOAT_ARRAY"|"DOUBLE_ARRAY"|"STRING_ARRAY"|"UNIX_TIMESTAMP_ARRAY"|"UNKNOWN",
                "description": "string",
                "unit": "string",
                "allowedValues": ["string", ...],
                "min": double,
                "max": double,
                "assignedValue": "string"
              },
              "attribute": {
                "fullyQualifiedName": "string",
                "dataType": "INT8"|"UINT8"|"INT16"|"UINT16"|"INT32"|"UINT32"|"INT64"|"UINT64"|"BOOLEAN"|"FLOAT"|"DOUBLE"|"STRING"|"UNIX_TIMESTAMP"|"INT8_ARRAY"|"UINT8_ARRAY"|"INT16_ARRAY"|"UINT16_ARRAY"|"INT32_ARRAY"|"UINT32_ARRAY"|"INT64_ARRAY"|"UINT64_ARRAY"|"BOOLEAN_ARRAY"|"FLOAT_ARRAY"|"DOUBLE_ARRAY"|"STRING_ARRAY"|"UNIX_TIMESTAMP_ARRAY"|"UNKNOWN",
                "description": "string",
                "unit": "string",
                "allowedValues": ["string", ...],
                "min": double,
                "max": double,
                "assignedValue": "string",
                "defaultValue": "string"
              }
            }
            ...
          ]

       --nodes-to-update (list)
          A list of information about nodes to update in the signal catalog.

          (tagged union structure)
              A general abstraction of a signal. A node can be specified as an
              actuator, attribute, branch, or sensor.

              NOTE:
                 This  is  a Tagged Union structure. Only one of the following
                 top level keys can be set: branch, sensor,  actuator,  attri-
                 bute.

              branch -> (structure)
                 Information about a node specified as a branch.

                 NOTE:
                     A  group  of  signals  that are defined in a hierarchical
                     structure.

                 fullyQualifiedName -> (string)
                     The fully qualified name of the branch. For example,  the
                     fully   qualified   name  of  a  branch  might  be  Vehi-
                     cle.Body.Engine .

                 description -> (string)
                     A brief description of the branch.

              sensor -> (structure)
                 An input component that reports the  environmental  condition
                 of a vehicle.

                 NOTE:
                     You  can  collect  data about fluid levels, temperatures,
                     vibrations, or battery voltage from sensors.

                 fullyQualifiedName -> (string)
                     The fully qualified name of the sensor. For example,  the
                     fully   qualified   name  of  a  sensor  might  be  Vehi-
                     cle.Body.Engine.Battery .

                 dataType -> (string)
                     The specified data type of the sensor.

                 description -> (string)
                     A brief description of a sensor.

                 unit -> (string)
                     The scientific unit of measurement for data collected  by
                     the sensor.

                 allowedValues -> (list)
                     A list of possible values a sensor can take.

                     (string)

                 min -> (double)
                     The specified possible minimum value of the sensor.

                 max -> (double)
                     The specified possible maximum value of the sensor.

              actuator -> (structure)
                 Information about a node specified as an actuator.

                 NOTE:
                     An  actuator is a digital representation of a vehicle de-
                     vice.

                 fullyQualifiedName -> (string)
                     The fully qualified name of the  actuator.  For  example,
                     the  fully  qualified  name of an actuator might be Vehi-
                     cle.Front.Left.Door.Lock .

                 dataType -> (string)
                     The specified data type of the actuator.

                 description -> (string)
                     A brief description of the actuator.

                 unit -> (string)
                     The scientific unit for the actuator.

                 allowedValues -> (list)
                     A list of possible values an actuator can take.

                     (string)

                 min -> (double)
                     The specified possible minimum value of an actuator.

                 max -> (double)
                     The specified possible maximum value of an actuator.

                 assignedValue -> (string)
                     A specified value for the actuator.

              attribute -> (structure)
                 Information about a node specified as an attribute.

                 NOTE:
                     An attribute represents static information about a  vehi-
                     cle.

                 fullyQualifiedName -> (string)
                     The  fully  qualified name of the attribute. For example,
                     the fully qualified name of an attribute might  be  Vehi-
                     cle.Body.Engine.Type .

                 dataType -> (string)
                     The specified data type of the attribute.

                 description -> (string)
                     A brief description of the attribute.

                 unit -> (string)
                     The scientific unit for the attribute.

                 allowedValues -> (list)
                     A list of possible values an attribute can be assigned.

                     (string)

                 min -> (double)
                     The specified possible minimum value of the attribute.

                 max -> (double)
                     The specified possible maximum value of the attribute.

                 assignedValue -> (string)
                     A specified value for the attribute.

                 defaultValue -> (string)
                     The default value of the attribute.

       Shorthand Syntax:

          branch={fullyQualifiedName=string,description=string},sensor={fullyQualifiedName=string,dataType=string,description=string,unit=string,allowedValues=[string,string],min=double,max=double},actuator={fullyQualifiedName=string,dataType=string,description=string,unit=string,allowedValues=[string,string],min=double,max=double,assignedValue=string},attribute={fullyQualifiedName=string,dataType=string,description=string,unit=string,allowedValues=[string,string],min=double,max=double,assignedValue=string,defaultValue=string} ...

       JSON Syntax:

          [
            {
              "branch": {
                "fullyQualifiedName": "string",
                "description": "string"
              },
              "sensor": {
                "fullyQualifiedName": "string",
                "dataType": "INT8"|"UINT8"|"INT16"|"UINT16"|"INT32"|"UINT32"|"INT64"|"UINT64"|"BOOLEAN"|"FLOAT"|"DOUBLE"|"STRING"|"UNIX_TIMESTAMP"|"INT8_ARRAY"|"UINT8_ARRAY"|"INT16_ARRAY"|"UINT16_ARRAY"|"INT32_ARRAY"|"UINT32_ARRAY"|"INT64_ARRAY"|"UINT64_ARRAY"|"BOOLEAN_ARRAY"|"FLOAT_ARRAY"|"DOUBLE_ARRAY"|"STRING_ARRAY"|"UNIX_TIMESTAMP_ARRAY"|"UNKNOWN",
                "description": "string",
                "unit": "string",
                "allowedValues": ["string", ...],
                "min": double,
                "max": double
              },
              "actuator": {
                "fullyQualifiedName": "string",
                "dataType": "INT8"|"UINT8"|"INT16"|"UINT16"|"INT32"|"UINT32"|"INT64"|"UINT64"|"BOOLEAN"|"FLOAT"|"DOUBLE"|"STRING"|"UNIX_TIMESTAMP"|"INT8_ARRAY"|"UINT8_ARRAY"|"INT16_ARRAY"|"UINT16_ARRAY"|"INT32_ARRAY"|"UINT32_ARRAY"|"INT64_ARRAY"|"UINT64_ARRAY"|"BOOLEAN_ARRAY"|"FLOAT_ARRAY"|"DOUBLE_ARRAY"|"STRING_ARRAY"|"UNIX_TIMESTAMP_ARRAY"|"UNKNOWN",
                "description": "string",
                "unit": "string",
                "allowedValues": ["string", ...],
                "min": double,
                "max": double,
                "assignedValue": "string"
              },
              "attribute": {
                "fullyQualifiedName": "string",
                "dataType": "INT8"|"UINT8"|"INT16"|"UINT16"|"INT32"|"UINT32"|"INT64"|"UINT64"|"BOOLEAN"|"FLOAT"|"DOUBLE"|"STRING"|"UNIX_TIMESTAMP"|"INT8_ARRAY"|"UINT8_ARRAY"|"INT16_ARRAY"|"UINT16_ARRAY"|"INT32_ARRAY"|"UINT32_ARRAY"|"INT64_ARRAY"|"UINT64_ARRAY"|"BOOLEAN_ARRAY"|"FLOAT_ARRAY"|"DOUBLE_ARRAY"|"STRING_ARRAY"|"UNIX_TIMESTAMP_ARRAY"|"UNKNOWN",
                "description": "string",
                "unit": "string",
                "allowedValues": ["string", ...],
                "min": double,
                "max": double,
                "assignedValue": "string",
                "defaultValue": "string"
              }
            }
            ...
          ]

       --nodes-to-remove (list)
          A list of fullyQualifiedName of nodes to remove from the signal cat-
          alog.

          (string)

       Syntax:

          "string" "string" ...

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       name -> (string)
          The name of the updated signal catalog.

       arn -> (string)
          The ARN of the updated signal catalog.



                                                       UPDATE-SIGNAL-CATALOG()
