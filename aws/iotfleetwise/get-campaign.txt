GET-CAMPAIGN()                                                  GET-CAMPAIGN()



NAME
       get-campaign -

DESCRIPTION
       Retrieves information about a campaign.

       See also: AWS API Documentation

SYNOPSIS
            get-campaign
          --name <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --name (string)
          The name of the campaign to retrieve information about.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       name -> (string)
          The name of the campaign.

       arn -> (string)
          The Amazon Resource Name (ARN) of the campaign.

       description -> (string)
          The description of the campaign.

       signalCatalogArn -> (string)
          The ARN of a signal catalog.

       targetArn -> (string)
          The ARN of the vehicle or the fleet targeted by the campaign.

       status -> (string)
          The state of the campaign. The status can  be  one  of:  CREATING  ,
          WAITING_FOR_APPROVAL , RUNNING , and SUSPENDED .

       startTime -> (timestamp)
          The  time,  in  milliseconds, to deliver a campaign after it was ap-
          proved.

       expiryTime -> (timestamp)
          The time the campaign expires, in seconds since  epoch  (January  1,
          1970  at  midnight  UTC time). Vehicle data won't be collected after
          the campaign expires.

       postTriggerCollectionDuration -> (long)
          How long (in seconds) to collect raw data after a  triggering  event
          initiates the collection.

       diagnosticsMode -> (string)
          Option  for a vehicle to send diagnostic trouble codes to Amazon Web
          Services IoT FleetWise.

       spoolingMode -> (string)
          Whether to store collected data after a vehicle  lost  a  connection
          with  the  cloud.  After a connection is re-established, the data is
          automatically forwarded to Amazon Web Services IoT FleetWise.

       compression -> (string)
          Whether to compress signals before transmitting data to  Amazon  Web
          Services IoT FleetWise. If OFF is specified, the signals aren't com-
          pressed. If it's not specified, SNAPPY is used.

       priority -> (integer)
          A number indicating the priority of one campaign over  another  cam-
          paign  for  a  certain  vehicle or fleet. A campaign with the lowest
          value is deployed to vehicles before any other campaigns.

       signalsToCollect -> (list)
          Information about a list of signals to collect data on.

          (structure)
              Information about a signal.

              name -> (string)
                 The name of the signal.

              maxSampleCount -> (long)
                 The maximum number of samples to collect.

              minimumSamplingIntervalMs -> (long)
                 The minimum duration of time (in  milliseconds)  between  two
                 triggering events to collect data.

                 NOTE:
                     If a signal changes often, you might want to collect data
                     at a slower rate.

       collectionScheme -> (tagged union structure)
          Information about the data collection  scheme  associated  with  the
          campaign.

          NOTE:
              This  is a Tagged Union structure. Only one of the following top
              level keys can  be  set:  timeBasedCollectionScheme,  condition-
              BasedCollectionScheme.

          timeBasedCollectionScheme -> (structure)
              Information about a collection scheme that uses a time period to
              decide how often to collect data.

              periodMs -> (long)
                 The time period (in milliseconds) to decide how often to col-
                 lect  data.  For  example,  if the time period is 60000 , the
                 Edge Agent software collects data once every minute.

          conditionBasedCollectionScheme -> (structure)
              Information about a collection scheme that uses a simple logical
              expression to recognize what data to collect.

              expression -> (string)
                 The  logical  expression  used to recognize what data to col-
                 lect. For example, $variable.Vehicle.OutsideAirTemperature >=
                 105.0 .

              minimumTriggerIntervalMs -> (long)
                 The minimum duration of time between two triggering events to
                 collect data, in milliseconds.

                 NOTE:
                     If a signal changes often, you might want to collect data
                     at a slower rate.

              triggerMode -> (string)
                 Whether  to collect data for all triggering events (ALWAYS ).
                 Specify (RISING_EDGE ), or specify only  when  the  condition
                 first   evaluates   to  false.  For  example,  triggering  on
                 "AirbagDeployed"; Users aren't interested on triggering  when
                 the  airbag  is  already  exploded;  they only care about the
                 change from not deployed => deployed.

              conditionLanguageVersion -> (integer)
                 Specifies the version of the conditional expression language.

       dataExtraDimensions -> (list)
          A list of vehicle attributes associated with the campaign.

          (string)

       creationTime -> (timestamp)
          The time the campaign was created in seconds since epoch (January 1,
          1970 at midnight UTC time).

       lastModificationTime -> (timestamp)
          The last time the campaign was modified.

       dataDestinationConfigs -> (list)
          The  destination  where  the  campaign sends data. You can choose to
          send data to be stored in Amazon S3 or Amazon Timestream.

          Amazon S3 optimizes the cost of data storage and provides additional
          mechanisms to use vehicle data, such as data lakes, centralized data
          storage, data processing pipelines, and analytics.

          You can use Amazon Timestream to  access  and  analyze  time  series
          data,  and Timestream to query vehicle data so that you can identify
          trends and patterns.

          (tagged union structure)
              The destination where the Amazon Web Services IoT FleetWise cam-
              paign sends data. You can send data to be stored in Amazon S3 or
              Amazon Timestream.

              NOTE:
                 This is a Tagged Union structure. Only one of  the  following
                 top level keys can be set: s3Config, timestreamConfig.

              s3Config -> (structure)
                 The Amazon S3 bucket where the Amazon Web Services IoT Fleet-
                 Wise campaign sends data.

                 bucketArn -> (string)
                     The Amazon Resource Name (ARN) of the Amazon S3 bucket.

                 dataFormat -> (string)
                     Specify the format that files are saved in the Amazon  S3
                     bucket.  You  can save files in an Apache Parquet or JSON
                     format.

                     o Parquet - Store data in a columnar storage file format.
                       Parquet  is optimal for fast data retrieval and can re-
                       duce costs. This option is selected by default.

                     o JSON - Store data in a standard  text-based  JSON  file
                       format.

                 storageCompressionFormat -> (string)
                     By  default,  stored  data is compressed as a .gzip file.
                     Compressed files have a reduced file size, which can  op-
                     timize the cost of data storage.

                 prefix -> (string)
                     (Optional)  Enter  an S3 bucket prefix. The prefix is the
                     string of characters after the bucket name and before the
                     object  name.  You  can  use  the prefix to organize data
                     stored in Amazon S3 buckets. For  more  information,  see
                     Organizing  objects  using  prefixes in the Amazon Simple
                     Storage Service User Guide .

                     By default, Amazon Web Services IoT  FleetWise  sets  the
                     prefix   processed-data/year=YY/month=MM/date=DD/hour=HH/
                     (in UTC) to data it delivers to Amazon S3. You can  enter
                     a  prefix  to append it to this default prefix. For exam-
                     ple, if you enter the prefix vehicles , the  prefix  will
                     be                                          vehicles/pro-
                     cessed-data/year=YY/month=MM/date=DD/hour=HH/ .

              timestreamConfig -> (structure)
                 The Amazon Timestream table where the campaign sends data.

                 timestreamTableArn -> (string)
                     The Amazon Resource Name (ARN) of the  Amazon  Timestream
                     table.

                 executionRoleArn -> (string)
                     The Amazon Resource Name (ARN) of the task execution role
                     that grants Amazon Web Services IoT FleetWise  permission
                     to deliver data to the Amazon Timestream table.



                                                                GET-CAMPAIGN()
