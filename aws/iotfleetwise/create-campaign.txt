CREATE-CAMPAIGN()                                            CREATE-CAMPAIGN()



NAME
       create-campaign -

DESCRIPTION
       Creates  an orchestration of data collection rules. The Amazon Web Ser-
       vices IoT FleetWise Edge Agent software running in vehicles  uses  cam-
       paigns  to  decide  how  to collect and transfer data to the cloud. You
       create campaigns in the cloud. After you  or  your  team  approve  cam-
       paigns, Amazon Web Services IoT FleetWise automatically deploys them to
       vehicles.

       For more information, see Collect and transfer data with  campaigns  in
       the Amazon Web Services IoT FleetWise Developer Guide .

       WARNING:
          Access to certain Amazon Web Services IoT FleetWise features is cur-
          rently gated. For more information, see Amazon Web  Services  Region
          and  feature  availability  in the Amazon Web Services IoT FleetWise
          Developer Guide .

       See also: AWS API Documentation

SYNOPSIS
            create-campaign
          --name <value>
          [--description <value>]
          --signal-catalog-arn <value>
          --target-arn <value>
          [--start-time <value>]
          [--expiry-time <value>]
          [--post-trigger-collection-duration <value>]
          [--diagnostics-mode <value>]
          [--spooling-mode <value>]
          [--compression <value>]
          [--priority <value>]
          [--signals-to-collect <value>]
          --collection-scheme <value>
          [--data-extra-dimensions <value>]
          [--tags <value>]
          [--data-destination-configs <value>]
          [--data-partitions <value>]
          [--signals-to-fetch <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --name (string)
          The name of the campaign to create.

       --description (string)
          An optional description of the campaign to help  identify  its  pur-
          pose.

       --signal-catalog-arn (string)
          The  Amazon  Resource  Name (ARN) of the signal catalog to associate
          with the campaign.

       --target-arn (string)
          The ARN of the vehicle or fleet to deploy a campaign to.

       --start-time (timestamp)
          The time, in milliseconds, to deliver a campaign after  it  was  ap-
          proved. If it's not specified, 0 is used.

          Default: 0

       --expiry-time (timestamp)
          The  time  the  campaign expires, in seconds since epoch (January 1,
          1970 at midnight UTC time). Vehicle data isn't collected  after  the
          campaign expires.

          Default: 253402214400 (December 31, 9999, 00:00:00 UTC)

       --post-trigger-collection-duration (long)
          How  long  (in  milliseconds) to collect raw data after a triggering
          event initiates the collection. If it's not specified, 0 is used.

          Default: 0

       --diagnostics-mode (string)
          Option for a vehicle to send diagnostic trouble codes to Amazon  Web
          Services  IoT  FleetWise.  If  you  want  to send diagnostic trouble
          codes, use SEND_ACTIVE_DTCS . If it's not specified, OFF is used.

          Default: OFF

          Possible values:

          o OFF

          o SEND_ACTIVE_DTCS

       --spooling-mode (string)
          Determines whether to store collected data after a  vehicle  lost  a
          connection with the cloud. After a connection is re-established, the
          data is automatically forwarded to Amazon Web  Services  IoT  Fleet-
          Wise.  If you want to store collected data when a vehicle loses con-
          nection with the cloud, use TO_DISK . If it's not specified, OFF  is
          used.

          Default: OFF

          Possible values:

          o OFF

          o TO_DISK

       --compression (string)
          Determines  whether  to compress signals before transmitting data to
          Amazon Web Services IoT FleetWise. If you don't want to compress the
          signals, use OFF . If it's not specified, SNAPPY is used.

          Default: SNAPPY

          Possible values:

          o OFF

          o SNAPPY

       --priority (integer)
          A  number  indicating the priority of one campaign over another cam-
          paign for a certain vehicle or fleet. A  campaign  with  the  lowest
          value  is  deployed  to vehicles before any other campaigns. If it's
          not specified, 0 is used.

          Default: 0

       --signals-to-collect (list)
          A list of information about signals to collect.

          NOTE:
              If you upload a signal as a condition in a data partition for  a
              campaign, then those same signals must be included in signalsTo-
              Collect .

          (structure)
              Information about a signal.

              name -> (string)
                 The name of the signal.

              maxSampleCount -> (long)
                 The maximum number of samples to collect.

              minimumSamplingIntervalMs -> (long)
                 The minimum duration of time (in  milliseconds)  between  two
                 triggering events to collect data.

                 NOTE:
                     If a signal changes often, you might want to collect data
                     at a slower rate.

              dataPartitionId -> (string)
                 The ID of the data partition this signal is associated with.

                 The ID must match one of the IDs provided in dataPartitions .
                 This  is  accomplished either by specifying a particular data
                 partition ID or by using default for an  established  default
                 partition. You can establish a default partition in the Data-
                 Partition data type.

                 NOTE:
                     If you upload a signal as a condition  for  a  campaign's
                     data  partition, the same signal must be included in sig-
                     nalsToCollect .

                 WARNING:
                     Access to certain Amazon Web Services IoT FleetWise  fea-
                     tures  is  currently  gated.  For  more  information, see
                     Amazon Web Services Region and  feature  availability  in
                     the Amazon Web Services IoT FleetWise Developer Guide .

       Shorthand Syntax:

          name=string,maxSampleCount=long,minimumSamplingIntervalMs=long,dataPartitionId=string ...

       JSON Syntax:

          [
            {
              "name": "string",
              "maxSampleCount": long,
              "minimumSamplingIntervalMs": long,
              "dataPartitionId": "string"
            }
            ...
          ]

       --collection-scheme (tagged union structure)
          The  data  collection  scheme  associated with the campaign. You can
          specify a scheme that collects data based on time or an event.

          NOTE:
              This is a Tagged Union structure. Only one of the following  top
              level  keys  can  be  set: timeBasedCollectionScheme, condition-
              BasedCollectionScheme.

          timeBasedCollectionScheme -> (structure)
              Information about a collection scheme that uses a time period to
              decide how often to collect data.

              periodMs -> (long)
                 The time period (in milliseconds) to decide how often to col-
                 lect data. For example, if the time period  is  60000  ,  the
                 Edge Agent software collects data once every minute.

          conditionBasedCollectionScheme -> (structure)
              Information about a collection scheme that uses a simple logical
              expression to recognize what data to collect.

              expression -> (string)
                 The logical expression used to recognize what  data  to  col-
                 lect.  For example, $variable.`Vehicle.OutsideAirTemperature`
                 >= 105.0 .

              minimumTriggerIntervalMs -> (long)
                 The minimum duration of time between two triggering events to
                 collect data, in milliseconds.

                 NOTE:
                     If a signal changes often, you might want to collect data
                     at a slower rate.

              triggerMode -> (string)
                 Whether to collect data for all triggering events (ALWAYS  ).
                 Specify  (RISING_EDGE  ),  or specify only when the condition
                 first  evaluates  to  false.  For  example,   triggering   on
                 "AirbagDeployed";  Users aren't interested on triggering when
                 the airbag is already exploded;  they  only  care  about  the
                 change from not deployed => deployed.

              conditionLanguageVersion -> (integer)
                 Specifies the version of the conditional expression language.

       Shorthand Syntax:

          timeBasedCollectionScheme={periodMs=long},conditionBasedCollectionScheme={expression=string,minimumTriggerIntervalMs=long,triggerMode=string,conditionLanguageVersion=integer}

       JSON Syntax:

          {
            "timeBasedCollectionScheme": {
              "periodMs": long
            },
            "conditionBasedCollectionScheme": {
              "expression": "string",
              "minimumTriggerIntervalMs": long,
              "triggerMode": "ALWAYS"|"RISING_EDGE",
              "conditionLanguageVersion": integer
            }
          }

       --data-extra-dimensions (list)
          A list of vehicle attributes to associate with a campaign.

          Enrich  the data with specified vehicle attributes. For example, add
          make and model to the campaign, and Amazon Web Services  IoT  Fleet-
          Wise  will associate the data with those attributes as dimensions in
          Amazon Timestream. You can then query  the  data  against  make  and
          model .

          Default: An empty array

          (string)

       Syntax:

          "string" "string" ...

       --tags (list)
          Metadata that can be used to manage the campaign.

          (structure)
              A set of key/value pairs that are used to manage the resource.

              Key -> (string)
                 The tag's key.

              Value -> (string)
                 The tag's value.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --data-destination-configs (list)
          The  destination where the campaign sends data. You can send data to
          an MQTT topic, or store it in Amazon S3 or Amazon Timestream.

          MQTT is the publish/subscribe messaging protocol used by Amazon  Web
          Services IoT to communicate with your devices.

          Amazon S3 optimizes the cost of data storage and provides additional
          mechanisms to use vehicle data, such as data lakes, centralized data
          storage,  data  processing pipelines, and analytics. Amazon Web Ser-
          vices IoT FleetWise supports at-least-once file delivery to S3. Your
          vehicle data is stored on multiple Amazon Web Services IoT FleetWise
          servers for redundancy and high availability.

          You can use Amazon Timestream to  access  and  analyze  time  series
          data,  and Timestream to query vehicle data so that you can identify
          trends and patterns.

          (tagged union structure)
              The destination where the campaign sends data. You can send data
              to an MQTT topic, or store it in Amazon S3 or Amazon Timestream.

              NOTE:
                 This  is  a Tagged Union structure. Only one of the following
                 top level keys can be set: s3Config, timestreamConfig,  mqtt-
                 TopicConfig.

              s3Config -> (structure)
                 The Amazon S3 bucket where the Amazon Web Services IoT Fleet-
                 Wise campaign sends data.

                 bucketArn -> (string)
                     The Amazon Resource Name (ARN) of the Amazon S3 bucket.

                 dataFormat -> (string)
                     Specify the format that files are saved in the Amazon  S3
                     bucket.  You  can save files in an Apache Parquet or JSON
                     format.

                     o Parquet - Store data in a columnar storage file format.
                       Parquet  is optimal for fast data retrieval and can re-
                       duce costs. This option is selected by default.

                     o JSON - Store data in a standard  text-based  JSON  file
                       format.

                 storageCompressionFormat -> (string)
                     By  default,  stored  data is compressed as a .gzip file.
                     Compressed files have a reduced file size, which can  op-
                     timize the cost of data storage.

                 prefix -> (string)
                     Enter  an  S3  bucket prefix. The prefix is the string of
                     characters after the bucket name and  before  the  object
                     name.  You  can use the prefix to organize data stored in
                     Amazon S3 buckets. For more information,  see  Organizing
                     objects  using prefixes in the Amazon Simple Storage Ser-
                     vice User Guide .

                     By default, Amazon Web Services IoT  FleetWise  sets  the
                     prefix   processed-data/year=YY/month=MM/date=DD/hour=HH/
                     (in UTC) to data it delivers to Amazon S3. You can  enter
                     a  prefix  to append it to this default prefix. For exam-
                     ple, if you enter the prefix vehicles , the  prefix  will
                     be                                          vehicles/pro-
                     cessed-data/year=YY/month=MM/date=DD/hour=HH/ .

              timestreamConfig -> (structure)
                 The Amazon Timestream table where the campaign sends data.

                 timestreamTableArn -> (string)
                     The Amazon Resource Name (ARN) of the  Amazon  Timestream
                     table.

                 executionRoleArn -> (string)
                     The Amazon Resource Name (ARN) of the task execution role
                     that grants Amazon Web Services IoT FleetWise  permission
                     to deliver data to the Amazon Timestream table.

              mqttTopicConfig -> (structure)
                 The MQTT topic to which the Amazon Web Services IoT FleetWise
                 campaign routes data.

                 WARNING:
                     Access to certain Amazon Web Services IoT FleetWise  fea-
                     tures  is  currently  gated.  For  more  information, see
                     Amazon Web Services Region and  feature  availability  in
                     the Amazon Web Services IoT FleetWise Developer Guide .

                 mqttTopicArn -> (string)
                     The ARN of the MQTT topic.

                 executionRoleArn -> (string)
                     The  ARN  of the role that grants Amazon Web Services IoT
                     FleetWise permission to access and act on  messages  sent
                     to the MQTT topic.

       Shorthand Syntax:

          s3Config={bucketArn=string,dataFormat=string,storageCompressionFormat=string,prefix=string},timestreamConfig={timestreamTableArn=string,executionRoleArn=string},mqttTopicConfig={mqttTopicArn=string,executionRoleArn=string} ...

       JSON Syntax:

          [
            {
              "s3Config": {
                "bucketArn": "string",
                "dataFormat": "JSON"|"PARQUET",
                "storageCompressionFormat": "NONE"|"GZIP",
                "prefix": "string"
              },
              "timestreamConfig": {
                "timestreamTableArn": "string",
                "executionRoleArn": "string"
              },
              "mqttTopicConfig": {
                "mqttTopicArn": "string",
                "executionRoleArn": "string"
              }
            }
            ...
          ]

       --data-partitions (list)
          The  data  partitions associated with the signals collected from the
          vehicle.

          (structure)
              The configuration for signal data storage  and  upload  options.
              You  can only specify these options when the campaign's spooling
              mode is TO_DISK .

              WARNING:
                 Access to certain Amazon Web Services IoT FleetWise  features
                 is currently gated. For more information, see Amazon Web Ser-
                 vices Region and feature availability in the Amazon Web  Ser-
                 vices IoT FleetWise Developer Guide .

              id -> (string)
                 The  ID  of the data partition. The data partition ID must be
                 unique within a campaign. You can establish a data  partition
                 as  the  default partition for a campaign by using default as
                 the ID.

              storageOptions -> (structure)
                 The storage options for a data partition.

                 maximumSize -> (structure)
                     The maximum storage size of the data stored in  the  data
                     partition.

                     NOTE:
                        Newer  data  overwrites  older data when the partition
                        reaches the maximum size.

                     unit -> (string)
                        The data type of the data to store.

                     value -> (integer)
                        The maximum amount of time to store data.

                 storageLocation -> (string)
                     The folder name for the data partition under the campaign
                     storage folder.

                 minimumTimeToLive -> (structure)
                     The  amount  of  time that data in this partition will be
                     kept on disk.

                     o After the designated amount of time  passes,  the  data
                       can be removed, but it's not guaranteed to be removed.

                     o Before  the  time  expires,  data in this partition can
                       still be deleted if the partition reaches  its  config-
                       ured maximum size.

                     o Newer data will overwrite older data when the partition
                       reaches the maximum size.

                     unit -> (string)
                        The time increment type.

                     value -> (integer)
                        The minimum amount of time to store the data.

              uploadOptions -> (structure)
                 The upload options for the data partition.

                 expression -> (string)
                     The logical expression used to  recognize  what  data  to
                     collect.  For  example, $variable.`Vehicle.OutsideAirTem-
                     perature` >= 105.0 .

                 conditionLanguageVersion -> (integer)
                     The version of the condition language.  Defaults  to  the
                     most recent condition language version.

       Shorthand Syntax:

          id=string,storageOptions={maximumSize={unit=string,value=integer},storageLocation=string,minimumTimeToLive={unit=string,value=integer}},uploadOptions={expression=string,conditionLanguageVersion=integer} ...

       JSON Syntax:

          [
            {
              "id": "string",
              "storageOptions": {
                "maximumSize": {
                  "unit": "MB"|"GB"|"TB",
                  "value": integer
                },
                "storageLocation": "string",
                "minimumTimeToLive": {
                  "unit": "HOURS"|"DAYS"|"WEEKS",
                  "value": integer
                }
              },
              "uploadOptions": {
                "expression": "string",
                "conditionLanguageVersion": integer
              }
            }
            ...
          ]

       --signals-to-fetch (list)
          A list of information about signals to fetch.

          (structure)
              Information about the signal to be fetched.

              WARNING:
                 Access  to certain Amazon Web Services IoT FleetWise features
                 is currently gated. For more information, see Amazon Web Ser-
                 vices  Region and feature availability in the Amazon Web Ser-
                 vices IoT FleetWise Developer Guide .

              fullyQualifiedName -> (string)
                 The fully qualified name of the signal to be fetched.

              signalFetchConfig -> (tagged union structure)
                 The configuration of the signal fetch operation.

                 NOTE:
                     This is a Tagged Union structure. Only one of the follow-
                     ing top level keys can be set: timeBased, conditionBased.

                 timeBased -> (structure)
                     The configuration of a time-based signal fetch operation.

                     executionFrequencyMs -> (long)
                        The frequency with which the signal fetch will be exe-
                        cuted.

                 conditionBased -> (structure)
                     The configuration of a condition-based signal fetch oper-
                     ation.

                     conditionExpression -> (string)
                        The condition that must be satisfied to trigger a sig-
                        nal fetch.

                     triggerMode -> (string)
                        Indicates the mode in which the signal fetch is  trig-
                        gered.

              conditionLanguageVersion -> (integer)
                 The version of the condition language used.

              actions -> (list)
                 The actions to be performed by the signal fetch.

                 (string)

       Shorthand Syntax:

          fullyQualifiedName=string,signalFetchConfig={timeBased={executionFrequencyMs=long},conditionBased={conditionExpression=string,triggerMode=string}},conditionLanguageVersion=integer,actions=string,string ...

       JSON Syntax:

          [
            {
              "fullyQualifiedName": "string",
              "signalFetchConfig": {
                "timeBased": {
                  "executionFrequencyMs": long
                },
                "conditionBased": {
                  "conditionExpression": "string",
                  "triggerMode": "ALWAYS"|"RISING_EDGE"
                }
              },
              "conditionLanguageVersion": integer,
              "actions": ["string", ...]
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       name -> (string)
          The name of the created campaign.

       arn -> (string)
          The ARN of the created campaign.



                                                             CREATE-CAMPAIGN()
