CREATE-CAMPAIGN()                                            CREATE-CAMPAIGN()



NAME
       create-campaign -

DESCRIPTION
       Creates  an orchestration of data collection rules. The Amazon Web Ser-
       vices IoT FleetWise Edge Agent software running in vehicles  uses  cam-
       paigns  to  decide  how  to collect and transfer data to the cloud. You
       create campaigns in the cloud. After you  or  your  team  approve  cam-
       paigns, Amazon Web Services IoT FleetWise automatically deploys them to
       vehicles.

       For more information, see Collect and transfer data with  campaigns  in
       the Amazon Web Services IoT FleetWise Developer Guide .

       See also: AWS API Documentation

SYNOPSIS
            create-campaign
          --name <value>
          [--description <value>]
          --signal-catalog-arn <value>
          --target-arn <value>
          [--start-time <value>]
          [--expiry-time <value>]
          [--post-trigger-collection-duration <value>]
          [--diagnostics-mode <value>]
          [--spooling-mode <value>]
          [--compression <value>]
          [--priority <value>]
          [--signals-to-collect <value>]
          --collection-scheme <value>
          [--data-extra-dimensions <value>]
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --name (string)
          The name of the campaign to create.

       --description (string)
          An  optional  description  of the campaign to help identify its pur-
          pose.

       --signal-catalog-arn (string)
          (Optional) The Amazon Resource Name (ARN) of the signal  catalog  to
          associate with the campaign.

       --target-arn (string)
          The ARN of the vehicle or fleet to deploy a campaign to.

       --start-time (timestamp)
          (Optional) The time, in milliseconds, to deliver a campaign after it
          was approved. If it's not specified, 0 is used.

          Default: 0

       --expiry-time (timestamp)
          (Optional) The time the campaign expires,  in  seconds  since  epoch
          (January  1,  1970 at midnight UTC time). Vehicle data won't be col-
          lected after the campaign expires.

          Default: 253402243200 (December 31, 9999, 00:00:00 UTC)

       --post-trigger-collection-duration (long)
          (Optional) How long (in milliseconds) to collect raw  data  after  a
          triggering  event initiates the collection. If it's not specified, 0
          is used.

          Default: 0

       --diagnostics-mode (string)
          (Optional) Option for a vehicle to send diagnostic trouble codes  to
          Amazon  Web  Services  IoT FleetWise. If you want to send diagnostic
          trouble codes, use SEND_ACTIVE_DTCS . If it's not specified, OFF  is
          used.

          Default: OFF

          Possible values:

          o OFF

          o SEND_ACTIVE_DTCS

       --spooling-mode (string)
          (Optional)  Whether  to  store collected data after a vehicle lost a
          connection with the cloud. After a connection is re-established, the
          data  is  automatically  forwarded to Amazon Web Services IoT Fleet-
          Wise. If you want to store collected data when a vehicle loses  con-
          nection  with the cloud, use TO_DISK . If it's not specified, OFF is
          used.

          Default: OFF

          Possible values:

          o OFF

          o TO_DISK

       --compression (string)
          (Optional) Whether to compress signals before transmitting  data  to
          Amazon Web Services IoT FleetWise. If you don't want to compress the
          signals, use OFF . If it's not specified, SNAPPY is used.

          Default: SNAPPY

          Possible values:

          o OFF

          o SNAPPY

       --priority (integer)
          (Optional) A number indicating the priority of one campaign over an-
          other  campaign  for a certain vehicle or fleet. A campaign with the
          lowest value is deployed to vehicles before any other campaigns.  If
          it's not specified, 0 is used.

          Default: 0

       --signals-to-collect (list)
          (Optional) A list of information about signals to collect.

          (structure)
              Information about a signal.

              name -> (string)
                 The name of the signal.

              maxSampleCount -> (long)
                 The maximum number of samples to collect.

              minimumSamplingIntervalMs -> (long)
                 The  minimum  duration  of time (in milliseconds) between two
                 triggering events to collect data.

                 NOTE:
                     If a signal changes often, you might want to collect data
                     at a slower rate.

       Shorthand Syntax:

          name=string,maxSampleCount=long,minimumSamplingIntervalMs=long ...

       JSON Syntax:

          [
            {
              "name": "string",
              "maxSampleCount": long,
              "minimumSamplingIntervalMs": long
            }
            ...
          ]

       --collection-scheme (tagged union structure)
          The  data  collection  scheme  associated with the campaign. You can
          specify a scheme that collects data based on time or an event.

          NOTE:
              This is a Tagged Union structure. Only one of the following  top
              level  keys  can  be  set: timeBasedCollectionScheme, condition-
              BasedCollectionScheme.

          timeBasedCollectionScheme -> (structure)
              Information about a collection scheme that uses a time period to
              decide how often to collect data.

              periodMs -> (long)
                 The time period (in milliseconds) to decide how often to col-
                 lect data. For example, if the time period  is  60000  ,  the
                 Edge Agent software collects data once every minute.

          conditionBasedCollectionScheme -> (structure)
              Information about a collection scheme that uses a simple logical
              expression to recognize what data to collect.

              expression -> (string)
                 The logical expression used to recognize what  data  to  col-
                 lect. For example, $variable.Vehicle.OutsideAirTemperature >=
                 105.0 .

              minimumTriggerIntervalMs -> (long)
                 The minimum duration of time between two triggering events to
                 collect data, in milliseconds.

                 NOTE:
                     If a signal changes often, you might want to collect data
                     at a slower rate.

              triggerMode -> (string)
                 Whether to collect data for all triggering events (ALWAYS  ).
                 Specify  (RISING_EDGE  ),  or specify only when the condition
                 first  evaluates  to  false.  For  example,   triggering   on
                 "AirbagDeployed";  Users aren't interested on triggering when
                 the airbag is already exploded;  they  only  care  about  the
                 change from not deployed => deployed.

              conditionLanguageVersion -> (integer)
                 Specifies the version of the conditional expression language.

       Shorthand Syntax:

          timeBasedCollectionScheme={periodMs=long},conditionBasedCollectionScheme={expression=string,minimumTriggerIntervalMs=long,triggerMode=string,conditionLanguageVersion=integer}

       JSON Syntax:

          {
            "timeBasedCollectionScheme": {
              "periodMs": long
            },
            "conditionBasedCollectionScheme": {
              "expression": "string",
              "minimumTriggerIntervalMs": long,
              "triggerMode": "ALWAYS"|"RISING_EDGE",
              "conditionLanguageVersion": integer
            }
          }

       --data-extra-dimensions (list)
          (Optional)  A  list  of  vehicle attributes to associate with a cam-
          paign.

          Enrich the data with specified vehicle attributes. For example,  add
          make  and  model to the campaign, and Amazon Web Services IoT Fleet-
          Wise will associate the data with those attributes as dimensions  in
          Amazon  Timestream.  You  can  then  query the data against make and
          model .

          Default: An empty array

          (string)

       Syntax:

          "string" "string" ...

       --tags (list)
          Metadata that can be used to manage the campaign.

          (structure)
              A set of key/value pairs that are used to manage the resource.

              Key -> (string)
                 The tag's key.

              Value -> (string)
                 The tag's value.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       name -> (string)
          The name of the created campaign.

       arn -> (string)
          The ARN of the created campaign.



                                                             CREATE-CAMPAIGN()
