CREATE-REGEX-PATTERN-SET()                          CREATE-REGEX-PATTERN-SET()



NAME
       create-regex-pattern-set -

DESCRIPTION
       Creates  a  RegexPatternSet , which you reference in a  RegexPatternSe-
       tReferenceStatement , to have WAF inspect a web request  component  for
       the specified patterns.

       See also: AWS API Documentation

SYNOPSIS
            create-regex-pattern-set
          --name <value>
          --scope <value>
          [--description <value>]
          --regular-expression-list <value>
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --name (string)
          The name of the set. You cannot change the name after you create the
          set.

       --scope (string)
          Specifies whether this is for an Amazon CloudFront  distribution  or
          for  a regional application. A regional application can be an Appli-
          cation Load Balancer (ALB), an Amazon API Gateway REST API, an  App-
          Sync  GraphQL API, a Amazon Cognito user pool, or an App Runner ser-
          vice.

          To work with CloudFront, you must also specify the  Region  US  East
          (N. Virginia) as follows:

          o CLI  -  Specify  the  Region  when  you  use the CloudFront scope:
            --scope=CLOUDFRONT --region=us-east-1 .

          o API and SDKs - For all calls, use the Region endpoint us-east-1.

          Possible values:

          o CLOUDFRONT

          o REGIONAL

       --description (string)
          A description of the set that helps with identification.

       --regular-expression-list (list)
          Array of regular expression strings.

          (structure)
              A single regular expression. This is used in a   RegexPatternSet
              .

              RegexString -> (string)
                 The string representing the regular expression.

       Shorthand Syntax:

          RegexString=string ...

       JSON Syntax:

          [
            {
              "RegexString": "string"
            }
            ...
          ]

       --tags (list)
          An array of key:value pairs to associate with the resource.

          (structure)
              A  tag associated with an Amazon Web Services resource. Tags are
              key:value pairs that you can use to categorize and  manage  your
              resources,  for purposes like billing or other management. Typi-
              cally, the tag key represents a category, such as "environment",
              and  the tag value represents a specific value within that cate-
              gory, such as "test," "development,"  or  "production".  Or  you
              might  set  the  tag key to "customer" and the value to the cus-
              tomer name or ID. You can specify one or more  tags  to  add  to
              each Amazon Web Services resource, up to 50 tags for a resource.

              You  can  tag  the Amazon Web Services resources that you manage
              through WAF: web ACLs, rule groups, IP sets, and  regex  pattern
              sets. You can't manage or view tags through the WAF console.

              Key -> (string)
                 Part  of the key:value pair that defines a tag. You can use a
                 tag key to describe a category of information, such as  "cus-
                 tomer." Tag keys are case-sensitive.

              Value -> (string)
                 Part  of the key:value pair that defines a tag. You can use a
                 tag value to describe a specific  value  within  a  category,
                 such  as "companyA" or "companyB." Tag values are case-sensi-
                 tive.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a regex pattern set for use in your web ACLs and rule groups

       The following create-regex-pattern-set command creates a regex  pattern
       set with two regex patterns specified.

          aws wafv2 create-regex-pattern-set \
              --name regexPatterSet01 \
              --scope REGIONAL \
              --description 'Test web-acl' \
              --regular-expression-list '[{"RegexString": "/[0-9]*/"},{"RegexString": "/[a-z]*/"}]'

       Output:

          {
              "Summary":{
                  "ARN":"arn:aws:wafv2:us-west-2:123456789012:regional/regexpatternset/regexPatterSet01/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111",
                  "Description":"Test web-acl",
                  "Name":"regexPatterSet01",
                  "LockToken":"0bc01e21-03c9-4b98-9433-6229cbf1ef1c",
                  "Id":"a1b2c3d4-5678-90ab-cdef-EXAMPLE11111"
              }
          }

       For  more  information,  see  IP Sets and Regex Pattern Sets in the AWS
       WAF, AWS Firewall Manager, and AWS Shield Advanced Developer Guide.

OUTPUT
       Summary -> (structure)
          High-level information about a  RegexPatternSet , returned by opera-
          tions  like  create and list. This provides information like the ID,
          that you can use to retrieve and manage a RegexPatternSet , and  the
          ARN,  that  you provide to the  RegexPatternSetReferenceStatement to
          use the pattern set in a  Rule .

          Name -> (string)
              The name of the data type instance. You cannot change  the  name
              after you create the instance.

          Id -> (string)
              A  unique identifier for the set. This ID is returned in the re-
              sponses to create and list commands. You provide  it  to  opera-
              tions like update and delete.

          Description -> (string)
              A description of the set that helps with identification.

          LockToken -> (string)
              A token used for optimistic locking. WAF returns a token to your
              get and list requests, to mark the state of the  entity  at  the
              time  of  the  request. To make changes to the entity associated
              with the token, you provide the token to operations like  update
              and  delete  . WAF uses the token to ensure that no changes have
              been made to the entity since you last retrieved it. If a change
              has  been  made, the update fails with a WAFOptimisticLockExcep-
              tion . If this happens, perform another get , and  use  the  new
              token returned by that operation.

          ARN -> (string)
              The Amazon Resource Name (ARN) of the entity.



                                                    CREATE-REGEX-PATTERN-SET()
