GET-NODE()                                                          GET-NODE()



NAME
       get-node -

DESCRIPTION
       Returns detailed information about a node.

       Applies to Hyperledger Fabric and Ethereum.

       See also: AWS API Documentation

SYNOPSIS
            get-node
          --network-id <value>
          [--member-id <value>]
          --node-id <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --network-id (string)
          The unique identifier of the network that the node is on.

       --member-id (string)
          The unique identifier of the member that owns the node.

          Applies  only  to Hyperledger Fabric and is required for Hyperledger
          Fabric.

       --node-id (string)
          The unique identifier of the node.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       Node -> (structure)
          Properties of the node configuration.

          NetworkId -> (string)
              The unique identifier of the network that the node is on.

          MemberId -> (string)
              The unique identifier of the member to which the node belongs.

              Applies only to Hyperledger Fabric.

          Id -> (string)
              The unique identifier of the node.

          InstanceType -> (string)
              The instance type of the node.

          AvailabilityZone -> (string)
              The Availability Zone in which the  node  exists.  Required  for
              Ethereum nodes.

          FrameworkAttributes -> (structure)
              Attributes of the blockchain framework being used.

              Fabric -> (structure)
                 Attributes of Hyperledger Fabric for a peer node on a Managed
                 Blockchain network that uses Hyperledger Fabric.

                 PeerEndpoint -> (string)
                     The endpoint that identifies the peer node for  all  ser-
                     vices except peer channel-based event services.

                 PeerEventEndpoint -> (string)
                     The endpoint that identifies the peer node for peer chan-
                     nel-based event services.

              Ethereum -> (structure)
                 Attributes of Ethereum for a node  on  a  Managed  Blockchain
                 network that uses Ethereum.

                 HttpEndpoint -> (string)
                     The  endpoint  on  which the Ethereum node listens to run
                     Ethereum API methods over HTTP connections from a client.
                     Use this endpoint in client code for smart contracts when
                     using an HTTP connection. Connections  to  this  endpoint
                     are authenticated using Signature Version 4 .

                 WebSocketEndpoint -> (string)
                     The  endpoint  on  which the Ethereum node listens to run
                     Ethereum JSON-RPC methods over WebSocket connections from
                     a client. Use this endpoint in client code for smart con-
                     tracts when using a WebSocket connection. Connections  to
                     this endpoint are authenticated using Signature Version 4
                     .

          LogPublishingConfiguration -> (structure)
              Configuration properties for logging events  associated  with  a
              peer node on a Hyperledger Fabric network on Managed Blockchain.

              Fabric -> (structure)
                 Configuration properties for logging events associated with a
                 node that is owned by a member of a Managed  Blockchain  net-
                 work using the Hyperledger Fabric framework.

                 ChaincodeLogs -> (structure)
                     Configuration  properties  for  logging events associated
                     with chaincode execution on a peer node.  Chaincode  logs
                     contain  the  results  of  instantiating,  invoking,  and
                     querying the chaincode. A peer can run multiple instances
                     of  chaincode.  When enabled, a log stream is created for
                     all chaincodes, with an individual log  stream  for  each
                     chaincode.

                     Cloudwatch -> (structure)
                        Parameters  for  publishing  logs to Amazon CloudWatch
                        Logs.

                        Enabled -> (boolean)
                            Indicates whether logging is enabled.

                 PeerLogs -> (structure)
                     Configuration properties for a peer node log.  Peer  node
                     logs  contain messages generated when your client submits
                     transaction proposals to peer  nodes,  requests  to  join
                     channels,  enrolls an admin peer, and lists the chaincode
                     instances on a peer node.

                     Cloudwatch -> (structure)
                        Parameters for publishing logs  to  Amazon  CloudWatch
                        Logs.

                        Enabled -> (boolean)
                            Indicates whether logging is enabled.

          StateDB -> (string)
              The  state  database  that  the node uses. Values are LevelDB or
              CouchDB .

              Applies only to Hyperledger Fabric.

          Status -> (string)
              The status of the node.

              o CREATING - The Amazon Web Services account is in  the  process
                of creating a node.

              o AVAILABLE  -  The node has been created and can participate in
                the network.

              o UNHEALTHY - The node is impaired and might not function as ex-
                pected. Amazon Managed Blockchain automatically finds nodes in
                this state and tries to recover them. If a  node  is  recover-
                able,  it returns to AVAILABLE . Otherwise, it moves to FAILED
                status.

              o CREATE_FAILED - The Amazon Web Services account  attempted  to
                create a node and creation failed.

              o UPDATING - The node is in the process of being updated.

              o DELETING - The node is in the process of being deleted.

              o DELETED - The node can no longer participate on the network.

              o FAILED  -  The  node is no longer functional, cannot be recov-
                ered, and must be deleted.

              o INACCESSIBLE_ENCRYPTION_KEY - The node is impaired  and  might
                not  function  as expected because it cannot access the speci-
                fied customer managed key in KMS for encryption at  rest.  Ei-
                ther the KMS key was disabled or deleted, or the grants on the
                key were revoked. The effect of disabling or deleting a key or
                of  revoking  a grant isn't immediate. It might take some time
                for the node resource to discover that the key  is  inaccessi-
                ble.  When  a resource is in this state, we recommend deleting
                and recreating the resource.

          CreationDate -> (timestamp)
              The date and time that the node was created.

          Tags -> (map)
              Tags assigned to the node. Each tag consists of a  key  and  op-
              tional value.

              For  more  information  about tags, see Tagging Resources in the
              Amazon Managed Blockchain Ethereum Developer Guide , or  Tagging
              Resources  in  the  Amazon Managed Blockchain Hyperledger Fabric
              Developer Guide .

              key -> (string)

              value -> (string)

          Arn -> (string)
              The Amazon Resource Name (ARN) of the node. For more information
              about ARNs and their format, see Amazon Resource Names (ARNs) in
              the Amazon Web Services General Reference .

          KmsKeyArn -> (string)
              The Amazon Resource Name (ARN) of the customer  managed  key  in
              Key  Management  Service (KMS) that the node uses for encryption
              at rest. If the value of this parameter is "AWS Owned KMS Key" ,
              the  node  uses an Amazon Web Services owned KMS key for encryp-
              tion. The node inherits this parameter from the member  that  it
              belongs to.

              For  more information, see Encryption at Rest in the Amazon Man-
              aged Blockchain Hyperledger Fabric Developer Guide .

              Applies only to Hyperledger Fabric.



                                                                    GET-NODE()
