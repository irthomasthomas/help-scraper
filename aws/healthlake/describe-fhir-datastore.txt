DESCRIBE-FHIR-DATASTORE()                            DESCRIBE-FHIR-DATASTORE()



NAME
       describe-fhir-datastore -

DESCRIPTION
       Gets  the properties associated with the FHIR data store, including the
       data store ID, data store ARN, data store name, data store status, when
       the  data  store  was  created,  data  store type version, and the data
       store's endpoint.

       See also: AWS API Documentation

SYNOPSIS
            describe-fhir-datastore
          --datastore-id <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --datastore-id (string)
          The AWS-generated data store ID.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To describe a FHIR Data Store

       The following describe-fhir-datastore example demonstrates how to  find
       the properties of a Data Store in Amazon HealthLake.

          aws healthlake describe-fhir-datastore \
              --datastore-id "1f2f459836ac6c513ce899f9e4f66a59" \
              --region us-east-1

       Output:

          {
              "DatastoreProperties": {
                  "PreloadDataConfig": {
                      "PreloadDataType": "SYNTHEA"
                  },
                  "DatastoreName": "FhirTestDatastore",
                  "DatastoreArn": "arn:aws:healthlake:us-east-1:(AWS Account ID):datastore/(Datastore ID)",
                  "DatastoreEndpoint": "https://healthlake.us-east-1.amazonaws.com/datastore/(Datastore ID)/r4/",
                  "DatastoreStatus": "CREATING",
                  "DatastoreTypeVersion": "R4",
                  "DatastoreId": "(Datastore ID)"
              }
          }

       For more information, see Creating and monitoring a FHIR Data Stores in
       the Amazon HealthLake Developer Guide.

OUTPUT
       DatastoreProperties -> (structure)
          All properties associated with a  data  store,  including  the  data
          store  ID,  data store ARN, data store name, data store status, when
          the data store was created, data store type version,  and  the  data
          store's endpoint.

          DatastoreId -> (string)
              The AWS-generated ID number for the data store.

          DatastoreArn -> (string)
              The Amazon Resource Name used in the creation of the data store.

          DatastoreName -> (string)
              The user-generated name for the data store.

          DatastoreStatus -> (string)
              The status of the data store.

          CreatedAt -> (timestamp)
              The time that a data store was created.

          DatastoreTypeVersion -> (string)
              The FHIR version. Only R4 version data is supported.

          DatastoreEndpoint -> (string)
              The  AWS  endpoint for the data store. Each data store will have
              it's own endpoint with data store ID in the endpoint URL.

          SseConfiguration -> (structure)
              The server-side encryption key configuration for a customer pro-
              vided encryption key (CMK).

              KmsEncryptionConfig -> (structure)
                 The  KMS encryption configuration used to provide details for
                 data encryption.

                 CmkType -> (string)
                     The type of customer-managed-key(CMK)  used  for  encryp-
                     tion.  The two types of supported CMKs are customer owned
                     CMKs and AWS owned CMKs.

                 KmsKeyId -> (string)
                     The KMS encryption key id/alias used to encrypt the  data
                     store contents at rest.

          PreloadDataConfig -> (structure)
              The  preloaded  data configuration for the data store. Only data
              preloaded from Synthea is supported.

              PreloadDataType -> (string)
                 The type of preloaded data. Only Synthea  preloaded  data  is
                 supported.

          IdentityProviderConfiguration -> (structure)
              The  identity  provider  that  you selected when you created the
              data store.

              AuthorizationStrategy -> (string)
                 The authorization strategy that you selected when you created
                 the data store.

              FineGrainedAuthorizationEnabled -> (boolean)
                 If  you  enabled  fine-grained authorization when you created
                 the data store.

              Metadata -> (string)
                 The JSON metadata elements that you want to use in your iden-
                 tity  provider  configuration.  Required  elements are listed
                 based on the launch specification of the  SMART  application.
                 For  more  information on all possible elements, see Metadata
                 in SMART's App Launch specification.
                     authorization_endpoint : The URL to the OAuth2 authoriza-
                     tion endpoint.

                     grant_types_supported  : An array of grant types that are
                     supported at the token  endpoint.  You  must  provide  at
                     least one grant type option. Valid options are authoriza-
                     tion_code and client_credentials .

                     token_endpoint : The URL to the OAuth2 token endpoint.

                     capabilities : An array of strings of the SMART capabili-
                     ties that the authorization server supports.

                     code_challenge_methods_supported : An array of strings of
                     supported PKCE code challenge methods. You  must  include
                     the S256 method in the array of PKCE code challenge meth-
                     ods.

              IdpLambdaArn -> (string)
                 The Amazon Resource Name (ARN) of the  Lambda  function  that
                 you want to use to decode the access token created by the au-
                 thorization server.

          ErrorCause -> (structure)
              The error cause for the current data store operation.

              ErrorMessage -> (string)
                 The text of the error message.

              ErrorCategory -> (string)
                 The error category of the create/delete data store operation.
                 Possible statuses are RETRYABLE_ERROR or NON_RETRYABLE_ERROR.



                                                     DESCRIBE-FHIR-DATASTORE()
