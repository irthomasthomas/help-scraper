CREATE-FLOW()                                                    CREATE-FLOW()



NAME
       create-flow -

DESCRIPTION
       Enables your application to create a new flow using Amazon AppFlow. You
       must create a connector profile before calling this  API.  Please  note
       that  the  Request Syntax below shows syntax for multiple destinations,
       however, you can only transfer data to one item in this list at a time.
       Amazon  AppFlow  does  not currently support flows to multiple destina-
       tions at once.

       See also: AWS API Documentation

SYNOPSIS
            create-flow
          --flow-name <value>
          [--description <value>]
          [--kms-arn <value>]
          --trigger-config <value>
          --source-flow-config <value>
          --destination-flow-config-list <value>
          --tasks <value>
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --flow-name (string)
          The specified name of the flow. Spaces are not allowed.  Use  under-
          scores (_) or hyphens (-) only.

       --description (string)
          A description of the flow you want to create.

       --kms-arn (string)
          The  ARN  (Amazon Resource Name) of the Key Management Service (KMS)
          key you provide for encryption. This is required if you do not  want
          to use the Amazon AppFlow-managed KMS key. If you don't provide any-
          thing here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key.

       --trigger-config (structure)
          The trigger settings that determine how and when the flow runs.

          triggerType -> (string)
              Specifies the type of flow  trigger.  This  can  be  OnDemand  ,
              Scheduled , or Event .

          triggerProperties -> (structure)
              Specifies the configuration details of a schedule-triggered flow
              as defined by the user. Currently, these settings only apply  to
              the Scheduled trigger type.

              Scheduled -> (structure)
                 Specifies  the  configuration details of a schedule-triggered
                 flow as defined by the user.

                 scheduleExpression -> (string)
                     The scheduling expression that  determines  the  rate  at
                     which the schedule will run, for example rate(5minutes) .

                 dataPullMode -> (string)
                     Specifies  whether  a  scheduled  flow has an incremental
                     data transfer or a complete data transfer for  each  flow
                     run.

                 scheduleStartTime -> (timestamp)
                     The  time at which the scheduled flow starts. The time is
                     formatted as a timestamp that follows the ISO 8601  stan-
                     dard, such as 2022-04-26T13:00:00-07:00 .

                 scheduleEndTime -> (timestamp)
                     The  time  at  which the scheduled flow ends. The time is
                     formatted as a timestamp that follows the ISO 8601  stan-
                     dard, such as 2022-04-27T13:00:00-07:00 .

                 timezone -> (string)
                     Specifies  the time zone used when referring to the dates
                     and times of a scheduled flow, such as America/New_York .
                     This  time  zone  is only a descriptive label. It doesn't
                     affect how Amazon AppFlow interprets the timestamps  that
                     you specify to schedule the flow.

                     If  you  want to schedule a flow by using times in a par-
                     ticular time zone, indicate the time zone as a UTC offset
                     in  your timestamps. For example, the UTC offsets for the
                     America/New_York timezone are -04:00 EDT and -05:00 EST .

                 scheduleOffset -> (long)
                     Specifies the optional offset that is added to  the  time
                     interval for a schedule-triggered flow.

                 firstExecutionFrom -> (timestamp)
                     Specifies  the  date range for the records to import from
                     the connector in the first flow run.

                 flowErrorDeactivationThreshold -> (integer)
                     Defines how many times a scheduled  flow  fails  consecu-
                     tively before Amazon AppFlow deactivates it.

       Shorthand Syntax:

          triggerType=string,triggerProperties={Scheduled={scheduleExpression=string,dataPullMode=string,scheduleStartTime=timestamp,scheduleEndTime=timestamp,timezone=string,scheduleOffset=long,firstExecutionFrom=timestamp,flowErrorDeactivationThreshold=integer}}

       JSON Syntax:

          {
            "triggerType": "Scheduled"|"Event"|"OnDemand",
            "triggerProperties": {
              "Scheduled": {
                "scheduleExpression": "string",
                "dataPullMode": "Incremental"|"Complete",
                "scheduleStartTime": timestamp,
                "scheduleEndTime": timestamp,
                "timezone": "string",
                "scheduleOffset": long,
                "firstExecutionFrom": timestamp,
                "flowErrorDeactivationThreshold": integer
              }
            }
          }

       --source-flow-config (structure)
          The  configuration  that  controls how Amazon AppFlow retrieves data
          from the source connector.

          connectorType -> (string)
              The type of connector, such as Salesforce, Amplitude, and so on.

          apiVersion -> (string)
              The API version of the connector when it's used as a  source  in
              the flow.

          connectorProfileName -> (string)
              The  name of the connector profile. This name must be unique for
              each connector profile in the Amazon Web Services account.

          sourceConnectorProperties -> (structure)
              Specifies the information that is required to query a particular
              source connector.

              Amplitude -> (structure)
                 Specifies  the  information that is required for querying Am-
                 plitude.

                 object -> (string)
                     The object specified in the Amplitude flow source.

              Datadog -> (structure)
                 Specifies the information that is required for querying Data-
                 dog.

                 object -> (string)
                     The object specified in the Datadog flow source.

              Dynatrace -> (structure)
                 Specifies the information that is required for querying Dyna-
                 trace.

                 object -> (string)
                     The object specified in the Dynatrace flow source.

              GoogleAnalytics -> (structure)
                 Specifies the  information  that  is  required  for  querying
                 Google Analytics.

                 object -> (string)
                     The object specified in the Google Analytics flow source.

              InforNexus -> (structure)
                 Specifies the information that is required for querying Infor
                 Nexus.

                 object -> (string)
                     The object specified in the Infor Nexus flow source.

              Marketo -> (structure)
                 Specifies the information that is required for querying  Mar-
                 keto.

                 object -> (string)
                     The object specified in the Marketo flow source.

              S3 -> (structure)
                 Specifies  the information that is required for querying Ama-
                 zon S3.

                 bucketName -> (string)
                     The Amazon S3 bucket name  where  the  source  files  are
                     stored.

                 bucketPrefix -> (string)
                     The  object  key  for  the  Amazon S3 bucket in which the
                     source files are stored.

                 s3InputFormatConfig -> (structure)
                     When you use Amazon S3 as the source,  the  configuration
                     format that you provide the flow input data.

                     s3InputFileType -> (string)
                        The  file type that Amazon AppFlow gets from your Ama-
                        zon S3 bucket.

              Salesforce -> (structure)
                 Specifies the  information  that  is  required  for  querying
                 Salesforce.

                 object -> (string)
                     The object specified in the Salesforce flow source.

                 enableDynamicFieldUpdate -> (boolean)
                     The  flag  that enables dynamic fetching of new (recently
                     added) fields in the Salesforce objects while  running  a
                     flow.

                 includeDeletedRecords -> (boolean)
                     Indicates  whether  Amazon AppFlow includes deleted files
                     in the flow run.

                 dataTransferApi -> (string)
                     Specifies which Salesforce API is used by Amazon  AppFlow
                     when your flow transfers data from Salesforce.
                        AUTOMATIC

                     The  default.  Amazon  AppFlow  selects  which API to use
                     based on the number of records that your  flow  transfers
                     from  Salesforce.  If  your  flow  transfers  fewer  than
                     1,000,000 records, Amazon AppFlow  uses  Salesforce  REST
                     API.  If  your  flow transfers 1,000,000 records or more,
                     Amazon AppFlow uses Salesforce Bulk API 2.0.

                     Each of these Salesforce  APIs  structures  data  differ-
                     ently.  If  Amazon AppFlow selects the API automatically,
                     be aware that, for recurring flows, the data output might
                     vary  from  one  flow  run to the next. For example, if a
                     flow runs daily, it might use REST  API  on  one  day  to
                     transfer  900,000  records, and it might use Bulk API 2.0
                     on the next day to transfer 1,100,000 records.  For  each
                     of these flow runs, the respective Salesforce API formats
                     the data differently. Some of the differences include how
                     dates  are  formatted  and  null  values are represented.
                     Also, Bulk API 2.0 doesn't transfer  Salesforce  compound
                     fields.

                     By  choosing  this  option, you optimize flow performance
                     for both small and large data transfers, but the tradeoff
                     is inconsistent formatting in the output.
                        BULKV2

                     Amazon  AppFlow  uses  only Salesforce Bulk API 2.0. This
                     API runs asynchronous data transfers,  and  it's  optimal
                     for  large sets of data. By choosing this option, you en-
                     sure that your flow writes consistent output, but you op-
                     timize performance only for large data transfers.

                     Note  that Bulk API 2.0 does not transfer Salesforce com-
                     pound fields.
                        REST_SYNC

                     Amazon AppFlow uses only Salesforce REST API. By choosing
                     this  option, you ensure that your flow writes consistent
                     output, but  you  decrease  performance  for  large  data
                     transfers  that  are  better  suited for Bulk API 2.0. In
                     some cases, if your flow  attempts  to  transfer  a  vary
                     large set of data, it might fail with a timed out error.

              ServiceNow -> (structure)
                 Specifies  the information that is required for querying Ser-
                 viceNow.

                 object -> (string)
                     The object specified in the ServiceNow flow source.

              Singular -> (structure)
                 Specifies the information that is required for querying  Sin-
                 gular.

                 object -> (string)
                     The object specified in the Singular flow source.

              Slack -> (structure)
                 Specifies  the  information  that  is  required  for querying
                 Slack.

                 object -> (string)
                     The object specified in the Slack flow source.

              Trendmicro -> (structure)
                 Specifies the information that is required for querying Trend
                 Micro.

                 object -> (string)
                     The object specified in the Trend Micro flow source.

              Veeva -> (structure)
                 Specifies  the  information  that  is  required  for querying
                 Veeva.

                 object -> (string)
                     The object specified in the Veeva flow source.

                 documentType -> (string)
                     The document type specified in the Veeva document extract
                     flow.

                 includeSourceFiles -> (boolean)
                     Boolean  value  to include source files in Veeva document
                     extract flow.

                 includeRenditions -> (boolean)
                     Boolean value to include file renditions in  Veeva  docu-
                     ment extract flow.

                 includeAllVersions -> (boolean)
                     Boolean  value  to include All Versions of files in Veeva
                     document extract flow.

              Zendesk -> (structure)
                 Specifies the information that is required for querying  Zen-
                 desk.

                 object -> (string)
                     The object specified in the Zendesk flow source.

              SAPOData -> (structure)
                 The properties that are applied when using SAPOData as a flow
                 source.

                 objectPath -> (string)
                     The object path specified in the SAPOData flow source.

              CustomConnector -> (structure)
                 The properties that are applied when the custom connector  is
                 being used as a source.

                 entityName -> (string)
                     The  entity specified in the custom connector as a source
                     in the flow.

                 customProperties -> (map)
                     Custom properties that are required  to  use  the  custom
                     connector as a source.

                     key -> (string)

                     value -> (string)

          incrementalPullConfig -> (structure)
              Defines the configuration for a scheduled incremental data pull.
              If a valid configuration is provided, the  fields  specified  in
              the  configuration  are  used  when querying for the incremental
              data pull.

              datetimeTypeFieldName -> (string)
                 A field that specifies the date time or  timestamp  field  as
                 the  criteria  to use when importing incremental records from
                 the source.

       JSON Syntax:

          {
            "connectorType": "Salesforce"|"Singular"|"Slack"|"Redshift"|"S3"|"Marketo"|"Googleanalytics"|"Zendesk"|"Servicenow"|"Datadog"|"Trendmicro"|"Snowflake"|"Dynatrace"|"Infornexus"|"Amplitude"|"Veeva"|"EventBridge"|"LookoutMetrics"|"Upsolver"|"Honeycode"|"CustomerProfiles"|"SAPOData"|"CustomConnector",
            "apiVersion": "string",
            "connectorProfileName": "string",
            "sourceConnectorProperties": {
              "Amplitude": {
                "object": "string"
              },
              "Datadog": {
                "object": "string"
              },
              "Dynatrace": {
                "object": "string"
              },
              "GoogleAnalytics": {
                "object": "string"
              },
              "InforNexus": {
                "object": "string"
              },
              "Marketo": {
                "object": "string"
              },
              "S3": {
                "bucketName": "string",
                "bucketPrefix": "string",
                "s3InputFormatConfig": {
                  "s3InputFileType": "CSV"|"JSON"
                }
              },
              "Salesforce": {
                "object": "string",
                "enableDynamicFieldUpdate": true|false,
                "includeDeletedRecords": true|false,
                "dataTransferApi": "AUTOMATIC"|"BULKV2"|"REST_SYNC"
              },
              "ServiceNow": {
                "object": "string"
              },
              "Singular": {
                "object": "string"
              },
              "Slack": {
                "object": "string"
              },
              "Trendmicro": {
                "object": "string"
              },
              "Veeva": {
                "object": "string",
                "documentType": "string",
                "includeSourceFiles": true|false,
                "includeRenditions": true|false,
                "includeAllVersions": true|false
              },
              "Zendesk": {
                "object": "string"
              },
              "SAPOData": {
                "objectPath": "string"
              },
              "CustomConnector": {
                "entityName": "string",
                "customProperties": {"string": "string"
                  ...}
              }
            },
            "incrementalPullConfig": {
              "datetimeTypeFieldName": "string"
            }
          }

       --destination-flow-config-list (list)
          The configuration that controls how Amazon AppFlow  places  data  in
          the destination connector.

          (structure)
              Contains information about the configuration of destination con-
              nectors present in the flow.

              connectorType -> (string)
                 The type of connector, such as Salesforce, Amplitude, and  so
                 on.

              apiVersion -> (string)
                 The API version that the destination connector uses.

              connectorProfileName -> (string)
                 The  name  of the connector profile. This name must be unique
                 for each connector profile in the  Amazon  Web  Services  ac-
                 count.

              destinationConnectorProperties -> (structure)
                 This  stores the information that is required to query a par-
                 ticular connector.

                 Redshift -> (structure)
                     The properties required to query Amazon Redshift.

                     object -> (string)
                        The object specified in the Amazon Redshift flow  des-
                        tination.

                     intermediateBucketName -> (string)
                        The  intermediate bucket that Amazon AppFlow uses when
                        moving data into Amazon Redshift.

                     bucketPrefix -> (string)
                        The object key for the bucket in which Amazon  AppFlow
                        places the destination files.

                     errorHandlingConfig -> (structure)
                        The settings that determine how Amazon AppFlow handles
                        an error when placing data in the Amazon Redshift des-
                        tination. For example, this setting would determine if
                        the flow should fail after  one  insertion  error,  or
                        continue and attempt to insert every record regardless
                        of the initial failure. ErrorHandlingConfig is a  part
                        of the destination connector details.

                        failOnFirstDestinationError -> (boolean)
                            Specifies  if the flow should fail after the first
                            instance of a failure  when  attempting  to  place
                            data in the destination.

                        bucketPrefix -> (string)
                            Specifies the Amazon S3 bucket prefix.

                        bucketName -> (string)
                            Specifies the name of the Amazon S3 bucket.

                 S3 -> (structure)
                     The properties required to query Amazon S3.

                     bucketName -> (string)
                        The  Amazon  S3  bucket  name  in which Amazon AppFlow
                        places the transferred data.

                     bucketPrefix -> (string)
                        The object key for the  destination  bucket  in  which
                        Amazon AppFlow places the files.

                     s3OutputFormatConfig -> (structure)
                        The  configuration  that determines how Amazon AppFlow
                        should format the flow output data when Amazon  S3  is
                        used as the destination.

                        fileType -> (string)
                            Indicates the file type that Amazon AppFlow places
                            in the Amazon S3 bucket.

                        prefixConfig -> (structure)
                            Determines the prefix that Amazon AppFlow  applies
                            to  the  folder  name in the Amazon S3 bucket. You
                            can name folders according to the  flow  frequency
                            and date.

                            prefixType -> (string)
                               Determines   the  format  of  the  prefix,  and
                               whether it applies to the file name, file path,
                               or both.

                            prefixFormat -> (string)
                               Determines  the level of granularity that's in-
                               cluded in the prefix.

                        aggregationConfig -> (structure)
                            The aggregation settings that you can use to  cus-
                            tomize the output format of your flow data.

                            aggregationType -> (string)
                               Specifies whether Amazon AppFlow aggregates the
                               flow records into a single file, or leave  them
                               unaggregated.

                        preserveSourceDataTyping -> (boolean)
                            If  your  file  output format is Parquet, use this
                            parameter to set whether Amazon AppFlow  preserves
                            the  data types in your source data when it writes
                            the output to Amazon S3.

                            o true : Amazon AppFlow preserves the  data  types
                              when it writes to Amazon S3. For example, an in-
                              teger or 1 in your source data is still an inte-
                              ger in your output.

                            o false  :  Amazon  AppFlow  converts  all  of the
                              source data into strings when it writes to  Ama-
                              zon  S3.  For  example,  an integer of 1 in your
                              source data becomes the string "1" in  the  out-
                              put.

                 Salesforce -> (structure)
                     The properties required to query Salesforce.

                     object -> (string)
                        The  object  specified in the Salesforce flow destina-
                        tion.

                     idFieldNames -> (list)
                        The name of the field that Amazon AppFlow uses  as  an
                        ID when performing a write operation such as update or
                        delete.

                        (string)

                     errorHandlingConfig -> (structure)
                        The settings that determine how Amazon AppFlow handles
                        an  error when placing data in the Salesforce destina-
                        tion. For example, this setting would determine if the
                        flow  should  fail  after one insertion error, or con-
                        tinue and attempt to insert every record regardless of
                        the  initial failure. ErrorHandlingConfig is a part of
                        the destination connector details.

                        failOnFirstDestinationError -> (boolean)
                            Specifies if the flow should fail after the  first
                            instance  of  a  failure  when attempting to place
                            data in the destination.

                        bucketPrefix -> (string)
                            Specifies the Amazon S3 bucket prefix.

                        bucketName -> (string)
                            Specifies the name of the Amazon S3 bucket.

                     writeOperationType -> (string)
                        This specifies the type of write operation to be  per-
                        formed  in Salesforce. When the value is UPSERT , then
                        idFieldNames is required.

                     dataTransferApi -> (string)
                        Specifies which  Salesforce  API  is  used  by  Amazon
                        AppFlow when your flow transfers data to Salesforce.
                            AUTOMATIC

                        The  default.  Amazon AppFlow selects which API to use
                        based on the number of records that your  flow  trans-
                        fers  to Salesforce. If your flow transfers fewer than
                        1,000 records, Amazon  AppFlow  uses  Salesforce  REST
                        API.  If  your  flow  transfers 1,000 records or more,
                        Amazon AppFlow uses Salesforce Bulk API 2.0.

                        Each of these Salesforce APIs structures data  differ-
                        ently.  If  Amazon  AppFlow  selects the API automati-
                        cally, be aware that, for recurring  flows,  the  data
                        output  might  vary from one flow run to the next. For
                        example, if a flow runs daily, it might use  REST  API
                        on  one  day to transfer 900 records, and it might use
                        Bulk API  2.0  on  the  next  day  to  transfer  1,100
                        records.  For  each of these flow runs, the respective
                        Salesforce API formats the data differently.  Some  of
                        the  differences  include  how dates are formatted and
                        null  values  are  represented.  Also,  Bulk  API  2.0
                        doesn't transfer Salesforce compound fields.

                        By choosing this option, you optimize flow performance
                        for both small  and  large  data  transfers,  but  the
                        tradeoff is inconsistent formatting in the output.
                            BULKV2

                        Amazon AppFlow uses only Salesforce Bulk API 2.0. This
                        API runs asynchronous data transfers, and it's optimal
                        for  large  sets of data. By choosing this option, you
                        ensure that your flow writes  consistent  output,  but
                        you  optimize  performance  only for large data trans-
                        fers.

                        Note that Bulk API 2.0 does  not  transfer  Salesforce
                        compound fields.
                            REST_SYNC

                        Amazon  AppFlow  uses  only  Salesforce  REST  API. By
                        choosing this option, you ensure that your flow writes
                        consistent  output,  but  you decrease performance for
                        large data transfers that are better suited  for  Bulk
                        API  2.0.  In  some  cases,  if  your flow attempts to
                        transfer a vary large set of data, it might fail  with
                        a timed out error.

                 Snowflake -> (structure)
                     The properties required to query Snowflake.

                     object -> (string)
                        The  object  specified  in the Snowflake flow destina-
                        tion.

                     intermediateBucketName -> (string)
                        The intermediate bucket that Amazon AppFlow uses  when
                        moving data into Snowflake.

                     bucketPrefix -> (string)
                        The  object  key  for  the destination bucket in which
                        Amazon AppFlow places the files.

                     errorHandlingConfig -> (structure)
                        The settings that determine how Amazon AppFlow handles
                        an  error  when placing data in the Snowflake destina-
                        tion. For example, this setting would determine if the
                        flow  should  fail  after one insertion error, or con-
                        tinue and attempt to insert every record regardless of
                        the  initial failure. ErrorHandlingConfig is a part of
                        the destination connector details.

                        failOnFirstDestinationError -> (boolean)
                            Specifies if the flow should fail after the  first
                            instance  of  a  failure  when attempting to place
                            data in the destination.

                        bucketPrefix -> (string)
                            Specifies the Amazon S3 bucket prefix.

                        bucketName -> (string)
                            Specifies the name of the Amazon S3 bucket.

                 EventBridge -> (structure)
                     The properties required to query Amazon EventBridge.

                     object -> (string)
                        The object specified in the  Amazon  EventBridge  flow
                        destination.

                     errorHandlingConfig -> (structure)
                        The settings that determine how Amazon AppFlow handles
                        an error when placing data in the destination. For ex-
                        ample, this setting would determine if the flow should
                        fail after one insertion error, or  continue  and  at-
                        tempt to insert every record regardless of the initial
                        failure. ErrorHandlingConfig is a part of the destina-
                        tion connector details.

                        failOnFirstDestinationError -> (boolean)
                            Specifies  if the flow should fail after the first
                            instance of a failure  when  attempting  to  place
                            data in the destination.

                        bucketPrefix -> (string)
                            Specifies the Amazon S3 bucket prefix.

                        bucketName -> (string)
                            Specifies the name of the Amazon S3 bucket.

                 LookoutMetrics -> (structure)
                     The  properties required to query Amazon Lookout for Met-
                     rics.

                 Upsolver -> (structure)
                     The properties required to query Upsolver.

                     bucketName -> (string)
                        The Upsolver Amazon S3 bucket  name  in  which  Amazon
                        AppFlow places the transferred data.

                     bucketPrefix -> (string)
                        The  object key for the destination Upsolver Amazon S3
                        bucket in which Amazon AppFlow places the files.

                     s3OutputFormatConfig -> (structure)
                        The configuration that determines how data is  format-
                        ted when Upsolver is used as the flow destination.

                        fileType -> (string)
                            Indicates the file type that Amazon AppFlow places
                            in the Upsolver Amazon S3 bucket.

                        prefixConfig -> (structure)
                            Determines the prefix that Amazon AppFlow  applies
                            to  the destination folder name. You can name your
                            destination folders according  to  the  flow  fre-
                            quency and date.

                            prefixType -> (string)
                               Determines   the  format  of  the  prefix,  and
                               whether it applies to the file name, file path,
                               or both.

                            prefixFormat -> (string)
                               Determines  the level of granularity that's in-
                               cluded in the prefix.

                        aggregationConfig -> (structure)
                            The aggregation settings that you can use to  cus-
                            tomize the output format of your flow data.

                            aggregationType -> (string)
                               Specifies whether Amazon AppFlow aggregates the
                               flow records into a single file, or leave  them
                               unaggregated.

                 Honeycode -> (structure)
                     The properties required to query Amazon Honeycode.

                     object -> (string)
                        The object specified in the Amazon Honeycode flow des-
                        tination.

                     errorHandlingConfig -> (structure)
                        The settings that determine how Amazon AppFlow handles
                        an error when placing data in the destination. For ex-
                        ample, this setting would determine if the flow should
                        fail  after  one  insertion error, or continue and at-
                        tempt to insert every record regardless of the initial
                        failure. ErrorHandlingConfig is a part of the destina-
                        tion connector details.

                        failOnFirstDestinationError -> (boolean)
                            Specifies if the flow should fail after the  first
                            instance  of  a  failure  when attempting to place
                            data in the destination.

                        bucketPrefix -> (string)
                            Specifies the Amazon S3 bucket prefix.

                        bucketName -> (string)
                            Specifies the name of the Amazon S3 bucket.

                 CustomerProfiles -> (structure)
                     The properties required to query Amazon Connect  Customer
                     Profiles.

                     domainName -> (string)
                        The  unique  name  of the Amazon Connect Customer Pro-
                        files domain.

                     objectTypeName -> (string)
                        The object specified in the  Amazon  Connect  Customer
                        Profiles flow destination.

                 Zendesk -> (structure)
                     The properties required to query Zendesk.

                     object -> (string)
                        The object specified in the Zendesk flow destination.

                     idFieldNames -> (list)
                        A  list of field names that can be used as an ID field
                        when performing a write operation.

                        (string)

                     errorHandlingConfig -> (structure)
                        The settings that determine how Amazon AppFlow handles
                        an error when placing data in the destination. For ex-
                        ample, this setting would determine if the flow should
                        fail  after  one  insertion error, or continue and at-
                        tempt to insert every record regardless of the initial
                        failure. ErrorHandlingConfig is a part of the destina-
                        tion connector details.

                        failOnFirstDestinationError -> (boolean)
                            Specifies if the flow should fail after the  first
                            instance  of  a  failure  when attempting to place
                            data in the destination.

                        bucketPrefix -> (string)
                            Specifies the Amazon S3 bucket prefix.

                        bucketName -> (string)
                            Specifies the name of the Amazon S3 bucket.

                     writeOperationType -> (string)
                        The possible write operations in the destination  con-
                        nector. When this value is not provided, this defaults
                        to the INSERT operation.

                 Marketo -> (structure)
                     The properties required to query Marketo.

                     object -> (string)
                        The object specified in the Marketo flow destination.

                     errorHandlingConfig -> (structure)
                        The settings that determine how Amazon AppFlow handles
                        an error when placing data in the destination. For ex-
                        ample, this setting would determine if the flow should
                        fail  after  one  insertion error, or continue and at-
                        tempt to insert every record regardless of the initial
                        failure. ErrorHandlingConfig is a part of the destina-
                        tion connector details.

                        failOnFirstDestinationError -> (boolean)
                            Specifies if the flow should fail after the  first
                            instance  of  a  failure  when attempting to place
                            data in the destination.

                        bucketPrefix -> (string)
                            Specifies the Amazon S3 bucket prefix.

                        bucketName -> (string)
                            Specifies the name of the Amazon S3 bucket.

                 CustomConnector -> (structure)
                     The properties that are required to query the custom Con-
                     nector.

                     entityName -> (string)
                        The entity specified in the custom connector as a des-
                        tination in the flow.

                     errorHandlingConfig -> (structure)
                        The settings that determine how Amazon AppFlow handles
                        an  error when placing data in the custom connector as
                        destination.

                        failOnFirstDestinationError -> (boolean)
                            Specifies if the flow should fail after the  first
                            instance  of  a  failure  when attempting to place
                            data in the destination.

                        bucketPrefix -> (string)
                            Specifies the Amazon S3 bucket prefix.

                        bucketName -> (string)
                            Specifies the name of the Amazon S3 bucket.

                     writeOperationType -> (string)
                        Specifies the type of write operation to be  performed
                        in the custom connector when it's used as destination.

                     idFieldNames -> (list)
                        The  name  of the field that Amazon AppFlow uses as an
                        ID when performing a write operation such  as  update,
                        delete, or upsert.

                        (string)

                     customProperties -> (map)
                        The custom properties that are specific to the connec-
                        tor when it's used as a destination in the flow.

                        key -> (string)

                        value -> (string)

                 SAPOData -> (structure)
                     The properties required to query SAPOData.

                     objectPath -> (string)
                        The object path specified in the SAPOData flow  desti-
                        nation.

                     successResponseHandlingConfig -> (structure)
                        Determines  how Amazon AppFlow handles the success re-
                        sponse that it gets from the connector  after  placing
                        data.

                        For  example,  this  setting  would determine where to
                        write the response from a destination connector upon a
                        successful insert operation.

                        bucketPrefix -> (string)
                            The Amazon S3 bucket prefix.

                        bucketName -> (string)
                            The name of the Amazon S3 bucket.

                     idFieldNames -> (list)
                        A  list of field names that can be used as an ID field
                        when performing a write operation.

                        (string)

                     errorHandlingConfig -> (structure)
                        The settings that determine how Amazon AppFlow handles
                        an error when placing data in the destination. For ex-
                        ample, this setting would determine if the flow should
                        fail  after  one  insertion error, or continue and at-
                        tempt to insert every record regardless of the initial
                        failure. ErrorHandlingConfig is a part of the destina-
                        tion connector details.

                        failOnFirstDestinationError -> (boolean)
                            Specifies if the flow should fail after the  first
                            instance  of  a  failure  when attempting to place
                            data in the destination.

                        bucketPrefix -> (string)
                            Specifies the Amazon S3 bucket prefix.

                        bucketName -> (string)
                            Specifies the name of the Amazon S3 bucket.

                     writeOperationType -> (string)
                        The possible write operations in the destination  con-
                        nector. When this value is not provided, this defaults
                        to the INSERT operation.

       JSON Syntax:

          [
            {
              "connectorType": "Salesforce"|"Singular"|"Slack"|"Redshift"|"S3"|"Marketo"|"Googleanalytics"|"Zendesk"|"Servicenow"|"Datadog"|"Trendmicro"|"Snowflake"|"Dynatrace"|"Infornexus"|"Amplitude"|"Veeva"|"EventBridge"|"LookoutMetrics"|"Upsolver"|"Honeycode"|"CustomerProfiles"|"SAPOData"|"CustomConnector",
              "apiVersion": "string",
              "connectorProfileName": "string",
              "destinationConnectorProperties": {
                "Redshift": {
                  "object": "string",
                  "intermediateBucketName": "string",
                  "bucketPrefix": "string",
                  "errorHandlingConfig": {
                    "failOnFirstDestinationError": true|false,
                    "bucketPrefix": "string",
                    "bucketName": "string"
                  }
                },
                "S3": {
                  "bucketName": "string",
                  "bucketPrefix": "string",
                  "s3OutputFormatConfig": {
                    "fileType": "CSV"|"JSON"|"PARQUET",
                    "prefixConfig": {
                      "prefixType": "FILENAME"|"PATH"|"PATH_AND_FILENAME",
                      "prefixFormat": "YEAR"|"MONTH"|"DAY"|"HOUR"|"MINUTE"
                    },
                    "aggregationConfig": {
                      "aggregationType": "None"|"SingleFile"
                    },
                    "preserveSourceDataTyping": true|false
                  }
                },
                "Salesforce": {
                  "object": "string",
                  "idFieldNames": ["string", ...],
                  "errorHandlingConfig": {
                    "failOnFirstDestinationError": true|false,
                    "bucketPrefix": "string",
                    "bucketName": "string"
                  },
                  "writeOperationType": "INSERT"|"UPSERT"|"UPDATE"|"DELETE",
                  "dataTransferApi": "AUTOMATIC"|"BULKV2"|"REST_SYNC"
                },
                "Snowflake": {
                  "object": "string",
                  "intermediateBucketName": "string",
                  "bucketPrefix": "string",
                  "errorHandlingConfig": {
                    "failOnFirstDestinationError": true|false,
                    "bucketPrefix": "string",
                    "bucketName": "string"
                  }
                },
                "EventBridge": {
                  "object": "string",
                  "errorHandlingConfig": {
                    "failOnFirstDestinationError": true|false,
                    "bucketPrefix": "string",
                    "bucketName": "string"
                  }
                },
                "LookoutMetrics": {

                },
                "Upsolver": {
                  "bucketName": "string",
                  "bucketPrefix": "string",
                  "s3OutputFormatConfig": {
                    "fileType": "CSV"|"JSON"|"PARQUET",
                    "prefixConfig": {
                      "prefixType": "FILENAME"|"PATH"|"PATH_AND_FILENAME",
                      "prefixFormat": "YEAR"|"MONTH"|"DAY"|"HOUR"|"MINUTE"
                    },
                    "aggregationConfig": {
                      "aggregationType": "None"|"SingleFile"
                    }
                  }
                },
                "Honeycode": {
                  "object": "string",
                  "errorHandlingConfig": {
                    "failOnFirstDestinationError": true|false,
                    "bucketPrefix": "string",
                    "bucketName": "string"
                  }
                },
                "CustomerProfiles": {
                  "domainName": "string",
                  "objectTypeName": "string"
                },
                "Zendesk": {
                  "object": "string",
                  "idFieldNames": ["string", ...],
                  "errorHandlingConfig": {
                    "failOnFirstDestinationError": true|false,
                    "bucketPrefix": "string",
                    "bucketName": "string"
                  },
                  "writeOperationType": "INSERT"|"UPSERT"|"UPDATE"|"DELETE"
                },
                "Marketo": {
                  "object": "string",
                  "errorHandlingConfig": {
                    "failOnFirstDestinationError": true|false,
                    "bucketPrefix": "string",
                    "bucketName": "string"
                  }
                },
                "CustomConnector": {
                  "entityName": "string",
                  "errorHandlingConfig": {
                    "failOnFirstDestinationError": true|false,
                    "bucketPrefix": "string",
                    "bucketName": "string"
                  },
                  "writeOperationType": "INSERT"|"UPSERT"|"UPDATE"|"DELETE",
                  "idFieldNames": ["string", ...],
                  "customProperties": {"string": "string"
                    ...}
                },
                "SAPOData": {
                  "objectPath": "string",
                  "successResponseHandlingConfig": {
                    "bucketPrefix": "string",
                    "bucketName": "string"
                  },
                  "idFieldNames": ["string", ...],
                  "errorHandlingConfig": {
                    "failOnFirstDestinationError": true|false,
                    "bucketPrefix": "string",
                    "bucketName": "string"
                  },
                  "writeOperationType": "INSERT"|"UPSERT"|"UPDATE"|"DELETE"
                }
              }
            }
            ...
          ]

       --tasks (list)
          A list of tasks that Amazon AppFlow performs while transferring  the
          data in the flow run.

          (structure)
              A  class  for modeling different type of tasks. Task implementa-
              tion varies based on the TaskType .

              sourceFields -> (list)
                 The source fields to which a particular task is applied.

                 (string)

              connectorOperator -> (structure)
                 The operation to be performed on the provided source fields.

                 Amplitude -> (string)
                     The operation to be performed on the  provided  Amplitude
                     source fields.

                 Datadog -> (string)
                     The  operation  to  be  performed on the provided Datadog
                     source fields.

                 Dynatrace -> (string)
                     The operation to be performed on the  provided  Dynatrace
                     source fields.

                 GoogleAnalytics -> (string)
                     The operation to be performed on the provided Google Ana-
                     lytics source fields.

                 InforNexus -> (string)
                     The operation to be performed on the provided Infor Nexus
                     source fields.

                 Marketo -> (string)
                     The  operation  to  be  performed on the provided Marketo
                     source fields.

                 S3 -> (string)
                     The operation to be performed on the provided  Amazon  S3
                     source fields.

                 Salesforce -> (string)
                     The  operation to be performed on the provided Salesforce
                     source fields.

                 ServiceNow -> (string)
                     The operation to be performed on the provided  ServiceNow
                     source fields.

                 Singular -> (string)
                     The  operation  to  be performed on the provided Singular
                     source fields.

                 Slack -> (string)
                     The operation to  be  performed  on  the  provided  Slack
                     source fields.

                 Trendmicro -> (string)
                     The operation to be performed on the provided Trend Micro
                     source fields.

                 Veeva -> (string)
                     The operation to  be  performed  on  the  provided  Veeva
                     source fields.

                 Zendesk -> (string)
                     The  operation  to  be  performed on the provided Zendesk
                     source fields.

                 SAPOData -> (string)
                     The operation to be performed on  the  provided  SAPOData
                     source fields.

                 CustomConnector -> (string)
                     Operators supported by the custom connector.

              destinationField -> (string)
                 A  field in a destination connector, or a field value against
                 which Amazon AppFlow validates a source field.

              taskType -> (string)
                 Specifies the  particular  task  implementation  that  Amazon
                 AppFlow performs.

              taskProperties -> (map)
                 A  map  used to store task-related information. The execution
                 service looks for particular information based on  the  Task-
                 Type .

                 key -> (string)

                 value -> (string)

       Shorthand Syntax:

          sourceFields=string,string,connectorOperator={Amplitude=string,Datadog=string,Dynatrace=string,GoogleAnalytics=string,InforNexus=string,Marketo=string,S3=string,Salesforce=string,ServiceNow=string,Singular=string,Slack=string,Trendmicro=string,Veeva=string,Zendesk=string,SAPOData=string,CustomConnector=string},destinationField=string,taskType=string,taskProperties={KeyName1=string,KeyName2=string} ...

       JSON Syntax:

          [
            {
              "sourceFields": ["string", ...],
              "connectorOperator": {
                "Amplitude": "BETWEEN",
                "Datadog": "PROJECTION"|"BETWEEN"|"EQUAL_TO"|"ADDITION"|"MULTIPLICATION"|"DIVISION"|"SUBTRACTION"|"MASK_ALL"|"MASK_FIRST_N"|"MASK_LAST_N"|"VALIDATE_NON_NULL"|"VALIDATE_NON_ZERO"|"VALIDATE_NON_NEGATIVE"|"VALIDATE_NUMERIC"|"NO_OP",
                "Dynatrace": "PROJECTION"|"BETWEEN"|"EQUAL_TO"|"ADDITION"|"MULTIPLICATION"|"DIVISION"|"SUBTRACTION"|"MASK_ALL"|"MASK_FIRST_N"|"MASK_LAST_N"|"VALIDATE_NON_NULL"|"VALIDATE_NON_ZERO"|"VALIDATE_NON_NEGATIVE"|"VALIDATE_NUMERIC"|"NO_OP",
                "GoogleAnalytics": "PROJECTION"|"BETWEEN",
                "InforNexus": "PROJECTION"|"BETWEEN"|"EQUAL_TO"|"ADDITION"|"MULTIPLICATION"|"DIVISION"|"SUBTRACTION"|"MASK_ALL"|"MASK_FIRST_N"|"MASK_LAST_N"|"VALIDATE_NON_NULL"|"VALIDATE_NON_ZERO"|"VALIDATE_NON_NEGATIVE"|"VALIDATE_NUMERIC"|"NO_OP",
                "Marketo": "PROJECTION"|"LESS_THAN"|"GREATER_THAN"|"BETWEEN"|"ADDITION"|"MULTIPLICATION"|"DIVISION"|"SUBTRACTION"|"MASK_ALL"|"MASK_FIRST_N"|"MASK_LAST_N"|"VALIDATE_NON_NULL"|"VALIDATE_NON_ZERO"|"VALIDATE_NON_NEGATIVE"|"VALIDATE_NUMERIC"|"NO_OP",
                "S3": "PROJECTION"|"LESS_THAN"|"GREATER_THAN"|"BETWEEN"|"LESS_THAN_OR_EQUAL_TO"|"GREATER_THAN_OR_EQUAL_TO"|"EQUAL_TO"|"NOT_EQUAL_TO"|"ADDITION"|"MULTIPLICATION"|"DIVISION"|"SUBTRACTION"|"MASK_ALL"|"MASK_FIRST_N"|"MASK_LAST_N"|"VALIDATE_NON_NULL"|"VALIDATE_NON_ZERO"|"VALIDATE_NON_NEGATIVE"|"VALIDATE_NUMERIC"|"NO_OP",
                "Salesforce": "PROJECTION"|"LESS_THAN"|"CONTAINS"|"GREATER_THAN"|"BETWEEN"|"LESS_THAN_OR_EQUAL_TO"|"GREATER_THAN_OR_EQUAL_TO"|"EQUAL_TO"|"NOT_EQUAL_TO"|"ADDITION"|"MULTIPLICATION"|"DIVISION"|"SUBTRACTION"|"MASK_ALL"|"MASK_FIRST_N"|"MASK_LAST_N"|"VALIDATE_NON_NULL"|"VALIDATE_NON_ZERO"|"VALIDATE_NON_NEGATIVE"|"VALIDATE_NUMERIC"|"NO_OP",
                "ServiceNow": "PROJECTION"|"CONTAINS"|"LESS_THAN"|"GREATER_THAN"|"BETWEEN"|"LESS_THAN_OR_EQUAL_TO"|"GREATER_THAN_OR_EQUAL_TO"|"EQUAL_TO"|"NOT_EQUAL_TO"|"ADDITION"|"MULTIPLICATION"|"DIVISION"|"SUBTRACTION"|"MASK_ALL"|"MASK_FIRST_N"|"MASK_LAST_N"|"VALIDATE_NON_NULL"|"VALIDATE_NON_ZERO"|"VALIDATE_NON_NEGATIVE"|"VALIDATE_NUMERIC"|"NO_OP",
                "Singular": "PROJECTION"|"EQUAL_TO"|"ADDITION"|"MULTIPLICATION"|"DIVISION"|"SUBTRACTION"|"MASK_ALL"|"MASK_FIRST_N"|"MASK_LAST_N"|"VALIDATE_NON_NULL"|"VALIDATE_NON_ZERO"|"VALIDATE_NON_NEGATIVE"|"VALIDATE_NUMERIC"|"NO_OP",
                "Slack": "PROJECTION"|"LESS_THAN"|"GREATER_THAN"|"BETWEEN"|"LESS_THAN_OR_EQUAL_TO"|"GREATER_THAN_OR_EQUAL_TO"|"EQUAL_TO"|"ADDITION"|"MULTIPLICATION"|"DIVISION"|"SUBTRACTION"|"MASK_ALL"|"MASK_FIRST_N"|"MASK_LAST_N"|"VALIDATE_NON_NULL"|"VALIDATE_NON_ZERO"|"VALIDATE_NON_NEGATIVE"|"VALIDATE_NUMERIC"|"NO_OP",
                "Trendmicro": "PROJECTION"|"EQUAL_TO"|"ADDITION"|"MULTIPLICATION"|"DIVISION"|"SUBTRACTION"|"MASK_ALL"|"MASK_FIRST_N"|"MASK_LAST_N"|"VALIDATE_NON_NULL"|"VALIDATE_NON_ZERO"|"VALIDATE_NON_NEGATIVE"|"VALIDATE_NUMERIC"|"NO_OP",
                "Veeva": "PROJECTION"|"LESS_THAN"|"GREATER_THAN"|"CONTAINS"|"BETWEEN"|"LESS_THAN_OR_EQUAL_TO"|"GREATER_THAN_OR_EQUAL_TO"|"EQUAL_TO"|"NOT_EQUAL_TO"|"ADDITION"|"MULTIPLICATION"|"DIVISION"|"SUBTRACTION"|"MASK_ALL"|"MASK_FIRST_N"|"MASK_LAST_N"|"VALIDATE_NON_NULL"|"VALIDATE_NON_ZERO"|"VALIDATE_NON_NEGATIVE"|"VALIDATE_NUMERIC"|"NO_OP",
                "Zendesk": "PROJECTION"|"GREATER_THAN"|"ADDITION"|"MULTIPLICATION"|"DIVISION"|"SUBTRACTION"|"MASK_ALL"|"MASK_FIRST_N"|"MASK_LAST_N"|"VALIDATE_NON_NULL"|"VALIDATE_NON_ZERO"|"VALIDATE_NON_NEGATIVE"|"VALIDATE_NUMERIC"|"NO_OP",
                "SAPOData": "PROJECTION"|"LESS_THAN"|"CONTAINS"|"GREATER_THAN"|"BETWEEN"|"LESS_THAN_OR_EQUAL_TO"|"GREATER_THAN_OR_EQUAL_TO"|"EQUAL_TO"|"NOT_EQUAL_TO"|"ADDITION"|"MULTIPLICATION"|"DIVISION"|"SUBTRACTION"|"MASK_ALL"|"MASK_FIRST_N"|"MASK_LAST_N"|"VALIDATE_NON_NULL"|"VALIDATE_NON_ZERO"|"VALIDATE_NON_NEGATIVE"|"VALIDATE_NUMERIC"|"NO_OP",
                "CustomConnector": "PROJECTION"|"LESS_THAN"|"GREATER_THAN"|"CONTAINS"|"BETWEEN"|"LESS_THAN_OR_EQUAL_TO"|"GREATER_THAN_OR_EQUAL_TO"|"EQUAL_TO"|"NOT_EQUAL_TO"|"ADDITION"|"MULTIPLICATION"|"DIVISION"|"SUBTRACTION"|"MASK_ALL"|"MASK_FIRST_N"|"MASK_LAST_N"|"VALIDATE_NON_NULL"|"VALIDATE_NON_ZERO"|"VALIDATE_NON_NEGATIVE"|"VALIDATE_NUMERIC"|"NO_OP"
              },
              "destinationField": "string",
              "taskType": "Arithmetic"|"Filter"|"Map"|"Map_all"|"Mask"|"Merge"|"Passthrough"|"Truncate"|"Validate",
              "taskProperties": {"VALUE"|"VALUES"|"DATA_TYPE"|"UPPER_BOUND"|"LOWER_BOUND"|"SOURCE_DATA_TYPE"|"DESTINATION_DATA_TYPE"|"VALIDATION_ACTION"|"MASK_VALUE"|"MASK_LENGTH"|"TRUNCATE_LENGTH"|"MATH_OPERATION_FIELDS_ORDER"|"CONCAT_FORMAT"|"SUBFIELD_CATEGORY_MAP"|"EXCLUDE_SOURCE_FIELDS_LIST"|"INCLUDE_NEW_FIELDS": "string"
                ...}
            }
            ...
          ]

       --tags (map)
          The tags used to organize, track, or control access for your flow.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       flowArn -> (string)
          The flow's Amazon Resource Name (ARN).

       flowStatus -> (string)
          Indicates the current status of the flow.



                                                                 CREATE-FLOW()
