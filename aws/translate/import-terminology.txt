IMPORT-TERMINOLOGY()                                      IMPORT-TERMINOLOGY()



NAME
       import-terminology -

DESCRIPTION
       Creates  or  updates a custom terminology, depending on whether one al-
       ready exists for the given terminology name.  Importing  a  terminology
       with  the  same  name  as  an existing one will merge the terminologies
       based on the chosen merge strategy. The only supported  merge  strategy
       is  OVERWRITE,  where  the imported terminology overwrites the existing
       terminology of the same name.

       If you import a terminology that overwrites an existing  one,  the  new
       terminology  takes  up  to  10  minutes to fully propagate. After that,
       translations have access to the new terminology.

       See also: AWS API Documentation

SYNOPSIS
            import-terminology
          --name <value>
          --merge-strategy <value>
          [--description <value>]
          [--terminology-data <value>]
          [--encryption-key <value>]
          [--tags <value>]
          --data-file <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --name (string)
          The name of the custom terminology being imported.

       --merge-strategy (string)
          The merge strategy of the custom terminology  being  imported.  Cur-
          rently,  only  the  OVERWRITE  merge  strategy is supported. In this
          case, the imported terminology will overwrite an existing  terminol-
          ogy of the same name.

          Possible values:

          o OVERWRITE

       --description (string)
          The description of the custom terminology being imported.

       --terminology-data (structure)
          The terminology data for the custom terminology being imported.

          Format -> (string)
              The data format of the custom terminology.

          Directionality -> (string)
              The   directionality  of  your  terminology  resource  indicates
              whether it has one source language (uni-directional) or multiple
              (multi-directional).
                 UNI

              The  terminology  resource has one source language (for example,
              the first column in a CSV file), and all of its other  languages
              are target languages.
                 MULTI

              Any  language in the terminology resource can be the source lan-
              guage or a target language. A single multi-directional terminol-
              ogy  resource can be used for jobs that translate different lan-
              guage pairs. For example, if the  terminology  contains  English
              and  Spanish  terms, it can be used for jobs that translate Eng-
              lish to Spanish and Spanish to English.

              When you create a custom terminology resource without specifying
              the  directionality,  it behaves as uni-directional terminology,
              although this parameter will have a null value.

       Shorthand Syntax:

          Format=string,Directionality=string

       JSON Syntax:

          {
            "Format": "CSV"|"TMX"|"TSV",
            "Directionality": "UNI"|"MULTI"
          }

       --encryption-key (structure)
          The encryption key for the custom terminology being imported.

          Type -> (string)
              The type of encryption key used by Amazon Translate  to  encrypt
              this object.

          Id -> (string)
              The  Amazon Resource Name (ARN) of the encryption key being used
              to encrypt this object.

       Shorthand Syntax:

          Type=string,Id=string

       JSON Syntax:

          {
            "Type": "KMS",
            "Id": "string"
          }

       --tags (list)
          Tags to be associated with this resource. A tag is a key-value  pair
          that adds metadata to a resource. Each tag key for the resource must
          be unique. For more information, see Tagging your resources .

          (structure)
              A key-value pair that adds as a metadata to a resource  used  by
              Amazon Translate.

              Key -> (string)
                 The initial part of a key-value pair that forms a tag associ-
                 ated with a given resource.

              Value -> (string)
                 The second part of a key-value pair that forms a tag  associ-
                 ated with a given resource.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --data-file (blob)
          The  path  to  the  file  of  the  code  you are uploading. Example:
          fileb://data.csv

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To import a custom terminology from a file

       The following import-terminology example  creates a terminology  called
       MyTestTerminology from the test-terminology.csv file:

          aws translate import-terminology \
              --name MyTestTerminology \
              --description "Creating a test terminology in AWS Translate" \
              --merge-strategy OVERWRITE \
              --data-file fileb://test-terminology.csv \
              --terminology-data Format=CSV

       Contents of test-terminology.csv:
          en,fr,es,zh  Hello  world!,Bonjour  tout  le monde!,Hola Mundo!,????
          Amazon,Amazon,Amazon,Amazon

       Output:

          {
              "TerminologyProperties": {
                  "SourceLanguageCode": "en",
                  "Name": "MyTestTerminology",
                  "TargetLanguageCodes": [
                      "fr",
                      "es",
                      "zh"
                  ],
                  "SizeBytes": 97,
                  "LastUpdatedAt": 1571089500.851,
                  "CreatedAt": 1571089500.851,
                  "TermCount": 6,
                  "Arn": "arn:aws:translate:us-west-2:123456789012:terminology/MyTestTerminology/LATEST",
                  "Description": "Creating a test terminology in AWS Translate"
              }
          }

OUTPUT
       TerminologyProperties -> (structure)
          The properties of the custom terminology being imported.

          Name -> (string)
              The name of the custom terminology.

          Description -> (string)
              The description of the custom terminology properties.

          Arn -> (string)
              The Amazon Resource Name (ARN) of the custom terminology.

          SourceLanguageCode -> (string)
              The language code for the source text of the translation request
              for which the custom terminology is being used.

          TargetLanguageCodes -> (list)
              The  language  codes for the target languages available with the
              custom terminology resource. All possible target  languages  are
              returned in array.

              (string)

          EncryptionKey -> (structure)
              The encryption key for the custom terminology.

              Type -> (string)
                 The  type  of  encryption key used by Amazon Translate to en-
                 crypt this object.

              Id -> (string)
                 The Amazon Resource Name (ARN) of the  encryption  key  being
                 used to encrypt this object.

          SizeBytes -> (integer)
              The size of the file used when importing a custom terminology.

          TermCount -> (integer)
              The number of terms included in the custom terminology.

          CreatedAt -> (timestamp)
              The  time  at which the custom terminology was created, based on
              the timestamp.

          LastUpdatedAt -> (timestamp)
              The time at which the custom terminology was last update,  based
              on the timestamp.

          Directionality -> (string)
              The   directionality  of  your  terminology  resource  indicates
              whether it has one source language (uni-directional) or multiple
              (multi-directional).
                 UNI

              The terminology resource has one source language (the first col-
              umn in a CSV file), and all of its other  languages  are  target
              languages.
                 MULTI

              Any  language in the terminology resource can be the source lan-
              guage.

          Message -> (string)
              Additional information from Amazon Translate about the terminol-
              ogy resource.

          SkippedTermCount -> (integer)
              The  number  of  terms  in  the input file that Amazon Translate
              skipped when you created or updated the terminology resource.

          Format -> (string)
              The format of the custom terminology input file.

       AuxiliaryDataLocation -> (structure)
          The Amazon S3 location of a file that provides any errors  or  warn-
          ings  that  were  produced by your input file. This file was created
          when Amazon Translate attempted to create  a  terminology  resource.
          The  location is returned as a presigned URL to that has a 30 minute
          expiration.

          RepositoryType -> (string)
              The repository type for the custom terminology data.

          Location -> (string)
              The Amazon S3 location of the most recent custom terminology in-
              put  file  that was successfully imported into Amazon Translate.
              The location is returned as a presigned URL that has a 30-minute
              expiration .

              WARNING:
                 Amazon Translate doesn't scan all input files for the risk of
                 CSV injection attacks.

                 CSV injection occurs when a .csv or .tsv file is  altered  so
                 that a record contains malicious code. The record begins with
                 a special character, such as =, +, -, or @. When the file  is
                 opened  in a spreadsheet program, the program might interpret
                 the record as a formula and run the code within it.

                 Before you download an input file from Amazon S3, ensure that
                 you recognize the file and trust its creator.



                                                          IMPORT-TERMINOLOGY()
