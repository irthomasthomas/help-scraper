CREATE-RUN-CACHE()                                          CREATE-RUN-CACHE()



NAME
       create-run-cache -

DESCRIPTION
       You  can  create  a  run  cache to save the task outputs from completed
       tasks in a run for a private workflow. Subsequent  runs  use  the  task
       outputs  from  the cache, rather than computing the task outputs again.
       You specify an Amazon S3 location where HealthOmics  saves  the  cached
       data.  This  data  must  be  immediately accessible (not in an archived
       state).

       For more information, see Creating a run cache in the  AWS  HealthOmics
       User Guide.

       See also: AWS API Documentation

SYNOPSIS
            create-run-cache
          [--cache-behavior <value>]
          --cache-s3-location <value>
          [--description <value>]
          [--name <value>]
          [--request-id <value>]
          [--tags <value>]
          [--cache-bucket-owner-id <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --cache-behavior (string)
          Default  cache behavior for runs that use this cache. Supported val-
          ues are:
              CACHE_ON_FAILURE : Caches task outputs from completed tasks  for
              runs  that  fail.  This  setting is useful if you're debugging a
              workflow that fails after several tasks completed  successfully.
              The  subsequent  run  uses the cache outputs for previously-com-
              pleted tasks if the task definition, inputs,  and  container  in
              ECR are identical to the prior run.

              CACHE_ALWAYS  : Caches task outputs from completed tasks for all
              runs. This setting is useful in development mode, but do not use
              it in a production setting.

          If you don't specify a value, the default behavior is CACHE_ON_FAIL-
          URE. When you start a run that uses this cache, you can override the
          default cache behavior.

          For  more information, see Run cache behavior in the AWS HealthOmics
          User Guide.

          Possible values:

          o CACHE_ON_FAILURE

          o CACHE_ALWAYS

       --cache-s3-location (string)
          Specify the S3 location for storing the cached  task  outputs.  This
          data must be immediately accessible (not in an archived state).

       --description (string)
          Enter a description of the run cache.

       --name (string)
          Enter a user-friendly name for the run cache.

       --request-id (string)
          A  unique request token, to ensure idempotency. If you don't specify
          a token, HealthOmics automatically generates  a  universally  unique
          identifier (UUID) for the request.

       --tags (map)
          Specify one or more tags to associate with this run cache.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cache-bucket-owner-id (string)
          The  AWS  account  ID of the expected owner of the S3 bucket for the
          run cache. If not provided, your account ID is set as the  owner  of
          the bucket.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       arn -> (string)
          Unique resource identifier for the run cache.

       id -> (string)
          Identifier for the run cache.

       status -> (string)
          Run cache status.

       tags -> (map)
          The tags associated with this run cache.

          key -> (string)

          value -> (string)



                                                            CREATE-RUN-CACHE()
