CREATE-ANNOTATION-STORE-VERSION()            CREATE-ANNOTATION-STORE-VERSION()



NAME
       create-annotation-store-version -

DESCRIPTION
       Creates a new version of an annotation store.

       See also: AWS API Documentation

SYNOPSIS
            create-annotation-store-version
          --name <value>
          --version-name <value>
          [--description <value>]
          [--version-options <value>]
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --name (string)
          The  name of an annotation store version from which versions are be-
          ing created.

       --version-name (string)
          The name given to an annotation store version to distinguish it from
          other versions.

       --description (string)
          The description of an annotation store version.

       --version-options (tagged union structure)
          The options for an annotation store version.

          NOTE:
              This  is a Tagged Union structure. Only one of the following top
              level keys can be set: tsvVersionOptions.

          tsvVersionOptions -> (structure)
              File settings for a version of a TSV store.

              annotationType -> (string)
                 The store version's annotation type.

              formatToHeader -> (map)
                 The annotation store version's header key to column name map-
                 ping.

                 key -> (string)

                 value -> (string)

              schema -> (list)
                 The TSV schema for an annotation store version.

                 (map)
                     key -> (string)

                     value -> (string)

       Shorthand Syntax:

          tsvVersionOptions={annotationType=string,formatToHeader={KeyName1=string,KeyName2=string},schema=[{KeyName1=string,KeyName2=string},{KeyName1=string,KeyName2=string}]}

       JSON Syntax:

          {
            "tsvVersionOptions": {
              "annotationType": "GENERIC"|"CHR_POS"|"CHR_POS_REF_ALT"|"CHR_START_END_ONE_BASE"|"CHR_START_END_REF_ALT_ONE_BASE"|"CHR_START_END_ZERO_BASE"|"CHR_START_END_REF_ALT_ZERO_BASE",
              "formatToHeader": {"CHR"|"START"|"END"|"REF"|"ALT"|"POS": "string"
                ...},
              "schema": [
                {"string": "LONG"|"INT"|"STRING"|"FLOAT"|"DOUBLE"|"BOOLEAN"
                  ...}
                ...
              ]
            }
          }

       --tags (map)
          Any tags added to annotation store version.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a new version of an annotation store

       The following create-annotation-store-version  example  creates  a  new
       version of an annotation store.

          aws omics create-annotation-store-version \
              --name my_annotation_store \
              --version-name my_version

       Output:

          {
              "creationTime": "2023-07-21T17:15:49.251040+00:00",
              "id": "3b93cdef69d2",
              "name": "my_annotation_store",
              "reference": {
                  "referenceArn": "arn:aws:omics:us-west-2:555555555555:referenceStore/6505293348/reference/5987565360"
              },
              "status": "CREATING",
              "versionName": "my_version"
          }

       For more information, see Creating new versions of annotation stores in
       the AWS HealthOmics User Guide.

OUTPUT
       id -> (string)
          A generated ID for the annotation store

       versionName -> (string)
          The name given to an annotation store version to distinguish it from
          other versions.

       storeId -> (string)
          The  ID  for  the annotation store from which new versions are being
          created.

       versionOptions -> (tagged union structure)
          The options for an annotation store version.

          NOTE:
              This is a Tagged Union structure. Only one of the following  top
              level keys can be set: tsvVersionOptions.

          tsvVersionOptions -> (structure)
              File settings for a version of a TSV store.

              annotationType -> (string)
                 The store version's annotation type.

              formatToHeader -> (map)
                 The annotation store version's header key to column name map-
                 ping.

                 key -> (string)

                 value -> (string)

              schema -> (list)
                 The TSV schema for an annotation store version.

                 (map)
                     key -> (string)

                     value -> (string)

       name -> (string)
          The name given to an annotation store version to distinguish it from
          other versions.

       status -> (string)
          The status of a annotation store version.

       creationTime -> (timestamp)
          The time stamp for the creation of an annotation store version.



                                             CREATE-ANNOTATION-STORE-VERSION()
