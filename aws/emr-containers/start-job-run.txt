START-JOB-RUN()                                                START-JOB-RUN()



NAME
       start-job-run -

DESCRIPTION
       Starts  a  job  run.  A job run is a unit of work, such as a Spark jar,
       PySpark script, or SparkSQL query, that you submit  to  Amazon  EMR  on
       EKS.

       See also: AWS API Documentation

SYNOPSIS
            start-job-run
          [--name <value>]
          --virtual-cluster-id <value>
          [--client-token <value>]
          [--execution-role-arn <value>]
          [--release-label <value>]
          [--job-driver <value>]
          [--configuration-overrides <value>]
          [--tags <value>]
          [--job-template-id <value>]
          [--job-template-parameters <value>]
          [--retry-policy-configuration <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --name (string)
          The name of the job run.

       --virtual-cluster-id (string)
          The virtual cluster ID for which the job run request is submitted.

       --client-token (string)
          The client idempotency token of the job run request.

       --execution-role-arn (string)
          The execution role ARN for the job run.

       --release-label (string)
          The Amazon EMR release version to use for the job run.

       --job-driver (structure)
          The job driver for the job run.

          sparkSubmitJobDriver -> (structure)
              The job driver parameters specified for spark submit.

              entryPoint -> (string)
                 The entry point of job application.

              entryPointArguments -> (list)
                 The arguments for job application.

                 (string)

              sparkSubmitParameters -> (string)
                 The Spark submit parameters that are used for job runs.

          sparkSqlJobDriver -> (structure)
              The job driver for job type.

              entryPoint -> (string)
                 The SQL file to be executed.

              sparkSqlParameters -> (string)
                 The Spark parameters to be included in the Spark SQL command.

       Shorthand Syntax:

          sparkSubmitJobDriver={entryPoint=string,entryPointArguments=[string,string],sparkSubmitParameters=string},sparkSqlJobDriver={entryPoint=string,sparkSqlParameters=string}

       JSON Syntax:

          {
            "sparkSubmitJobDriver": {
              "entryPoint": "string",
              "entryPointArguments": ["string", ...],
              "sparkSubmitParameters": "string"
            },
            "sparkSqlJobDriver": {
              "entryPoint": "string",
              "sparkSqlParameters": "string"
            }
          }

       --configuration-overrides (structure)
          The configuration overrides for the job run.

          applicationConfiguration -> (list)
              The configurations for the application running by the job run.

              (structure)
                 A  configuration  specification  to be used when provisioning
                 virtual clusters, which can include configurations for appli-
                 cations  and  software bundled with Amazon EMR on EKS. A con-
                 figuration consists of a classification, properties, and  op-
                 tional  nested  configurations. A classification refers to an
                 application-specific configuration file. Properties  are  the
                 settings you want to change in that file.

                 classification -> (string)
                     The classification within a configuration.

                 properties -> (map)
                     A  set  of  properties  specified  within a configuration
                     classification.

                     key -> (string)

                     value -> (string)

                 configurations -> (list)
                     A list of additional configurations  to  apply  within  a
                     configuration object.

                     (structure)
                        A  configuration  specification to be used when provi-
                        sioning virtual clusters, which can include configura-
                        tions  for applications and software bundled with Ama-
                        zon EMR on EKS. A configuration consists of a  classi-
                        fication,  properties,  and optional nested configura-
                        tions. A classification refers to an  application-spe-
                        cific  configuration file. Properties are the settings
                        you want to change in that file.

                        classification -> (string)
                            The classification within a configuration.

                        properties -> (map)
                            A set of properties specified within a  configura-
                            tion classification.

                            key -> (string)

                            value -> (string)

          monitoringConfiguration -> (structure)
              The configurations for monitoring.

              persistentAppUI -> (string)
                 Monitoring configurations for the persistent application UI.

              cloudWatchMonitoringConfiguration -> (structure)
                 Monitoring configurations for CloudWatch.

                 logGroupName -> (string)
                     The name of the log group for log publishing.

                 logStreamNamePrefix -> (string)
                     The specified name prefix for log streams.

              s3MonitoringConfiguration -> (structure)
                 Amazon S3 configuration for monitoring log publishing.

                 logUri -> (string)
                     Amazon S3 destination URI for log publishing.

              containerLogRotationConfiguration -> (structure)
                 Enable or disable container log rotation.

                 rotationSize -> (string)
                     The  file  size  at which to rotate logs. Minimum of 2KB,
                     Maximum of 2GB.

                 maxFilesToKeep -> (integer)
                     The number of files to keep in container after rotation.

       Shorthand Syntax:

          applicationConfiguration=[{classification=string,properties={KeyName1=string,KeyName2=string},( ... recursive ... )},{classification=string,properties={KeyName1=string,KeyName2=string},( ... recursive ... )}],monitoringConfiguration={persistentAppUI=string,cloudWatchMonitoringConfiguration={logGroupName=string,logStreamNamePrefix=string},s3MonitoringConfiguration={logUri=string},containerLogRotationConfiguration={rotationSize=string,maxFilesToKeep=integer}}

       JSON Syntax:

          {
            "applicationConfiguration": [
              {
                "classification": "string",
                "properties": {"string": "string"
                  ...},
                "configurations": [
                  {
                    "classification": "string",
                    "properties": {"string": "string"
                      ...},
                    "configurations":
                  }
                  ...
                ]
              }
              ...
            ],
            "monitoringConfiguration": {
              "persistentAppUI": "ENABLED"|"DISABLED",
              "cloudWatchMonitoringConfiguration": {
                "logGroupName": "string",
                "logStreamNamePrefix": "string"
              },
              "s3MonitoringConfiguration": {
                "logUri": "string"
              },
              "containerLogRotationConfiguration": {
                "rotationSize": "string",
                "maxFilesToKeep": integer
              }
            }
          }

       --tags (map)
          The tags assigned to job runs.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --job-template-id (string)
          The job template ID to be used to start the job run.

       --job-template-parameters (map)
          The values of job template parameters to start a job run.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --retry-policy-configuration (structure)
          The retry policy configuration for the job run.

          maxAttempts -> (integer)
              The maximum number of attempts on the job's driver.

       Shorthand Syntax:

          maxAttempts=integer

       JSON Syntax:

          {
            "maxAttempts": integer
          }

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       id -> (string)
          This output displays the started job run ID.

       name -> (string)
          This output displays the name of the started job run.

       arn -> (string)
          This output lists the ARN of job run.

       virtualClusterId -> (string)
          This  output  displays  the virtual cluster ID for which the job run
          was submitted.



                                                               START-JOB-RUN()
