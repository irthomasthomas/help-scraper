CREATE-WORKFLOW()                                            CREATE-WORKFLOW()



NAME
       create-workflow -

DESCRIPTION
       Allows  you  to create a workflow with specified steps and step details
       the workflow invokes after file transfer completes.  After  creating  a
       workflow,  you  can  associate  the  workflow created with any transfer
       servers by specifying the workflow-details field  in  CreateServer  and
       UpdateServer operations.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-workflow
          [--description <value>]
          --steps <value>
          [--on-exception-steps <value>]
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --description (string)
          A textual description for the workflow.

       --steps (list)
          Specifies  the details for the steps that are in the specified work-
          flow.

          The TYPE specifies which of the following actions is being taken for
          this step.

          o COPY : copy the file to another location

          o CUSTOM : custom step with a lambda target

          o DELETE : delete the file

          o TAG : add a tag to the file

          NOTE:
              Currently, copying and tagging are supported only on S3.

          For  file location, you specify either the S3 bucket and key, or the
          EFS filesystem ID and path.

          (structure)
              The basic building block of a workflow.

              Type -> (string)
                 Currently, the following step types are supported.

                 o COPY : copy the file to another location

                 o CUSTOM : custom step with a lambda target

                 o DELETE : delete the file

                 o TAG : add a tag to the file

              CopyStepDetails -> (structure)
                 Details for a step that performs a file copy.

                 Consists of the following values:

                 o A description

                 o An S3 location for the destination of the file copy.

                 o A flag that indicates whether or not to overwrite an exist-
                   ing file of the same name. The default is FALSE .

                 Name -> (string)
                     The name of the step, used as an identifier.

                 DestinationFileLocation -> (structure)
                     Specifies  the  location  for the file being copied. Only
                     applicable for Copy type  workflow  steps.  Use  ${Trans-
                     fer:username}  in  this field to parametrize the destina-
                     tion prefix by username.

                     S3FileLocation -> (structure)
                        Specifies the details for the S3 file being copied.

                        Bucket -> (string)
                            Specifies the S3 bucket  for  the  customer  input
                            file.

                        Key -> (string)
                            The  name assigned to the file when it was created
                            in S3. You use the object key to retrieve the  ob-
                            ject.

                     EfsFileLocation -> (structure)
                        Reserved for future use.

                        FileSystemId -> (string)
                            The ID of the file system, assigned by Amazon EFS.

                        Path -> (string)
                            The  pathname for the folder being used by a work-
                            flow.

                 OverwriteExisting -> (string)
                     A flag that indicates whether or not to overwrite an  ex-
                     isting file of the same name. The default is FALSE .

                 SourceFileLocation -> (string)
                     Specifies  which  file  to  use  as input to the workflow
                     step: either the output from the previous  step,  or  the
                     originally uploaded file for the workflow.

                     o Enter  ${previous.file} to use the previous file as the
                       input. In this case, this workflow step uses the output
                       file  from the previous workflow step as input. This is
                       the default value.

                     o Enter ${original.file} to use  the  originally-uploaded
                       file location as input for this step.

              CustomStepDetails -> (structure)
                 Details for a step that invokes a lambda function.

                 Consists of the lambda function name, target, and timeout (in
                 seconds).

                 Name -> (string)
                     The name of the step, used as an identifier.

                 Target -> (string)
                     The ARN for the lambda function that is being called.

                 TimeoutSeconds -> (integer)
                     Timeout, in seconds, for the step.

                 SourceFileLocation -> (string)
                     Specifies which file to use  as  input  to  the  workflow
                     step:  either  the  output from the previous step, or the
                     originally uploaded file for the workflow.

                     o Enter ${previous.file} to use the previous file as  the
                       input. In this case, this workflow step uses the output
                       file from the previous workflow step as input. This  is
                       the default value.

                     o Enter  ${original.file}  to use the originally-uploaded
                       file location as input for this step.

              DeleteStepDetails -> (structure)
                 Details for a step that deletes the file.

                 Name -> (string)
                     The name of the step, used as an identifier.

                 SourceFileLocation -> (string)
                     Specifies which file to use  as  input  to  the  workflow
                     step:  either  the  output from the previous step, or the
                     originally uploaded file for the workflow.

                     o Enter ${previous.file} to use the previous file as  the
                       input. In this case, this workflow step uses the output
                       file from the previous workflow step as input. This  is
                       the default value.

                     o Enter  ${original.file}  to use the originally-uploaded
                       file location as input for this step.

              TagStepDetails -> (structure)
                 Details for a step that creates one or more tags.

                 You specify one or more tags: each tag contains  a  key/value
                 pair.

                 Name -> (string)
                     The name of the step, used as an identifier.

                 Tags -> (list)
                     Array that contains from 1 to 10 key/value pairs.

                     (structure)
                        Specifies  the  key-value  pair that are assigned to a
                        file during the execution of a Tagging step.

                        Key -> (string)
                            The name assigned to the tag that you create.

                        Value -> (string)
                            The value that corresponds to the key.

                 SourceFileLocation -> (string)
                     Specifies which file to use  as  input  to  the  workflow
                     step:  either  the  output from the previous step, or the
                     originally uploaded file for the workflow.

                     o Enter ${previous.file} to use the previous file as  the
                       input. In this case, this workflow step uses the output
                       file from the previous workflow step as input. This  is
                       the default value.

                     o Enter  ${original.file}  to use the originally-uploaded
                       file location as input for this step.

       JSON Syntax:

          [
            {
              "Type": "COPY"|"CUSTOM"|"TAG"|"DELETE",
              "CopyStepDetails": {
                "Name": "string",
                "DestinationFileLocation": {
                  "S3FileLocation": {
                    "Bucket": "string",
                    "Key": "string"
                  },
                  "EfsFileLocation": {
                    "FileSystemId": "string",
                    "Path": "string"
                  }
                },
                "OverwriteExisting": "TRUE"|"FALSE",
                "SourceFileLocation": "string"
              },
              "CustomStepDetails": {
                "Name": "string",
                "Target": "string",
                "TimeoutSeconds": integer,
                "SourceFileLocation": "string"
              },
              "DeleteStepDetails": {
                "Name": "string",
                "SourceFileLocation": "string"
              },
              "TagStepDetails": {
                "Name": "string",
                "Tags": [
                  {
                    "Key": "string",
                    "Value": "string"
                  }
                  ...
                ],
                "SourceFileLocation": "string"
              }
            }
            ...
          ]

       --on-exception-steps (list)
          Specifies the steps (actions) to take if errors are encountered dur-
          ing execution of the workflow.

          NOTE:
              For  custom  steps, the lambda function needs to send FAILURE to
              the call back API to kick off the exception steps. Additionally,
              if the lambda does not send SUCCESS before it times out, the ex-
              ception steps are executed.

          (structure)
              The basic building block of a workflow.

              Type -> (string)
                 Currently, the following step types are supported.

                 o COPY : copy the file to another location

                 o CUSTOM : custom step with a lambda target

                 o DELETE : delete the file

                 o TAG : add a tag to the file

              CopyStepDetails -> (structure)
                 Details for a step that performs a file copy.

                 Consists of the following values:

                 o A description

                 o An S3 location for the destination of the file copy.

                 o A flag that indicates whether or not to overwrite an exist-
                   ing file of the same name. The default is FALSE .

                 Name -> (string)
                     The name of the step, used as an identifier.

                 DestinationFileLocation -> (structure)
                     Specifies  the  location  for the file being copied. Only
                     applicable for Copy type  workflow  steps.  Use  ${Trans-
                     fer:username}  in  this field to parametrize the destina-
                     tion prefix by username.

                     S3FileLocation -> (structure)
                        Specifies the details for the S3 file being copied.

                        Bucket -> (string)
                            Specifies the S3 bucket  for  the  customer  input
                            file.

                        Key -> (string)
                            The  name assigned to the file when it was created
                            in S3. You use the object key to retrieve the  ob-
                            ject.

                     EfsFileLocation -> (structure)
                        Reserved for future use.

                        FileSystemId -> (string)
                            The ID of the file system, assigned by Amazon EFS.

                        Path -> (string)
                            The  pathname for the folder being used by a work-
                            flow.

                 OverwriteExisting -> (string)
                     A flag that indicates whether or not to overwrite an  ex-
                     isting file of the same name. The default is FALSE .

                 SourceFileLocation -> (string)
                     Specifies  which  file  to  use  as input to the workflow
                     step: either the output from the previous  step,  or  the
                     originally uploaded file for the workflow.

                     o Enter  ${previous.file} to use the previous file as the
                       input. In this case, this workflow step uses the output
                       file  from the previous workflow step as input. This is
                       the default value.

                     o Enter ${original.file} to use  the  originally-uploaded
                       file location as input for this step.

              CustomStepDetails -> (structure)
                 Details for a step that invokes a lambda function.

                 Consists of the lambda function name, target, and timeout (in
                 seconds).

                 Name -> (string)
                     The name of the step, used as an identifier.

                 Target -> (string)
                     The ARN for the lambda function that is being called.

                 TimeoutSeconds -> (integer)
                     Timeout, in seconds, for the step.

                 SourceFileLocation -> (string)
                     Specifies which file to use  as  input  to  the  workflow
                     step:  either  the  output from the previous step, or the
                     originally uploaded file for the workflow.

                     o Enter ${previous.file} to use the previous file as  the
                       input. In this case, this workflow step uses the output
                       file from the previous workflow step as input. This  is
                       the default value.

                     o Enter  ${original.file}  to use the originally-uploaded
                       file location as input for this step.

              DeleteStepDetails -> (structure)
                 Details for a step that deletes the file.

                 Name -> (string)
                     The name of the step, used as an identifier.

                 SourceFileLocation -> (string)
                     Specifies which file to use  as  input  to  the  workflow
                     step:  either  the  output from the previous step, or the
                     originally uploaded file for the workflow.

                     o Enter ${previous.file} to use the previous file as  the
                       input. In this case, this workflow step uses the output
                       file from the previous workflow step as input. This  is
                       the default value.

                     o Enter  ${original.file}  to use the originally-uploaded
                       file location as input for this step.

              TagStepDetails -> (structure)
                 Details for a step that creates one or more tags.

                 You specify one or more tags: each tag contains  a  key/value
                 pair.

                 Name -> (string)
                     The name of the step, used as an identifier.

                 Tags -> (list)
                     Array that contains from 1 to 10 key/value pairs.

                     (structure)
                        Specifies  the  key-value  pair that are assigned to a
                        file during the execution of a Tagging step.

                        Key -> (string)
                            The name assigned to the tag that you create.

                        Value -> (string)
                            The value that corresponds to the key.

                 SourceFileLocation -> (string)
                     Specifies which file to use  as  input  to  the  workflow
                     step:  either  the  output from the previous step, or the
                     originally uploaded file for the workflow.

                     o Enter ${previous.file} to use the previous file as  the
                       input. In this case, this workflow step uses the output
                       file from the previous workflow step as input. This  is
                       the default value.

                     o Enter  ${original.file}  to use the originally-uploaded
                       file location as input for this step.

       JSON Syntax:

          [
            {
              "Type": "COPY"|"CUSTOM"|"TAG"|"DELETE",
              "CopyStepDetails": {
                "Name": "string",
                "DestinationFileLocation": {
                  "S3FileLocation": {
                    "Bucket": "string",
                    "Key": "string"
                  },
                  "EfsFileLocation": {
                    "FileSystemId": "string",
                    "Path": "string"
                  }
                },
                "OverwriteExisting": "TRUE"|"FALSE",
                "SourceFileLocation": "string"
              },
              "CustomStepDetails": {
                "Name": "string",
                "Target": "string",
                "TimeoutSeconds": integer,
                "SourceFileLocation": "string"
              },
              "DeleteStepDetails": {
                "Name": "string",
                "SourceFileLocation": "string"
              },
              "TagStepDetails": {
                "Name": "string",
                "Tags": [
                  {
                    "Key": "string",
                    "Value": "string"
                  }
                  ...
                ],
                "SourceFileLocation": "string"
              }
            }
            ...
          ]

       --tags (list)
          Key-value pairs that can be used to group and search for  workflows.
          Tags are metadata attached to workflows for any purpose.

          (structure)
              Creates a key-value pair for a specific resource. Tags are meta-
              data that you can use to search for and  group  a  resource  for
              various  purposes.  You  can  apply  tags to servers, users, and
              roles. A tag key can take more than one value. For  example,  to
              group  servers  for  accounting purposes, you might create a tag
              called Group and assign the values Research  and  Accounting  to
              that group.

              Key -> (string)
                 The name assigned to the tag that you create.

              Value -> (string)
                 Contains one or more values that you assigned to the key name
                 you create.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       WorkflowId -> (string)
          A unique identifier for the workflow.



                                                             CREATE-WORKFLOW()
