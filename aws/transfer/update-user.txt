UPDATE-USER()                                                    UPDATE-USER()



NAME
       update-user -

DESCRIPTION
       Assigns new properties to a user. Parameters you pass modify any or all
       of the following: the home directory, role, and policy for the UserName
       and ServerId you specify.

       The  response  returns  the  ServerId  and the UserName for the updated
       user.

       See also: AWS API Documentation

SYNOPSIS
            update-user
          [--home-directory <value>]
          [--home-directory-type <value>]
          [--home-directory-mappings <value>]
          [--policy <value>]
          [--posix-profile <value>]
          [--role <value>]
          --server-id <value>
          --user-name <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --home-directory (string)
          The landing directory (folder) for a user when they log  in  to  the
          server using the client.

          A HomeDirectory example is /bucket_name/home/mydirectory .

       --home-directory-type (string)
          The  type  of  landing  directory (folder) that you want your users'
          home directory to be when they log in to the server. If you  set  it
          to  PATH  ,  the  user will see the absolute Amazon S3 bucket or EFS
          paths as is in their file transfer protocol clients. If you  set  it
          LOGICAL  , you need to provide mappings in the HomeDirectoryMappings
          for how you want to make Amazon S3 or Amazon EFS  paths  visible  to
          your users.

          Possible values:

          o PATH

          o LOGICAL

       --home-directory-mappings (list)
          Logical directory mappings that specify what Amazon S3 or Amazon EFS
          paths and keys should be visible to your user and how  you  want  to
          make them visible. You must specify the Entry and Target pair, where
          Entry shows how the path is made visible and Target  is  the  actual
          Amazon  S3  or  Amazon EFS path. If you only specify a target, it is
          displayed as is. You also must ensure that your Identity and  Access
          Management  (IAM)  role  provides  access  to paths in Target . This
          value can be set only when HomeDirectoryType is set to LOGICAL .

          The following is an Entry and Target pair example.
              [ { "Entry": "/directory1",  "Target":  "/bucket_name/home/mydi-
              rectory" } ]

          In  most cases, you can use this value instead of the session policy
          to lock down your user to the designated home directory ("chroot ").
          To  do  this, you can set Entry to '/' and set Target to the HomeDi-
          rectory parameter value.

          The following is an Entry and Target pair example for chroot .
              [ { "Entry": "/", "Target": "/bucket_name/home/mydirectory" } ]

          (structure)
              Represents an object that contains entries and targets for Home-
              DirectoryMappings .

              The following is an Entry and Target pair example for chroot .
                 [ { "Entry": "/", "Target": "/bucket_name/home/mydirectory" }
                 ]

              Entry -> (string)
                 Represents an entry for HomeDirectoryMappings .

              Target -> (string)
                 Represents the map target that  is  used  in  a  HomeDirecto-
                 rymapEntry .

       Shorthand Syntax:

          Entry=string,Target=string ...

       JSON Syntax:

          [
            {
              "Entry": "string",
              "Target": "string"
            }
            ...
          ]

       --policy (string)
          A session policy for your user so that you can use the same Identity
          and Access Management (IAM) role across multiple users. This  policy
          scopes  down  a user's access to portions of their Amazon S3 bucket.
          Variables that you can  use  inside  this  policy  include  ${Trans-
          fer:UserName}  ,  ${Transfer:HomeDirectory}  ,  and ${Transfer:Home-
          Bucket} .

          NOTE:
              This policy applies only when the domain of ServerId  is  Amazon
              S3. Amazon EFS does not use session policies.

              For  session  policies,  Transfer  Family stores the policy as a
              JSON blob, instead of the Amazon Resource Name (ARN) of the pol-
              icy.  You save the policy as a JSON blob and pass it in the Pol-
              icy argument.

              For an example of a session policy, see Creating a session  pol-
              icy .

              For  more information, see AssumeRole in the Amazon Web Services
              Security Token Service API Reference .

       --posix-profile (structure)
          Specifies the full POSIX identity, including user ID (Uid  ),  group
          ID  (Gid ), and any secondary groups IDs (SecondaryGids ), that con-
          trols your users' access to your Amazon Elastic File Systems (Amazon
          EFS). The POSIX permissions that are set on files and directories in
          your file system determines the level of access your users get  when
          transferring files into and out of your Amazon EFS file systems.

          Uid -> (long)
              The POSIX user ID used for all EFS operations by this user.

          Gid -> (long)
              The POSIX group ID used for all EFS operations by this user.

          SecondaryGids -> (list)
              The  secondary  POSIX  group  IDs used for all EFS operations by
              this user.

              (long)

       Shorthand Syntax:

          Uid=long,Gid=long,SecondaryGids=long,long

       JSON Syntax:

          {
            "Uid": long,
            "Gid": long,
            "SecondaryGids": [long, ...]
          }

       --role (string)
          The Amazon Resource Name (ARN) of the Identity and Access Management
          (IAM) role that controls your users' access to your Amazon S3 bucket
          or Amazon EFS file system. The policies attached to this role deter-
          mine  the  level  of access that you want to provide your users when
          transferring files into and out of your Amazon S3 bucket  or  Amazon
          EFS  file system. The IAM role should also contain a trust relation-
          ship that allows the server to access your resources when  servicing
          your users' transfer requests.

       --server-id (string)
          A system-assigned unique identifier for a Transfer Family server in-
          stance that the user is assigned to.

       --user-name (string)
          A unique string that identifies a user  and  is  associated  with  a
          server as specified by the ServerId . This user name must be a mini-
          mum of 3 and a maximum of 100 characters  long.  The  following  are
          valid  characters: a-z, A-Z, 0-9, underscore '_', hyphen '-', period
          '.', and at sign '@'. The user name can't start with a  hyphen,  pe-
          riod, or at sign.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       ServerId -> (string)
          A system-assigned unique identifier for a Transfer Family server in-
          stance that the account is assigned to.

       UserName -> (string)
          The  unique  identifier  for a user that is assigned to a server in-
          stance that was specified in the request.



                                                                 UPDATE-USER()
