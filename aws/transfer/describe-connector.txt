DESCRIBE-CONNECTOR()                                      DESCRIBE-CONNECTOR()



NAME
       describe-connector -

DESCRIPTION
       Describes the connector that's identified by the ConnectorId.

       See also: AWS API Documentation

SYNOPSIS
            describe-connector
          --connector-id <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --connector-id (string)
          The unique identifier for the connector.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       Connector -> (structure)
          The structure that contains the details of the connector.

          Arn -> (string)
              The unique Amazon Resource Name (ARN) for the connector.

          ConnectorId -> (string)
              The unique identifier for the connector.

          Url -> (string)
              The URL of the partner's AS2 or SFTP endpoint.

          As2Config -> (structure)
              A structure that contains the parameters for  an  AS2  connector
              object.

              LocalProfileId -> (string)
                 A unique identifier for the AS2 local profile.

              PartnerProfileId -> (string)
                 A  unique  identifier for the partner profile for the connec-
                 tor.

              MessageSubject -> (string)
                 Used as the Subject HTTP header  attribute  in  AS2  messages
                 that are being sent with the connector.

              Compression -> (string)
                 Specifies whether the AS2 file is compressed.

              EncryptionAlgorithm -> (string)
                 The algorithm that is used to encrypt the file.

                 NOTE:
                     You  can  only specify NONE if the URL for your connector
                     uses HTTPS. This ensures that no traffic is sent in clear
                     text.

              SigningAlgorithm -> (string)
                 The algorithm that is used to sign the AS2 messages sent with
                 the connector.

              MdnSigningAlgorithm -> (string)
                 The signing algorithm for the MDN response.

                 NOTE:
                     If set to DEFAULT (or not set  at  all),  the  value  for
                     SigningAlgorithm is used.

              MdnResponse -> (string)
                 Used for outbound requests (from an Transfer Family server to
                 a partner AS2 server) to determine whether  the  partner  re-
                 sponse  for transfers is synchronous or asynchronous. Specify
                 either of the following values:

                 o SYNC : The system expects a synchronous MDN response,  con-
                   firming  that  the  file  was  transferred successfully (or
                   not).

                 o NONE : Specifies that no MDN response is required.

              BasicAuthSecretId -> (string)
                 Provides Basic authentication support to the  AS2  Connectors
                 API.  To  use Basic authentication, you must provide the name
                 or Amazon Resource Name (ARN) of a secret in Secrets Manager.

                 The default value for this parameter is null  ,  which  indi-
                 cates  that  Basic authentication is not enabled for the con-
                 nector.

                 If the connector should use Basic authentication, the  secret
                 needs to be in the following format:
                     { "Username": "user-name", "Password": "user-password" }

                 Replace  user-name and user-password with the credentials for
                 the actual user that is being authenticated.

                 Note the following:

                 o You are storing these credentials in Secrets  Manager,  not
                   passing them directly into this API.

                 o If  you  are using the API, SDKs, or CloudFormation to con-
                   figure your connector, then you must create the secret  be-
                   fore  you  can enable Basic authentication. However, if you
                   are using the Amazon Web Services management  console,  you
                   can have the system create the secret for you.

                 If  you  have  previously  enabled Basic authentication for a
                 connector, you can disable it by  using  the  UpdateConnector
                 API  call. For example, if you are using the CLI, you can run
                 the following command to remove Basic authentication:
                     update-connector      --connector-id      my-connector-id
                     --as2-config 'BasicAuthSecretId=""'

          AccessRole -> (string)
              Connectors  are  used to send files using either the AS2 or SFTP
              protocol. For the access role, provide the Amazon Resource  Name
              (ARN) of the Identity and Access Management role to use.
                 For AS2 connectors

              With  AS2,  you  can send files by calling StartFileTransfer and
              specifying the  file  paths  in  the  request  parameter,  Send-
              FilePaths  . We use the files parent directory (for example, for
              --send-file-paths /bucket/dir/file.txt  ,  parent  directory  is
              /bucket/dir/  )  to  temporarily  store  a processed AS2 message
              file, store the MDN when we receive them from the  partner,  and
              write  a  final  JSON  file  containing relevant metadata of the
              transmission. So, the AccessRole needs to provide read and write
              access  to the parent directory of the file location used in the
              StartFileTransfer request. Additionally,  you  need  to  provide
              read  and write access to the parent directory of the files that
              you intend to send with StartFileTransfer .

              If you are using Basic authentication for  your  AS2  connector,
              the  access role requires the secretsmanager:GetSecretValue per-
              mission for the secret. If the secret is encrypted using a  cus-
              tomer-managed key instead of the Amazon Web Services managed key
              in Secrets Manager, then the role  also  needs  the  kms:Decrypt
              permission for that key.
                 For SFTP connectors

              Make sure that the access role provides read and write access to
              the parent directory of the file location  that's  used  in  the
              StartFileTransfer request. Additionally, make sure that the role
              provides  secretsmanager:GetSecretValue  permission  to  Secrets
              Manager.

          LoggingRole -> (string)
              The  Amazon  Resource Name (ARN) of the Identity and Access Man-
              agement (IAM) role that allows a connector to turn on CloudWatch
              logging  for  Amazon S3 events. When set, you can view connector
              activity in your CloudWatch logs.

          Tags -> (list)
              Key-value pairs that can be used to group and search for connec-
              tors.

              (structure)
                 Creates  a  key-value  pair for a specific resource. Tags are
                 metadata that you can use to search for and group a  resource
                 for  various  purposes. You can apply tags to servers, users,
                 and roles. A tag key can take more than one value. For  exam-
                 ple, to group servers for accounting purposes, you might cre-
                 ate a tag called Group and assign the values Research and Ac-
                 counting to that group.

                 Key -> (string)
                     The name assigned to the tag that you create.

                 Value -> (string)
                     Contains  one or more values that you assigned to the key
                     name you create.

          SftpConfig -> (structure)
              A structure that contains the parameters for an  SFTP  connector
              object.

              UserSecretId -> (string)
                 The identifier for the secret (in Amazon Web Services Secrets
                 Manager) that contains the SFTP user's private key, password,
                 or  both.  The  identifier  must  be the Amazon Resource Name
                 (ARN) of the secret.

              TrustedHostKeys -> (list)
                 The public portion of the host key, or keys, that are used to
                 identify the external server to which you are connecting. You
                 can use the ssh-keyscan command against the  SFTP  server  to
                 retrieve the necessary key.

                 The  three  standard  SSH public key format elements are <key
                 type> , <body base64> , and an optional <comment> , with spa-
                 ces  between  each  element.  Specify only the <key type> and
                 <body base64> : do not enter the  <comment>  portion  of  the
                 key.

                 For  the  trusted  host  key, Transfer Family accepts RSA and
                 ECDSA keys.

                 o For RSA keys, the <key type> string is ssh-rsa .

                 o For  ECDSA  keys,  the  <key   type>   string   is   either
                   ecdsa-sha2-nistp256     ,    ecdsa-sha2-nistp384    ,    or
                   ecdsa-sha2-nistp521 , depending on the size of the key  you
                   generated.

                 (string)

          ServiceManagedEgressIpAddresses -> (list)
              The  list of egress IP addresses of this connector. These IP ad-
              dresses are assigned automatically when you create  the  connec-
              tor.

              (string)



                                                          DESCRIBE-CONNECTOR()
