BATCH-UPDATE-USER()                                        BATCH-UPDATE-USER()



NAME
       batch-update-user -

DESCRIPTION
       Updates user details within the  UpdateUserRequestItem object for up to
       20 users for the specified Amazon Chime account.  Currently,  only  Li-
       censeType updates are supported for this action.

       See also: AWS API Documentation

SYNOPSIS
            batch-update-user
          --account-id <value>
          --update-user-request-items <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --account-id (string)
          The Amazon Chime account ID.

       --update-user-request-items (list)
          The request containing the user IDs and details to update.

          (structure)
              The user ID and user fields to update, used with the  BatchUpda-
              teUser action.

              UserId -> (string)
                 The user ID.

              LicenseType -> (string)
                 The user license type.

              UserType -> (string)
                 The user type.

              AlexaForBusinessMetadata -> (structure)
                 The Alexa for Business metadata.

                 IsAlexaForBusinessEnabled -> (boolean)
                     Starts or stops Alexa for Business.

                 AlexaForBusinessRoomArn -> (string)
                     The ARN of the room resource.

       Shorthand Syntax:

          UserId=string,LicenseType=string,UserType=string,AlexaForBusinessMetadata={IsAlexaForBusinessEnabled=boolean,AlexaForBusinessRoomArn=string} ...

       JSON Syntax:

          [
            {
              "UserId": "string",
              "LicenseType": "Basic"|"Plus"|"Pro"|"ProTrial",
              "UserType": "PrivateUser"|"SharedDevice",
              "AlexaForBusinessMetadata": {
                "IsAlexaForBusinessEnabled": true|false,
                "AlexaForBusinessRoomArn": "string"
              }
            }
            ...
          ]

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To update multiple users in a single command

       The  following  batch-update-user  example  updates the LicenseType for
       each of the listed users in the specified Amazon Chime account.

          aws chime batch-update-user \
              --account-id a1b2c3d4-5678-90ab-cdef-11111EXAMPLE
              --update-user-request-items "UserId=a1b2c3d4-5678-90ab-cdef-22222EXAMPLE,LicenseType=Basic" "UserId=a1b2c3d4-5678-90ab-cdef-33333EXAMPLE,LicenseType=Basic"

       Output:

          {
              "UserErrors": []
          }

OUTPUT
       UserErrors -> (list)
          If the  BatchUpdateUser action fails for one or more of the user IDs
          in the request, a list of the user IDs is returned, along with error
          codes and error messages.

          (structure)
              The list of errors returned when errors are  encountered  during
              the   BatchSuspendUser  ,   BatchUnsuspendUser  , or  BatchUpda-
              teUser actions. This includes user IDs, error codes,  and  error
              messages.

              UserId -> (string)
                 The user ID for which the action failed.

              ErrorCode -> (string)
                 The error code.

              ErrorMessage -> (string)
                 The error message.



                                                           BATCH-UPDATE-USER()
