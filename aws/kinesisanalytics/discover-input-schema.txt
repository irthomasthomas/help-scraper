DISCOVER-INPUT-SCHEMA()                                DISCOVER-INPUT-SCHEMA()



NAME
       discover-input-schema -

DESCRIPTION
       NOTE:
          This  documentation is for version 1 of the Amazon Kinesis Data Ana-
          lytics API, which only supports SQL applications. Version 2  of  the
          API  supports  SQL and Java applications. For more information about
          version 2, see Amazon Kinesis Data Analytics API V2 Documentation .

       Infers a schema by evaluating sample records on the specified streaming
       source  (Amazon  Kinesis  stream  or  Amazon  Kinesis Firehose delivery
       stream) or S3 object. In the response, the operation  returns  the  in-
       ferred  schema  and  also the sample records that the operation used to
       infer the schema.

       You can use the inferred schema when configuring a streaming source for
       your  application. For conceptual information, see Configuring Applica-
       tion Input . Note that when you create an application using the  Amazon
       Kinesis  Analytics  console, the console uses this operation to infer a
       schema and show it in the console user interface.

       This operation  requires  permissions  to  perform  the  kinesisanalyt-
       ics:DiscoverInputSchema action.

       See also: AWS API Documentation

SYNOPSIS
            discover-input-schema
          [--resource-arn <value>]
          [--role-arn <value>]
          [--input-starting-position-configuration <value>]
          [--s3-configuration <value>]
          [--input-processing-configuration <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --resource-arn (string)
          Amazon Resource Name (ARN) of the streaming source.

       --role-arn (string)
          ARN  of the IAM role that Amazon Kinesis Analytics can assume to ac-
          cess the stream on your behalf.

       --input-starting-position-configuration (structure)
          Point at which you want Amazon Kinesis Analytics  to  start  reading
          records from the specified streaming source discovery purposes.

          InputStartingPosition -> (string)
              The starting position on the stream.

              o NOW  -  Start reading just after the most recent record in the
                stream, start at the request time stamp that the customer  is-
                sued.

              o TRIM_HORIZON  -  Start reading at the last untrimmed record in
                the stream, which  is  the  oldest  record  available  in  the
                stream.  This  option  is  not available for an Amazon Kinesis
                Firehose delivery stream.

              o LAST_STOPPED_POINT - Resume reading from where the application
                last stopped reading.

       Shorthand Syntax:

          InputStartingPosition=string

       JSON Syntax:

          {
            "InputStartingPosition": "NOW"|"TRIM_HORIZON"|"LAST_STOPPED_POINT"
          }

       --s3-configuration (structure)
          Specify  this  parameter to discover a schema from data in an Amazon
          S3 object.

          RoleARN -> (string)
              IAM ARN of the role used to access the data.

          BucketARN -> (string)
              ARN of the S3 bucket that contains the data.

          FileKey -> (string)
              The name of the object that contains the data.

       Shorthand Syntax:

          RoleARN=string,BucketARN=string,FileKey=string

       JSON Syntax:

          {
            "RoleARN": "string",
            "BucketARN": "string",
            "FileKey": "string"
          }

       --input-processing-configuration (structure)
          The InputProcessingConfiguration to use to  preprocess  the  records
          before discovering the schema of the records.

          InputLambdaProcessor -> (structure)
              The  InputLambdaProcessor that is used to preprocess the records
              in the stream before being processed by your application code.

              ResourceARN -> (string)
                 The ARN of the AWS Lambda function that operates  on  records
                 in the stream.

                 NOTE:
                     To specify an earlier version of the Lambda function than
                     the latest, include the Lambda function  version  in  the
                     Lambda  function  ARN.  For more information about Lambda
                     ARNs, see Example ARNs: AWS Lambda

              RoleARN -> (string)
                 The ARN of the IAM role that is used to access the AWS Lambda
                 function.

       Shorthand Syntax:

          InputLambdaProcessor={ResourceARN=string,RoleARN=string}

       JSON Syntax:

          {
            "InputLambdaProcessor": {
              "ResourceARN": "string",
              "RoleARN": "string"
            }
          }

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       InputSchema -> (structure)
          Schema inferred from the streaming source. It identifies the  format
          of  the  data in the streaming source and how each data element maps
          to corresponding columns in the in-application stream that  you  can
          create.

          RecordFormat -> (structure)
              Specifies the format of the records on the streaming source.

              RecordFormatType -> (string)
                 The type of record format.

              MappingParameters -> (structure)
                 When configuring application input at the time of creating or
                 updating an application, provides additional mapping informa-
                 tion  specific  to  the  record format (such as JSON, CSV, or
                 record fields delimited by some delimiter) on  the  streaming
                 source.

                 JSONMappingParameters -> (structure)
                     Provides  additional mapping information when JSON is the
                     record format on the streaming source.

                     RecordRowPath -> (string)
                        Path  to  the  top-level  parent  that  contains   the
                        records.

                 CSVMappingParameters -> (structure)
                     Provides  additional  mapping information when the record
                     format uses delimiters (for example, CSV).

                     RecordRowDelimiter -> (string)
                        Row delimiter. For example, in a CSV  format,  'n'  is
                        the typical row delimiter.

                     RecordColumnDelimiter -> (string)
                        Column  delimiter.  For  example,  in  a CSV format, a
                        comma (",") is the typical column delimiter.

          RecordEncoding -> (string)
              Specifies the encoding of the records in the  streaming  source.
              For example, UTF-8.

          RecordColumns -> (list)
              A list of RecordColumn objects.

              (structure)
                 Describes  the  mapping of each data element in the streaming
                 source to the  corresponding  column  in  the  in-application
                 stream.

                 Also  used  to  describe  the  format  of  the reference data
                 source.

                 Name -> (string)
                     Name of the column created in  the  in-application  input
                     stream or reference table.

                 Mapping -> (string)
                     Reference  to  the data element in the streaming input or
                     the reference data source. This element  is  required  if
                     the RecordFormatType is JSON .

                 SqlType -> (string)
                     Type of column created in the in-application input stream
                     or reference table.

       ParsedInputRecords -> (list)
          An array of elements, where each element corresponds to a row  in  a
          stream record (a stream record can have more than one row).

          (list)
              (string)

       ProcessedInputRecords -> (list)
          Stream  data that was modified by the processor specified in the In-
          putProcessingConfiguration parameter.

          (string)

       RawInputRecords -> (list)
          Raw stream data that was sampled to infer the schema.

          (string)



                                                       DISCOVER-INPUT-SCHEMA()
