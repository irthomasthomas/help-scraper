UPLOAD-PART-COPY()                                          UPLOAD-PART-COPY()



NAME
       upload-part-copy -

DESCRIPTION
       Uploads  a part by copying data from an existing object as data source.
       To  specify   the   data   source,   you   add   the   request   header
       x-amz-copy-source in your request. To specify a byte range, you add the
       request header x-amz-copy-source-range in your request.

       For information about maximum and minimum part sizes and  other  multi-
       part  upload  specifications, see Multipart upload limits in the Amazon
       S3 User Guide .

       NOTE:
          Instead of copying data from an existing object as  part  data,  you
          might  use  the UploadPart action to upload new data as a part of an
          object in your request.

       You must initiate a multipart upload before you can upload any part. In
       response  to  your initiate request, Amazon S3 returns the upload ID, a
       unique identifier that you must include in your upload part request.

       For conceptual information about multipart uploads, see  Uploading  Ob-
       jects Using Multipart Upload in the Amazon S3 User Guide . For informa-
       tion about copying objects using a single atomic action vs. a multipart
       upload, see Operations on Objects in the Amazon S3 User Guide .

       NOTE:
              Directory  buckets  -  For  directory buckets, you must make re-
              quests for this API operation to the Zonal endpoint. These  end-
              points support virtual-hosted-style requests in the format
              ``
              https://bucket_name    .s3express-az_id    .*region*    .amazon-
              aws.com/key-name `` . Path-style requests are not supported. For
              more information, see Regional and Zonal endpoints in the Amazon
              S3 User Guide .

              System Message: WARNING/2 (<string>:, line 48)
                     Inline literal start-string without end-string.

          Authentication and authorization

       All UploadPartCopy requests must be authenticated and signed  by  using
       IAM  credentials (access key ID and secret access key for the IAM iden-
       tities).   All   headers   with   the    x-amz-    prefix,    including
       x-amz-copy-source  , must be signed. For more information, see REST Au-
       thentication .
          Directory buckets - You must use IAM credentials to authenticate and
          authorize  your  access to the UploadPartCopy API operation, instead
          of using the temporary security credentials through  the  CreateSes-
          sion API operation.

       Amazon  Web  Services CLI or SDKs handles authentication and authoriza-
       tion on your behalf.
          Permissions

       You must have READ access to the source object and WRITE access to  the
       destination bucket.

       o General purpose bucket permissions - You must have the permissions in
         a policy based on the bucket types of your source bucket and destina-
         tion bucket in an UploadPartCopy operation.

         o If  the source object is in a general purpose bucket, you must have
           the ** s3:GetObject ** permission to read the source object that is
           being copied.

         o If  the  destination  bucket  is a general purpose bucket, you must
           have the ** s3:PutObject ** permission to write the object copy  to
           the destination bucket.

         o To  perform a multipart upload with encryption using an Key Manage-
           ment Service key, the requester must have permission to the kms:De-
           crypt  and  kms:GenerateDataKey  actions  on the key. The requester
           must also have permissions for the kms:GenerateDataKey  action  for
           the  CreateMultipartUpload  API.  Then, the requester needs permis-
           sions for the kms:Decrypt action on the UploadPart and  UploadPart-
           Copy  APIs.  These  permissions are required because Amazon S3 must
           decrypt and read data from the encrypted file parts before it  com-
           pletes the multipart upload. For more information about KMS permis-
           sions, see Protecting data using server-side encryption with KMS in
           the  Amazon  S3  User Guide . For information about the permissions
           required to use the multipart upload API, see Multipart upload  and
           permissions  and Multipart upload API and permissions in the Amazon
           S3 User Guide .

       o Directory bucket permissions - You must have permissions in a  bucket
         policy or an IAM identity-based policy based on the source and desti-
         nation bucket types in an UploadPartCopy operation.

         o If the source object that you  want  to  copy  is  in  a  directory
           bucket,  you must have the ** s3express:CreateSession ** permission
           in the Action element of a policy to read the object.  By  default,
           the  session  is in the ReadWrite mode. If you want to restrict the
           access, you can explicitly set the s3express:SessionMode  condition
           key to ReadOnly on the copy source bucket.

         o If the copy destination is a directory bucket, you must have the **
           s3express:CreateSession ** permission in the Action  element  of  a
           policy  to  write the object to the destination. The s3express:Ses-
           sionMode condition key cannot be set to ReadOnly on the copy desti-
           nation.

       If  the  object  is  encrypted  with  SSE-KMS,  you  must also have the
       kms:GenerateDataKey and kms:Decrypt permissions in  IAM  identity-based
       policies and KMS key policies for the KMS key.

       For  example  policies,  see Example bucket policies for S3 Express One
       Zone and Amazon Web Services Identity and Access Management (IAM) iden-
       tity-based policies for S3 Express One Zone in the Amazon S3 User Guide
       .
          Encryption

       o General purpose buckets - For information about using server-side en-
         cryption  with customer-provided encryption keys with the UploadPart-
         Copy operation, see CopyObject and UploadPart .

       o Directory buckets - For directory buckets, there are  only  two  sup-
         ported  options  for  server-side  encryption: server-side encryption
         with Amazon S3 managed keys (SSE-S3) (AES256 )  and  server-side  en-
         cryption  with  KMS  keys (SSE-KMS) (aws:kms ). For more information,
         see Protecting data with server-side encryption in the Amazon S3 User
         Guide .

       NOTE:
              For  directory buckets, when you perform a CreateMultipartUpload
              operation and an UploadPartCopy operation, the  request  headers
              you  provide in the CreateMultipartUpload request must match the
              default encryption configuration of the destination bucket.

          S3 Bucket Keys aren't supported, when you copy SSE-KMS encrypted ob-
          jects from general purpose buckets to directory buckets, from direc-
          tory buckets to general purpose buckets, or between directory  buck-
          ets,  through  UploadPartCopy . In this case, Amazon S3 makes a call
          to KMS every time a copy request is made for a KMS-encrypted object.
              Special errors

       o Error Code: NoSuchUpload

         o Description: The specified multipart upload does not exist. The up-
           load  ID  might be invalid, or the multipart upload might have been
           aborted or completed.

         o HTTP Status Code: 404 Not Found

       o Error Code: InvalidRequest

         o Description: The specified  copy  source  is  not  supported  as  a
           byte-range copy source.

         o HTTP Status Code: 400 Bad Request

         HTTP Host header syntax
          Directory  buckets  -  The HTTP Host header syntax is `` Bucket_name
          .s3express-az_id .*region* .amazonaws.com`` .

       The following operations are related to UploadPartCopy :

       o CreateMultipartUpload

       o UploadPart

       o CompleteMultipartUpload

       o AbortMultipartUpload

       o ListParts

       o ListMultipartUploads

       See also: AWS API Documentation

SYNOPSIS
            upload-part-copy
          --bucket <value>
          --copy-source <value>
          [--copy-source-if-match <value>]
          [--copy-source-if-modified-since <value>]
          [--copy-source-if-none-match <value>]
          [--copy-source-if-unmodified-since <value>]
          [--copy-source-range <value>]
          --key <value>
          --part-number <value>
          --upload-id <value>
          [--sse-customer-algorithm <value>]
          [--sse-customer-key <value>]
          [--sse-customer-key-md5 <value>]
          [--copy-source-sse-customer-algorithm <value>]
          [--copy-source-sse-customer-key <value>]
          [--copy-source-sse-customer-key-md5 <value>]
          [--request-payer <value>]
          [--expected-bucket-owner <value>]
          [--expected-source-bucket-owner <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --bucket (string)
          The bucket name.
              Directory buckets - When you use this operation with a directory
              bucket, you must use virtual-hosted-style requests in the format
              `` Bucket_name  .s3express-az_id  .*region*  .amazonaws.com``  .
              Path-style  requests  are  not supported. Directory bucket names
              must be unique in the chosen  Availability  Zone.  Bucket  names
              must follow the format `` bucket_base_name --az-id --x-s3`` (for
              example, `` DOC-EXAMPLE-BUCKET --usw2-az1 --x-s3`` ). For infor-
              mation  about  bucket  naming restrictions, see Directory bucket
              naming rules in the Amazon S3 User Guide .

              Access points - When you use this action with an  access  point,
              you  must  provide the alias of the access point in place of the
              bucket name or specify the access point ARN. When using the  ac-
              cess  point  ARN,  you  must direct requests to the access point
              hostname. The access point hostname takes the form  AccessPoint-
              Name  -AccountId  .s3-accesspoint.*Region*  .amazonaws.com. When
              using this action with an access point through  the  Amazon  Web
              Services  SDKs, you provide the access point ARN in place of the
              bucket name. For more information about access point  ARNs,  see
              Using access points in the Amazon S3 User Guide .

          NOTE:
                 Access  points  and  Object Lambda access points are not sup-
                 ported by directory buckets.

              S3 on Outposts - When you use this action with Amazon S3 on Out-
              posts,  you must direct requests to the S3 on Outposts hostname.
              The S3 on Outposts hostname takes the  form  ``  AccessPointName
              -AccountId .*outpostID* .s3-outposts.*Region* .amazonaws.com`` .
              When you use this action with S3 on Outposts through the  Amazon
              Web  Services SDKs, you provide the Outposts access point ARN in
              place of the bucket name. For more information about S3 on  Out-
              posts  ARNs,  see  What is S3 on Outposts? in the Amazon S3 User
              Guide .

       --copy-source (string)
          Specifies the source object for the copy operation. You specify  the
          value in one of two formats, depending on whether you want to access
          the source object through an access point :

          o For objects not accessed through an access point, specify the name
            of  the source bucket and key of the source object, separated by a
            slash (/). For example, to  copy  the  object  reports/january.pdf
            from   the  bucket  awsexamplebucket  ,  use  awsexamplebucket/re-
            ports/january.pdf . The value must be URL-encoded.

          o For objects accessed through access points, specify the Amazon Re-
            source  Name  (ARN)  of  the object as accessed through the access
            point,  in  the  format   arn:aws:s3:<Region>:<account-id>:access-
            point/<access-point-name>/object/<key>  . For example, to copy the
            object reports/january.pdf through  access  point  my-access-point
            owned  by  account  123456789012 in Region us-west-2 , use the URL
            encoding  of  arn:aws:s3:us-west-2:123456789012:accesspoint/my-ac-
            cess-point/object/reports/january.pdf  . The value must be URL en-
            coded.

          NOTE:

              o Amazon S3 supports copy operations using  Access  points  only
                when the source and destination buckets are in the same Amazon
                Web Services Region.

              o Access points are not supported by directory buckets.

          Alternatively, for objects accessed through Amazon S3  on  Outposts,
          specify   the   ARN   of  the  object  as  accessed  in  the  format
          arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/ob-
          ject/<key>  .  For  example,  to copy the object reports/january.pdf
          through outpost my-outpost owned by account 123456789012  in  Region
          us-west-2    ,    use    the   URL   encoding   of   arn:aws:s3-out-
          posts:us-west-2:123456789012:outpost/my-outpost/object/reports/janu-
          ary.pdf . The value must be URL-encoded.

          If  your bucket has versioning enabled, you could have multiple ver-
          sions of the same object. By default,  x-amz-copy-source  identifies
          the current version of the source object to copy. To copy a specific
          version of the source object to copy, append ?versionId=<version-id>
          to    the    x-amz-copy-source    request   header   (for   example,
          x-amz-copy-source:        /awsexamplebucket/reports/january.pdf?ver-
          sionId=QUpfdndhfd8438MNFDN93jdnJFkdmqnh893 ).

          If  the  current  version is a delete marker and you don't specify a
          versionId in the x-amz-copy-source request header, Amazon S3 returns
          a  404  Not  Found  error, because the object does not exist. If you
          specify versionId in the x-amz-copy-source and the  versionId  is  a
          delete  marker, Amazon S3 returns an HTTP 400 Bad Request error, be-
          cause you are not allowed to specify a delete marker  as  a  version
          for the x-amz-copy-source .

          NOTE:
              Directory  buckets  -  S3 Versioning isn't enabled and supported
              for directory buckets.

       --copy-source-if-match (string)
          Copies the object if its entity tag  (ETag)  matches  the  specified
          tag.

          If      both      of      the     x-amz-copy-source-if-match     and
          x-amz-copy-source-if-unmodified-since headers are present in the re-
          quest as follows:
              x-amz-copy-source-if-match condition evaluates to true , and;

              x-amz-copy-source-if-unmodified-since   condition  evaluates  to
              false ;

          Amazon S3 returns 200 OK and copies the data.

       --copy-source-if-modified-since (timestamp)
          Copies the object if it has been modified since the specified time.

          If    both    of     the     x-amz-copy-source-if-none-match     and
          x-amz-copy-source-if-modified-since  headers  are present in the re-
          quest as follows:
              x-amz-copy-source-if-none-match condition evaluates to  false  ,
              and;

              x-amz-copy-source-if-modified-since  condition evaluates to true
              ;

          Amazon S3 returns 412 Precondition Failed response code.

       --copy-source-if-none-match (string)
          Copies the object if its entity tag (ETag)  is  different  than  the
          specified ETag.

          If     both     of     the    x-amz-copy-source-if-none-match    and
          x-amz-copy-source-if-modified-since headers are present in  the  re-
          quest as follows:
              x-amz-copy-source-if-none-match  condition  evaluates to false ,
              and;

              x-amz-copy-source-if-modified-since condition evaluates to  true
              ;

          Amazon S3 returns 412 Precondition Failed response code.

       --copy-source-if-unmodified-since (timestamp)
          Copies  the  object  if  it hasn't been modified since the specified
          time.

          If     both     of      the      x-amz-copy-source-if-match      and
          x-amz-copy-source-if-unmodified-since headers are present in the re-
          quest as follows:
              x-amz-copy-source-if-match condition evaluates to true , and;

              x-amz-copy-source-if-unmodified-since  condition  evaluates   to
              false ;

          Amazon S3 returns 200 OK and copies the data.

       --copy-source-range (string)
          The  range  of bytes to copy from the source object. The range value
          must use the form bytes=first-last, where the first and last are the
          zero-based  byte  offsets  to copy. For example, bytes=0-9 indicates
          that you want to copy the first 10 bytes of the source. You can copy
          a range only if the source object is greater than 5 MB.

       --key (string)
          Object key for which the multipart upload was initiated.

       --part-number (integer)
          Part number of part being copied. This is a positive integer between
          1 and 10,000.

       --upload-id (string)
          Upload ID identifying the  multipart  upload  whose  part  is  being
          copied.

       --sse-customer-algorithm (string)
          Specifies the algorithm to use when encrypting the object (for exam-
          ple, AES256).

          NOTE:
              This functionality is not supported when the destination  bucket
              is a directory bucket.

       --sse-customer-key (string)
          Specifies  the customer-provided encryption key for Amazon S3 to use
          in encrypting data. This value is used to store the object and  then
          it  is  discarded;  Amazon S3 does not store the encryption key. The
          key must be appropriate for use with the algorithm specified in  the
          x-amz-server-side-encryption-customer-algorithm header. This must be
          the same encryption key specified in the initiate  multipart  upload
          request.

          NOTE:
              This  functionality is not supported when the destination bucket
              is a directory bucket.

       --sse-customer-key-md5 (string)
          Specifies the 128-bit MD5 digest of the encryption key according  to
          RFC  1321.  Amazon S3 uses this header for a message integrity check
          to ensure that the encryption key was transmitted without error.

          NOTE:
              This functionality is not supported when the destination  bucket
              is a directory bucket.

       --copy-source-sse-customer-algorithm (string)
          Specifies  the  algorithm  to  use when decrypting the source object
          (for example, AES256 ).

          NOTE:
              This functionality is not supported when the source object is in
              a directory bucket.

       --copy-source-sse-customer-key (string)
          Specifies  the customer-provided encryption key for Amazon S3 to use
          to decrypt the source object. The encryption key  provided  in  this
          header must be one that was used when the source object was created.

          NOTE:
              This functionality is not supported when the source object is in
              a directory bucket.

       --copy-source-sse-customer-key-md5 (string)
          Specifies the 128-bit MD5 digest of the encryption key according  to
          RFC  1321.  Amazon S3 uses this header for a message integrity check
          to ensure that the encryption key was transmitted without error.

          NOTE:
              This functionality is not supported when the source object is in
              a directory bucket.

       --request-payer (string)
          Confirms  that the requester knows that they will be charged for the
          request. Bucket owners need not specify this parameter in their  re-
          quests.  If either the source or destination S3 bucket has Requester
          Pays enabled, the requester will pay for  corresponding  charges  to
          copy  the object. For information about downloading objects from Re-
          quester Pays buckets, see  Downloading  Objects  in  Requester  Pays
          Buckets in the Amazon S3 User Guide .

          NOTE:
              This functionality is not supported for directory buckets.

          Possible values:

          o requester

       --expected-bucket-owner (string)
          The  account ID of the expected destination bucket owner. If the ac-
          count ID that you provide does not match the  actual  owner  of  the
          destination  bucket, the request fails with the HTTP status code 403
          Forbidden (access denied).

       --expected-source-bucket-owner (string)
          The account ID of the expected source bucket owner. If  the  account
          ID  that  you  provide does not match the actual owner of the source
          bucket, the request fails with the HTTP status  code  403  Forbidden
          (access denied).

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To upload part of an object by copying data from an existing object  as
       the data source

       The  following  upload-part-copy example uploads a part by copying data
       from an existing object as a data source.

          aws s3api upload-part-copy \
              --bucket my-bucket \
              --key "Map_Data_June.mp4" \
              --copy-source "my-bucket/copy_of_Map_Data_June.mp4" \
              --part-number 1 \
              --upload-id "bq0tdE1CDpWQYRPLHuNG50xAT6pA5D.m_RiBy0ggOH6b13pVRY7QjvLlf75iFdJqp_2wztk5hvpUM2SesXgrzbehG5hViyktrfANpAD0NO.Nk3XREBqvGeZF6U3ipiSm"

       Output:

          {
              "CopyPartResult": {
                  "LastModified": "2019-12-13T23:16:03.000Z",
                  "ETag": "\"711470fc377698c393d94aed6305e245\""
              }
          }

OUTPUT
       CopySourceVersionId -> (string)
          The version of the source object that was copied, if  you  have  en-
          abled versioning on the source bucket.

          NOTE:
              This functionality is not supported when the source object is in
              a directory bucket.

       CopyPartResult -> (structure)
          Container for all response elements.

          ETag -> (string)
              Entity tag of the object.

          LastModified -> (timestamp)
              Date and time at which the object was uploaded.

          ChecksumCRC32 -> (string)
              The base64-encoded, 32-bit CRC-32 checksum of the  object.  This
              will  only  be  present if it was uploaded with the object. When
              you use an API operation on an object that  was  uploaded  using
              multipart uploads, this value may not be a direct checksum value
              of the full object. Instead, it's a  calculation  based  on  the
              checksum  values  of  each individual part. For more information
              about how checksums are calculated with multipart  uploads,  see
              Checking object integrity in the Amazon S3 User Guide .

          ChecksumCRC32C -> (string)
              The  base64-encoded, 32-bit CRC-32C checksum of the object. This
              will only be present if it was uploaded with  the  object.  When
              you  use  an  API operation on an object that was uploaded using
              multipart uploads, this value may not be a direct checksum value
              of  the  full  object.  Instead, it's a calculation based on the
              checksum values of each individual part.  For  more  information
              about  how  checksums are calculated with multipart uploads, see
              Checking object integrity in the Amazon S3 User Guide .

          ChecksumSHA1 -> (string)
              The base64-encoded, 160-bit SHA-1 digest  of  the  object.  This
              will  only  be  present if it was uploaded with the object. When
              you use the API operation on an object that was  uploaded  using
              multipart uploads, this value may not be a direct checksum value
              of the full object. Instead, it's a  calculation  based  on  the
              checksum  values  of  each individual part. For more information
              about how checksums are calculated with multipart  uploads,  see
              Checking object integrity in the Amazon S3 User Guide .

          ChecksumSHA256 -> (string)
              The  base64-encoded,  256-bit SHA-256 digest of the object. This
              will only be present if it was uploaded with  the  object.  When
              you  use  an  API operation on an object that was uploaded using
              multipart uploads, this value may not be a direct checksum value
              of  the  full  object.  Instead, it's a calculation based on the
              checksum values of each individual part.  For  more  information
              about  how  checksums are calculated with multipart uploads, see
              Checking object integrity in the Amazon S3 User Guide .

       ServerSideEncryption -> (string)
          The server-side encryption algorithm used when you store this object
          in Amazon S3 (for example, AES256 , aws:kms ).

       SSECustomerAlgorithm -> (string)
          If  server-side  encryption  with a customer-provided encryption key
          was requested, the response will include this header to confirm  the
          encryption algorithm that's used.

          NOTE:
              This functionality is not supported for directory buckets.

       SSECustomerKeyMD5 -> (string)
          If  server-side  encryption  with a customer-provided encryption key
          was requested, the response will include this header to provide  the
          round-trip  message  integrity verification of the customer-provided
          encryption key.

          NOTE:
              This functionality is not supported for directory buckets.

       SSEKMSKeyId -> (string)
          If present, indicates the ID of the KMS key that was used for object
          encryption.

       BucketKeyEnabled -> (boolean)
          Indicates  whether  the  multipart  upload uses an S3 Bucket Key for
          server-side  encryption  with  Key  Management  Service  (KMS)  keys
          (SSE-KMS).

       RequestCharged -> (string)
          If  present,  indicates  that the requester was successfully charged
          for the request.

          NOTE:
              This functionality is not supported for directory buckets.



                                                            UPLOAD-PART-COPY()
