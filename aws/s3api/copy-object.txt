COPY-OBJECT()                                                    COPY-OBJECT()



NAME
       copy-object -

DESCRIPTION
       Creates a copy of an object that is already stored in Amazon S3.

       NOTE:
          You  can  store  individual  objects of up to 5 TB in Amazon S3. You
          create a copy of your object up to 5 GB in size in a  single  atomic
          action using this API. However, to copy an object greater than 5 GB,
          you must use the multipart upload Upload Part  -  Copy  (UploadPart-
          Copy) API. For more information, see Copy Object Using the REST Mul-
          tipart Upload API .

       You can copy individual objects between general  purpose  buckets,  be-
       tween directory buckets, and between general purpose buckets and direc-
       tory buckets.

       NOTE:
          Directory buckets - For directory buckets, you  must  make  requests
          for  this  API operation to the Zonal endpoint. These endpoints sup-
          port virtual-hosted-style requests in the format
          ``
          https://bucket_name     .s3express-az_id     .*region*      .amazon-
          aws.com/key-name  ``  .  Path-style  requests are not supported. For
          more information, see Regional and Zonal endpoints in the Amazon  S3
          User Guide .

          System Message: WARNING/2 (<string>:, line 40)
                 Inline literal start-string without end-string.

       Both  the  Region  that you want to copy the object from and the Region
       that you want to copy the object to must be enabled for  your  account.
       For more information about how to enable a Region for your account, see
       Enable or disable a Region for standalone accounts in  the  Amazon  Web
       Services Account Management Guide .

       WARNING:
          Amazon  S3  transfer  acceleration  does  not  support  cross-Region
          copies. If you request a cross-Region copy using a transfer acceler-
          ation  endpoint,  you get a 400 Bad Request error. For more informa-
          tion, see Transfer Acceleration .

          Authentication and authorization

       All CopyObject requests must be authenticated and signed by  using  IAM
       credentials  (access  key  ID and secret access key for the IAM identi-
       ties). All headers with the x-amz- prefix, including  x-amz-copy-source
       , must be signed. For more information, see REST Authentication .
          Directory buckets - You must use the IAM credentials to authenticate
          and authorize your access to the CopyObject API  operation,  instead
          of  using  the temporary security credentials through the CreateSes-
          sion API operation.

       Amazon Web Services CLI or SDKs handles authentication  and  authoriza-
       tion on your behalf.
          Permissions

       You  must have read access to the source object and write access to the
       destination bucket.

       o General purpose bucket permissions - You must have permissions in  an
         IAM  policy  based  on  the  source and destination bucket types in a
         CopyObject operation.

         o If the source object is in a general purpose bucket, you must  have
           ** s3:GetObject ** permission to read the source object that is be-
           ing copied.

         o If the destination bucket is a general  purpose  bucket,  you  must
           have  ** s3:PutObject ** permission to write the object copy to the
           destination bucket.

       o Directory bucket permissions - You must have permissions in a  bucket
         policy or an IAM identity-based policy based on the source and desti-
         nation bucket types in a CopyObject operation.

         o If the source object that you  want  to  copy  is  in  a  directory
           bucket,  you must have the ** s3express:CreateSession ** permission
           in the Action element of a policy to read the object.  By  default,
           the  session  is in the ReadWrite mode. If you want to restrict the
           access, you can explicitly set the s3express:SessionMode  condition
           key to ReadOnly on the copy source bucket.

         o If the copy destination is a directory bucket, you must have the **
           s3express:CreateSession ** permission in the Action  element  of  a
           policy  to  write the object to the destination. The s3express:Ses-
           sionMode condition key can't be set to ReadOnly on the copy  desti-
           nation bucket.

       For  example  policies,  see Example bucket policies for S3 Express One
       Zone and Amazon Web Services Identity and Access Management (IAM) iden-
       tity-based policies for S3 Express One Zone in the Amazon S3 User Guide
       .
          Response and special errors

       When the request is an HTTP 1.1 request, the response is chunk encoded.
       When  the  request  is  not an HTTP 1.1 request, the response would not
       contain the Content-Length . You always need to  read  the  entire  re-
       sponse body to check if the copy succeeds. to keep the connection alive
       while we copy the data.

       o If the copy is successful, you receive a  response  with  information
         about the copied object.

       o A copy request might return an error when Amazon S3 receives the copy
         request or while Amazon S3 is copying the files. A  200  OK  response
         can contain either a success or an error.

         o If  the  error  occurs before the copy action starts, you receive a
           standard Amazon S3 error.

         o If the error occurs during the copy operation, the  error  response
           is  embedded in the 200 OK response. For example, in a cross-region
           copy, you may encounter throttling and receive a 200  OK  response.
           For more information, see Resolve the Error 200 response when copy-
           ing objects to Amazon S3 . The 200 OK status code  means  the  copy
           was accepted, but it doesn't mean the copy is complete. Another ex-
           ample is when you disconnect from Amazon S3 before the copy is com-
           plete, Amazon S3 might cancel the copy and you may receive a 200 OK
           response. You must stay connected to Amazon S3 until the entire re-
           sponse is successfully received and processed. If you call this API
           operation directly, make sure to design your application  to  parse
           the content of the response and handle it appropriately. If you use
           Amazon Web Services SDKs, SDKs handle this condition. The SDKs  de-
           tect  the embedded error and apply error handling per your configu-
           ration settings (including automatically retrying  the  request  as
           appropriate).  If  the condition persists, the SDKs throw an excep-
           tion (or, for the SDKs that don't use exceptions,  they  return  an
           error).

         Charge

       The  copy  request charge is based on the storage class and Region that
       you specify for the destination object. The request can also result  in
       a  data  retrieval  charge  for  the source if the source storage class
       bills for data retrieval. If the copy source is in a different  region,
       the data transfer is billed to the copy source account. For pricing in-
       formation, see Amazon S3 pricing .
              HTTP Host header syntax

          Directory buckets - The HTTP Host header syntax  is  ``  Bucket_name
          .s3express-az_id .*region* .amazonaws.com`` .

       The following operations are related to CopyObject :

       o PutObject

       o GetObject

       See also: AWS API Documentation

SYNOPSIS
            copy-object
          [--acl <value>]
          --bucket <value>
          [--cache-control <value>]
          [--checksum-algorithm <value>]
          [--content-disposition <value>]
          [--content-encoding <value>]
          [--content-language <value>]
          [--content-type <value>]
          --copy-source <value>
          [--copy-source-if-match <value>]
          [--copy-source-if-modified-since <value>]
          [--copy-source-if-none-match <value>]
          [--copy-source-if-unmodified-since <value>]
          [--expires <value>]
          [--grant-full-control <value>]
          [--grant-read <value>]
          [--grant-read-acp <value>]
          [--grant-write-acp <value>]
          --key <value>
          [--metadata <value>]
          [--metadata-directive <value>]
          [--tagging-directive <value>]
          [--server-side-encryption <value>]
          [--storage-class <value>]
          [--website-redirect-location <value>]
          [--sse-customer-algorithm <value>]
          [--sse-customer-key <value>]
          [--sse-customer-key-md5 <value>]
          [--ssekms-key-id <value>]
          [--ssekms-encryption-context <value>]
          [--bucket-key-enabled | --no-bucket-key-enabled]
          [--copy-source-sse-customer-algorithm <value>]
          [--copy-source-sse-customer-key <value>]
          [--copy-source-sse-customer-key-md5 <value>]
          [--request-payer <value>]
          [--tagging <value>]
          [--object-lock-mode <value>]
          [--object-lock-retain-until-date <value>]
          [--object-lock-legal-hold-status <value>]
          [--expected-bucket-owner <value>]
          [--expected-source-bucket-owner <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --acl (string)
          The canned access control list (ACL) to apply to the object.

          When  you  copy  an object, the ACL metadata is not preserved and is
          set to private by default. Only the owner has full  access  control.
          To override the default ACL setting, specify a new ACL when you gen-
          erate a copy request. For more information, see Using ACLs .

          If the destination bucket that you're copying objects  to  uses  the
          bucket owner enforced setting for S3 Object Ownership, ACLs are dis-
          abled and no longer affect permissions. Buckets that use  this  set-
          ting  only  accept PUT requests that don't specify an ACL or PUT re-
          quests that specify bucket owner full  control  ACLs,  such  as  the
          bucket-owner-full-control  canned  ACL or an equivalent form of this
          ACL  expressed  in  the  XML  format.  For  more  information,   see
          Controlling ownership of objects and disabling ACLs in the Amazon S3
          User Guide .

          NOTE:

              o If your destination bucket uses the bucket owner enforced set-
                ting  for  Object Ownership, all objects written to the bucket
                by any account will be owned by the bucket owner.

              o This functionality is not supported for directory buckets.

              o This functionality is not supported for Amazon S3 on Outposts.

          Possible values:

          o private

          o public-read

          o public-read-write

          o authenticated-read

          o aws-exec-read

          o bucket-owner-read

          o bucket-owner-full-control

       --bucket (string)
          The name of the destination bucket.
              Directory buckets - When you use this operation with a directory
              bucket, you must use virtual-hosted-style requests in the format
              `` Bucket_name  .s3express-az_id  .*region*  .amazonaws.com``  .
              Path-style  requests  are  not supported. Directory bucket names
              must be unique in the chosen  Availability  Zone.  Bucket  names
              must follow the format `` bucket_base_name --az-id --x-s3`` (for
              example, `` DOC-EXAMPLE-BUCKET --usw2-az1 --x-s3`` ). For infor-
              mation  about  bucket  naming restrictions, see Directory bucket
              naming rules in the Amazon S3 User Guide .

              Access points - When you use this action with an  access  point,
              you  must  provide the alias of the access point in place of the
              bucket name or specify the access point ARN. When using the  ac-
              cess  point  ARN,  you  must direct requests to the access point
              hostname. The access point hostname takes the form  AccessPoint-
              Name  -AccountId  .s3-accesspoint.*Region*  .amazonaws.com. When
              using this action with an access point through  the  Amazon  Web
              Services  SDKs, you provide the access point ARN in place of the
              bucket name. For more information about access point  ARNs,  see
              Using access points in the Amazon S3 User Guide .

          NOTE:
                 Access  points  and  Object Lambda access points are not sup-
                 ported by directory buckets.

              S3 on Outposts - When you use this action with Amazon S3 on Out-
              posts,  you must direct requests to the S3 on Outposts hostname.
              The S3 on Outposts hostname takes the  form  ``  AccessPointName
              -AccountId .*outpostID* .s3-outposts.*Region* .amazonaws.com`` .
              When you use this action with S3 on Outposts through the  Amazon
              Web  Services SDKs, you provide the Outposts access point ARN in
              place of the bucket name. For more information about S3 on  Out-
              posts  ARNs,  see  What is S3 on Outposts? in the Amazon S3 User
              Guide .

       --cache-control (string)
          Specifies the caching behavior along the request/reply chain.

       --checksum-algorithm (string)
          Indicates the algorithm that you want Amazon S3 to use to create the
          checksum  for  the object. For more information, see Checking object
          integrity in the Amazon S3 User Guide .

          When you copy an object, if the source object has a  checksum,  that
          checksum  value  will be copied to the new object by default. If the
          CopyObject request does not  include  this  x-amz-checksum-algorithm
          header, the checksum algorithm will be copied from the source object
          to the destination object (if it's present on  the  source  object).
          You  can  optionally  specify  a different checksum algorithm to use
          with the x-amz-checksum-algorithm  header.  Unrecognized  or  unsup-
          ported values will respond with the HTTP status code 400 Bad Request
          .

          NOTE:
              For directory buckets, when you use Amazon  Web  Services  SDKs,
              CRC32  is the default checksum algorithm that's used for perfor-
              mance.

          Possible values:

          o CRC32

          o CRC32C

          o SHA1

          o SHA256

       --content-disposition (string)
          Specifies  presentational  information  for  the  object.  Indicates
          whether an object should be displayed in a web browser or downloaded
          as a file. It allows specifying the desired filename for  the  down-
          loaded file.

       --content-encoding (string)
          Specifies what content encodings have been applied to the object and
          thus what decoding mechanisms must be  applied  to  obtain  the  me-
          dia-type referenced by the Content-Type header field.

          NOTE:
              For  directory  buckets, only the aws-chunked value is supported
              in this header field.

       --content-language (string)
          The language the content is in.

       --content-type (string)
          A standard MIME type that describes the format of the object data.

       --copy-source (string)
          Specifies the source object for the copy operation. The  source  ob-
          ject  can  be up to 5 GB. If the source object is an object that was
          uploaded by using a multipart upload, the object copy will be a sin-
          gle part object after the source object is copied to the destination
          bucket.

          You specify the value of the copy source in one of two formats,  de-
          pending  on  whether you want to access the source object through an
          access point :

          o For objects not accessed through an access point, specify the name
            of  the  source bucket and the key of the source object, separated
            by a slash (/). For example,  to  copy  the  object  reports/janu-
            ary.pdf from the general purpose bucket awsexamplebucket , use aw-
            sexamplebucket/reports/january.pdf . The  value  must  be  URL-en-
            coded.  To  copy the object reports/january.pdf from the directory
            bucket   awsexamplebucket--use1-az5--x-s3   ,   use    awsexample-
            bucket--use1-az5--x-s3/reports/january.pdf  .  The  value  must be
            URL-encoded.

          o For objects accessed through access points, specify the Amazon Re-
            source  Name  (ARN)  of  the object as accessed through the access
            point,  in  the  format   arn:aws:s3:<Region>:<account-id>:access-
            point/<access-point-name>/object/<key>  . For example, to copy the
            object reports/january.pdf through  access  point  my-access-point
            owned  by  account  123456789012 in Region us-west-2 , use the URL
            encoding  of  arn:aws:s3:us-west-2:123456789012:accesspoint/my-ac-
            cess-point/object/reports/january.pdf  . The value must be URL en-
            coded.

          NOTE:

              o Amazon S3 supports copy operations using  Access  points  only
                when the source and destination buckets are in the same Amazon
                Web Services Region.

              o Access points are not supported by directory buckets.

          Alternatively, for objects accessed through Amazon S3  on  Outposts,
          specify   the   ARN   of  the  object  as  accessed  in  the  format
          arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/ob-
          ject/<key>  .  For  example,  to copy the object reports/january.pdf
          through outpost my-outpost owned by account 123456789012  in  Region
          us-west-2    ,    use    the   URL   encoding   of   arn:aws:s3-out-
          posts:us-west-2:123456789012:outpost/my-outpost/object/reports/janu-
          ary.pdf . The value must be URL-encoded.

          If  your  source bucket versioning is enabled, the x-amz-copy-source
          header by default identifies the current version  of  an  object  to
          copy.  If  the current version is a delete marker, Amazon S3 behaves
          as if the object was deleted. To copy a different version,  use  the
          versionId  query  parameter.  Specifically,  append ?versionId=<ver-
          sion-id> to the value (for  example,  awsexamplebucket/reports/janu-
          ary.pdf?versionId=QUpfdndhfd8438MNFDN93jdnJFkdmqnh893   ).   If  you
          don't specify a version ID, Amazon S3 copies the latest  version  of
          the source object.

          If you enable versioning on the destination bucket, Amazon S3 gener-
          ates a unique version ID for the copied object. This version  ID  is
          different  from  the  version ID of the source object. Amazon S3 re-
          turns the version ID of the copied object  in  the  x-amz-version-id
          response header in the response.

          If  you  do  not  enable versioning or suspend it on the destination
          bucket, the version ID that Amazon S3 generates  in  the  x-amz-ver-
          sion-id response header is always null.

          NOTE:
              Directory  buckets  -  S3 Versioning isn't enabled and supported
              for directory buckets.

       --copy-source-if-match (string)
          Copies the object if its entity tag  (ETag)  matches  the  specified
          tag.

          If  both the x-amz-copy-source-if-match and x-amz-copy-source-if-un-
          modified-since headers are present in the request  and  evaluate  as
          follows, Amazon S3 returns 200 OK and copies the data:

          o x-amz-copy-source-if-match condition evaluates to true

          o x-amz-copy-source-if-unmodified-since condition evaluates to false

       --copy-source-if-modified-since (timestamp)
          Copies the object if it has been modified since the specified time.

          If       both      the      x-amz-copy-source-if-none-match      and
          x-amz-copy-source-if-modified-since headers are present in  the  re-
          quest  and  evaluate as follows, Amazon S3 returns the 412 Precondi-
          tion Failed response code:

          o x-amz-copy-source-if-none-match condition evaluates to false

          o x-amz-copy-source-if-modified-since condition evaluates to true

       --copy-source-if-none-match (string)
          Copies the object if its entity tag (ETag)  is  different  than  the
          specified ETag.

          If       both      the      x-amz-copy-source-if-none-match      and
          x-amz-copy-source-if-modified-since headers are present in  the  re-
          quest  and  evaluate as follows, Amazon S3 returns the 412 Precondi-
          tion Failed response code:

          o x-amz-copy-source-if-none-match condition evaluates to false

          o x-amz-copy-source-if-modified-since condition evaluates to true

       --copy-source-if-unmodified-since (timestamp)
          Copies the object if it hasn't been  modified  since  the  specified
          time.

          If  both the x-amz-copy-source-if-match and x-amz-copy-source-if-un-
          modified-since headers are present in the request  and  evaluate  as
          follows, Amazon S3 returns 200 OK and copies the data:

          o x-amz-copy-source-if-match condition evaluates to true

          o x-amz-copy-source-if-unmodified-since condition evaluates to false

       --expires (timestamp)
          The date and time at which the object is no longer cacheable.

       --grant-full-control (string)
          Gives  the  grantee READ, READ_ACP, and WRITE_ACP permissions on the
          object.

          NOTE:

              o This functionality is not supported for directory buckets.

              o This functionality is not supported for Amazon S3 on Outposts.

       --grant-read (string)
          Allows grantee to read the object data and its metadata.

          NOTE:

              o This functionality is not supported for directory buckets.

              o This functionality is not supported for Amazon S3 on Outposts.

       --grant-read-acp (string)
          Allows grantee to read the object ACL.

          NOTE:

              o This functionality is not supported for directory buckets.

              o This functionality is not supported for Amazon S3 on Outposts.

       --grant-write-acp (string)
          Allows grantee to write the ACL for the applicable object.

          NOTE:

              o This functionality is not supported for directory buckets.

              o This functionality is not supported for Amazon S3 on Outposts.

       --key (string)
          The key of the destination object.

       --metadata (map)
          A map of metadata to store with the object in S3.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --metadata-directive (string)
          Specifies whether the metadata is copied from the source  object  or
          replaced  with metadata that's provided in the request. When copying
          an object, you can preserve all metadata (the  default)  or  specify
          new metadata. If this header isnt specified, COPY is the default be-
          havior.
              General purpose bucket - For general purpose buckets,  when  you
              grant  permissions,  you can use the s3:x-amz-metadata-directive
              condition key to enforce certain metadata behavior when  objects
              are  uploaded. For more information, see Amazon S3 condition key
              examples in the Amazon S3 User Guide .

          NOTE:
              x-amz-website-redirect-location is unique to each object and  is
              not  copied  when  using the x-amz-metadata-directive header. To
              copy the value, you must specify x-amz-website-redirect-location
              in the request header.

          Possible values:

          o COPY

          o REPLACE

       --tagging-directive (string)
          Specifies  whether  the object tag-set is copied from the source ob-
          ject or replaced with the tag-set that's provided in the request.

          The default value is COPY .

          NOTE:
                 Directory buckets - For directory buckets in a CopyObject op-
                 eration,  only  the  empty tag-set is supported. Any requests
                 that attempt to write non-empty tags into  directory  buckets
                 will receive a 501 Not Implemented status code. When the des-
                 tination bucket is a directory bucket, you will receive a 501
                 Not Implemented response in any of the following situations:

              o When  you attempt to COPY the tag-set from an S3 source object
                that has non-empty tags.

              o When you attempt to REPLACE the tag-set of a source object and
                set a non-empty value to x-amz-tagging .

              o When  you don't set the x-amz-tagging-directive header and the
                source object has non-empty tags. This is because the  default
                value of x-amz-tagging-directive is COPY .

              Because  only the empty tag-set is supported for directory buck-
              ets in a CopyObject operation, the following situations are  al-
              lowed:

              o When  you  attempt to COPY the tag-set from a directory bucket
                source object that has no tags to a general purpose bucket. It
                copies an empty tag-set to the destination object.

              o When  you attempt to REPLACE the tag-set of a directory bucket
                source object and set the x-amz-tagging value of the directory
                bucket destination object to empty.

              o When  you  attempt to REPLACE the tag-set of a general purpose
                bucket source object that  has  non-empty  tags  and  set  the
                x-amz-tagging value of the directory bucket destination object
                to empty.

              o When you attempt to REPLACE the tag-set of a directory  bucket
                source object and don't set the x-amz-tagging value of the di-
                rectory bucket destination object. This is because the default
                value of x-amz-tagging is the empty value.

          Possible values:

          o COPY

          o REPLACE

       --server-side-encryption (string)
          The  server-side  encryption algorithm used when storing this object
          in Amazon S3 (for example, AES256 , aws:kms , aws:kms:dsse ). Unrec-
          ognized  or  unsupported  values wont write a destination object and
          will receive a 400 Bad Request response.

          Amazon S3 automatically encrypts all new objects that are copied  to
          an  S3  bucket. When copying an object, if you don't specify encryp-
          tion information in your copy request, the encryption setting of the
          target  object is set to the default encryption configuration of the
          destination bucket. By default, all buckets have a base level of en-
          cryption  configuration that uses server-side encryption with Amazon
          S3 managed keys (SSE-S3). If the destination bucket  has  a  default
          encryption  configuration  that uses server-side encryption with Key
          Management Service (KMS) keys (SSE-KMS), dual-layer server-side  en-
          cryption   with   Amazon   Web  Services  KMS  keys  (DSSE-KMS),  or
          server-side  encryption  with  customer-provided   encryption   keys
          (SSE-C),  Amazon  S3  uses  the  corresponding  KMS  key,  or a cus-
          tomer-provided key to encrypt the target object copy.

          When you perform a CopyObject operation, if you want to use  a  dif-
          ferent  type  of  encryption  setting for the target object, you can
          specify appropriate encryption-related headers to encrypt the target
          object  with an Amazon S3 managed key, a KMS key, or a customer-pro-
          vided key. If the encryption setting in your  request  is  different
          from the default encryption configuration of the destination bucket,
          the encryption setting in your request takes precedence.

          With server-side encryption, Amazon S3  encrypts  your  data  as  it
          writes  your data to disks in its data centers and decrypts the data
          when you access it. For more information about  server-side  encryp-
          tion, see Using Server-Side Encryption in the Amazon S3 User Guide .

          NOTE:
              For  directory  buckets, only server-side encryption with Amazon
              S3 managed keys (SSE-S3) (AES256 ) is supported.

          Possible values:

          o AES256

          o aws:kms

          o aws:kms:dsse

       --storage-class (string)
          If the x-amz-storage-class header is not  used,  the  copied  object
          will  be  stored in the STANDARD Storage Class by default. The STAN-
          DARD storage class provides high durability and  high  availability.
          Depending  on performance needs, you can specify a different Storage
          Class.

          NOTE:

              o Directory buckets - For directory buckets, only the S3 Express
                One Zone storage class is supported to store newly created ob-
                jects. Unsupported storage class values won't write a destina-
                tion object and will respond with the HTTP status code 400 Bad
                Request .

              o Amazon S3 on Outposts - S3 on Outposts only uses the  OUTPOSTS
                Storage Class.

          You  can use the CopyObject action to change the storage class of an
          object that is already stored in Amazon S3 by using the  x-amz-stor-
          age-class  header.  For more information, see Storage Classes in the
          Amazon S3 User Guide .

          Before using an object as a source object for  the  copy  operation,
          you  must restore a copy of it if it meets any of the following con-
          ditions:

          o The storage class of the source object is GLACIER or  DEEP_ARCHIVE
            .

          o The  storage class of the source object is INTELLIGENT_TIERING and
            it's S3 Intelligent-Tiering access tier is Archive Access or  Deep
            Archive Access .

          For  more  information, see RestoreObject and Copying Objects in the
          Amazon S3 User Guide .

          Possible values:

          o STANDARD

          o REDUCED_REDUNDANCY

          o STANDARD_IA

          o ONEZONE_IA

          o INTELLIGENT_TIERING

          o GLACIER

          o DEEP_ARCHIVE

          o OUTPOSTS

          o GLACIER_IR

          o SNOW

          o EXPRESS_ONEZONE

       --website-redirect-location (string)
          If the destination bucket is configured as a website, redirects  re-
          quests  for this object copy to another object in the same bucket or
          to an external URL. Amazon S3 stores the value of this header in the
          object  metadata.  This  value  is  unique to each object and is not
          copied when using the x-amz-metadata-directive header. Instead,  you
          may  opt  to provide this header in combination with the x-amz-meta-
          data-directive header.

          NOTE:
              This functionality is not supported for directory buckets.

       --sse-customer-algorithm (string)
          Specifies the algorithm to use when encrypting the object (for exam-
          ple, AES256 ).

          When  you  perform a CopyObject operation, if you want to use a dif-
          ferent type of encryption setting for the  target  object,  you  can
          specify appropriate encryption-related headers to encrypt the target
          object with an Amazon S3 managed key, a KMS key, or a  customer-pro-
          vided  key.  If  the encryption setting in your request is different
          from the default encryption configuration of the destination bucket,
          the encryption setting in your request takes precedence.

          NOTE:
              This  functionality is not supported when the destination bucket
              is a directory bucket.

       --sse-customer-key (string)
          Specifies the customer-provided encryption key for Amazon S3 to  use
          in  encrypting data. This value is used to store the object and then
          it is discarded. Amazon S3 does not store the  encryption  key.  The
          key  must be appropriate for use with the algorithm specified in the
          x-amz-server-side-encryption-customer-algorithm header.

          NOTE:
              This functionality is not supported when the destination  bucket
              is a directory bucket.

       --sse-customer-key-md5 (string)
          Specifies  the 128-bit MD5 digest of the encryption key according to
          RFC 1321. Amazon S3 uses this header for a message  integrity  check
          to ensure that the encryption key was transmitted without error.

          NOTE:
              This  functionality is not supported when the destination bucket
              is a directory bucket.

       --ssekms-key-id (string)
          Specifies the KMS ID (Key ID, Key ARN, or Key Alias) to use for  ob-
          ject encryption. All GET and PUT requests for an object protected by
          KMS will fail if they're not made via SSL or using SigV4. For infor-
          mation  about configuring any of the officially supported Amazon Web
          Services SDKs and Amazon Web Services CLI, see Specifying the Signa-
          ture Version in Request Authentication in the Amazon S3 User Guide .

          NOTE:
              This  functionality is not supported when the destination bucket
              is a directory bucket.

       --ssekms-encryption-context (string)
          Specifies the Amazon Web Services KMS Encryption Context to use  for
          object  encryption.  The  value  of  this header is a base64-encoded
          UTF-8 string holding JSON  with  the  encryption  context  key-value
          pairs.  This  value  must  be explicitly added to specify encryption
          context for CopyObject requests.

          NOTE:
              This functionality is not supported when the destination  bucket
              is a directory bucket.

       --bucket-key-enabled | --no-bucket-key-enabled (boolean)
          Specifies  whether  Amazon S3 should use an S3 Bucket Key for object
          encryption with server-side encryption using Key Management  Service
          (KMS)  keys  (SSE-KMS). If a target object uses SSE-KMS, you can en-
          able an S3 Bucket Key for the object.

          Setting this header to true causes Amazon S3 to use an S3 Bucket Key
          for  object  encryption  with SSE-KMS. Specifying this header with a
          COPY action doesnt affect bucket-level settings for S3 Bucket Key.

          For more information, see Amazon S3 Bucket Keys  in  the  Amazon  S3
          User Guide .

          NOTE:
              This  functionality is not supported when the destination bucket
              is a directory bucket.

       --copy-source-sse-customer-algorithm (string)
          Specifies the algorithm to use when  decrypting  the  source  object
          (for example, AES256 ).

          If  the  source  object  for  the  copy is stored in Amazon S3 using
          SSE-C, you must provide the necessary encryption information in your
          request so that Amazon S3 can decrypt the object for copying.

          NOTE:
              This functionality is not supported when the source object is in
              a directory bucket.

       --copy-source-sse-customer-key (string)
          Specifies the customer-provided encryption key for Amazon S3 to  use
          to  decrypt  the  source object. The encryption key provided in this
          header must be the same one that was used when the source object was
          created.

          If  the  source  object  for  the  copy is stored in Amazon S3 using
          SSE-C, you must provide the necessary encryption information in your
          request so that Amazon S3 can decrypt the object for copying.

          NOTE:
              This functionality is not supported when the source object is in
              a directory bucket.

       --copy-source-sse-customer-key-md5 (string)
          Specifies the 128-bit MD5 digest of the encryption key according  to
          RFC  1321.  Amazon S3 uses this header for a message integrity check
          to ensure that the encryption key was transmitted without error.

          If the source object for the copy  is  stored  in  Amazon  S3  using
          SSE-C, you must provide the necessary encryption information in your
          request so that Amazon S3 can decrypt the object for copying.

          NOTE:
              This functionality is not supported when the source object is in
              a directory bucket.

       --request-payer (string)
          Confirms  that the requester knows that they will be charged for the
          request. Bucket owners need not specify this parameter in their  re-
          quests.  If either the source or destination S3 bucket has Requester
          Pays enabled, the requester will pay for  corresponding  charges  to
          copy  the object. For information about downloading objects from Re-
          quester Pays buckets, see  Downloading  Objects  in  Requester  Pays
          Buckets in the Amazon S3 User Guide .

          NOTE:
              This functionality is not supported for directory buckets.

          Possible values:

          o requester

       --tagging (string)
          The  tag-set  for  the  object  copy in the destination bucket. This
          value must be used in conjunction with  the  x-amz-tagging-directive
          if  you  choose  REPLACE  for  the  x-amz-tagging-directive . If you
          choose COPY for the x-amz-tagging-directive , you don't need to  set
          the  x-amz-tagging  header,  because the tag-set will be copied from
          the source object directly. The tag-set must be encoded as URL Query
          parameters.

          The default value is the empty value.

          NOTE:
                 Directory buckets - For directory buckets in a CopyObject op-
                 eration, only the empty tag-set is  supported.  Any  requests
                 that  attempt  to write non-empty tags into directory buckets
                 will receive a 501 Not Implemented status code. When the des-
                 tination bucket is a directory bucket, you will receive a 501
                 Not Implemented response in any of the following situations:

              o When you attempt to COPY the tag-set from an S3 source  object
                that has non-empty tags.

              o When you attempt to REPLACE the tag-set of a source object and
                set a non-empty value to x-amz-tagging .

              o When you don't set the x-amz-tagging-directive header and  the
                source  object has non-empty tags. This is because the default
                value of x-amz-tagging-directive is COPY .

              Because only the empty tag-set is supported for directory  buck-
              ets  in a CopyObject operation, the following situations are al-
              lowed:

              o When you attempt to COPY the tag-set from a  directory  bucket
                source object that has no tags to a general purpose bucket. It
                copies an empty tag-set to the destination object.

              o When you attempt to REPLACE the tag-set of a directory  bucket
                source object and set the x-amz-tagging value of the directory
                bucket destination object to empty.

              o When you attempt to REPLACE the tag-set of a  general  purpose
                bucket  source  object  that  has  non-empty  tags and set the
                x-amz-tagging value of the directory bucket destination object
                to empty.

              o When  you attempt to REPLACE the tag-set of a directory bucket
                source object and don't set the x-amz-tagging value of the di-
                rectory bucket destination object. This is because the default
                value of x-amz-tagging is the empty value.

       --object-lock-mode (string)
          The Object Lock mode that you want to apply to the object copy.

          NOTE:
              This functionality is not supported for directory buckets.

          Possible values:

          o GOVERNANCE

          o COMPLIANCE

       --object-lock-retain-until-date (timestamp)
          The date and time when you want the Object Lock of the  object  copy
          to expire.

          NOTE:
              This functionality is not supported for directory buckets.

       --object-lock-legal-hold-status (string)
          Specifies whether you want to apply a legal hold to the object copy.

          NOTE:
              This functionality is not supported for directory buckets.

          Possible values:

          o ON

          o OFF

       --expected-bucket-owner (string)
          The  account ID of the expected destination bucket owner. If the ac-
          count ID that you provide does not match the  actual  owner  of  the
          destination  bucket, the request fails with the HTTP status code 403
          Forbidden (access denied).

       --expected-source-bucket-owner (string)
          The account ID of the expected source bucket owner. If  the  account
          ID  that  you  provide does not match the actual owner of the source
          bucket, the request fails with the HTTP status  code  403  Forbidden
          (access denied).

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       The following command copies an object from bucket-1 to bucket-2:

          aws s3api copy-object --copy-source bucket-1/test.txt --key test.txt --bucket bucket-2

       Output:

          {
              "CopyObjectResult": {
                  "LastModified": "2015-11-10T01:07:25.000Z",
                  "ETag": "\"589c8b79c230a6ecd5a7e1d040a9a030\""
              },
              "VersionId": "YdnYvTCVDqRRFA.NFJjy36p0hxifMlkA"
          }

OUTPUT
       CopyObjectResult -> (structure)
          Container for all response elements.

          ETag -> (string)
              Returns  the  ETag  of  the  new  object. The ETag reflects only
              changes to the contents of an object, not its metadata.

          LastModified -> (timestamp)
              Creation date of the object.

          ChecksumCRC32 -> (string)
              The base64-encoded, 32-bit CRC32 checksum of  the  object.  This
              will  only  be  present  if it was uploaded with the object. For
              more information, see Checking object integrity in the Amazon S3
              User Guide .

          ChecksumCRC32C -> (string)
              The  base64-encoded,  32-bit CRC32C checksum of the object. This
              will only be present if it was uploaded  with  the  object.  For
              more information, see Checking object integrity in the Amazon S3
              User Guide .

          ChecksumSHA1 -> (string)
              The base64-encoded, 160-bit SHA-1 digest  of  the  object.  This
              will  only  be  present  if it was uploaded with the object. For
              more information, see Checking object integrity in the Amazon S3
              User Guide .

          ChecksumSHA256 -> (string)
              The  base64-encoded,  256-bit SHA-256 digest of the object. This
              will only be present if it was uploaded  with  the  object.  For
              more information, see Checking object integrity in the Amazon S3
              User Guide .

       Expiration -> (string)
          If the object expiration is configured, the response  includes  this
          header.

          NOTE:
              This functionality is not supported for directory buckets.

       CopySourceVersionId -> (string)
          Version ID of the source object that was copied.

          NOTE:
              This functionality is not supported when the source object is in
              a directory bucket.

       VersionId -> (string)
          Version ID of the newly created copy.

          NOTE:
              This functionality is not supported for directory buckets.

       ServerSideEncryption -> (string)
          The server-side encryption algorithm used when you store this object
          in Amazon S3 (for example, AES256 , aws:kms , aws:kms:dsse ).

          NOTE:
              For  directory  buckets, only server-side encryption with Amazon
              S3 managed keys (SSE-S3) (AES256 ) is supported.

       SSECustomerAlgorithm -> (string)
          If server-side encryption with a  customer-provided  encryption  key
          was  requested, the response will include this header to confirm the
          encryption algorithm that's used.

          NOTE:
              This functionality is not supported for directory buckets.

       SSECustomerKeyMD5 -> (string)
          If server-side encryption with a  customer-provided  encryption  key
          was  requested, the response will include this header to provide the
          round-trip message integrity verification of  the  customer-provided
          encryption key.

          NOTE:
              This functionality is not supported for directory buckets.

       SSEKMSKeyId -> (string)
          If  present,  indicates  the  ID of the Key Management Service (KMS)
          symmetric encryption customer managed key that was used for the  ob-
          ject.

          NOTE:
              This functionality is not supported for directory buckets.

       SSEKMSEncryptionContext -> (string)
          If present, indicates the Amazon Web Services KMS Encryption Context
          to use for  object  encryption.  The  value  of  this  header  is  a
          base64-encoded UTF-8 string holding JSON with the encryption context
          key-value pairs.

          NOTE:
              This functionality is not supported for directory buckets.

       BucketKeyEnabled -> (boolean)
          Indicates whether the copied  object  uses  an  S3  Bucket  Key  for
          server-side  encryption  with  Key  Management  Service  (KMS)  keys
          (SSE-KMS).

          NOTE:
              This functionality is not supported for directory buckets.

       RequestCharged -> (string)
          If present, indicates that the requester  was  successfully  charged
          for the request.

          NOTE:
              This functionality is not supported for directory buckets.



                                                                 COPY-OBJECT()
