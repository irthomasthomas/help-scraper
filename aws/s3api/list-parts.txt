LIST-PARTS()                                                      LIST-PARTS()



NAME
       list-parts -

DESCRIPTION
       Lists  the  parts  that have been uploaded for a specific multipart up-
       load. This operation must include the upload ID, which  you  obtain  by
       sending     the     initiate     multipart    upload    request    (see
       CreateMultipartUpload ). This request returns a maximum  of  1,000  up-
       loaded  parts. The default number of parts returned is 1,000 parts. You
       can restrict the number of parts returned by specifying  the  max-parts
       request parameter. If your multipart upload consists of more than 1,000
       parts, the response returns an IsTruncated  field  with  the  value  of
       true,  and  a NextPartNumberMarker element. In subsequent ListParts re-
       quests you can include the part-number-marker  query  string  parameter
       and set its value to the NextPartNumberMarker field value from the pre-
       vious response.

       If the upload was created using a checksum algorithm, you will need  to
       have permission to the kms:Decrypt action for the request to succeed.

       For  more information on multipart uploads, see Uploading Objects Using
       Multipart Upload .

       For information on permissions required to  use  the  multipart  upload
       API, see Multipart Upload and Permissions .

       The following operations are related to ListParts :

       o CreateMultipartUpload

       o UploadPart

       o CompleteMultipartUpload

       o AbortMultipartUpload

       o GetObjectAttributes

       o ListMultipartUploads

       See also: AWS API Documentation

       list-parts  is  a paginated operation. Multiple API calls may be issued
       in order to retrieve the entire data set of results.  You  can  disable
       pagination  by providing the --no-paginate argument.  When using --out-
       put text and the --query argument on a paginated response, the  --query
       argument  must extract data from the results of the following query ex-
       pressions: Parts

SYNOPSIS
            list-parts
          --bucket <value>
          --key <value>
          --upload-id <value>
          [--request-payer <value>]
          [--expected-bucket-owner <value>]
          [--sse-customer-algorithm <value>]
          [--sse-customer-key <value>]
          [--sse-customer-key-md5 <value>]
          [--cli-input-json <value>]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --bucket (string)
          The name of the bucket to which the parts are being uploaded.

          When using this action with an access point,  you  must  direct  re-
          quests to the access point hostname. The access point hostname takes
          the form AccessPointName -AccountId  .s3-accesspoint.*Region*  .ama-
          zonaws.com.  When using this action with an access point through the
          Amazon Web Services SDKs, you provide the access point ARN in  place
          of  the  bucket  name. For more information about access point ARNs,
          see Using access points in the Amazon S3 User Guide .

          When you use this action with Amazon S3 on Outposts, you must direct
          requests to the S3 on Outposts hostname. The S3 on Outposts hostname
          takes the form `` AccessPointName -AccountId  .*outpostID*  .s3-out-
          posts.*Region*  .amazonaws.com``  . When you use this action with S3
          on Outposts through the Amazon Web Services SDKs,  you  provide  the
          Outposts  access point ARN in place of the bucket name. For more in-
          formation about S3 on Outposts ARNs, see What is S3 on Outposts?  in
          the Amazon S3 User Guide .

       --key (string)
          Object key for which the multipart upload was initiated.

       --upload-id (string)
          Upload  ID  identifying  the  multipart upload whose parts are being
          listed.

       --request-payer (string)
          Confirms that the requester knows that they will be charged for  the
          request.  Bucket owners need not specify this parameter in their re-
          quests. For information about  downloading  objects  from  Requester
          Pays  buckets,  see Downloading Objects in Requester Pays Buckets in
          the Amazon S3 User Guide .

          Possible values:

          o requester

       --expected-bucket-owner (string)
          The account ID of the expected bucket owner. If the bucket is  owned
          by  a different account, the request fails with the HTTP status code
          403 Forbidden (access denied).

       --sse-customer-algorithm (string)
          The server-side encryption (SSE) algorithm used to encrypt  the  ob-
          ject.  This parameter is needed only when the object was created us-
          ing a checksum algorithm. For more information, see Protecting  data
          using SSE-C keys in the Amazon S3 User Guide .

       --sse-customer-key (string)
          The  server-side encryption (SSE) customer managed key. This parame-
          ter is needed only when the object was created using a checksum  al-
          gorithm.  For more information, see Protecting data using SSE-C keys
          in the Amazon S3 User Guide .

       --sse-customer-key-md5 (string)
          The MD5 server-side encryption (SSE) customer managed key. This  pa-
          rameter  is needed only when the object was created using a checksum
          algorithm. For more information, see  Protecting  data  using  SSE-C
          keys in the Amazon S3 User Guide .

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --starting-token (string)
          A token to specify where to start paginating. This is the  NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The size of each page to get in the AWS service call. This does  not
          affect the number of items returned in the command's output. Setting
          a smaller page size results in more calls to the  AWS  service,  re-
          trieving  fewer  items  in  each call. This can help prevent the AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The  total number of items to return in the command's output. If the
          total number of items available is more than the value specified,  a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent  command. Do not use the NextToken response element directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       The following command lists all of the parts that  have  been  uploaded
       for a multipart upload with key multipart/01 in the bucket my-bucket:

          aws s3api list-parts --bucket my-bucket --key 'multipart/01' --upload-id dfRtDYU0WWCCcH43C3WFbkRONycyCpTJJvxu2i5GYkZljF.Yxwh6XG7WfS2vC4to6HiV6Yjlx.cph0gtNBtJ8P3URCSbB7rjxI5iEwVDmgaXZOGgkk5nVTW16HOQ5l0R

       Output:

          {
              "Owner": {
                  "DisplayName": "aws-account-name",
                  "ID": "100719349fc3b6dcd7c820a124bf7aecd408092c3d7b51b38494939801fc248b"
              },
              "Initiator": {
                  "DisplayName": "username",
                  "ID": "arn:aws:iam::0123456789012:user/username"
              },
              "Parts": [
                  {
                      "LastModified": "2015-06-02T18:07:35.000Z",
                      "PartNumber": 1,
                      "ETag": "\"e868e0f4719e394144ef36531ee6824c\"",
                      "Size": 5242880
                  },
                  {
                      "LastModified": "2015-06-02T18:07:42.000Z",
                      "PartNumber": 2,
                      "ETag": "\"6bb2b12753d66fe86da4998aa33fffb0\"",
                      "Size": 5242880
                  },
                  {
                      "LastModified": "2015-06-02T18:07:47.000Z",
                      "PartNumber": 3,
                      "ETag": "\"d0a0112e841abec9c9ec83406f0159c8\"",
                      "Size": 5242880
                  }
              ],
              "StorageClass": "STANDARD"
          }

OUTPUT
       AbortDate -> (timestamp)
          If  the  bucket  has  a  lifecycle rule configured with an action to
          abort incomplete multipart uploads and the prefix in  the  lifecycle
          rule  matches  the object name in the request, then the response in-
          cludes this header indicating when the  initiated  multipart  upload
          will  become eligible for abort operation. For more information, see
          Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle  Con-
          figuration .

          The  response  will also include the x-amz-abort-rule-id header that
          will provide the ID of the lifecycle configuration rule that defines
          this action.

       AbortRuleId -> (string)
          This  header  is returned along with the x-amz-abort-date header. It
          identifies applicable lifecycle configuration rule that defines  the
          action to abort incomplete multipart uploads.

       Bucket -> (string)
          The  name of the bucket to which the multipart upload was initiated.
          Does not return the access point ARN or access point alias if used.

       Key -> (string)
          Object key for which the multipart upload was initiated.

       UploadId -> (string)
          Upload ID identifying the multipart upload  whose  parts  are  being
          listed.

       PartNumberMarker -> (integer)
          When  a  list  is truncated, this element specifies the last part in
          the list, as well as the value to use for the part-number-marker re-
          quest parameter in a subsequent request.

       NextPartNumberMarker -> (integer)
          When  a  list  is truncated, this element specifies the last part in
          the list, as well as the value to use for the part-number-marker re-
          quest parameter in a subsequent request.

       MaxParts -> (integer)
          Maximum number of parts that were allowed in the response.

       IsTruncated -> (boolean)
          Indicates  whether  the  returned list of parts is truncated. A true
          value indicates that the list was truncated. A list can be truncated
          if  the  number  of parts exceeds the limit returned in the MaxParts
          element.

       Parts -> (list)
          Container for elements related to a particular part. A response  can
          contain zero or more Part elements.

          (structure)
              Container for elements related to a part.

              PartNumber -> (integer)
                 Part  number identifying the part. This is a positive integer
                 between 1 and 10,000.

              LastModified -> (timestamp)
                 Date and time at which the part was uploaded.

              ETag -> (string)
                 Entity tag returned when the part was uploaded.

              Size -> (integer)
                 Size in bytes of the uploaded part data.

              ChecksumCRC32 -> (string)
                 This header can be used as a data integrity check  to  verify
                 that  the  data received is the same data that was originally
                 sent. This header specifies the base64-encoded, 32-bit  CRC32
                 checksum  of  the  object. For more information, see Checking
                 object integrity in the Amazon S3 User Guide .

              ChecksumCRC32C -> (string)
                 The base64-encoded, 32-bit CRC32C  checksum  of  the  object.
                 This will only be present if it was uploaded with the object.
                 With multipart uploads, this may not be a checksum  value  of
                 the object. For more information about how checksums are cal-
                 culated with multipart uploads, see Checking object integrity
                 in the Amazon S3 User Guide .

              ChecksumSHA1 -> (string)
                 The  base64-encoded, 160-bit SHA-1 digest of the object. This
                 will only be present if it was uploaded with the object. With
                 multipart  uploads,  this  may not be a checksum value of the
                 object. For more information about how checksums  are  calcu-
                 lated  with  multipart uploads, see Checking object integrity
                 in the Amazon S3 User Guide .

              ChecksumSHA256 -> (string)
                 This header can be used as a data integrity check  to  verify
                 that  the  data received is the same data that was originally
                 sent.  This  header  specifies  the  base64-encoded,  256-bit
                 SHA-256  digest  of  the  object.  For  more information, see
                 Checking object integrity in the Amazon S3 User Guide .

       Initiator -> (structure)
          Container element that identifies who initiated  the  multipart  up-
          load.  If the initiator is an Amazon Web Services account, this ele-
          ment provides the same information as the Owner element. If the ini-
          tiator  is  an IAM User, this element provides the user ARN and dis-
          play name.

          ID -> (string)
              If the principal is an Amazon Web Services account, it  provides
              the  Canonical User ID. If the principal is an IAM User, it pro-
              vides a user ARN value.

          DisplayName -> (string)
              Name of the Principal.

       Owner -> (structure)
          Container element that identifies the object owner, after the object
          is  created.  If  multipart upload is initiated by an IAM user, this
          element provides the parent account ID and display name.

          DisplayName -> (string)
              Container for the display name of the owner. This value is  only
              supported in the following Amazon Web Services Regions:

              o US East (N. Virginia)

              o US West (N. California)

              o US West (Oregon)

              o Asia Pacific (Singapore)

              o Asia Pacific (Sydney)

              o Asia Pacific (Tokyo)

              o Europe (Ireland)

              o South America (So Paulo)

          ID -> (string)
              Container for the ID of the owner.

       StorageClass -> (string)
          Class  of storage (STANDARD or REDUCED_REDUNDANCY) used to store the
          uploaded object.

       RequestCharged -> (string)
          If present, indicates that the requester  was  successfully  charged
          for the request.

       ChecksumAlgorithm -> (string)
          The algorithm that was used to create a checksum of the object.



                                                                  LIST-PARTS()
