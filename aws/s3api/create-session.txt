CREATE-SESSION()                                              CREATE-SESSION()



NAME
       create-session -

DESCRIPTION
       Creates  a  session  that establishes temporary security credentials to
       support fast authentication and authorization for  the  Zonal  endpoint
       API  operations  on directory buckets. For more information about Zonal
       endpoint API operations that include the Availability Zone in  the  re-
       quest  endpoint,  see  S3  Express  One Zone APIs in the Amazon S3 User
       Guide .

       To make Zonal endpoint API requests on a directory bucket, use the Cre-
       ateSession  API operation. Specifically, you grant s3express:CreateSes-
       sion permission to a bucket in a bucket policy or an IAM identity-based
       policy. Then, you use IAM credentials to make the CreateSession API re-
       quest on the bucket, which returns temporary security credentials  that
       include  the access key ID, secret access key, session token, and expi-
       ration. These credentials have associated  permissions  to  access  the
       Zonal  endpoint  API operations. After the session is created, you dont
       need to use other policies to grant permissions to each Zonal  endpoint
       API  individually.  Instead,  in  your Zonal endpoint API requests, you
       sign your requests by applying the temporary  security  credentials  of
       the session to the request headers and following the SigV4 protocol for
       authentication. You also apply the session token  to  the  x-amz-s3ses-
       sion-token request header for authorization. Temporary security creden-
       tials are scoped to the bucket and expire after 5  minutes.  After  the
       expiration  time,  any  calls that you make with those credentials will
       fail. You must use IAM credentials again to make  a  CreateSession  API
       request that generates a new set of temporary credentials for use. Tem-
       porary credentials cannot be extended or refreshed beyond the  original
       specified interval.

       If  you use Amazon Web Services SDKs, SDKs handle the session token re-
       freshes automatically to avoid service interruptions when a session ex-
       pires. We recommend that you use the Amazon Web Services SDKs to initi-
       ate and manage requests to the CreateSession API. For more information,
       see  Performance  guidelines  and design patterns in the Amazon S3 User
       Guide .

       NOTE:

          o You must make requests for this API operation to  the  Zonal  end-
            point.  These  endpoints  support virtual-hosted-style requests in
            the  format  https://*bucket_name*  .s3express-*az_id*   .*region*
            .amazonaws.com  .  Path-style requests are not supported. For more
            information, see Regional and Zonal endpoints  in  the  Amazon  S3
            User Guide .

          o ``CopyObject`` API operation - Unlike other Zonal endpoint API op-
            erations, the CopyObject API operation doesn't use  the  temporary
            security credentials returned from the CreateSession API operation
            for authentication and authorization. For  information  about  au-
            thentication  and authorization of the CopyObject API operation on
            directory buckets, see CopyObject .

          o ``HeadBucket`` API operation - Unlike other Zonal endpoint API op-
            erations,  the  HeadBucket API operation doesn't use the temporary
            security credentials returned from the CreateSession API operation
            for  authentication  and  authorization. For information about au-
            thentication and authorization of the HeadBucket API operation  on
            directory buckets, see HeadBucket .

          Permissions

       To obtain temporary security credentials, you must create a bucket pol-
       icy or an IAM identity-based policy that grants s3express:CreateSession
       permission  to the bucket. In a policy, you can have the s3express:Ses-
       sionMode condition key to control who can create a ReadWrite  or  Read-
       Only  session.  For  more  information about ReadWrite or ReadOnly ses-
       sions,            see            `            x-amz-create-session-mode
       https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateSession.html#API_CreateSession_RequestParameters`__
       . For example policies, see Example bucket policies for S3 Express  One
       Zone and Amazon Web Services Identity and Access Management (IAM) iden-
       tity-based policies for S3 Express One Zone in the Amazon S3 User Guide
       .

       To  grant  cross-account  access  to Zonal endpoint API operations, the
       bucket policy should also grant both accounts the  s3express:CreateSes-
       sion permission.

       If  you  want  to  encrypt objects with SSE-KMS, you must also have the
       kms:GenerateDataKey  and  the  kms:Decrypt  permissions  in  IAM  iden-
       tity-based policies and KMS key policies for the target KMS key.
          Encryption

       For  directory  buckets,  there  are  only  two  supported  options for
       server-side encryption: server-side encryption with Amazon  S3  managed
       keys  (SSE-S3)  (AES256  )  and  server-side  encryption  with KMS keys
       (SSE-KMS) (aws:kms ). We recommend that the bucket's default encryption
       uses  the  desired  encryption configuration and you don't override the
       bucket default encryption in your CreateSession requests or PUT  object
       requests.  Then,  new  objects are automatically encrypted with the de-
       sired encryption settings. For more information,  see  Protecting  data
       with  server-side encryption in the Amazon S3 User Guide . For more in-
       formation about the encryption overriding behaviors in directory  buck-
       ets,  see Specifying server-side encryption with KMS for new object up-
       loads .

       For Zonal endpoint (object-level) API operations except CopyObject  and
       UploadPartCopy  ,  you  authenticate  and  authorize  requests  through
       CreateSession for low latency. To encrypt new objects  in  a  directory
       bucket with SSE-KMS, you must specify SSE-KMS as the directory bucket's
       default encryption  configuration  with  a  KMS  key  (specifically,  a
       customer  managed key ). Then, when a session is created for Zonal end-
       point API operations, new objects are automatically encrypted  and  de-
       crypted with SSE-KMS and S3 Bucket Keys during the session.

       NOTE:
          Only  1  customer  managed key is supported per directory bucket for
          the lifetime of the bucket. Amazon Web Services managed key  (aws/s3
          )  isn't  supported.  After you specify SSE-KMS as your bucket's de-
          fault encryption configuration with  a  customer  managed  key,  you
          can't  change the customer managed key for the bucket's SSE-KMS con-
          figuration.

       In the Zonal endpoint API calls (except CopyObject and UploadPartCopy )
       using  the  REST  API,  you can't override the values of the encryption
       settings  (x-amz-server-side-encryption   ,   x-amz-server-side-encryp-
       tion-aws-kms-key-id   ,   x-amz-server-side-encryption-context   ,  and
       x-amz-server-side-encryption-bucket-key-enabled ) from  the  CreateSes-
       sion  request.  You  don't  need to explicitly specify these encryption
       settings values in Zonal endpoint API calls, and Amazon S3 will use the
       encryption  settings  values  from the CreateSession request to protect
       new objects in the directory bucket.

       NOTE:
              When you use the CLI or the Amazon Web Services SDKs,  for  Cre-
              ateSession  , the session token refreshes automatically to avoid
              service interruptions when a session expires.  The  CLI  or  the
              Amazon  Web  Services  SDKs  use the bucket's default encryption
              configuration for the CreateSession request. It's not  supported
              to  override the encryption settings values in the CreateSession
              request.  Also,  in  the  Zonal  endpoint  API   calls   (except
              CopyObject  and UploadPartCopy ), it's not supported to override
              the values of the encryption settings from the CreateSession re-
              quest.

              HTTP Host header syntax

          Directory  buckets  -  The HTTP Host header syntax is `` Bucket_name
          .s3express-az_id .*region* .amazonaws.com`` .

       See also: AWS API Documentation

SYNOPSIS
            create-session
          [--session-mode <value>]
          --bucket <value>
          [--server-side-encryption <value>]
          [--ssekms-key-id <value>]
          [--ssekms-encryption-context <value>]
          [--bucket-key-enabled | --no-bucket-key-enabled]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --session-mode (string)
          Specifies the mode of the session that will be created, either Read-
          Write  or  ReadOnly  . By default, a ReadWrite session is created. A
          ReadWrite session is capable of executing all the Zonal endpoint API
          operations  on a directory bucket. A ReadOnly session is constrained
          to execute the following Zonal endpoint API operations: GetObject  ,
          HeadObject  ,  ListObjectsV2 , GetObjectAttributes , ListParts , and
          ListMultipartUploads .

          Possible values:

          o ReadOnly

          o ReadWrite

       --bucket (string)
          The name of the bucket that you create a session for.

       --server-side-encryption (string)
          The server-side encryption algorithm to use when you  store  objects
          in the directory bucket.

          For  directory  buckets,  there  are  only two supported options for
          server-side encryption: server-side encryption with Amazon  S3  man-
          aged  keys  (SSE-S3)  (AES256  ) and server-side encryption with KMS
          keys (SSE-KMS) (aws:kms ). By default, Amazon S3 encrypts data  with
          SSE-S3.  For  more information, see Protecting data with server-side
          encryption in the Amazon S3 User Guide .

          Possible values:

          o AES256

          o aws:kms

          o aws:kms:dsse

       --ssekms-key-id (string)
          If you specify x-amz-server-side-encryption with aws:kms , you  must
          specify  the x-amz-server-side-encryption-aws-kms-key-id header with
          the ID (Key ID or Key ARN) of the KMS symmetric encryption  customer
          managed  key  to use. Otherwise, you get an HTTP 400 Bad Request er-
          ror. Only use the key ID or key ARN. The key alias format of the KMS
          key  isn't supported. Also, if the KMS key doesn't exist in the same
          account that't issuing the command, you must use the  full  Key  ARN
          not the Key ID.

          Your  SSE-KMS  configuration can only support 1 customer managed key
          per directory bucket for the lifetime of the bucket. Amazon Web Ser-
          vices managed key (aws/s3 ) isn't supported.

       --ssekms-encryption-context (string)
          Specifies the Amazon Web Services KMS Encryption Context as an addi-
          tional encryption context to use for object encryption. The value of
          this  header  is  a  Base64-encoded  string of a UTF-8 encoded JSON,
          which contains the encryption context as key-value pairs. This value
          is  stored  as  object  metadata and automatically gets passed on to
          Amazon Web Services KMS for future GetObject operations on this  ob-
          ject.
              General  purpose  buckets  - This value must be explicitly added
              during CopyObject operations if you want an  additional  encryp-
              tion   context  for  your  object.  For  more  information,  see
              Encryption context in the Amazon S3 User Guide .

              Directory buckets - You can optionally provide an  explicit  en-
              cryption context value. The value must match the default encryp-
              tion context - the bucket Amazon Resource Name (ARN).  An  addi-
              tional encryption context value is not supported.

       --bucket-key-enabled | --no-bucket-key-enabled (boolean)
          Specifies  whether  Amazon S3 should use an S3 Bucket Key for object
          encryption with server-side encryption using KMS keys (SSE-KMS).

          S3 Bucket Keys are always enabled for GET and PUT  operations  in  a
          directory  bucket  and  cant be disabled. S3 Bucket Keys aren't sup-
          ported, when you copy SSE-KMS encrypted objects from general purpose
          buckets to directory buckets, from directory buckets to general pur-
          pose buckets, or between directory  buckets,  through  CopyObject  ,
          UploadPartCopy , the Copy operation in Batch Operations , or the im-
          port jobs . In this case, Amazon S3 makes a call to KMS every time a
          copy request is made for a KMS-encrypted object.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       ServerSideEncryption -> (string)
          The server-side encryption algorithm used when you store objects  in
          the directory bucket.

       SSEKMSKeyId -> (string)
          If  you  specify  x-amz-server-side-encryption  with  aws:kms , this
          header indicates the ID of the  KMS  symmetric  encryption  customer
          managed key that was used for object encryption.

       SSEKMSEncryptionContext -> (string)
          If present, indicates the Amazon Web Services KMS Encryption Context
          to use for  object  encryption.  The  value  of  this  header  is  a
          Base64-encoded  string  of  a UTF-8 encoded JSON, which contains the
          encryption context as key-value pairs. This value is stored  as  ob-
          ject  metadata  and  automatically gets passed on to Amazon Web Ser-
          vices KMS for future GetObject operations on this object.

       BucketKeyEnabled -> (boolean)
          Indicates whether to use an S3 Bucket Key for server-side encryption
          with KMS keys (SSE-KMS).

       Credentials -> (structure)
          The  established temporary security credentials for the created ses-
          sion.

          AccessKeyId -> (string)
              A unique identifier that's associated with a secret access  key.
              The access key ID and the secret access key are used together to
              sign programmatic Amazon  Web  Services  requests  cryptographi-
              cally.

          SecretAccessKey -> (string)
              A  key  that's  used with the access key ID to cryptographically
              sign programmatic Amazon Web Services requests.  Signing  a  re-
              quest  identifies the sender and prevents the request from being
              altered.

          SessionToken -> (string)
              A part of the temporary security credentials. The session  token
              is used to validate the temporary security credentials.

          Expiration -> (timestamp)
              Temporary  security  credentials expire after a specified inter-
              val. After temporary credentials expire, any calls that you make
              with those credentials will fail. So you must generate a new set
              of temporary credentials. Temporary credentials  cannot  be  ex-
              tended or refreshed beyond the original specified interval.



                                                              CREATE-SESSION()
