PUT-BUCKET-CORS()                                            PUT-BUCKET-CORS()



NAME
       put-bucket-cors -

DESCRIPTION
       Sets  the  cors configuration for your bucket. If the configuration ex-
       ists, Amazon S3 replaces it.

       To use this operation, you must be allowed to perform the s3:PutBucket-
       CORS  action.  By default, the bucket owner has this permission and can
       grant it to others.

       You set this configuration on a bucket so that the bucket  can  service
       cross-origin  requests. For example, you might want to enable a request
       whose origin is http://www.example.com to access your Amazon S3  bucket
       at my.example.bucket.com by using the browser's XMLHttpRequest capabil-
       ity.

       To enable cross-origin resource sharing (CORS) on a bucket, you add the
       cors subresource to the bucket. The cors subresource is an XML document
       in which you configure rules that identify origins and the HTTP methods
       that  can  be executed on your bucket. The document is limited to 64 KB
       in size.

       When Amazon S3 receives a cross-origin request (or a pre-flight OPTIONS
       request)  against  a bucket, it evaluates the cors configuration on the
       bucket and uses the first  CORSRule  rule  that  matches  the  incoming
       browser  request to enable a cross-origin request. For a rule to match,
       the following conditions must be met:

       o The request's Origin header must match AllowedOrigin elements.

       o The request method (for example, GET, PUT, HEAD, and so  on)  or  the
         Access-Control-Request-Method  header in case of a pre-flight OPTIONS
         request must be one of the AllowedMethod elements.

       o Every header specified in the Access-Control-Request-Headers  request
         header of a pre-flight request must match an AllowedHeader element.

       For  more  information about CORS, go to Enabling Cross-Origin Resource
       Sharing in the Amazon S3 User Guide .
          Related Resources

       o GetBucketCors

       o DeleteBucketCors

       o RESTOPTIONSobject

       See also: AWS API Documentation

SYNOPSIS
            put-bucket-cors
          --bucket <value>
          --cors-configuration <value>
          [--content-md5 <value>]
          [--checksum-algorithm <value>]
          [--expected-bucket-owner <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --bucket (string)
          Specifies the bucket impacted by the cors configuration.

       --cors-configuration (structure)
          Describes the cross-origin access configuration for  objects  in  an
          Amazon  S3  bucket.  For more information, see Enabling Cross-Origin
          Resource Sharing in the Amazon S3 User Guide .

          CORSRules -> (list)
              A set of origins and methods (cross-origin access that you  want
              to allow). You can add up to 100 rules to the configuration.

              (structure)
                 Specifies a cross-origin access rule for an Amazon S3 bucket.

                 ID -> (string)
                     Unique  identifier  for  the  rule.  The  value cannot be
                     longer than 255 characters.

                 AllowedHeaders -> (list)
                     Headers that  are  specified  in  the  Access-Control-Re-
                     quest-Headers header. These headers are allowed in a pre-
                     flight OPTIONS request. In response to any preflight  OP-
                     TIONS  request,  Amazon  S3 returns any requested headers
                     that are allowed.

                     (string)

                 AllowedMethods -> (list)
                     An HTTP method that you  allow  the  origin  to  execute.
                     Valid values are GET , PUT , HEAD , POST , and DELETE .

                     (string)

                 AllowedOrigins -> (list)
                     One  or more origins you want customers to be able to ac-
                     cess the bucket from.

                     (string)

                 ExposeHeaders -> (list)
                     One or more headers in the response that  you  want  cus-
                     tomers  to be able to access from their applications (for
                     example, from a JavaScript XMLHttpRequest object).

                     (string)

                 MaxAgeSeconds -> (integer)
                     The time in seconds that your browser  is  to  cache  the
                     preflight response for the specified resource.

       JSON Syntax:

          {
            "CORSRules": [
              {
                "ID": "string",
                "AllowedHeaders": ["string", ...],
                "AllowedMethods": ["string", ...],
                "AllowedOrigins": ["string", ...],
                "ExposeHeaders": ["string", ...],
                "MaxAgeSeconds": integer
              }
              ...
            ]
          }

       --content-md5 (string)
          The  base64-encoded 128-bit MD5 digest of the data. This header must
          be used as a message integrity check to verify that the request body
          was not corrupted in transit. For more information, go to RFC 1864.

          For  requests made using the Amazon Web Services Command Line Inter-
          face (CLI) or Amazon Web Services SDKs, this field is calculated au-
          tomatically.

       --checksum-algorithm (string)
          Indicates  the  algorithm used to create the checksum for the object
          when using the SDK. This header  will  not  provide  any  additional
          functionality  if not using the SDK. When sending this header, there
          must be a corresponding x-amz-checksum or x-amz-trailer header sent.
          Otherwise, Amazon S3 fails the request with the HTTP status code 400
          Bad Request . For more information, see Checking object integrity in
          the Amazon S3 User Guide .

          If  you  provide  an individual checksum, Amazon S3 ignores any pro-
          vided ChecksumAlgorithm parameter.

          Possible values:

          o CRC32

          o CRC32C

          o SHA1

          o SHA256

       --expected-bucket-owner (string)
          The account ID of the expected bucket owner. If the bucket is  owned
          by  a different account, the request fails with the HTTP status code
          403 Forbidden (access denied).

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       The following example enables  PUT,  POST,  and  DELETE  requests  from
       www.example.com, and enables GET requests from any domain:

          aws s3api put-bucket-cors --bucket MyBucket --cors-configuration file://cors.json

          cors.json:
          {
            "CORSRules": [
              {
                "AllowedOrigins": ["http://www.example.com"],
                "AllowedHeaders": ["*"],
                "AllowedMethods": ["PUT", "POST", "DELETE"],
                "MaxAgeSeconds": 3000,
                "ExposeHeaders": ["x-amz-server-side-encryption"]
              },
              {
                "AllowedOrigins": ["*"],
                "AllowedHeaders": ["Authorization"],
                "AllowedMethods": ["GET"],
                "MaxAgeSeconds": 3000
              }
            ]
          }

OUTPUT
       None



                                                             PUT-BUCKET-CORS()
