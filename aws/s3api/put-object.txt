PUT-OBJECT()                                                      PUT-OBJECT()



NAME
       put-object -

DESCRIPTION
       Adds an object to a bucket.

       NOTE:

          o Amazon S3 never adds partial objects; if you receive a success re-
            sponse, Amazon S3 added the entire object to the bucket. You  can-
            not use PutObject to only update a single piece of metadata for an
            existing object. You must put the entire object with updated meta-
            data if you want to update some values.

          o If  your  bucket uses the bucket owner enforced setting for Object
            Ownership, ACLs are disabled and no longer affect permissions. All
            objects  written to the bucket by any account will be owned by the
            bucket owner.

          o Directory buckets - For directory buckets, you must make  requests
            for this API operation to the Zonal endpoint. These endpoints sup-
            port virtual-hosted-style requests in the format
            ``
            https://bucket_name    .s3express-az_id     .*region*     .amazon-
            aws.com/key-name  ``  . Path-style requests are not supported. For
            more information, see Regional and Zonal endpoints in  the  Amazon
            S3 User Guide .

          System Message: WARNING/2 (<string>:, line 31)
            Inline literal start-string without end-string.

       Amazon  S3  is  a distributed system. If it receives multiple write re-
       quests for the same object simultaneously, it overwrites  all  but  the
       last object written. However, Amazon S3 provides features that can mod-
       ify this behavior:

       o S3 Object Lock - To prevent objects from being deleted  or  overwrit-
         ten, you can use Amazon S3 Object Lock in the Amazon S3 User Guide .

       NOTE:
          This functionality is not supported for directory buckets.

       o S3 Versioning - When you enable versioning for a bucket, if Amazon S3
         receives multiple write requests for the same object  simultaneously,
         it stores all versions of the objects. For each write request that is
         made to the same object, Amazon S3 automatically generates  a  unique
         version  ID  of  that  object  being stored in Amazon S3. You can re-
         trieve, replace, or delete any version of the object. For more infor-
         mation  about  versioning,  see  Adding Objects to Versioning-Enabled
         Buckets in the Amazon S3 User Guide . For information about returning
         the versioning state of a bucket, see GetBucketVersioning .

       NOTE:
              This functionality is not supported for directory buckets.

          Permissions

       o General  purpose  bucket  permissions - The following permissions are
         required in your policies when your PutObject request  includes  spe-
         cific headers.

         o

           **
           s3:PutObject  **  - To successfully complete the PutObject request,
           you must always have the s3:PutObject permission on a bucket to add
           an object to it.

         System Message: WARNING/2 (<string>:, line 66)
           Inline strong start-string without end-string.

         o

           **
           s3:PutObjectAcl ** - To successfully change the objects ACL of your
           PutObject request, you must have the s3:PutObjectAcl .

         System Message: WARNING/2 (<string>:, line 68)
           Inline strong start-string without end-string.

         o

           **
           s3:PutObjectTagging ** - To successfully set the tag-set with  your
           PutObject request, you must have the s3:PutObjectTagging .

         System Message: WARNING/2 (<string>:, line 70)
           Inline strong start-string without end-string.

       o Directory  bucket permissions - To grant access to this API operation
         on a directory bucket, we recommend that you use the `  CreateSession
         https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateSession.html`__
         API operation  for  session-based  authorization.  Specifically,  you
         grant  the s3express:CreateSession permission to the directory bucket
         in a bucket policy or an IAM identity-based policy.  Then,  you  make
         the  CreateSession  API call on the bucket to obtain a session token.
         With the session token in your request header, you can make  API  re-
         quests  to  this operation. After the session token expires, you make
         another CreateSession API call to generate a new  session  token  for
         use.  Amazon  Web Services CLI or SDKs create session and refresh the
         session token automatically to avoid  service  interruptions  when  a
         session expires. For more information about authorization, see ` Cre-
         ateSession
         https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateSession.html`__
         . If the object is encrypted with SSE-KMS, you  must  also  have  the
         kms:GenerateDataKey and kms:Decrypt permissions in IAM identity-based
         policies and KMS key policies for the KMS key.

         Data integrity with Content-MD5

       o General purpose bucket  -  To  ensure  that  data  is  not  corrupted
         traversing the network, use the Content-MD5 header. When you use this
         header, Amazon S3 checks the object against the  provided  MD5  value
         and, if they do not match, Amazon S3 returns an error. Alternatively,
         when the object's ETag is its MD5 digest, you can calculate  the  MD5
         while  putting  the object to Amazon S3 and compare the returned ETag
         to the calculated MD5 value.

       o Directory bucket - This functionality is not supported for  directory
         buckets.

         HTTP Host header syntax
          Directory  buckets  -  The HTTP Host header syntax is `` Bucket_name
          .s3express-az_id .*region* .amazonaws.com`` .

       For more information about related Amazon S3 APIs, see the following:

       o CopyObject

       o DeleteObject

       See also: AWS API Documentation

SYNOPSIS
            put-object
          [--acl <value>]
          [--body <value>]
          --bucket <value>
          [--cache-control <value>]
          [--content-disposition <value>]
          [--content-encoding <value>]
          [--content-language <value>]
          [--content-length <value>]
          [--content-md5 <value>]
          [--content-type <value>]
          [--checksum-algorithm <value>]
          [--checksum-crc32 <value>]
          [--checksum-crc32-c <value>]
          [--checksum-sha1 <value>]
          [--checksum-sha256 <value>]
          [--expires <value>]
          [--if-none-match <value>]
          [--grant-full-control <value>]
          [--grant-read <value>]
          [--grant-read-acp <value>]
          [--grant-write-acp <value>]
          --key <value>
          [--metadata <value>]
          [--server-side-encryption <value>]
          [--storage-class <value>]
          [--website-redirect-location <value>]
          [--sse-customer-algorithm <value>]
          [--sse-customer-key <value>]
          [--sse-customer-key-md5 <value>]
          [--ssekms-key-id <value>]
          [--ssekms-encryption-context <value>]
          [--bucket-key-enabled | --no-bucket-key-enabled]
          [--request-payer <value>]
          [--tagging <value>]
          [--object-lock-mode <value>]
          [--object-lock-retain-until-date <value>]
          [--object-lock-legal-hold-status <value>]
          [--expected-bucket-owner <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --acl (string)
          The canned ACL to apply to the object.  For  more  information,  see
          Canned ACL in the Amazon S3 User Guide .

          When  adding  a  new  object, you can use headers to grant ACL-based
          permissions to individual Amazon Web Services accounts or to  prede-
          fined  groups defined by Amazon S3. These permissions are then added
          to the ACL on the object. By default, all objects are private.  Only
          the  owner has full access control. For more information, see Access
          Control List (ACL) Overview and Managing ACLs Using the REST API  in
          the Amazon S3 User Guide .

          If the bucket that you're uploading objects to uses the bucket owner
          enforced setting for S3 Object Ownership, ACLs are disabled  and  no
          longer affect permissions. Buckets that use this setting only accept
          PUT requests that don't specify an ACL or PUT requests that  specify
          bucket  owner  full control ACLs, such as the bucket-owner-full-con-
          trol canned ACL or an equivalent form of this ACL expressed  in  the
          XML  format. PUT requests that contain other ACLs (for example, cus-
          tom grants to certain Amazon Web Services accounts) fail and  return
          a  400 error with the error code AccessControlListNotSupported . For
          more information, see Controlling ownership of objects and disabling
          ACLs in the Amazon S3 User Guide .

          NOTE:

              o This functionality is not supported for directory buckets.

              o This functionality is not supported for Amazon S3 on Outposts.

          Possible values:

          o private

          o public-read

          o public-read-write

          o authenticated-read

          o aws-exec-read

          o bucket-owner-read

          o bucket-owner-full-control

       --body (streaming blob)
          Object data.

          NOTE:
              This  argument is of type: streaming blob. Its value must be the
              path to a file (e.g. path/to/file) and must not be prefixed with
              file:// or fileb://

       --bucket (string)
          The bucket name to which the PUT action was initiated.
              Directory buckets - When you use this operation with a directory
              bucket, you must use virtual-hosted-style requests in the format
              ``  Bucket_name  .s3express-az_id  .*region*  .amazonaws.com`` .
              Path-style requests are not supported.  Directory  bucket  names
              must  be  unique  in  the chosen Availability Zone. Bucket names
              must follow the format `` bucket_base_name --az-id --x-s3`` (for
              example, `` DOC-EXAMPLE-BUCKET --usw2-az1 --x-s3`` ). For infor-
              mation about bucket naming restrictions,  see  Directory  bucket
              naming rules in the Amazon S3 User Guide .

              Access  points  - When you use this action with an access point,
              you must provide the alias of the access point in place  of  the
              bucket  name or specify the access point ARN. When using the ac-
              cess point ARN, you must direct requests  to  the  access  point
              hostname.  The access point hostname takes the form AccessPoint-
              Name -AccountId  .s3-accesspoint.*Region*  .amazonaws.com.  When
              using  this  action  with an access point through the Amazon Web
              Services SDKs, you provide the access point ARN in place of  the
              bucket  name.  For more information about access point ARNs, see
              Using access points in the Amazon S3 User Guide .

          NOTE:
                 Access points and Object Lambda access points  are  not  sup-
                 ported by directory buckets.

              S3 on Outposts - When you use this action with Amazon S3 on Out-
              posts, you must direct requests to the S3 on Outposts  hostname.
              The  S3  on  Outposts hostname takes the form `` AccessPointName
              -AccountId .*outpostID* .s3-outposts.*Region* .amazonaws.com`` .
              When  you use this action with S3 on Outposts through the Amazon
              Web Services SDKs, you provide the Outposts access point ARN  in
              place  of the bucket name. For more information about S3 on Out-
              posts ARNs, see What is S3 on Outposts? in the  Amazon  S3  User
              Guide .

       --cache-control (string)
          Can  be  used  to  specify  caching behavior along the request/reply
          chain.          For          more          information,          see
          http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9 .

       --content-disposition (string)
          Specifies presentational information for the object. For more infor-
          mation, see https://www.rfc-editor.org/rfc/rfc6266#section-4 .

       --content-encoding (string)
          Specifies what content encodings have been applied to the object and
          thus  what  decoding  mechanisms  must  be applied to obtain the me-
          dia-type referenced by the Content-Type header field. For  more  in-
          formation,                                                       see
          https://www.rfc-editor.org/rfc/rfc9110.html#field.content-encoding .

       --content-language (string)
          The language the content is in.

       --content-length (long)
          Size of the body in bytes. This parameter is useful when the size of
          the  body  cannot be determined automatically. For more information,
          see  https://www.rfc-editor.org/rfc/rfc9110.html#name-content-length
          .

       --content-md5 (string)
          The  base64-encoded  128-bit  MD5 digest of the message (without the
          headers) according to RFC 1864. This header can be used as a message
          integrity  check  to  verify that the data is the same data that was
          originally sent. Although it is optional,  we  recommend  using  the
          Content-MD5 mechanism as an end-to-end integrity check. For more in-
          formation about REST request authentication, see REST Authentication
          .

          NOTE:
              The  Content-MD5 header is required for any request to upload an
              object with a retention period configured using Amazon S3 Object
              Lock.  For  more  information  about  Amazon S3 Object Lock, see
              Amazon S3 Object Lock Overview in the Amazon S3 User Guide .

          NOTE:
              This functionality is not supported for directory buckets.

       --content-type (string)
          A standard MIME type describing the format of the contents. For more
          information,                                                     see
          https://www.rfc-editor.org/rfc/rfc9110.html#name-content-type .

       --checksum-algorithm (string)
          Indicates the algorithm used to create the checksum for  the  object
          when  you  use  the SDK. This header will not provide any additional
          functionality if you don't use the SDK. When you send  this  header,
          there  must  be  a  corresponding  x-amz-checksum-*algorithm*  `` or
          ``x-amz-trailer header sent. Otherwise, Amazon S3 fails the  request
          with the HTTP status code 400 Bad Request .

          For the
          ``
          x-amz-checksum-algorithm `` header, replace `` algorithm `` with the
          supported algorithm from the following list:

          System Message: WARNING/2 (<string>:, line 351)
                 Inline literal start-string without end-string.

          o CRC32

          o CRC32C

          o SHA1

          o SHA256

          For more information, see Checking object integrity in the Amazon S3
          User Guide .

          If  the  individual  checksum value you provide through x-amz-check-
          sum-*algorithm* `` doesn't match  the  checksum  algorithm  you  set
          through  ``x-amz-sdk-checksum-algorithm , Amazon S3 ignores any pro-
          vided ChecksumAlgorithm parameter and uses  the  checksum  algorithm
          that matches the provided value in
          ``
          x-amz-checksum-algorithm `` .

          System Message: WARNING/2 (<string>:, line 371)
                 Inline literal start-string without end-string.

                 NOTE:
              For  directory  buckets,  when you use Amazon Web Services SDKs,
              CRC32 is the default checksum algorithm that's used for  perfor-
              mance.

          Possible values:

          o CRC32

          o CRC32C

          o SHA1

          o SHA256

       --checksum-crc32 (string)
          This header can be used as a data integrity check to verify that the
          data received is the same data that was originally sent. This header
          specifies  the  base64-encoded, 32-bit CRC32 checksum of the object.
          For more information, see Checking object integrity in the Amazon S3
          User Guide .

       --checksum-crc32-c (string)
          This header can be used as a data integrity check to verify that the
          data received is the same data that was originally sent. This header
          specifies  the base64-encoded, 32-bit CRC32C checksum of the object.
          For more information, see Checking object integrity in the Amazon S3
          User Guide .

       --checksum-sha1 (string)
          This header can be used as a data integrity check to verify that the
          data received is the same data that was originally sent. This header
          specifies  the  base64-encoded,  160-bit SHA-1 digest of the object.
          For more information, see Checking object integrity in the Amazon S3
          User Guide .

       --checksum-sha256 (string)
          This header can be used as a data integrity check to verify that the
          data received is the same data that was originally sent. This header
          specifies  the base64-encoded, 256-bit SHA-256 digest of the object.
          For more information, see Checking object integrity in the Amazon S3
          User Guide .

       --expires (timestamp)
          The  date  and  time at which the object is no longer cacheable. For
          more                        information,                         see
          https://www.rfc-editor.org/rfc/rfc7234#section-5.3 .

       --if-none-match (string)
          Uploads  the object only if the object key name does not already ex-
          ist in the bucket specified. Otherwise, Amazon S3 returns a 412 Pre-
          condition Failed error.

          If a conflicting operation occurs during the upload S3 returns a 409
          ConditionalRequestConflict response. On a  409  failure  you  should
          retry the upload.

          Expects the '*' (asterisk) character.

          For  more  information about conditional requests, see RFC 7232 , or
          Conditional requests in the Amazon S3 User Guide .

       --grant-full-control (string)
          Gives the grantee READ, READ_ACP, and WRITE_ACP permissions  on  the
          object.

          NOTE:

              o This functionality is not supported for directory buckets.

              o This functionality is not supported for Amazon S3 on Outposts.

       --grant-read (string)
          Allows grantee to read the object data and its metadata.

          NOTE:

              o This functionality is not supported for directory buckets.

              o This functionality is not supported for Amazon S3 on Outposts.

       --grant-read-acp (string)
          Allows grantee to read the object ACL.

          NOTE:

              o This functionality is not supported for directory buckets.

              o This functionality is not supported for Amazon S3 on Outposts.

       --grant-write-acp (string)
          Allows grantee to write the ACL for the applicable object.

          NOTE:

              o This functionality is not supported for directory buckets.

              o This functionality is not supported for Amazon S3 on Outposts.

       --key (string)
          Object key for which the PUT action was initiated.

       --metadata (map)
          A map of metadata to store with the object in S3.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --server-side-encryption (string)
          The  server-side  encryption  algorithm that was used when you store
          this  object  in  Amazon  S3  (for  example,  AES256  ,  aws:kms   ,
          aws:kms:dsse ).

          o General purpose buckets - You have four mutually exclusive options
            to protect data using server-side encryption in Amazon S3, depend-
            ing on how you choose to manage the encryption keys. Specifically,
            the encryption key options are Amazon S3  managed  keys  (SSE-S3),
            Amazon  Web  Services  KMS  keys  (SSE-KMS  or DSSE-KMS), and cus-
            tomer-provided  keys  (SSE-C).  Amazon  S3  encrypts   data   with
            server-side encryption by using Amazon S3 managed keys (SSE-S3) by
            default. You can optionally tell Amazon S3 to encrypt data at rest
            by  using  server-side encryption with other key options. For more
            information, see Using Server-Side Encryption  in  the  Amazon  S3
            User Guide .

          o Directory buckets - For directory buckets, there are only two sup-
            ported options for server-side encryption: server-side  encryption
            with Amazon S3 managed keys (SSE-S3) (AES256 ) and server-side en-
            cryption with KMS keys (SSE-KMS) (aws:kms ). We recommend that the
            bucket's default encryption uses the desired encryption configura-
            tion and you don't override the bucket default encryption in  your
            CreateSession  requests  or PUT object requests. Then, new objects
            are automatically encrypted with the desired encryption  settings.
            For more information, see Protecting data with server-side encryp-
            tion in the Amazon S3 User Guide . For more information about  the
            encryption   overriding   behaviors   in  directory  buckets,  see
            Specifying server-side encryption with KMS for new object  uploads
            .   In  the  Zonal  endpoint  API  calls  (except  CopyObject  and
            UploadPartCopy ) using the REST API, the encryption request  head-
            ers  must  match the encryption settings that are specified in the
            CreateSession request. You can't override the values  of  the  en-
            cryption       settings       (x-amz-server-side-encryption      ,
            x-amz-server-side-encryption-aws-kms-key-id                      ,
            x-amz-server-side-encryption-context  ,  and x-amz-server-side-en-
            cryption-bucket-key-enabled ) that are specified in the CreateSes-
            sion  request.  You don't need to explicitly specify these encryp-
            tion settings values in Zonal endpoint API calls,  and  Amazon  S3
            will use the encryption settings values from the CreateSession re-
            quest to protect new objects in the directory bucket.

          NOTE:
              When you use the CLI or the Amazon Web Services SDKs,  for  Cre-
              ateSession  , the session token refreshes automatically to avoid
              service interruptions when a session expires.  The  CLI  or  the
              Amazon  Web  Services  SDKs  use the bucket's default encryption
              configuration for the CreateSession request. It's not  supported
              to  override the encryption settings values in the CreateSession
              request. So in the Zonal endpoint API calls  (except  CopyObject
              and  UploadPartCopy ), the encryption request headers must match
              the default encryption configuration of the directory bucket.

          Possible values:

          o AES256

          o aws:kms

          o aws:kms:dsse

       --storage-class (string)
          By default, Amazon S3 uses the STANDARD Storage Class to store newly
          created objects. The STANDARD storage class provides high durability
          and high availability. Depending on performance needs, you can spec-
          ify  a  different  Storage  Class. For more information, see Storage
          Classes in the Amazon S3 User Guide .

          NOTE:

              o For directory buckets, only the S3 Express  One  Zone  storage
                class is supported to store newly created objects.

              o Amazon S3 on Outposts only uses the OUTPOSTS Storage Class.

          Possible values:

          o STANDARD

          o REDUCED_REDUNDANCY

          o STANDARD_IA

          o ONEZONE_IA

          o INTELLIGENT_TIERING

          o GLACIER

          o DEEP_ARCHIVE

          o OUTPOSTS

          o GLACIER_IR

          o SNOW

          o EXPRESS_ONEZONE

       --website-redirect-location (string)
          If  the  bucket  is  configured as a website, redirects requests for
          this object to another object in the same bucket or to  an  external
          URL.  Amazon  S3 stores the value of this header in the object meta-
          data. For information about object  metadata,  see  Object  Key  and
          Metadata in the Amazon S3 User Guide .

          In the following example, the request header sets the redirect to an
          object (anotherPage.html) in the same bucket:
              x-amz-website-redirect-location: /anotherPage.html

          In the following example, the request header sets the  object  redi-
          rect to another website:
              x-amz-website-redirect-location: http://www.example.com/

          For more information about website hosting in Amazon S3, see Hosting
          Websites on Amazon S3 and How to Configure Website Page Redirects in
          the Amazon S3 User Guide .

          NOTE:
              This functionality is not supported for directory buckets.

       --sse-customer-algorithm (string)
          Specifies the algorithm to use when encrypting the object (for exam-
          ple, AES256 ).

          NOTE:
              This functionality is not supported for directory buckets.

       --sse-customer-key (string)
          Specifies the customer-provided encryption key for Amazon S3 to  use
          in  encrypting data. This value is used to store the object and then
          it is discarded; Amazon S3 does not store the  encryption  key.  The
          key  must be appropriate for use with the algorithm specified in the
          x-amz-server-side-encryption-customer-algorithm header.

          NOTE:
              This functionality is not supported for directory buckets.

       --sse-customer-key-md5 (string)
          Specifies the 128-bit MD5 digest of the encryption key according  to
          RFC  1321.  Amazon S3 uses this header for a message integrity check
          to ensure that the encryption key was transmitted without error.

          NOTE:
              This functionality is not supported for directory buckets.

       --ssekms-key-id (string)
          Specifies the KMS key ID (Key ID, Key ARN, or Key Alias) to use  for
          object  encryption. If the KMS key doesn't exist in the same account
          that's issuing the command, you must use the full Key  ARN  not  the
          Key ID.
              General  purpose  buckets - If you specify x-amz-server-side-en-
              cryption with aws:kms or aws:kms:dsse ,  this  header  specifies
              the ID (Key ID, Key ARN, or Key Alias) of the KMS key to use. If
              you     specify     x-amz-server-side-encryption:aws:kms      or
              x-amz-server-side-encryption:aws:kms:dsse  ,  but do not provide
              x-amz-server-side-encryption-aws-kms-key-id , Amazon S3 uses the
              Amazon Web Services managed key (aws/s3 ) to protect the data.

              Directory  buckets - If you specify x-amz-server-side-encryption
              with aws:kms , you must  specify  the  x-amz-server-side-encryp-
              tion-aws-kms-key-id  header  with  the ID (Key ID or Key ARN) of
              the KMS symmetric encryption customer managed key to use. Other-
              wise, you get an HTTP 400 Bad Request error. Only use the key ID
              or key ARN. The key alias format of the KMS key isn't supported.
              Your  SSE-KMS  configuration can only support 1 customer managed
              key per directory bucket for the lifetime of the bucket.  Amazon
              Web Services managed key (aws/s3 ) isn't supported.

       --ssekms-encryption-context (string)
          Specifies the Amazon Web Services KMS Encryption Context as an addi-
          tional encryption context to use for object encryption. The value of
          this  header  is  a  Base64-encoded  string of a UTF-8 encoded JSON,
          which contains the encryption context as key-value pairs. This value
          is  stored  as  object  metadata and automatically gets passed on to
          Amazon Web Services KMS for future GetObject operations on this  ob-
          ject.
              General  purpose  buckets  - This value must be explicitly added
              during CopyObject operations if you want an  additional  encryp-
              tion   context  for  your  object.  For  more  information,  see
              Encryption context in the Amazon S3 User Guide .

              Directory buckets - You can optionally provide an  explicit  en-
              cryption context value. The value must match the default encryp-
              tion context - the bucket Amazon Resource Name (ARN).  An  addi-
              tional encryption context value is not supported.

       --bucket-key-enabled | --no-bucket-key-enabled (boolean)
          Specifies  whether  Amazon S3 should use an S3 Bucket Key for object
          encryption with server-side encryption using Key Management  Service
          (KMS) keys (SSE-KMS).
              General  purpose  buckets  -  Setting this header to true causes
              Amazon S3 to use an S3 Bucket Key  for  object  encryption  with
              SSE-KMS.  Also, specifying this header with a PUT action doesn't
              affect bucket-level settings for S3 Bucket Key.

              Directory buckets - S3 Bucket Keys are always  enabled  for  GET
              and  PUT  operations in a directory bucket and cant be disabled.
              S3 Bucket Keys aren't supported, when you copy SSE-KMS encrypted
              objects  from general purpose buckets to directory buckets, from
              directory buckets to general purpose buckets, or between  direc-
              tory buckets, through CopyObject , UploadPartCopy , the Copy op-
              eration in Batch Operations , or the import jobs . In this case,
              Amazon  S3 makes a call to KMS every time a copy request is made
              for a KMS-encrypted object.

       --request-payer (string)
          Confirms that the requester knows that they will be charged for  the
          request.  Bucket owners need not specify this parameter in their re-
          quests. If either the source or destination S3 bucket has  Requester
          Pays  enabled,  the  requester will pay for corresponding charges to
          copy the object. For information about downloading objects from  Re-
          quester  Pays  buckets,  see  Downloading  Objects in Requester Pays
          Buckets in the Amazon S3 User Guide .

          NOTE:
              This functionality is not supported for directory buckets.

          Possible values:

          o requester

       --tagging (string)
          The tag-set for the object. The tag-set must be encoded as URL Query
          parameters. (For example, "Key1=Value1")

          NOTE:
              This functionality is not supported for directory buckets.

       --object-lock-mode (string)
          The Object Lock mode that you want to apply to this object.

          NOTE:
              This functionality is not supported for directory buckets.

          Possible values:

          o GOVERNANCE

          o COMPLIANCE

       --object-lock-retain-until-date (timestamp)
          The date and time when you want this object's Object Lock to expire.
          Must be formatted as a timestamp parameter.

          NOTE:
              This functionality is not supported for directory buckets.

       --object-lock-legal-hold-status (string)
          Specifies whether a legal hold will be applied to this  object.  For
          more information about S3 Object Lock, see Object Lock in the Amazon
          S3 User Guide .

          NOTE:
              This functionality is not supported for directory buckets.

          Possible values:

          o ON

          o OFF

       --expected-bucket-owner (string)
          The account ID of the expected bucket owner. If the account ID  that
          you  provide  does not match the actual owner of the bucket, the re-
          quest fails with the HTTP status code 403 Forbidden (access denied).

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       The following example uses the put-object command to upload  an  object
       to Amazon S3:

          aws s3api put-object --bucket text-content --key dir-1/my_images.tar.bz2 --body my_images.tar.bz2

       The  following  example shows an upload of a video file (The video file
       is specified using Windows file system syntax.):

          aws s3api put-object --bucket text-content --key dir-1/big-video-file.mp4 --body e:\media\videos\f-sharp-3-data-services.mp4

       For more information about uploading objects, see Uploading Objects  in
       the Amazon S3 Developer Guide.

OUTPUT
       Expiration -> (string)
          If    the   expiration   is   configured   for   the   object   (see
          PutBucketLifecycleConfiguration ) in the Amazon S3 User Guide ,  the
          response  includes  this  header.  It  includes  the expiry-date and
          rule-id key-value pairs that provide information about object  expi-
          ration. The value of the rule-id is URL-encoded.

          NOTE:
              This functionality is not supported for directory buckets.

       ETag -> (string)
          Entity tag for the uploaded object.
              General  purpose  buckets - To ensure that data is not corrupted
              traversing the network, for objects where the ETag  is  the  MD5
              digest of the object, you can calculate the MD5 while putting an
              object to Amazon S3 and compare the returned ETag to the  calcu-
              lated MD5 value.

              Directory  buckets  -  The  ETag  for  the object in a directory
              bucket isn't the MD5 digest of the object.

       ChecksumCRC32 -> (string)
          The base64-encoded, 32-bit CRC32 checksum of the object.  This  will
          only  be present if it was uploaded with the object. When you use an
          API operation on an object that was  uploaded  using  multipart  up-
          loads, this value may not be a direct checksum value of the full ob-
          ject. Instead, it's a calculation based on the  checksum  values  of
          each  individual  part. For more information about how checksums are
          calculated with multipart uploads, see Checking object integrity  in
          the Amazon S3 User Guide .

       ChecksumCRC32C -> (string)
          The  base64-encoded, 32-bit CRC32C checksum of the object. This will
          only be present if it was uploaded with the object. When you use  an
          API  operation  on  an  object that was uploaded using multipart up-
          loads, this value may not be a direct checksum value of the full ob-
          ject.  Instead,  it's  a calculation based on the checksum values of
          each individual part. For more information about how  checksums  are
          calculated  with multipart uploads, see Checking object integrity in
          the Amazon S3 User Guide .

       ChecksumSHA1 -> (string)
          The base64-encoded, 160-bit SHA-1 digest of the  object.  This  will
          only be present if it was uploaded with the object. When you use the
          API operation on an object that was  uploaded  using  multipart  up-
          loads, this value may not be a direct checksum value of the full ob-
          ject. Instead, it's a calculation based on the  checksum  values  of
          each  individual  part. For more information about how checksums are
          calculated with multipart uploads, see Checking object integrity  in
          the Amazon S3 User Guide .

       ChecksumSHA256 -> (string)
          The  base64-encoded, 256-bit SHA-256 digest of the object. This will
          only be present if it was uploaded with the object. When you use  an
          API  operation  on  an  object that was uploaded using multipart up-
          loads, this value may not be a direct checksum value of the full ob-
          ject.  Instead,  it's  a calculation based on the checksum values of
          each individual part. For more information about how  checksums  are
          calculated  with multipart uploads, see Checking object integrity in
          the Amazon S3 User Guide .

       ServerSideEncryption -> (string)
          The server-side encryption algorithm used when you store this object
          in Amazon S3.

       VersionId -> (string)
          Version ID of the object.

          If  you enable versioning for a bucket, Amazon S3 automatically gen-
          erates a unique version ID for the object being  stored.  Amazon  S3
          returns  this  ID  in the response. When you enable versioning for a
          bucket, if Amazon S3 receives multiple write requests for  the  same
          object simultaneously, it stores all of the objects. For more infor-
          mation about versioning, see Adding  Objects  to  Versioning-Enabled
          Buckets  in the Amazon S3 User Guide . For information about return-
          ing the versioning state of a bucket, see GetBucketVersioning .

          NOTE:
              This functionality is not supported for directory buckets.

       SSECustomerAlgorithm -> (string)
          If server-side encryption with a  customer-provided  encryption  key
          was  requested, the response will include this header to confirm the
          encryption algorithm that's used.

          NOTE:
              This functionality is not supported for directory buckets.

       SSECustomerKeyMD5 -> (string)
          If server-side encryption with a  customer-provided  encryption  key
          was  requested, the response will include this header to provide the
          round-trip message integrity verification of  the  customer-provided
          encryption key.

          NOTE:
              This functionality is not supported for directory buckets.

       SSEKMSKeyId -> (string)
          If present, indicates the ID of the KMS key that was used for object
          encryption.

       SSEKMSEncryptionContext -> (string)
          If present, indicates the Amazon Web Services KMS Encryption Context
          to  use  for  object  encryption.  The  value  of  this  header is a
          Base64-encoded string of a UTF-8 encoded JSON,  which  contains  the
          encryption  context  as key-value pairs. This value is stored as ob-
          ject metadata and automatically gets passed on to  Amazon  Web  Ser-
          vices KMS for future GetObject operations on this object.

       BucketKeyEnabled -> (boolean)
          Indicates  whether  the  uploaded  object  uses an S3 Bucket Key for
          server-side  encryption  with  Key  Management  Service  (KMS)  keys
          (SSE-KMS).

       RequestCharged -> (string)
          If  present,  indicates  that the requester was successfully charged
          for the request.

          NOTE:
              This functionality is not supported for directory buckets.



                                                                  PUT-OBJECT()
