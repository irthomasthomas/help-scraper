PUT-BUCKET-ENCRYPTION()                                PUT-BUCKET-ENCRYPTION()



NAME
       put-bucket-encryption -

DESCRIPTION
       This  operation configures default encryption and Amazon S3 Bucket Keys
       for an existing bucket.

       NOTE:
          Directory buckets - For directory buckets, you  must  make  requests
          for  this  API  operation  to the Regional endpoint. These endpoints
          support path-style requests in the format
          ``
          https://s3express-control.*region_code*   .amazonaws.com/bucket-name
          `` . Virtual-hosted-style requests aren't supported. For more infor-
          mation, see Regional and Zonal endpoints in the Amazon S3 User Guide
          .

          System Message: WARNING/2 (<string>:, line 26)
                 Inline literal start-string without end-string.

       By  default,  all  buckets have a default encryption configuration that
       uses server-side encryption with Amazon S3 managed keys (SSE-S3).

       NOTE:

          o General purpose buckets

            o You can optionally configure default encryption for a bucket  by
              using  server-side  encryption with Key Management Service (KMS)
              keys (SSE-KMS) or dual-layer server-side encryption with  Amazon
              Web Services KMS keys (DSSE-KMS). If you specify default encryp-
              tion by using SSE-KMS, you can also configure Amazon  S3  Bucket
              Keys  . For information about the bucket default encryption fea-
              ture, see Amazon S3 Bucket Default Encryption in the  Amazon  S3
              User Guide .

            o If  you  use  PutBucketEncryption to set your default bucket en-
              cryption to SSE-KMS, you should verify that your KMS key  ID  is
              correct.  Amazon  S3 doesn't validate the KMS key ID provided in
              PutBucketEncryption requests.

          o Directory buckets - You can optionally configure  default  encryp-
            tion for a bucket by using server-side encryption with Key Manage-
            ment Service (KMS) keys (SSE-KMS).

            o We recommend that the bucket's default encryption uses  the  de-
              sired encryption configuration and you don't override the bucket
              default encryption in your CreateSession requests or PUT  object
              requests. Then, new objects are automatically encrypted with the
              desired encryption settings. For more information about the  en-
              cryption   overriding   behaviors   in  directory  buckets,  see
              Specifying server-side encryption with KMS for  new  object  up-
              loads .

            o Your  SSE-KMS  configuration can only support 1 customer managed
              key per directory bucket for the lifetime of the bucket.  Amazon
              Web Services managed key (aws/s3 ) isn't supported.

            o S3  Bucket Keys are always enabled for GET and PUT operations in
              a directory bucket and cant be disabled. S3 Bucket  Keys  aren't
              supported,  when you copy SSE-KMS encrypted objects from general
              purpose buckets to directory buckets, from directory buckets  to
              general  purpose  buckets, or between directory buckets, through
              CopyObject , UploadPartCopy , the Copy operation in Batch Opera-
              tions  ,  or  the  import jobs . In this case, Amazon S3 makes a
              call to KMS every time a copy request  is  made  for  a  KMS-en-
              crypted object.

            o When  you  specify an KMS customer managed key for encryption in
              your directory bucket, only use the key ID or key ARN.  The  key
              alias format of the KMS key isn't supported.

            o For  directory  buckets,  if  you use PutBucketEncryption to set
              your default bucket encryption to SSE-KMS, Amazon  S3  validates
              the KMS key ID provided in PutBucketEncryption requests.

       WARNING:
          If  you're specifying a customer managed KMS key, we recommend using
          a fully qualified KMS key ARN. If you use a KMS key  alias  instead,
          then KMS resolves the key within the requesters account. This behav-
          ior can result in data that's encrypted with a KMS key that  belongs
          to the requester, and not the bucket owner.

          Also,  this action requires Amazon Web Services Signature Version 4.
          For more information, see Authenticating Requests (Amazon  Web  Ser-
          vices Signature Version 4) .

          Permissions

       o General  purpose  bucket permissions - The s3:PutEncryptionConfigura-
         tion permission is required in a policy. The bucket  owner  has  this
         permission  by default. The bucket owner can grant this permission to
         others. For more information about permissions, see  Permissions  Re-
         lated  to  Bucket  Operations and Managing Access Permissions to Your
         Amazon S3 Resources in the Amazon S3 User Guide .

       o Directory bucket permissions - To grant access to this API operation,
         you  must have the s3express:PutEncryptionConfiguration permission in
         an IAM identity-based policy instead of a  bucket  policy.  Cross-ac-
         count  access  to  this API operation isn't supported. This operation
         can only be performed by the Amazon Web Services  account  that  owns
         the  resource.  For  more information about directory bucket policies
         and permissions, see Amazon Web Services Identity and Access  Manage-
         ment  (IAM)  for S3 Express One Zone in the Amazon S3 User Guide . To
         set a directory bucket default encryption with SSE-KMS, you must also
         have  the  kms:GenerateDataKey and the kms:Decrypt permissions in IAM
         identity-based policies and KMS key policies for the target KMS key.

         HTTP Host header syntax
          Directory buckets - The HTTP Host header  syntax  is  s3express-con-
          trol.*region* .amazonaws.com .

       The following operations are related to PutBucketEncryption :

       o GetBucketEncryption

       o DeleteBucketEncryption

       See also: AWS API Documentation

SYNOPSIS
            put-bucket-encryption
          --bucket <value>
          [--content-md5 <value>]
          [--checksum-algorithm <value>]
          --server-side-encryption-configuration <value>
          [--expected-bucket-owner <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --bucket (string)
          Specifies  default encryption for a bucket using server-side encryp-
          tion with different key options.
              Directory buckets - When you use this operation with a directory
              bucket,   you   must  use  path-style  requests  in  the  format
              https://s3express-control.*region_code*                 .amazon-
              aws.com/*bucket-name*  `` . Virtual-hosted-style requests aren't
              supported. Directory bucket names must be unique in  the  chosen
              Availability  Zone.  Bucket names must also follow the format ``
              *bucket_base_name* --*az_id* --x-s3 (for example,  ``  DOC-EXAM-
              PLE-BUCKET  --usw2-az1  --x-s3`` ). For information about bucket
              naming restrictions, see Directory bucket naming  rules  in  the
              Amazon S3 User Guide

       --content-md5 (string)
          The  base64-encoded 128-bit MD5 digest of the server-side encryption
          configuration.

          For requests made using the Amazon Web Services Command Line  Inter-
          face (CLI) or Amazon Web Services SDKs, this field is calculated au-
          tomatically.

          NOTE:
              This functionality is not supported for directory buckets.

       --checksum-algorithm (string)
          Indicates the algorithm used to create the checksum for  the  object
          when  you  use  the SDK. This header will not provide any additional
          functionality if you don't use the SDK. When you send  this  header,
          there must be a corresponding x-amz-checksum or x-amz-trailer header
          sent. Otherwise, Amazon S3 fails the request with  the  HTTP  status
          code 400 Bad Request . For more information, see Checking object in-
          tegrity in the Amazon S3 User Guide .

          If you provide an individual checksum, Amazon S3  ignores  any  pro-
          vided ChecksumAlgorithm parameter.

          NOTE:
              For  directory  buckets,  when you use Amazon Web Services SDKs,
              CRC32 is the default checksum algorithm that's used for  perfor-
              mance.

          Possible values:

          o CRC32

          o CRC32C

          o SHA1

          o SHA256

       --server-side-encryption-configuration (structure)
          Specifies the default server-side-encryption configuration.

          Rules -> (list)
              Container for information about a particular server-side encryp-
              tion configuration rule.

              (structure)
                 Specifies the default server-side encryption configuration.

                 NOTE:

                     o General purpose buckets - If you're specifying  a  cus-
                       tomer managed KMS key, we recommend using a fully qual-
                       ified KMS key ARN. If you use a KMS key alias  instead,
                       then  KMS  resolves  the  key within the requesters ac-
                       count. This behavior can  result  in  data  that's  en-
                       crypted  with  a KMS key that belongs to the requester,
                       and not the bucket owner.

                     o Directory buckets - When you specify  an  KMS  customer
                       managed  key  for  encryption in your directory bucket,
                       only use the key ID or key ARN. The key alias format of
                       the KMS key isn't supported.

                 ApplyServerSideEncryptionByDefault -> (structure)
                     Specifies  the default server-side encryption to apply to
                     new objects in  the  bucket.  If  a  PUT  Object  request
                     doesn't  specify any server-side encryption, this default
                     encryption will be applied.

                     SSEAlgorithm -> (string)
                        Server-side encryption algorithm to use  for  the  de-
                        fault encryption.

                        NOTE:
                            For  directory  buckets,  there  are only two sup-
                            ported values for server-side  encryption:  AES256
                            and aws:kms .

                     KMSMasterKeyID -> (string)
                        Amazon  Web Services Key Management Service (KMS) cus-
                        tomer managed key ID to use for  the  default  encryp-
                        tion.

                        NOTE:

                            o General  purpose buckets - This parameter is al-
                              lowed if and only  if  SSEAlgorithm  is  set  to
                              aws:kms or aws:kms:dsse .

                            o Directory buckets - This parameter is allowed if
                              and only if SSEAlgorithm is set to aws:kms .

                        You can specify the key ID, key alias, or  the  Amazon
                        Resource Name (ARN) of the KMS key.

                        o Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab

                        o Key                                             ARN:
                          arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab

                        o Key Alias: alias/alias-name

                        If you are using encryption with cross-account or Ama-
                        zon Web Services service operations, you  must  use  a
                        fully qualified KMS key ARN. For more information, see
                        Using encryption for cross-account operations .

                        NOTE:

                            o General purpose buckets - If you're specifying a
                              customer  managed  KMS key, we recommend using a
                              fully qualified KMS key ARN. If you  use  a  KMS
                              key  alias  instead,  then  KMS resolves the key
                              within the requesters account. This behavior can
                              result  in  data that's encrypted with a KMS key
                              that belongs  to  the  requester,  and  not  the
                              bucket owner. Also, if you use a key ID, you can
                              run into a  LogDestination  undeliverable  error
                              when creating a VPC flow log.

                            o Directory buckets - When you specify an KMS cus-
                              tomer managed key for encryption in your  direc-
                              tory bucket, only use the key ID or key ARN. The
                              key alias format of the KMS key isn't supported.

                        WARNING:
                            Amazon S3 only supports symmetric  encryption  KMS
                            keys. For more information, see Asymmetric keys in
                            Amazon Web Services KMS in the Amazon Web Services
                            Key Management Service Developer Guide .

                 BucketKeyEnabled -> (boolean)
                     Specifies  whether  Amazon S3 should use an S3 Bucket Key
                     with server-side encryption using KMS (SSE-KMS)  for  new
                     objects in the bucket. Existing objects are not affected.
                     Setting the BucketKeyEnabled element to true causes  Ama-
                     zon S3 to use an S3 Bucket Key.

                     NOTE:

                        o General  purpose buckets - By default, S3 Bucket Key
                          is not enabled. For more information, see Amazon  S3
                          Bucket Keys in the Amazon S3 User Guide .

                        o Directory  buckets  -  S3 Bucket Keys are always en-
                          abled for GET and  PUT  operations  in  a  directory
                          bucket  and  cant be disabled. S3 Bucket Keys aren't
                          supported, when you copy SSE-KMS  encrypted  objects
                          from  general  purpose buckets to directory buckets,
                          from directory buckets to general  purpose  buckets,
                          or  between  directory buckets, through CopyObject ,
                          UploadPartCopy , the Copy operation in Batch  Opera-
                          tions , or the import jobs . In this case, Amazon S3
                          makes a call to KMS every time  a  copy  request  is
                          made for a KMS-encrypted object.

       JSON Syntax:

          {
            "Rules": [
              {
                "ApplyServerSideEncryptionByDefault": {
                  "SSEAlgorithm": "AES256"|"aws:kms"|"aws:kms:dsse",
                  "KMSMasterKeyID": "string"
                },
                "BucketKeyEnabled": true|false
              }
              ...
            ]
          }

       --expected-bucket-owner (string)
          The  account ID of the expected bucket owner. If the account ID that
          you provide does not match the actual owner of the bucket,  the  re-
          quest fails with the HTTP status code 403 Forbidden (access denied).

          NOTE:
              For  directory buckets, this header is not supported in this API
              operation. If you specify this header, the  request  fails  with
              the HTTP status code 501 Not Implemented .

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To configure server-side encryption for a bucket

       The  following  put-bucket-encryption example sets AES256 encryption as
       the default for the specified bucket.

          aws s3api put-bucket-encryption \
              --bucket my-bucket \
              --server-side-encryption-configuration '{"Rules": [{"ApplyServerSideEncryptionByDefault": {"SSEAlgorithm": "AES256"}}]}'

       This command produces no output.

OUTPUT
       None



                                                       PUT-BUCKET-ENCRYPTION()
