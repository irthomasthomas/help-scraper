GET-OBJECT-ATTRIBUTES()                                GET-OBJECT-ATTRIBUTES()



NAME
       get-object-attributes -

DESCRIPTION
       Retrieves  all the metadata from an object without returning the object
       itself. This operation is useful if you're interested only  in  an  ob-
       ject's metadata.
          GetObjectAttributes  combines  the  functionality  of HeadObject and
          ListParts . All of the data returned with each of  those  individual
          calls can be returned with a single call to GetObjectAttributes .

       NOTE:
              Directory  buckets  -  For  directory buckets, you must make re-
              quests for this API operation to the Zonal endpoint. These  end-
              points support virtual-hosted-style requests in the format
              ``
              https://bucket_name    .s3express-az_id    .*region*    .amazon-
              aws.com/key-name `` . Path-style requests are not supported. For
              more information, see Regional and Zonal endpoints in the Amazon
              S3 User Guide .

              System Message: WARNING/2 (<string>:, line 30)
                     Inline literal start-string without end-string.

          Permissions

       o General purpose bucket permissions - To use GetObjectAttributes , you
         must have READ access to the object. The permissions that you need to
         use this operation with depend on whether the bucket is versioned. If
         the  bucket  is  versioned, you need both the s3:GetObjectVersion and
         s3:GetObjectVersionAttributes permissions for this operation. If  the
         bucket  is  not versioned, you need the s3:GetObject and s3:GetObjec-
         tAttributes permissions. For more information, see Specifying Permis-
         sions  in  a  Policy in the Amazon S3 User Guide . If the object that
         you request does not exist, the error Amazon S3  returns  depends  on
         whether you also have the s3:ListBucket permission.

         o If  you  have the s3:ListBucket permission on the bucket, Amazon S3
           returns an HTTP status code 404 Not Found ("no such key") error.

         o If you don't have the s3:ListBucket permission, Amazon  S3  returns
           an HTTP status code 403 Forbidden ("access denied") error.

       o Directory  bucket permissions - To grant access to this API operation
         on a directory bucket, we recommend that you use the `  CreateSession
         https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateSession.html`__
         API operation  for  session-based  authorization.  Specifically,  you
         grant  the s3express:CreateSession permission to the directory bucket
         in a bucket policy or an IAM identity-based policy.  Then,  you  make
         the  CreateSession  API call on the bucket to obtain a session token.
         With the session token in your request header, you can make  API  re-
         quests  to  this operation. After the session token expires, you make
         another CreateSession API call to generate a new  session  token  for
         use.  Amazon  Web Services CLI or SDKs create session and refresh the
         session token automatically to avoid  service  interruptions  when  a
         session expires. For more information about authorization, see ` Cre-
         ateSession
         https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateSession.html`__
         .

         Encryption

       NOTE:
          Encryption  request  headers,  like  x-amz-server-side-encryption  ,
          should not be sent for HEAD requests if your object uses server-side
          encryption  with  Key  Management  Service  (KMS)  keys   (SSE-KMS),
          dual-layer  server-side encryption with Amazon Web Services KMS keys
          (DSSE-KMS), or server-side encryption with Amazon S3 managed encryp-
          tion  keys (SSE-S3). The x-amz-server-side-encryption header is used
          when you PUT an object to S3 and  want  to  specify  the  encryption
          method.  If  you  include this header in a GET request for an object
          that uses these types of keys, youll get an HTTP 400 Bad Request er-
          ror.  It's  because  the encryption method can't be changed when you
          retrieve the object.

       If you encrypt an object by  using  server-side  encryption  with  cus-
       tomer-provided  encryption  keys  (SSE-C)  when you store the object in
       Amazon S3, then when you retrieve the metadata  from  the  object,  you
       must  use  the  following headers to provide the encryption key for the
       server to be able to retrieve the object's metadata. The headers are:

       o x-amz-server-side-encryption-customer-algorithm

       o x-amz-server-side-encryption-customer-key

       o x-amz-server-side-encryption-customer-key-MD5

       For more information about SSE-C,  see  Server-Side  Encryption  (Using
       Customer-Provided Encryption Keys) in the Amazon S3 User Guide .

       NOTE:
                 Directory  bucket  permissions  - For directory buckets, only
                 server-side encryption with Amazon S3 managed  keys  (SSE-S3)
                 (AES256 ) is supported.

              Versioning

          Directory  buckets  -  S3 Versioning isn't enabled and supported for
          directory buckets. For this API operation, only the  null  value  of
          the version ID is supported by directory buckets. You can only spec-
          ify null to the versionId query parameter in the request.
              Conditional request headers

       Consider the following when using request headers:

       o If both of the If-Match and If-Unmodified-Since headers  are  present
         in  the  request  as  follows, then Amazon S3 returns the HTTP status
         code 200 OK and the data requested:

         o If-Match condition evaluates to true .

         o If-Unmodified-Since condition evaluates to false .

       For more information about conditional requests, see RFC 7232 .

       o If both  of  the  If-None-Match  and  If-Modified-Since  headers  are
         present  in  the  request as follows, then Amazon S3 returns the HTTP
         status code 304 Not Modified :

         o If-None-Match condition evaluates to false .

         o If-Modified-Since condition evaluates to true .

       For more information about conditional requests, see RFC 7232 .
              HTTP Host header syntax

          Directory buckets - The HTTP Host header syntax  is  ``  Bucket_name
          .s3express-az_id .*region* .amazonaws.com`` .

       The following actions are related to GetObjectAttributes :

       o GetObject

       o GetObjectAcl

       o GetObjectLegalHold

       o GetObjectLockConfiguration

       o GetObjectRetention

       o GetObjectTagging

       o HeadObject

       o ListParts

       See also: AWS API Documentation

SYNOPSIS
            get-object-attributes
          --bucket <value>
          --key <value>
          [--version-id <value>]
          [--max-parts <value>]
          [--part-number-marker <value>]
          [--sse-customer-algorithm <value>]
          [--sse-customer-key <value>]
          [--sse-customer-key-md5 <value>]
          [--request-payer <value>]
          [--expected-bucket-owner <value>]
          --object-attributes <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --bucket (string)
          The name of the bucket that contains the object.
              Directory buckets - When you use this operation with a directory
              bucket, you must use virtual-hosted-style requests in the format
              ``  Bucket_name  .s3express-az_id  .*region*  .amazonaws.com`` .
              Path-style requests are not supported.  Directory  bucket  names
              must  be  unique  in  the chosen Availability Zone. Bucket names
              must follow the format `` bucket_base_name --az-id --x-s3`` (for
              example, `` DOC-EXAMPLE-BUCKET --usw2-az2 --x-s3`` ). For infor-
              mation about bucket naming restrictions,  see  Directory  bucket
              naming rules in the Amazon S3 User Guide .

              Access  points  - When you use this action with an access point,
              you must provide the alias of the access point in place  of  the
              bucket  name or specify the access point ARN. When using the ac-
              cess point ARN, you must direct requests  to  the  access  point
              hostname.  The access point hostname takes the form AccessPoint-
              Name -AccountId  .s3-accesspoint.*Region*  .amazonaws.com.  When
              using  this  action  with an access point through the Amazon Web
              Services SDKs, you provide the access point ARN in place of  the
              bucket  name.  For more information about access point ARNs, see
              Using access points in the Amazon S3 User Guide .

          NOTE:
                 Access points and Object Lambda access points  are  not  sup-
                 ported by directory buckets.

              S3 on Outposts - When you use this action with Amazon S3 on Out-
              posts, you must direct requests to the S3 on Outposts  hostname.
              The  S3  on  Outposts hostname takes the form `` AccessPointName
              -AccountId .*outpostID* .s3-outposts.*Region* .amazonaws.com`` .
              When  you use this action with S3 on Outposts through the Amazon
              Web Services SDKs, you provide the Outposts access point ARN  in
              place  of the bucket name. For more information about S3 on Out-
              posts ARNs, see What is S3 on Outposts? in the  Amazon  S3  User
              Guide .

       --key (string)
          The object key.

       --version-id (string)
          The version ID used to reference a specific version of the object.

          NOTE:
              S3 Versioning isn't enabled and supported for directory buckets.
              For this API operation, only the null value of the version ID is
              supported by directory buckets. You can only specify null to the
              versionId query parameter in the request.

       --max-parts (integer)
          Sets the maximum number of parts to return.

       --part-number-marker (integer)
          Specifies the part after which listing should begin. Only parts with
          higher part numbers will be listed.

       --sse-customer-algorithm (string)
          Specifies the algorithm to use when encrypting the object (for exam-
          ple, AES256).

          NOTE:
              This functionality is not supported for directory buckets.

       --sse-customer-key (string)
          Specifies the customer-provided encryption key for Amazon S3 to  use
          in  encrypting data. This value is used to store the object and then
          it is discarded; Amazon S3 does not store the  encryption  key.  The
          key  must be appropriate for use with the algorithm specified in the
          x-amz-server-side-encryption-customer-algorithm header.

          NOTE:
              This functionality is not supported for directory buckets.

       --sse-customer-key-md5 (string)
          Specifies the 128-bit MD5 digest of the encryption key according  to
          RFC  1321.  Amazon S3 uses this header for a message integrity check
          to ensure that the encryption key was transmitted without error.

          NOTE:
              This functionality is not supported for directory buckets.

       --request-payer (string)
          Confirms that the requester knows that they will be charged for  the
          request.  Bucket owners need not specify this parameter in their re-
          quests. If either the source or destination S3 bucket has  Requester
          Pays  enabled,  the  requester will pay for corresponding charges to
          copy the object. For information about downloading objects from  Re-
          quester  Pays  buckets,  see  Downloading  Objects in Requester Pays
          Buckets in the Amazon S3 User Guide .

          NOTE:
              This functionality is not supported for directory buckets.

          Possible values:

          o requester

       --expected-bucket-owner (string)
          The account ID of the expected bucket owner. If the account ID  that
          you  provide  does not match the actual owner of the bucket, the re-
          quest fails with the HTTP status code 403 Forbidden (access denied).

       --object-attributes (list)
          Specifies the fields at the root level that you want returned in the
          response. Fields that you do not specify are not returned.

          (string)

       Syntax:

          "string" "string" ...

          Where valid values are:
            ETag
            Checksum
            ObjectParts
            StorageClass
            ObjectSize

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To  retrieves  metadata from an object without returning the object it-
       self

       The following get-object-attributes example retrieves metadata from the
       object doc1.rtf.

          aws s3api get-object-attributes \
              --bucket my-bucket \
              --key doc1.rtf \
              --object-attributes "StorageClass" "ETag" "ObjectSize"

       Output:

          {
              "LastModified": "2022-03-15T19:37:31+00:00",
              "VersionId": "IuCPjXTDzHNfldAuitVBIKJpF2p1fg4P",
              "ETag": "b662d79adeb7c8d787ea7eafb9ef6207",
              "StorageClass": "STANDARD",
              "ObjectSize": 405
          }

       For more information, see GetObjectAttributes in the Amazon S3 API Ref-
       erence.

OUTPUT
       DeleteMarker -> (boolean)
          Specifies whether the object retrieved was (true ) or was not (false
          )  a  delete marker. If false , this response header does not appear
          in the response.

          NOTE:
              This functionality is not supported for directory buckets.

       LastModified -> (timestamp)
          The creation date of the object.

       VersionId -> (string)
          The version ID of the object.

          NOTE:
              This functionality is not supported for directory buckets.

       RequestCharged -> (string)
          If present, indicates that the requester  was  successfully  charged
          for the request.

          NOTE:
              This functionality is not supported for directory buckets.

       ETag -> (string)
          An  ETag  is an opaque identifier assigned by a web server to a spe-
          cific version of a resource found at a URL.

       Checksum -> (structure)
          The checksum or digest of the object.

          ChecksumCRC32 -> (string)
              The base64-encoded, 32-bit CRC32 checksum of  the  object.  This
              will  only  be  present if it was uploaded with the object. When
              you use an API operation on an object that  was  uploaded  using
              multipart uploads, this value may not be a direct checksum value
              of the full object. Instead, it's a  calculation  based  on  the
              checksum  values  of  each individual part. For more information
              about how checksums are calculated with multipart  uploads,  see
              Checking object integrity in the Amazon S3 User Guide .

          ChecksumCRC32C -> (string)
              The  base64-encoded,  32-bit CRC32C checksum of the object. This
              will only be present if it was uploaded with  the  object.  When
              you  use  an  API operation on an object that was uploaded using
              multipart uploads, this value may not be a direct checksum value
              of  the  full  object.  Instead, it's a calculation based on the
              checksum values of each individual part.  For  more  information
              about  how  checksums are calculated with multipart uploads, see
              Checking object integrity in the Amazon S3 User Guide .

          ChecksumSHA1 -> (string)
              The base64-encoded, 160-bit SHA-1 digest  of  the  object.  This
              will  only  be  present if it was uploaded with the object. When
              you use the API operation on an object that was  uploaded  using
              multipart uploads, this value may not be a direct checksum value
              of the full object. Instead, it's a  calculation  based  on  the
              checksum  values  of  each individual part. For more information
              about how checksums are calculated with multipart  uploads,  see
              Checking object integrity in the Amazon S3 User Guide .

          ChecksumSHA256 -> (string)
              The  base64-encoded,  256-bit SHA-256 digest of the object. This
              will only be present if it was uploaded with  the  object.  When
              you  use  an  API operation on an object that was uploaded using
              multipart uploads, this value may not be a direct checksum value
              of  the  full  object.  Instead, it's a calculation based on the
              checksum values of each individual part.  For  more  information
              about  how  checksums are calculated with multipart uploads, see
              Checking object integrity in the Amazon S3 User Guide .

       ObjectParts -> (structure)
          A collection of parts associated with a multipart upload.

          TotalPartsCount -> (integer)
              The total number of parts.

          PartNumberMarker -> (integer)
              The marker for the current part.

          NextPartNumberMarker -> (integer)
              When a list is truncated, this element specifies the  last  part
              in  the  list,  as  well as the value to use for the PartNumber-
              Marker request parameter in a subsequent request.

          MaxParts -> (integer)
              The maximum number of parts allowed in the response.

          IsTruncated -> (boolean)
              Indicates whether the returned list of  parts  is  truncated.  A
              value  of true indicates that the list was truncated. A list can
              be truncated if the number of parts exceeds the  limit  returned
              in the MaxParts element.

          Parts -> (list)
              A  container  for  elements  related to a particular part. A re-
              sponse can contain zero or more Parts elements.

              NOTE:

                 o General purpose buckets - For GetObjectAttributes  ,  if  a
                   additional   checksum   (including  x-amz-checksum-crc32  ,
                   x-amz-checksum-crc32c   ,    x-amz-checksum-sha1    ,    or
                   x-amz-checksum-sha256  ) isn't applied to the object speci-
                   fied in the request, the response doesn't return Part .

                 o Directory buckets - For  GetObjectAttributes  ,  no  matter
                   whether  a  additional  checksum  is  applied to the object
                   specified in the request, the response returns Part .

              (structure)
                 A container for elements related to an individual part.

                 PartNumber -> (integer)
                     The part number identifying the part.  This  value  is  a
                     positive integer between 1 and 10,000.

                 Size -> (long)
                     The size of the uploaded part in bytes.

                 ChecksumCRC32 -> (string)
                     This header can be used as a data integrity check to ver-
                     ify that the data received is  the  same  data  that  was
                     originally  sent.  This  header  specifies the base64-en-
                     coded, 32-bit CRC32 checksum of the object. For more  in-
                     formation, see Checking object integrity in the Amazon S3
                     User Guide .

                 ChecksumCRC32C -> (string)
                     The base64-encoded, 32-bit CRC32C checksum of the object.
                     This will only be present if it was uploaded with the ob-
                     ject. When you use an API operation on an object that was
                     uploaded using multipart uploads, this value may not be a
                     direct checksum value of the full object. Instead, it's a
                     calculation based on the checksum values of each individ-
                     ual part. For more information about  how  checksums  are
                     calculated  with  multipart  uploads, see Checking object
                     integrity in the Amazon S3 User Guide .

                 ChecksumSHA1 -> (string)
                     The base64-encoded, 160-bit SHA-1 digest of  the  object.
                     This will only be present if it was uploaded with the ob-
                     ject. When you use the API operation on  an  object  that
                     was  uploaded using multipart uploads, this value may not
                     be a direct checksum value of the full  object.  Instead,
                     it's  a  calculation based on the checksum values of each
                     individual part. For more information about how checksums
                     are  calculated  with multipart uploads, see Checking ob-
                     ject integrity in the Amazon S3 User Guide .

                 ChecksumSHA256 -> (string)
                     The base64-encoded, 256-bit SHA-256 digest of the object.
                     This will only be present if it was uploaded with the ob-
                     ject. When you use an API operation on an object that was
                     uploaded using multipart uploads, this value may not be a
                     direct checksum value of the full object. Instead, it's a
                     calculation based on the checksum values of each individ-
                     ual part. For more information about  how  checksums  are
                     calculated  with  multipart  uploads, see Checking object
                     integrity in the Amazon S3 User Guide .

       StorageClass -> (string)
          Provides the storage class information of the object. Amazon S3  re-
          turns  this  header  for  all objects except for S3 Standard storage
          class objects.

          For more information, see Storage Classes .

          NOTE:
              Directory buckets - Only the S3 Express One Zone  storage  class
              is supported by directory buckets to store objects.

       ObjectSize -> (long)
          The size of the object in bytes.



                                                       GET-OBJECT-ATTRIBUTES()
