RESOLVE-COMPONENT-CANDIDATES()                  RESOLVE-COMPONENT-CANDIDATES()



NAME
       resolve-component-candidates -

DESCRIPTION
       Retrieves  a  list  of components that meet the component, version, and
       platform requirements of a deployment.  Greengrass  core  devices  call
       this  operation  when  they receive a deployment to identify the compo-
       nents to install.

       This operation identifies components that meet all dependency  require-
       ments  for a deployment. If the requirements conflict, then this opera-
       tion returns an error and the deployment fails. For example,  this  oc-
       curs  if  component  A requires version >2.0.0 and component B requires
       version <2.0.0 of a component dependency.

       When you specify the component candidates to  resolve,  IoT  Greengrass
       compares  each  component's digest from the core device with the compo-
       nent's digest in the Amazon Web Services Cloud. If  the  digests  don't
       match, then IoT Greengrass specifies to use the version from the Amazon
       Web Services Cloud.

       WARNING:
          To use this operation, you must use the data plane API endpoint  and
          authenticate  with  an IoT device certificate. For more information,
          see IoT Greengrass endpoints and quotas .

       See also: AWS API Documentation

SYNOPSIS
            resolve-component-candidates
          [--platform <value>]
          [--component-candidates <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --platform (structure)
          The platform to use to resolve compatible components.

          name -> (string)
              The friendly name of the platform. This name helps you  identify
              the platform.

              If  you  omit  this parameter, IoT Greengrass creates a friendly
              name from the os and architecture of the platform.

          attributes -> (map)
              A dictionary of attributes for the platform. The IoT  Greengrass
              Core  software  defines  the os and architecture by default. You
              can specify additional platform attributes  for  a  core  device
              when  you  deploy the Greengrass nucleus component. For more in-
              formation, see the  Greengrass  nucleus  component  in  the  IoT
              Greengrass V2 Developer Guide .

              key -> (string)

              value -> (string)

       Shorthand Syntax:

          name=string,attributes={KeyName1=string,KeyName2=string}

       JSON Syntax:

          {
            "name": "string",
            "attributes": {"string": "string"
              ...}
          }

       --component-candidates (list)
          The list of components to resolve.

          (structure)
              Contains  information  about  a component that is a candidate to
              deploy to a Greengrass core device.

              componentName -> (string)
                 The name of the component.

              componentVersion -> (string)
                 The version of the component.

              versionRequirements -> (map)
                 The version requirements for  the  component's  dependencies.
                 Greengrass  core  devices  get  the version requirements from
                 component recipes.

                 IoT Greengrass V2 uses semantic version constraints. For more
                 information, see Semantic Versioning .

                 key -> (string)

                 value -> (string)

       Shorthand Syntax:

          componentName=string,componentVersion=string,versionRequirements={KeyName1=string,KeyName2=string} ...

       JSON Syntax:

          [
            {
              "componentName": "string",
              "componentVersion": "string",
              "versionRequirements": {"string": "string"
                ...}
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       resolvedComponentVersions -> (list)
          A  list of components that meet the requirements that you specify in
          the request. This list includes each component's recipe that you can
          use to install the component.

          (structure)
              Contains  information about a component version that is compati-
              ble to run on a Greengrass core device.

              arn -> (string)
                 The ARN of the component version.

              componentName -> (string)
                 The name of the component.

              componentVersion -> (string)
                 The version of the component.

              recipe -> (blob)
                 The recipe of the component version.

              vendorGuidance -> (string)
                 The vendor guidance state for  the  component  version.  This
                 state  indicates whether the component version has any issues
                 that you should consider before you  deploy  it.  The  vendor
                 guidance state can be:

                 o ACTIVE  This component version is available and recommended
                   for use.

                 o DISCONTINUED  This component version has been  discontinued
                   by  its  publisher.  You can deploy this component version,
                   but we recommend that you use a different version  of  this
                   component.

                 o DELETED   This  component  version  has been deleted by its
                   publisher, so you can't deploy it. If you have any existing
                   deployments  that specify this component version, those de-
                   ployments will fail.

              message -> (string)
                 A message that communicates details about the vendor guidance
                 state of the component version. This message communicates why
                 a component version is discontinued or deleted.



                                                RESOLVE-COMPONENT-CANDIDATES()
