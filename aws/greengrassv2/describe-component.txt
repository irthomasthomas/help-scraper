DESCRIBE-COMPONENT()                                      DESCRIBE-COMPONENT()



NAME
       describe-component -

DESCRIPTION
       Retrieves metadata for a version of a component.

       See also: AWS API Documentation

SYNOPSIS
            describe-component
          --arn <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --arn (string)
          The ARN of the component version.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To describe a component version

       The following describe-component example describes a Hello World compo-
       nent.

          aws greengrassv2 describe-component \
              --arn arn:aws:greengrass:us-west-2:123456789012:components:com.example.HelloWorld:versions:1.0.0

       Output:

          {
              "arn": "arn:aws:greengrass:us-west-2:123456789012:components:com.example.HelloWorld:versions:1.0.0",
              "componentName": "com.example.HelloWorld",
              "componentVersion": "1.0.0",
              "creationTimestamp": "2021-01-07T17:12:11.133000-08:00",
              "publisher": "Amazon",
              "description": "My first AWS IoT Greengrass component.",
              "status": {
                  "componentState": "DEPLOYABLE",
                  "message": "NONE",
                  "errors": {}
              },
              "platforms": [
                  {
                      "attributes": {
                          "os": "linux"
                      }
                  }
              ]
          }

       For  more  information, see Manage components in the AWS IoT Greengrass
       V2 Developer Guide.

OUTPUT
       arn -> (string)
          The ARN of the component version.

       componentName -> (string)
          The name of the component.

       componentVersion -> (string)
          The version of the component.

       creationTimestamp -> (timestamp)
          The time at which the component was created, expressed in  ISO  8601
          format.

       publisher -> (string)
          The publisher of the component version.

       description -> (string)
          The description of the component version.

       status -> (structure)
          The  status of the component version in IoT Greengrass V2. This sta-
          tus is different from the status of the component on a core device.

          componentState -> (string)
              The state of the component version.

          message -> (string)
              A message that communicates details, such as errors,  about  the
              status of the component version.

          errors -> (map)
              A  dictionary  of errors that communicate why the component ver-
              sion is in an error state. For example, if IoT Greengrass  can't
              access  an  artifact for the component version, then errors con-
              tains the artifact's URI as a key, and the error message as  the
              value for that key.

              key -> (string)

              value -> (string)

          vendorGuidance -> (string)
              The  vendor guidance state for the component version. This state
              indicates whether the component version has any issues that  you
              should  consider before you deploy it. The vendor guidance state
              can be:

              o ACTIVE  This component version is  available  and  recommended
                for use.

              o DISCONTINUED   This component version has been discontinued by
                its publisher. You can deploy this component version,  but  we
                recommend that you use a different version of this component.

              o DELETED   This  component version has been deleted by its pub-
                lisher, so you can't deploy it. If you have any  existing  de-
                ployments  that  specify this component version, those deploy-
                ments will fail.

          vendorGuidanceMessage -> (string)
              A message that communicates details about  the  vendor  guidance
              state  of the component version. This message communicates why a
              component version is discontinued or deleted.

       platforms -> (list)
          The platforms that the component version supports.

          (structure)
              Contains information about a platform that a component supports.

              name -> (string)
                 The friendly name of the platform. This name helps you  iden-
                 tify the platform.

                 If you omit this parameter, IoT Greengrass creates a friendly
                 name from the os and architecture of the platform.

              attributes -> (map)
                 A dictionary of attributes for the platform. The  IoT  Green-
                 grass  Core  software  defines the os and architecture by de-
                 fault. You can specify additional platform attributes  for  a
                 core device when you deploy the Greengrass nucleus component.
                 For more information, see the Greengrass nucleus component in
                 the IoT Greengrass V2 Developer Guide .

                 key -> (string)

                 value -> (string)

       tags -> (map)
          A  list  of  key-value pairs that contain metadata for the resource.
          For more information, see Tag your resources in the  IoT  Greengrass
          V2 Developer Guide .

          key -> (string)

          value -> (string)



                                                          DESCRIBE-COMPONENT()
