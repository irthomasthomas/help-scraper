GET-COMPONENT()                                                GET-COMPONENT()



NAME
       get-component -

DESCRIPTION
       Gets the recipe for a version of a component.

       See also: AWS API Documentation

SYNOPSIS
            get-component
          [--recipe-output-format <value>]
          --arn <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --recipe-output-format (string)
          The format of the recipe.

          Possible values:

          o JSON

          o YAML

       --arn (string)
          The ARN of the component version.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       Example 1: To download a component's  recipe  in  YAML  format  (Linux,
       macOS, or Unix)

       The following get-component example downloads a Hello World component's
       recipe to a file in YAML format. This command does the following:

       1. Uses the --output and --query parameters to  control  the  command's
          output.  These parameters extract the recipe blob from the command's
          output.  For  more  information  about   controlling   output,   see
          Controlling  Command  Output  in the AWS Command Line Interface User
          Guide.

       2. Uses the base64 utility. This utility decodes the extracted blob  to
          the  original  text.  The  blob  that  is  returned  by a successful
          get-component command is base64-encoded text. You must  decode  this
          blob to obtain the original text.

       3. Saves  the  decoded text to a file. The final section of the command
          (> com.example.HelloWorld-1.0.0.json) saves the decoded  text  to  a
          file.

          aws greengrassv2 get-component \
              --arn arn:aws:greengrass:us-west-2:123456789012:components:com.example.HelloWorld:versions:1.0.0 \
              --recipe-output-format YAML \
              --query recipe \
              --output text | base64 --decode > com.example.HelloWorld-1.0.0.json

       For  more  information, see Manage components in the AWS IoT Greengrass
       V2 Developer Guide.

       Example 2: To download a component's recipe  in  YAML  format  (Windows
       CMD)

       The following get-component example downloads a Hello World component's
       recipe to a file in YAML format. This command uses the  certutil  util-
       ity.

          aws greengrassv2 get-component ^
              --arn arn:aws:greengrass:us-west-2:675946970638:components:com.example.HelloWorld:versions:1.0.0 ^
              --recipe-output-format YAML ^
              --query recipe ^
              --output text > com.example.HelloWorld-1.0.0.yaml.b64

          certutil -decode com.example.HelloWorld-1.0.0.yaml.b64 com.example.HelloWorld-1.0.0.yaml

       For  more  information, see Manage components in the AWS IoT Greengrass
       V2 Developer Guide.

       Example 3: To download a component's recipe  in  YAML  format  (Windows
       PowerShell)

       The following get-component example downloads a Hello World component's
       recipe to a file in YAML format. This command uses the  certutil  util-
       ity.

          aws greengrassv2 get-component `
              --arn arn:aws:greengrass:us-west-2:675946970638:components:com.example.HelloWorld:versions:1.0.0 `
              --recipe-output-format YAML `
              --query recipe `
              --output text > com.example.HelloWorld-1.0.0.yaml.b64

          certutil -decode com.example.HelloWorld-1.0.0.yaml.b64 com.example.HelloWorld-1.0.0.yaml

       For  more  information, see Manage components in the AWS IoT Greengrass
       V2 Developer Guide.

OUTPUT
       recipeOutputFormat -> (string)
          The format of the recipe.

       recipe -> (blob)
          The recipe of the component version.

       tags -> (map)
          A list of key-value pairs that contain metadata  for  the  resource.
          For  more  information, see Tag your resources in the IoT Greengrass
          V2 Developer Guide .

          key -> (string)

          value -> (string)



                                                               GET-COMPONENT()
