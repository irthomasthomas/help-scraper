CREATE-ENVIRONMENT()                                      CREATE-ENVIRONMENT()



NAME
       create-environment -

DESCRIPTION
       Creates  an  environment.  For each application, you define one or more
       environments. An environment is a deployment group  of  AppConfig  tar-
       gets, such as applications in a Beta or Production environment. You can
       also define environments for application subcomponents such as the  Web
       ,  Mobile and Back-end components for your application. You can config-
       ure Amazon CloudWatch alarms for each environment. The system  monitors
       alarms during a configuration deployment. If an alarm is triggered, the
       system rolls back the configuration.

       See also: AWS API Documentation

SYNOPSIS
            create-environment
          --application-id <value>
          --name <value>
          [--description <value>]
          [--monitors <value>]
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --application-id (string)
          The application ID.

       --name (string)
          A name for the environment.

       --description (string)
          A description of the environment.

       --monitors (list)
          Amazon CloudWatch alarms to monitor during the deployment process.

          (structure)
              Amazon  CloudWatch  alarms  to  monitor  during  the  deployment
              process.

              AlarmArn -> (string)
                 Amazon Resource Name (ARN) of the Amazon CloudWatch alarm.

              AlarmRoleArn -> (string)
                 ARN  of an Identity and Access Management (IAM) role for App-
                 Config to monitor AlarmArn .

       Shorthand Syntax:

          AlarmArn=string,AlarmRoleArn=string ...

       JSON Syntax:

          [
            {
              "AlarmArn": "string",
              "AlarmRoleArn": "string"
            }
            ...
          ]

       --tags (map)
          Metadata to assign to the environment. Tags help organize and  cate-
          gorize  your  AppConfig resources. Each tag consists of a key and an
          optional value, both of which you define.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create an environment

       The following create-environment example creates an AWS AppConfig envi-
       ronment named Example-Environment using the application you created us-
       ing create-application.

          aws appconfig create-environment \
              --application-id "339ohji" \
              --name "Example-Environment"

       Output:

          {
              "ApplicationId": "339ohji",
              "Description": null,
              "Id": "54j1r29",
              "Monitors": null,
              "Name": "Example-Environment",
              "State": "ReadyForDeployment"
          }

       For more information, see Step 2: Creating an environment  in  the  AWS
       AppConfig User Guide.

OUTPUT
       ApplicationId -> (string)
          The application ID.

       Id -> (string)
          The environment ID.

       Name -> (string)
          The name of the environment.

       Description -> (string)
          The description of the environment.

       State -> (string)
          The  state  of  the environment. An environment can be in one of the
          following states: READY_FOR_DEPLOYMENT , DEPLOYING , ROLLING_BACK  ,
          or ROLLED_BACK

       Monitors -> (list)
          Amazon CloudWatch alarms monitored during the deployment.

          (structure)
              Amazon  CloudWatch  alarms  to  monitor  during  the  deployment
              process.

              AlarmArn -> (string)
                 Amazon Resource Name (ARN) of the Amazon CloudWatch alarm.

              AlarmRoleArn -> (string)
                 ARN of an Identity and Access Management (IAM) role for  App-
                 Config to monitor AlarmArn .



                                                          CREATE-ENVIRONMENT()
