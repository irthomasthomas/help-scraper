CREATE-CONFIGURATION-PROFILE()                  CREATE-CONFIGURATION-PROFILE()



NAME
       create-configuration-profile -

DESCRIPTION
       Creates a configuration profile, which is information that enables App-
       Config to access the configuration source. Valid configuration  sources
       include  the  AppConfig hosted configuration store, Amazon Web Services
       Systems Manager (SSM) documents, SSM Parameter Store parameters, Amazon
       S3 objects, or any integration source action supported by CodePipeline.
       A configuration profile includes the following information:

       o The URI location of the configuration data.

       o The Identity and Access Management (IAM) role that provides access to
         the configuration data.

       o A  validator for the configuration data. Available validators include
         either a JSON Schema or an Amazon Web Services Lambda function.

       For more information, see Create a Configuration  and  a  Configuration
       Profile in the AppConfig User Guide .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-configuration-profile
          --application-id <value>
          --name <value>
          [--description <value>]
          --location-uri <value>
          [--retrieval-role-arn <value>]
          [--validators <value>]
          [--tags <value>]
          [--type <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --application-id (string)
          The application ID.

       --name (string)
          A name for the configuration profile.

       --description (string)
          A description of the configuration profile.

       --location-uri (string)
          A  URI  to  locate  the configuration. You can specify the AppConfig
          hosted configuration store, Systems Manager (SSM) document,  an  SSM
          Parameter  Store  parameter,  or an Amazon S3 object. For the hosted
          configuration store and for feature flags, specify hosted .  For  an
          SSM  document,  specify  either  the  document  name  in  the format
          ssm-document://<Document_name> or the Amazon  Resource  Name  (ARN).
          For  a  parameter,  specify  either the parameter name in the format
          ssm-parameter://<Parameter_name> or the ARN. For an  Amazon  S3  ob-
          ject, specify the URI in the following format: s3://<bucket>/<objec-
          tKey> . Here is an example:  s3://my-bucket/my-app/us-east-1/my-con-
          fig.json

       --retrieval-role-arn (string)
          The  ARN  of an IAM role with permission to access the configuration
          at the specified LocationUri .

          WARNING:
              A retrieval role ARN is not required for  configurations  stored
              in  the AppConfig hosted configuration store. It is required for
              all other sources that store your configuration.

       --validators (list)
          A list of methods for validating the configuration.

          (structure)
              A validator provides a syntactic or semantic check to ensure the
              configuration  that you want to deploy functions as intended. To
              validate your application  configuration  data,  you  provide  a
              schema  or  an  Amazon  Web  Services  Lambda function that runs
              against the configuration. The configuration deployment  or  up-
              date can only proceed when the configuration data is valid.

              Type -> (string)
                 AppConfig supports validators of type JSON_SCHEMA and LAMBDA

              Content -> (string)
                 Either  the  JSON  Schema content or the Amazon Resource Name
                 (ARN) of an Lambda function.

       Shorthand Syntax:

          Type=string,Content=string ...

       JSON Syntax:

          [
            {
              "Type": "JSON_SCHEMA"|"LAMBDA",
              "Content": "string"
            }
            ...
          ]

       --tags (map)
          Metadata to assign to the configuration profile. Tags help  organize
          and  categorize your AppConfig resources. Each tag consists of a key
          and an optional value, both of which you define.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --type (string)
          The type of configurations contained in the profile. AppConfig  sup-
          ports  feature  flags  and freeform configurations. We recommend you
          create feature flag configurations to enable or disable new features
          and  freeform  configurations to distribute configurations to an ap-
          plication. When calling this API, enter one of the following  values
          for Type :
              AWS.AppConfig.FeatureFlags

              AWS.Freeform

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a configuration profile

       The following create-configuration-profile example creates a configura-
       tion profile using a configuration stored in Parameter Store,  a  capa-
       bility of Systems Manager.

          aws appconfig create-configuration-profile \
              --application-id "339ohji" \
              --name "Example-Configuration-Profile" \
              --location-uri "ssm-parameter://Example-Parameter" \
              --retrieval-role-arn "arn:aws:iam::111122223333:role/Example-App-Config-Role"

       Output:

          {
              "ApplicationId": "339ohji",
              "Description": null,
              "Id": "ur8hx2f",
              "LocationUri": "ssm-parameter://Example-Parameter",
              "Name": "Example-Configuration-Profile",
              "RetrievalRoleArn": "arn:aws:iam::111122223333:role/Example-App-Config-Role",
              "Type": null,
              "Validators": null
          }

       For  more  information, see Step 3: Creating a configuration and a con-
       figuration profile in the AWS AppConfig User Guide.

OUTPUT
       ApplicationId -> (string)
          The application ID.

       Id -> (string)
          The configuration profile ID.

       Name -> (string)
          The name of the configuration profile.

       Description -> (string)
          The configuration profile description.

       LocationUri -> (string)
          The URI location of the configuration.

       RetrievalRoleArn -> (string)
          The ARN of an IAM role with permission to access  the  configuration
          at the specified LocationUri .

       Validators -> (list)
          A list of methods for validating the configuration.

          (structure)
              A validator provides a syntactic or semantic check to ensure the
              configuration that you want to deploy functions as intended.  To
              validate  your  application  configuration  data,  you provide a
              schema or an Amazon  Web  Services  Lambda  function  that  runs
              against  the  configuration. The configuration deployment or up-
              date can only proceed when the configuration data is valid.

              Type -> (string)
                 AppConfig supports validators of type JSON_SCHEMA and LAMBDA

              Content -> (string)
                 Either the JSON Schema content or the  Amazon  Resource  Name
                 (ARN) of an Lambda function.

       Type -> (string)
          The  type of configurations contained in the profile. AppConfig sup-
          ports feature flags and freeform configurations.  We  recommend  you
          create feature flag configurations to enable or disable new features
          and freeform configurations to distribute configurations to  an  ap-
          plication.  When calling this API, enter one of the following values
          for Type :
              AWS.AppConfig.FeatureFlags

              AWS.Freeform



                                                CREATE-CONFIGURATION-PROFILE()
