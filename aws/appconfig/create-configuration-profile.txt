CREATE-CONFIGURATION-PROFILE()                  CREATE-CONFIGURATION-PROFILE()



NAME
       create-configuration-profile -

DESCRIPTION
       Creates a configuration profile, which is information that enables App-
       Config to access the configuration source. Valid configuration  sources
       include the following:

       o Configuration data in YAML, JSON, and other formats stored in the Ap-
         pConfig hosted configuration store

       o Configuration data stored as objects in an Amazon Simple Storage Ser-
         vice (Amazon S3) bucket

       o Pipelines stored in CodePipeline

       o Secrets stored in Secrets Manager

       o Standard  and  secure string parameters stored in Amazon Web Services
         Systems Manager Parameter Store

       o Configuration data in SSM documents stored  in  the  Systems  Manager
         document store

       A configuration profile includes the following information:

       o The URI location of the configuration data.

       o The Identity and Access Management (IAM) role that provides access to
         the configuration data.

       o A validator for the configuration data. Available validators  include
         either a JSON Schema or an Amazon Web Services Lambda function.

       For  more  information,  see Create a Configuration and a Configuration
       Profile in the AppConfig User Guide .

       See also: AWS API Documentation

SYNOPSIS
            create-configuration-profile
          --application-id <value>
          --name <value>
          [--description <value>]
          --location-uri <value>
          [--retrieval-role-arn <value>]
          [--validators <value>]
          [--tags <value>]
          [--type <value>]
          [--kms-key-identifier <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --application-id (string)
          The application ID.

       --name (string)
          A name for the configuration profile.

       --description (string)
          A description of the configuration profile.

       --location-uri (string)
          A URI to locate the configuration. You can specify the following:

          o For the AppConfig  hosted  configuration  store  and  for  feature
            flags, specify hosted .

          o For an Amazon Web Services Systems Manager Parameter Store parame-
            ter, specify either the parameter name in the  format  ssm-parame-
            ter://<parameter name> or the ARN.

          o For  an Amazon Web Services CodePipeline pipeline, specify the URI
            in the following format: codepipeline ://<pipeline name>.

          o For an Secrets Manager secret, specify the URI  in  the  following
            format: secretsmanager ://<secret name>.

          o For  an Amazon S3 object, specify the URI in the following format:
            s3://<bucket>/<objectKey>    .     Here     is     an     example:
            s3://my-bucket/my-app/us-east-1/my-config.json

          o For  an SSM document, specify either the document name in the for-
            mat ssm-document://<document name> or  the  Amazon  Resource  Name
            (ARN).

       --retrieval-role-arn (string)
          The  ARN  of an IAM role with permission to access the configuration
          at the specified LocationUri .

          WARNING:
              A retrieval role ARN is not required for  configurations  stored
              in  the AppConfig hosted configuration store. It is required for
              all other sources that store your configuration.

       --validators (list)
          A list of methods for validating the configuration.

          (structure)
              A validator provides a syntactic or semantic check to ensure the
              configuration  that you want to deploy functions as intended. To
              validate your application  configuration  data,  you  provide  a
              schema  or  an  Amazon  Web  Services  Lambda function that runs
              against the configuration. The configuration deployment  or  up-
              date  can only proceed when the configuration data is valid. For
              more information, see About validators  in  the  AppConfig  User
              Guide .

              Type -> (string)
                 AppConfig supports validators of type JSON_SCHEMA and LAMBDA

              Content -> (string)
                 Either  the  JSON  Schema content or the Amazon Resource Name
                 (ARN) of an Lambda function.

       Shorthand Syntax:

          Type=string,Content=string ...

       JSON Syntax:

          [
            {
              "Type": "JSON_SCHEMA"|"LAMBDA",
              "Content": "string"
            }
            ...
          ]

       --tags (map)
          Metadata to assign to the configuration profile. Tags help  organize
          and  categorize your AppConfig resources. Each tag consists of a key
          and an optional value, both of which you define.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --type (string)
          The type of configurations contained in the profile. AppConfig  sup-
          ports  feature  flags  and freeform configurations. We recommend you
          create feature flag configurations to enable or disable new features
          and  freeform  configurations to distribute configurations to an ap-
          plication. When calling this API, enter one of the following  values
          for Type :
              AWS.AppConfig.FeatureFlags

              AWS.Freeform

       --kms-key-identifier (string)
          The identifier for an Key Management Service key to encrypt new con-
          figuration data  versions  in  the  AppConfig  hosted  configuration
          store.  This  attribute is only used for hosted configuration types.
          The identifier can be an KMS key ID, alias, or the  Amazon  Resource
          Name  (ARN) of the key ID or alias. To encrypt data managed in other
          configuration stores, see the documentation for how  to  specify  an
          KMS key for that particular service.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a configuration profile

       The following create-configuration-profile example creates a configura-
       tion profile using a configuration stored in Parameter Store,  a  capa-
       bility of Systems Manager.

          aws appconfig create-configuration-profile \
              --application-id "339ohji" \
              --name "Example-Configuration-Profile" \
              --location-uri "ssm-parameter://Example-Parameter" \
              --retrieval-role-arn "arn:aws:iam::111122223333:role/Example-App-Config-Role"

       Output:

          {
              "ApplicationId": "339ohji",
              "Description": null,
              "Id": "ur8hx2f",
              "LocationUri": "ssm-parameter://Example-Parameter",
              "Name": "Example-Configuration-Profile",
              "RetrievalRoleArn": "arn:aws:iam::111122223333:role/Example-App-Config-Role",
              "Type": null,
              "Validators": null
          }

       For  more  information, see Step 3: Creating a configuration and a con-
       figuration profile in the AWS AppConfig User Guide.

OUTPUT
       ApplicationId -> (string)
          The application ID.

       Id -> (string)
          The configuration profile ID.

       Name -> (string)
          The name of the configuration profile.

       Description -> (string)
          The configuration profile description.

       LocationUri -> (string)
          The URI location of the configuration.

       RetrievalRoleArn -> (string)
          The ARN of an IAM role with permission to access  the  configuration
          at the specified LocationUri .

       Validators -> (list)
          A list of methods for validating the configuration.

          (structure)
              A validator provides a syntactic or semantic check to ensure the
              configuration that you want to deploy functions as intended.  To
              validate  your  application  configuration  data,  you provide a
              schema or an Amazon  Web  Services  Lambda  function  that  runs
              against  the  configuration. The configuration deployment or up-
              date can only proceed when the configuration data is valid.  For
              more  information,  see  About  validators in the AppConfig User
              Guide .

              Type -> (string)
                 AppConfig supports validators of type JSON_SCHEMA and LAMBDA

              Content -> (string)
                 Either the JSON Schema content or the  Amazon  Resource  Name
                 (ARN) of an Lambda function.

       Type -> (string)
          The  type of configurations contained in the profile. AppConfig sup-
          ports feature flags and freeform configurations.  We  recommend  you
          create feature flag configurations to enable or disable new features
          and freeform configurations to distribute configurations to  an  ap-
          plication.  When calling this API, enter one of the following values
          for Type :
              AWS.AppConfig.FeatureFlags

              AWS.Freeform

       KmsKeyArn -> (string)
          The Amazon Resource Name of the Key Management Service  key  to  en-
          crypt  new  configuration data versions in the AppConfig hosted con-
          figuration store. This attribute is only used for hosted  configura-
          tion  types.  To encrypt data managed in other configuration stores,
          see the documentation for how to specify an KMS key for that partic-
          ular service.

       KmsKeyIdentifier -> (string)
          The Key Management Service key identifier (key ID, key alias, or key
          ARN) provided when the resource was created or updated.



                                                CREATE-CONFIGURATION-PROFILE()
