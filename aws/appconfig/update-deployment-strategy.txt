UPDATE-DEPLOYMENT-STRATEGY()                      UPDATE-DEPLOYMENT-STRATEGY()



NAME
       update-deployment-strategy -

DESCRIPTION
       Updates a deployment strategy.

       See also: AWS API Documentation

SYNOPSIS
            update-deployment-strategy
          --deployment-strategy-id <value>
          [--description <value>]
          [--deployment-duration-in-minutes <value>]
          [--final-bake-time-in-minutes <value>]
          [--growth-factor <value>]
          [--growth-type <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --deployment-strategy-id (string)
          The deployment strategy ID.

       --description (string)
          A description of the deployment strategy.

       --deployment-duration-in-minutes (integer)
          Total amount of time for a deployment to last.

       --final-bake-time-in-minutes (integer)
          The amount of time that AppConfig monitors for alarms before consid-
          ering the deployment to be complete and no longer eligible for auto-
          matic rollback.

       --growth-factor (float)
          The percentage of targets to receive a deployed configuration during
          each interval.

       --growth-type (string)
          The algorithm used to define how percentage grows over time. AppCon-
          fig supports the following growth types:
              Linear  :  For  this type, AppConfig processes the deployment by
              increments of the growth factor evenly distributed over the  de-
              ployment  time.  For  example,  a  linear deployment that uses a
              growth factor of 20 initially makes the configuration  available
              to 20 percent of the targets. After 1/5th of the deployment time
              has passed, the system updates the  percentage  to  40  percent.
              This  continues until 100% of the targets are set to receive the
              deployed configuration.

              Exponential : For this type, AppConfig processes the  deployment
              exponentially  using  the  following  formula: G*(2^N) . In this
              formula, G is the growth factor specified by the user and  N  is
              the  number  of steps until the configuration is deployed to all
              targets. For example, if you specify a growth factor of 2,  then
              the system rolls out the configuration as follows:

              2*(2^0)

              2*(2^1)

              2*(2^2)

          Expressed  numerically,  the  deployment rolls out as follows: 2% of
          the targets, 4% of the targets, 8% of the targets, and continues un-
          til the configuration has been deployed to all targets.

          Possible values:

          o LINEAR

          o EXPONENTIAL

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To update a deployment strategy

       The  following  update-deployment-strategy  example  updates final bake
       time to 20 minutes in the specified deployment strategy.

          aws appconfig update-deployment-strategy \
              --deployment-strategy-id 1225qzk \
              --final-bake-time-in-minutes 20

       Output:

          {
              "Id": "1225qzk",
              "Name": "Example-Deployment",
              "DeploymentDurationInMinutes": 15,
              "GrowthType": "LINEAR",
              "GrowthFactor": 25.0,
              "FinalBakeTimeInMinutes": 20,
              "ReplicateTo": "SSM_DOCUMENT"
          }

       For more information, see Step 4: Creating a deployment strategy in the
       AWS AppConfig User Guide.

OUTPUT
       Id -> (string)
          The deployment strategy ID.

       Name -> (string)
          The name of the deployment strategy.

       Description -> (string)
          The description of the deployment strategy.

       DeploymentDurationInMinutes -> (integer)
          Total amount of time the deployment lasted.

       GrowthType -> (string)
          The algorithm used to define how percentage grew over time.

       GrowthFactor -> (float)
          The  percentage  of  targets  that received a deployed configuration
          during each interval.

       FinalBakeTimeInMinutes -> (integer)
          The amount of time that AppConfig monitored for alarms  before  con-
          sidering  the  deployment  to be complete and no longer eligible for
          automatic rollback.

       ReplicateTo -> (string)
          Save the deployment strategy to a Systems Manager (SSM) document.



                                                  UPDATE-DEPLOYMENT-STRATEGY()
