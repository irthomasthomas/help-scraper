EXECUTE-STATEMENT()                                        EXECUTE-STATEMENT()



NAME
       execute-statement -

DESCRIPTION
       Runs a SQL statement against a database.

       NOTE:
          If a call isn't part of a transaction because it doesn't include the
          transactionID parameter, changes that result from the call are  com-
          mitted automatically.

          If the binary response data from the database is more than 1 MB, the
          call is terminated.

       See also: AWS API Documentation

SYNOPSIS
            execute-statement
          --resource-arn <value>
          --secret-arn <value>
          --sql <value>
          [--database <value>]
          [--schema <value>]
          [--parameters <value>]
          [--transaction-id <value>]
          [--include-result-metadata | --no-include-result-metadata]
          [--continue-after-timeout | --no-continue-after-timeout]
          [--result-set-options <value>]
          [--format-records-as <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --resource-arn (string)
          The Amazon Resource Name (ARN) of the Aurora Serverless DB cluster.

       --secret-arn (string)
          The ARN of the secret that enables access to the DB  cluster.  Enter
          the  database  user name and password for the credentials in the se-
          cret.

          For information about creating the secret, see Create a database se-
          cret .

       --sql (string)
          The SQL statement to run.

       --database (string)
          The name of the database.

       --schema (string)
          The name of the database schema.

          NOTE:
              Currently, the schema parameter isn't supported.

       --parameters (list)
          The parameters for the SQL statement.

          NOTE:
              Array parameters are not supported.

          (structure)
              A parameter used in a SQL statement.

              name -> (string)
                 The name of the parameter.

              value -> (tagged union structure)
                 The value of the parameter.

                 NOTE:
                     This is a Tagged Union structure. Only one of the follow-
                     ing top level keys  can  be  set:  isNull,  booleanValue,
                     longValue,  doubleValue,  stringValue,  blobValue, array-
                     Value.

                 isNull -> (boolean)
                     A NULL value.

                 booleanValue -> (boolean)
                     A value of Boolean data type.

                 longValue -> (long)
                     A value of long data type.

                 doubleValue -> (double)
                     A value of double data type.

                 stringValue -> (string)
                     A value of string data type.

                 blobValue -> (blob)
                     A value of BLOB data type.

                 arrayValue -> (tagged union structure)
                     An array of values.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing top level keys can be set: booleanValues, long-
                        Values, doubleValues, stringValues, arrayValues.

                     booleanValues -> (list)
                        An array of Boolean values.

                        (boolean)

                     longValues -> (list)
                        An array of integers.

                        (long)

                     doubleValues -> (list)
                        An array of floating-point numbers.

                        (double)

                     stringValues -> (list)
                        An array of strings.

                        (string)

                     arrayValues -> (list)
                        An array of arrays.

                        (tagged union structure)
                            Contains an array.

                            NOTE:
                               This is a Tagged Union structure. Only  one  of
                               the  following  top  level  keys  can  be  set:
                               booleanValues,    longValues,     doubleValues,
                               stringValues, arrayValues.

                            booleanValues -> (list)
                               An array of Boolean values.

                               (boolean)

                            longValues -> (list)
                               An array of integers.

                               (long)

                            doubleValues -> (list)
                               An array of floating-point numbers.

                               (double)

                            stringValues -> (list)
                               An array of strings.

                               (string)

                            arrayValues -> (list)
                               An array of arrays.

                               ( ... recursive ... )

              typeHint -> (string)
                 A  hint  that specifies the correct object type for data type
                 mapping. Possible values are as follows:

                 o DATE - The corresponding String parameter value is sent  as
                   an object of DATE type to the database. The accepted format
                   is YYYY-MM-DD .

                 o DECIMAL - The corresponding String parameter value is  sent
                   as an object of DECIMAL type to the database.

                 o JSON  - The corresponding String parameter value is sent as
                   an object of JSON type to the database.

                 o TIME - The corresponding String parameter value is sent  as
                   an object of TIME type to the database. The accepted format
                   is HH:MM:SS[.FFF] .

                 o TIMESTAMP - The corresponding  String  parameter  value  is
                   sent  as  an  object of TIMESTAMP type to the database. The
                   accepted format is YYYY-MM-DD HH:MM:SS[.FFF] .

                 o UUID - The corresponding String parameter value is sent  as
                   an object of UUID type to the database.

       JSON Syntax:

          [
            {
              "name": "string",
              "value": {
                "isNull": true|false,
                "booleanValue": true|false,
                "longValue": long,
                "doubleValue": double,
                "stringValue": "string",
                "blobValue": blob,
                "arrayValue": {
                  "booleanValues": [true|false, ...],
                  "longValues": [long, ...],
                  "doubleValues": [double, ...],
                  "stringValues": ["string", ...],
                  "arrayValues": [
                    {
                      "booleanValues": [true|false, ...],
                      "longValues": [long, ...],
                      "doubleValues": [double, ...],
                      "stringValues": ["string", ...],
                      "arrayValues": [
                        { ... recursive ... }
                        ...
                      ]
                    }
                    ...
                  ]
                }
              },
              "typeHint": "JSON"|"UUID"|"TIMESTAMP"|"DATE"|"TIME"|"DECIMAL"
            }
            ...
          ]

       --transaction-id (string)
          The identifier of a transaction that was started by using the Begin-
          Transaction operation. Specify the transaction ID of the transaction
          that you want to include the SQL statement in.

          If  the  SQL  statement is not part of a transaction, don't set this
          parameter.

       --include-result-metadata | --no-include-result-metadata (boolean)
          A value that indicates whether to include metadata in the results.

       --continue-after-timeout | --no-continue-after-timeout (boolean)
          A value that indicates whether to continue running the statement af-
          ter the call times out. By default, the statement stops running when
          the call times out.

          NOTE:
              For DDL statements, we recommend continuing to run the statement
              after the call times out. When a DDL statement terminates before
              it is finished running, it can result  in  errors  and  possibly
              corrupted data structures.

       --result-set-options (structure)
          Options that control how the result set is returned.

          decimalReturnType -> (string)
              A  value  that  indicates  how a field of DECIMAL type is repre-
              sented in the response. The value of STRING , the default, spec-
              ifies  that it is converted to a String value. The value of DOU-
              BLE_OR_LONG specifies that it is converted to a  Long  value  if
              its scale is 0, or to a Double value otherwise.

              NOTE:
                 Conversion  to  Double  or Long can result in roundoff errors
                 due to precision loss. We recommend converting to String, es-
                 pecially when working with currency values.

          longReturnType -> (string)
              A  value that indicates how a field of LONG type is represented.
              Allowed values are LONG and STRING . The default is LONG . Spec-
              ify  STRING  if  the length or precision of numeric values might
              cause truncation or rounding errors.

       Shorthand Syntax:

          decimalReturnType=string,longReturnType=string

       JSON Syntax:

          {
            "decimalReturnType": "STRING"|"DOUBLE_OR_LONG",
            "longReturnType": "STRING"|"LONG"
          }

       --format-records-as (string)
          A value that indicates whether to format the result set as a  single
          JSON string. This parameter only applies to SELECT statements and is
          ignored for other types of statements. Allowed values are  NONE  and
          JSON  .  The  default  value is NONE . The result is returned in the
          formattedRecords field.

          For usage information about the JSON format  for  result  sets,  see
          Using the Data API in the Amazon Aurora User Guide .

          Possible values:

          o NONE

          o JSON

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       Example 1: To execute a SQL statement that is part of a transaction

       The  following  execute-statement  example runs a SQL statement that is
       part of a transaction.

          aws rds-data execute-statement \
              --resource-arn "arn:aws:rds:us-west-2:123456789012:cluster:mydbcluster" \
              --database "mydb" \
              --secret-arn "arn:aws:secretsmanager:us-west-2:123456789012:secret:mysecret" \
              --sql "update mytable set quantity=5 where id=201" \
              --transaction-id "ABC1234567890xyz"

       Output:

          {
              "numberOfRecordsUpdated": 1
          }

       Example 2: To execute a SQL statement with parameters

       The following execute-statement example runs a SQL statement  with  pa-
       rameters.

          aws rds-data execute-statement \
              --resource-arn "arn:aws:rds:us-east-1:123456789012:cluster:mydbcluster" \
              --database "mydb" \
              --secret-arn "arn:aws:secretsmanager:us-east-1:123456789012:secret:mysecret" \
              --sql "insert into mytable values (:id, :val)" \
              --parameters "[{\"name\": \"id\", \"value\": {\"longValue\": 1}},{\"name\": \"val\", \"value\": {\"stringValue\": \"value1\"}}]"

       Output:

          {
              "numberOfRecordsUpdated": 1
          }

       For  more  information, see Using the Data API for Aurora Serverless in
       the Amazon RDS User Guide.

OUTPUT
       records -> (list)
          The records returned by the SQL statement. This field  is  blank  if
          the formatRecordsAs parameter is set to JSON .

          (list)
              (tagged union structure)
                 Contains a value.

                 NOTE:
                     This is a Tagged Union structure. Only one of the follow-
                     ing top level keys  can  be  set:  isNull,  booleanValue,
                     longValue,  doubleValue,  stringValue,  blobValue, array-
                     Value.

                 isNull -> (boolean)
                     A NULL value.

                 booleanValue -> (boolean)
                     A value of Boolean data type.

                 longValue -> (long)
                     A value of long data type.

                 doubleValue -> (double)
                     A value of double data type.

                 stringValue -> (string)
                     A value of string data type.

                 blobValue -> (blob)
                     A value of BLOB data type.

                 arrayValue -> (tagged union structure)
                     An array of values.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing top level keys can be set: booleanValues, long-
                        Values, doubleValues, stringValues, arrayValues.

                     booleanValues -> (list)
                        An array of Boolean values.

                        (boolean)

                     longValues -> (list)
                        An array of integers.

                        (long)

                     doubleValues -> (list)
                        An array of floating-point numbers.

                        (double)

                     stringValues -> (list)
                        An array of strings.

                        (string)

                     arrayValues -> (list)
                        An array of arrays.

                        (tagged union structure)
                            Contains an array.

                            NOTE:
                               This is a Tagged Union structure. Only  one  of
                               the  following  top  level  keys  can  be  set:
                               booleanValues,    longValues,     doubleValues,
                               stringValues, arrayValues.

                            booleanValues -> (list)
                               An array of Boolean values.

                               (boolean)

                            longValues -> (list)
                               An array of integers.

                               (long)

                            doubleValues -> (list)
                               An array of floating-point numbers.

                               (double)

                            stringValues -> (list)
                               An array of strings.

                               (string)

                            arrayValues -> (list)
                               An array of arrays.

                               ( ... recursive ... )

       columnMetadata -> (list)
          Metadata  for  the  columns  included  in the results. This field is
          blank if the formatRecordsAs parameter is set to JSON .

          (structure)
              Contains the metadata for a column.

              name -> (string)
                 The name of the column.

              type -> (integer)
                 The type of the column.

              typeName -> (string)
                 The database-specific data type of the column.

              label -> (string)
                 The label for the column.

              schemaName -> (string)
                 The name of the schema that owns the table that includes  the
                 column.

              tableName -> (string)
                 The name of the table that includes the column.

              isAutoIncrement -> (boolean)
                 A value that indicates whether the column increments automat-
                 ically.

              isSigned -> (boolean)
                 A value that indicates whether an integer column is signed.

              isCurrency -> (boolean)
                 A value that indicates whether the column  contains  currency
                 values.

              isCaseSensitive -> (boolean)
                 A value that indicates whether the column is case-sensitive.

              nullable -> (integer)
                 A value that indicates whether the column is nullable.

              precision -> (integer)
                 The precision value of a decimal number column.

              scale -> (integer)
                 The scale value of a decimal number column.

              arrayBaseColumnType -> (integer)
                 The type of the column.

       numberOfRecordsUpdated -> (long)
          The number of records updated by the request.

       generatedFields -> (list)
          Values for fields generated during a DML request.

          NOTE:
              The  generatedFields  data isn't supported by Aurora PostgreSQL.
              To get the values of generated fields, use the RETURNING clause.
              For  more  information, see Returning Data From Modified Rows in
              the PostgreSQL documentation.

          (tagged union structure)
              Contains a value.

              NOTE:
                 This is a Tagged Union structure. Only one of  the  following
                 top  level  keys can be set: isNull, booleanValue, longValue,
                 doubleValue, stringValue, blobValue, arrayValue.

              isNull -> (boolean)
                 A NULL value.

              booleanValue -> (boolean)
                 A value of Boolean data type.

              longValue -> (long)
                 A value of long data type.

              doubleValue -> (double)
                 A value of double data type.

              stringValue -> (string)
                 A value of string data type.

              blobValue -> (blob)
                 A value of BLOB data type.

              arrayValue -> (tagged union structure)
                 An array of values.

                 NOTE:
                     This is a Tagged Union structure. Only one of the follow-
                     ing top level keys can be set: booleanValues, longValues,
                     doubleValues, stringValues, arrayValues.

                 booleanValues -> (list)
                     An array of Boolean values.

                     (boolean)

                 longValues -> (list)
                     An array of integers.

                     (long)

                 doubleValues -> (list)
                     An array of floating-point numbers.

                     (double)

                 stringValues -> (list)
                     An array of strings.

                     (string)

                 arrayValues -> (list)
                     An array of arrays.

                     (tagged union structure)
                        Contains an array.

                        NOTE:
                            This is a Tagged Union structure. Only one of  the
                            following  top  level keys can be set: booleanVal-
                            ues, longValues, doubleValues,  stringValues,  ar-
                            rayValues.

                        booleanValues -> (list)
                            An array of Boolean values.

                            (boolean)

                        longValues -> (list)
                            An array of integers.

                            (long)

                        doubleValues -> (list)
                            An array of floating-point numbers.

                            (double)

                        stringValues -> (list)
                            An array of strings.

                            (string)

                        arrayValues -> (list)
                            An array of arrays.

                            ( ... recursive ... )

       formattedRecords -> (string)
          A  string value that represents the result set of a SELECT statement
          in JSON format. This value is only present when the  formatRecordsAs
          parameter is set to JSON .

          The  size  limit for this field is currently 10 MB. If the JSON-for-
          matted string representing the result set requires more than 10  MB,
          the call returns an error.



                                                           EXECUTE-STATEMENT()
