CREATE-ENVIRONMENT()                                      CREATE-ENVIRONMENT()



NAME
       create-environment -

DESCRIPTION
       Creates  an Amazon Managed Workflows for Apache Airflow (MWAA) environ-
       ment.

       See also: AWS API Documentation

SYNOPSIS
            create-environment
          [--airflow-configuration-options <value>]
          [--airflow-version <value>]
          --dag-s3-path <value>
          [--environment-class <value>]
          --execution-role-arn <value>
          [--kms-key <value>]
          [--logging-configuration <value>]
          [--max-workers <value>]
          [--min-workers <value>]
          --name <value>
          --network-configuration <value>
          [--plugins-s3-object-version <value>]
          [--plugins-s3-path <value>]
          [--requirements-s3-object-version <value>]
          [--requirements-s3-path <value>]
          [--schedulers <value>]
          --source-bucket-arn <value>
          [--tags <value>]
          [--webserver-access-mode <value>]
          [--weekly-maintenance-window-start <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --airflow-configuration-options (map)
          A list of key-value pairs containing the Apache  Airflow  configura-
          tion  options you want to attach to your environment. To learn more,
          see Apache Airflow configuration options .

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --airflow-version (string)
          The Apache Airflow version for your  environment.  If  no  value  is
          specified,  it defaults to the latest version. Valid values: 1.10.12
          , 2.0.2 , and 2.2.2 . To learn more, see Apache Airflow versions  on
          Amazon Managed Workflows for Apache Airflow (MWAA) .

       --dag-s3-path (string)
          The  relative  path to the DAGs folder on your Amazon S3 bucket. For
          example, dags . To learn more, see Adding or updating DAGs .

       --environment-class (string)
          The environment class type. Valid values: mw1.small ,  mw1.medium  ,
          mw1.large . To learn more, see Amazon MWAA environment class .

       --execution-role-arn (string)
          The  Amazon Resource Name (ARN) of the execution role for your envi-
          ronment. An execution role is an Amazon Web  Services  Identity  and
          Access  Management  (IAM) role that grants MWAA permission to access
          Amazon Web Services services and resources used by your environment.
          For   example,  arn:aws:iam::123456789:role/my-execution-role  .  To
          learn more, see Amazon MWAA Execution role .

       --kms-key (string)
          The Amazon Web Services Key Management Service (KMS) key to  encrypt
          the  data  in  your  environment. You can use an Amazon Web Services
          owned CMK, or a Customer managed CMK (advanced). To learn more,  see
          Create an Amazon MWAA environment .

       --logging-configuration (structure)
          Defines the Apache Airflow logs to send to CloudWatch Logs.

          DagProcessingLogs -> (structure)
              Publishes Airflow DAG processing logs to CloudWatch Logs.

              Enabled -> (boolean)
                 Indicates whether to enable the Apache Airflow log type (e.g.
                 DagProcessingLogs ).

              LogLevel -> (string)
                 Defines the Apache Airflow log level (e.g. INFO ) to send  to
                 CloudWatch Logs.

          SchedulerLogs -> (structure)
              Publishes Airflow scheduler logs to CloudWatch Logs.

              Enabled -> (boolean)
                 Indicates whether to enable the Apache Airflow log type (e.g.
                 DagProcessingLogs ).

              LogLevel -> (string)
                 Defines the Apache Airflow log level (e.g. INFO ) to send  to
                 CloudWatch Logs.

          TaskLogs -> (structure)
              Publishes Airflow task logs to CloudWatch Logs.

              Enabled -> (boolean)
                 Indicates whether to enable the Apache Airflow log type (e.g.
                 DagProcessingLogs ).

              LogLevel -> (string)
                 Defines the Apache Airflow log level (e.g. INFO ) to send  to
                 CloudWatch Logs.

          WebserverLogs -> (structure)
              Publishes Airflow web server logs to CloudWatch Logs.

              Enabled -> (boolean)
                 Indicates whether to enable the Apache Airflow log type (e.g.
                 DagProcessingLogs ).

              LogLevel -> (string)
                 Defines the Apache Airflow log level (e.g. INFO ) to send  to
                 CloudWatch Logs.

          WorkerLogs -> (structure)
              Publishes Airflow worker logs to CloudWatch Logs.

              Enabled -> (boolean)
                 Indicates whether to enable the Apache Airflow log type (e.g.
                 DagProcessingLogs ).

              LogLevel -> (string)
                 Defines the Apache Airflow log level (e.g. INFO ) to send  to
                 CloudWatch Logs.

       Shorthand Syntax:

          DagProcessingLogs={Enabled=boolean,LogLevel=string},SchedulerLogs={Enabled=boolean,LogLevel=string},TaskLogs={Enabled=boolean,LogLevel=string},WebserverLogs={Enabled=boolean,LogLevel=string},WorkerLogs={Enabled=boolean,LogLevel=string}

       JSON Syntax:

          {
            "DagProcessingLogs": {
              "Enabled": true|false,
              "LogLevel": "CRITICAL"|"ERROR"|"WARNING"|"INFO"|"DEBUG"
            },
            "SchedulerLogs": {
              "Enabled": true|false,
              "LogLevel": "CRITICAL"|"ERROR"|"WARNING"|"INFO"|"DEBUG"
            },
            "TaskLogs": {
              "Enabled": true|false,
              "LogLevel": "CRITICAL"|"ERROR"|"WARNING"|"INFO"|"DEBUG"
            },
            "WebserverLogs": {
              "Enabled": true|false,
              "LogLevel": "CRITICAL"|"ERROR"|"WARNING"|"INFO"|"DEBUG"
            },
            "WorkerLogs": {
              "Enabled": true|false,
              "LogLevel": "CRITICAL"|"ERROR"|"WARNING"|"INFO"|"DEBUG"
            }
          }

       --max-workers (integer)
          The  maximum number of workers that you want to run in your environ-
          ment. MWAA scales the number of Apache Airflow  workers  up  to  the
          number  you  specify in the MaxWorkers field. For example, 20 . When
          there are no more tasks running, and no more in the queue, MWAA dis-
          poses  of  the extra workers leaving the one worker that is included
          with your environment, or the number you specify in MinWorkers .

       --min-workers (integer)
          The minimum number of workers that you want to run in your  environ-
          ment.  MWAA  scales  the  number of Apache Airflow workers up to the
          number you specify in the MaxWorkers field. When there are  no  more
          tasks  running, and no more in the queue, MWAA disposes of the extra
          workers leaving the worker  count  you  specify  in  the  MinWorkers
          field. For example, 2 .

       --name (string)
          The name of the Amazon MWAA environment. For example, MyMWAAEnviron-
          ment .

       --network-configuration (structure)
          The VPC networking components used  to  secure  and  enable  network
          traffic  between the Amazon Web Services resources for your environ-
          ment. To learn more, see About networking on Amazon MWAA .

          SecurityGroupIds -> (list)
              A list of security group IDs. To learn  more,  see  Security  in
              your VPC on Amazon MWAA .

              (string)

          SubnetIds -> (list)
              A  list  of  subnet  IDs. To learn more, see About networking on
              Amazon MWAA .

              (string)

       Shorthand Syntax:

          SecurityGroupIds=string,string,SubnetIds=string,string

       JSON Syntax:

          {
            "SecurityGroupIds": ["string", ...],
            "SubnetIds": ["string", ...]
          }

       --plugins-s3-object-version (string)
          The version of the plugins.zip file on your Amazon S3 bucket. A ver-
          sion  must  be specified each time a plugins.zip file is updated. To
          learn more, see How S3 Versioning works .

       --plugins-s3-path (string)
          The relative path to the plugins.zip file on your Amazon S3  bucket.
          For  example,  plugins.zip . If specified, then the plugins.zip ver-
          sion is required. To learn more, see Installing custom plugins .

       --requirements-s3-object-version (string)
          The version of the requirements.txt file on your Amazon S3 bucket. A
          version  must  be specified each time a requirements.txt file is up-
          dated. To learn more, see How S3 Versioning works .

       --requirements-s3-path (string)
          The relative path to the requirements.txt file  on  your  Amazon  S3
          bucket.  For  example,  requirements.txt . If specified, then a file
          version is required. To learn more, see Installing Python  dependen-
          cies .

       --schedulers (integer)
          The  number of Apache Airflow schedulers to run in your environment.
          Valid values:

          o v2 - Accepts between 2 to 5. Defaults to 2.

          o v1 - Accepts 1.

       --source-bucket-arn (string)
          The Amazon Resource Name (ARN) of the Amazon S3  bucket  where  your
          DAG   code   and   supporting   files   are   stored.  For  example,
          arn:aws:s3:::my-airflow-bucket-unique-name  .  To  learn  more,  see
          Create an Amazon S3 bucket for Amazon MWAA .

       --tags (map)
          The  key-value  tag pairs you want to associate to your environment.
          For example, "Environment": "Staging" . To learn more,  see  Tagging
          Amazon Web Services resources .

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --webserver-access-mode (string)
          The Apache Airflow Web server access mode. To learn more, see Apache
          Airflow access modes .

          Possible values:

          o PRIVATE_ONLY

          o PUBLIC_ONLY

       --weekly-maintenance-window-start (string)
          The day and time of the week in  Coordinated  Universal  Time  (UTC)
          24-hour  standard  time  to start weekly maintenance updates of your
          environment in  the  following  format:  DAY:HH:MM  .  For  example:
          TUE:03:30  .  You  can  specify a start time in 30 minute increments
          only.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       Arn -> (string)
          The  Amazon Resource Name (ARN) returned in the response for the en-
          vironment.



                                                          CREATE-ENVIRONMENT()
