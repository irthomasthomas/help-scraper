SEARCH-CASES()                                                  SEARCH-CASES()



NAME
       search-cases -

DESCRIPTION
       Searches for cases within their associated Cases domain. Search results
       are returned as a paginated list of abridged case documents.

       See also: AWS API Documentation

       search-cases is a paginated operation. Multiple API calls may be issued
       in  order  to  retrieve the entire data set of results. You can disable
       pagination by providing the --no-paginate argument.  When using  --out-
       put  text and the --query argument on a paginated response, the --query
       argument must extract data from the results of the following query  ex-
       pressions: cases

SYNOPSIS
            search-cases
          --domain-id <value>
          [--fields <value>]
          [--filter <value>]
          [--search-term <value>]
          [--sorts <value>]
          [--cli-input-json <value>]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --domain-id (string)
          The unique identifier of the Cases domain.

       --fields (list)
          The  list  of  field  identifiers  to be returned as part of the re-
          sponse.

          (structure)
              Object for unique identifier of a field.

              id -> (string)
                 Unique identifier of a field.

       Shorthand Syntax:

          id=string ...

       JSON Syntax:

          [
            {
              "id": "string"
            }
            ...
          ]

       --filter (tagged union structure)
          A list of filter objects.

          NOTE:
              This is a Tagged Union structure. Only one of the following  top
              level keys can be set: andAll, field, not.

          andAll -> (list)
              Provides "and all" filtering.

              (tagged union structure)
                 A filter for cases. Only one value can be provided.

                 NOTE:
                     This is a Tagged Union structure. Only one of the follow-
                     ing top level keys can be set: andAll, field, not.

                 andAll -> (list)
                     Provides "and all" filtering.

                     ( ... recursive ... )

                 field -> (tagged union structure)
                     A list of fields to filter on.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing  top  level keys can be set: contains, equalTo,
                        greaterThan,      greaterThanOrEqualTo,      lessThan,
                        lessThanOrEqualTo.

                     contains -> (structure)
                        Object  containing field identifier and value informa-
                        tion.

                        id -> (string)
                            Unique identifier of a field.

                        value -> (tagged union structure)
                            Union of potential field value types.

                            NOTE:
                               This is a Tagged Union structure. Only  one  of
                               the  following  top  level  keys  can  be  set:
                               booleanValue, doubleValue, stringValue.

                            booleanValue -> (boolean)
                               Can be either null, or  have  a  Boolean  value
                               type. Only one value can be provided.

                            doubleValue -> (double)
                               Can  be  either  null,  or have a Double number
                               value type. Only one value can be provided.

                            stringValue -> (string)
                               String value type.

                     equalTo -> (structure)
                        Object containing field identifier and value  informa-
                        tion.

                        id -> (string)
                            Unique identifier of a field.

                        value -> (tagged union structure)
                            Union of potential field value types.

                            NOTE:
                               This  is  a Tagged Union structure. Only one of
                               the  following  top  level  keys  can  be  set:
                               booleanValue, doubleValue, stringValue.

                            booleanValue -> (boolean)
                               Can  be  either  null,  or have a Boolean value
                               type. Only one value can be provided.

                            doubleValue -> (double)
                               Can be either null, or  have  a  Double  number
                               value type. Only one value can be provided.

                            stringValue -> (string)
                               String value type.

                     greaterThan -> (structure)
                        Object  containing field identifier and value informa-
                        tion.

                        id -> (string)
                            Unique identifier of a field.

                        value -> (tagged union structure)
                            Union of potential field value types.

                            NOTE:
                               This is a Tagged Union structure. Only  one  of
                               the  following  top  level  keys  can  be  set:
                               booleanValue, doubleValue, stringValue.

                            booleanValue -> (boolean)
                               Can be either null, or  have  a  Boolean  value
                               type. Only one value can be provided.

                            doubleValue -> (double)
                               Can  be  either  null,  or have a Double number
                               value type. Only one value can be provided.

                            stringValue -> (string)
                               String value type.

                     greaterThanOrEqualTo -> (structure)
                        Object containing field identifier and value  informa-
                        tion.

                        id -> (string)
                            Unique identifier of a field.

                        value -> (tagged union structure)
                            Union of potential field value types.

                            NOTE:
                               This  is  a Tagged Union structure. Only one of
                               the  following  top  level  keys  can  be  set:
                               booleanValue, doubleValue, stringValue.

                            booleanValue -> (boolean)
                               Can  be  either  null,  or have a Boolean value
                               type. Only one value can be provided.

                            doubleValue -> (double)
                               Can be either null, or  have  a  Double  number
                               value type. Only one value can be provided.

                            stringValue -> (string)
                               String value type.

                     lessThan -> (structure)
                        Object  containing field identifier and value informa-
                        tion.

                        id -> (string)
                            Unique identifier of a field.

                        value -> (tagged union structure)
                            Union of potential field value types.

                            NOTE:
                               This is a Tagged Union structure. Only  one  of
                               the  following  top  level  keys  can  be  set:
                               booleanValue, doubleValue, stringValue.

                            booleanValue -> (boolean)
                               Can be either null, or  have  a  Boolean  value
                               type. Only one value can be provided.

                            doubleValue -> (double)
                               Can  be  either  null,  or have a Double number
                               value type. Only one value can be provided.

                            stringValue -> (string)
                               String value type.

                     lessThanOrEqualTo -> (structure)
                        Object containing field identifier and value  informa-
                        tion.

                        id -> (string)
                            Unique identifier of a field.

                        value -> (tagged union structure)
                            Union of potential field value types.

                            NOTE:
                               This  is  a Tagged Union structure. Only one of
                               the  following  top  level  keys  can  be  set:
                               booleanValue, doubleValue, stringValue.

                            booleanValue -> (boolean)
                               Can  be  either  null,  or have a Boolean value
                               type. Only one value can be provided.

                            doubleValue -> (double)
                               Can be either null, or  have  a  Double  number
                               value type. Only one value can be provided.

                            stringValue -> (string)
                               String value type.

                 ( ... recursive ... )

          field -> (tagged union structure)
              A list of fields to filter on.

              NOTE:
                 This  is  a Tagged Union structure. Only one of the following
                 top level keys can be set:  contains,  equalTo,  greaterThan,
                 greaterThanOrEqualTo, lessThan, lessThanOrEqualTo.

              contains -> (structure)
                 Object containing field identifier and value information.

                 id -> (string)
                     Unique identifier of a field.

                 value -> (tagged union structure)
                     Union of potential field value types.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing top level keys can be set: booleanValue, doubl-
                        eValue, stringValue.

                     booleanValue -> (boolean)
                        Can be either null, or have a Boolean value type. Only
                        one value can be provided.

                     doubleValue -> (double)
                        Can be either null, or  have  a  Double  number  value
                        type. Only one value can be provided.

                     stringValue -> (string)
                        String value type.

              equalTo -> (structure)
                 Object containing field identifier and value information.

                 id -> (string)
                     Unique identifier of a field.

                 value -> (tagged union structure)
                     Union of potential field value types.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing top level keys can be set: booleanValue, doubl-
                        eValue, stringValue.

                     booleanValue -> (boolean)
                        Can be either null, or have a Boolean value type. Only
                        one value can be provided.

                     doubleValue -> (double)
                        Can be either null, or  have  a  Double  number  value
                        type. Only one value can be provided.

                     stringValue -> (string)
                        String value type.

              greaterThan -> (structure)
                 Object containing field identifier and value information.

                 id -> (string)
                     Unique identifier of a field.

                 value -> (tagged union structure)
                     Union of potential field value types.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing top level keys can be set: booleanValue, doubl-
                        eValue, stringValue.

                     booleanValue -> (boolean)
                        Can be either null, or have a Boolean value type. Only
                        one value can be provided.

                     doubleValue -> (double)
                        Can be either null, or  have  a  Double  number  value
                        type. Only one value can be provided.

                     stringValue -> (string)
                        String value type.

              greaterThanOrEqualTo -> (structure)
                 Object containing field identifier and value information.

                 id -> (string)
                     Unique identifier of a field.

                 value -> (tagged union structure)
                     Union of potential field value types.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing top level keys can be set: booleanValue, doubl-
                        eValue, stringValue.

                     booleanValue -> (boolean)
                        Can be either null, or have a Boolean value type. Only
                        one value can be provided.

                     doubleValue -> (double)
                        Can be either null, or  have  a  Double  number  value
                        type. Only one value can be provided.

                     stringValue -> (string)
                        String value type.

              lessThan -> (structure)
                 Object containing field identifier and value information.

                 id -> (string)
                     Unique identifier of a field.

                 value -> (tagged union structure)
                     Union of potential field value types.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing top level keys can be set: booleanValue, doubl-
                        eValue, stringValue.

                     booleanValue -> (boolean)
                        Can be either null, or have a Boolean value type. Only
                        one value can be provided.

                     doubleValue -> (double)
                        Can be either null, or  have  a  Double  number  value
                        type. Only one value can be provided.

                     stringValue -> (string)
                        String value type.

              lessThanOrEqualTo -> (structure)
                 Object containing field identifier and value information.

                 id -> (string)
                     Unique identifier of a field.

                 value -> (tagged union structure)
                     Union of potential field value types.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing top level keys can be set: booleanValue, doubl-
                        eValue, stringValue.

                     booleanValue -> (boolean)
                        Can be either null, or have a Boolean value type. Only
                        one value can be provided.

                     doubleValue -> (double)
                        Can be either null, or  have  a  Double  number  value
                        type. Only one value can be provided.

                     stringValue -> (string)
                        String value type.

          not -> (tagged union structure)
              A filter for cases. Only one value can be provided.

              NOTE:
                 This  is  a Tagged Union structure. Only one of the following
                 top level keys can be set: andAll, field, not.

              andAll -> (list)
                 Provides "and all" filtering.

                 ( ... recursive ... )

              field -> (tagged union structure)
                 A list of fields to filter on.

                 NOTE:
                     This is a Tagged Union structure. Only one of the follow-
                     ing  top  level  keys  can  be  set:  contains,  equalTo,
                     greaterThan, greaterThanOrEqualTo, lessThan, lessThanOrE-
                     qualTo.

                 contains -> (structure)
                     Object containing field identifier and value information.

                     id -> (string)
                        Unique identifier of a field.

                     value -> (tagged union structure)
                        Union of potential field value types.

                        NOTE:
                            This  is a Tagged Union structure. Only one of the
                            following top level keys can be set: booleanValue,
                            doubleValue, stringValue.

                        booleanValue -> (boolean)
                            Can  be either null, or have a Boolean value type.
                            Only one value can be provided.

                        doubleValue -> (double)
                            Can be either null, or have a Double number  value
                            type. Only one value can be provided.

                        stringValue -> (string)
                            String value type.

                 equalTo -> (structure)
                     Object containing field identifier and value information.

                     id -> (string)
                        Unique identifier of a field.

                     value -> (tagged union structure)
                        Union of potential field value types.

                        NOTE:
                            This  is a Tagged Union structure. Only one of the
                            following top level keys can be set: booleanValue,
                            doubleValue, stringValue.

                        booleanValue -> (boolean)
                            Can  be either null, or have a Boolean value type.
                            Only one value can be provided.

                        doubleValue -> (double)
                            Can be either null, or have a Double number  value
                            type. Only one value can be provided.

                        stringValue -> (string)
                            String value type.

                 greaterThan -> (structure)
                     Object containing field identifier and value information.

                     id -> (string)
                        Unique identifier of a field.

                     value -> (tagged union structure)
                        Union of potential field value types.

                        NOTE:
                            This  is a Tagged Union structure. Only one of the
                            following top level keys can be set: booleanValue,
                            doubleValue, stringValue.

                        booleanValue -> (boolean)
                            Can  be either null, or have a Boolean value type.
                            Only one value can be provided.

                        doubleValue -> (double)
                            Can be either null, or have a Double number  value
                            type. Only one value can be provided.

                        stringValue -> (string)
                            String value type.

                 greaterThanOrEqualTo -> (structure)
                     Object containing field identifier and value information.

                     id -> (string)
                        Unique identifier of a field.

                     value -> (tagged union structure)
                        Union of potential field value types.

                        NOTE:
                            This  is a Tagged Union structure. Only one of the
                            following top level keys can be set: booleanValue,
                            doubleValue, stringValue.

                        booleanValue -> (boolean)
                            Can  be either null, or have a Boolean value type.
                            Only one value can be provided.

                        doubleValue -> (double)
                            Can be either null, or have a Double number  value
                            type. Only one value can be provided.

                        stringValue -> (string)
                            String value type.

                 lessThan -> (structure)
                     Object containing field identifier and value information.

                     id -> (string)
                        Unique identifier of a field.

                     value -> (tagged union structure)
                        Union of potential field value types.

                        NOTE:
                            This  is a Tagged Union structure. Only one of the
                            following top level keys can be set: booleanValue,
                            doubleValue, stringValue.

                        booleanValue -> (boolean)
                            Can  be either null, or have a Boolean value type.
                            Only one value can be provided.

                        doubleValue -> (double)
                            Can be either null, or have a Double number  value
                            type. Only one value can be provided.

                        stringValue -> (string)
                            String value type.

                 lessThanOrEqualTo -> (structure)
                     Object containing field identifier and value information.

                     id -> (string)
                        Unique identifier of a field.

                     value -> (tagged union structure)
                        Union of potential field value types.

                        NOTE:
                            This  is a Tagged Union structure. Only one of the
                            following top level keys can be set: booleanValue,
                            doubleValue, stringValue.

                        booleanValue -> (boolean)
                            Can  be either null, or have a Boolean value type.
                            Only one value can be provided.

                        doubleValue -> (double)
                            Can be either null, or have a Double number  value
                            type. Only one value can be provided.

                        stringValue -> (string)
                            String value type.

              ( ... recursive ... )

       JSON Syntax:

          {
            "andAll": [
              {
                "andAll": [
                  { ... recursive ... }
                  ...
                ],
                "field": {
                  "contains": {
                    "id": "string",
                    "value": {
                      "booleanValue": true|false,
                      "doubleValue": double,
                      "stringValue": "string"
                    }
                  },
                  "equalTo": {
                    "id": "string",
                    "value": {
                      "booleanValue": true|false,
                      "doubleValue": double,
                      "stringValue": "string"
                    }
                  },
                  "greaterThan": {
                    "id": "string",
                    "value": {
                      "booleanValue": true|false,
                      "doubleValue": double,
                      "stringValue": "string"
                    }
                  },
                  "greaterThanOrEqualTo": {
                    "id": "string",
                    "value": {
                      "booleanValue": true|false,
                      "doubleValue": double,
                      "stringValue": "string"
                    }
                  },
                  "lessThan": {
                    "id": "string",
                    "value": {
                      "booleanValue": true|false,
                      "doubleValue": double,
                      "stringValue": "string"
                    }
                  },
                  "lessThanOrEqualTo": {
                    "id": "string",
                    "value": {
                      "booleanValue": true|false,
                      "doubleValue": double,
                      "stringValue": "string"
                    }
                  }
                },
                "not": { ... recursive ... }
              }
              ...
            ],
            "field": {
              "contains": {
                "id": "string",
                "value": {
                  "booleanValue": true|false,
                  "doubleValue": double,
                  "stringValue": "string"
                }
              },
              "equalTo": {
                "id": "string",
                "value": {
                  "booleanValue": true|false,
                  "doubleValue": double,
                  "stringValue": "string"
                }
              },
              "greaterThan": {
                "id": "string",
                "value": {
                  "booleanValue": true|false,
                  "doubleValue": double,
                  "stringValue": "string"
                }
              },
              "greaterThanOrEqualTo": {
                "id": "string",
                "value": {
                  "booleanValue": true|false,
                  "doubleValue": double,
                  "stringValue": "string"
                }
              },
              "lessThan": {
                "id": "string",
                "value": {
                  "booleanValue": true|false,
                  "doubleValue": double,
                  "stringValue": "string"
                }
              },
              "lessThanOrEqualTo": {
                "id": "string",
                "value": {
                  "booleanValue": true|false,
                  "doubleValue": double,
                  "stringValue": "string"
                }
              }
            },
            "not": {
              "andAll": [
                { ... recursive ... }
                ...
              ],
              "field": {
                "contains": {
                  "id": "string",
                  "value": {
                    "booleanValue": true|false,
                    "doubleValue": double,
                    "stringValue": "string"
                  }
                },
                "equalTo": {
                  "id": "string",
                  "value": {
                    "booleanValue": true|false,
                    "doubleValue": double,
                    "stringValue": "string"
                  }
                },
                "greaterThan": {
                  "id": "string",
                  "value": {
                    "booleanValue": true|false,
                    "doubleValue": double,
                    "stringValue": "string"
                  }
                },
                "greaterThanOrEqualTo": {
                  "id": "string",
                  "value": {
                    "booleanValue": true|false,
                    "doubleValue": double,
                    "stringValue": "string"
                  }
                },
                "lessThan": {
                  "id": "string",
                  "value": {
                    "booleanValue": true|false,
                    "doubleValue": double,
                    "stringValue": "string"
                  }
                },
                "lessThanOrEqualTo": {
                  "id": "string",
                  "value": {
                    "booleanValue": true|false,
                    "doubleValue": double,
                    "stringValue": "string"
                  }
                }
              },
              "not": { ... recursive ... }
            }
          }

       --search-term (string)
          A word or phrase used to perform a quick search.

       --sorts (list)
          A list of sorts where each sort specifies a field and their sort or-
          der to be applied to the results.

          (structure)
              A structured set of sort terms.

              fieldId -> (string)
                 Unique identifier of a field.

              sortOrder -> (string)
                 A structured set of sort terms

       Shorthand Syntax:

          fieldId=string,sortOrder=string ...

       JSON Syntax:

          [
            {
              "fieldId": "string",
              "sortOrder": "Asc"|"Desc"
            }
            ...
          ]

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --starting-token (string)
          A  token to specify where to start paginating. This is the NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The  size of each page to get in the AWS service call. This does not
          affect the number of items returned in the command's output. Setting
          a  smaller  page  size results in more calls to the AWS service, re-
          trieving fewer items in each call. This can  help  prevent  the  AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The total number of items to return in the command's output. If  the
          total  number of items available is more than the value specified, a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent command. Do not use the NextToken response element  directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       cases -> (list)
          A list of case documents where each case contains the properties Ca-
          seId and Fields where each field is a complex union structure.

          (structure)
              A list of items that represent cases.

              caseId -> (string)
                 A unique identifier of the case.

              fields -> (list)
                 List of case field values.

                 (structure)
                     Object for case field values.

                     id -> (string)
                        Unique identifier of a field.

                     value -> (tagged union structure)
                        Union of potential field value types.

                        NOTE:
                            This  is a Tagged Union structure. Only one of the
                            following top level keys can be set: booleanValue,
                            doubleValue, stringValue.

                        booleanValue -> (boolean)
                            Can  be either null, or have a Boolean value type.
                            Only one value can be provided.

                        doubleValue -> (double)
                            Can be either null, or have a Double number  value
                            type. Only one value can be provided.

                        stringValue -> (string)
                            String value type.

              tags -> (map)
                 A  map  of  of  key-value  pairs that represent tags on a re-
                 source. Tags are used to organize, track, or  control  access
                 for this resource.

                 key -> (string)

                 value -> (string)

              templateId -> (string)
                 A unique identifier of a template.

       nextToken -> (string)
          The  token for the next set of results. This is null if there are no
          more results to return.



                                                                SEARCH-CASES()
