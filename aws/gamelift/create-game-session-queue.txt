CREATE-GAME-SESSION-QUEUE()                        CREATE-GAME-SESSION-QUEUE()



NAME
       create-game-session-queue -

DESCRIPTION
       Creates  a  placement  queue  that processes requests for new game ses-
       sions. A queue uses FleetIQ algorithms to determine the best  placement
       locations  and  find  an  available game server there, then prompts the
       game server process to start a new game session.

       A game session queue is configured with a set of  destinations  (Amazon
       GameLift  fleets  or  aliases), which determine the locations where the
       queue can place new game sessions. These destinations can span multiple
       fleet  types  (Spot and On-Demand), instance types, and Amazon Web Ser-
       vices Regions. If the queue includes multi-location fleets,  the  queue
       is  able  to  place game sessions in all of a fleet's remote locations.
       You can opt to filter out individual locations if needed.

       The queue configuration also determines how FleetIQ  selects  the  best
       available  placement  for  a  new game session. Before searching for an
       available game server, FleetIQ first prioritizes the  queue's  destina-
       tions  and locations, with the best placement locations on top. You can
       set up the queue to use the FleetIQ default prioritization  or  provide
       an alternate set of priorities.

       To  create  a  new  queue, provide a name, timeout value, and a list of
       destinations. Optionally, specify a sort configuration and/or a filter,
       and  define a set of latency cap policies. You can also include the ARN
       for an Amazon Simple Notification Service (SNS) topic to receive  noti-
       fications  of  game session placement activity. Notifications using SNS
       or CloudWatch events is the preferred way to track placement activity.

       If successful, a new GameSessionQueue object is returned  with  an  as-
       signed  queue  ARN.  New  game session requests, which are submitted to
       queue with StartGameSessionPlacement or StartMatchmaking , reference  a
       queue's name or ARN.
          Learn more

          Design a game session queue

          Create a game session queue

          Related actions

          CreateGameSessionQueue       |      DescribeGameSessionQueues      |
          UpdateGameSessionQueue | DeleteGameSessionQueue | All APIs by task

       See also: AWS API Documentation

SYNOPSIS
            create-game-session-queue
          --name <value>
          [--timeout-in-seconds <value>]
          [--player-latency-policies <value>]
          [--destinations <value>]
          [--filter-configuration <value>]
          [--priority-configuration <value>]
          [--custom-event-data <value>]
          [--notification-target <value>]
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --name (string)
          A descriptive label that is  associated  with  game  session  queue.
          Queue names must be unique within each Region.

       --timeout-in-seconds (integer)
          The  maximum time, in seconds, that a new game session placement re-
          quest remains in the queue. When a request exceeds  this  time,  the
          game session placement changes to a TIMED_OUT status.

       --player-latency-policies (list)
          A  set of policies that enforce a sliding cap on player latency when
          processing game sessions placement requests. Use  multiple  policies
          to gradually relax the cap over time if Amazon GameLift can't make a
          placement. Policies are evaluated in order starting with the  lowest
          maximum latency value.

          (structure)
              Sets  a  latency  cap for individual players when placing a game
              session. With a latency policy in force, a game  session  cannot
              be  placed  in  a  fleet location where a player reports latency
              higher than the cap. Latency policies are used only with  place-
              ment request that provide player latency information. Player la-
              tency policies can be stacked to  gradually  relax  latency  re-
              quirements over time.

              MaximumIndividualPlayerLatencyMilliseconds -> (integer)
                 The  maximum latency value that is allowed for any player, in
                 milliseconds. All policies must have a  value  set  for  this
                 property.

              PolicyDurationSeconds -> (integer)
                 The  length  of time, in seconds, that the policy is enforced
                 while placing a new game session. A null value for this prop-
                 erty  means that the policy is enforced until the queue times
                 out.

       Shorthand Syntax:

          MaximumIndividualPlayerLatencyMilliseconds=integer,PolicyDurationSeconds=integer ...

       JSON Syntax:

          [
            {
              "MaximumIndividualPlayerLatencyMilliseconds": integer,
              "PolicyDurationSeconds": integer
            }
            ...
          ]

       --destinations (list)
          A list of fleets and/or fleet aliases that can be  used  to  fulfill
          game session placement requests in the queue. Destinations are iden-
          tified by either a fleet ARN or a fleet alias ARN, and are listed in
          order of placement preference.

          (structure)
              A fleet or alias designated in a game session queue. Queues ful-
              fill requests for new game sessions by placing a new  game  ses-
              sion on any of the queue's destinations.

              DestinationArn -> (string)
                 The  Amazon  Resource Name (ARN) that is assigned to fleet or
                 fleet alias. ARNs, which include a fleet ID or alias ID and a
                 Region name, provide a unique identifier across all Regions.

       Shorthand Syntax:

          DestinationArn=string ...

       JSON Syntax:

          [
            {
              "DestinationArn": "string"
            }
            ...
          ]

       --filter-configuration (structure)
          A  list of locations where a queue is allowed to place new game ses-
          sions. Locations are specified in the form of  Amazon  Web  Services
          Region codes, such as us-west-2 . If this parameter is not set, game
          sessions can be placed in any queue location.

          AllowedLocations -> (list)
              A list of locations to allow game session placement in,  in  the
              form of Amazon Web Services Region codes such as us-west-2 .

              (string)

       Shorthand Syntax:

          AllowedLocations=string,string

       JSON Syntax:

          {
            "AllowedLocations": ["string", ...]
          }

       --priority-configuration (structure)
          Custom  settings to use when prioritizing destinations and locations
          for game session placements. This configuration replaces the FleetIQ
          default  prioritization process. Priority types that are not explic-
          itly named will be automatically applied at the end of the prioriti-
          zation process.

          PriorityOrder -> (list)
              The recommended sequence to use when prioritizing where to place
              new game sessions. Each type can only be listed once.

              o LATENCY -- FleetIQ prioritizes  locations  where  the  average
                player latency (provided in each game session request) is low-
                est.

              o COST -- FleetIQ prioritizes destinations with the lowest  cur-
                rent  hosting  costs. Cost is evaluated based on the location,
                instance type, and fleet type (Spot  or  On-Demand)  for  each
                destination in the queue.

              o DESTINATION  --  FleetIQ  prioritizes  based on the order that
                destinations are listed in the queue configuration.

              o LOCATION -- FleetIQ prioritizes based on the provided order of
                locations, as defined in LocationOrder .

              (string)

          LocationOrder -> (list)
              The  prioritization  order  to use for fleet locations, when the
              PriorityOrder property includes LOCATION . Locations are identi-
              fied  by  Amazon  Web  Services Region codes such as us-west-2 .
              Each location can only be listed once.

              (string)

       Shorthand Syntax:

          PriorityOrder=string,string,LocationOrder=string,string

       JSON Syntax:

          {
            "PriorityOrder": ["LATENCY"|"COST"|"DESTINATION"|"LOCATION", ...],
            "LocationOrder": ["string", ...]
          }

       --custom-event-data (string)
          Information to be added to all events that are related to this  game
          session queue.

       --notification-target (string)
          An  SNS  topic  ARN that is set up to receive game session placement
          notifications. See Setting up notifications for game session  place-
          ment .

       --tags (list)
          A  list  of labels to assign to the new game session queue resource.
          Tags are developer-defined key-value pairs. Tagging Amazon Web  Ser-
          vices  resources  are useful for resource management, access manage-
          ment and cost allocation. For more information, see  Tagging  Amazon
          Web  Services Resources in the Amazon Web Services General Reference
          .

          (structure)
              A label that you can assign to a Amazon GameLift resource.
                 Learn more

                 Tagging Amazon Web Services Resources in the Amazon Web  Ser-
                 vices General Reference

                 Amazon Web Services Tagging Strategies

                 Related actions

                 All APIs by task

              Key -> (string)
                 The key for a developer-defined key value pair for tagging an
                 Amazon Web Services resource.

              Value -> (string)
                 The value for a developer-defined key value pair for  tagging
                 an Amazon Web Services resource.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       Example1: To set up an ordered game session queue

       The following create-game-session-queue example creates a new game ses-
       sion  queue  with  destinations  in two regions. It also configures the
       queue so that game session requests time out after waiting  10  minutes
       for placement. Since no latency policies are defined, GameLift attempts
       to place all game sessions with the first destination listed.

          aws gamelift create-game-session-queue \
              --name MegaFrogRaceServer-NA \
              --destinations file://destinations.json \
              --timeout-in-seconds 600

       Contents of destinations.json:

          {
              "Destinations": [
                  {"DestinationArn": "arn:aws:gamelift:us-west-2::fleet/fleet-a1b2c3d4-5678-90ab-cdef-EXAMPLE11111" },
                  {"DestinationArn": "arn:aws:gamelift:us-west-1::fleet/fleet-a1b2c3d4-5678-90ab-cdef-EXAMPLE22222" }
              ]
          }

       Output:

          {
              "GameSessionQueues": [
                  {
                      "Name": "MegaFrogRaceServer-NA",
                      "GameSessionQueueArn": "arn:aws:gamelift:us-west-2:123456789012:gamesessionqueue/MegaFrogRaceServer-NA",
                      "TimeoutInSeconds": 600,
                      "Destinations": [
                          {"DestinationArn": "arn:aws:gamelift:us-west-2::fleet/fleet-a1b2c3d4-5678-90ab-cdef-EXAMPLE11111"},
                          {"DestinationArn": "arn:aws:gamelift:us-west-1::fleet/fleet-a1b2c3d4-5678-90ab-cdef-EXAMPLE22222"}
                      ]
                  }
              ]
          }

       Example2: To set up a game session queue with player latency policies

       The following create-game-session-queue example creates a new game ses-
       sion  queue  with  two player latency policies. The first policy sets a
       100ms latency cap that is enforced during the first minute  of  a  game
       session  placement attempt. The second policy raises the latency cap to
       200ms until the placement request times out at 3 minutes.

          aws gamelift create-game-session-queue \
              --name MegaFrogRaceServer-NA \
              --destinations file://destinations.json \
              --player-latency-policies file://latency-policies.json \
              --timeout-in-seconds 180

       Contents of destinations.json:

          {
              "Destinations": [
                  { "DestinationArn": "arn:aws:gamelift:us-west-2::fleet/fleet-a1b2c3d4-5678-90ab-cdef-EXAMPLE11111" },
                  { "DestinationArn": "arn:aws:gamelift:us-east-1::fleet/fleet-a1b2c3d4-5678-90ab-cdef-EXAMPLE22222" }
              ]
          }

       Contents of latency-policies.json:

          {
              "PlayerLatencyPolicies": [
                  {"MaximumIndividualPlayerLatencyMilliseconds": 200},
                  {"MaximumIndividualPlayerLatencyMilliseconds": 100, "PolicyDurationSeconds": 60}
              ]
          }

       Output:

          {
              "GameSessionQueue": {
                  "Name": "MegaFrogRaceServer-NA",
                  "GameSessionQueueArn": "arn:aws:gamelift:us-west-2:111122223333:gamesessionqueue/MegaFrogRaceServer-NA",
                  "TimeoutInSeconds": 600,
                  "PlayerLatencyPolicies": [
                      {
                          "MaximumIndividualPlayerLatencyMilliseconds": 100,
                          "PolicyDurationSeconds": 60
                      },
                      {
                          "MaximumIndividualPlayerLatencyMilliseconds": 200
                      }
                  ]
                  "Destinations": [
                      {"DestinationArn": "arn:aws:gamelift:us-west-2::fleet/fleet-a1b2c3d4-5678-90ab-cdef-EXAMPLE11111"},
                      {"DestinationArn": "arn:aws:gamelift:us-east-1::fleet/fleet-a1b2c3d4-5678-90ab-cdef-EXAMPLE22222"}
                  ],
              }
          }

       For more information, see Create a Queue in the Amazon GameLift  Devel-
       oper Guide.

OUTPUT
       GameSessionQueue -> (structure)
          An object that describes the newly created game session queue.

          Name -> (string)
              A  descriptive label that is associated with game session queue.
              Queue names must be unique within each Region.

          GameSessionQueueArn -> (string)
              The Amazon Resource Name (ARN ) that is  assigned  to  a  Amazon
              GameLift game session queue resource and uniquely identifies it.
              ARNs   are   unique    across    all    Regions.    Format    is
              arn:aws:gamelift:<region>::gamesessionqueue/<queue  name> . In a
              Amazon GameLift game session queue ARN, the resource ID  matches
              the Name value.

          TimeoutInSeconds -> (integer)
              The  maximum time, in seconds, that a new game session placement
              request remains in the queue. When a request exceeds this  time,
              the game session placement changes to a TIMED_OUT status.

          PlayerLatencyPolicies -> (list)
              A  set  of policies that enforce a sliding cap on player latency
              when processing game sessions placement requests.  Use  multiple
              policies to gradually relax the cap over time if Amazon GameLift
              can't make a placement. Policies are evaluated in order starting
              with the lowest maximum latency value.

              (structure)
                 Sets a latency cap for individual players when placing a game
                 session. With a latency policy in force, a game session  can-
                 not  be placed in a fleet location where a player reports la-
                 tency higher than the cap. Latency  policies  are  used  only
                 with  placement  request that provide player latency informa-
                 tion. Player latency policies can be stacked to gradually re-
                 lax latency requirements over time.

                 MaximumIndividualPlayerLatencyMilliseconds -> (integer)
                     The maximum latency value that is allowed for any player,
                     in milliseconds. All policies must have a value  set  for
                     this property.

                 PolicyDurationSeconds -> (integer)
                     The  length  of  time, in seconds, that the policy is en-
                     forced while placing a new game session. A null value for
                     this property means that the policy is enforced until the
                     queue times out.

          Destinations -> (list)
              A list of fleets and/or fleet aliases that can be used  to  ful-
              fill  game session placement requests in the queue. Destinations
              are identified by either a fleet ARN or a fleet alias  ARN,  and
              are listed in order of placement preference.

              (structure)
                 A  fleet  or alias designated in a game session queue. Queues
                 fulfill requests for new game sessions by placing a new  game
                 session on any of the queue's destinations.

                 DestinationArn -> (string)
                     The  Amazon Resource Name (ARN) that is assigned to fleet
                     or fleet alias. ARNs, which include a fleet ID  or  alias
                     ID  and a Region name, provide a unique identifier across
                     all Regions.

          FilterConfiguration -> (structure)
              A list of locations where a queue is allowed to place  new  game
              sessions. Locations are specified in the form of Amazon Web Ser-
              vices Region codes, such as us-west-2 . If this parameter is not
              set, game sessions can be placed in any queue location.

              AllowedLocations -> (list)
                 A  list  of  locations to allow game session placement in, in
                 the  form  of  Amazon  Web  Services  Region  codes  such  as
                 us-west-2 .

                 (string)

          PriorityConfiguration -> (structure)
              Custom  settings to use when prioritizing destinations and loca-
              tions for game session placements. This  configuration  replaces
              the  FleetIQ default prioritization process. Priority types that
              are not explicitly named will be automatically  applied  at  the
              end of the prioritization process.

              PriorityOrder -> (list)
                 The  recommended  sequence  to use when prioritizing where to
                 place new game sessions. Each type can only be listed once.

                 o LATENCY -- FleetIQ prioritizes locations where the  average
                   player  latency  (provided in each game session request) is
                   lowest.

                 o COST -- FleetIQ prioritizes destinations  with  the  lowest
                   current hosting costs. Cost is evaluated based on the loca-
                   tion, instance type, and fleet type (Spot or On-Demand) for
                   each destination in the queue.

                 o DESTINATION  -- FleetIQ prioritizes based on the order that
                   destinations are listed in the queue configuration.

                 o LOCATION -- FleetIQ prioritizes based on the provided order
                   of locations, as defined in LocationOrder .

                 (string)

              LocationOrder -> (list)
                 The prioritization order to use for fleet locations, when the
                 PriorityOrder property  includes  LOCATION  .  Locations  are
                 identified  by  Amazon  Web  Services  Region  codes  such as
                 us-west-2 . Each location can only be listed once.

                 (string)

          CustomEventData -> (string)
              Information that is added to all events that are related to this
              game session queue.

          NotificationTarget -> (string)
              An  SNS  topic ARN that is set up to receive game session place-
              ment notifications. See Setting up notifications for  game  ses-
              sion placement .



                                                   CREATE-GAME-SESSION-QUEUE()
