CREATE-CONTAINER-GROUP-DEFINITION()        CREATE-CONTAINER-GROUP-DEFINITION()



NAME
       create-container-group-definition -

DESCRIPTION
          This  operation is used with the Amazon GameLift containers feature,
          which is currently in public preview.

       Creates a ContainerGroupDefinition resource that  describes  a  set  of
       containers  for  hosting  your game server with Amazon GameLift managed
       EC2 hosting. An Amazon GameLift container group is similar  to  a  con-
       tainer "task" and "pod". Each container group can have one or more con-
       tainers.

       Use container group definitions when you create a container fleet. Con-
       tainer  group  definitions  determine  how Amazon GameLift deploys your
       containers to each instance in a container fleet.

       You can create two types  of  container  groups,  based  on  scheduling
       strategy:

       o A  replica  container group manages the containers that run your game
         server application and supporting software. Replica container  groups
         might  be replicated multiple times on each fleet instance, depending
         on instance resources.

       o A daemon container group manages containers that run other  software,
         such  as  background  services, logging, or test processes. You might
         use a daemon container group for processes that need to run only once
         per  fleet  instance, or processes that need to persist independently
         of the replica container group.

       To create a container group definition, specify a group name, a list of
       container  definitions,  and  maximum total CPU and memory requirements
       for the container group. Specify an  operating  system  and  scheduling
       strategy  or use the default values. When using the Amazon Web Services
       CLI tool, you can pass in your container definitions as a JSON file.

       NOTE:
          This operation requires Identity and Access Management (IAM) permis-
          sions to access container images in Amazon ECR repositories. See IAM
          permissions for Amazon GameLift for  help  setting  the  appropriate
          permissions.

       If  successful,  this  operation creates a new ContainerGroupDefinition
       resource with an ARN value assigned. You can't change the properties of
       a container group definition. Instead, create a new one.
          Learn more

       o Create a container group definition

       o Container fleet design guide

       o Create a container definition as a JSON file

       See also: AWS API Documentation

SYNOPSIS
            create-container-group-definition
          --name <value>
          [--scheduling-strategy <value>]
          --total-memory-limit <value>
          --total-cpu-limit <value>
          --container-definitions <value>
          --operating-system <value>
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --name (string)
          A  descriptive  identifier  for  the container group definition. The
          name value must be unique in an Amazon Web Services Region.

       --scheduling-strategy (string)
          The method for deploying the container group across fleet instances.
          A  replica  container group might have multiple copies on each fleet
          instance. A daemon container group has one copy per fleet  instance.
          Default value is REPLICA .

          Possible values:

          o REPLICA

          o DAEMON

       --total-memory-limit (integer)
          The  maximum  amount of memory (in MiB) to allocate to the container
          group. All containers in the group share this memory. If you specify
          memory limits for individual containers, set this parameter based on
          the following guidelines. The value must be (1) greater than the sum
          of  the  soft memory limits for all containers in the group, and (2)
          greater than any individual container's hard memory limit.

       --total-cpu-limit (integer)
          The maximum amount of CPU units to allocate to the container  group.
          Set this parameter to an integer value in CPU units (1 vCPU is equal
          to 1024 CPU units). All containers in the group share  this  memory.
          If you specify CPU limits for individual containers, set this param-
          eter based on the following guidelines. The value must be  equal  to
          or  greater than the sum of the CPU limits for all containers in the
          group.

       --container-definitions (list)
          Definitions for all containers in this group. Each container defini-
          tion identifies the container image and specifies configuration set-
          tings for the container. See the Container fleet  design  guide  for
          container guidelines.

          (structure)
                 This  data  type  is used with the Amazon GameLift containers
                 feature, which is currently in public preview.

              Describes a container's configuration, resources, and start  in-
              structions. Use this data type to create a container group defi-
              nition. For the properties of a container that's  been  deployed
              to  a  fleet,  see  ContainerDefinition . You can't change these
              properties after you've created the container group  definition.
              If  you  need  a container group with different properties, then
              you must create a new one.
                 Used with:   CreateContainerGroupDefinition

              ContainerName -> (string)
                 A string that uniquely identifies  the  container  definition
                 within a container group.

              ImageUri -> (string)
                 The  location of a container image that $short; will copy and
                 deploy to a container fleet. Images in  Amazon  Elastic  Con-
                 tainer  Registry  private  repositories  are  supported.  The
                 repository must be in the same Amazon  Web  Services  account
                 and Amazon Web Services Region where you're creating the con-
                 tainer group definition. For limits on image size, see Amazon
                 GameLift  endpoints  and quotas . You can use any of the fol-
                 lowing image URI formats:

                 o Image ID only: [AWS  account].dkr.ecr.[AWS  region].amazon-
                   aws.com/[repository ID]

                 o Image   ID   and  digest:  [AWS  account].dkr.ecr.[AWS  re-
                   gion].amazonaws.com/[repository ID]@[digest]

                 o Image ID and tag: [AWS  account].dkr.ecr.[AWS  region].ama-
                   zonaws.com/[repository ID]:[tag]

              MemoryLimits -> (structure)
                 The  amount  of memory to make available to the container. If
                 you don't specify memory limits for this container,  then  it
                 shares the container group's total memory allocation.
                     Related  data type:   ContainerGroupDefinition$TotalMemo-
                     ryLimit

                 SoftLimit -> (integer)
                     The amount of memory that is reserved  for  a  container.
                     When  the  container  group's shared memory is under con-
                     tention, the system attempts to  maintain  the  container
                     memory  usage  at this soft limit. However, the container
                     can use more memory when needed, if available. This prop-
                     erty  is  similar  to the Amazon ECS container definition
                     parameter  memoryreservation  (Amazon  Elastic  Container
                     Service Developer Guide ).

                 HardLimit -> (integer)
                     The  maximum amount of memory that the container can use.
                     If a container attempts to exceed this  limit,  the  con-
                     tainer is stopped. This property is similar to the Amazon
                     ECS container definition parameter memory in  the  Amazon
                     Elastic Container Service Developer Guide.

              PortConfiguration -> (structure)
                 A  set  of ports that Amazon GameLift can assign to processes
                 in the container. All processes that accept  inbound  traffic
                 connections,  including  game  server  processes, must be as-
                 signed a port from this set. The set of ports must  be  large
                 enough  to  assign  one to each process in the container that
                 needs one. If the container includes your  game  server,  in-
                 clude  enough  ports  to  assign  one port to each concurrent
                 server process (as defined in a container  fleet's   Runtime-
                 Configuration  ).  For  more details, see Networking for con-
                 tainer fleets .

                 Container ports aren't directly accessed by inbound  traffic.
                 Amazon  GameLift maps these container ports to externally ac-
                 cessible connection ports, which are assigned as needed  from
                 the container fleet's ConnectionPortRange .

                 ContainerPortRanges -> (list)
                     Specifies  one  or  more  ranges of ports on a container.
                     These ranges must not overlap.

                     (structure)
                            This data type is used with  the  Amazon  GameLift
                            containers  feature,  which is currently in public
                            preview.

                        A set of one or more port numbers that can  be  opened
                        on the container.
                            Part of:   ContainerPortConfiguration

                        FromPort -> (integer)
                            A  starting  value  for  the range of allowed port
                            numbers.

                        ToPort -> (integer)
                            An ending value for the range of allowed port num-
                            bers.  Port  numbers are end-inclusive. This value
                            must be equal to or greater than FromPort .

                        Protocol -> (string)
                            The network protocol that these ports support.

              Cpu -> (integer)
                 The number of CPU units to reserve for  this  container.  The
                 container  can  use more resources when needed, if available.
                 Note: 1 vCPU unit equals 1024 CPU units. If you don't reserve
                 CPU  units  for  this container, then it shares the total CPU
                 limit for the container group. This property  is  similar  to
                 the  Amazon  ECS  container  definition parameter environment
                 (Amazon Elastic Container Service Developer Guide).
                     Related  data   type:     ContainerGroupDefinition$Total-
                     CpuLimit

              HealthCheck -> (structure)
                 Configuration  for  a  non-terminal health check. A container
                 automatically restarts if it stops functioning. This  parame-
                 ter  lets  you  define  additional reasons to consider a con-
                 tainer unhealthy and restart it. You can set a  health  check
                 for  any  container except for the essential container in the
                 replica container group. If an  essential  container  in  the
                 daemon group fails a health check, the entire container group
                 is restarted.

                 Command -> (list)
                     A string array that specifies the command that  the  con-
                     tainer runs to determine if it's healthy.

                     (string)

                 Interval -> (integer)
                     The time period (in seconds) between each health check.

                 Timeout -> (integer)
                     The  time  period (in seconds) to wait for a health check
                     to succeed before a failed health check is counted.

                 Retries -> (integer)
                     The number of times to retry a failed health check before
                     the  container  is considered unhealthy. The first run of
                     the command does not count as a retry.

                 StartPeriod -> (integer)
                     The optional grace period (in seconds)  to  give  a  con-
                     tainer  time  to bootstrap before the first failed health
                     check counts toward the number of retries.

              Command -> (list)
                 A command to pass to the container on startup.  Add  multiple
                 arguments  as  additional  strings  in  the  array.  See  the
                 ContainerDefinition command parameter in the  Amazon  Elastic
                 Container Service API reference.

                 (string)

              Essential -> (boolean)
                 Specifies  whether  the  container is vital for the container
                 group to function properly. If an essential container  fails,
                 it  causes  the  entire container group to restart. Each con-
                 tainer group must have an essential container.
                     Replica container groups - A replica group must have  ex-
                     actly  one essential container. Use the following to con-
                     figure an essential replica container:

                 o Choose a container is running your game server and the Ama-
                   zon GameLift Agent.

                 o Include a port configuration. This container runs your game
                   server processes, and each  process  requires  a  container
                   port to allow access to game clients.

                 o Don't configure a health check. The Agent handles this task
                   for the essential replica container.
                     Daemon container groups - A daemon  group  must  have  at
                     least one essential container.

              EntryPoint -> (list)
                 An  entry point to pass to the container on startup. Add mul-
                 tiple arguments as additional strings in the array.  See  the
                 ContainerDefinition::entryPoint parameter in the Amazon Elas-
                 tic Container Service API Reference .

                 (string)

              WorkingDirectory -> (string)
                 The directory in the container where commands  are  run.  See
                 the  ContainerDefinition::workingDirectory  parameter  in the
                 Amazon Elastic Container Service API Reference .

              Environment -> (list)
                 A set of environment variables to pass to  the  container  on
                 startup.  See  the ContainerDefinition::environment parameter
                 in the Amazon Elastic Container Service API Reference .

                 (structure)
                        This data type is used with the Amazon  GameLift  con-
                        tainers feature, which is currently in public preview.

                     An environment variable to set inside a container, in the
                     form of a key-value pair.
                        Related data type:   ContainerDefinition$Environment

                     Name -> (string)
                        The environment variable name.

                     Value -> (string)
                        The environment variable value.

              DependsOn -> (list)
                 Sets up dependencies between this container and the status of
                 other containers in the same container group. A container can
                 have dependencies on multiple different containers.

                 You can use dependencies to establish a startup/shutdown  se-
                 quence across the container group. A container startup depen-
                 dency is reversed on shutdown.

                 For example, you might specify that SideCarContainerB  has  a
                 START  dependency on SideCarContainerA. This dependency means
                 that SideCarContainerB can't start  until  after  SideCarCon-
                 tainerA has started. This dependency is reversed on shutdown,
                 which means that  SideCarContainerB  must  shut  down  before
                 SideCarContainerA can shut down.

                 (structure)
                        This  data  type is used with the Amazon GameLift con-
                        tainers feature, which is currently in public preview.

                     A container's dependency on another container in the same
                     container group. The dependency impacts how the dependent
                     container is able to start or shut down based the  status
                     of the other container.

                     For  example, ContainerA is configured with the following
                     dependency: a START dependency on ContainerB. This  means
                     that ContainerA can't start until ContainerB has started.
                     It also means that ContainerA must shut down before  Con-
                     tainerB.
                        Part of:   ContainerDefinition

                     ContainerName -> (string)
                        A  descriptive label for the container definition that
                        this container depends on.

                     Condition -> (string)
                        The condition that the dependency container must reach
                        before the dependent container can start. Valid condi-
                        tions include:

                        o START - The dependency container must have started.

                        o COMPLETE - The dependency container has run to  com-
                          pletion  (exits).  Use this condition with nonessen-
                          tial containers, such as those that run a script and
                          then  exit. The dependency container can't be an es-
                          sential container.

                        o SUCCESS - The dependency container has run  to  com-
                          pletion  and  exited  with a zero status. The depen-
                          dency container can't be an essential container.

                        o HEALTHY - The dependency container  has  passed  its
                          Docker  health check. Use this condition with depen-
                          dency containers that have health checks configured.
                          This  condition  is  confirmed  at  container  group
                          startup only.

       JSON Syntax:

          [
            {
              "ContainerName": "string",
              "ImageUri": "string",
              "MemoryLimits": {
                "SoftLimit": integer,
                "HardLimit": integer
              },
              "PortConfiguration": {
                "ContainerPortRanges": [
                  {
                    "FromPort": integer,
                    "ToPort": integer,
                    "Protocol": "TCP"|"UDP"
                  }
                  ...
                ]
              },
              "Cpu": integer,
              "HealthCheck": {
                "Command": ["string", ...],
                "Interval": integer,
                "Timeout": integer,
                "Retries": integer,
                "StartPeriod": integer
              },
              "Command": ["string", ...],
              "Essential": true|false,
              "EntryPoint": ["string", ...],
              "WorkingDirectory": "string",
              "Environment": [
                {
                  "Name": "string",
                  "Value": "string"
                }
                ...
              ],
              "DependsOn": [
                {
                  "ContainerName": "string",
                  "Condition": "START"|"COMPLETE"|"SUCCESS"|"HEALTHY"
                }
                ...
              ]
            }
            ...
          ]

       --operating-system (string)
          The platform that is used by containers in the container group defi-
          nition.  All  containers  in  a group must run on the same operating
          system.

          Possible values:

          o AMAZON_LINUX_2023

       --tags (list)
          A list of labels to assign to the  container  group  definition  re-
          source.  Tags  are developer-defined key-value pairs. Tagging Amazon
          Web Services resources are useful for  resource  management,  access
          management  and  cost  allocation. For more information, see Tagging
          Amazon Web Services Resources in the  Amazon  Web  Services  General
          Reference .

          (structure)
              A label that you can assign to a Amazon GameLift resource.
                 Learn more

                 Tagging  Amazon Web Services Resources in the Amazon Web Ser-
                 vices General Reference

                 Amazon Web Services Tagging Strategies

                 Related actions

                 All APIs by task

              Key -> (string)
                 The key for a developer-defined key value pair for tagging an
                 Amazon Web Services resource.

              Value -> (string)
                 The  value for a developer-defined key value pair for tagging
                 an Amazon Web Services resource.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       ContainerGroupDefinition -> (structure)
          The  properties  of the newly created container group definition re-
          source. You use this resource to create a container fleet.

          ContainerGroupDefinitionArn -> (string)
              The Amazon Resource Name (ARN ) that is assigned  to  an  Amazon
              GameLift  ContainerGroupDefinition resource. It uniquely identi-
              fies the resource across all Amazon Web Services Regions. Format
              is     arn:aws:gamelift:<region>::containergroupdefinition/[con-
              tainer group definition name] .

          CreationTime -> (timestamp)
              A time stamp indicating when this data object was created.  For-
              mat  is a number expressed in Unix time as milliseconds (for ex-
              ample "1469498468.057" ).

          OperatingSystem -> (string)
              The platform required for all containers in the container  group
              definition.

          Name -> (string)
              A descriptive identifier for the container group definition. The
              name value is unique in an Amazon Web Services Region.

          SchedulingStrategy -> (string)
              The method for deploying the container group  across  fleet  in-
              stances. A replica container group might have multiple copies on
              each fleet instance. A daemon container group maintains only one
              copy per fleet instance.

          TotalMemoryLimit -> (integer)
              The  amount  of  memory (in MiB) on a fleet instance to allocate
              for the container group. All containers in the group share these
              resources.

              You  can  set additional limits for each  ContainerDefinition in
              the group. If individual containers have limits, this value must
              meet the following requirements:

              o Equal  to  or  greater  than the sum of all container-specific
                soft memory limits in the group.

              o Equal to or greater than any container-specific hard limits in
                the group.

              For  more  details on memory allocation, see the Container fleet
              design guide .

          TotalCpuLimit -> (integer)
              The amount of CPU units on a fleet instance to allocate for  the
              container  group.  All  containers  in the group share these re-
              sources. This property is an integer value in CPU units (1  vCPU
              is equal to 1024 CPU units).

              You  can  set additional limits for each  ContainerDefinition in
              the group. If individual containers have limits, this value must
              be  equal  to  or greater than the sum of all container-specific
              CPU limits in the group.

              For more details on memory allocation, see the  Container  fleet
              design guide .

          ContainerDefinitions -> (list)
              The  set  of container definitions that are included in the con-
              tainer group.

              (structure)
                     This data type is used with the Amazon GameLift  contain-
                     ers feature, which is currently in public preview.

                 Describes  a  container  in  a container fleet, the resources
                 available to the container, and the  commands  that  are  run
                 when  the container starts. Container properties can't be up-
                 dated. To change a property, create  a  new  container  group
                 definition. See also  ContainerDefinitionInput .
                     Part of:   ContainerGroupDefinition

                     Returned  by:   DescribeContainerGroupDefinition ,  List-
                     ContainerGroupDefinitions

                 ContainerName -> (string)
                     The container definition identifier. Container names  are
                     unique within a container group definition.

                 ImageUri -> (string)
                     The  URI to the image that $short; copied and deployed to
                     a container fleet. For a more  specific  identifier,  see
                     ResolvedImageDigest .

                 ResolvedImageDigest -> (string)
                     A unique and immutable identifier for the container image
                     that is deployed to a container fleet. The  digest  is  a
                     SHA 256 hash of the container image manifest.

                 MemoryLimits -> (structure)
                     The amount of memory that Amazon GameLift makes available
                     to the container. If memory limits aren't set for an  in-
                     dividual  container,  the  container shares the container
                     group's total memory allocation.
                        Related  data   type:     ContainerGroupDefinition$To-
                        talMemoryLimit

                     SoftLimit -> (integer)
                        The amount of memory that is reserved for a container.
                        When the container group's shared memory is under con-
                        tention, the system attempts to maintain the container
                        memory usage at this soft  limit.  However,  the  con-
                        tainer  can use more memory when needed, if available.
                        This property is similar to the Amazon  ECS  container
                        definition parameter memoryreservation (Amazon Elastic
                        Container Service Developer Guide ).

                     HardLimit -> (integer)
                        The maximum amount of memory that  the  container  can
                        use. If a container attempts to exceed this limit, the
                        container is stopped. This property is similar to  the
                        Amazon  ECS  container  definition parameter memory in
                        the Amazon Elastic Container Service Developer Guide.

                 PortConfiguration -> (structure)
                     Defines the ports that are available to  assign  to  pro-
                     cesses  in  the  container.  For  example,  a game server
                     process requires a container port to allow  game  clients
                     to  connect  to  it.  Container ports aren't directly ac-
                     cessed by inbound traffic.  Amazon  GameLift  maps  these
                     container   ports  to  externally  accessible  connection
                     ports, which are assigned as needed  from  the  container
                     fleet's ConnectionPortRange .

                     ContainerPortRanges -> (list)
                        Specifies  one or more ranges of ports on a container.
                        These ranges must not overlap.

                        (structure)
                               This data type is used with the Amazon GameLift
                               containers  feature, which is currently in pub-
                               lic preview.

                            A set of one or more  port  numbers  that  can  be
                            opened on the container.
                               Part of:   ContainerPortConfiguration

                            FromPort -> (integer)
                               A  starting value for the range of allowed port
                               numbers.

                            ToPort -> (integer)
                               An ending value for the range of  allowed  port
                               numbers.  Port  numbers are end-inclusive. This
                               value must be equal to or greater than FromPort
                               .

                            Protocol -> (string)
                               The network protocol that these ports support.

                 Cpu -> (integer)
                     The  number  of  CPU units that are reserved for the con-
                     tainer. Note: 1 vCPU unit equals 1024 CPU  units.  If  no
                     resources  are  reserved,  the container shares the total
                     CPU limit for the container group.
                        Related data  type:    ContainerGroupDefinition$Total-
                        CpuLimit

                 HealthCheck -> (structure)
                     A  configuration  for a non-terminal health check. A con-
                     tainer, which automatically restarts if  it  stops  func-
                     tioning,  also restarts if it fails this health check. If
                     an essential container in the daemon group fails a health
                     check,  the  entire container group is restarted. The es-
                     sential container in the replica group doesn't  use  this
                     health check mechanism, because the Amazon GameLift Agent
                     automatically handles the task.

                     Command -> (list)
                        A string array that specifies  the  command  that  the
                        container runs to determine if it's healthy.

                        (string)

                     Interval -> (integer)
                        The  time  period  (in  seconds)  between  each health
                        check.

                     Timeout -> (integer)
                        The time period (in seconds)  to  wait  for  a  health
                        check  to  succeed  before  a  failed  health check is
                        counted.

                     Retries -> (integer)
                        The number of times to retry a failed health check be-
                        fore  the container is considered unhealthy. The first
                        run of the command does not count as a retry.

                     StartPeriod -> (integer)
                        The optional grace period (in seconds) to give a  con-
                        tainer  time  to  bootstrap  before  the  first failed
                        health check counts toward the number of retries.

                 Command -> (list)
                     A command that's passed to the container on startup. Each
                     argument  for  the command is an additional string in the
                     array. See the ContainerDefinition::command parameter  in
                     the Amazon Elastic Container Service API reference.

                     (string)

                 Essential -> (boolean)
                     Indicates whether the container is vital to the container
                     group. If an essential container fails, the  entire  con-
                     tainer group is restarted.

                 EntryPoint -> (list)
                     The  entry  point  that's  passed  to  the  container  on
                     startup. If there are multiple arguments,  each  argument
                     is   an   additional   string   in  the  array.  See  the
                     ContainerDefinition::entryPoint parameter in  the  Amazon
                     Elastic Container Service API Reference .

                     (string)

                 WorkingDirectory -> (string)
                     The  directory  in  the container where commands are run.
                     See the  ContainerDefinition::workingDirectory  parameter
                     in the Amazon Elastic Container Service API Reference .

                 Environment -> (list)
                     A  set of environment variables that's passed to the con-
                     tainer        on         startup.         See         the
                     ContainerDefinition::environment  parameter in the Amazon
                     Elastic Container Service API Reference .

                     (structure)
                            This data type is used with  the  Amazon  GameLift
                            containers  feature,  which is currently in public
                            preview.

                        An environment variable to set inside a container,  in
                        the form of a key-value pair.
                            Related  data type:   ContainerDefinition$Environ-
                            ment

                        Name -> (string)
                            The environment variable name.

                        Value -> (string)
                            The environment variable value.

                 DependsOn -> (list)
                     Indicates that the container  relies  on  the  status  of
                     other  containers  in the same container group during its
                     startup and shutdown sequences. A  container  might  have
                     dependencies on multiple containers.

                     (structure)
                            This  data  type  is used with the Amazon GameLift
                            containers feature, which is currently  in  public
                            preview.

                        A  container's  dependency on another container in the
                        same container group. The dependency impacts  how  the
                        dependent  container  is  able  to  start or shut down
                        based the status of the other container.

                        For example, ContainerA is configured with the follow-
                        ing dependency: a START dependency on ContainerB. This
                        means that ContainerA can't start until ContainerB has
                        started.  It also means that ContainerA must shut down
                        before ContainerB.
                            Part of:   ContainerDefinition

                        ContainerName -> (string)
                            A descriptive label for the  container  definition
                            that this container depends on.

                        Condition -> (string)
                            The  condition  that the dependency container must
                            reach before the dependent  container  can  start.
                            Valid conditions include:

                            o START  -  The  dependency  container  must  have
                              started.

                            o COMPLETE - The dependency container has  run  to
                              completion  (exits).  Use  this  condition  with
                              nonessential containers, such as those that  run
                              a script and then exit. The dependency container
                              can't be an essential container.

                            o SUCCESS - The dependency container  has  run  to
                              completion  and  exited  with a zero status. The
                              dependency container can't be an essential  con-
                              tainer.

                            o HEALTHY  -  The  dependency container has passed
                              its Docker health check. Use this condition with
                              dependency  containers  that  have health checks
                              configured. This condition is confirmed at  con-
                              tainer group startup only.

          Status -> (string)
              Current  status of the container group definition resource. Val-
              ues include:

              o COPYING -- Amazon GameLift is in the process of making  copies
                of  all  container images that are defined in the group. While
                in this state, the resource can't be used  to  create  a  con-
                tainer fleet.

              o READY  --  Amazon  GameLift has copied the registry images for
                all containers that are defined in the group. You  can  use  a
                container  group  definition  in  this status to create a con-
                tainer fleet.

              o FAILED -- Amazon GameLift failed to create a  valid  container
                group  definition  resource.  For more details on the cause of
                the failure, see StatusReason . A container  group  definition
                resource  in  failed  status will be deleted within a few min-
                utes.

          StatusReason -> (string)
              Additional information about a container group definition that's
              in FAILED status. Possible reasons include:

              o An  internal issue prevented Amazon GameLift from creating the
                container group definition resource.  Delete  the  failed  re-
                source and call  CreateContainerGroupDefinition again.

              o An access-denied message means that you don't have permissions
                to access the container image on ECR. See IAM permission exam-
                ples  for  help setting up required IAM permissions for Amazon
                GameLift.

              o The ImageUri value for at least one of the containers  in  the
                container  group  definition  was  invalid or not found in the
                current Amazon Web Services account.

              o At least one of the container images referenced  in  the  con-
                tainer  group  definition  exceeds  the allowed size. For size
                limits, see Amazon GameLift endpoints and quotas .

              o At least one of the container images referenced  in  the  con-
                tainer group definition uses a different operating system than
                the one defined for the container group.



                                           CREATE-CONTAINER-GROUP-DEFINITION()
