UPDATE-GAME-SERVER()                                      UPDATE-GAME-SERVER()



NAME
       update-game-server -

DESCRIPTION
          This operation is used with the Amazon GameLift FleetIQ solution and
          game server groups.

       Updates information about a  registered  game  server  to  help  Amazon
       GameLift  FleetIQ  to track game server availability. This operation is
       called by a game server process that is running on  an  instance  in  a
       game server group.

       Use  this operation to update the following types of game server infor-
       mation. You can make all three types of updates in the same request:

       o To update the game server's utilization  status,  identify  the  game
         server and game server group and specify the current utilization sta-
         tus. Use this status to identify  when  game  servers  are  currently
         hosting games and when they are available to be claimed.

       o To  report  health  status,  identify the game server and game server
         group and set health check to HEALTHY . If a game server does not re-
         port  health  status for a certain length of time, the game server is
         no longer considered healthy. As a  result,  it  will  be  eventually
         deregistered  from  the game server group to avoid affecting utiliza-
         tion metrics. The best practice is to report health every 60 seconds.

       o To change game server metadata, provide updated game server data.

       Once a game server is successfully updated, the relevant  statuses  and
       timestamps are updated.
          Learn more

          Amazon GameLift FleetIQ Guide

       See also: AWS API Documentation

SYNOPSIS
            update-game-server
          --game-server-group-name <value>
          --game-server-id <value>
          [--game-server-data <value>]
          [--utilization-status <value>]
          [--health-check <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --game-server-group-name (string)
          A  unique identifier for the game server group where the game server
          is running.

       --game-server-id (string)
          A custom string that uniquely identifies the game server to update.

       --game-server-data (string)
          A set of custom game server properties, formatted as a single string
          value.  This  data is passed to a game client or service when it re-
          quests information on game servers.

       --utilization-status (string)
          Indicates whether the game server is available or is currently host-
          ing gameplay.

          Possible values:

          o AVAILABLE

          o UTILIZED

       --health-check (string)
          Indicates  health status of the game server. A request that includes
          this parameter updates the game server's  LastHealthCheckTime  time-
          stamp.

          Possible values:

          o HEALTHY

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       GameServer -> (structure)
          Object that describes the newly updated game server.

          GameServerGroupName -> (string)
              A unique identifier for the game server  group  where  the  game
              server is running.

          GameServerGroupArn -> (string)
              The  ARN  identifier  for  the  game server group where the game
              server is located.

          GameServerId -> (string)
              A custom string that uniquely identifies the game  server.  Game
              server  IDs are developer-defined and are unique across all game
              server groups in an Amazon Web Services account.

          InstanceId -> (string)
              The unique identifier for the instance where the game server  is
              running.  This ID is available in the instance metadata. EC2 in-
              stance   IDs   use   a   17-character   format,   for   example:
              i-1234567890abcdef0 .

          ConnectionInfo -> (string)
              The  port and IP address that must be used to establish a client
              connection to the game server.

          GameServerData -> (string)
              A set of custom game server properties, formatted  as  a  single
              string  value.  This  data is passed to a game client or service
              when it requests information on game servers.

          ClaimStatus -> (string)
              Indicates when an available game server has  been  reserved  for
              gameplay  but  has  not  yet  started hosting a game. Once it is
              claimed, the game server remains in CLAIMED status for a maximum
              of  one  minute.  During  this time, game clients connect to the
              game server to start the game and trigger the game server to up-
              date  its  utilization status. After one minute, the game server
              claim status reverts to null.

          UtilizationStatus -> (string)
              Indicates whether the game server is currently available for new
              games or is busy. Possible statuses include:

              o AVAILABLE - The game server is available to be claimed. A game
                server that has been claimed remains in this status  until  it
                reports game hosting activity.

              o UTILIZED - The game server is currently hosting a game session
                with players.

          RegistrationTime -> (timestamp)
              Timestamp that indicates when the game  server  registered.  The
              format  is  a number expressed in Unix time as milliseconds (for
              example "1469498468.057" ).

          LastClaimTime -> (timestamp)
              Timestamp that indicates the  last  time  the  game  server  was
              claimed.  The  format is a number expressed in Unix time as mil-
              liseconds (for example "1469498468.057" ). This value is used to
              calculate  when  a claimed game server's status should revert to
              null.

          LastHealthCheckTime -> (timestamp)
              Timestamp that indicates the last time the game server  was  up-
              dated  with  health  status. The format is a number expressed in
              Unix time as milliseconds (for example "1469498468.057" ). After
              game  server  registration, this property is only changed when a
              game server update specifies a health check value.



                                                          UPDATE-GAME-SERVER()
