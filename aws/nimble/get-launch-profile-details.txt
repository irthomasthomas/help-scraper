GET-LAUNCH-PROFILE-DETAILS()                      GET-LAUNCH-PROFILE-DETAILS()



NAME
       get-launch-profile-details -

DESCRIPTION
       Launch  profile details include the launch profile resource and summary
       information of resources that are used by, or available to, the  launch
       profile.  This  includes  the name and description of all studio compo-
       nents used by the launch profiles, and  the  name  and  description  of
       streaming images that can be used with this launch profile.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-launch-profile-details
          --launch-profile-id <value>
          --studio-id <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --launch-profile-id (string)
          The Launch Profile ID.

       --studio-id (string)
          The studio ID.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To list the available widgets

       The  following  get-launch-profile-details  example  lists  the details
       about a launch profile.

          aws nimble get-launch-profile-details \
              --studio-id "StudioID" \
              --launch-profile-id "LaunchProfileID"

       Output:

          {
              "launchProfile": {
                  "arn": "arn:aws:nimble:us-west-2:123456789012:launch-profile/yeG7lDwNQEiwNTRT7DrV7Q",
                  "createdAt": "2022-01-27T21:18:59+00:00",
                  "createdBy": "AROA3OO2NEHCCYRNDDIFT:i-EXAMPLE11111",
                  "description": "The Launch Profile for the Render workers created by StudioBuilder.",
                  "ec2SubnetIds": [
                      "subnet-EXAMPLE11111"
                  ],
                  "launchProfileId": "yeG7lDwNQEiwNTRT7DrV7Q",
                  "launchProfileProtocolVersions": [
                      "2021-03-31"
                  ],
                  "name": "RenderWorker-Default",
                  "state": "READY",
                  "statusCode": "LAUNCH_PROFILE_CREATED",
                  "statusMessage": "Launch Profile has been created",
                  "streamConfiguration": {
                      "clipboardMode": "ENABLED",
                      "ec2InstanceTypes": [
                          "g4dn.4xlarge",
                          "g4dn.8xlarge"
                      ],
                      "maxSessionLengthInMinutes": 690,
                      "maxStoppedSessionLengthInMinutes": 0,
                      "streamingImageIds": [
                          "Cw_jXnp1QcSSXhE2hkNRoQ",
                          "YGXAqgoWTnCNSV8VP20sHQ"
                      ]
                  },
                  "studioComponentIds": [
                      "_hR_-RaAReSOjAnLakbX7Q",
                      "vQ5w_TbIRayPkAZgcbyYRA",
                      "ZQuMxN99Qfa_Js6ma9TwdA",
                      "45KjOSPPRzK2OyvpCuQ6qw"
                  ],
                  "tags": {
                      "resourceArn": "arn:aws:nimble:us-west-2:123456789012:launch-profile/yeG7lDwNQEiwNTRT7DrV7Q"
                  },
                  "updatedAt": "2022-01-27T21:19:13+00:00",
                  "updatedBy": "AROA3OO2NEHCCYRNDDIFT:i-00b98256b04d9e989",
                  "validationResults": [
                      {
                          "state": "VALIDATION_SUCCESS",
                          "statusCode": "VALIDATION_SUCCESS",
                          "statusMessage": "The validation succeeded.",
                          "type": "VALIDATE_ACTIVE_DIRECTORY_STUDIO_COMPONENT"
                      },
                      {
                          "state": "VALIDATION_SUCCESS",
                          "statusCode": "VALIDATION_SUCCESS",
                          "statusMessage": "The validation succeeded.",
                          "type": "VALIDATE_SUBNET_ASSOCIATION"
                      },
                      {
                          "state": "VALIDATION_SUCCESS",
                          "statusCode": "VALIDATION_SUCCESS",
                          "statusMessage": "The validation succeeded.",
                          "type": "VALIDATE_NETWORK_ACL_ASSOCIATION"
                      },
                      {
                          "state": "VALIDATION_SUCCESS",
                          "statusCode": "VALIDATION_SUCCESS",
                          "statusMessage": "The validation succeeded.",
                          "type": "VALIDATE_SECURITY_GROUP_ASSOCIATION"
                      }
                  ]
              },
              "streamingImages": [
                  {
                      "arn": "arn:aws:nimble:us-west-2:123456789012:streaming-image/Cw_jXnp1QcSSXhE2hkNRoQ",
                      "description": "Base windows image for NimbleStudio",
                      "ec2ImageId": "ami-EXAMPLE11111",
                      "eulaIds": [
                          "gJZLygd-Srq_5NNbSfiaLg",
                          "ggK2eIw6RQyt8PIeeOlD3g",
                          "a-D9Wc0VQCKUfxAinCDxaw",
                          "RvoNmVXiSrS4LhLTb6ybkw",
                          "wtp85BcSTa2NZeNRnMKdjw",
                          "Rl-J0fM5Sl2hyIiwWIV6hw"
                      ],
                      "name": "NimbleStudioWindowsStreamImage",
                      "owner": "amazon",
                      "platform": "WINDOWS",
                      "state": "READY",
                      "streamingImageId": "Cw_jXnp1QcSSXhE2hkNRoQ",
                      "tags": {
                          "resourceArn": "arn:aws:nimble:us-west-2:123456789012:streaming-image/Cw_jXnp1QcSSXhE2hkNRoQ"
                      }
                  },
                  {
                      "arn": "arn:aws:nimble:us-west-2:123456789012:streaming-image/YGXAqgoWTnCNSV8VP20sHQ",
                      "description": "Base linux image for NimbleStudio",
                      "ec2ImageId": "ami-EXAMPLE11111",
                      "eulaIds": [
                          "gJZLygd-Srq_5NNbSfiaLg",
                          "ggK2eIw6RQyt8PIeeOlD3g",
                          "a-D9Wc0VQCKUfxAinCDxaw",
                          "RvoNmVXiSrS4LhLTb6ybkw",
                          "wtp85BcSTa2NZeNRnMKdjw",
                          "Rl-J0fM5Sl2hyIiwWIV6hw"
                      ],
                      "name": "NimbleStudioLinuxStreamImage",
                      "owner": "amazon",
                      "platform": "LINUX",
                      "state": "READY",
                      "streamingImageId": "YGXAqgoWTnCNSV8VP20sHQ",
                      "tags": {
                          "resourceArn": "arn:aws:nimble:us-west-2:123456789012:streaming-image/YGXAqgoWTnCNSV8VP20sHQ"
                      }
                  }
              ],
              "studioComponentSummaries": [
                  {
                      "description": "FSx for Windows",
                      "name": "FSxWindows",
                      "studioComponentId": "ZQuMxN99Qfa_Js6ma9TwdA",
                      "subtype": "AMAZON_FSX_FOR_WINDOWS",
                      "type": "SHARED_FILE_SYSTEM"
                  },
                  {
                      "description": "Instance configuration studio component.",
                      "name": "InstanceConfiguration",
                      "studioComponentId": "vQ5w_TbIRayPkAZgcbyYRA",
                      "subtype": "CUSTOM",
                      "type": "CUSTOM"
                  },
                  {
                      "name": "ActiveDirectory",
                      "studioComponentId": "_hR_-RaAReSOjAnLakbX7Q",
                      "subtype": "AWS_MANAGED_MICROSOFT_AD",
                      "type": "ACTIVE_DIRECTORY"
                  },
                  {
                      "description": "Render farm running Deadline",
                      "name": "RenderFarm",
                      "studioComponentId": "45KjOSPPRzK2OyvpCuQ6qw",
                      "subtype": "CUSTOM",
                      "type": "COMPUTE_FARM"
                  }
              ]
          }

       For more information, see Creating launch profiles in the Amazon Nimble
       Studio User Guide.

OUTPUT
       launchProfile -> (structure)
          The launch profile.

          arn -> (string)
              The ARN of the resource.

          createdAt -> (timestamp)
              The  Unix  epoch  timestamp in seconds for when the resource was
              created.

          createdBy -> (string)
              The user ID of the user that created the launch profile.

          description -> (string)
              A human-readable description of the launch profile.

          ec2SubnetIds -> (list)
              Unique identifiers for a collection of EC2 subnets.

              (string)

          launchProfileId -> (string)
              The launch profile ID.

          launchProfileProtocolVersions -> (list)
              The version number of the protocol that is used  by  the  launch
              profile. The only valid version is "2021-03-31".

              (string)
                 The version number of the protocol that is used by the launch
                 profile. The only valid version is "2021-03-31".

          name -> (string)
              A friendly name for the launch profile.

          state -> (string)
              The current state.

          statusCode -> (string)
              The status code.

          statusMessage -> (string)
              The status message for the launch profile.

          streamConfiguration -> (structure)
              A configuration for a streaming session.

              clipboardMode -> (string)
                 Enable or disable the use of the system clipboard to copy and
                 paste between the streaming session and streaming client.

              ec2InstanceTypes -> (list)
                 The  EC2  instance  types  that  users  can  select from when
                 launching a streaming session with this launch profile.

                 (string)

              maxSessionLengthInMinutes -> (integer)
                 The length of time, in minutes, that a streaming session  can
                 be  active  before  it  is  stopped or terminated. After this
                 point, Nimble Studio automatically terminates  or  stops  the
                 session.  The  default length of time is 690 minutes, and the
                 maximum length of time is 30 days.

              maxStoppedSessionLengthInMinutes -> (integer)
                 Integer that determines if you can start and stop  your  ses-
                 sions  and  how long a session can stay in the STOPPED state.
                 The default value is 0. The maximum value is 5760.

                 If the value is missing or set to 0, your  sessions  cant  be
                 stopped.  If you then call StopStreamingSession , the session
                 fails. If the time that a session stays in  the  READY  state
                 exceeds the maxSessionLengthInMinutes value, the session will
                 automatically be terminated (instead of stopped).

                 If the value is set to a positive number, the session can  be
                 stopped.  You  can call StopStreamingSession to stop sessions
                 in the READY state. If the time that a session stays  in  the
                 READY  state exceeds the maxSessionLengthInMinutes value, the
                 session will automatically  be  stopped  (instead  of  termi-
                 nated).

              sessionStorage -> (structure)
                 (Optional) The upload storage for a streaming session.

                 mode -> (list)
                     Allows artists to upload files to their workstations. The
                     only valid option is UPLOAD .

                     (string)

                 root -> (structure)
                     The configuration for the  upload  storage  root  of  the
                     streaming session.

                     linux -> (string)
                        The  folder path in Linux workstations where files are
                        uploaded.

                     windows -> (string)
                        The folder path in Windows  workstations  where  files
                        are uploaded.

              streamingImageIds -> (list)
                 The  streaming images that users can select from when launch-
                 ing a streaming session with this launch profile.

                 (string)

          studioComponentIds -> (list)
              Unique identifiers for a collection of  studio  components  that
              can be used with this launch profile.

              (string)

          tags -> (map)
              A collection of labels, in the form of key:value pairs, that ap-
              ply to this resource.

              key -> (string)

              value -> (string)

          updatedAt -> (timestamp)
              The Unix epoch timestamp in seconds for when  the  resource  was
              updated.

          updatedBy -> (string)
              The user ID of the user that most recently updated the resource.

          validationResults -> (list)
              The list of the latest validation results.

              (structure)
                 The launch profile validation result.

                 state -> (string)
                     The current state.

                 statusCode -> (string)
                     The  status code. This will contain the failure reason if
                     the state is VALIDATION_FAILED .

                 statusMessage -> (string)
                     The status message for the validation result.

                 type -> (string)
                     The type of the validation result.

       streamingImages -> (list)
          A collection of streaming images.

          (structure)
              Represents a streaming image resource.

              Streaming images are used by studio users to select which  oper-
              ating  system  and  software they want to use in a Nimble Studio
              streaming session.

              Amazon provides a number of streaming images that include  popu-
              lar 3rd-party software.

              You can create your own streaming images using an Amazon Elastic
              Compute Cloud (Amazon EC2) machine image  that  you  create  for
              this  purpose. You can also include software that your users re-
              quire.

              arn -> (string)
                 The ARN of the resource.

              description -> (string)
                 A human-readable description of the streaming image.

              ec2ImageId -> (string)
                 The ID of an EC2 machine  image  with  which  to  create  the
                 streaming image.

              encryptionConfiguration -> (structure)
                 The encryption configuration.

                 keyArn -> (string)
                     The  ARN  for  a  KMS  key that is used to encrypt studio
                     data.

                 keyType -> (string)
                     The type of KMS key that is used to encrypt studio data.

              eulaIds -> (list)
                 The list of EULAs that must be accepted  before  a  Streaming
                 Session can be started using this streaming image.

                 (string)

              name -> (string)
                 A friendly name for a streaming image resource.

              owner -> (string)
                 The  owner  of  the streaming image, either the studioId that
                 contains the streaming image, or 'amazon' for images that are
                 provided by Amazon Nimble Studio.

              platform -> (string)
                 The platform of the streaming image, either WINDOWS or LINUX.

              state -> (string)
                 The current state.

              statusCode -> (string)
                 The status code.

              statusMessage -> (string)
                 The status message for the streaming image.

              streamingImageId -> (string)
                 The ID of the streaming image.

              tags -> (map)
                 A  collection of labels, in the form of key:value pairs, that
                 apply to this resource.

                 key -> (string)

                 value -> (string)

       studioComponentSummaries -> (list)
          A collection of studio component summaries.

          (structure)
              The studio component's summary.

              createdAt -> (timestamp)
                 The Unix epoch timestamp in seconds for when the resource was
                 created.

              createdBy -> (string)
                 The user ID of the user that created the studio component.

              description -> (string)
                 The description.

              name -> (string)
                 The name for the studio component.

              studioComponentId -> (string)
                 The unique identifier for a studio component resource.

              subtype -> (string)
                 The specific subtype of a studio component.

              type -> (string)
                 The type of the studio component.

              updatedAt -> (timestamp)
                 The Unix epoch timestamp in seconds for when the resource was
                 updated.

              updatedBy -> (string)
                 The user ID of the user that most recently  updated  the  re-
                 source.



                                                  GET-LAUNCH-PROFILE-DETAILS()
