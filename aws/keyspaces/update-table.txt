UPDATE-TABLE()                                                  UPDATE-TABLE()



NAME
       update-table -

DESCRIPTION
       Adds  new  columns to the table or updates one of the table's settings,
       for example capacity mode, encryption, point-in-time recovery,  or  ttl
       settings.  Note that you can only update one specific table setting per
       update operation.

       See also: AWS API Documentation

SYNOPSIS
            update-table
          --keyspace-name <value>
          --table-name <value>
          [--add-columns <value>]
          [--capacity-specification <value>]
          [--encryption-specification <value>]
          [--point-in-time-recovery <value>]
          [--ttl <value>]
          [--default-time-to-live <value>]
          [--client-side-timestamps <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --keyspace-name (string)
          The name of the keyspace the specified table is stored in.

       --table-name (string)
          The name of the table.

       --add-columns (list)
          For each column to be added to the specified table:

          o name - The name of the column.

          o type - An Amazon Keyspaces data type. For  more  information,  see
            Data types in the Amazon Keyspaces Developer Guide .

          (structure)
              The names and data types of regular columns.

              name -> (string)
                 The name of the column.

              type -> (string)
                 The  data  type  of  the column. For a list of available data
                 types, see Data types in the Amazon Keyspaces Developer Guide
                 .

       Shorthand Syntax:

          name=string,type=string ...

       JSON Syntax:

          [
            {
              "name": "string",
              "type": "string"
            }
            ...
          ]

       --capacity-specification (structure)
          Modifies  the read/write throughput capacity mode for the table. The
          options are:

          o throughputMode:PAY_PER_REQUEST and

          o throughputMode:PROVISIONED - Provisioned  capacity  mode  requires
            readCapacityUnits and writeCapacityUnits as input.

          The default is throughput_mode:PAY_PER_REQUEST .

          For  more  information,  see Read/write capacity modes in the Amazon
          Keyspaces Developer Guide .

          throughputMode -> (string)
              The read/write throughput capacity mode for a table. The options
              are:

              o throughputMode:PAY_PER_REQUEST and

              o throughputMode:PROVISIONED  -  Provisioned  capacity  mode re-
                quires readCapacityUnits and writeCapacityUnits as input.

              The default is throughput_mode:PAY_PER_REQUEST .

              For more information, see Read/write capacity modes in the  Ama-
              zon Keyspaces Developer Guide .

          readCapacityUnits -> (long)
              The throughput capacity specified for read operations defined in
              read capacity units  (RCUs) .

          writeCapacityUnits -> (long)
              The throughput capacity specified for write  operations  defined
              in write capacity units  (WCUs) .

       Shorthand Syntax:

          throughputMode=string,readCapacityUnits=long,writeCapacityUnits=long

       JSON Syntax:

          {
            "throughputMode": "PAY_PER_REQUEST"|"PROVISIONED",
            "readCapacityUnits": long,
            "writeCapacityUnits": long
          }

       --encryption-specification (structure)
          Modifies the encryption settings of the table. You can choose one of
          the following KMS key (KMS key):

          o type:AWS_OWNED_KMS_KEY - This key is owned by Amazon Keyspaces.

          o type:CUSTOMER_MANAGED_KMS_KEY - This key is stored in your account
            and  is  created,  owned, and managed by you. This option requires
            the kms_key_identifier of the KMS  key  in  Amazon  Resource  Name
            (ARN) format as input.

          The default is AWS_OWNED_KMS_KEY .

          For more information, see Encryption at rest in the Amazon Keyspaces
          Developer Guide .

          type -> (string)
              The encryption option specified for the table.  You  can  choose
              one of the following KMS keys (KMS keys):

              o type:AWS_OWNED_KMS_KEY   -   This   key  is  owned  by  Amazon
                Keyspaces.

              o type:CUSTOMER_MANAGED_KMS_KEY - This key is stored in your ac-
                count  and  is created, owned, and managed by you. This option
                requires the kms_key_identifier of the KMS key in  Amazon  Re-
                source Name (ARN) format as input.

              The default is type:AWS_OWNED_KMS_KEY .

              For  more  information,  see  Encryption  at  rest in the Amazon
              Keyspaces Developer Guide .

          kmsKeyIdentifier -> (string)
              The Amazon Resource Name (ARN) of the customer managed KMS  key,
              for example kms_key_identifier:ARN .

       Shorthand Syntax:

          type=string,kmsKeyIdentifier=string

       JSON Syntax:

          {
            "type": "CUSTOMER_MANAGED_KMS_KEY"|"AWS_OWNED_KMS_KEY",
            "kmsKeyIdentifier": "string"
          }

       --point-in-time-recovery (structure)
          Modifies  the pointInTimeRecovery settings of the table. The options
          are:

          o status=ENABLED

          o status=DISABLED

          If it's not specified, the default is status=DISABLED .

          For more information,  see  Point-in-time  recovery  in  the  Amazon
          Keyspaces Developer Guide .

          status -> (string)
              The options are:

              o status=ENABLED

              o status=DISABLED

       Shorthand Syntax:

          status=string

       JSON Syntax:

          {
            "status": "ENABLED"|"DISABLED"
          }

       --ttl (structure)
          Modifies  Time  to  Live  custom settings for the table. The options
          are:

          o status:enabled

          o status:disabled

          The default is status:disabled . After ttl  is  enabled,  you  can't
          disable it for the table.

          For  more  information,  see Expiring data by using Amazon Keyspaces
          Time to Live (TTL) in the Amazon Keyspaces Developer Guide .

          status -> (string)
              Shows how to enable custom Time to Live (TTL) settings  for  the
              specified table.

       Shorthand Syntax:

          status=string

       JSON Syntax:

          {
            "status": "ENABLED"
          }

       --default-time-to-live (integer)
          The default Time to Live setting in seconds for the table.

          For  more information, see Setting the default TTL value for a table
          in the Amazon Keyspaces Developer Guide .

       --client-side-timestamps (structure)
          Enables client-side timestamps for the table. By default,  the  set-
          ting  is  disabled.  You  can enable client-side timestamps with the
          following option:

          o status: "enabled"

          Once client-side timestamps are enabled for a  table,  this  setting
          cannot be disabled.

          status -> (string)
              Shows  how  to  enable  client-side  timestamps settings for the
              specified table.

       Shorthand Syntax:

          status=string

       JSON Syntax:

          {
            "status": "ENABLED"
          }

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       resourceArn -> (string)
          The Amazon Resource Name (ARN) of the modified table.



                                                                UPDATE-TABLE()
