GET-TABLE()                                                        GET-TABLE()



NAME
       get-table -

DESCRIPTION
       Returns  information  about  the  table, including the table's name and
       current status, the keyspace name, configuration  settings,  and  meta-
       data.

       To  read  table metadata using GetTable , Select action permissions for
       the table and system tables are required to complete the operation.

       See also: AWS API Documentation

SYNOPSIS
            get-table
          --keyspace-name <value>
          --table-name <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --keyspace-name (string)
          The name of the keyspace that the table is stored in.

       --table-name (string)
          The name of the table.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       keyspaceName -> (string)
          The name of the keyspace that the specified table is stored in.

       tableName -> (string)
          The name of the specified table.

       resourceArn -> (string)
          The Amazon Resource Name (ARN) of the specified table.

       creationTimestamp -> (timestamp)
          The creation timestamp of the specified table.

       status -> (string)
          The current status of the specified table.

       schemaDefinition -> (structure)
          The schema definition of the specified table.

          allColumns -> (list)
              The regular columns of the table.

              (structure)
                 The names and data types of regular columns.

                 name -> (string)
                     The name of the column.

                 type -> (string)
                     The data type of the column. For a list of available data
                     types,  see  Data types in the Amazon Keyspaces Developer
                     Guide .

          partitionKeys -> (list)
              The columns that are part of the partition key of the table .

              (structure)
                 The partition key portion of the primary key is required  and
                 determines  how  Amazon Keyspaces stores the data. The parti-
                 tion key can be a single column, or  it  can  be  a  compound
                 value composed of two or more columns.

                 name -> (string)
                     The name(s) of the partition key column(s).

          clusteringKeys -> (list)
              The columns that are part of the clustering key of the table.

              (structure)
                 The  optional  clustering  column portion of your primary key
                 determines how the data is clustered and sorted  within  each
                 partition.

                 name -> (string)
                     The name(s) of the clustering column(s).

                 orderBy -> (string)
                     Sets  the  ascendant  (ASC  ) or descendant (DESC ) order
                     modifier.

          staticColumns -> (list)
              The columns that have been defined as STATIC  .  Static  columns
              store values that are shared by all rows in the same partition.

              (structure)
                 The  static columns of the table. Static columns store values
                 that are shared by all rows in the same partition.

                 name -> (string)
                     The name of the static column.

       capacitySpecification -> (structure)
          The read/write throughput capacity mode for  a  table.  The  options
          are:

          o throughputMode:PAY_PER_REQUEST

          o throughputMode:PROVISIONED

          throughputMode -> (string)
              The read/write throughput capacity mode for a table. The options
              are:

              o throughputMode:PAY_PER_REQUEST and

              o throughputMode:PROVISIONED -  Provisioned  capacity  mode  re-
                quires readCapacityUnits and writeCapacityUnits as input.

              The default is throughput_mode:PAY_PER_REQUEST .

              For  more information, see Read/write capacity modes in the Ama-
              zon Keyspaces Developer Guide .

          readCapacityUnits -> (long)
              The throughput capacity specified for read operations defined in
              read capacity units  (RCUs) .

          writeCapacityUnits -> (long)
              The  throughput  capacity specified for write operations defined
              in write capacity units  (WCUs) .

          lastUpdateToPayPerRequestTimestamp -> (timestamp)
              The timestamp of the last operation that changed the provisioned
              throughput capacity of a table.

       encryptionSpecification -> (structure)
          The encryption settings of the specified table.

          type -> (string)
              The  encryption  option  specified for the table. You can choose
              one of the following KMS keys (KMS keys):

              o type:AWS_OWNED_KMS_KEY  -  This  key  is   owned   by   Amazon
                Keyspaces.

              o type:CUSTOMER_MANAGED_KMS_KEY - This key is stored in your ac-
                count and is created, owned, and managed by you.  This  option
                requires  the  kms_key_identifier of the KMS key in Amazon Re-
                source Name (ARN) format as input.

              The default is type:AWS_OWNED_KMS_KEY .

              For more information, see  Encryption  at  rest  in  the  Amazon
              Keyspaces Developer Guide .

          kmsKeyIdentifier -> (string)
              The  Amazon Resource Name (ARN) of the customer managed KMS key,
              for example kms_key_identifier:ARN .

       pointInTimeRecovery -> (structure)
          The point-in-time recovery status of the specified table.

          status -> (string)
              Shows if point-in-time recovery is enabled or disabled  for  the
              specified table.

          earliestRestorableTimestamp -> (timestamp)
              Specifies  the  earliest  possible restore point of the table in
              ISO 8601 format.

       ttl -> (structure)
          The custom Time to Live settings of the specified table.

          status -> (string)
              Shows how to enable custom Time to Live (TTL) settings  for  the
              specified table.

       defaultTimeToLive -> (integer)
          The default Time to Live settings in seconds of the specified table.

       comment -> (structure)
          The the description of the specified table.

          message -> (string)
              An optional description of the table.

       clientSideTimestamps -> (structure)
          The client-side timestamps setting of the table.

          status -> (string)
              Shows  how  to  enable  client-side  timestamps settings for the
              specified table.

       replicaSpecifications -> (list)
          Returns the Amazon Web Services Region specific settings of all  Re-
          gions a multi-Region table is replicated in.

          (structure)
              The  Region-specific  settings  of  a  multi-Region table in the
              specified Amazon Web Services Region.

              If the multi-Region table is using provisioned capacity and  has
              optional  auto scaling policies configured, note that the Region
              specific summary returns both read and write capacity  settings.
              But  only  Region specific read capacity settings can be config-
              ured for a multi-Region table. In  a  multi-Region  table,  your
              write  capacity  units will be synced across all Amazon Web Ser-
              vices Regions to ensure that there is enough capacity to  repli-
              cate write events across Regions.

              region -> (string)
                 The Amazon Web Services Region.

              status -> (string)
                 The  status of the multi-Region table in the specified Amazon
                 Web Services Region.

              capacitySpecification -> (structure)
                 The read/write throughput capacity mode for a table. The  op-
                 tions are:

                 o throughputMode:PAY_PER_REQUEST and

                 o throughputMode:PROVISIONED .

                 For  more  information,  see Read/write capacity modes in the
                 Amazon Keyspaces Developer Guide .

                 throughputMode -> (string)
                     The read/write throughput capacity mode for a table.  The
                     options are:

                     o throughputMode:PAY_PER_REQUEST and

                     o throughputMode:PROVISIONED  - Provisioned capacity mode
                       requires readCapacityUnits  and  writeCapacityUnits  as
                       input.

                     The default is throughput_mode:PAY_PER_REQUEST .

                     For  more  information,  see Read/write capacity modes in
                     the Amazon Keyspaces Developer Guide .

                 readCapacityUnits -> (long)
                     The throughput capacity specified for read operations de-
                     fined in read capacity units  (RCUs) .

                 writeCapacityUnits -> (long)
                     The  throughput  capacity  specified for write operations
                     defined in write capacity units  (WCUs) .

                 lastUpdateToPayPerRequestTimestamp -> (timestamp)
                     The timestamp of the last operation that changed the pro-
                     visioned throughput capacity of a table.



                                                                   GET-TABLE()
