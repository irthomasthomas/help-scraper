UPDATE-PIPELINE()                                            UPDATE-PIPELINE()



NAME
       update-pipeline -

DESCRIPTION
       Updates  a  specified  pipeline with edits or changes to its structure.
       Use a JSON file with the pipeline structure and UpdatePipeline to  pro-
       vide  the  full  structure  of  the pipeline. Updating the pipeline in-
       creases the version number of the pipeline by 1.

       See also: AWS API Documentation

SYNOPSIS
            update-pipeline
          --pipeline <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --pipeline (structure)
          The name of the pipeline to be updated.

          name -> (string)
              The name of the pipeline.

          roleArn -> (string)
              The Amazon Resource Name (ARN) for CodePipeline to use to either
              perform  actions  with  no  actionRoleArn  , or to use to assume
              roles for actions with an actionRoleArn .

          artifactStore -> (structure)
              Represents information about the S3 bucket where  artifacts  are
              stored for the pipeline.

              NOTE:
                 You  must  include  either artifactStore or artifactStores in
                 your pipeline, but you cannot  use  both.  If  you  create  a
                 cross-region  action in your pipeline, you must use artifact-
                 Stores .

              type -> (string)
                 The type of the artifact store, such as S3.

              location -> (string)
                 The S3 bucket used for storing the artifacts for a  pipeline.
                 You  can specify the name of an S3 bucket but not a folder in
                 the bucket. A folder to contain  the  pipeline  artifacts  is
                 created  for  you  based on the name of the pipeline. You can
                 use any S3 bucket in the same Amazon Web Services  Region  as
                 the pipeline to store your pipeline artifacts.

              encryptionKey -> (structure)
                 The  encryption  key used to encrypt the data in the artifact
                 store, such as an Amazon Web Services Key Management  Service
                 key.  If  this is undefined, the default key for Amazon S3 is
                 used.

                 id -> (string)
                     The ID used to identify the key. For an Amazon  Web  Ser-
                     vices  KMS  key,  you can use the key ID, the key ARN, or
                     the alias ARN.

                     NOTE:
                        Aliases are recognized only in the account  that  cre-
                        ated  the  KMS key. For cross-account actions, you can
                        only use the key ID or key ARN to  identify  the  key.
                        Cross-account  actions involve using the role from the
                        other account (AccountB), so  specifying  the  key  ID
                        will use the key from the other account (AccountB).

                 type -> (string)
                     The  type  of  encryption key, such as an Amazon Web Ser-
                     vices KMS key. When creating or updating a pipeline,  the
                     value must be set to 'KMS'.

          artifactStores -> (map)
              A  mapping of artifactStore objects and their corresponding Ama-
              zon Web Services Regions. There must be an  artifact  store  for
              the  pipeline  Region  and  for  each cross-region action in the
              pipeline.

              NOTE:
                 You must include either artifactStore  or  artifactStores  in
                 your  pipeline,  but  you  cannot  use  both. If you create a
                 cross-region action in your pipeline, you must use  artifact-
                 Stores .

              key -> (string)

              value -> (structure)
                 The S3 bucket where artifacts for the pipeline are stored.

                 NOTE:
                     You  must  include either artifactStore or artifactStores
                     in your pipeline, but you cannot use both. If you  create
                     a  cross-region action in your pipeline, you must use ar-
                     tifactStores .

                 type -> (string)
                     The type of the artifact store, such as S3.

                 location -> (string)
                     The S3 bucket used for storing the artifacts for a  pipe-
                     line.  You can specify the name of an S3 bucket but not a
                     folder in the bucket. A folder to  contain  the  pipeline
                     artifacts  is  created  for  you based on the name of the
                     pipeline. You can use any S3 bucket in  the  same  Amazon
                     Web  Services  Region as the pipeline to store your pipe-
                     line artifacts.

                 encryptionKey -> (structure)
                     The encryption key used to encrypt the data in the  arti-
                     fact store, such as an Amazon Web Services Key Management
                     Service key. If this is undefined, the  default  key  for
                     Amazon S3 is used.

                     id -> (string)
                        The  ID  used  to  identify the key. For an Amazon Web
                        Services KMS key, you can use the key ID, the key ARN,
                        or the alias ARN.

                        NOTE:
                            Aliases  are  recognized  only in the account that
                            created the KMS key.  For  cross-account  actions,
                            you can only use the key ID or key ARN to identify
                            the key. Cross-account actions involve  using  the
                            role  from the other account (AccountB), so speci-
                            fying the key ID will use the key from  the  other
                            account (AccountB).

                     type -> (string)
                        The type of encryption key, such as an Amazon Web Ser-
                        vices KMS key. When creating or updating  a  pipeline,
                        the value must be set to 'KMS'.

          stages -> (list)
              The stage in which to perform the action.

              (structure)
                 Represents information about a stage and its definition.

                 name -> (string)
                     The name of the stage.

                 blockers -> (list)
                     Reserved for future use.

                     (structure)
                        Reserved for future use.

                        name -> (string)
                            Reserved for future use.

                        type -> (string)
                            Reserved for future use.

                 actions -> (list)
                     The actions included in a stage.

                     (structure)
                        Represents information about an action declaration.

                        name -> (string)
                            The action declaration's name.

                        actionTypeId -> (structure)
                            Specifies  the action type and the provider of the
                            action.

                            category -> (string)
                               A category defines what kind of action  can  be
                               taken in the stage, and constrains the provider
                               type for the action. Valid categories are  lim-
                               ited to one of the following values.

                               o Source

                               o Build

                               o Test

                               o Deploy

                               o Invoke

                               o Approval

                            owner -> (string)
                               The  creator  of the action being called. There
                               are three valid values for the Owner  field  in
                               the  action  category section within your pipe-
                               line structure: AWS , ThirdParty , and Custom .
                               For  more  information,  see Valid Action Types
                               and Providers in CodePipeline .

                            provider -> (string)
                               The provider of the service being called by the
                               action.  Valid  providers are determined by the
                               action category. For example, an action in  the
                               Deploy  category  type might have a provider of
                               CodeDeploy, which would be specified as CodeDe-
                               ploy  .  For more information, see Valid Action
                               Types and Providers in CodePipeline .

                            version -> (string)
                               A string that describes the action version.

                        runOrder -> (integer)
                            The order in which actions are run.

                        configuration -> (map)
                            The action's configuration.  These  are  key-value
                            pairs that specify input values for an action. For
                            more information, see  Action  Structure  Require-
                            ments in CodePipeline . For the list of configura-
                            tion properties for the CloudFormation action type
                            in CodePipeline, see Configuration Properties Ref-
                            erence in the CloudFormation User Guide . For tem-
                            plate  snippets with examples, see Using Parameter
                            Override Functions with CodePipeline Pipelines  in
                            the CloudFormation User Guide .

                            The  values  can  be represented in either JSON or
                            YAML format. For example, the  JSON  configuration
                            item format is as follows:
                               JSON:

                               "Configuration" : { Key : Value },

                            key -> (string)

                            value -> (string)

                        commands -> (list)
                            The shell commands to run with your compute action
                            in CodePipeline. All commands are supported except
                            multi-line  formats. While CodeBuild logs and per-
                            missions are used, you do not need to  create  any
                            resources in CodeBuild.

                            NOTE:
                               Using  compute  time for this action will incur
                               separate charges in CodeBuild.

                            (string)

                        outputArtifacts -> (list)
                            The name or ID of the result of the action  decla-
                            ration, such as a test or build artifact.

                            (structure)
                               Represents  information  about the output of an
                               action.

                               name -> (string)
                                   The name of the output of an artifact, such
                                   as "My App".

                                   The  input  artifact  of an action must ex-
                                   actly match the output artifact declared in
                                   a  preceding action, but the input artifact
                                   does not have to  be  the  next  action  in
                                   strict  sequence  from the action that pro-
                                   vided the output artifact. Actions in  par-
                                   allel  can  declare  different output arti-
                                   facts, which are in turn consumed  by  dif-
                                   ferent following actions.

                                   Output artifact names must be unique within
                                   a pipeline.

                               files -> (list)
                                   The files that you want to  associate  with
                                   the  output  artifact that will be exported
                                   from the compute action.

                                   (string)

                        inputArtifacts -> (list)
                            The name or ID of the artifact consumed by the ac-
                            tion, such as a test or build artifact.

                            (structure)
                               Represents  information about an artifact to be
                               worked on, such as a test or build artifact.

                               name -> (string)
                                   The name of the artifact to  be  worked  on
                                   (for example, "My App").

                                   Artifacts  are the files that are worked on
                                   by actions in the pipeline. See the  action
                                   configuration  for  each action for details
                                   about artifact parameters. For example, the
                                   S3  source  action input artifact is a file
                                   name (or file path), and the files are gen-
                                   erally  provided as a ZIP file. Example ar-
                                   tifact name: SampleApp_Windows.zip

                                   The input artifact of an  action  must  ex-
                                   actly match the output artifact declared in
                                   a preceding action, but the input  artifact
                                   does  not  have  to  be  the next action in
                                   strict sequence from the action  that  pro-
                                   vided  the output artifact. Actions in par-
                                   allel can declare  different  output  arti-
                                   facts,  which  are in turn consumed by dif-
                                   ferent following actions.

                        outputVariables -> (list)
                            The list of variables that are to be exported from
                            the compute action. This is specifically CodeBuild
                            environment variables as used for that action.

                            (string)

                        roleArn -> (string)
                            The ARN of the IAM service role that performs  the
                            declared  action.  This  is  assumed  through  the
                            roleArn for the pipeline.

                        region -> (string)
                            The action declaration's Amazon Web  Services  Re-
                            gion, such as us-east-1.

                        namespace -> (string)
                            The variable namespace associated with the action.
                            All variables produced as output  by  this  action
                            fall under this namespace.

                        timeoutInMinutes -> (integer)
                            A  timeout duration in minutes that can be applied
                            against  the  ActionTypes  default  timeout  value
                            specified in Quotas for CodePipeline . This attri-
                            bute is available only to the manual approval  Ac-
                            tionType.

                 onFailure -> (structure)
                     The method to use when a stage has not completed success-
                     fully. For example, configuring this field  for  rollback
                     will  roll  back a failed stage automatically to the last
                     successful pipeline execution in the stage.

                     result -> (string)
                        The specified result for when the  failure  conditions
                        are met, such as rolling back the stage.

                     conditions -> (list)
                        The  conditions  that are configured as failure condi-
                        tions.

                        (structure)
                            The condition for the stage. A condition  is  made
                            up of the rules and the result for the condition.

                            result -> (string)
                               The  action  to  be  done when the condition is
                               met. For example, rolling back an execution for
                               a failure condition.

                            rules -> (list)
                               The rules that make up the condition.

                               (structure)
                                   Represents information about the rule to be
                                   created for an associated condition. An ex-
                                   ample  would  be creating a new rule for an
                                   entry condition, such as a rule that checks
                                   for  a  test result before allowing the run
                                   to enter the deployment stage.

                                   name -> (string)
                                      The name of the rule that is created for
                                      the condition, such as CheckAllResults.

                                   ruleTypeId -> (structure)
                                      The  ID for the rule type, which is made
                                      up of the combined values for  category,
                                      owner, provider, and version.

                                      category -> (string)
                                          A category defines what kind of rule
                                          can be run in the  stage,  and  con-
                                          strains  the  provider  type for the
                                          rule. The valid category is Rule .

                                      owner -> (string)
                                          The  creator  of  the   rule   being
                                          called.  The  valid  value  for  the
                                          Owner field in the rule category  is
                                          AWS .

                                      provider -> (string)
                                          The  rule  provider, such as the De-
                                          ploymentWindow rule.

                                      version -> (string)
                                          A string  that  describes  the  rule
                                          version.

                                   configuration -> (map)
                                      The  action configuration fields for the
                                      rule.

                                      key -> (string)

                                      value -> (string)

                                   inputArtifacts -> (list)
                                      The input artifacts fields for the rule,
                                      such as specifying an input file for the
                                      rule.

                                      (structure)
                                          Represents information about an  ar-
                                          tifact  to  be  worked on, such as a
                                          test or build artifact.

                                          name -> (string)
                                             The name of the  artifact  to  be
                                             worked   on   (for  example,  "My
                                             App").

                                             Artifacts are the files that  are
                                             worked on by actions in the pipe-
                                             line. See the  action  configura-
                                             tion  for each action for details
                                             about  artifact  parameters.  For
                                             example, the S3 source action in-
                                             put artifact is a file  name  (or
                                             file  path),  and  the  files are
                                             generally provided as a ZIP file.
                                             Example   artifact   name:   Sam-
                                             pleApp_Windows.zip

                                             The input artifact of  an  action
                                             must exactly match the output ar-
                                             tifact declared  in  a  preceding
                                             action,  but  the  input artifact
                                             does not have to be the next  ac-
                                             tion  in strict sequence from the
                                             action that provided  the  output
                                             artifact. Actions in parallel can
                                             declare  different  output  arti-
                                             facts, which are in turn consumed
                                             by different following actions.

                                   roleArn -> (string)
                                      The pipeline role  ARN  associated  with
                                      the rule.

                                   region -> (string)
                                      The  Region for the condition associated
                                      with the rule.

                                   timeoutInMinutes -> (integer)
                                      The action timeout for the rule.

                 onSuccess -> (structure)
                     The method to use when a stage has succeeded.  For  exam-
                     ple, configuring this field for conditions will allow the
                     stage to succeed when the conditions are met.

                     conditions -> (list)
                        The conditions that are success conditions.

                        (structure)
                            The condition for the stage. A condition  is  made
                            up of the rules and the result for the condition.

                            result -> (string)
                               The  action  to  be  done when the condition is
                               met. For example, rolling back an execution for
                               a failure condition.

                            rules -> (list)
                               The rules that make up the condition.

                               (structure)
                                   Represents information about the rule to be
                                   created for an associated condition. An ex-
                                   ample  would  be creating a new rule for an
                                   entry condition, such as a rule that checks
                                   for  a  test result before allowing the run
                                   to enter the deployment stage.

                                   name -> (string)
                                      The name of the rule that is created for
                                      the condition, such as CheckAllResults.

                                   ruleTypeId -> (structure)
                                      The  ID for the rule type, which is made
                                      up of the combined values for  category,
                                      owner, provider, and version.

                                      category -> (string)
                                          A category defines what kind of rule
                                          can be run in the  stage,  and  con-
                                          strains  the  provider  type for the
                                          rule. The valid category is Rule .

                                      owner -> (string)
                                          The  creator  of  the   rule   being
                                          called.  The  valid  value  for  the
                                          Owner field in the rule category  is
                                          AWS .

                                      provider -> (string)
                                          The  rule  provider, such as the De-
                                          ploymentWindow rule.

                                      version -> (string)
                                          A string  that  describes  the  rule
                                          version.

                                   configuration -> (map)
                                      The  action configuration fields for the
                                      rule.

                                      key -> (string)

                                      value -> (string)

                                   inputArtifacts -> (list)
                                      The input artifacts fields for the rule,
                                      such as specifying an input file for the
                                      rule.

                                      (structure)
                                          Represents information about an  ar-
                                          tifact  to  be  worked on, such as a
                                          test or build artifact.

                                          name -> (string)
                                             The name of the  artifact  to  be
                                             worked   on   (for  example,  "My
                                             App").

                                             Artifacts are the files that  are
                                             worked on by actions in the pipe-
                                             line. See the  action  configura-
                                             tion  for each action for details
                                             about  artifact  parameters.  For
                                             example, the S3 source action in-
                                             put artifact is a file  name  (or
                                             file  path),  and  the  files are
                                             generally provided as a ZIP file.
                                             Example   artifact   name:   Sam-
                                             pleApp_Windows.zip

                                             The input artifact of  an  action
                                             must exactly match the output ar-
                                             tifact declared  in  a  preceding
                                             action,  but  the  input artifact
                                             does not have to be the next  ac-
                                             tion  in strict sequence from the
                                             action that provided  the  output
                                             artifact. Actions in parallel can
                                             declare  different  output  arti-
                                             facts, which are in turn consumed
                                             by different following actions.

                                   roleArn -> (string)
                                      The pipeline role  ARN  associated  with
                                      the rule.

                                   region -> (string)
                                      The  Region for the condition associated
                                      with the rule.

                                   timeoutInMinutes -> (integer)
                                      The action timeout for the rule.

                 beforeEntry -> (structure)
                     The method to use when a stage allows entry. For example,
                     configuring this field for conditions will allow entry to
                     the stage when the conditions are met.

                     conditions -> (list)
                        The conditions that are  configured  as  entry  condi-
                        tions.

                        (structure)
                            The  condition  for the stage. A condition is made
                            up of the rules and the result for the condition.

                            result -> (string)
                               The action to be done  when  the  condition  is
                               met. For example, rolling back an execution for
                               a failure condition.

                            rules -> (list)
                               The rules that make up the condition.

                               (structure)
                                   Represents information about the rule to be
                                   created for an associated condition. An ex-
                                   ample would be creating a new rule  for  an
                                   entry condition, such as a rule that checks
                                   for a test result before allowing  the  run
                                   to enter the deployment stage.

                                   name -> (string)
                                      The name of the rule that is created for
                                      the condition, such as CheckAllResults.

                                   ruleTypeId -> (structure)
                                      The ID for the rule type, which is  made
                                      up  of the combined values for category,
                                      owner, provider, and version.

                                      category -> (string)
                                          A category defines what kind of rule
                                          can  be  run  in the stage, and con-
                                          strains the provider  type  for  the
                                          rule. The valid category is Rule .

                                      owner -> (string)
                                          The   creator   of  the  rule  being
                                          called.  The  valid  value  for  the
                                          Owner  field in the rule category is
                                          AWS .

                                      provider -> (string)
                                          The rule provider, such as  the  De-
                                          ploymentWindow rule.

                                      version -> (string)
                                          A  string  that  describes  the rule
                                          version.

                                   configuration -> (map)
                                      The action configuration fields for  the
                                      rule.

                                      key -> (string)

                                      value -> (string)

                                   inputArtifacts -> (list)
                                      The input artifacts fields for the rule,
                                      such as specifying an input file for the
                                      rule.

                                      (structure)
                                          Represents  information about an ar-
                                          tifact to be worked on,  such  as  a
                                          test or build artifact.

                                          name -> (string)
                                             The  name  of  the artifact to be
                                             worked  on  (for   example,   "My
                                             App").

                                             Artifacts  are the files that are
                                             worked on by actions in the pipe-
                                             line.  See  the action configura-
                                             tion for each action for  details
                                             about  artifact  parameters.  For
                                             example, the S3 source action in-
                                             put  artifact  is a file name (or
                                             file path),  and  the  files  are
                                             generally provided as a ZIP file.
                                             Example   artifact   name:   Sam-
                                             pleApp_Windows.zip

                                             The  input  artifact of an action
                                             must exactly match the output ar-
                                             tifact  declared  in  a preceding
                                             action, but  the  input  artifact
                                             does  not have to be the next ac-
                                             tion in strict sequence from  the
                                             action  that  provided the output
                                             artifact. Actions in parallel can
                                             declare  different  output  arti-
                                             facts, which are in turn consumed
                                             by different following actions.

                                   roleArn -> (string)
                                      The  pipeline  role  ARN associated with
                                      the rule.

                                   region -> (string)
                                      The Region for the condition  associated
                                      with the rule.

                                   timeoutInMinutes -> (integer)
                                      The action timeout for the rule.

          version -> (integer)
              The  version number of the pipeline. A new pipeline always has a
              version number of 1. This number is incremented when a  pipeline
              is updated.

          executionMode -> (string)
              The  method that the pipeline will use to handle multiple execu-
              tions. The default mode is SUPERSEDED.

          pipelineType -> (string)
              CodePipeline provides the following pipeline types, which differ
              in  characteristics and price, so that you can tailor your pipe-
              line features and cost to the needs of your applications.

              o V1 type pipelines have a JSON structure that contains standard
                pipeline, stage, and action-level parameters.

              o V2  type pipelines have the same structure as a V1 type, along
                with additional parameters for release safety and trigger con-
                figuration.

              WARNING:
                 Including V2 parameters, such as triggers on Git tags, in the
                 pipeline JSON when creating or updating a pipeline  will  re-
                 sult  in  the pipeline having the V2 type of pipeline and the
                 associated costs.

              For information about pricing for CodePipeline, see Pricing .

              For information about which type of pipeline to choose, see What
              type of pipeline is right for me? .

          variables -> (list)
              A  list  that  defines the pipeline variables for a pipeline re-
              source. Variable names  can  have  alphanumeric  and  underscore
              characters, and the values must match [A-Za-z0-9@\-_]+ .

              (structure)
                 A variable declared at the pipeline level.

                 name -> (string)
                     The name of a pipeline-level variable.

                 defaultValue -> (string)
                     The value of a pipeline-level variable.

                 description -> (string)
                     The  description  of a pipeline-level variable. It's used
                     to add additional context about the variable, and not be-
                     ing used at time when pipeline executes.

          triggers -> (list)
              The  trigger  configuration  specifying a type of event, such as
              Git tags, that starts the pipeline.

              NOTE:
                 When a trigger configuration is specified, default change de-
                 tection for repository and branch commits is disabled.

              (structure)
                 Represents information about the specified trigger configura-
                 tion, such as the filter criteria and the  source  stage  for
                 the action that contains the trigger.

                 NOTE:
                     This  is  only supported for the CodeStarSourceConnection
                     action type.

                 NOTE:
                     When a trigger configuration is specified, default change
                     detection for repository and branch commits is disabled.

                 providerType -> (string)
                     The  source  provider  for the event, such as connections
                     configured for a repository with Git tags, for the speci-
                     fied trigger configuration.

                 gitConfiguration -> (structure)
                     Provides the filter criteria and the source stage for the
                     repository event that starts the pipeline,  such  as  Git
                     tags.

                     sourceActionName -> (string)
                        The name of the pipeline source action where the trig-
                        ger configuration, such as Git tags, is specified. The
                        trigger configuration will start the pipeline upon the
                        specified change only.

                        NOTE:
                            You can only specify one trigger configuration per
                            source action.

                     push -> (list)
                        The  field  where the repository event that will start
                        the pipeline, such as pushing Git tags,  is  specified
                        with details.

                        (structure)
                            The  event  criteria that specify when a specified
                            repository event will start the pipeline  for  the
                            specified trigger configuration, such as the lists
                            of Git tags to include and exclude.

                            tags -> (structure)
                               The field that contains the details for the Git
                               tags trigger configuration.

                               includes -> (list)
                                   The list of patterns of Git tags that, when
                                   pushed, are to be included as criteria that
                                   starts the pipeline.

                                   (string)

                               excludes -> (list)
                                   The list of patterns of Git tags that, when
                                   pushed, are to be  excluded  from  starting
                                   the pipeline.

                                   (string)

                            branches -> (structure)
                               The  field that specifies to filter on branches
                               for the push trigger configuration.

                               includes -> (list)
                                   The list of patterns of Git branches  that,
                                   when a commit is pushed, are to be included
                                   as criteria that starts the pipeline.

                                   (string)

                               excludes -> (list)
                                   The list of patterns of Git branches  that,
                                   when a commit is pushed, are to be excluded
                                   from starting the pipeline.

                                   (string)

                            filePaths -> (structure)
                               The field that  specifies  to  filter  on  file
                               paths for the push trigger configuration.

                               includes -> (list)
                                   The list of patterns of Git repository file
                                   paths that, when a commit is pushed, are to
                                   be  included  as  criteria  that starts the
                                   pipeline.

                                   (string)

                               excludes -> (list)
                                   The list of patterns of Git repository file
                                   paths that, when a commit is pushed, are to
                                   be excluded from starting the pipeline.

                                   (string)

                     pullRequest -> (list)
                        The field where the repository event that  will  start
                        the pipeline is specified as pull requests.

                        (structure)
                            The  event  criteria  for the pull request trigger
                            configuration, such as the lists  of  branches  or
                            file paths to include and exclude.

                            events -> (list)
                               The  field  that  specifies  which pull request
                               events to filter on (opened,  updated,  closed)
                               for the trigger configuration.

                               (string)

                            branches -> (structure)
                               The  field that specifies to filter on branches
                               for the pull request trigger configuration.

                               includes -> (list)
                                   The list of patterns of Git branches  that,
                                   when a commit is pushed, are to be included
                                   as criteria that starts the pipeline.

                                   (string)

                               excludes -> (list)
                                   The list of patterns of Git branches  that,
                                   when a commit is pushed, are to be excluded
                                   from starting the pipeline.

                                   (string)

                            filePaths -> (structure)
                               The field that  specifies  to  filter  on  file
                               paths  for  the pull request trigger configura-
                               tion.

                               includes -> (list)
                                   The list of patterns of Git repository file
                                   paths that, when a commit is pushed, are to
                                   be included as  criteria  that  starts  the
                                   pipeline.

                                   (string)

                               excludes -> (list)
                                   The list of patterns of Git repository file
                                   paths that, when a commit is pushed, are to
                                   be excluded from starting the pipeline.

                                   (string)

       JSON Syntax:

          {
            "name": "string",
            "roleArn": "string",
            "artifactStore": {
              "type": "S3",
              "location": "string",
              "encryptionKey": {
                "id": "string",
                "type": "KMS"
              }
            },
            "artifactStores": {"string": {
                  "type": "S3",
                  "location": "string",
                  "encryptionKey": {
                    "id": "string",
                    "type": "KMS"
                  }
                }
              ...},
            "stages": [
              {
                "name": "string",
                "blockers": [
                  {
                    "name": "string",
                    "type": "Schedule"
                  }
                  ...
                ],
                "actions": [
                  {
                    "name": "string",
                    "actionTypeId": {
                      "category": "Source"|"Build"|"Deploy"|"Test"|"Invoke"|"Approval"|"Compute",
                      "owner": "AWS"|"ThirdParty"|"Custom",
                      "provider": "string",
                      "version": "string"
                    },
                    "runOrder": integer,
                    "configuration": {"string": "string"
                      ...},
                    "commands": ["string", ...],
                    "outputArtifacts": [
                      {
                        "name": "string",
                        "files": ["string", ...]
                      }
                      ...
                    ],
                    "inputArtifacts": [
                      {
                        "name": "string"
                      }
                      ...
                    ],
                    "outputVariables": ["string", ...],
                    "roleArn": "string",
                    "region": "string",
                    "namespace": "string",
                    "timeoutInMinutes": integer
                  }
                  ...
                ],
                "onFailure": {
                  "result": "ROLLBACK"|"FAIL",
                  "conditions": [
                    {
                      "result": "ROLLBACK"|"FAIL",
                      "rules": [
                        {
                          "name": "string",
                          "ruleTypeId": {
                            "category": "Rule",
                            "owner": "AWS",
                            "provider": "string",
                            "version": "string"
                          },
                          "configuration": {"string": "string"
                            ...},
                          "inputArtifacts": [
                            {
                              "name": "string"
                            }
                            ...
                          ],
                          "roleArn": "string",
                          "region": "string",
                          "timeoutInMinutes": integer
                        }
                        ...
                      ]
                    }
                    ...
                  ]
                },
                "onSuccess": {
                  "conditions": [
                    {
                      "result": "ROLLBACK"|"FAIL",
                      "rules": [
                        {
                          "name": "string",
                          "ruleTypeId": {
                            "category": "Rule",
                            "owner": "AWS",
                            "provider": "string",
                            "version": "string"
                          },
                          "configuration": {"string": "string"
                            ...},
                          "inputArtifacts": [
                            {
                              "name": "string"
                            }
                            ...
                          ],
                          "roleArn": "string",
                          "region": "string",
                          "timeoutInMinutes": integer
                        }
                        ...
                      ]
                    }
                    ...
                  ]
                },
                "beforeEntry": {
                  "conditions": [
                    {
                      "result": "ROLLBACK"|"FAIL",
                      "rules": [
                        {
                          "name": "string",
                          "ruleTypeId": {
                            "category": "Rule",
                            "owner": "AWS",
                            "provider": "string",
                            "version": "string"
                          },
                          "configuration": {"string": "string"
                            ...},
                          "inputArtifacts": [
                            {
                              "name": "string"
                            }
                            ...
                          ],
                          "roleArn": "string",
                          "region": "string",
                          "timeoutInMinutes": integer
                        }
                        ...
                      ]
                    }
                    ...
                  ]
                }
              }
              ...
            ],
            "version": integer,
            "executionMode": "QUEUED"|"SUPERSEDED"|"PARALLEL",
            "pipelineType": "V1"|"V2",
            "variables": [
              {
                "name": "string",
                "defaultValue": "string",
                "description": "string"
              }
              ...
            ],
            "triggers": [
              {
                "providerType": "CodeStarSourceConnection",
                "gitConfiguration": {
                  "sourceActionName": "string",
                  "push": [
                    {
                      "tags": {
                        "includes": ["string", ...],
                        "excludes": ["string", ...]
                      },
                      "branches": {
                        "includes": ["string", ...],
                        "excludes": ["string", ...]
                      },
                      "filePaths": {
                        "includes": ["string", ...],
                        "excludes": ["string", ...]
                      }
                    }
                    ...
                  ],
                  "pullRequest": [
                    {
                      "events": ["OPEN"|"UPDATED"|"CLOSED", ...],
                      "branches": {
                        "includes": ["string", ...],
                        "excludes": ["string", ...]
                      },
                      "filePaths": {
                        "includes": ["string", ...],
                        "excludes": ["string", ...]
                      }
                    }
                    ...
                  ]
                }
              }
              ...
            ]
          }

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To update the structure of a pipeline

       This example uses the update-pipeline command with the --cli-input-json
       argument.   This   example  uses  a  pre-defined  JSON  file  (MyFirst-
       Pipeline.json) to update the structure of a pipeline. AWS  CodePipeline
       recognizes  the  pipeline name contained in the JSON file, and then ap-
       plies any changes from modified fields in the pipeline structure to up-
       date the pipeline.

       Use the following guidelines when creating the pre-defined JSON file:

       o If  you  are  working  with  a pipeline structure retrieved using the
         get-pipeline command, you must remove the metadata section  from  the
         pipeline  structure  in  the JSON file (the "metadata": { } lines and
         the "created," "pipelineARN," and "updated" fields within).

       o The pipeline name cannot be changed.

       Command:

          aws codepipeline update-pipeline --cli-input-json file://MyFirstPipeline.json

       Sample JSON file contents:

          {
           "pipeline": {
            "roleArn": "arn:aws:iam::111111111111:role/AWS-CodePipeline-Service",
            "stages": [
              {
                "name": "Source",
                "actions": [
                  {
                    "inputArtifacts": [],
                    "name": "Source",
                    "actionTypeId": {
                      "category": "Source",
                      "owner": "AWS",
                      "version": "1",
                      "provider": "S3"
                    },
                    "outputArtifacts": [
                      {
                        "name": "MyApp"
                      }
                    ],
                    "configuration": {
                      "S3Bucket": "awscodepipeline-demo-bucket2",
                      "S3ObjectKey": "aws-codepipeline-s3-aws-codedeploy_linux.zip"
                    },
                    "runOrder": 1
                  }
                ]
              },
              {
                "name": "Beta",
                "actions": [
                  {
                    "inputArtifacts": [
                      {
                        "name": "MyApp"
                      }
                    ],
                    "name": "CodePipelineDemoFleet",
                    "actionTypeId": {
                      "category": "Deploy",
                      "owner": "AWS",
                      "version": "1",
                      "provider": "CodeDeploy"
                    },
                    "outputArtifacts": [],
                    "configuration": {
                      "ApplicationName": "CodePipelineDemoApplication",
                      "DeploymentGroupName": "CodePipelineDemoFleet"
                    },
                    "runOrder": 1
                  }
                ]
              }
            ],
            "artifactStore": {
              "type": "S3",
              "location": "codepipeline-us-east-1-11EXAMPLE11"
            },
            "name": "MyFirstPipeline",
            "version": 1
           }
          }

       Output:

          {
           "pipeline": {
            "artifactStore": {
              "location": "codepipeline-us-east-1-11EXAMPLE11",
              "type": "S3"
            },
            "name": "MyFirstPipeline",
            "roleArn": "arn:aws:iam::111111111111:role/AWS-CodePipeline-Service",
            "stages": [
              {
                "actions": [
                  {
                    "actionTypeId": {
                      "__type": "ActionTypeId",
                      "category": "Source",
                      "owner": "AWS",
                      "provider": "S3",
                      "version": "1"
                    },
                    "configuration": {
                      "S3Bucket": "awscodepipeline-demo-bucket2",
                      "S3ObjectKey": "aws-codepipeline-s3-aws-codedeploy_linux.zip"
                    },
                    "inputArtifacts": [],
                    "name": "Source",
                    "outputArtifacts": [
                      {
                        "name": "MyApp"
                      }
                    ],
                    "runOrder": 1
                  }
                ],
                "name": "Source"
              },
              {
                "actions": [
                  {
                    "actionTypeId": {
                      "__type": "ActionTypeId",
                      "category": "Deploy",
                      "owner": "AWS",
                      "provider": "CodeDeploy",
                      "version": "1"
                    },
                    "configuration": {
                      "ApplicationName": "CodePipelineDemoApplication",
                      "DeploymentGroupName": "CodePipelineDemoFleet"
                    },
                    "inputArtifacts": [
                      {
                        "name": "MyApp"
                      }
                    ],
                    "name": "CodePipelineDemoFleet",
                    "outputArtifacts": [],
                    "runOrder": 1
                  }
                ],
                "name": "Beta"
              }
            ],
            "version": 3
           }
          }

OUTPUT
       pipeline -> (structure)
          The structure of the updated pipeline.

          name -> (string)
              The name of the pipeline.

          roleArn -> (string)
              The Amazon Resource Name (ARN) for CodePipeline to use to either
              perform  actions  with  no  actionRoleArn  , or to use to assume
              roles for actions with an actionRoleArn .

          artifactStore -> (structure)
              Represents information about the S3 bucket where  artifacts  are
              stored for the pipeline.

              NOTE:
                 You  must  include  either artifactStore or artifactStores in
                 your pipeline, but you cannot  use  both.  If  you  create  a
                 cross-region  action in your pipeline, you must use artifact-
                 Stores .

              type -> (string)
                 The type of the artifact store, such as S3.

              location -> (string)
                 The S3 bucket used for storing the artifacts for a  pipeline.
                 You  can specify the name of an S3 bucket but not a folder in
                 the bucket. A folder to contain  the  pipeline  artifacts  is
                 created  for  you  based on the name of the pipeline. You can
                 use any S3 bucket in the same Amazon Web Services  Region  as
                 the pipeline to store your pipeline artifacts.

              encryptionKey -> (structure)
                 The  encryption  key used to encrypt the data in the artifact
                 store, such as an Amazon Web Services Key Management  Service
                 key.  If  this is undefined, the default key for Amazon S3 is
                 used.

                 id -> (string)
                     The ID used to identify the key. For an Amazon  Web  Ser-
                     vices  KMS  key,  you can use the key ID, the key ARN, or
                     the alias ARN.

                     NOTE:
                        Aliases are recognized only in the account  that  cre-
                        ated  the  KMS key. For cross-account actions, you can
                        only use the key ID or key ARN to  identify  the  key.
                        Cross-account  actions involve using the role from the
                        other account (AccountB), so  specifying  the  key  ID
                        will use the key from the other account (AccountB).

                 type -> (string)
                     The  type  of  encryption key, such as an Amazon Web Ser-
                     vices KMS key. When creating or updating a pipeline,  the
                     value must be set to 'KMS'.

          artifactStores -> (map)
              A  mapping of artifactStore objects and their corresponding Ama-
              zon Web Services Regions. There must be an  artifact  store  for
              the  pipeline  Region  and  for  each cross-region action in the
              pipeline.

              NOTE:
                 You must include either artifactStore  or  artifactStores  in
                 your  pipeline,  but  you  cannot  use  both. If you create a
                 cross-region action in your pipeline, you must use  artifact-
                 Stores .

              key -> (string)

              value -> (structure)
                 The S3 bucket where artifacts for the pipeline are stored.

                 NOTE:
                     You  must  include either artifactStore or artifactStores
                     in your pipeline, but you cannot use both. If you  create
                     a  cross-region action in your pipeline, you must use ar-
                     tifactStores .

                 type -> (string)
                     The type of the artifact store, such as S3.

                 location -> (string)
                     The S3 bucket used for storing the artifacts for a  pipe-
                     line.  You can specify the name of an S3 bucket but not a
                     folder in the bucket. A folder to  contain  the  pipeline
                     artifacts  is  created  for  you based on the name of the
                     pipeline. You can use any S3 bucket in  the  same  Amazon
                     Web  Services  Region as the pipeline to store your pipe-
                     line artifacts.

                 encryptionKey -> (structure)
                     The encryption key used to encrypt the data in the  arti-
                     fact store, such as an Amazon Web Services Key Management
                     Service key. If this is undefined, the  default  key  for
                     Amazon S3 is used.

                     id -> (string)
                        The  ID  used  to  identify the key. For an Amazon Web
                        Services KMS key, you can use the key ID, the key ARN,
                        or the alias ARN.

                        NOTE:
                            Aliases  are  recognized  only in the account that
                            created the KMS key.  For  cross-account  actions,
                            you can only use the key ID or key ARN to identify
                            the key. Cross-account actions involve  using  the
                            role  from the other account (AccountB), so speci-
                            fying the key ID will use the key from  the  other
                            account (AccountB).

                     type -> (string)
                        The type of encryption key, such as an Amazon Web Ser-
                        vices KMS key. When creating or updating  a  pipeline,
                        the value must be set to 'KMS'.

          stages -> (list)
              The stage in which to perform the action.

              (structure)
                 Represents information about a stage and its definition.

                 name -> (string)
                     The name of the stage.

                 blockers -> (list)
                     Reserved for future use.

                     (structure)
                        Reserved for future use.

                        name -> (string)
                            Reserved for future use.

                        type -> (string)
                            Reserved for future use.

                 actions -> (list)
                     The actions included in a stage.

                     (structure)
                        Represents information about an action declaration.

                        name -> (string)
                            The action declaration's name.

                        actionTypeId -> (structure)
                            Specifies  the action type and the provider of the
                            action.

                            category -> (string)
                               A category defines what kind of action  can  be
                               taken in the stage, and constrains the provider
                               type for the action. Valid categories are  lim-
                               ited to one of the following values.

                               o Source

                               o Build

                               o Test

                               o Deploy

                               o Invoke

                               o Approval

                            owner -> (string)
                               The  creator  of the action being called. There
                               are three valid values for the Owner  field  in
                               the  action  category section within your pipe-
                               line structure: AWS , ThirdParty , and Custom .
                               For  more  information,  see Valid Action Types
                               and Providers in CodePipeline .

                            provider -> (string)
                               The provider of the service being called by the
                               action.  Valid  providers are determined by the
                               action category. For example, an action in  the
                               Deploy  category  type might have a provider of
                               CodeDeploy, which would be specified as CodeDe-
                               ploy  .  For more information, see Valid Action
                               Types and Providers in CodePipeline .

                            version -> (string)
                               A string that describes the action version.

                        runOrder -> (integer)
                            The order in which actions are run.

                        configuration -> (map)
                            The action's configuration.  These  are  key-value
                            pairs that specify input values for an action. For
                            more information, see  Action  Structure  Require-
                            ments in CodePipeline . For the list of configura-
                            tion properties for the CloudFormation action type
                            in CodePipeline, see Configuration Properties Ref-
                            erence in the CloudFormation User Guide . For tem-
                            plate  snippets with examples, see Using Parameter
                            Override Functions with CodePipeline Pipelines  in
                            the CloudFormation User Guide .

                            The  values  can  be represented in either JSON or
                            YAML format. For example, the  JSON  configuration
                            item format is as follows:
                               JSON:

                               "Configuration" : { Key : Value },

                            key -> (string)

                            value -> (string)

                        commands -> (list)
                            The shell commands to run with your compute action
                            in CodePipeline. All commands are supported except
                            multi-line  formats. While CodeBuild logs and per-
                            missions are used, you do not need to  create  any
                            resources in CodeBuild.

                            NOTE:
                               Using  compute  time for this action will incur
                               separate charges in CodeBuild.

                            (string)

                        outputArtifacts -> (list)
                            The name or ID of the result of the action  decla-
                            ration, such as a test or build artifact.

                            (structure)
                               Represents  information  about the output of an
                               action.

                               name -> (string)
                                   The name of the output of an artifact, such
                                   as "My App".

                                   The  input  artifact  of an action must ex-
                                   actly match the output artifact declared in
                                   a  preceding action, but the input artifact
                                   does not have to  be  the  next  action  in
                                   strict  sequence  from the action that pro-
                                   vided the output artifact. Actions in  par-
                                   allel  can  declare  different output arti-
                                   facts, which are in turn consumed  by  dif-
                                   ferent following actions.

                                   Output artifact names must be unique within
                                   a pipeline.

                               files -> (list)
                                   The files that you want to  associate  with
                                   the  output  artifact that will be exported
                                   from the compute action.

                                   (string)

                        inputArtifacts -> (list)
                            The name or ID of the artifact consumed by the ac-
                            tion, such as a test or build artifact.

                            (structure)
                               Represents  information about an artifact to be
                               worked on, such as a test or build artifact.

                               name -> (string)
                                   The name of the artifact to  be  worked  on
                                   (for example, "My App").

                                   Artifacts  are the files that are worked on
                                   by actions in the pipeline. See the  action
                                   configuration  for  each action for details
                                   about artifact parameters. For example, the
                                   S3  source  action input artifact is a file
                                   name (or file path), and the files are gen-
                                   erally  provided as a ZIP file. Example ar-
                                   tifact name: SampleApp_Windows.zip

                                   The input artifact of an  action  must  ex-
                                   actly match the output artifact declared in
                                   a preceding action, but the input  artifact
                                   does  not  have  to  be  the next action in
                                   strict sequence from the action  that  pro-
                                   vided  the output artifact. Actions in par-
                                   allel can declare  different  output  arti-
                                   facts,  which  are in turn consumed by dif-
                                   ferent following actions.

                        outputVariables -> (list)
                            The list of variables that are to be exported from
                            the compute action. This is specifically CodeBuild
                            environment variables as used for that action.

                            (string)

                        roleArn -> (string)
                            The ARN of the IAM service role that performs  the
                            declared  action.  This  is  assumed  through  the
                            roleArn for the pipeline.

                        region -> (string)
                            The action declaration's Amazon Web  Services  Re-
                            gion, such as us-east-1.

                        namespace -> (string)
                            The variable namespace associated with the action.
                            All variables produced as output  by  this  action
                            fall under this namespace.

                        timeoutInMinutes -> (integer)
                            A  timeout duration in minutes that can be applied
                            against  the  ActionTypes  default  timeout  value
                            specified in Quotas for CodePipeline . This attri-
                            bute is available only to the manual approval  Ac-
                            tionType.

                 onFailure -> (structure)
                     The method to use when a stage has not completed success-
                     fully. For example, configuring this field  for  rollback
                     will  roll  back a failed stage automatically to the last
                     successful pipeline execution in the stage.

                     result -> (string)
                        The specified result for when the  failure  conditions
                        are met, such as rolling back the stage.

                     conditions -> (list)
                        The  conditions  that are configured as failure condi-
                        tions.

                        (structure)
                            The condition for the stage. A condition  is  made
                            up of the rules and the result for the condition.

                            result -> (string)
                               The  action  to  be  done when the condition is
                               met. For example, rolling back an execution for
                               a failure condition.

                            rules -> (list)
                               The rules that make up the condition.

                               (structure)
                                   Represents information about the rule to be
                                   created for an associated condition. An ex-
                                   ample  would  be creating a new rule for an
                                   entry condition, such as a rule that checks
                                   for  a  test result before allowing the run
                                   to enter the deployment stage.

                                   name -> (string)
                                      The name of the rule that is created for
                                      the condition, such as CheckAllResults.

                                   ruleTypeId -> (structure)
                                      The  ID for the rule type, which is made
                                      up of the combined values for  category,
                                      owner, provider, and version.

                                      category -> (string)
                                          A category defines what kind of rule
                                          can be run in the  stage,  and  con-
                                          strains  the  provider  type for the
                                          rule. The valid category is Rule .

                                      owner -> (string)
                                          The  creator  of  the   rule   being
                                          called.  The  valid  value  for  the
                                          Owner field in the rule category  is
                                          AWS .

                                      provider -> (string)
                                          The  rule  provider, such as the De-
                                          ploymentWindow rule.

                                      version -> (string)
                                          A string  that  describes  the  rule
                                          version.

                                   configuration -> (map)
                                      The  action configuration fields for the
                                      rule.

                                      key -> (string)

                                      value -> (string)

                                   inputArtifacts -> (list)
                                      The input artifacts fields for the rule,
                                      such as specifying an input file for the
                                      rule.

                                      (structure)
                                          Represents information about an  ar-
                                          tifact  to  be  worked on, such as a
                                          test or build artifact.

                                          name -> (string)
                                             The name of the  artifact  to  be
                                             worked   on   (for  example,  "My
                                             App").

                                             Artifacts are the files that  are
                                             worked on by actions in the pipe-
                                             line. See the  action  configura-
                                             tion  for each action for details
                                             about  artifact  parameters.  For
                                             example, the S3 source action in-
                                             put artifact is a file  name  (or
                                             file  path),  and  the  files are
                                             generally provided as a ZIP file.
                                             Example   artifact   name:   Sam-
                                             pleApp_Windows.zip

                                             The input artifact of  an  action
                                             must exactly match the output ar-
                                             tifact declared  in  a  preceding
                                             action,  but  the  input artifact
                                             does not have to be the next  ac-
                                             tion  in strict sequence from the
                                             action that provided  the  output
                                             artifact. Actions in parallel can
                                             declare  different  output  arti-
                                             facts, which are in turn consumed
                                             by different following actions.

                                   roleArn -> (string)
                                      The pipeline role  ARN  associated  with
                                      the rule.

                                   region -> (string)
                                      The  Region for the condition associated
                                      with the rule.

                                   timeoutInMinutes -> (integer)
                                      The action timeout for the rule.

                 onSuccess -> (structure)
                     The method to use when a stage has succeeded.  For  exam-
                     ple, configuring this field for conditions will allow the
                     stage to succeed when the conditions are met.

                     conditions -> (list)
                        The conditions that are success conditions.

                        (structure)
                            The condition for the stage. A condition  is  made
                            up of the rules and the result for the condition.

                            result -> (string)
                               The  action  to  be  done when the condition is
                               met. For example, rolling back an execution for
                               a failure condition.

                            rules -> (list)
                               The rules that make up the condition.

                               (structure)
                                   Represents information about the rule to be
                                   created for an associated condition. An ex-
                                   ample  would  be creating a new rule for an
                                   entry condition, such as a rule that checks
                                   for  a  test result before allowing the run
                                   to enter the deployment stage.

                                   name -> (string)
                                      The name of the rule that is created for
                                      the condition, such as CheckAllResults.

                                   ruleTypeId -> (structure)
                                      The  ID for the rule type, which is made
                                      up of the combined values for  category,
                                      owner, provider, and version.

                                      category -> (string)
                                          A category defines what kind of rule
                                          can be run in the  stage,  and  con-
                                          strains  the  provider  type for the
                                          rule. The valid category is Rule .

                                      owner -> (string)
                                          The  creator  of  the   rule   being
                                          called.  The  valid  value  for  the
                                          Owner field in the rule category  is
                                          AWS .

                                      provider -> (string)
                                          The  rule  provider, such as the De-
                                          ploymentWindow rule.

                                      version -> (string)
                                          A string  that  describes  the  rule
                                          version.

                                   configuration -> (map)
                                      The  action configuration fields for the
                                      rule.

                                      key -> (string)

                                      value -> (string)

                                   inputArtifacts -> (list)
                                      The input artifacts fields for the rule,
                                      such as specifying an input file for the
                                      rule.

                                      (structure)
                                          Represents information about an  ar-
                                          tifact  to  be  worked on, such as a
                                          test or build artifact.

                                          name -> (string)
                                             The name of the  artifact  to  be
                                             worked   on   (for  example,  "My
                                             App").

                                             Artifacts are the files that  are
                                             worked on by actions in the pipe-
                                             line. See the  action  configura-
                                             tion  for each action for details
                                             about  artifact  parameters.  For
                                             example, the S3 source action in-
                                             put artifact is a file  name  (or
                                             file  path),  and  the  files are
                                             generally provided as a ZIP file.
                                             Example   artifact   name:   Sam-
                                             pleApp_Windows.zip

                                             The input artifact of  an  action
                                             must exactly match the output ar-
                                             tifact declared  in  a  preceding
                                             action,  but  the  input artifact
                                             does not have to be the next  ac-
                                             tion  in strict sequence from the
                                             action that provided  the  output
                                             artifact. Actions in parallel can
                                             declare  different  output  arti-
                                             facts, which are in turn consumed
                                             by different following actions.

                                   roleArn -> (string)
                                      The pipeline role  ARN  associated  with
                                      the rule.

                                   region -> (string)
                                      The  Region for the condition associated
                                      with the rule.

                                   timeoutInMinutes -> (integer)
                                      The action timeout for the rule.

                 beforeEntry -> (structure)
                     The method to use when a stage allows entry. For example,
                     configuring this field for conditions will allow entry to
                     the stage when the conditions are met.

                     conditions -> (list)
                        The conditions that are  configured  as  entry  condi-
                        tions.

                        (structure)
                            The  condition  for the stage. A condition is made
                            up of the rules and the result for the condition.

                            result -> (string)
                               The action to be done  when  the  condition  is
                               met. For example, rolling back an execution for
                               a failure condition.

                            rules -> (list)
                               The rules that make up the condition.

                               (structure)
                                   Represents information about the rule to be
                                   created for an associated condition. An ex-
                                   ample would be creating a new rule  for  an
                                   entry condition, such as a rule that checks
                                   for a test result before allowing  the  run
                                   to enter the deployment stage.

                                   name -> (string)
                                      The name of the rule that is created for
                                      the condition, such as CheckAllResults.

                                   ruleTypeId -> (structure)
                                      The ID for the rule type, which is  made
                                      up  of the combined values for category,
                                      owner, provider, and version.

                                      category -> (string)
                                          A category defines what kind of rule
                                          can  be  run  in the stage, and con-
                                          strains the provider  type  for  the
                                          rule. The valid category is Rule .

                                      owner -> (string)
                                          The   creator   of  the  rule  being
                                          called.  The  valid  value  for  the
                                          Owner  field in the rule category is
                                          AWS .

                                      provider -> (string)
                                          The rule provider, such as  the  De-
                                          ploymentWindow rule.

                                      version -> (string)
                                          A  string  that  describes  the rule
                                          version.

                                   configuration -> (map)
                                      The action configuration fields for  the
                                      rule.

                                      key -> (string)

                                      value -> (string)

                                   inputArtifacts -> (list)
                                      The input artifacts fields for the rule,
                                      such as specifying an input file for the
                                      rule.

                                      (structure)
                                          Represents  information about an ar-
                                          tifact to be worked on,  such  as  a
                                          test or build artifact.

                                          name -> (string)
                                             The  name  of  the artifact to be
                                             worked  on  (for   example,   "My
                                             App").

                                             Artifacts  are the files that are
                                             worked on by actions in the pipe-
                                             line.  See  the action configura-
                                             tion for each action for  details
                                             about  artifact  parameters.  For
                                             example, the S3 source action in-
                                             put  artifact  is a file name (or
                                             file path),  and  the  files  are
                                             generally provided as a ZIP file.
                                             Example   artifact   name:   Sam-
                                             pleApp_Windows.zip

                                             The  input  artifact of an action
                                             must exactly match the output ar-
                                             tifact  declared  in  a preceding
                                             action, but  the  input  artifact
                                             does  not have to be the next ac-
                                             tion in strict sequence from  the
                                             action  that  provided the output
                                             artifact. Actions in parallel can
                                             declare  different  output  arti-
                                             facts, which are in turn consumed
                                             by different following actions.

                                   roleArn -> (string)
                                      The  pipeline  role  ARN associated with
                                      the rule.

                                   region -> (string)
                                      The Region for the condition  associated
                                      with the rule.

                                   timeoutInMinutes -> (integer)
                                      The action timeout for the rule.

          version -> (integer)
              The  version number of the pipeline. A new pipeline always has a
              version number of 1. This number is incremented when a  pipeline
              is updated.

          executionMode -> (string)
              The  method that the pipeline will use to handle multiple execu-
              tions. The default mode is SUPERSEDED.

          pipelineType -> (string)
              CodePipeline provides the following pipeline types, which differ
              in  characteristics and price, so that you can tailor your pipe-
              line features and cost to the needs of your applications.

              o V1 type pipelines have a JSON structure that contains standard
                pipeline, stage, and action-level parameters.

              o V2  type pipelines have the same structure as a V1 type, along
                with additional parameters for release safety and trigger con-
                figuration.

              WARNING:
                 Including V2 parameters, such as triggers on Git tags, in the
                 pipeline JSON when creating or updating a pipeline  will  re-
                 sult  in  the pipeline having the V2 type of pipeline and the
                 associated costs.

              For information about pricing for CodePipeline, see Pricing .

              For information about which type of pipeline to choose, see What
              type of pipeline is right for me? .

          variables -> (list)
              A  list  that  defines the pipeline variables for a pipeline re-
              source. Variable names  can  have  alphanumeric  and  underscore
              characters, and the values must match [A-Za-z0-9@\-_]+ .

              (structure)
                 A variable declared at the pipeline level.

                 name -> (string)
                     The name of a pipeline-level variable.

                 defaultValue -> (string)
                     The value of a pipeline-level variable.

                 description -> (string)
                     The  description  of a pipeline-level variable. It's used
                     to add additional context about the variable, and not be-
                     ing used at time when pipeline executes.

          triggers -> (list)
              The  trigger  configuration  specifying a type of event, such as
              Git tags, that starts the pipeline.

              NOTE:
                 When a trigger configuration is specified, default change de-
                 tection for repository and branch commits is disabled.

              (structure)
                 Represents information about the specified trigger configura-
                 tion, such as the filter criteria and the  source  stage  for
                 the action that contains the trigger.

                 NOTE:
                     This  is  only supported for the CodeStarSourceConnection
                     action type.

                 NOTE:
                     When a trigger configuration is specified, default change
                     detection for repository and branch commits is disabled.

                 providerType -> (string)
                     The  source  provider  for the event, such as connections
                     configured for a repository with Git tags, for the speci-
                     fied trigger configuration.

                 gitConfiguration -> (structure)
                     Provides the filter criteria and the source stage for the
                     repository event that starts the pipeline,  such  as  Git
                     tags.

                     sourceActionName -> (string)
                        The name of the pipeline source action where the trig-
                        ger configuration, such as Git tags, is specified. The
                        trigger configuration will start the pipeline upon the
                        specified change only.

                        NOTE:
                            You can only specify one trigger configuration per
                            source action.

                     push -> (list)
                        The  field  where the repository event that will start
                        the pipeline, such as pushing Git tags,  is  specified
                        with details.

                        (structure)
                            The  event  criteria that specify when a specified
                            repository event will start the pipeline  for  the
                            specified trigger configuration, such as the lists
                            of Git tags to include and exclude.

                            tags -> (structure)
                               The field that contains the details for the Git
                               tags trigger configuration.

                               includes -> (list)
                                   The list of patterns of Git tags that, when
                                   pushed, are to be included as criteria that
                                   starts the pipeline.

                                   (string)

                               excludes -> (list)
                                   The list of patterns of Git tags that, when
                                   pushed, are to be  excluded  from  starting
                                   the pipeline.

                                   (string)

                            branches -> (structure)
                               The  field that specifies to filter on branches
                               for the push trigger configuration.

                               includes -> (list)
                                   The list of patterns of Git branches  that,
                                   when a commit is pushed, are to be included
                                   as criteria that starts the pipeline.

                                   (string)

                               excludes -> (list)
                                   The list of patterns of Git branches  that,
                                   when a commit is pushed, are to be excluded
                                   from starting the pipeline.

                                   (string)

                            filePaths -> (structure)
                               The field that  specifies  to  filter  on  file
                               paths for the push trigger configuration.

                               includes -> (list)
                                   The list of patterns of Git repository file
                                   paths that, when a commit is pushed, are to
                                   be  included  as  criteria  that starts the
                                   pipeline.

                                   (string)

                               excludes -> (list)
                                   The list of patterns of Git repository file
                                   paths that, when a commit is pushed, are to
                                   be excluded from starting the pipeline.

                                   (string)

                     pullRequest -> (list)
                        The field where the repository event that  will  start
                        the pipeline is specified as pull requests.

                        (structure)
                            The  event  criteria  for the pull request trigger
                            configuration, such as the lists  of  branches  or
                            file paths to include and exclude.

                            events -> (list)
                               The  field  that  specifies  which pull request
                               events to filter on (opened,  updated,  closed)
                               for the trigger configuration.

                               (string)

                            branches -> (structure)
                               The  field that specifies to filter on branches
                               for the pull request trigger configuration.

                               includes -> (list)
                                   The list of patterns of Git branches  that,
                                   when a commit is pushed, are to be included
                                   as criteria that starts the pipeline.

                                   (string)

                               excludes -> (list)
                                   The list of patterns of Git branches  that,
                                   when a commit is pushed, are to be excluded
                                   from starting the pipeline.

                                   (string)

                            filePaths -> (structure)
                               The field that  specifies  to  filter  on  file
                               paths  for  the pull request trigger configura-
                               tion.

                               includes -> (list)
                                   The list of patterns of Git repository file
                                   paths that, when a commit is pushed, are to
                                   be included as  criteria  that  starts  the
                                   pipeline.

                                   (string)

                               excludes -> (list)
                                   The list of patterns of Git repository file
                                   paths that, when a commit is pushed, are to
                                   be excluded from starting the pipeline.

                                   (string)



                                                             UPDATE-PIPELINE()
