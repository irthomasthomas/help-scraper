CREATE-AUTO-ML-JOB()                                      CREATE-AUTO-ML-JOB()



NAME
       create-auto-ml-job -

DESCRIPTION
       Creates an Autopilot job.

       Find  the best-performing model after you run an Autopilot job by call-
       ing .

       For information about how to use Autopilot, see Automate Model Develop-
       ment with Amazon SageMaker Autopilot .

       See also: AWS API Documentation

SYNOPSIS
            create-auto-ml-job
          --auto-ml-job-name <value>
          --input-data-config <value>
          --output-data-config <value>
          [--problem-type <value>]
          [--auto-ml-job-objective <value>]
          [--auto-ml-job-config <value>]
          --role-arn <value>
          [--generate-candidate-definitions-only | --no-generate-candidate-definitions-only]
          [--tags <value>]
          [--model-deploy-config <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --auto-ml-job-name (string)
          Identifies an Autopilot job. The name must be unique to your account
          and is case-insensitive.

       --input-data-config (list)
          An array of channel objects that describes the input  data  and  its
          location. Each channel is a named input source. Similar to InputDat-
          aConfig supported by . Format(s) supported: CSV, Parquet. A  minimum
          of  500  rows  is  required for the training dataset. There is not a
          minimum number of rows required for the validation dataset.

          (structure)
              A channel is a named input source that training  algorithms  can
              consume.  The  validation dataset size is limited to less than 2
              GB. The training dataset size must be less than 100 GB. For more
              information, see .

              NOTE:
                 A  validation  dataset  must  contain the same headers as the
                 training dataset.

              DataSource -> (structure)
                 The data source for an AutoML channel.

                 S3DataSource -> (structure)
                     The Amazon S3 location of the input data.

                     S3DataType -> (string)
                        The data type.

                        A ManifestFile should have the format shown below:
                            [  {"prefix":   "s3://DOC-EXAMPLE-BUCKET/DOC-EXAM-
                            PLE-FOLDER/DOC-EXAMPLE-PREFIX/"},

                            "DOC-EXAMPLE-RELATIVE-PATH/DOC-EXAM-
                            PLE-FOLDER/DATA-1",

                            "DOC-EXAMPLE-RELATIVE-PATH/DOC-EXAM-
                            PLE-FOLDER/DATA-2",

                            ...           "DOC-EXAMPLE-RELATIVE-PATH/DOC-EXAM-
                            PLE-FOLDER/DATA-N" ]

                        An S3Prefix should have the following format:
                            s3://DOC-EXAMPLE-BUCKET/DOC-EXAMPLE-FOLDER-OR-FILE

                     S3Uri -> (string)
                        The URL to the Amazon S3 data source.

              CompressionType -> (string)
                 You can use Gzip or None . The default value is None .

              TargetAttributeName -> (string)
                 The name of the target variable in supervised learning,  usu-
                 ally represented by 'y'.

              ContentType -> (string)
                 The  content  type of the data from the input source. You can
                 use text/csv;header=present or  x-application/vnd.amazon+par-
                 quet . The default value is text/csv;header=present .

              ChannelType -> (string)
                 The  channel  type  (optional) is an enum string. The default
                 value is training . Channels for training and validation must
                 share  the same ContentType and TargetAttributeName . For in-
                 formation  on  specifying  training  and  validation  channel
                 types,  see ` How to specify training and validation datasets
                 https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-datasets-problem-types.html#autopilot-data-sources-training-or-validation`__
                 .

       Shorthand Syntax:

          DataSource={S3DataSource={S3DataType=string,S3Uri=string}},CompressionType=string,TargetAttributeName=string,ContentType=string,ChannelType=string ...

       JSON Syntax:

          [
            {
              "DataSource": {
                "S3DataSource": {
                  "S3DataType": "ManifestFile"|"S3Prefix",
                  "S3Uri": "string"
                }
              },
              "CompressionType": "None"|"Gzip",
              "TargetAttributeName": "string",
              "ContentType": "string",
              "ChannelType": "training"|"validation"
            }
            ...
          ]

       --output-data-config (structure)
          Provides  information about encryption and the Amazon S3 output path
          needed to store artifacts from an AutoML job.  Format(s)  supported:
          CSV.

          KmsKeyId -> (string)
              The Amazon Web Services KMS encryption key ID.

          S3OutputPath -> (string)
              The Amazon S3 output path. Must be 128 characters or less.

       Shorthand Syntax:

          KmsKeyId=string,S3OutputPath=string

       JSON Syntax:

          {
            "KmsKeyId": "string",
            "S3OutputPath": "string"
          }

       --problem-type (string)
          Defines  the  type  of  supervised learning available for the candi-
          dates. For more information, see Amazon SageMaker Autopilot  problem
          types and algorithm support .

          Possible values:

          o BinaryClassification

          o MulticlassClassification

          o Regression

       --auto-ml-job-objective (structure)
          Defines  the objective metric used to measure the predictive quality
          of an AutoML job. You provide an  AutoMLJobObjective$MetricName  and
          Autopilot infers whether to minimize or maximize it.

          MetricName -> (string)
              The  name of the objective metric used to measure the predictive
              quality of a machine learning system. This metric  is  optimized
              during training to provide the best estimate for model parameter
              values from data.

              Here are the options:

              o MSE : The mean squared error  (MSE)  is  the  average  of  the
                squared  differences  between the predicted and actual values.
                It is used for regression. MSE values are always positive: the
                better a model is at predicting the actual values, the smaller
                the MSE value is. When the data contains outliers,  they  tend
                to  dominate the MSE, which might cause subpar prediction per-
                formance.

              o Accuracy : The ratio of the  number  of  correctly  classified
                items to the total number of (correctly and incorrectly) clas-
                sified items. It is used for binary and multiclass classifica-
                tion.  It measures how close the predicted class values are to
                the actual values. Accuracy values vary between zero and  one:
                one  indicates perfect accuracy and zero indicates perfect in-
                accuracy.

              o F1 : The F1 score is the harmonic mean of  the  precision  and
                recall. It is used for binary classification into classes tra-
                ditionally referred to as positive and  negative.  Predictions
                are  said  to  be  true when they match their actual (correct)
                class and false when they do not. Precision is  the  ratio  of
                the true positive predictions to all positive predictions (in-
                cluding the false positives) in a data set  and  measures  the
                quality of the prediction when it predicts the positive class.
                Recall (or sensitivity) is the ratio of the true positive pre-
                dictions  to  all  actual  positive instances and measures how
                completely a model predicts the actual class members in a data
                set.  The  standard  F1  score  weighs  precision  and  recall
                equally. But which metric is paramount  typically  depends  on
                specific aspects of a problem. F1 scores vary between zero and
                one: one indicates the best possible performance and zero  the
                worst.

              o AUC : The area under the curve (AUC) metric is used to compare
                and evaluate binary classification by algorithms such  as  lo-
                gistic  regression  that  return probabilities. A threshold is
                needed to map the probabilities into classifications. The rel-
                evant  curve  is  the  receiver operating characteristic curve
                that plots the true positive rate (TPR) of predictions (or re-
                call)  against  the false positive rate (FPR) as a function of
                the threshold value, above which a  prediction  is  considered
                positive. Increasing the threshold results in fewer false pos-
                itives but more false negatives. AUC is the  area  under  this
                receiver operating characteristic curve and so provides an ag-
                gregated measure of the model performance across all  possible
                classification  thresholds.  The  AUC score can also be inter-
                preted as the probability that a  randomly  selected  positive
                data point is more likely to be predicted positive than a ran-
                domly selected negative example. AUC scores vary between  zero
                and one: a score of one indicates perfect accuracy and a score
                of one half indicates that the prediction is not better than a
                random  classifier.  Values  under one half predict less accu-
                rately than a random predictor. But such consistently bad pre-
                dictors  can  simply  be inverted to obtain better than random
                predictors.

              o F1macro : The F1macro score applies F1 scoring  to  multiclass
                classification.  In this context, you have multiple classes to
                predict. You just calculate the precision and recall for  each
                class  as you did for the positive class in binary classifica-
                tion. Then, use these values to calculate  the  F1  score  for
                each  class  and  average  them  to  obtain the F1macro score.
                F1macro scores vary between zero and one:  one  indicates  the
                best possible performance and zero the worst.

              If  you do not specify a metric explicitly, the default behavior
              is to automatically use:

              o MSE : for regression.

              o F1 : for binary classification

              o Accuracy : for multiclass classification.

       Shorthand Syntax:

          MetricName=string

       JSON Syntax:

          {
            "MetricName": "Accuracy"|"MSE"|"F1"|"F1macro"|"AUC"
          }

       --auto-ml-job-config (structure)
          A collection of settings used to configure an AutoML job.

          CompletionCriteria -> (structure)
              How long an AutoML job is allowed to run, or how many candidates
              a job is allowed to generate.

              MaxCandidates -> (integer)
                 The maximum number of times a training job is allowed to run.

              MaxRuntimePerTrainingJobInSeconds -> (integer)
                 The maximum time, in seconds, that each training job executed
                 inside hyperparameter tuning is allowed to run as part  of  a
                 hyperparameter tuning job. For more information, see the used
                 by the action.

              MaxAutoMLJobRuntimeInSeconds -> (integer)
                 The maximum runtime, in seconds, an AutoML job  has  to  com-
                 plete.

                 If  an  AutoML  job  exceeds  the maximum runtime, the job is
                 stopped automatically and its processing is ended gracefully.
                 The  AutoML  job identifies the best model whose training was
                 completed and marks it as the best-performing model. Any  un-
                 finished  steps  of  the job, such as automatic one-click Au-
                 topilot model deployment, will not be completed.

          SecurityConfig -> (structure)
              The security configuration for traffic encryption or Amazon  VPC
              settings.

              VolumeKmsKeyId -> (string)
                 The key used to encrypt stored data.

              EnableInterContainerTrafficEncryption -> (boolean)
                 Whether  to use traffic encryption between the container lay-
                 ers.

              VpcConfig -> (structure)
                 The VPC configuration.

                 SecurityGroupIds -> (list)
                     The VPC security group  IDs,  in  the  form  sg-xxxxxxxx.
                     Specify the security groups for the VPC that is specified
                     in the Subnets field.

                     (string)

                 Subnets -> (list)
                     The ID of the subnets in the VPC to  which  you  want  to
                     connect your training job or model. For information about
                     the  availability  of  specific   instance   types,   see
                     Supported Instance Types and Availability Zones .

                     (string)

          DataSplitConfig -> (structure)
              The configuration for splitting the input training dataset.

              Type: AutoMLDataSplitConfig

              ValidationFraction -> (float)
                 The  validation fraction (optional) is a float that specifies
                 the portion of the training dataset to be  used  for  valida-
                 tion.  The  default  value is 0.2, and values must be greater
                 than 0 and less than 1. We recommend setting this value to be
                 less than 0.5.

          CandidateGenerationConfig -> (structure)
              The  configuration  for generating a candidate for an AutoML job
              (optional).

              FeatureSpecificationS3Uri -> (string)
                 A URL to the Amazon S3 data source containing  selected  fea-
                 tures from the input data source to run an Autopilot job (op-
                 tional). This file should be in json format as shown below:
                     { "FeatureAttributeNames":["col1", "col2", ...] } .

                 The key  name  FeatureAttributeNames  is  fixed.  The  values
                 listed  in ["col1", "col2", ...] is case sensitive and should
                 be a list of strings containing unique values that are a sub-
                 set  of  the column names in the input data. The list of col-
                 umns provided must not include the target column.

          Mode -> (string)
              The method that Autopilot uses to train the data. You can either
              specify  the mode manually or let Autopilot choose for you based
              on the dataset size by selecting AUTO . In AUTO mode,  Autopilot
              chooses  ENSEMBLING for datasets smaller than 100 MB, and HYPER-
              PARAMETER_TUNING for larger ones.

              The ENSEMBLING mode uses a multi-stack ensemble model to predict
              classification  and regression tasks directly from your dataset.
              This machine learning mode combines several base models to  pro-
              duce an optimal predictive model. It then uses a stacking ensem-
              ble method to combine predictions from contributing  members.  A
              multi-stack ensemble model can provide better performance over a
              single model by combining the predictive capabilities of  multi-
              ple  models. See Autopilot algorithm support for a list of algo-
              rithms supported by ENSEMBLING mode.

              The HYPERPARAMETER_TUNING (HPO) mode uses the best  hyperparame-
              ters  to  train  the best version of a model. HPO will automati-
              cally select an algorithm for the type of problem  you  want  to
              solve. Then HPO finds the best hyperparameters according to your
              objective metric. See Autopilot algorithm support for a list  of
              algorithms supported by HYPERPARAMETER_TUNING mode.

       JSON Syntax:

          {
            "CompletionCriteria": {
              "MaxCandidates": integer,
              "MaxRuntimePerTrainingJobInSeconds": integer,
              "MaxAutoMLJobRuntimeInSeconds": integer
            },
            "SecurityConfig": {
              "VolumeKmsKeyId": "string",
              "EnableInterContainerTrafficEncryption": true|false,
              "VpcConfig": {
                "SecurityGroupIds": ["string", ...],
                "Subnets": ["string", ...]
              }
            },
            "DataSplitConfig": {
              "ValidationFraction": float
            },
            "CandidateGenerationConfig": {
              "FeatureSpecificationS3Uri": "string"
            },
            "Mode": "AUTO"|"ENSEMBLING"|"HYPERPARAMETER_TUNING"
          }

       --role-arn (string)
          The ARN of the role that is used to access the data.

       --generate-candidate-definitions-only | --no-generate-candidate-defini-
       tions-only (boolean)
          Generates possible candidates without training the models. A  candi-
          date  is  a combination of data preprocessors, algorithms, and algo-
          rithm parameter settings.

       --tags (list)
          Each tag consists of a key and an optional value. Tag keys  must  be
          unique per resource.

          (structure)
              A  tag object that consists of a key and an optional value, used
              to manage metadata for SageMaker Amazon Web Services resources.

              You can add tags to notebook instances, training jobs,  hyperpa-
              rameter  tuning  jobs,  batch  transform  jobs, models, labeling
              jobs, work teams, endpoint configurations,  and  endpoints.  For
              more information on adding tags to SageMaker resources, see  Ad-
              dTags .

              For more information on adding metadata to your Amazon Web  Ser-
              vices  resources  with  tagging, see Tagging Amazon Web Services
              resources . For advice on best practices for managing Amazon Web
              Services resources with tagging, see Tagging Best Practices: Im-
              plement an Effective Amazon Web Services Resource Tagging Strat-
              egy .

              Key -> (string)
                 The tag key. Tag keys must be unique per resource.

              Value -> (string)
                 The tag value.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --model-deploy-config (structure)
          Specifies  how  to  generate  the  endpoint  name  for  an automatic
          one-click Autopilot model deployment.

          AutoGenerateEndpointName -> (boolean)
              Set to True to automatically generate an  endpoint  name  for  a
              one-click  Autopilot  model  deployment; set to False otherwise.
              The default value is False .

              NOTE:
                 If you set AutoGenerateEndpointName to True , do not  specify
                 the EndpointName ; otherwise a 400 error is thrown.

          EndpointName -> (string)
              Specifies  the  endpoint  name  to use for a one-click Autopilot
              model deployment if the endpoint name is not generated automati-
              cally.

              NOTE:
                 Specify  the  EndpointName if and only if you set AutoGenera-
                 teEndpointName to False ; otherwise a 400 error is thrown.

       Shorthand Syntax:

          AutoGenerateEndpointName=boolean,EndpointName=string

       JSON Syntax:

          {
            "AutoGenerateEndpointName": true|false,
            "EndpointName": "string"
          }

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       AutoMLJobArn -> (string)
          The unique ARN assigned to the AutoML job when it is created.



                                                          CREATE-AUTO-ML-JOB()
