DESCRIBE-AUTO-ML-JOB()                                  DESCRIBE-AUTO-ML-JOB()



NAME
       describe-auto-ml-job -

DESCRIPTION
       Returns   information   about   an   AutoML   job  created  by  calling
       CreateAutoMLJob .

       NOTE:
          AutoML jobs created by calling CreateAutoMLJobV2 cannot be described
          by DescribeAutoMLJob .

       See also: AWS API Documentation

SYNOPSIS
            describe-auto-ml-job
          --auto-ml-job-name <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --auto-ml-job-name (string)
          Requests information about an AutoML job using its unique name.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       AutoMLJobName -> (string)
          Returns the name of the AutoML job.

       AutoMLJobArn -> (string)
          Returns the ARN of the AutoML job.

       InputDataConfig -> (list)
          Returns the input data configuration for the AutoML job.

          (structure)
              A  channel  is a named input source that training algorithms can
              consume. The validation dataset size is limited to less  than  2
              GB. The training dataset size must be less than 100 GB. For more
              information, see Channel .

              NOTE:
                 A validation dataset must contain the  same  headers  as  the
                 training dataset.

              DataSource -> (structure)
                 The data source for an AutoML channel.

                 S3DataSource -> (structure)
                     The Amazon S3 location of the input data.

                     S3DataType -> (string)
                        The data type.

                        o If you choose S3Prefix , S3Uri identifies a key name
                          prefix. SageMaker uses all objects  that  match  the
                          specified  key  name  prefix for model training. The
                          S3Prefix   should   have   the   following   format:
                          s3://DOC-EXAMPLE-BUCKET/DOC-EXAMPLE-FOLDER-OR-FILE

                        o If you choose ManifestFile , S3Uri identifies an ob-
                          ject that is a manifest file containing  a  list  of
                          object keys that you want SageMaker to use for model
                          training. A  ManifestFile  should  have  the  format
                          shown    below:     [   {"prefix":   "s3://DOC-EXAM-
                          PLE-BUCKET/DOC-EXAMPLE-FOLDER/DOC-EXAMPLE-PREFIX/"},
                          "DOC-EXAMPLE-RELATIVE-PATH/DOC-EXAM-
                          PLE-FOLDER/DATA-1",               "DOC-EXAMPLE-RELA-
                          TIVE-PATH/DOC-EXAMPLE-FOLDER/DATA-2",            ...
                          "DOC-EXAMPLE-RELATIVE-PATH/DOC-EXAM-
                          PLE-FOLDER/DATA-N" ]

                        o If  you choose AugmentedManifestFile , S3Uri identi-
                          fies an object that is an augmented manifest file in
                          JSON  lines  format. This file contains the data you
                          want to use for model  training.  AugmentedManifest-
                          File is available for V2 API jobs only (for example,
                          for jobs created  by  calling  CreateAutoMLJobV2  ).
                          Here  is a minimal, single-record example of an Aug-
                          mentedManifestFile :  {"source-ref": "s3://DOC-EXAM-
                          PLE-BUCKET/DOC-EXAMPLE-FOLDER/cats/cat.jpg",    "la-
                          bel-metadata": {"class-name": "cat" } For  more  in-
                          formation  on  AugmentedManifestFile  ,  see Provide
                          Dataset Metadata to Training Jobs with an  Augmented
                          Manifest File .

                     S3Uri -> (string)
                        The  URL  to the Amazon S3 data source. The Uri refers
                        to the Amazon S3 prefix or ManifestFile  depending  on
                        the data type.

              CompressionType -> (string)
                 You can use Gzip or None . The default value is None .

              TargetAttributeName -> (string)
                 The  name of the target variable in supervised learning, usu-
                 ally represented by 'y'.

              ContentType -> (string)
                 The content type of the data from the input source.  You  can
                 use  text/csv;header=present or x-application/vnd.amazon+par-
                 quet . The default value is text/csv;header=present .

              ChannelType -> (string)
                 The channel type (optional) is an enum  string.  The  default
                 value is training . Channels for training and validation must
                 share the same ContentType and TargetAttributeName . For  in-
                 formation  on  specifying  training  and  validation  channel
                 types, see How to specify training and validation datasets .

              SampleWeightAttributeName -> (string)
                 If specified, this column name indicates which column of  the
                 dataset  should  be  treated as sample weights for use by the
                 objective metric during the training, evaluation, and the se-
                 lection of the best model. This column is not considered as a
                 predictive feature. For more information  on  Autopilot  met-
                 rics, see Metrics and validation .

                 Sample  weights  should be numeric, non-negative, with larger
                 values indicating which rows are more important than  others.
                 Data  points  that  have  invalid  or no weight value are ex-
                 cluded.

                 Support for sample weights is available  in  Ensembling  mode
                 only.

       OutputDataConfig -> (structure)
          Returns the job's output data config.

          KmsKeyId -> (string)
              The Key Management Service encryption key ID.

          S3OutputPath -> (string)
              The Amazon S3 output path. Must be 512 characters or less.

       RoleArn -> (string)
          The  ARN  of the IAM role that has read permission to the input data
          location and write permission to the output data location in  Amazon
          S3.

       AutoMLJobObjective -> (structure)
          Returns the job's objective.

          MetricName -> (string)
              The  name of the objective metric used to measure the predictive
              quality of a  machine  learning  system.  During  training,  the
              model's  parameters are updated iteratively to optimize its per-
              formance based on the feedback provided by the objective  metric
              when evaluating the model on the validation dataset.

              The list of available metrics supported by Autopilot and the de-
              fault metric applied when you do not specify a metric  name  ex-
              plicitly depend on the problem type.

              o For tabular problem types:

                o List of available metrics:

                  o Regression: MAE , MSE , R2 , RMSE

                  o Binary classification: Accuracy , AUC , BalancedAccuracy ,
                    F1 , Precision , Recall

                  o Multiclass classification: Accuracy ,  BalancedAccuracy  ,
                    F1macro , PrecisionMacro , RecallMacro

                For  a  description  of each metric, see Autopilot metrics for
                classification and regression .

                o Default objective metrics:

                  o Regression: MSE .

                  o Binary classification: F1 .

                  o Multiclass classification: Accuracy .

              o For image or text classification problem types:

                o List of available metrics: Accuracy   For a  description  of
                  each  metric, see Autopilot metrics for text and image clas-
                  sification .

                o Default objective metrics: Accuracy

              o For time-series forecasting problem types:

                o List of available metrics: RMSE , wQL , Average wQL , MASE ,
                  MAPE  ,  WAPE    For  a  description  of  each  metric,  see
                  Autopilot metrics for time-series forecasting .

                o Default objective metrics: AverageWeightedQuantileLoss

              o For  text  generation  problem   types   (LLMs   fine-tuning):
                Fine-tuning language models in Autopilot does not require set-
                ting the AutoMLJobObjective field. Autopilot  fine-tunes  LLMs
                without requiring multiple candidates to be trained and evalu-
                ated.  Instead,  using  your   dataset,   Autopilot   directly
                fine-tunes  your  target  model to enhance a default objective
                metric, the cross-entropy loss. After fine-tuning  a  language
                model,  you can evaluate the quality of its generated text us-
                ing different metrics. For a list of  the  available  metrics,
                see Metrics for fine-tuning LLMs in Autopilot .

       ProblemType -> (string)
          Returns the job's problem type.

       AutoMLJobConfig -> (structure)
          Returns the configuration for the AutoML job.

          CompletionCriteria -> (structure)
              How long an AutoML job is allowed to run, or how many candidates
              a job is allowed to generate.

              MaxCandidates -> (integer)
                 The maximum number of times a training job is allowed to run.

                 For text and image classification,  time-series  forecasting,
                 as  well as text generation (LLMs fine-tuning) problem types,
                 the supported value is 1. For tabular problem types, the max-
                 imum value is 750.

              MaxRuntimePerTrainingJobInSeconds -> (integer)
                 The maximum time, in seconds, that each training job executed
                 inside hyperparameter tuning is allowed to run as part  of  a
                 hyperparameter  tuning  job.  For  more  information, see the
                 StoppingCondition used by  the  CreateHyperParameterTuningJob
                 action.

                 For  job  V2s  (jobs  created by calling CreateAutoMLJobV2 ),
                 this field controls the runtime of the job candidate.

                 For TextGenerationJobConfig problem types, the  maximum  time
                 defaults to 72 hours (259200 seconds).

              MaxAutoMLJobRuntimeInSeconds -> (integer)
                 The  maximum  runtime,  in seconds, an AutoML job has to com-
                 plete.

                 If an AutoML job exceeds the  maximum  runtime,  the  job  is
                 stopped automatically and its processing is ended gracefully.
                 The AutoML job identifies the best model whose  training  was
                 completed  and marks it as the best-performing model. Any un-
                 finished steps of the job, such as  automatic  one-click  Au-
                 topilot model deployment, are not completed.

          SecurityConfig -> (structure)
              The  security configuration for traffic encryption or Amazon VPC
              settings.

              VolumeKmsKeyId -> (string)
                 The key used to encrypt stored data.

              EnableInterContainerTrafficEncryption -> (boolean)
                 Whether to use traffic encryption between the container  lay-
                 ers.

              VpcConfig -> (structure)
                 The VPC configuration.

                 SecurityGroupIds -> (list)
                     The  VPC  security  group  IDs, in the form sg-xxxxxxxx .
                     Specify the security groups for the VPC that is specified
                     in the Subnets field.

                     (string)

                 Subnets -> (list)
                     The  ID  of  the  subnets in the VPC to which you want to
                     connect your training job or model. For information about
                     the   availability   of   specific  instance  types,  see
                     Supported Instance Types and Availability Zones .

                     (string)

          CandidateGenerationConfig -> (structure)
              The configuration for generating a candidate for an  AutoML  job
              (optional).

              FeatureSpecificationS3Uri -> (string)
                 A  URL  to the Amazon S3 data source containing selected fea-
                 tures from the input data source to run an Autopilot job. You
                 can  input FeatureAttributeNames (optional) in JSON format as
                 shown below:
                     { "FeatureAttributeNames":["col1", "col2", ...] } .

                 You can also specify the data type of the feature  (optional)
                 in the format shown below:
                     { "FeatureDataTypes":{"col1":"numeric", "col2":"categori-
                     cal" ... } }

                 NOTE:
                     These column keys may not include the target column.

                 In ensembling mode, Autopilot  only  supports  the  following
                 data  types: numeric , categorical , text , and datetime . In
                 HPO mode, Autopilot can support numeric , categorical ,  text
                 , datetime , and sequence .

                 If only FeatureDataTypes is provided, the column keys (col1 ,
                 col2 ,..) should be a subset of the column names in the input
                 data.

                 If  both  FeatureDataTypes and FeatureAttributeNames are pro-
                 vided, then the column keys should be a subset of the  column
                 names provided in FeatureAttributeNames .

                 The  key  name  FeatureAttributeNames  is  fixed.  The values
                 listed in ["col1", "col2", ...] are case sensitive and should
                 be a list of strings containing unique values that are a sub-
                 set of the column names in the input data. The list  of  col-
                 umns provided must not include the target column.

              AlgorithmsConfig -> (list)
                 Stores the configuration information for the selection of al-
                 gorithms trained on tabular data.

                 The list of available algorithms to choose  from  depends  on
                 the    training   mode   set   in   `   TabularJobConfig.Mode
                 https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_TabularJobConfig.html`__
                 .

                 o AlgorithmsConfig  should not be set if the training mode is
                   set on AUTO .

                 o When AlgorithmsConfig is provided, one AutoMLAlgorithms at-
                   tribute must be set and one only. If the list of algorithms
                   provided as values for AutoMLAlgorithms  is  empty,  Candi-
                   dateGenerationConfig  uses  the  full set of algorithms for
                   the given training mode.

                 o When AlgorithmsConfig  is  not  provided,  CandidateGenera-
                   tionConfig  uses  the  full set of algorithms for the given
                   training mode.

                 For the list of all algorithms per problem type and  training
                 mode, see AutoMLAlgorithmConfig .

                 For  more  information  on  each algorithm, see the Algorithm
                 support section in Autopilot developer guide.

                 (structure)
                     The selection of algorithms trained on  your  dataset  to
                     generate the model candidates for an Autopilot job.

                     AutoMLAlgorithms -> (list)
                        The selection of algorithms trained on your dataset to
                        generate the model candidates for an Autopilot job.

                        o For the tabular problem type ``TabularJobConfig`` :

                        NOTE:
                               Selected algorithms must  belong  to  the  list
                               corresponding  to  the  training  mode  set  in
                               AutoMLJobConfig.Mode (ENSEMBLING or HYPERPARAM-
                               ETER_TUNING ). Choose a minimum of 1 algorithm.

                            o In ENSEMBLING mode:

                              o "catboost"

                              o "extra-trees"

                              o "fastai"

                              o "lightgbm"

                              o "linear-learner"

                              o "nn-torch"

                              o "randomforest"

                              o "xgboost"

                            o In HYPERPARAMETER_TUNING mode:

                              o "linear-learner"

                              o "mlp"

                              o "xgboost"

                        o For the time-series forecasting problem type ``Time-
                          SeriesForecastingJobConfig`` :

                          o Choose your algorithms from this list.

                            o "cnn-qr"

                            o "deepar"

                            o "prophet"

                            o "arima"

                            o "npts"

                            o "ets"

                        (string)

          DataSplitConfig -> (structure)
              The configuration for splitting the input training dataset.

              Type: AutoMLDataSplitConfig

              ValidationFraction -> (float)
                 The validation fraction (optional) is a float that  specifies
                 the  portion  of  the training dataset to be used for valida-
                 tion. The default value is 0.2, and values  must  be  greater
                 than 0 and less than 1. We recommend setting this value to be
                 less than 0.5.

          Mode -> (string)
              The method that Autopilot uses to train the data. You can either
              specify  the mode manually or let Autopilot choose for you based
              on the dataset size by selecting AUTO . In AUTO mode,  Autopilot
              chooses  ENSEMBLING for datasets smaller than 100 MB, and HYPER-
              PARAMETER_TUNING for larger ones.

              The ENSEMBLING mode uses a multi-stack ensemble model to predict
              classification  and regression tasks directly from your dataset.
              This machine learning mode combines several base models to  pro-
              duce an optimal predictive model. It then uses a stacking ensem-
              ble method to combine predictions from contributing  members.  A
              multi-stack ensemble model can provide better performance over a
              single model by combining the predictive capabilities of  multi-
              ple  models. See Autopilot algorithm support for a list of algo-
              rithms supported by ENSEMBLING mode.

              The HYPERPARAMETER_TUNING (HPO) mode uses the best  hyperparame-
              ters to train the best version of a model. HPO automatically se-
              lects an algorithm for the type of problem you  want  to  solve.
              Then HPO finds the best hyperparameters according to your objec-
              tive metric. See Autopilot algorithm support for a list of algo-
              rithms supported by HYPERPARAMETER_TUNING mode.

       CreationTime -> (timestamp)
          Returns the creation time of the AutoML job.

       EndTime -> (timestamp)
          Returns the end time of the AutoML job.

       LastModifiedTime -> (timestamp)
          Returns the job's last modified time.

       FailureReason -> (string)
          Returns the failure reason for an AutoML job, when applicable.

       PartialFailureReasons -> (list)
          Returns a list of reasons for partial failures within an AutoML job.

          (structure)
              The reason for a partial failure of an AutoML job.

              PartialFailureMessage -> (string)
                 The message containing the reason for a partial failure of an
                 AutoML job.

       BestCandidate -> (structure)
          The best model candidate selected by SageMaker Autopilot using  both
          the best objective metric and lowest InferenceLatency for an experi-
          ment.

          CandidateName -> (string)
              The name of the candidate.

          FinalAutoMLJobObjectiveMetric -> (structure)
              The best candidate result from an AutoML training job.

              Type -> (string)
                 The type of metric with the best result.

              MetricName -> (string)
                 The name of the metric with the best result. For  a  descrip-
                 tion    of    the    possible    objective    metrics,    see
                 AutoMLJobObjective$MetricName .

              Value -> (float)
                 The value of the metric with the best result.

              StandardMetricName -> (string)
                 The name of the standard metric. For  a  description  of  the
                 standard metrics, see Autopilot candidate metrics .

          ObjectiveStatus -> (string)
              The objective's status.

          CandidateSteps -> (list)
              Information about the candidate's steps.

              (structure)
                 Information  about the steps for a candidate and what step it
                 is working on.

                 CandidateStepType -> (string)
                     Whether the candidate is at the transform,  training,  or
                     processing step.

                 CandidateStepArn -> (string)
                     The ARN for the candidate's step.

                 CandidateStepName -> (string)
                     The name for the candidate's step.

          CandidateStatus -> (string)
              The candidate's status.

          InferenceContainers -> (list)
              Information  about  the  recommended inference container defini-
              tions.

              (structure)
                 A list of container definitions that describe  the  different
                 containers  that make up an AutoML candidate. For more infor-
                 mation, see ContainerDefinition .

                 Image -> (string)
                     The Amazon Elastic Container Registry (Amazon  ECR)  path
                     of    the    container.   For   more   information,   see
                     ContainerDefinition .

                 ModelDataUrl -> (string)
                     The location of the model artifacts.  For  more  informa-
                     tion, see ContainerDefinition .

                 Environment -> (map)
                     The  environment  variables  to set in the container. For
                     more information, see ContainerDefinition .

                     key -> (string)

                     value -> (string)

          CreationTime -> (timestamp)
              The creation time.

          EndTime -> (timestamp)
              The end time.

          LastModifiedTime -> (timestamp)
              The last modified time.

          FailureReason -> (string)
              The failure reason.

          CandidateProperties -> (structure)
              The properties of an AutoML candidate job.

              CandidateArtifactLocations -> (structure)
                 The Amazon S3 prefix to the artifacts generated for an AutoML
                 candidate.

                 Explainability -> (string)
                     The Amazon S3 prefix to the explainability artifacts gen-
                     erated for the AutoML candidate.

                 ModelInsights -> (string)
                     The Amazon S3 prefix to the model insight artifacts  gen-
                     erated for the AutoML candidate.

                 BacktestResults -> (string)
                     The  Amazon S3 prefix to the accuracy metrics and the in-
                     ference results observed over the testing window.  Avail-
                     able only for the time-series forecasting problem type.

              CandidateMetrics -> (list)
                 Information about the candidate metrics for an AutoML job.

                 (structure)
                     Information  about the metric for a candidate produced by
                     an AutoML job.

                     MetricName -> (string)
                        The name of the metric.

                     Value -> (float)
                        The value of the metric.

                     Set -> (string)
                        The dataset split from which the AutoML  job  produced
                        the metric.

                     StandardMetricName -> (string)
                        The name of the standard metric.

                        NOTE:
                            For definitions of the standard metrics, see ` Au-
                            topilot             candidate              metrics
                            https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-model-support-validation.html#autopilot-metrics`__
                            .

          InferenceContainerDefinitions -> (map)
              The mapping of all supported processing unit (CPU, GPU,  etc...)
              to inference container definitions for the candidate. This field
              is populated for the AutoML jobs V2 (for example, for jobs  cre-
              ated  by  calling  CreateAutoMLJobV2  ) related to image or text
              classification problem types only.

              key -> (string)
                 Processing unit for an inference container. Currently Autopi-
                 lot only supports CPU or GPU .

              value -> (list)
                 Information about the recommended inference container defini-
                 tions.

                 (structure)
                     A list of container definitions that describe the differ-
                     ent containers that make up an AutoML candidate. For more
                     information, see ContainerDefinition .

                     Image -> (string)
                        The Amazon Elastic  Container  Registry  (Amazon  ECR)
                        path  of  the  container.  For  more  information, see
                        ContainerDefinition .

                     ModelDataUrl -> (string)
                        The location of the model artifacts. For more informa-
                        tion, see ContainerDefinition .

                     Environment -> (map)
                        The environment variables to set in the container. For
                        more information, see ContainerDefinition .

                        key -> (string)

                        value -> (string)

       AutoMLJobStatus -> (string)
          Returns the status of the AutoML job.

       AutoMLJobSecondaryStatus -> (string)
          Returns the secondary status of the AutoML job.

       GenerateCandidateDefinitionsOnly -> (boolean)
          Indicates whether the output for an AutoML job  generates  candidate
          definitions only.

       AutoMLJobArtifacts -> (structure)
          Returns  information  on the job's artifacts found in AutoMLJobArti-
          facts .

          CandidateDefinitionNotebookLocation -> (string)
              The URL of the notebook location.

          DataExplorationNotebookLocation -> (string)
              The URL of the notebook location.

       ResolvedAttributes -> (structure)
          Contains ProblemType , AutoMLJobObjective , and CompletionCriteria .
          If you do not provide these values, they are inferred.

          AutoMLJobObjective -> (structure)
              Specifies  a  metric to minimize or maximize as the objective of
              an AutoML job.

              MetricName -> (string)
                 The name of the objective metric used to measure the  predic-
                 tive  quality  of a machine learning system. During training,
                 the model's parameters are updated  iteratively  to  optimize
                 its  performance based on the feedback provided by the objec-
                 tive metric when  evaluating  the  model  on  the  validation
                 dataset.

                 The  list of available metrics supported by Autopilot and the
                 default metric applied when you do not specify a metric  name
                 explicitly depend on the problem type.

                 o For tabular problem types:

                   o List of available metrics:

                     o Regression: MAE , MSE , R2 , RMSE

                     o Binary  classification:  Accuracy , AUC , BalancedAccu-
                       racy , F1 , Precision , Recall

                     o Multiclass classification: Accuracy ,  BalancedAccuracy
                       , F1macro , PrecisionMacro , RecallMacro

                   For a description of each metric, see Autopilot metrics for
                   classification and regression .

                   o Default objective metrics:

                     o Regression: MSE .

                     o Binary classification: F1 .

                     o Multiclass classification: Accuracy .

                 o For image or text classification problem types:

                   o List of available metrics: Accuracy   For  a  description
                     of  each metric, see Autopilot metrics for text and image
                     classification .

                   o Default objective metrics: Accuracy

                 o For time-series forecasting problem types:

                   o List of available metrics: RMSE , wQL  ,  Average  wQL  ,
                     MASE  ,  MAPE  , WAPE   For a description of each metric,
                     see Autopilot metrics for time-series forecasting .

                   o Default objective metrics: AverageWeightedQuantileLoss

                 o For  text  generation  problem  types  (LLMs  fine-tuning):
                   Fine-tuning  language  models in Autopilot does not require
                   setting the AutoMLJobObjective field. Autopilot  fine-tunes
                   LLMs  without  requiring  multiple candidates to be trained
                   and evaluated. Instead, using your dataset,  Autopilot  di-
                   rectly  fine-tunes  your  target model to enhance a default
                   objective metric, the cross-entropy loss. After fine-tuning
                   a  language model, you can evaluate the quality of its gen-
                   erated text using different metrics.  For  a  list  of  the
                   available  metrics, see Metrics for fine-tuning LLMs in Au-
                   topilot .

          ProblemType -> (string)
              The problem type.

          CompletionCriteria -> (structure)
              How long a job is allowed to run, or how many candidates  a  job
              is allowed to generate.

              MaxCandidates -> (integer)
                 The maximum number of times a training job is allowed to run.

                 For  text  and image classification, time-series forecasting,
                 as well as text generation (LLMs fine-tuning) problem  types,
                 the supported value is 1. For tabular problem types, the max-
                 imum value is 750.

              MaxRuntimePerTrainingJobInSeconds -> (integer)
                 The maximum time, in seconds, that each training job executed
                 inside  hyperparameter  tuning is allowed to run as part of a
                 hyperparameter tuning job.  For  more  information,  see  the
                 StoppingCondition  used  by the CreateHyperParameterTuningJob
                 action.

                 For job V2s (jobs created  by  calling  CreateAutoMLJobV2  ),
                 this field controls the runtime of the job candidate.

                 For  TextGenerationJobConfig  problem types, the maximum time
                 defaults to 72 hours (259200 seconds).

              MaxAutoMLJobRuntimeInSeconds -> (integer)
                 The maximum runtime, in seconds, an AutoML job  has  to  com-
                 plete.

                 If  an  AutoML  job  exceeds  the maximum runtime, the job is
                 stopped automatically and its processing is ended gracefully.
                 The  AutoML  job identifies the best model whose training was
                 completed and marks it as the best-performing model. Any  un-
                 finished  steps  of  the job, such as automatic one-click Au-
                 topilot model deployment, are not completed.

       ModelDeployConfig -> (structure)
          Indicates whether the model was deployed automatically  to  an  end-
          point and the name of that endpoint if deployed automatically.

          AutoGenerateEndpointName -> (boolean)
              Set  to  True  to  automatically generate an endpoint name for a
              one-click Autopilot model deployment; set  to  False  otherwise.
              The default value is False .

              NOTE:
                 If  you set AutoGenerateEndpointName to True , do not specify
                 the EndpointName ; otherwise a 400 error is thrown.

          EndpointName -> (string)
              Specifies the endpoint name to use  for  a  one-click  Autopilot
              model deployment if the endpoint name is not generated automati-
              cally.

              NOTE:
                 Specify the EndpointName if and only if you  set  AutoGenera-
                 teEndpointName to False ; otherwise a 400 error is thrown.

       ModelDeployResult -> (structure)
          Provides information about endpoint for the model deployment.

          EndpointName -> (string)
              The name of the endpoint to which the model has been deployed.

              NOTE:
                 If model deployment fails, this field is omitted from the re-
                 sponse.



                                                        DESCRIBE-AUTO-ML-JOB()
