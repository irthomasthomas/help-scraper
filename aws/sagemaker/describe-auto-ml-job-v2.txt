DESCRIBE-AUTO-ML-JOB-V2()                            DESCRIBE-AUTO-ML-JOB-V2()



NAME
       describe-auto-ml-job-v2 -

DESCRIPTION
       Returns   information   about   an   AutoML   job  created  by  calling
       CreateAutoMLJobV2 or CreateAutoMLJob .

       See also: AWS API Documentation

SYNOPSIS
            describe-auto-ml-job-v2
          --auto-ml-job-name <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --auto-ml-job-name (string)
          Requests information about an AutoML job V2 using its unique name.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       AutoMLJobName -> (string)
          Returns the name of the AutoML job V2.

       AutoMLJobArn -> (string)
          Returns the Amazon Resource Name (ARN) of the AutoML job V2.

       AutoMLJobInputDataConfig -> (list)
          Returns  an  array  of channel objects describing the input data and
          their location.

          (structure)
              A channel is a named input source that training  algorithms  can
              consume.  This  channel is used for AutoML jobs V2 (jobs created
              by calling CreateAutoMLJobV2 ).

              ChannelType -> (string)
                 The type of channel. Defines whether the data  are  used  for
                 training or validation. The default value is training . Chan-
                 nels for training and validation must share the same Content-
                 Type

                 NOTE:
                     The type of channel defaults to training for the time-se-
                     ries forecasting problem type.

              ContentType -> (string)
                 The content type of the data from the input source. The  fol-
                 lowing are the allowed content types for different problems:

                 o For tabular problem types: text/csv;header=present or x-ap-
                   plication/vnd.amazon+parquet  .  The   default   value   is
                   text/csv;header=present .

                 o For  image  classification: image/png , image/jpeg , or im-
                   age/* . The default value is image/* .

                 o For text classification: text/csv;header=present  or  x-ap-
                   plication/vnd.amazon+parquet   .   The   default  value  is
                   text/csv;header=present .

                 o For  time-series  forecasting:  text/csv;header=present  or
                   x-application/vnd.amazon+parquet  .  The  default  value is
                   text/csv;header=present .

                 o For      text      generation      (LLMs      fine-tuning):
                   text/csv;header=present or x-application/vnd.amazon+parquet
                   . The default value is text/csv;header=present .

              CompressionType -> (string)
                 The allowed compression types depend on the input format  and
                 problem type. We allow the compression type Gzip for S3Prefix
                 inputs on tabular data only. For all other inputs,  the  com-
                 pression type should be None . If no compression type is pro-
                 vided, we default to None .

              DataSource -> (structure)
                 The data source for an AutoML channel (Required).

                 S3DataSource -> (structure)
                     The Amazon S3 location of the input data.

                     S3DataType -> (string)
                        The data type.

                        o If you choose S3Prefix , S3Uri identifies a key name
                          prefix.  SageMaker  uses  all objects that match the
                          specified key name prefix for  model  training.  The
                          S3Prefix   should   have   the   following   format:
                          s3://DOC-EXAMPLE-BUCKET/DOC-EXAMPLE-FOLDER-OR-FILE

                        o If you choose ManifestFile , S3Uri identifies an ob-
                          ject  that  is  a manifest file containing a list of
                          object keys that you want SageMaker to use for model
                          training.  A  ManifestFile  should  have  the format
                          shown   below:    [    {"prefix":    "s3://DOC-EXAM-
                          PLE-BUCKET/DOC-EXAMPLE-FOLDER/DOC-EXAMPLE-PREFIX/"},
                          "DOC-EXAMPLE-RELATIVE-PATH/DOC-EXAM-
                          PLE-FOLDER/DATA-1",               "DOC-EXAMPLE-RELA-
                          TIVE-PATH/DOC-EXAMPLE-FOLDER/DATA-2",            ...
                          "DOC-EXAMPLE-RELATIVE-PATH/DOC-EXAM-
                          PLE-FOLDER/DATA-N" ]

                        o If you choose AugmentedManifestFile , S3Uri  identi-
                          fies an object that is an augmented manifest file in
                          JSON lines format. This file contains the  data  you
                          want  to  use for model training. AugmentedManifest-
                          File is available for V2 API jobs only (for example,
                          for  jobs  created  by  calling CreateAutoMLJobV2 ).
                          Here is a minimal, single-record example of an  Aug-
                          mentedManifestFile :  {"source-ref": "s3://DOC-EXAM-
                          PLE-BUCKET/DOC-EXAMPLE-FOLDER/cats/cat.jpg",    "la-
                          bel-metadata":  {"class-name":  "cat" } For more in-
                          formation on  AugmentedManifestFile  ,  see  Provide
                          Dataset  Metadata to Training Jobs with an Augmented
                          Manifest File .

                     S3Uri -> (string)
                        The URL to the Amazon S3 data source. The  Uri  refers
                        to  the  Amazon S3 prefix or ManifestFile depending on
                        the data type.

       OutputDataConfig -> (structure)
          Returns the job's output data config.

          KmsKeyId -> (string)
              The Key Management Service (KMS) encryption key ID.

          S3OutputPath -> (string)
              The Amazon S3 output path. Must be 128 characters or less.

       RoleArn -> (string)
          The ARN of the Identity and Access Management  role  that  has  read
          permission  to  the  input data location and write permission to the
          output data location in Amazon S3.

       AutoMLJobObjective -> (structure)
          Returns the job's objective.

          MetricName -> (string)
              The name of the objective metric used to measure the  predictive
              quality  of  a  machine  learning  system.  During training, the
              model's parameters are updated iteratively to optimize its  per-
              formance  based on the feedback provided by the objective metric
              when evaluating the model on the validation dataset.

              The list of available metrics supported by Autopilot and the de-
              fault  metric  applied when you do not specify a metric name ex-
              plicitly depend on the problem type.

              o For tabular problem types:

                o List of available metrics:

                  o Regression: InferenceLatency , MAE , MSE , R2 , RMSE

                  o Binary classification: Accuracy , AUC , BalancedAccuracy ,
                    F1 , InferenceLatency , LogLoss , Precision , Recall

                  o Multiclass  classification:  Accuracy , BalancedAccuracy ,
                    F1macro , InferenceLatency , LogLoss  ,  PrecisionMacro  ,
                    RecallMacro

                For  a  description  of each metric, see Autopilot metrics for
                classification and regression .

                o Default objective metrics:

                  o Regression: MSE .

                  o Binary classification: F1 .

                  o Multiclass classification: Accuracy .

              o For image or text classification problem types:

                o List of available metrics: Accuracy   For a  description  of
                  each  metric, see Autopilot metrics for text and image clas-
                  sification .

                o Default objective metrics: Accuracy

              o For time-series forecasting problem types:

                o List of available metrics: RMSE , wQL , Average wQL , MASE ,
                  MAPE  ,  WAPE    For  a  description  of  each  metric,  see
                  Autopilot metrics for time-series forecasting .

                o Default objective metrics: AverageWeightedQuantileLoss

              o For  text  generation  problem   types   (LLMs   fine-tuning):
                Fine-tuning language models in Autopilot does not require set-
                ting the AutoMLJobObjective field. Autopilot  fine-tunes  LLMs
                without requiring multiple candidates to be trained and evalu-
                ated.  Instead,  using  your   dataset,   Autopilot   directly
                fine-tunes  your  target  model to enhance a default objective
                metric, the cross-entropy loss. After fine-tuning  a  language
                model,  you can evaluate the quality of its generated text us-
                ing different metrics. For a list of  the  available  metrics,
                see Metrics for fine-tuning LLMs in Autopilot .

       AutoMLProblemTypeConfig -> (tagged union structure)
          Returns  the  configuration settings of the problem type set for the
          AutoML job V2.

          NOTE:
              This is a Tagged Union structure. Only one of the following  top
              level keys can be set: ImageClassificationJobConfig, TextClassi-
              ficationJobConfig,  TabularJobConfig,  TimeSeriesForecastingJob-
              Config, TextGenerationJobConfig.

          ImageClassificationJobConfig -> (structure)
              Settings  used to configure an AutoML job V2 for the image clas-
              sification problem type.

              CompletionCriteria -> (structure)
                 How long a job is allowed to run, or how  many  candidates  a
                 job is allowed to generate.

                 MaxCandidates -> (integer)
                     The  maximum number of times a training job is allowed to
                     run.

                     For text and image classification, time-series  forecast-
                     ing,  as well as text generation (LLMs fine-tuning) prob-
                     lem types, the supported value is 1. For tabular  problem
                     types, the maximum value is 750.

                 MaxRuntimePerTrainingJobInSeconds -> (integer)
                     The maximum time, in seconds, that each training job exe-
                     cuted inside hyperparameter tuning is allowed to  run  as
                     part  of  a  hyperparameter tuning job. For more informa-
                     tion,   see   the   StoppingCondition   used    by    the
                     CreateHyperParameterTuningJob action.

                     For job V2s (jobs created by calling CreateAutoMLJobV2 ),
                     this field controls the runtime of the job candidate.

                     For TextGenerationJobConfig problem  types,  the  maximum
                     time defaults to 72 hours (259200 seconds).

                 MaxAutoMLJobRuntimeInSeconds -> (integer)
                     The  maximum  runtime,  in  seconds, an AutoML job has to
                     complete.

                     If an AutoML job exceeds the maximum runtime, the job  is
                     stopped  automatically and its processing is ended grace-
                     fully. The AutoML job identifies  the  best  model  whose
                     training  was completed and marks it as the best-perform-
                     ing model. Any unfinished steps of the job, such as auto-
                     matic  one-click Autopilot model deployment, are not com-
                     pleted.

          TextClassificationJobConfig -> (structure)
              Settings used to configure an AutoML job V2 for the text classi-
              fication problem type.

              CompletionCriteria -> (structure)
                 How  long  a  job is allowed to run, or how many candidates a
                 job is allowed to generate.

                 MaxCandidates -> (integer)
                     The maximum number of times a training job is allowed  to
                     run.

                     For  text and image classification, time-series forecast-
                     ing, as well as text generation (LLMs fine-tuning)  prob-
                     lem  types, the supported value is 1. For tabular problem
                     types, the maximum value is 750.

                 MaxRuntimePerTrainingJobInSeconds -> (integer)
                     The maximum time, in seconds, that each training job exe-
                     cuted  inside  hyperparameter tuning is allowed to run as
                     part of a hyperparameter tuning job.  For  more  informa-
                     tion,    see    the   StoppingCondition   used   by   the
                     CreateHyperParameterTuningJob action.

                     For job V2s (jobs created by calling CreateAutoMLJobV2 ),
                     this field controls the runtime of the job candidate.

                     For  TextGenerationJobConfig  problem  types, the maximum
                     time defaults to 72 hours (259200 seconds).

                 MaxAutoMLJobRuntimeInSeconds -> (integer)
                     The maximum runtime, in seconds, an  AutoML  job  has  to
                     complete.

                     If  an AutoML job exceeds the maximum runtime, the job is
                     stopped automatically and its processing is ended  grace-
                     fully.  The  AutoML  job  identifies the best model whose
                     training was completed and marks it as the  best-perform-
                     ing model. Any unfinished steps of the job, such as auto-
                     matic one-click Autopilot model deployment, are not  com-
                     pleted.

              ContentColumn -> (string)
                 The  name  of  the column used to provide the sentences to be
                 classified. It should not be the same as the target column.

              TargetLabelColumn -> (string)
                 The name of the column used to provide the class  labels.  It
                 should not be same as the content column.

          TabularJobConfig -> (structure)
              Settings  used  to  configure  an  AutoML job V2 for the tabular
              problem type (regression, classification).

              CandidateGenerationConfig -> (structure)
                 The configuration information of  how  model  candidates  are
                 generated.

                 AlgorithmsConfig -> (list)
                     Stores the configuration information for the selection of
                     algorithms used to  train  model  candidates  on  tabular
                     data.

                     The  list  of available algorithms to choose from depends
                     on the  training  mode  set  in  `  TabularJobConfig.Mode
                     https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_TabularJobConfig.html`__
                     .

                     o AlgorithmsConfig should not be  set  in  AUTO  training
                       mode.

                     o When AlgorithmsConfig is provided, one AutoMLAlgorithms
                       attribute must be set and one only. If the list of  al-
                       gorithms  provided  as  values  for AutoMLAlgorithms is
                       empty, CandidateGenerationConfig uses the full  set  of
                       algorithms for the given training mode.

                     o When AlgorithmsConfig is not provided, CandidateGenera-
                       tionConfig uses the full  set  of  algorithms  for  the
                       given training mode.

                     For  the  list  of  all  algorithms  per problem type and
                     training mode, see AutoMLAlgorithmConfig .

                     For more information on each algorithm, see the Algorithm
                     support section in Autopilot developer guide.

                     (structure)
                        The  collection  of  algorithms  run  on a dataset for
                        training the model candidates of an Autopilot job.

                        AutoMLAlgorithms -> (list)
                            The selection of algorithms run on  a  dataset  to
                            train the model candidates of an Autopilot job.

                            NOTE:
                               Selected  algorithms  must  belong  to the list
                               corresponding  to  the  training  mode  set  in
                               AutoMLJobConfig.Mode (ENSEMBLING or HYPERPARAM-
                               ETER_TUNING ). Choose a minimum of 1 algorithm.

                            o In ENSEMBLING mode:

                              o "catboost"

                              o "extra-trees"

                              o "fastai"

                              o "lightgbm"

                              o "linear-learner"

                              o "nn-torch"

                              o "randomforest"

                              o "xgboost"

                            o In HYPERPARAMETER_TUNING mode:

                              o "linear-learner"

                              o "mlp"

                              o "xgboost"

                            (string)

              CompletionCriteria -> (structure)
                 How long a job is allowed to run, or how  many  candidates  a
                 job is allowed to generate.

                 MaxCandidates -> (integer)
                     The  maximum number of times a training job is allowed to
                     run.

                     For text and image classification, time-series  forecast-
                     ing,  as well as text generation (LLMs fine-tuning) prob-
                     lem types, the supported value is 1. For tabular  problem
                     types, the maximum value is 750.

                 MaxRuntimePerTrainingJobInSeconds -> (integer)
                     The maximum time, in seconds, that each training job exe-
                     cuted inside hyperparameter tuning is allowed to  run  as
                     part  of  a  hyperparameter tuning job. For more informa-
                     tion,   see   the   StoppingCondition   used    by    the
                     CreateHyperParameterTuningJob action.

                     For job V2s (jobs created by calling CreateAutoMLJobV2 ),
                     this field controls the runtime of the job candidate.

                     For TextGenerationJobConfig problem  types,  the  maximum
                     time defaults to 72 hours (259200 seconds).

                 MaxAutoMLJobRuntimeInSeconds -> (integer)
                     The  maximum  runtime,  in  seconds, an AutoML job has to
                     complete.

                     If an AutoML job exceeds the maximum runtime, the job  is
                     stopped  automatically and its processing is ended grace-
                     fully. The AutoML job identifies  the  best  model  whose
                     training  was completed and marks it as the best-perform-
                     ing model. Any unfinished steps of the job, such as auto-
                     matic  one-click Autopilot model deployment, are not com-
                     pleted.

              FeatureSpecificationS3Uri -> (string)
                 A URL to the Amazon S3 data source containing  selected  fea-
                 tures  from the input data source to run an Autopilot job V2.
                 You can input FeatureAttributeNames (optional) in JSON format
                 as shown below:
                     { "FeatureAttributeNames":["col1", "col2", ...] } .

                 You  can also specify the data type of the feature (optional)
                 in the format shown below:
                     { "FeatureDataTypes":{"col1":"numeric", "col2":"categori-
                     cal" ... } }

                 NOTE:
                     These column keys may not include the target column.

                 In  ensembling  mode,  Autopilot  only supports the following
                 data types: numeric , categorical , text , and datetime .  In
                 HPO  mode, Autopilot can support numeric , categorical , text
                 , datetime , and sequence .

                 If only FeatureDataTypes is provided, the column keys (col1 ,
                 col2 ,..) should be a subset of the column names in the input
                 data.

                 If both FeatureDataTypes and FeatureAttributeNames  are  pro-
                 vided,  then the column keys should be a subset of the column
                 names provided in FeatureAttributeNames .

                 The key  name  FeatureAttributeNames  is  fixed.  The  values
                 listed in ["col1", "col2", ...] are case sensitive and should
                 be a list of strings containing unique values that are a sub-
                 set  of  the column names in the input data. The list of col-
                 umns provided must not include the target column.

              Mode -> (string)
                 The method that Autopilot uses to train the data. You can ei-
                 ther  specify  the  mode manually or let Autopilot choose for
                 you based on the dataset size by selecting  AUTO  .  In  AUTO
                 mode,  Autopilot chooses ENSEMBLING for datasets smaller than
                 100 MB, and HYPERPARAMETER_TUNING for larger ones.

                 The ENSEMBLING mode uses a multi-stack ensemble model to pre-
                 dict  classification  and regression tasks directly from your
                 dataset. This machine learning  mode  combines  several  base
                 models to produce an optimal predictive model. It then uses a
                 stacking ensemble method to  combine  predictions  from  con-
                 tributing  members.  A multi-stack ensemble model can provide
                 better performance over a single model by combining the  pre-
                 dictive  capabilities of multiple models. See Autopilot algo-
                 rithm support for a list of algorithms  supported  by  ENSEM-
                 BLING mode.

                 The  HYPERPARAMETER_TUNING  (HPO) mode uses the best hyperpa-
                 rameters to train the best version of a model. HPO  automati-
                 cally  selects  an algorithm for the type of problem you want
                 to solve. Then HPO finds the best  hyperparameters  according
                 to your objective metric. See Autopilot algorithm support for
                 a list of algorithms supported by HYPERPARAMETER_TUNING mode.

              GenerateCandidateDefinitionsOnly -> (boolean)
                 Generates possible candidates without training the models.  A
                 model candidate is a combination of data preprocessors, algo-
                 rithms, and algorithm parameter settings.

              ProblemType -> (string)
                 The type of supervised learning  problem  available  for  the
                 model  candidates of the AutoML job V2. For more information,
                 see Amazon SageMaker Autopilot problem types .

                 NOTE:
                     You must either specify the type of  supervised  learning
                     problem in ProblemType and provide the AutoMLJobObjective
                     metric, or none at all.

              TargetAttributeName -> (string)
                 The name of the target variable in supervised learning,  usu-
                 ally represented by 'y'.

              SampleWeightAttributeName -> (string)
                 If  specified, this column name indicates which column of the
                 dataset should be treated as sample weights for  use  by  the
                 objective metric during the training, evaluation, and the se-
                 lection of the best model. This column is not considered as a
                 predictive  feature.  For  more information on Autopilot met-
                 rics, see Metrics and validation .

                 Sample weights should be numeric, non-negative,  with  larger
                 values  indicating which rows are more important than others.
                 Data points that have invalid or  no  weight  value  are  ex-
                 cluded.

                 Support  for  sample  weights is available in Ensembling mode
                 only.

          TimeSeriesForecastingJobConfig -> (structure)
              Settings used to configure an AutoML job V2 for the  time-series
              forecasting problem type.

              FeatureSpecificationS3Uri -> (string)
                 A  URL to the Amazon S3 data source containing additional se-
                 lected features that complement  the  target,  itemID,  time-
                 stamp, and grouped columns set in TimeSeriesConfig . When not
                 provided, the AutoML job V2 includes all the columns from the
                 original  dataset  that are not already declared in TimeSeri-
                 esConfig . If provided, the  AutoML  job  V2  only  considers
                 these additional columns as a complement to the ones declared
                 in TimeSeriesConfig .

                 You can input FeatureAttributeNames (optional) in JSON format
                 as shown below:
                     { "FeatureAttributeNames":["col1", "col2", ...] } .

                 You  can also specify the data type of the feature (optional)
                 in the format shown below:
                     { "FeatureDataTypes":{"col1":"numeric", "col2":"categori-
                     cal" ... } }

                 Autopilot  supports the following data types: numeric , cate-
                 gorical , text , and datetime .

                 NOTE:
                     These column keys must not  include  any  column  set  in
                     TimeSeriesConfig .

              CompletionCriteria -> (structure)
                 How  long  a  job is allowed to run, or how many candidates a
                 job is allowed to generate.

                 MaxCandidates -> (integer)
                     The maximum number of times a training job is allowed  to
                     run.

                     For  text and image classification, time-series forecast-
                     ing, as well as text generation (LLMs fine-tuning)  prob-
                     lem  types, the supported value is 1. For tabular problem
                     types, the maximum value is 750.

                 MaxRuntimePerTrainingJobInSeconds -> (integer)
                     The maximum time, in seconds, that each training job exe-
                     cuted  inside  hyperparameter tuning is allowed to run as
                     part of a hyperparameter tuning job.  For  more  informa-
                     tion,    see    the   StoppingCondition   used   by   the
                     CreateHyperParameterTuningJob action.

                     For job V2s (jobs created by calling CreateAutoMLJobV2 ),
                     this field controls the runtime of the job candidate.

                     For  TextGenerationJobConfig  problem  types, the maximum
                     time defaults to 72 hours (259200 seconds).

                 MaxAutoMLJobRuntimeInSeconds -> (integer)
                     The maximum runtime, in seconds, an  AutoML  job  has  to
                     complete.

                     If  an AutoML job exceeds the maximum runtime, the job is
                     stopped automatically and its processing is ended  grace-
                     fully.  The  AutoML  job  identifies the best model whose
                     training was completed and marks it as the  best-perform-
                     ing model. Any unfinished steps of the job, such as auto-
                     matic one-click Autopilot model deployment, are not  com-
                     pleted.

              ForecastFrequency -> (string)
                 The frequency of predictions in a forecast.

                 Valid  intervals  are  an  integer  followed  by  Y (Year), M
                 (Month), W (Week), D (Day), H (Hour), and min  (Minute).  For
                 example,  1D indicates every day and 15min indicates every 15
                 minutes. The value of a frequency must not overlap  with  the
                 next  larger frequency. For example, you must use a frequency
                 of 1H instead of 60min .

                 The valid values for each frequency are the following:

                 o Minute - 1-59

                 o Hour - 1-23

                 o Day - 1-6

                 o Week - 1-4

                 o Month - 1-11

                 o Year - 1

              ForecastHorizon -> (integer)
                 The number of time-steps that the model predicts.  The  fore-
                 cast  horizon is also called the prediction length. The maxi-
                 mum forecast horizon is the lesser of 500 time-steps  or  1/4
                 of the time-steps in the dataset.

              ForecastQuantiles -> (list)
                 The  quantiles  used  to  train  the model for forecasts at a
                 specified quantile. You can specify quantiles from 0.01  (p1)
                 to  0.99  (p99),  by increments of 0.01 or higher. Up to five
                 forecast quantiles can be specified.  When  ForecastQuantiles
                 is  not provided, the AutoML job uses the quantiles p10, p50,
                 and p90 as default.

                 (string)

              Transformations -> (structure)
                 The transformations  modifying  specific  attributes  of  the
                 time-series, such as filling strategies for missing values.

                 Filling -> (map)
                     A  key  value pair defining the filling method for a col-
                     umn, where the key is the column name and the value is an
                     object  which  defines the filling logic. You can specify
                     multiple filling methods for a single column.

                     The supported filling methods and their corresponding op-
                     tions are:

                     o frontfill : none (Supported only for target column)

                     o middlefill : zero , value , median , mean , min , max

                     o backfill : zero , value , median , mean , min , max

                     o futurefill : zero , value , median , mean , min , max

                     To set a filling method to a specific value, set the fill
                     parameter to the chosen filling method value (for example
                     "backfill"  :  "value" ), and define the filling value in
                     an additional parameter prefixed with "_value". For exam-
                     ple,  to  set backfill to a value of 2 , you must include
                     two   parameters:   "backfill":   "value"   and    "back-
                     fill_value":"2" .

                     key -> (string)

                     value -> (map)
                        key -> (string)

                        value -> (string)

                 Aggregation -> (map)
                     A  key  value  pair defining the aggregation method for a
                     column, where the key is the column name and the value is
                     the aggregation method.

                     The  supported aggregation methods are sum (default), avg
                     , first , min , max .

                     NOTE:
                        Aggregation is only supported for the target column.

                     key -> (string)

                     value -> (string)

              TimeSeriesConfig -> (structure)
                 The collection of components that defines the time-series.

                 TargetAttributeName -> (string)
                     The name of the column representing the  target  variable
                     that  you  want to predict for each item in your dataset.
                     The data type of the target variable must be numerical.

                 TimestampAttributeName -> (string)
                     The name of the column indicating  a  point  in  time  at
                     which the target value of a given item is recorded.

                 ItemIdentifierAttributeName -> (string)
                     The  name  of  the column that represents the set of item
                     identifiers for which you  want  to  predict  the  target
                     value.

                 GroupingAttributeNames -> (list)
                     A  set of columns names that can be grouped with the item
                     identifier column to create a composite key for  which  a
                     target value is predicted.

                     (string)

              HolidayConfig -> (list)
                 The  collection  of  holiday featurization attributes used to
                 incorporate national holiday information into your  forecast-
                 ing model.

                 (structure)
                     Stores the holiday featurization attributes applicable to
                     each item of time-series datasets during the training  of
                     a  forecasting  model.  This allows the model to identify
                     patterns associated with specific holidays.

                     CountryCode -> (string)
                        The country code for the holiday calendar.

                        For the list of public holiday calendars supported  by
                        AutoML  job  V2,  see  Country Codes . Use the country
                        code corresponding to the country of your choice.

          TextGenerationJobConfig -> (structure)
              Settings used to configure an AutoML job V2 for the text genera-
              tion (LLMs fine-tuning) problem type.

              NOTE:
                 The  text  generation  models that support fine-tuning in Au-
                 topilot are currently accessible exclusively in regions  sup-
                 ported  by  Canvas.  Refer to the documentation of Canvas for
                 the full list of its supported Regions .

              CompletionCriteria -> (structure)
                 How long a fine-tuning job is allowed to run. For TextGenera-
                 tionJobConfig  problem types, the MaxRuntimePerTrainingJobIn-
                 Seconds attribute of AutoMLJobCompletionCriteria defaults  to
                 72h (259200s).

                 MaxCandidates -> (integer)
                     The  maximum number of times a training job is allowed to
                     run.

                     For text and image classification, time-series  forecast-
                     ing,  as well as text generation (LLMs fine-tuning) prob-
                     lem types, the supported value is 1. For tabular  problem
                     types, the maximum value is 750.

                 MaxRuntimePerTrainingJobInSeconds -> (integer)
                     The maximum time, in seconds, that each training job exe-
                     cuted inside hyperparameter tuning is allowed to  run  as
                     part  of  a  hyperparameter tuning job. For more informa-
                     tion,   see   the   StoppingCondition   used    by    the
                     CreateHyperParameterTuningJob action.

                     For job V2s (jobs created by calling CreateAutoMLJobV2 ),
                     this field controls the runtime of the job candidate.

                     For TextGenerationJobConfig problem  types,  the  maximum
                     time defaults to 72 hours (259200 seconds).

                 MaxAutoMLJobRuntimeInSeconds -> (integer)
                     The  maximum  runtime,  in  seconds, an AutoML job has to
                     complete.

                     If an AutoML job exceeds the maximum runtime, the job  is
                     stopped  automatically and its processing is ended grace-
                     fully. The AutoML job identifies  the  best  model  whose
                     training  was completed and marks it as the best-perform-
                     ing model. Any unfinished steps of the job, such as auto-
                     matic  one-click Autopilot model deployment, are not com-
                     pleted.

              BaseModelName -> (string)
                 The name of the base model to fine-tune.  Autopilot  supports
                 fine-tuning  a variety of large language models. For informa-
                 tion on the list of supported  models,  see  Text  generation
                 models supporting fine-tuning in Autopilot . If no BaseModel-
                 Name is provided, the default model used is  Falcon7BInstruct
                 .

              TextGenerationHyperParameters -> (map)
                 The hyperparameters used to configure and optimize the learn-
                 ing process of the base model. You can set any combination of
                 the  following  hyperparameters for all base models. For more
                 information on each supported  hyperparameter,  see  Optimize
                 the  learning process of your text generation models with hy-
                 perparameters .

                 o "epochCount" : The number of times the model  goes  through
                   the  entire  training dataset. Its value should be a string
                   containing an integer value within  the  range  of  "1"  to
                   "10".

                 o "batchSize" : The number of data samples used in each iter-
                   ation of training. Its value should be a string  containing
                   an integer value within the range of "1" to "64".

                 o "learningRate"  :  The step size at which a model's parame-
                   ters are updated during training. Its  value  should  be  a
                   string  containing  a floating-point value within the range
                   of "0" to "1".

                 o "learningRateWarmupSteps" : The number  of  training  steps
                   during  which  the learning rate gradually increases before
                   reaching its target or maximum value. Its value should be a
                   string  containing an integer value within the range of "0"
                   to "250".

                 Here is an example where all four hyperparameters are config-
                 ured.
                     {  "epochCount":"5",  "learningRate":"0.5",  "batchSize":
                     "32", "learningRateWarmupSteps": "10" }

                 key -> (string)

                 value -> (string)

       CreationTime -> (timestamp)
          Returns the creation time of the AutoML job V2.

       EndTime -> (timestamp)
          Returns the end time of the AutoML job V2.

       LastModifiedTime -> (timestamp)
          Returns the job's last modified time.

       FailureReason -> (string)
          Returns the reason for the failure of the AutoML job V2, when appli-
          cable.

       PartialFailureReasons -> (list)
          Returns  a list of reasons for partial failures within an AutoML job
          V2.

          (structure)
              The reason for a partial failure of an AutoML job.

              PartialFailureMessage -> (string)
                 The message containing the reason for a partial failure of an
                 AutoML job.

       BestCandidate -> (structure)
          Information  about  the candidate produced by an AutoML training job
          V2, including its status, steps, and other properties.

          CandidateName -> (string)
              The name of the candidate.

          FinalAutoMLJobObjectiveMetric -> (structure)
              The best candidate result from an AutoML training job.

              Type -> (string)
                 The type of metric with the best result.

              MetricName -> (string)
                 The name of the metric with the best result. For  a  descrip-
                 tion    of    the    possible    objective    metrics,    see
                 AutoMLJobObjective$MetricName .

              Value -> (float)
                 The value of the metric with the best result.

              StandardMetricName -> (string)
                 The name of the standard metric. For  a  description  of  the
                 standard metrics, see Autopilot candidate metrics .

          ObjectiveStatus -> (string)
              The objective's status.

          CandidateSteps -> (list)
              Information about the candidate's steps.

              (structure)
                 Information  about the steps for a candidate and what step it
                 is working on.

                 CandidateStepType -> (string)
                     Whether the candidate is at the transform,  training,  or
                     processing step.

                 CandidateStepArn -> (string)
                     The ARN for the candidate's step.

                 CandidateStepName -> (string)
                     The name for the candidate's step.

          CandidateStatus -> (string)
              The candidate's status.

          InferenceContainers -> (list)
              Information  about  the  recommended inference container defini-
              tions.

              (structure)
                 A list of container definitions that describe  the  different
                 containers  that make up an AutoML candidate. For more infor-
                 mation, see ContainerDefinition .

                 Image -> (string)
                     The Amazon Elastic Container Registry (Amazon  ECR)  path
                     of    the    container.   For   more   information,   see
                     ContainerDefinition .

                 ModelDataUrl -> (string)
                     The location of the model artifacts.  For  more  informa-
                     tion, see ContainerDefinition .

                 Environment -> (map)
                     The  environment  variables  to set in the container. For
                     more information, see ContainerDefinition .

                     key -> (string)

                     value -> (string)

          CreationTime -> (timestamp)
              The creation time.

          EndTime -> (timestamp)
              The end time.

          LastModifiedTime -> (timestamp)
              The last modified time.

          FailureReason -> (string)
              The failure reason.

          CandidateProperties -> (structure)
              The properties of an AutoML candidate job.

              CandidateArtifactLocations -> (structure)
                 The Amazon S3 prefix to the artifacts generated for an AutoML
                 candidate.

                 Explainability -> (string)
                     The Amazon S3 prefix to the explainability artifacts gen-
                     erated for the AutoML candidate.

                 ModelInsights -> (string)
                     The Amazon S3 prefix to the model insight artifacts  gen-
                     erated for the AutoML candidate.

                 BacktestResults -> (string)
                     The  Amazon S3 prefix to the accuracy metrics and the in-
                     ference results observed over the testing window.  Avail-
                     able only for the time-series forecasting problem type.

              CandidateMetrics -> (list)
                 Information about the candidate metrics for an AutoML job.

                 (structure)
                     Information  about the metric for a candidate produced by
                     an AutoML job.

                     MetricName -> (string)
                        The name of the metric.

                     Value -> (float)
                        The value of the metric.

                     Set -> (string)
                        The dataset split from which the AutoML  job  produced
                        the metric.

                     StandardMetricName -> (string)
                        The name of the standard metric.

                        NOTE:
                            For definitions of the standard metrics, see ` Au-
                            topilot             candidate              metrics
                            https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-model-support-validation.html#autopilot-metrics`__
                            .

          InferenceContainerDefinitions -> (map)
              The mapping of all supported processing unit (CPU, GPU,  etc...)
              to inference container definitions for the candidate. This field
              is populated for the AutoML jobs V2 (for example, for jobs  cre-
              ated  by  calling  CreateAutoMLJobV2  ) related to image or text
              classification problem types only.

              key -> (string)
                 Processing unit for an inference container. Currently Autopi-
                 lot only supports CPU or GPU .

              value -> (list)
                 Information about the recommended inference container defini-
                 tions.

                 (structure)
                     A list of container definitions that describe the differ-
                     ent containers that make up an AutoML candidate. For more
                     information, see ContainerDefinition .

                     Image -> (string)
                        The Amazon Elastic  Container  Registry  (Amazon  ECR)
                        path  of  the  container.  For  more  information, see
                        ContainerDefinition .

                     ModelDataUrl -> (string)
                        The location of the model artifacts. For more informa-
                        tion, see ContainerDefinition .

                     Environment -> (map)
                        The environment variables to set in the container. For
                        more information, see ContainerDefinition .

                        key -> (string)

                        value -> (string)

       AutoMLJobStatus -> (string)
          Returns the status of the AutoML job V2.

       AutoMLJobSecondaryStatus -> (string)
          Returns the secondary status of the AutoML job V2.

       ModelDeployConfig -> (structure)
          Indicates whether the model was deployed automatically  to  an  end-
          point and the name of that endpoint if deployed automatically.

          AutoGenerateEndpointName -> (boolean)
              Set  to  True  to  automatically generate an endpoint name for a
              one-click Autopilot model deployment; set  to  False  otherwise.
              The default value is False .

              NOTE:
                 If  you set AutoGenerateEndpointName to True , do not specify
                 the EndpointName ; otherwise a 400 error is thrown.

          EndpointName -> (string)
              Specifies the endpoint name to use  for  a  one-click  Autopilot
              model deployment if the endpoint name is not generated automati-
              cally.

              NOTE:
                 Specify the EndpointName if and only if you  set  AutoGenera-
                 teEndpointName to False ; otherwise a 400 error is thrown.

       ModelDeployResult -> (structure)
          Provides information about endpoint for the model deployment.

          EndpointName -> (string)
              The name of the endpoint to which the model has been deployed.

              NOTE:
                 If model deployment fails, this field is omitted from the re-
                 sponse.

       DataSplitConfig -> (structure)
          Returns the configuration settings of how the data  are  split  into
          train and validation datasets.

          ValidationFraction -> (float)
              The validation fraction (optional) is a float that specifies the
              portion of the training dataset to be used for  validation.  The
              default value is 0.2, and values must be greater than 0 and less
              than 1. We recommend setting this value to be less than 0.5.

       SecurityConfig -> (structure)
          Returns the security configuration for traffic encryption or  Amazon
          VPC settings.

          VolumeKmsKeyId -> (string)
              The key used to encrypt stored data.

          EnableInterContainerTrafficEncryption -> (boolean)
              Whether to use traffic encryption between the container layers.

          VpcConfig -> (structure)
              The VPC configuration.

              SecurityGroupIds -> (list)
                 The VPC security group IDs, in the form sg-xxxxxxxx . Specify
                 the security groups for the VPC that is specified in the Sub-
                 nets field.

                 (string)

              Subnets -> (list)
                 The ID of the subnets in the VPC to which you want to connect
                 your training job or model. For information about the  avail-
                 ability  of  specific  instance types, see Supported Instance
                 Types and Availability Zones .

                 (string)

       AutoMLJobArtifacts -> (structure)
          The artifacts that are generated during an AutoML job.

          CandidateDefinitionNotebookLocation -> (string)
              The URL of the notebook location.

          DataExplorationNotebookLocation -> (string)
              The URL of the notebook location.

       ResolvedAttributes -> (structure)
          Returns the resolved attributes used by the AutoML job V2.

          AutoMLJobObjective -> (structure)
              Specifies a metric to minimize or maximize as the  objective  of
              an AutoML job.

              MetricName -> (string)
                 The  name of the objective metric used to measure the predic-
                 tive quality of a machine learning system.  During  training,
                 the  model's  parameters  are updated iteratively to optimize
                 its performance based on the feedback provided by the  objec-
                 tive  metric  when  evaluating  the  model  on the validation
                 dataset.

                 The list of available metrics supported by Autopilot and  the
                 default  metric applied when you do not specify a metric name
                 explicitly depend on the problem type.

                 o For tabular problem types:

                   o List of available metrics:

                     o Regression: InferenceLatency , MAE , MSE , R2 , RMSE

                     o Binary classification: Accuracy , AUC  ,  BalancedAccu-
                       racy  ,  F1  , InferenceLatency , LogLoss , Precision ,
                       Recall

                     o Multiclass classification: Accuracy ,  BalancedAccuracy
                       , F1macro , InferenceLatency , LogLoss , PrecisionMacro
                       , RecallMacro

                   For a description of each metric, see Autopilot metrics for
                   classification and regression .

                   o Default objective metrics:

                     o Regression: MSE .

                     o Binary classification: F1 .

                     o Multiclass classification: Accuracy .

                 o For image or text classification problem types:

                   o List  of  available metrics: Accuracy   For a description
                     of each metric, see Autopilot metrics for text and  image
                     classification .

                   o Default objective metrics: Accuracy

                 o For time-series forecasting problem types:

                   o List  of  available  metrics:  RMSE , wQL , Average wQL ,
                     MASE , MAPE , WAPE   For a description  of  each  metric,
                     see Autopilot metrics for time-series forecasting .

                   o Default objective metrics: AverageWeightedQuantileLoss

                 o For  text  generation  problem  types  (LLMs  fine-tuning):
                   Fine-tuning language models in Autopilot does  not  require
                   setting  the AutoMLJobObjective field. Autopilot fine-tunes
                   LLMs without requiring multiple candidates  to  be  trained
                   and  evaluated.  Instead, using your dataset, Autopilot di-
                   rectly fine-tunes your target model to  enhance  a  default
                   objective metric, the cross-entropy loss. After fine-tuning
                   a language model, you can evaluate the quality of its  gen-
                   erated  text  using  different  metrics.  For a list of the
                   available metrics, see Metrics for fine-tuning LLMs in  Au-
                   topilot .

          CompletionCriteria -> (structure)
              How  long  a job is allowed to run, or how many candidates a job
              is allowed to generate.

              MaxCandidates -> (integer)
                 The maximum number of times a training job is allowed to run.

                 For text and image classification,  time-series  forecasting,
                 as  well as text generation (LLMs fine-tuning) problem types,
                 the supported value is 1. For tabular problem types, the max-
                 imum value is 750.

              MaxRuntimePerTrainingJobInSeconds -> (integer)
                 The maximum time, in seconds, that each training job executed
                 inside hyperparameter tuning is allowed to run as part  of  a
                 hyperparameter  tuning  job.  For  more  information, see the
                 StoppingCondition used by  the  CreateHyperParameterTuningJob
                 action.

                 For  job  V2s  (jobs  created by calling CreateAutoMLJobV2 ),
                 this field controls the runtime of the job candidate.

                 For TextGenerationJobConfig problem types, the  maximum  time
                 defaults to 72 hours (259200 seconds).

              MaxAutoMLJobRuntimeInSeconds -> (integer)
                 The  maximum  runtime,  in seconds, an AutoML job has to com-
                 plete.

                 If an AutoML job exceeds the  maximum  runtime,  the  job  is
                 stopped automatically and its processing is ended gracefully.
                 The AutoML job identifies the best model whose  training  was
                 completed  and marks it as the best-performing model. Any un-
                 finished steps of the job, such as  automatic  one-click  Au-
                 topilot model deployment, are not completed.

          AutoMLProblemTypeResolvedAttributes -> (tagged union structure)
              Defines the resolved attributes specific to a problem type.

              NOTE:
                 This  is  a Tagged Union structure. Only one of the following
                 top  level  keys  can  be   set:   TabularResolvedAttributes,
                 TextGenerationResolvedAttributes.

              TabularResolvedAttributes -> (structure)
                 The resolved attributes for the tabular problem type.

                 ProblemType -> (string)
                     The type of supervised learning problem available for the
                     model candidates of the AutoML job V2 (Binary Classifica-
                     tion,  Multiclass  Classification,  Regression). For more
                     information, see Amazon SageMaker Autopilot problem types
                     .

              TextGenerationResolvedAttributes -> (structure)
                 The resolved attributes for the text generation problem type.

                 BaseModelName -> (string)
                     The name of the base model to fine-tune.

       AutoMLProblemTypeConfigName -> (string)
          Returns  the  name of the problem type configuration set for the Au-
          toML job V2.



                                                     DESCRIBE-AUTO-ML-JOB-V2()
