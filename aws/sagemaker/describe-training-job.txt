DESCRIBE-TRAINING-JOB()                                DESCRIBE-TRAINING-JOB()



NAME
       describe-training-job -

DESCRIPTION
       Returns information about a training job.

       Some  of  the attributes below only appear if the training job success-
       fully starts. If the training job fails,  TrainingJobStatus  is  Failed
       and, depending on the FailureReason , attributes like TrainingStartTime
       , TrainingTimeInSeconds , TrainingEndTime ,  and  BillableTimeInSeconds
       may not be present in the response.

       See also: AWS API Documentation

SYNOPSIS
            describe-training-job
          --training-job-name <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --training-job-name (string)
          The name of the training job.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       TrainingJobName -> (string)
          Name of the model training job.

       TrainingJobArn -> (string)
          The Amazon Resource Name (ARN) of the training job.

       TuningJobArn -> (string)
          The Amazon Resource Name (ARN) of the associated hyperparameter tun-
          ing  job if the training job was launched by a hyperparameter tuning
          job.

       LabelingJobArn -> (string)
          The Amazon Resource Name (ARN) of the SageMaker Ground Truth  label-
          ing job that created the transform or training job.

       AutoMLJobArn -> (string)
          The Amazon Resource Name (ARN) of an AutoML job.

       ModelArtifacts -> (structure)
          Information  about  the  Amazon  S3  location that is configured for
          storing model artifacts.

          S3ModelArtifacts -> (string)
              The path of the S3 object that contains the model artifacts. For
              example, s3://bucket-name/keynameprefix/model.tar.gz .

       TrainingJobStatus -> (string)
          The status of the training job.

          SageMaker provides the following training job statuses:

          o InProgress - The training is in progress.

          o Completed - The training job has completed.

          o Failed  -  The  training job has failed. To see the reason for the
            failure, see the FailureReason field in the response to a  Descri-
            beTrainingJobResponse call.

          o Stopping - The training job is stopping.

          o Stopped - The training job has stopped.

          For more detailed information, see SecondaryStatus .

       SecondaryStatus -> (string)
          Provides  detailed  information about the state of the training job.
          For detailed information on the secondary  status  of  the  training
          job, see StatusMessage under SecondaryStatusTransition .

          SageMaker  provides primary statuses and secondary statuses that ap-
          ply to each of them:
              InProgress

          o Starting - Starting the training job.

          o Downloading - An optional stage for algorithms that  support  File
            training input mode. It indicates that data is being downloaded to
            the ML storage volumes.

          o Training - Training is in progress.

          o Interrupted - The job stopped because the  managed  spot  training
            instances were interrupted.

          o Uploading - Training is complete and the model artifacts are being
            uploaded to the S3 location.

            Completed

          o Completed - The training job has completed.

            Failed

          o Failed - The training job has failed. The reason for  the  failure
            is  returned  in the FailureReason field of DescribeTrainingJobRe-
            sponse .

            Stopped

          o MaxRuntimeExceeded - The job stopped because it exceeded the maxi-
            mum allowed runtime.

          o MaxWaitTimeExceeded - The job stopped because it exceeded the max-
            imum allowed wait time.

          o Stopped - The training job has stopped.

            Stopping

          o Stopping - Stopping the training job.

          WARNING:
              Valid values for SecondaryStatus are subject to change.

          We no longer support the following secondary statuses:

          o LaunchingMLInstances

          o PreparingTraining

          o DownloadingTrainingImage

       FailureReason -> (string)
          If the training job failed, the reason it failed.

       HyperParameters -> (map)
          Algorithm-specific parameters.

          key -> (string)

          value -> (string)

       AlgorithmSpecification -> (structure)
          Information about the algorithm used  for  training,  and  algorithm
          metadata.

          TrainingImage -> (string)
              The registry path of the Docker image that contains the training
              algorithm. For information about docker registry paths for Sage-
              Maker built-in algorithms, see Docker Registry Paths and Example
              Code in the Amazon SageMaker developer guide  .  SageMaker  sup-
              ports   both   registry/repository[:tag]   and  registry/reposi-
              tory[@digest] image path formats. For more information about us-
              ing  your  custom  training  container, see Using Your Own Algo-
              rithms with Amazon SageMaker .

              NOTE:
                 You must specify either the algorithm name to the  Algorithm-
                 Name parameter or the image URI of the algorithm container to
                 the TrainingImage parameter.

                 For more information, see the note in the  AlgorithmName  pa-
                 rameter description.

          AlgorithmName -> (string)
              The  name of the algorithm resource to use for the training job.
              This must be an algorithm resource that you created or subscribe
              to on Amazon Web Services Marketplace.

              NOTE:
                 You  must specify either the algorithm name to the Algorithm-
                 Name parameter or the image URI of the algorithm container to
                 the TrainingImage parameter.

                 Note  that  the AlgorithmName parameter is mutually exclusive
                 with the TrainingImage parameter. If you specify a value  for
                 the  AlgorithmName  parameter,  you can't specify a value for
                 TrainingImage , and vice versa.

                 If you specify values for both parameters, the  training  job
                 might  break; if you don't specify any value for both parame-
                 ters, the training job might raise a null error.

          TrainingInputMode -> (string)
              The training input mode that the algorithm  supports.  For  more
              information about input modes, see Algorithms .
                 Pipe mode

              If  an  algorithm  supports  Pipe mode, Amazon SageMaker streams
              data directly from Amazon S3 to the container.
                 File mode

              If an algorithm supports  File  mode,  SageMaker  downloads  the
              training  data from S3 to the provisioned ML storage volume, and
              mounts the directory to the Docker volume for the training  con-
              tainer.

              You  must provision the ML storage volume with sufficient capac-
              ity to accommodate the data downloaded from S3. In  addition  to
              the  training data, the ML storage volume also stores the output
              model. The algorithm container uses the  ML  storage  volume  to
              also store intermediate information, if any.

              For  distributed  algorithms,  training data is distributed uni-
              formly. Your training duration is predictable if the input  data
              objects  sizes  are  approximately  the same. SageMaker does not
              split the files any further for model training.  If  the  object
              sizes  are skewed, training won't be optimal as the data distri-
              bution is also skewed when one host in  a  training  cluster  is
              overloaded, thus becoming a bottleneck in training.
                 FastFile mode

              If  an  algorithm supports FastFile mode, SageMaker streams data
              directly from S3 to the container with no code changes, and pro-
              vides  file  system  access  to the data. Users can author their
              training script to interact with these files  as  if  they  were
              stored on disk.
                 FastFile  mode works best when the data is read sequentially.
                 Augmented manifest files aren't supported. The  startup  time
                 is  lower  when  there  are fewer files in the S3 bucket pro-
                 vided.

          MetricDefinitions -> (list)
              A list of metric definition objects. Each object  specifies  the
              metric  name  and  regular  expressions  used to parse algorithm
              logs. SageMaker publishes each metric to Amazon CloudWatch.

              (structure)
                 Specifies a metric that  the  training  algorithm  writes  to
                 stderr  or stdout . You can view these logs to understand how
                 your training job performs and check for any  errors  encoun-
                 tered  during  training. SageMaker hyperparameter tuning cap-
                 tures all defined metrics. Specify one of the defined metrics
                 to  use  as an objective metric using the TuningObjective pa-
                 rameter in  the  HyperParameterTrainingJobDefinition  API  to
                 evaluate job performance during hyperparameter tuning.

                 Name -> (string)
                     The name of the metric.

                 Regex -> (string)
                     A regular expression that searches the output of a train-
                     ing job and gets the value of the metric. For more infor-
                     mation about using regular expressions to define metrics,
                     see Defining metrics and environment variables .

          EnableSageMakerMetricsTimeSeries -> (boolean)
              To generate and save time-series metrics during training, set to
              true  . The default is false and time-series metrics aren't gen-
              erated except in the following cases:

              o You use one of the SageMaker built-in algorithms

              o You use one of the following Prebuilt SageMaker Docker  Images
                :

                o Tensorflow (version >= 1.15)

                o MXNet (version >= 1.6)

                o PyTorch (version >= 1.3)

              o You specify at least one MetricDefinition

          ContainerEntrypoint -> (list)
              The  entrypoint  script  for  a  Docker  container used to run a
              training job. This script  takes  precedence  over  the  default
              train  processing  instructions.  See  How Amazon SageMaker Runs
              Your Training Image for more information.

              (string)

          ContainerArguments -> (list)
              The arguments for a container used to run a  training  job.  See
              How Amazon SageMaker Runs Your Training Image for additional in-
              formation.

              (string)

          TrainingImageConfig -> (structure)
              The configuration to use an image from a private Docker registry
              for a training job.

              TrainingRepositoryAccessMode -> (string)
                 The  method that your training job will use to gain access to
                 the images in your private Docker registry. For access to  an
                 image in a private Docker registry, set to Vpc .

              TrainingRepositoryAuthConfig -> (structure)
                 An object containing authentication information for a private
                 Docker registry containing your training images.

                 TrainingRepositoryCredentialsProviderArn -> (string)
                     The Amazon Resource Name (ARN) of an Amazon Web  Services
                     Lambda function used to give SageMaker access credentials
                     to your private Docker registry.

       RoleArn -> (string)
          The Amazon Web Services Identity and Access  Management  (IAM)  role
          configured for the training job.

       InputDataConfig -> (list)
          An array of Channel objects that describes each data input channel.

          (structure)
              A  channel  is a named input source that training algorithms can
              consume.

              ChannelName -> (string)
                 The name of the channel.

              DataSource -> (structure)
                 The location of the channel data.

                 S3DataSource -> (structure)
                     The S3 location of the data  source  that  is  associated
                     with a channel.

                     S3DataType -> (string)
                        If  you  choose S3Prefix , S3Uri identifies a key name
                        prefix. SageMaker uses  all  objects  that  match  the
                        specified key name prefix for model training.

                        If  you  choose ManifestFile , S3Uri identifies an ob-
                        ject that is a manifest file containing a list of  ob-
                        ject  keys  that  you  want SageMaker to use for model
                        training.

                        If you choose AugmentedManifestFile , S3Uri identifies
                        an  object  that is an augmented manifest file in JSON
                        lines format. This file contains the data you want  to
                        use for model training. AugmentedManifestFile can only
                        be used if the Channel's input mode is Pipe .

                     S3Uri -> (string)
                        Depending on the value specified for the S3DataType  ,
                        identifies either a key name prefix or a manifest. For
                        example:

                        o A key name prefix might look like this: s3://bucket-
                          name/exampleprefix

                        o A manifest might look like this: s3://bucketname/ex-
                          ample.manifest   A manifest is an S3 object which is
                          a  JSON file consisting of an array of elements. The
                          first element is a prefix which is followed  by  one
                          or  more suffixes. SageMaker appends the suffix ele-
                          ments to the prefix to get a full  set  of  S3Uri  .
                          Note that the prefix must be a valid non-empty S3Uri
                          that precludes  users  from  specifying  a  manifest
                          whose  individual S3Uri is sourced from different S3
                          buckets. The following code example  shows  a  valid
                          manifest    format:      [   {"prefix":   "s3://cus-
                          tomer_bucket/some/prefix/"},                  "rela-
                          tive/path/to/custdata-1",       "relative/path/cust-
                          data-2",    ...     "relative/path/custdata-N"     ]
                          This JSON is equivalent to the following S3Uri list:
                          s3://customer_bucket/some/prefix/rela-
                          tive/path/to/custdata-1                    s3://cus-
                          tomer_bucket/some/prefix/relative/path/custdata-2
                          ...           s3://customer_bucket/some/prefix/rela-
                          tive/path/custdata-N   The complete set of S3Uri  in
                          this  manifest is the input data for the channel for
                          this data source. The object that each S3Uri  points
                          to  must  be readable by the IAM role that SageMaker
                          uses to perform tasks on your behalf.

                        Your input bucket must be located in same  Amazon  Web
                        Services region as your training job.

                     S3DataDistributionType -> (string)
                        If  you want SageMaker to replicate the entire dataset
                        on each ML compute instance that is launched for model
                        training, specify FullyReplicated .

                        If you want SageMaker to replicate a subset of data on
                        each ML compute instance that is  launched  for  model
                        training,  specify  ShardedByS3Key . If there are n ML
                        compute instances launched for a  training  job,  each
                        instance  gets  approximately  1/n of the number of S3
                        objects. In this case, model training on each  machine
                        uses only the subset of training data.

                        Don't  choose  more  ML compute instances for training
                        than available S3 objects. If you do, some nodes won't
                        get  any  data  and you will pay for nodes that aren't
                        getting any training data. This applies in  both  File
                        and  Pipe modes. Keep this in mind when developing al-
                        gorithms.

                        In distributed training, where  you  use  multiple  ML
                        compute EC2 instances, you might choose ShardedByS3Key
                        . If the algorithm requires copying training  data  to
                        the  ML  storage volume (when TrainingInputMode is set
                        to File ), this copies 1/n of the number of objects.

                     AttributeNames -> (list)
                        A list of one or more attribute names to use that  are
                        found in a specified augmented manifest file.

                        (string)

                     InstanceGroupNames -> (list)
                        A  list of names of instance groups that get data from
                        the S3 data source.

                        (string)

                 FileSystemDataSource -> (structure)
                     The file system that is associated with a channel.

                     FileSystemId -> (string)
                        The file system id.

                     FileSystemAccessMode -> (string)
                        The access mode of the mount of the directory  associ-
                        ated  with the channel. A directory can be mounted ei-
                        ther in ro (read-only) or rw (read-write) mode.

                     FileSystemType -> (string)
                        The file system type.

                     DirectoryPath -> (string)
                        The full path to the directory to associate  with  the
                        channel.

              ContentType -> (string)
                 The MIME type of the data.

              CompressionType -> (string)
                 If training data is compressed, the compression type. The de-
                 fault value is None . CompressionType is used  only  in  Pipe
                 input mode. In File mode, leave this field unset or set it to
                 None.

              RecordWrapperType -> (string)
                 Specify RecordIO as the value when input data is in raw  for-
                 mat  but the training algorithm requires the RecordIO format.
                 In this case, SageMaker wraps each individual S3 object in  a
                 RecordIO  record.  If  the  input data is already in RecordIO
                 format, you don't need to set this attribute. For more infor-
                 mation, see Create a Dataset Using RecordIO .

                 In File mode, leave this field unset or set it to None.

              InputMode -> (string)
                 (Optional)  The  input  mode to use for the data channel in a
                 training job. If you don't set a value for InputMode ,  Sage-
                 Maker uses the value set for TrainingInputMode . Use this pa-
                 rameter  to  override  the  TrainingInputMode  setting  in  a
                 AlgorithmSpecification  request  when you have a channel that
                 needs a different input mode from the training job's  general
                 setting. To download the data from Amazon Simple Storage Ser-
                 vice (Amazon S3) to the provisioned ML  storage  volume,  and
                 mount  the directory to a Docker volume, use File input mode.
                 To stream data directly from  Amazon  S3  to  the  container,
                 choose Pipe input mode.

                 To  use  a  model for incremental training, choose File input
                 model.

              ShuffleConfig -> (structure)
                 A configuration for a shuffle option  for  input  data  in  a
                 channel.  If  you use S3Prefix for S3DataType , this shuffles
                 the results of the S3 key prefix matches. If  you  use  Mani-
                 festFile , the order of the S3 object references in the Mani-
                 festFile is shuffled. If you use AugmentedManifestFile ,  the
                 order of the JSON lines in the AugmentedManifestFile is shuf-
                 fled. The shuffling order is determined using the Seed value.

                 For Pipe input mode, shuffling is done at the start of  every
                 epoch. With large datasets this ensures that the order of the
                 training data is different for each epoch,  it  helps  reduce
                 bias  and  possible overfitting. In a multi-node training job
                 when ShuffleConfig is combined with S3DataDistributionType of
                 ShardedByS3Key  ,  the  data is shuffled across nodes so that
                 the content sent to a particular  node  on  the  first  epoch
                 might be sent to a different node on the second epoch.

                 Seed -> (long)
                     Determines the shuffling order in ShuffleConfig value.

       OutputDataConfig -> (structure)
          The  S3 path where model artifacts that you configured when creating
          the job are stored. SageMaker creates  subfolders  for  model  arti-
          facts.

          KmsKeyId -> (string)
              The  Amazon Web Services Key Management Service (Amazon Web Ser-
              vices KMS) key that SageMaker uses to encrypt  the  model  arti-
              facts  at  rest  using  Amazon  S3  server-side  encryption. The
              KmsKeyId can be any of the following formats:

              o // KMS Key ID  "1234abcd-12ab-34cd-56ef-1234567890ab"

              o //   Amazon   Resource   Name   (ARN)    of    a    KMS    Key
                "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"

              o // KMS Key Alias  "alias/ExampleAlias"

              o //  Amazon  Resource  Name  (ARN)   of   a   KMS   Key   Alias
                "arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias"

              If  you  use a KMS key ID or an alias of your KMS key, the Sage-
              Maker execution role must include permissions  to  call  kms:En-
              crypt  .  If  you don't provide a KMS key ID, SageMaker uses the
              default KMS key for Amazon S3 for your role's account. SageMaker
              uses server-side encryption with KMS-managed keys for OutputDat-
              aConfig . If you use a bucket policy with an  s3:PutObject  per-
              mission  that  only  allows objects with server-side encryption,
              set the  condition  key  of  s3:x-amz-server-side-encryption  to
              "aws:kms"  .  For  more  information, see KMS-Managed Encryption
              Keys in the Amazon Simple Storage Service Developer Guide.

              The KMS key policy must grant permission to the  IAM  role  that
              you  specify in your CreateTrainingJob , CreateTransformJob , or
              CreateHyperParameterTuningJob requests.  For  more  information,
              see  Using Key Policies in Amazon Web Services KMS in the Amazon
              Web Services Key Management Service Developer Guide .

          S3OutputPath -> (string)
              Identifies the S3 path where you want  SageMaker  to  store  the
              model artifacts. For example, s3://bucket-name/key-name-prefix .

          CompressionType -> (string)
              The  model output compression type. Select None to output an un-
              compressed model, recommended for large model outputs.  Defaults
              to gzip.

       ResourceConfig -> (structure)
          Resources,  including  ML  compute instances and ML storage volumes,
          that are configured for model training.

          InstanceType -> (string)
              The ML compute instance type.

              NOTE:
                 SageMaker Training on Amazon Elastic Compute Cloud (EC2) P4de
                 instances is in preview release starting December 9th, 2022.
                     Amazon EC2 P4de instances (currently in preview) are pow-
                     ered by 8 NVIDIA A100  GPUs  with  80GB  high-performance
                     HBM2e  GPU memory, which accelerate the speed of training
                     ML models that need to be trained on  large  datasets  of
                     high-resolution  data.  In  this  preview release, Amazon
                     SageMaker supports ML training  jobs  on  P4de  instances
                     (ml.p4de.24xlarge  )  to  reduce model training time. The
                     ml.p4de.24xlarge instances are available in the following
                     Amazon Web Services Regions.

                 o US East (N. Virginia) (us-east-1)

                 o US West (Oregon) (us-west-2)

                 To  request  quota  limit  increase  and start using P4de in-
                 stances, contact the SageMaker Training service team  through
                 your account team.

          InstanceCount -> (integer)
              The  number  of  ML  compute  instances  to use. For distributed
              training, provide a value greater than 1.

          VolumeSizeInGB -> (integer)
              The size of the ML storage volume that you want to provision.

              ML storage volumes store model artifacts and incremental states.
              Training  algorithms  might  also  use the ML storage volume for
              scratch space. If you want to store the training data in the  ML
              storage  volume, choose File as the TrainingInputMode in the al-
              gorithm specification.

              When using an ML instance with  NVMe  SSD  volumes  ,  SageMaker
              doesn't  provision Amazon EBS General Purpose SSD (gp2) storage.
              Available storage is fixed to the NVMe-type  instance's  storage
              capacity.   SageMaker  configures  storage  paths  for  training
              datasets, checkpoints, model artifacts, and outputs to  use  the
              entire  capacity  of  the  instance storage. For example, ML in-
              stance families with  the  NVMe-type  instance  storage  include
              ml.p4d , ml.g4dn , and ml.g5 .

              When  using  an ML instance with the EBS-only storage option and
              without instance storage, you must define the size of EBS volume
              through  VolumeSizeInGB  in the ResourceConfig API. For example,
              ML instance families that use  EBS  volumes  include  ml.c5  and
              ml.p2 .

              To  look  up instance types and their instance storage types and
              volumes, see Amazon EC2 Instance Types .

              To find the default local paths defined by the SageMaker  train-
              ing  platform, see Amazon SageMaker Training Storage Folders for
              Training Datasets, Checkpoints, Model Artifacts, and Outputs .

          VolumeKmsKeyId -> (string)
              The Amazon Web Services KMS key that SageMaker uses  to  encrypt
              data  on  the  storage  volume  attached  to  the ML compute in-
              stance(s) that run the training job.

              NOTE:
                 Certain Nitro-based instances include local  storage,  depen-
                 dent  on  the  instance  type.  Local storage volumes are en-
                 crypted using a hardware module on the  instance.  You  can't
                 request a VolumeKmsKeyId when using an instance type with lo-
                 cal storage.

                 For a list of instance  types  that  support  local  instance
                 storage, see Instance Store Volumes .

                 For more information about local instance storage encryption,
                 see SSD Instance Store Volumes .

              The VolumeKmsKeyId can be in any of the following formats:

              o // KMS Key ID  "1234abcd-12ab-34cd-56ef-1234567890ab"

              o //   Amazon   Resource   Name   (ARN)    of    a    KMS    Key
                "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"

          InstanceGroups -> (list)
              The configuration of a heterogeneous cluster in JSON format.

              (structure)
                 Defines an instance group for heterogeneous cluster training.
                 When  requesting  a  training job using the CreateTrainingJob
                 API, you can configure multiple instance groups .

                 InstanceType -> (string)
                     Specifies the instance type of the instance group.

                 InstanceCount -> (integer)
                     Specifies the number of instances of the instance group.

                 InstanceGroupName -> (string)
                     Specifies the name of the instance group.

          KeepAlivePeriodInSeconds -> (integer)
              The duration of time in seconds to retain  configured  resources
              in a warm pool for subsequent training jobs.

       VpcConfig -> (structure)
          A VpcConfig object that specifies the VPC that this training job has
          access to. For more information, see Protect Training Jobs by  Using
          an Amazon Virtual Private Cloud .

          SecurityGroupIds -> (list)
              The  VPC  security  group IDs, in the form sg-xxxxxxxx . Specify
              the security groups for the VPC that is specified in the Subnets
              field.

              (string)

          Subnets -> (list)
              The  ID  of  the subnets in the VPC to which you want to connect
              your training job or model. For information about the availabil-
              ity of specific instance types, see Supported Instance Types and
              Availability Zones .

              (string)

       StoppingCondition -> (structure)
          Specifies a limit to how long a model training job can run. It  also
          specifies how long a managed Spot training job has to complete. When
          the job reaches the time limit, SageMaker ends the training job. Use
          this API to cap model training costs.

          To  stop  a  job,  SageMaker sends the algorithm the SIGTERM signal,
          which delays job termination for 120  seconds.  Algorithms  can  use
          this  120-second  window to save the model artifacts, so the results
          of training are not lost.

          MaxRuntimeInSeconds -> (integer)
              The maximum length of time, in seconds, that a training or  com-
              pilation job can run before it is stopped.

              For  compilation  jobs, if the job does not complete during this
              time, a TimeOut error is generated. We recommend  starting  with
              900 seconds and increasing as necessary based on your model.

              For  all  other  jobs,  if the job does not complete during this
              time, SageMaker ends the job. When RetryStrategy is specified in
              the  job request, MaxRuntimeInSeconds specifies the maximum time
              for all of the attempts in total, not each  individual  attempt.
              The default value is 1 day. The maximum value is 28 days.

              The  maximum time that a TrainingJob can run in total, including
              any time spent publishing metrics  or  archiving  and  uploading
              models after it has been stopped, is 30 days.

          MaxWaitTimeInSeconds -> (integer)
              The  maximum  length  of  time,  in seconds, that a managed Spot
              training job has to complete. It is the  amount  of  time  spent
              waiting  for  Spot  capacity plus the amount of time the job can
              run. It must be equal to or greater than  MaxRuntimeInSeconds  .
              If  the  job  does not complete during this time, SageMaker ends
              the job.

              When RetryStrategy is specified in  the  job  request,  MaxWait-
              TimeInSeconds specifies the maximum time for all of the attempts
              in total, not each individual attempt.

          MaxPendingTimeInSeconds -> (integer)
              The maximum length of time, in seconds, that a training or  com-
              pilation job can be pending before it is stopped.

       CreationTime -> (timestamp)
          A timestamp that indicates when the training job was created.

       TrainingStartTime -> (timestamp)
          Indicates  the  time  when  the  training job starts on training in-
          stances. You are billed for the time interval between this time  and
          the  value  of  TrainingEndTime  . The start time in CloudWatch Logs
          might be later than this time. The difference is due to the time  it
          takes  to download the training data and to the size of the training
          container.

       TrainingEndTime -> (timestamp)
          Indicates the time when the training job ends on training instances.
          You  are  billed  for  the time interval between the value of Train-
          ingStartTime and this time. For successful jobs  and  stopped  jobs,
          this  is  the  time  after  model artifacts are uploaded. For failed
          jobs, this is the time when SageMaker detects a job failure.

       LastModifiedTime -> (timestamp)
          A timestamp that indicates when the status of the training  job  was
          last modified.

       SecondaryStatusTransitions -> (list)
          A history of all of the secondary statuses that the training job has
          transitioned through.

          (structure)
              An   array    element    of    SecondaryStatusTransitions    for
              DescribeTrainingJob  .  It  provides  additional details about a
              status that the training job has transitioned through. A  train-
              ing  job can be in one of several states, for example, starting,
              downloading, training, or uploading. Within  each  state,  there
              are  a  number  of  intermediate states. For example, within the
              starting state, SageMaker could be starting the training job  or
              launching  the  ML  instances. These transitional states are re-
              ferred to as the job's secondary status.

              Status -> (string)
                 Contains a secondary status information from a training job.

                 Status might be one of the following secondary statuses:
                     InProgress

                 o Starting - Starting the training job.

                 o Downloading - An optional stage for algorithms that support
                   File  training  input mode. It indicates that data is being
                   downloaded to the ML storage volumes.

                 o Training - Training is in progress.

                 o Uploading - Training is complete and  the  model  artifacts
                   are being uploaded to the S3 location.

                   Completed

                 o Completed - The training job has completed.

                   Failed

                 o Failed  -  The  training job has failed. The reason for the
                   failure is returned in the FailureReason field of Describe-
                   TrainingJobResponse .

                   Stopped

                 o MaxRuntimeExceeded  -  The  job stopped because it exceeded
                   the maximum allowed runtime.

                 o Stopped - The training job has stopped.

                   Stopping

                 o Stopping - Stopping the training job.

                 We no longer support the following secondary statuses:

                 o LaunchingMLInstances

                 o PreparingTrainingStack

                 o DownloadingTrainingImage

              StartTime -> (timestamp)
                 A timestamp that shows when the training job transitioned  to
                 the current secondary status state.

              EndTime -> (timestamp)
                 A timestamp that shows when the training job transitioned out
                 of this secondary status state into another secondary  status
                 state or when the training job has ended.

              StatusMessage -> (string)
                 A  detailed  description  of  the progress within a secondary
                 status.

                 SageMaker provides secondary  statuses  and  status  messages
                 that apply to each of them:
                     Starting

                 o Starting the training job.

                 o Launching requested ML instances.

                 o Insufficient  capacity  error  from EC2 while launching in-
                   stances, retrying!

                 o Launched instance was unhealthy, replacing it!

                 o Preparing the instances for training.

                   Training

                 o Downloading the training image.

                 o Training image download completed. Training in progress.

                 WARNING:
                     Status messages are subject to change. Therefore, we rec-
                     ommend  not  including them in code that programmatically
                     initiates actions. For examples, don't  use  status  mes-
                     sages in if statements.

                 To  have  an  overview  of your training job's progress, view
                 TrainingJobStatus and SecondaryStatus in  DescribeTrainingJob
                 ,  and StatusMessage together. For example, at the start of a
                 training job, you might see the following:

                 o TrainingJobStatus - InProgress

                 o SecondaryStatus - Training

                 o StatusMessage - Downloading the training image

       FinalMetricDataList -> (list)
          A collection of MetricData objects that specify the  names,  values,
          and  dates  and  times that the training algorithm emitted to Amazon
          CloudWatch.

          (structure)
              The name, value, and date and time of a metric that was  emitted
              to Amazon CloudWatch.

              MetricName -> (string)
                 The name of the metric.

              Value -> (float)
                 The value of the metric.

              Timestamp -> (timestamp)
                 The date and time that the algorithm emitted the metric.

       EnableNetworkIsolation -> (boolean)
          If  you  want to allow inbound or outbound network calls, except for
          calls between peers within a training cluster for distributed train-
          ing, choose True . If you enable network isolation for training jobs
          that are configured to use a VPC, SageMaker  downloads  and  uploads
          customer data and model artifacts through the specified VPC, but the
          training container does not have network access.

       EnableInterContainerTrafficEncryption -> (boolean)
          To encrypt all communications between ML compute instances  in  dis-
          tributed  training,  choose True . Encryption provides greater secu-
          rity for distributed training, but training might take  longer.  How
          long it takes depends on the amount of communication between compute
          instances, especially if you use a deep learning algorithms in  dis-
          tributed training.

       EnableManagedSpotTraining -> (boolean)
          A  Boolean indicating whether managed spot training is enabled (True
          ) or not (False ).

       CheckpointConfig -> (structure)
          Contains information about the  output  location  for  managed  spot
          training checkpoint data.

          S3Uri -> (string)
              Identifies  the S3 path where you want SageMaker to store check-
              points. For example, s3://bucket-name/key-name-prefix .

          LocalPath -> (string)
              (Optional) The local directory where  checkpoints  are  written.
              The default directory is /opt/ml/checkpoints/ .

       TrainingTimeInSeconds -> (integer)
          The training time in seconds.

       BillableTimeInSeconds -> (integer)
          The  billable  time in seconds. Billable time refers to the absolute
          wall-clock time.

          Multiply BillableTimeInSeconds by the number of instances (Instance-
          Count ) in your training cluster to get the total compute time Sage-
          Maker bills you if you run distributed training. The formula  is  as
          follows: BillableTimeInSeconds * InstanceCount .

          You can calculate the savings from using managed spot training using
          the formula (1 - BillableTimeInSeconds  /  TrainingTimeInSeconds)  *
          100  .  For  example,  if BillableTimeInSeconds is 100 and Training-
          TimeInSeconds is 500, the savings is 80%.

       DebugHookConfig -> (structure)
          Configuration information for the Amazon SageMaker Debugger hook pa-
          rameters, metric and tensor collections, and storage paths. To learn
          more about how to configure the DebugHookConfig parameter,  see  Use
          the  SageMaker  and Debugger Configuration API Operations to Create,
          Update, and Debug Your Training Job .

          LocalPath -> (string)
              Path to local storage location for metrics and tensors. Defaults
              to /opt/ml/output/tensors/ .

          S3OutputPath -> (string)
              Path to Amazon S3 storage location for metrics and tensors.

          HookParameters -> (map)
              Configuration information for the Amazon SageMaker Debugger hook
              parameters.

              key -> (string)

              value -> (string)

          CollectionConfigurations -> (list)
              Configuration information for Amazon SageMaker  Debugger  tensor
              collections.  To  learn  more about how to configure the Collec-
              tionConfiguration parameter, see Use the SageMaker and  Debugger
              Configuration  API  Operations to Create, Update, and Debug Your
              Training Job .

              (structure)
                 Configuration information for the Amazon  SageMaker  Debugger
                 output tensor collections.

                 CollectionName -> (string)
                     The  name  of  the  tensor  collection.  The name must be
                     unique relative to other rule configuration names.

                 CollectionParameters -> (map)
                     Parameter values for the tensor collection.  The  allowed
                     parameters are "name" , "include_regex" , "reduction_con-
                     fig" , "save_config" , "tensor_names"  ,  and  "save_his-
                     togram" .

                     key -> (string)

                     value -> (string)

       ExperimentConfig -> (structure)
          Associates  a  SageMaker job as a trial component with an experiment
          and trial. Specified when you call the following APIs:

          o CreateProcessingJob

          o CreateTrainingJob

          o CreateTransformJob

          ExperimentName -> (string)
              The name of an existing experiment to associate with  the  trial
              component.

          TrialName -> (string)
              The  name  of an existing trial to associate the trial component
              with. If not specified, a new trial is created.

          TrialComponentDisplayName -> (string)
              The display name for the trial  component.  If  this  key  isn't
              specified, the display name is the trial component name.

          RunName -> (string)
              The  name of the experiment run to associate with the trial com-
              ponent.

       DebugRuleConfigurations -> (list)
          Configuration information for Amazon SageMaker  Debugger  rules  for
          debugging output tensors.

          (structure)
              Configuration  information  for SageMaker Debugger rules for de-
              bugging. To learn more about how to configure the  DebugRuleCon-
              figuration parameter, see Use the SageMaker and Debugger Config-
              uration API Operations to Create, Update, and Debug Your  Train-
              ing Job .

              RuleConfigurationName -> (string)
                 The  name  of the rule configuration. It must be unique rela-
                 tive to other rule configuration names.

              LocalPath -> (string)
                 Path to local storage location for output of rules.  Defaults
                 to /opt/ml/processing/output/rule/ .

              S3OutputPath -> (string)
                 Path to Amazon S3 storage location for rules.

              RuleEvaluatorImage -> (string)
                 The Amazon Elastic Container (ECR) Image for the managed rule
                 evaluation.

              InstanceType -> (string)
                 The instance type to deploy a custom  rule  for  debugging  a
                 training job.

              VolumeSizeInGB -> (integer)
                 The  size,  in  GB,  of the ML storage volume attached to the
                 processing instance.

              RuleParameters -> (map)
                 Runtime configuration for rule container.

                 key -> (string)

                 value -> (string)

       TensorBoardOutputConfig -> (structure)
          Configuration of storage locations for the Amazon SageMaker Debugger
          TensorBoard output data.

          LocalPath -> (string)
              Path  to local storage location for tensorBoard output. Defaults
              to /opt/ml/output/tensorboard .

          S3OutputPath -> (string)
              Path to Amazon S3 storage location for TensorBoard output.

       DebugRuleEvaluationStatuses -> (list)
          Evaluation status of Amazon SageMaker Debugger rules  for  debugging
          on a training job.

          (structure)
              Information about the status of the rule evaluation.

              RuleConfigurationName -> (string)
                 The name of the rule configuration.

              RuleEvaluationJobArn -> (string)
                 The Amazon Resource Name (ARN) of the rule evaluation job.

              RuleEvaluationStatus -> (string)
                 Status of the rule evaluation.

              StatusDetails -> (string)
                 Details from the rule evaluation.

              LastModifiedTime -> (timestamp)
                 Timestamp when the rule evaluation status was last modified.

       ProfilerConfig -> (structure)
          Configuration information for Amazon SageMaker Debugger system moni-
          toring, framework profiling, and storage paths.

          S3OutputPath -> (string)
              Path to Amazon S3 storage location for system and framework met-
              rics.

          ProfilingIntervalInMilliseconds -> (long)
              A  time  interval  for capturing system metrics in milliseconds.
              Available values are 100, 200, 500, 1000  (1  second),  5000  (5
              seconds),  and  60000 (1 minute) milliseconds. The default value
              is 500 milliseconds.

          ProfilingParameters -> (map)
              Configuration  information  for  capturing  framework   metrics.
              Available  key  strings  for different profiling options are De-
              tailedProfilingConfig , PythonProfilingConfig , and  DataLoader-
              ProfilingConfig  .  The following codes are configuration struc-
              tures for the ProfilingParameters parameter. To learn more about
              how  to configure the ProfilingParameters parameter, see Use the
              SageMaker and Debugger Configuration API Operations  to  Create,
              Update, and Debug Your Training Job .

              key -> (string)

              value -> (string)

          DisableProfiler -> (boolean)
              Configuration  to  turn  off  Amazon SageMaker Debugger's system
              monitoring and profiling functionality. To turn it off,  set  to
              True .

       ProfilerRuleConfigurations -> (list)
          Configuration  information  for  Amazon SageMaker Debugger rules for
          profiling system and framework metrics.

          (structure)
              Configuration information for profiling rules.

              RuleConfigurationName -> (string)
                 The name of the rule configuration. It must be  unique  rela-
                 tive to other rule configuration names.

              LocalPath -> (string)
                 Path  to local storage location for output of rules. Defaults
                 to /opt/ml/processing/output/rule/ .

              S3OutputPath -> (string)
                 Path to Amazon S3 storage location for rules.

              RuleEvaluatorImage -> (string)
                 The Amazon Elastic Container Registry Image for  the  managed
                 rule evaluation.

              InstanceType -> (string)
                 The  instance  type  to  deploy a custom rule for profiling a
                 training job.

              VolumeSizeInGB -> (integer)
                 The size, in GB, of the ML storage  volume  attached  to  the
                 processing instance.

              RuleParameters -> (map)
                 Runtime configuration for rule container.

                 key -> (string)

                 value -> (string)

       ProfilerRuleEvaluationStatuses -> (list)
          Evaluation  status  of Amazon SageMaker Debugger rules for profiling
          on a training job.

          (structure)
              Information about the status of the rule evaluation.

              RuleConfigurationName -> (string)
                 The name of the rule configuration.

              RuleEvaluationJobArn -> (string)
                 The Amazon Resource Name (ARN) of the rule evaluation job.

              RuleEvaluationStatus -> (string)
                 Status of the rule evaluation.

              StatusDetails -> (string)
                 Details from the rule evaluation.

              LastModifiedTime -> (timestamp)
                 Timestamp when the rule evaluation status was last modified.

       ProfilingStatus -> (string)
          Profiling status of a training job.

       RetryStrategy -> (structure)
          The number of times to retry the job when the job fails  due  to  an
          InternalServerError .

          MaximumRetryAttempts -> (integer)
              The  number  of times to retry the job. When the job is retried,
              it's SecondaryStatus is changed to STARTING .

       Environment -> (map)
          The environment variables to set in the Docker container.

          key -> (string)

          value -> (string)

       WarmPoolStatus -> (structure)
          The status of the warm pool associated with the training job.

          Status -> (string)
              The status of the warm pool.

              o InUse : The warm pool is in use for the training job.

              o Available : The warm pool is available to reuse for a matching
                training job.

              o Reused  :  The  warm pool moved to a matching training job for
                reuse.

              o Terminated : The warm pool is no longer available. Warm  pools
                are  unavailable  if they are terminated by a user, terminated
                for a patch update, or terminated for exceeding the  specified
                KeepAlivePeriodInSeconds .

          ResourceRetainedBillableTimeInSeconds -> (integer)
              The  billable  time  in  seconds used by the warm pool. Billable
              time refers to the absolute wall-clock time.

              Multiply ResourceRetainedBillableTimeInSeconds by the number  of
              instances  (InstanceCount  ) in your training cluster to get the
              total compute time SageMaker bills you  if  you  run  warm  pool
              training.  The  formula is as follows: ResourceRetainedBillable-
              TimeInSeconds * InstanceCount .

          ReusedByJob -> (string)
              The name of the matching training job that reused the warm pool.

       InfraCheckConfig -> (structure)
          Contains information about the infrastructure health check  configu-
          ration for the training job.

          EnableInfraCheck -> (boolean)
              Enables an infrastructure health check.



                                                       DESCRIBE-TRAINING-JOB()
