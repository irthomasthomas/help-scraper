DESCRIBE-ENDPOINT-CONFIG()                          DESCRIBE-ENDPOINT-CONFIG()



NAME
       describe-endpoint-config -

DESCRIPTION
       Returns  the description of an endpoint configuration created using the
       CreateEndpointConfig API.

       See also: AWS API Documentation

SYNOPSIS
            describe-endpoint-config
          --endpoint-config-name <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --endpoint-config-name (string)
          The name of the endpoint configuration.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       EndpointConfigName -> (string)
          Name of the SageMaker endpoint configuration.

       EndpointConfigArn -> (string)
          The Amazon Resource Name (ARN) of the endpoint configuration.

       ProductionVariants -> (list)
          An  array  of ProductionVariant objects, one for each model that you
          want to host at this endpoint.

          (structure)
              Identifies a model that you want to host and the resources  cho-
              sen to deploy for hosting it. If you are deploying multiple mod-
              els, tell SageMaker how to distribute traffic among  the  models
              by specifying variant weights.

              VariantName -> (string)
                 The name of the production variant.

              ModelName -> (string)
                 The name of the model that you want to host. This is the name
                 that you specified when creating the model.

              InitialInstanceCount -> (integer)
                 Number of instances to launch initially.

              InstanceType -> (string)
                 The ML compute instance type.

              InitialVariantWeight -> (float)
                 Determines initial traffic distribution among all of the mod-
                 els that you specify in the endpoint configuration. The traf-
                 fic to a production variant is determined by the ratio of the
                 VariantWeight  to  the sum of all VariantWeight values across
                 all ProductionVariants. If unspecified, it defaults to 1.0.

              AcceleratorType -> (string)
                 The size of the Elastic Inference (EI) instance  to  use  for
                 the  production  variant.  EI instances provide on-demand GPU
                 computing for inference.  For  more  information,  see  Using
                 Elastic Inference in Amazon SageMaker .

              CoreDumpConfig -> (structure)
                 Specifies  configuration  for a core dump from the model con-
                 tainer when the process crashes.

                 DestinationS3Uri -> (string)
                     The Amazon S3 bucket to send the core dump to.

                 KmsKeyId -> (string)
                     The Amazon Web Services Key  Management  Service  (Amazon
                     Web  Services KMS) key that SageMaker uses to encrypt the
                     core dump data at rest using Amazon  S3  server-side  en-
                     cryption.  The  KmsKeyId can be any of the following for-
                     mats:

                     o // KMS Key ID  "1234abcd-12ab-34cd-56ef-1234567890ab"

                     o //  Amazon  Resource  Name   (ARN)   of   a   KMS   Key
                       "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"

                     o // KMS Key Alias  "alias/ExampleAlias"

                     o // Amazon Resource  Name  (ARN)  of  a  KMS  Key  Alias
                       "arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias"

                     If  you use a KMS key ID or an alias of your KMS key, the
                     SageMaker execution role must include permissions to call
                     kms:Encrypt  .  If  you don't provide a KMS key ID, Sage-
                     Maker uses the default KMS key for  Amazon  S3  for  your
                     role's  account.  SageMaker  uses  server-side encryption
                     with KMS-managed keys for OutputDataConfig . If you use a
                     bucket  policy  with an s3:PutObject permission that only
                     allows objects with server-side encryption, set the  con-
                     dition    key   of   s3:x-amz-server-side-encryption   to
                     "aws:kms" . For more information, see KMS-Managed Encryp-
                     tion  Keys in the Amazon Simple Storage Service Developer
                     Guide.

                     The KMS key policy must grant permission to the IAM  role
                     that  you  specify  in your CreateEndpoint and UpdateEnd-
                     point requests. For more information, see Using Key Poli-
                     cies  in  Amazon  Web Services KMS in the Amazon Web Ser-
                     vices Key Management Service Developer Guide .

              ServerlessConfig -> (structure)
                 The serverless configuration for  an  endpoint.  Specifies  a
                 serverless   endpoint   configuration   instead   of  an  in-
                 stance-based endpoint configuration.

                 MemorySizeInMB -> (integer)
                     The memory size of your serverless endpoint. Valid values
                     are  in  1 GB increments: 1024 MB, 2048 MB, 3072 MB, 4096
                     MB, 5120 MB, or 6144 MB.

                 MaxConcurrency -> (integer)
                     The maximum number of concurrent invocations your server-
                     less endpoint can process.

              VolumeSizeInGB -> (integer)
                 The  size,  in GB, of the ML storage volume attached to indi-
                 vidual inference  instance  associated  with  the  production
                 variant.  Currenly  only  Amazon  EBS gp2 storage volumes are
                 supported.

              ModelDataDownloadTimeoutInSeconds -> (integer)
                 The timeout value, in seconds, to download  and  extract  the
                 model  that you want to host from Amazon S3 to the individual
                 inference instance associated with this production variant.

              ContainerStartupHealthCheckTimeoutInSeconds -> (integer)
                 The timeout value, in seconds, for your  inference  container
                 to  pass health check by SageMaker Hosting. For more informa-
                 tion about health check, see How Your  Container  Should  Re-
                 spond to Health Check (Ping) Requests .

       DataCaptureConfig -> (structure)
          Configuration to control how SageMaker captures inference data.

          EnableCapture -> (boolean)
              Whether  data capture should be enabled or disabled (defaults to
              enabled).

          InitialSamplingPercentage -> (integer)
              The percentage of requests SageMaker will capture. A lower value
              is recommended for Endpoints with high traffic.

          DestinationS3Uri -> (string)
              The Amazon S3 location used to capture the data.

          KmsKeyId -> (string)
              The Amazon Resource Name (ARN) of a Amazon Web Services Key Man-
              agement Service key that SageMaker uses to encrypt the  captured
              data at rest using Amazon S3 server-side encryption.

              The KmsKeyId can be any of the following formats:

              o Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab

              o Key                                                       ARN:
                arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab

              o Alias name: alias/ExampleAlias

              o Alias name ARN: arn:aws:kms:us-west-2:111122223333:alias/Exam-
                pleAlias

          CaptureOptions -> (list)
              Specifies data Model Monitor will  capture.  You  can  configure
              whether to collect only input, only output, or both

              (structure)
                 Specifies data Model Monitor will capture.

                 CaptureMode -> (string)
                     Specify the boundary of data to capture.

          CaptureContentTypeHeader -> (structure)
              Configuration  specifying  how to treat different headers. If no
              headers are specified SageMaker will by  default  base64  encode
              when capturing the data.

              CsvContentTypes -> (list)
                 The  list  of  all  content  type headers that SageMaker will
                 treat as CSV and capture accordingly.

                 (string)

              JsonContentTypes -> (list)
                 The list of all content  type  headers  that  SageMaker  will
                 treat as JSON and capture accordingly.

                 (string)

       KmsKeyId -> (string)
          Amazon Web Services KMS key ID Amazon SageMaker uses to encrypt data
          when storing it on the ML storage volume attached to the instance.

       CreationTime -> (timestamp)
          A timestamp that shows when the endpoint configuration was created.

       AsyncInferenceConfig -> (structure)
          Returns the description of an endpoint configuration  created  using
          the                      `                      CreateEndpointConfig
          https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateEndpointConfig.html`__
          API.

          ClientConfig -> (structure)
              Configures  the  behavior of the client used by SageMaker to in-
              teract with the model container during asynchronous inference.

              MaxConcurrentInvocationsPerInstance -> (integer)
                 The maximum number of concurrent requests sent by  the  Sage-
                 Maker client to the model container. If no value is provided,
                 SageMaker chooses an optimal value.

          OutputConfig -> (structure)
              Specifies the configuration for asynchronous  inference  invoca-
              tion outputs.

              KmsKeyId -> (string)
                 The  Amazon  Web  Services Key Management Service (Amazon Web
                 Services KMS) key that SageMaker uses to  encrypt  the  asyn-
                 chronous inference output in Amazon S3.

              S3OutputPath -> (string)
                 The Amazon S3 location to upload inference responses to.

              NotificationConfig -> (structure)
                 Specifies  the  configuration  for notifications of inference
                 results for asynchronous inference.

                 SuccessTopic -> (string)
                     Amazon SNS topic to post a notification to when inference
                     completes successfully. If no topic is provided, no noti-
                     fication is sent on success.

                 ErrorTopic -> (string)
                     Amazon SNS topic to post a notification to when inference
                     fails.  If  no topic is provided, no notification is sent
                     on failure.

       ExplainerConfig -> (structure)
          The configuration parameters for an explainer.

          ClarifyExplainerConfig -> (structure)
              A member of ExplainerConfig that contains configuration  parame-
              ters for the SageMaker Clarify explainer.

              EnableExplanations -> (string)
                 A JMESPath boolean expression used to filter which records to
                 explain. Explanations are activated by default. See ` Enable-
                 Explanations
                 https://docs.aws.amazon.com/sagemaker/latest/dg/clarify-online-explainability-create-endpoint.html#clarify-online-explainability-create-endpoint-enable`__
                 for additional information.

              InferenceConfig -> (structure)
                 The  inference  configuration  parameter  for  the model con-
                 tainer.

                 FeaturesAttribute -> (string)
                     Provides the JMESPath expression to extract the  features
                     from  a  model  container input in JSON Lines format. For
                     example, if FeaturesAttribute is the JMESPath  expression
                     'myfeatures'  ,  it  extracts  a list of features [1,2,3]
                     from request data '{"myfeatures":[1,2,3]}' .

                 ContentTemplate -> (string)
                     A template string used to format a JSON  record  into  an
                     acceptable model container input. For example, a Content-
                     Template string '{"myfeatures":$features}' will format  a
                     list of features [1,2,3] into the record string '{"myfea-
                     tures":[1,2,3]}' . Required only when the model container
                     input is in JSON Lines format.

                 MaxRecordCount -> (integer)
                     The maximum number of records in a request that the model
                     container can process when querying the  model  container
                     for  the predictions of a synthetic dataset . A record is
                     a unit of input data that inference can be made  on,  for
                     example,  a single line in CSV data. If MaxRecordCount is
                     1 , the model container expects one record per request. A
                     value  of 2 or greater means that the model expects batch
                     requests, which can reduce overhead and speed up the  in-
                     ferencing process. If this parameter is not provided, the
                     explainer will tune the record count per request  accord-
                     ing to the model container's capacity at runtime.

                 MaxPayloadInMB -> (integer)
                     The  maximum  payload size (MB) allowed of a request from
                     the explainer to the model container. Defaults to 6 MB.

                 ProbabilityIndex -> (integer)
                     A zero-based index used to extract  a  probability  value
                     (score)  or  list from model container output in CSV for-
                     mat. If this value is not provided, the entire model con-
                     tainer  output  will  be  treated  as a probability value
                     (score) or list.
                        Example for a single class model: If  the  model  con-
                        tainer  output  consists of a string-formatted predic-
                        tion label followed by its probability: '1,0.6' ,  set
                        ProbabilityIndex  to 1 to select the probability value
                        0.6 .

                        Example for a multiclass model: If the model container
                        output consists of a string-formatted prediction label
                        followed         by          its          probability:
                        '"[\'cat\',\'dog\',\'fish\']","[0.1,0.6,0.3]"'  ,  set
                        ProbabilityIndex to 1 to select the probability values
                        [0.1,0.6,0.3] .

                 LabelIndex -> (integer)
                     A zero-based index used to extract a label header or list
                     of label headers from model container output in CSV  for-
                     mat.
                        Example for a multiclass model: If the model container
                        output consists of label headers followed by probabil-
                        ities:  '"[\'cat\',\'dog\',\'fish\']","[0.1,0.6,0.3]"'
                        , set LabelIndex to 0  to  select  the  label  headers
                        ['cat','dog','fish'] .

                 ProbabilityAttribute -> (string)
                     A JMESPath expression used to extract the probability (or
                     score) from the model container output if the model  con-
                     tainer is in JSON Lines format.
                        Example  :  If  the model container output of a single
                        request is '{"predicted_label":1,"probability":0.6}' ,
                        then set ProbabilityAttribute to 'probability' .

                 LabelAttribute -> (string)
                     A  JMESPath  expression  used to locate the list of label
                     headers in the model container output.
                        Example : If the model container output of a batch re-
                        quest   is  '{"labels":["cat","dog","fish"],"probabil-
                        ity":[0.6,0.3,0.1]}' , then set LabelAttribute to 'la-
                        bels'   to   extract   the   list   of  label  headers
                        ["cat","dog","fish"]

                 LabelHeaders -> (list)
                     For multiclass classification problems, the label headers
                     are the names of the classes. Otherwise, the label header
                     is the name of the predicted label.  These  are  used  to
                     help  readability  for  the  output of the InvokeEndpoint
                     API. See the response section under Invoke  the  endpoint
                     in the Developer Guide for more information. If there are
                     no label headers in the model container  output,  provide
                     them manually using this parameter.

                     (string)

                 FeatureHeaders -> (list)
                     The  names  of  the  features. If provided, these are in-
                     cluded in the endpoint response payload to help readabil-
                     ity  of  the InvokeEndpoint output. See the Response sec-
                     tion under Invoke the endpoint in the Developer Guide for
                     more information.

                     (string)

                 FeatureTypes -> (list)
                     A list of data types of the features (optional). Applica-
                     ble only to NLP explainability. If provided, FeatureTypes
                     must  have  at  least  one  'text'  string  (for example,
                     ['text'] ). If FeatureTypes  is  not  provided,  the  ex-
                     plainer  infers  the  feature types based on the baseline
                     data. The feature types are included in the endpoint  re-
                     sponse   payload.  For  additional  information  see  the
                     response section under Invoke the endpoint in the  Devel-
                     oper Guide for more information.

                     (string)

              ShapConfig -> (structure)
                 The configuration for SHAP analysis.

                 ShapBaselineConfig -> (structure)
                     The  configuration  for  the  SHAP baseline of the Kernal
                     SHAP algorithm.

                     MimeType -> (string)
                        The MIME  type  of  the  baseline  data.  Choose  from
                        'text/csv'  or  'application/jsonlines'  . Defaults to
                        'text/csv' .

                     ShapBaseline -> (string)
                        The inline SHAP baseline data in string format.  Shap-
                        Baseline  can  have one or multiple records to be used
                        as the baseline dataset. The format of the SHAP  base-
                        line  file  should  be the same format as the training
                        dataset. For example, if the training  dataset  is  in
                        CSV format and each record contains four features, and
                        all features are numerical, then  the  format  of  the
                        baseline data should also share these characteristics.
                        For natural language processing (NLP) of text columns,
                        the baseline value should be the value used to replace
                        the unit of text specified by the Granularity  of  the
                        TextConfig  parameter.  The size limit for ShapBasline
                        is 4 KB. Use the ShapBaselineUri parameter if you want
                        to provide more than 4 KB of baseline data.

                     ShapBaselineUri -> (string)
                        The uniform resource identifier (URI) of the S3 bucket
                        where the SHAP baseline file is stored. The format  of
                        the  SHAP  baseline  file should be the same format as
                        the format of the training dataset.  For  example,  if
                        the training dataset is in CSV format, and each record
                        in the training dataset has  four  features,  and  all
                        features  are numerical, then the baseline file should
                        also have this same format. Each record should contain
                        only  the features. If you are using a virtual private
                        cloud (VPC), the ShapBaselineUri should be  accessible
                        to the VPC. For more information about setting up end-
                        points with Amazon Virtual  Private  Cloud,  see  Give
                        SageMaker  access  to Resources in your Amazon Virtual
                        Private Cloud .

                 NumberOfSamples -> (integer)
                     The number of samples to be used for analysis by the Ker-
                     nal SHAP algorithm.

                     NOTE:
                        The  number of samples determines the size of the syn-
                        thetic dataset, which has an impact on latency of  ex-
                        plainability  requests.  For more information, see the
                        Synthetic data of Configure and create an endpoint .

                 UseLogit -> (boolean)
                     A Boolean toggle to indicate if you want to use the logit
                     function  (true) or log-odds units (false) for model pre-
                     dictions. Defaults to false.

                 Seed -> (integer)
                     The starting value used to initialize the  random  number
                     generator  in the explainer. Provide a value for this pa-
                     rameter to obtain a deterministic SHAP result.

                 TextConfig -> (structure)
                     A parameter that indicates if text features  are  treated
                     as  text  and  explanations  are  provided for individual
                     units of text. Required for natural  language  processing
                     (NLP) explainability only.

                     Language -> (string)
                        Specifies the language of the text features in
                        `ISO 639-1 < https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes>`__
                         or ISO 639-3 code of a supported language.

                        NOTE:
                            For a mix of multiple languages, use code 'xx' .

                     Granularity -> (string)
                        The  unit of granularity for the analysis of text fea-
                        tures. For example, if the unit is 'token' , then each
                        token  (like a word in English) of the text is treated
                        as a  feature.  SHAP  values  are  computed  for  each
                        unit/feature.

       ShadowProductionVariants -> (list)
          An  array  of ProductionVariant objects, one for each model that you
          want to host at this endpoint in shadow mode with production traffic
          replicated from the model specified on ProductionVariants .

          (structure)
              Identifies  a model that you want to host and the resources cho-
              sen to deploy for hosting it. If you are deploying multiple mod-
              els,  tell  SageMaker how to distribute traffic among the models
              by specifying variant weights.

              VariantName -> (string)
                 The name of the production variant.

              ModelName -> (string)
                 The name of the model that you want to host. This is the name
                 that you specified when creating the model.

              InitialInstanceCount -> (integer)
                 Number of instances to launch initially.

              InstanceType -> (string)
                 The ML compute instance type.

              InitialVariantWeight -> (float)
                 Determines initial traffic distribution among all of the mod-
                 els that you specify in the endpoint configuration. The traf-
                 fic to a production variant is determined by the ratio of the
                 VariantWeight to the sum of all VariantWeight  values  across
                 all ProductionVariants. If unspecified, it defaults to 1.0.

              AcceleratorType -> (string)
                 The  size  of  the Elastic Inference (EI) instance to use for
                 the production variant. EI instances  provide  on-demand  GPU
                 computing  for  inference.  For  more  information, see Using
                 Elastic Inference in Amazon SageMaker .

              CoreDumpConfig -> (structure)
                 Specifies configuration for a core dump from the  model  con-
                 tainer when the process crashes.

                 DestinationS3Uri -> (string)
                     The Amazon S3 bucket to send the core dump to.

                 KmsKeyId -> (string)
                     The  Amazon  Web  Services Key Management Service (Amazon
                     Web Services KMS) key that SageMaker uses to encrypt  the
                     core  dump  data  at rest using Amazon S3 server-side en-
                     cryption. The KmsKeyId can be any of the  following  for-
                     mats:

                     o // KMS Key ID  "1234abcd-12ab-34cd-56ef-1234567890ab"

                     o //   Amazon   Resource   Name   (ARN)   of  a  KMS  Key
                       "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"

                     o // KMS Key Alias  "alias/ExampleAlias"

                     o //  Amazon  Resource  Name  (ARN)  of  a  KMS Key Alias
                       "arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias"

                     If you use a KMS key ID or an alias of your KMS key,  the
                     SageMaker execution role must include permissions to call
                     kms:Encrypt . If you don't provide a KMS  key  ID,  Sage-
                     Maker  uses  the  default  KMS key for Amazon S3 for your
                     role's account.  SageMaker  uses  server-side  encryption
                     with KMS-managed keys for OutputDataConfig . If you use a
                     bucket policy with an s3:PutObject permission  that  only
                     allows  objects with server-side encryption, set the con-
                     dition   key   of   s3:x-amz-server-side-encryption    to
                     "aws:kms" . For more information, see KMS-Managed Encryp-
                     tion Keys in the Amazon Simple Storage Service  Developer
                     Guide.

                     The  KMS key policy must grant permission to the IAM role
                     that you specify in your  CreateEndpoint  and  UpdateEnd-
                     point requests. For more information, see Using Key Poli-
                     cies in Amazon Web Services KMS in the  Amazon  Web  Ser-
                     vices Key Management Service Developer Guide .

              ServerlessConfig -> (structure)
                 The  serverless  configuration  for  an endpoint. Specifies a
                 serverless  endpoint  configuration   instead   of   an   in-
                 stance-based endpoint configuration.

                 MemorySizeInMB -> (integer)
                     The memory size of your serverless endpoint. Valid values
                     are in 1 GB increments: 1024 MB, 2048 MB, 3072  MB,  4096
                     MB, 5120 MB, or 6144 MB.

                 MaxConcurrency -> (integer)
                     The maximum number of concurrent invocations your server-
                     less endpoint can process.

              VolumeSizeInGB -> (integer)
                 The size, in GB, of the ML storage volume attached  to  indi-
                 vidual  inference  instance  associated  with  the production
                 variant. Currenly only Amazon EBS  gp2  storage  volumes  are
                 supported.

              ModelDataDownloadTimeoutInSeconds -> (integer)
                 The  timeout  value,  in seconds, to download and extract the
                 model that you want to host from Amazon S3 to the  individual
                 inference instance associated with this production variant.

              ContainerStartupHealthCheckTimeoutInSeconds -> (integer)
                 The  timeout  value, in seconds, for your inference container
                 to pass health check by SageMaker Hosting. For more  informa-
                 tion  about  health  check, see How Your Container Should Re-
                 spond to Health Check (Ping) Requests .

DOCUTILS SYSTEM MESSAGES
       System Message: ERROR/3 (<string>:)
              Anonymous hyperlink mismatch: 1 references but 0  targets.   See
              "backrefs" attribute for IDs.



                                                    DESCRIBE-ENDPOINT-CONFIG()
