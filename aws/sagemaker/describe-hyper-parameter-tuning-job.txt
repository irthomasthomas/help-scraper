DESCRIBE-HYPER-PARAMETER-TUNING-JOB()    DESCRIBE-HYPER-PARAMETER-TUNING-JOB()



NAME
       describe-hyper-parameter-tuning-job -

DESCRIPTION
       Returns  a description of a hyperparameter tuning job, depending on the
       fields selected. These fields can include  the  name,  Amazon  Resource
       Name (ARN), job status of your tuning job and more.

       See also: AWS API Documentation

SYNOPSIS
            describe-hyper-parameter-tuning-job
          --hyper-parameter-tuning-job-name <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --hyper-parameter-tuning-job-name (string)
          The name of the tuning job.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       HyperParameterTuningJobName -> (string)
          The name of the hyperparameter tuning job.

       HyperParameterTuningJobArn -> (string)
          The Amazon Resource Name (ARN) of the tuning job.

       HyperParameterTuningJobConfig -> (structure)
          The HyperParameterTuningJobConfig object that specifies the configu-
          ration of the tuning job.

          Strategy -> (string)
              Specifies how hyperparameter tuning chooses the combinations  of
              hyperparameter  values  to use for the training job it launches.
              For information about search strategies, see How  Hyperparameter
              Tuning Works .

          StrategyConfig -> (structure)
              The  configuration for the Hyperband optimization strategy. This
              parameter should be provided only if Hyperband  is  selected  as
              the strategy for HyperParameterTuningJobConfig .

              HyperbandStrategyConfig -> (structure)
                 The configuration for the object that specifies the Hyperband
                 strategy. This parameter is only supported for the  Hyperband
                 selection for Strategy within the HyperParameterTuningJobCon-
                 fig API.

                 MinResource -> (integer)
                     The minimum number of resources (such as epochs) that can
                     be  used  by  a training job launched by a hyperparameter
                     tuning job. If the value for  MinResource  has  not  been
                     reached, the training job is not stopped by Hyperband .

                 MaxResource -> (integer)
                     The maximum number of resources (such as epochs) that can
                     be used by a training job launched  by  a  hyperparameter
                     tuning  job. Once a job reaches the MaxResource value, it
                     is stopped. If a value for MaxResource is  not  provided,
                     and  Hyperband  is  selected as the hyperparameter tuning
                     strategy, HyperbandTraining attempts to infer MaxResource
                     from    the    following    keys    (if    present)    in
                     StaticsHyperParameters :

                     o epochs

                     o numepochs

                     o n-epochs

                     o n_epochs

                     o num_epochs

                     If HyperbandStrategyConfig is unable to infer a value for
                     MaxResource  , it generates a validation error. The maxi-
                     mum value is 20,000 epochs. All metrics  that  correspond
                     to  an objective metric are used to derive early stopping
                     decisions . For distributed training  jobs,  ensure  that
                     duplicate  metrics are not printed in the logs across the
                     individual nodes in a training job. If multiple nodes are
                     publishing  duplicate or incorrect metrics, training jobs
                     may make an incorrect stopping decision and stop the  job
                     prematurely.

          HyperParameterTuningJobObjective -> (structure)
              The  HyperParameterTuningJobObjective  specifies  the  objective
              metric  used  to  evaluate  the  performance  of  training  jobs
              launched by this tuning job.

              Type -> (string)
                 Whether to minimize or maximize the objective metric.

              MetricName -> (string)
                 The name of the metric to use for the objective metric.

          ResourceLimits -> (structure)
              The  ResourceLimits  object that specifies the maximum number of
              training and parallel training jobs that can be  used  for  this
              hyperparameter tuning job.

              MaxNumberOfTrainingJobs -> (integer)
                 The  maximum  number  of  training jobs that a hyperparameter
                 tuning job can launch.

              MaxParallelTrainingJobs -> (integer)
                 The maximum number of concurrent training jobs that a  hyper-
                 parameter tuning job can launch.

              MaxRuntimeInSeconds -> (integer)
                 The  maximum time in seconds that a hyperparameter tuning job
                 can run.

          ParameterRanges -> (structure)
              The ParameterRanges object that specifies the ranges of hyperpa-
              rameters  that this tuning job searches over to find the optimal
              configuration for the highest  model  performance  against  your
              chosen objective metric.

              IntegerParameterRanges -> (list)
                 The  array  of  IntegerParameterRange  objects  that  specify
                 ranges of integer hyperparameters that a hyperparameter  tun-
                 ing job searches.

                 (structure)
                     For  a  hyperparameter of the integer type, specifies the
                     range that a hyperparameter tuning job searches.

                     Name -> (string)
                        The name of the hyperparameter to search.

                     MinValue -> (string)
                        The minimum value of the hyperparameter to search.

                     MaxValue -> (string)
                        The maximum value of the hyperparameter to search.

                     ScalingType -> (string)
                        The scale that hyperparameter tuning  uses  to  search
                        the hyperparameter range. For information about choos-
                        ing a hyperparameter scale, see Hyperparameter Scaling
                        . One of the following values:
                            Auto

                        SageMaker hyperparameter tuning chooses the best scale
                        for the hyperparameter.
                            Linear

                        Hyperparameter tuning searches the values in  the  hy-
                        perparameter range by using a linear scale.
                            Logarithmic

                        Hyperparameter  tuning  searches the values in the hy-
                        perparameter range by using a logarithmic scale.

                        Logarithmic scaling works only for  ranges  that  have
                        only values greater than 0.

              ContinuousParameterRanges -> (list)
                 The  array  of  ContinuousParameterRange objects that specify
                 ranges of continuous hyperparameters  that  a  hyperparameter
                 tuning job searches.

                 (structure)
                     A list of continuous hyperparameters to tune.

                     Name -> (string)
                        The name of the continuous hyperparameter to tune.

                     MinValue -> (string)
                        The  minimum  value for the hyperparameter. The tuning
                        job uses floating-point values between this value  and
                        MaxValue for tuning.

                     MaxValue -> (string)
                        The  maximum  value for the hyperparameter. The tuning
                        job uses floating-point values between MinValue  value
                        and this value for tuning.

                     ScalingType -> (string)
                        The  scale  that  hyperparameter tuning uses to search
                        the hyperparameter range. For information about choos-
                        ing a hyperparameter scale, see Hyperparameter Scaling
                        . One of the following values:
                            Auto

                        SageMaker hyperparameter tuning chooses the best scale
                        for the hyperparameter.
                            Linear

                        Hyperparameter  tuning  searches the values in the hy-
                        perparameter range by using a linear scale.
                            Logarithmic

                        Hyperparameter tuning searches the values in  the  hy-
                        perparameter range by using a logarithmic scale.

                        Logarithmic  scaling  works  only for ranges that have
                        only values greater than 0.
                            ReverseLogarithmic

                        Hyperparameter tuning searches the values in  the  hy-
                        perparameter  range  by  using  a  reverse logarithmic
                        scale.

                        Reverse logarithmic scaling works only for ranges that
                        are entirely within the range 0<=x<1.0.

              CategoricalParameterRanges -> (list)
                 The  array  of CategoricalParameterRange objects that specify
                 ranges of categorical hyperparameters that  a  hyperparameter
                 tuning job searches.

                 (structure)
                     A list of categorical hyperparameters to tune.

                     Name -> (string)
                        The name of the categorical hyperparameter to tune.

                     Values -> (list)
                        A list of the categories for the hyperparameter.

                        (string)

              AutoParameters -> (list)
                 A  list containing hyperparameter names and example values to
                 be used by Autotune to determine optimal ranges for your tun-
                 ing job.

                 (structure)
                     The  name and an example value of the hyperparameter that
                     you want to use in Autotune. If  Automatic  model  tuning
                     (AMT) determines that your hyperparameter is eligible for
                     Autotune, an optimal hyperparameter range is selected for
                     you.

                     Name -> (string)
                        The name of the hyperparameter to optimize using Auto-
                        tune.

                     ValueHint -> (string)
                        An example value of the hyperparameter to optimize us-
                        ing Autotune.

          TrainingJobEarlyStoppingType -> (string)
              Specifies  whether  to  use  early  stopping  for  training jobs
              launched by the hyperparameter tuning job. Because the Hyperband
              strategy has its own advanced internal early stopping mechanism,
              TrainingJobEarlyStoppingType must be OFF to use Hyperband . This
              parameter  can  take on one of the following values (the default
              value is OFF ):
                 OFF

              Training jobs launched by the hyperparameter tuning job  do  not
              use early stopping.
                 AUTO

              SageMaker  stops  training  jobs  launched by the hyperparameter
              tuning job when they are unlikely to perform better than  previ-
              ously  completed  training  jobs. For more information, see Stop
              Training Jobs Early .

          TuningJobCompletionCriteria -> (structure)
              The tuning job's completion criteria.

              TargetObjectiveMetricValue -> (float)
                 The value of the objective metric.

              BestObjectiveNotImproving -> (structure)
                 A flag to stop your hyperparameter tuning job if  model  per-
                 formance  fails  to improve as evaluated against an objective
                 function.

                 MaxNumberOfTrainingJobsNotImproving -> (integer)
                     The number of training jobs that have failed  to  improve
                     model  performance  by  1% or greater over prior training
                     jobs as evaluated against an objective function.

              ConvergenceDetected -> (structure)
                 A flag to top your hyperparameter  tuning  job  if  automatic
                 model tuning (AMT) has detected that your model has converged
                 as evaluated against your objective function.

                 CompleteOnConvergence -> (string)
                     A flag to stop a tuning job once AMT  has  detected  that
                     the job has converged.

          RandomSeed -> (integer)
              A  value  used  to  initialize a pseudo-random number generator.
              Setting a random seed and using the same seed later for the same
              tuning job will allow hyperparameter optimization to find more a
              consistent hyperparameter configuration between the two runs.

       TrainingJobDefinition -> (structure)
          The HyperParameterTrainingJobDefinition object  that  specifies  the
          definition of the training jobs that this tuning job launches.

          DefinitionName -> (string)
              The job definition name.

          TuningObjective -> (structure)
              Defines  the  objective  metric for a hyperparameter tuning job.
              Hyperparameter tuning uses the value of this metric to  evaluate
              the training jobs it launches, and returns the training job that
              results in either the highest or lowest value for  this  metric,
              depending  on  the  value you specify for the Type parameter. If
              you want to define a custom objective metric, see Define metrics
              and environment variables .

              Type -> (string)
                 Whether to minimize or maximize the objective metric.

              MetricName -> (string)
                 The name of the metric to use for the objective metric.

          HyperParameterRanges -> (structure)
              Specifies  ranges of integer, continuous, and categorical hyper-
              parameters that a hyperparameter tuning job searches. The hyper-
              parameter  tuning job launches training jobs with hyperparameter
              values within these ranges to find  the  combination  of  values
              that  result  in  the  training job with the best performance as
              measured by the objective metric of  the  hyperparameter  tuning
              job.

              NOTE:
                 The  maximum  number  of  items  specified  for Array Members
                 refers to the maximum  number  of  hyperparameters  for  each
                 range  and also the maximum for the hyperparameter tuning job
                 itself. That is, the sum of the number of hyperparameters for
                 all the ranges can't exceed the maximum number specified.

              IntegerParameterRanges -> (list)
                 The  array  of  IntegerParameterRange  objects  that  specify
                 ranges of integer hyperparameters that a hyperparameter  tun-
                 ing job searches.

                 (structure)
                     For  a  hyperparameter of the integer type, specifies the
                     range that a hyperparameter tuning job searches.

                     Name -> (string)
                        The name of the hyperparameter to search.

                     MinValue -> (string)
                        The minimum value of the hyperparameter to search.

                     MaxValue -> (string)
                        The maximum value of the hyperparameter to search.

                     ScalingType -> (string)
                        The scale that hyperparameter tuning  uses  to  search
                        the hyperparameter range. For information about choos-
                        ing a hyperparameter scale, see Hyperparameter Scaling
                        . One of the following values:
                            Auto

                        SageMaker hyperparameter tuning chooses the best scale
                        for the hyperparameter.
                            Linear

                        Hyperparameter tuning searches the values in  the  hy-
                        perparameter range by using a linear scale.
                            Logarithmic

                        Hyperparameter  tuning  searches the values in the hy-
                        perparameter range by using a logarithmic scale.

                        Logarithmic scaling works only for  ranges  that  have
                        only values greater than 0.

              ContinuousParameterRanges -> (list)
                 The  array  of  ContinuousParameterRange objects that specify
                 ranges of continuous hyperparameters  that  a  hyperparameter
                 tuning job searches.

                 (structure)
                     A list of continuous hyperparameters to tune.

                     Name -> (string)
                        The name of the continuous hyperparameter to tune.

                     MinValue -> (string)
                        The  minimum  value for the hyperparameter. The tuning
                        job uses floating-point values between this value  and
                        MaxValue for tuning.

                     MaxValue -> (string)
                        The  maximum  value for the hyperparameter. The tuning
                        job uses floating-point values between MinValue  value
                        and this value for tuning.

                     ScalingType -> (string)
                        The  scale  that  hyperparameter tuning uses to search
                        the hyperparameter range. For information about choos-
                        ing a hyperparameter scale, see Hyperparameter Scaling
                        . One of the following values:
                            Auto

                        SageMaker hyperparameter tuning chooses the best scale
                        for the hyperparameter.
                            Linear

                        Hyperparameter  tuning  searches the values in the hy-
                        perparameter range by using a linear scale.
                            Logarithmic

                        Hyperparameter tuning searches the values in  the  hy-
                        perparameter range by using a logarithmic scale.

                        Logarithmic  scaling  works  only for ranges that have
                        only values greater than 0.
                            ReverseLogarithmic

                        Hyperparameter tuning searches the values in  the  hy-
                        perparameter  range  by  using  a  reverse logarithmic
                        scale.

                        Reverse logarithmic scaling works only for ranges that
                        are entirely within the range 0<=x<1.0.

              CategoricalParameterRanges -> (list)
                 The  array  of CategoricalParameterRange objects that specify
                 ranges of categorical hyperparameters that  a  hyperparameter
                 tuning job searches.

                 (structure)
                     A list of categorical hyperparameters to tune.

                     Name -> (string)
                        The name of the categorical hyperparameter to tune.

                     Values -> (list)
                        A list of the categories for the hyperparameter.

                        (string)

              AutoParameters -> (list)
                 A  list containing hyperparameter names and example values to
                 be used by Autotune to determine optimal ranges for your tun-
                 ing job.

                 (structure)
                     The  name and an example value of the hyperparameter that
                     you want to use in Autotune. If  Automatic  model  tuning
                     (AMT) determines that your hyperparameter is eligible for
                     Autotune, an optimal hyperparameter range is selected for
                     you.

                     Name -> (string)
                        The name of the hyperparameter to optimize using Auto-
                        tune.

                     ValueHint -> (string)
                        An example value of the hyperparameter to optimize us-
                        ing Autotune.

          StaticHyperParameters -> (map)
              Specifies  the  values of hyperparameters that do not change for
              the tuning job.

              key -> (string)

              value -> (string)

          AlgorithmSpecification -> (structure)
              The HyperParameterAlgorithmSpecification object  that  specifies
              the  resource  algorithm  to  use for the training jobs that the
              tuning job launches.

              TrainingImage -> (string)
                 The registry path of  the  Docker  image  that  contains  the
                 training  algorithm.  For  information  about Docker registry
                 paths for built-in algorithms,  see  Algorithms  Provided  by
                 Amazon SageMaker: Common Parameters . SageMaker supports both
                 registry/repository[:tag]  and   registry/repository[@digest]
                 image  path formats. For more information, see Using Your Own
                 Algorithms with Amazon SageMaker .

              TrainingInputMode -> (string)
                 The training input mode that the algorithm supports. For more
                 information about input modes, see Algorithms .
                     Pipe mode

                 If  an algorithm supports Pipe mode, Amazon SageMaker streams
                 data directly from Amazon S3 to the container.
                     File mode

                 If an algorithm supports File mode, SageMaker  downloads  the
                 training  data  from S3 to the provisioned ML storage volume,
                 and mounts the directory to the Docker volume for the  train-
                 ing container.

                 You  must provision the ML storage volume with sufficient ca-
                 pacity to accommodate the data downloaded from S3.  In  addi-
                 tion  to the training data, the ML storage volume also stores
                 the output model. The algorithm container uses the ML storage
                 volume to also store intermediate information, if any.

                 For distributed algorithms, training data is distributed uni-
                 formly. Your training duration is predictable  if  the  input
                 data objects sizes are approximately the same. SageMaker does
                 not split the files any further for model  training.  If  the
                 object  sizes  are  skewed,  training won't be optimal as the
                 data distribution is also skewed when one host in a  training
                 cluster  is  overloaded, thus becoming a bottleneck in train-
                 ing.
                     FastFile mode

                 If an algorithm supports  FastFile  mode,  SageMaker  streams
                 data  directly from S3 to the container with no code changes,
                 and provides file system access to the data. Users can author
                 their training script to interact with these files as if they
                 were stored on disk.
                     FastFile mode works best when the data  is  read  sequen-
                     tially.  Augmented  manifest  files aren't supported. The
                     startup time is lower when there are fewer files  in  the
                     S3 bucket provided.

              AlgorithmName -> (string)
                 The name of the resource algorithm to use for the hyperparam-
                 eter tuning job. If you specify a value for  this  parameter,
                 do not specify a value for TrainingImage .

              MetricDefinitions -> (list)
                 An array of MetricDefinition objects that specify the metrics
                 that the algorithm emits.

                 (structure)
                     Specifies a metric that the training algorithm writes  to
                     stderr  or stdout . You can view these logs to understand
                     how your training job performs and check for  any  errors
                     encountered  during  training.  SageMaker  hyperparameter
                     tuning captures all defined metrics. Specify one  of  the
                     defined  metrics  to use as an objective metric using the
                     TuningObjective  parameter  in  the  HyperParameterTrain-
                     ingJobDefinition  API  to evaluate job performance during
                     hyperparameter tuning.

                     Name -> (string)
                        The name of the metric.

                     Regex -> (string)
                        A regular expression that searches  the  output  of  a
                        training  job  and  gets  the value of the metric. For
                        more information about using  regular  expressions  to
                        define  metrics,  see Defining metrics and environment
                        variables .

          RoleArn -> (string)
              The Amazon Resource Name (ARN) of the IAM role  associated  with
              the training jobs that the tuning job launches.

          InputDataConfig -> (list)
              An  array  of  Channel  objects  that  specify the input for the
              training jobs that the tuning job launches.

              (structure)
                 A channel is a named input source  that  training  algorithms
                 can consume.

                 ChannelName -> (string)
                     The name of the channel.

                 DataSource -> (structure)
                     The location of the channel data.

                     S3DataSource -> (structure)
                        The  S3 location of the data source that is associated
                        with a channel.

                        S3DataType -> (string)
                            If you choose S3Prefix , S3Uri  identifies  a  key
                            name prefix. SageMaker uses all objects that match
                            the specified key name prefix for model training.

                            If you choose ManifestFile , S3Uri  identifies  an
                            object  that  is a manifest file containing a list
                            of object keys that you want SageMaker to use  for
                            model training.

                            If  you choose AugmentedManifestFile , S3Uri iden-
                            tifies an object that  is  an  augmented  manifest
                            file  in JSON lines format. This file contains the
                            data you want to use for model training.  Augment-
                            edManifestFile  can  only be used if the Channel's
                            input mode is Pipe .

                        S3Uri -> (string)
                            Depending  on  the   value   specified   for   the
                            S3DataType  ,  identifies either a key name prefix
                            or a manifest. For example:

                            o A  key  name  prefix  might  look   like   this:
                              s3://bucketname/exampleprefix/

                            o A  manifest  might  look like this: s3://bucket-
                              name/example.manifest   A manifest is an S3  ob-
                              ject which is a JSON file consisting of an array
                              of elements. The first element is a prefix which
                              is  followed  by one or more suffixes. SageMaker
                              appends the suffix elements to the prefix to get
                              a  full set of S3Uri . Note that the prefix must
                              be a valid non-empty S3Uri that precludes  users
                              from  specifying  a  manifest  whose  individual
                              S3Uri is sourced from different S3 buckets.  The
                              following  code  example  shows a valid manifest
                              format:        [      {"prefix":      "s3://cus-
                              tomer_bucket/some/prefix/"},              "rela-
                              tive/path/to/custdata-1",                 "rela-
                              tive/path/custdata-2",         ...        "rela-
                              tive/path/custdata-N"    ]   This JSON is equiv-
                              alent  to  the  following S3Uri list:  s3://cus-
                              tomer_bucket/some/prefix/relative/path/to/cust-
                              data-1    s3://customer_bucket/some/prefix/rela-
                              tive/path/custdata-2        ...        s3://cus-
                              tomer_bucket/some/prefix/relative/path/cust-
                              data-N   The complete set of S3Uri in this mani-
                              fest  is the input data for the channel for this
                              data source. The object that each  S3Uri  points
                              to  must  be readable by the IAM role that Sage-
                              Maker uses to perform tasks on your behalf.

                            Your input bucket must be located in  same  Amazon
                            Web Services region as your training job.

                        S3DataDistributionType -> (string)
                            If  you  want  SageMaker  to  replicate the entire
                            dataset  on  each  ML  compute  instance  that  is
                            launched  for  model training, specify FullyRepli-
                            cated .

                            If you want SageMaker to  replicate  a  subset  of
                            data  on each ML compute instance that is launched
                            for model training, specify  ShardedByS3Key  .  If
                            there  are  n  ML compute instances launched for a
                            training job, each instance gets approximately 1/n
                            of  the  number of S3 objects. In this case, model
                            training on each machine uses only the  subset  of
                            training data.

                            Don't  choose more ML compute instances for train-
                            ing than available S3 objects.  If  you  do,  some
                            nodes  won't  get  any  data  and you will pay for
                            nodes that aren't getting any training data.  This
                            applies  in both File and Pipe modes. Keep this in
                            mind when developing algorithms.

                            In distributed training, where you use multiple ML
                            compute  EC2  instances, you might choose Sharded-
                            ByS3Key . If the algorithm requires copying train-
                            ing  data to the ML storage volume (when Training-
                            InputMode is set to File ), this copies 1/n of the
                            number of objects.

                        AttributeNames -> (list)
                            A  list of one or more attribute names to use that
                            are found in a specified augmented manifest file.

                            (string)

                        InstanceGroupNames -> (list)
                            A list of names of instance groups that  get  data
                            from the S3 data source.

                            (string)

                     FileSystemDataSource -> (structure)
                        The file system that is associated with a channel.

                        FileSystemId -> (string)
                            The file system id.

                        FileSystemAccessMode -> (string)
                            The  access mode of the mount of the directory as-
                            sociated with the  channel.  A  directory  can  be
                            mounted   either   in   ro   (read-only)   or   rw
                            (read-write) mode.

                        FileSystemType -> (string)
                            The file system type.

                        DirectoryPath -> (string)
                            The full path to the directory to  associate  with
                            the channel.

                 ContentType -> (string)
                     The MIME type of the data.

                 CompressionType -> (string)
                     If training data is compressed, the compression type. The
                     default value is None . CompressionType is used  only  in
                     Pipe  input mode. In File mode, leave this field unset or
                     set it to None.

                 RecordWrapperType -> (string)
                     Specify RecordIO as the value when input data is  in  raw
                     format  but  the training algorithm requires the RecordIO
                     format. In this case, SageMaker wraps each individual  S3
                     object in a RecordIO record. If the input data is already
                     in RecordIO format, you don't need to set this attribute.
                     For more information, see Create a Dataset Using RecordIO
                     .

                     In File mode, leave this field unset or set it to None.

                 InputMode -> (string)
                     (Optional) The input mode to use for the data channel  in
                     a  training job. If you don't set a value for InputMode ,
                     SageMaker uses the value set for TrainingInputMode .  Use
                     this  parameter to override the TrainingInputMode setting
                     in a AlgorithmSpecification request when you have a chan-
                     nel  that  needs a different input mode from the training
                     job's general setting. To download the data  from  Amazon
                     Simple  Storage Service (Amazon S3) to the provisioned ML
                     storage volume, and mount the directory to a Docker  vol-
                     ume,  use  File  input mode. To stream data directly from
                     Amazon S3 to the container, choose Pipe input mode.

                     To use a model for incremental training, choose File  in-
                     put model.

                 ShuffleConfig -> (structure)
                     A  configuration for a shuffle option for input data in a
                     channel. If you use S3Prefix for S3DataType , this  shuf-
                     fles the results of the S3 key prefix matches. If you use
                     ManifestFile , the order of the S3 object  references  in
                     the  ManifestFile  is shuffled. If you use AugmentedMani-
                     festFile , the order of the JSON lines in the  Augmented-
                     ManifestFile  is  shuffled. The shuffling order is deter-
                     mined using the Seed value.

                     For Pipe input mode, shuffling is done at  the  start  of
                     every  epoch.  With  large datasets this ensures that the
                     order of the training data is different for  each  epoch,
                     it  helps  reduce  bias  and  possible  overfitting. In a
                     multi-node training job when  ShuffleConfig  is  combined
                     with  S3DataDistributionType of ShardedByS3Key , the data
                     is shuffled across nodes so that the content  sent  to  a
                     particular  node  on  the  first epoch might be sent to a
                     different node on the second epoch.

                     Seed -> (long)
                        Determines the shuffling order in ShuffleConfig value.

          VpcConfig -> (structure)
              The VpcConfig object that specifies the VPC that  you  want  the
              training  jobs  that  this hyperparameter tuning job launches to
              connect to. Control access to and from your  training  container
              by configuring the VPC. For more information, see Protect Train-
              ing Jobs by Using an Amazon Virtual Private Cloud .

              SecurityGroupIds -> (list)
                 The VPC security group IDs, in the form sg-xxxxxxxx . Specify
                 the security groups for the VPC that is specified in the Sub-
                 nets field.

                 (string)

              Subnets -> (list)
                 The ID of the subnets in the VPC to which you want to connect
                 your  training job or model. For information about the avail-
                 ability of specific instance types,  see  Supported  Instance
                 Types and Availability Zones .

                 (string)

          OutputDataConfig -> (structure)
              Specifies the path to the Amazon S3 bucket where you store model
              artifacts from the training jobs that the tuning job launches.

              KmsKeyId -> (string)
                 The Amazon Web Services Key Management  Service  (Amazon  Web
                 Services  KMS)  key  that SageMaker uses to encrypt the model
                 artifacts at rest using Amazon S3 server-side encryption. The
                 KmsKeyId can be any of the following formats:

                 o // KMS Key ID  "1234abcd-12ab-34cd-56ef-1234567890ab"

                 o //    Amazon   Resource   Name   (ARN)   of   a   KMS   Key
                   "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"

                 o // KMS Key Alias  "alias/ExampleAlias"

                 o //   Amazon   Resource  Name  (ARN)  of  a  KMS  Key  Alias
                   "arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias"

                 If you use a KMS key ID or an alias  of  your  KMS  key,  the
                 SageMaker  execution  role  must  include permissions to call
                 kms:Encrypt . If you don't provide a KMS  key  ID,  SageMaker
                 uses  the  default  KMS key for Amazon S3 for your role's ac-
                 count. For more information, see KMS-Managed Encryption  Keys
                 in the Amazon Simple Storage Service Developer Guide . If the
                 output data is stored in Amazon S3 Express One  Zone,  it  is
                 encrypted  with server-side encryption with Amazon S3 managed
                 keys (SSE-S3). KMS key is not supported for Amazon S3 Express
                 One Zone

                 The KMS key policy must grant permission to the IAM role that
                 you specify in your CreateTrainingJob , CreateTransformJob  ,
                 or  CreateHyperParameterTuningJob requests. For more informa-
                 tion, see Using Key Policies in Amazon Web  Services  KMS  in
                 the  Amazon  Web  Services  Key  Management Service Developer
                 Guide .

              S3OutputPath -> (string)
                 Identifies the S3 path where you want SageMaker to store  the
                 model  artifacts. For example, s3://bucket-name/key-name-pre-
                 fix .

              CompressionType -> (string)
                 The model output compression type. Select None to  output  an
                 uncompressed  model, recommended for large model outputs. De-
                 faults to gzip.

          ResourceConfig -> (structure)
              The resources, including the compute instances and storage  vol-
              umes, to use for the training jobs that the tuning job launches.

              Storage  volumes  store  model artifacts and incremental states.
              Training algorithms might also use storage volumes  for  scratch
              space.  If you want SageMaker to use the storage volume to store
              the training data, choose File as the TrainingInputMode  in  the
              algorithm  specification.  For  distributed training algorithms,
              specify an instance count greater than 1.

              NOTE:
                 If you want to use hyperparameter optimization with  instance
                 type  flexibility, use HyperParameterTuningResourceConfig in-
                 stead.

              InstanceType -> (string)
                 The ML compute instance type.

                 NOTE:
                     SageMaker Training on Amazon Elastic Compute Cloud  (EC2)
                     P4de  instances  is  in preview release starting December
                     9th, 2022.
                        Amazon EC2 P4de instances (currently in  preview)  are
                        powered  by  8 NVIDIA A100 GPUs with 80GB high-perfor-
                        mance HBM2e GPU memory, which accelerate the speed  of
                        training  ML  models  that need to be trained on large
                        datasets of high-resolution data. In this preview  re-
                        lease,  Amazon  SageMaker supports ML training jobs on
                        P4de instances (ml.p4de.24xlarge  )  to  reduce  model
                        training  time.  The  ml.p4de.24xlarge  instances  are
                        available in the following  Amazon  Web  Services  Re-
                        gions.

                     o US East (N. Virginia) (us-east-1)

                     o US West (Oregon) (us-west-2)

                     To  request quota limit increase and start using P4de in-
                     stances, contact  the  SageMaker  Training  service  team
                     through your account team.

              InstanceCount -> (integer)
                 The  number  of  ML compute instances to use. For distributed
                 training, provide a value greater than 1.

              VolumeSizeInGB -> (integer)
                 The size of the ML storage volume that you want to provision.

                 ML storage volumes  store  model  artifacts  and  incremental
                 states.  Training  algorithms  might  also use the ML storage
                 volume for scratch space. If you want to store  the  training
                 data in the ML storage volume, choose File as the TrainingIn-
                 putMode in the algorithm specification.

                 When using an ML instance with NVMe SSD volumes  ,  SageMaker
                 doesn't  provision Amazon EBS General Purpose SSD (gp2) stor-
                 age. Available storage is fixed to the  NVMe-type  instance's
                 storage  capacity.  SageMaker  configures  storage  paths for
                 training datasets, checkpoints, model artifacts, and  outputs
                 to use the entire capacity of the instance storage. For exam-
                 ple, ML instance families with the NVMe-type instance storage
                 include ml.p4d , ml.g4dn , and ml.g5 .

                 When  using  an  ML instance with the EBS-only storage option
                 and without instance storage, you must define the size of EBS
                 volume  through VolumeSizeInGB in the ResourceConfig API. For
                 example, ML instance families that use  EBS  volumes  include
                 ml.c5 and ml.p2 .

                 To  look  up  instance types and their instance storage types
                 and volumes, see Amazon EC2 Instance Types .

                 To find the default local  paths  defined  by  the  SageMaker
                 training  platform,  see  Amazon  SageMaker  Training Storage
                 Folders for Training Datasets, Checkpoints, Model  Artifacts,
                 and Outputs .

              VolumeKmsKeyId -> (string)
                 The  Amazon  Web  Services KMS key that SageMaker uses to en-
                 crypt data on the storage volume attached to the  ML  compute
                 instance(s) that run the training job.

                 NOTE:
                     Certain  Nitro-based instances include local storage, de-
                     pendent on the instance type. Local storage  volumes  are
                     encrypted  using  a  hardware module on the instance. You
                     can't request a VolumeKmsKeyId  when  using  an  instance
                     type with local storage.

                     For  a list of instance types that support local instance
                     storage, see Instance Store Volumes .

                     For more information about local instance storage encryp-
                     tion, see SSD Instance Store Volumes .

                 The VolumeKmsKeyId can be in any of the following formats:

                 o // KMS Key ID  "1234abcd-12ab-34cd-56ef-1234567890ab"

                 o //    Amazon   Resource   Name   (ARN)   of   a   KMS   Key
                   "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"

              KeepAlivePeriodInSeconds -> (integer)
                 The  duration  of  time  in  seconds to retain configured re-
                 sources in a warm pool for subsequent training jobs.

              InstanceGroups -> (list)
                 The configuration of a heterogeneous cluster in JSON format.

                 (structure)
                     Defines  an  instance  group  for  heterogeneous  cluster
                     training.  When  requesting  a  training  job  using  the
                     CreateTrainingJob API, you  can  configure  multiple  in-
                     stance groups .

                     InstanceType -> (string)
                        Specifies the instance type of the instance group.

                     InstanceCount -> (integer)
                        Specifies  the  number  of  instances  of the instance
                        group.

                     InstanceGroupName -> (string)
                        Specifies the name of the instance group.

              TrainingPlanArn -> (string)
                 The Amazon Resource Name (ARN); of the training plan  to  use
                 for this resource configuration.

          HyperParameterTuningResourceConfig -> (structure)
              The  configuration  for the hyperparameter tuning resources, in-
              cluding the compute instances  and  storage  volumes,  used  for
              training  jobs  launched  by the tuning job. By default, storage
              volumes hold model artifacts and incremental states. Choose File
              for TrainingInputMode in the AlgorithmSpecification parameter to
              additionally store training data  in  the  storage  volume  (op-
              tional).

              InstanceType -> (string)
                 The  instance  type  used  to run hyperparameter optimization
                 tuning jobs. See descriptions of instance types for more  in-
                 formation.

              InstanceCount -> (integer)
                 The  number of compute instances of type InstanceType to use.
                 For distributed training , select a value greater than 1.

              VolumeSizeInGB -> (integer)
                 The volume size in GB for the storage volume to  be  used  in
                 processing hyperparameter optimization jobs (optional). These
                 volumes store model artifacts, incremental states and option-
                 ally, scratch space for training algorithms. Do not provide a
                 value for this parameter if a value  for  InstanceConfigs  is
                 also specified.

                 Some instance types have a fixed total local storage size. If
                 you select one of these instances for  training,  VolumeSize-
                 InGB  cannot  be  greater than this total size. For a list of
                 instance types with local instance storage and  their  sizes,
                 see instance store volumes .

                 NOTE:
                     SageMaker  supports  only  the  General Purpose SSD (gp2)
                     storage volume type.

              VolumeKmsKeyId -> (string)
                 A key used by Amazon Web Services Key Management  Service  to
                 encrypt  data  on  the storage volume attached to the compute
                 instances used to run the training job. You can use either of
                 the following formats to specify a key.

                 KMS Key ID:
                     "1234abcd-12ab-34cd-56ef-1234567890ab"

                 Amazon Resource Name (ARN) of a KMS key:
                     "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"

                 Some instances use local storage, which use a hardware module
                 to  encrypt  storage  volumes. If you choose one of these in-
                 stance types, you cannot request a  VolumeKmsKeyId  .  For  a
                 list  of  instance types that use local storage, see instance
                 store volumes . For more information about  Amazon  Web  Ser-
                 vices Key Management Service, see KMS encryption for more in-
                 formation.

              AllocationStrategy -> (string)
                 The strategy that determines the order of preference for  re-
                 sources  specified  in InstanceConfigs used in hyperparameter
                 optimization.

              InstanceConfigs -> (list)
                 A list containing the configuration(s) for one  or  more  re-
                 sources  for  processing hyperparameter jobs. These resources
                 include compute instances and storage volumes to use in model
                 training jobs launched by hyperparameter tuning jobs. The Al-
                 locationStrategy controls the order in which multiple config-
                 urations provided in InstanceConfigs are used.

                 NOTE:
                     If  you  only want to use a single instance configuration
                     inside the HyperParameterTuningResourceConfig API, do not
                     provide  a  value  for InstanceConfigs . Instead, use In-
                     stanceType , VolumeSizeInGB and InstanceCount  .  If  you
                     use InstanceConfigs , do not provide values for Instance-
                     Type , VolumeSizeInGB or InstanceCount .

                 (structure)
                     The configuration for hyperparameter tuning resources for
                     use  in  training  jobs launched by the tuning job. These
                     resources include compute instances and storage  volumes.
                     Specify  one  or more compute instance configurations and
                     allocation strategies to select resources (optional).

                     InstanceType -> (string)
                        The instance type used for processing of  hyperparame-
                        ter optimization jobs. Choose from general purpose (no
                        GPUs) instance types: ml.m5.xlarge, ml.m5.2xlarge, and
                        ml.m5.4xlarge  or compute optimized (no GPUs) instance
                        types: ml.c5.xlarge and ml.c5.2xlarge. For more infor-
                        mation  about  instance  types,  see instance type de-
                        scriptions .

                     InstanceCount -> (integer)
                        The number of instances of the type specified  by  In-
                        stanceType  .  Choose  an instance count larger than 1
                        for  distributed  training  algorithms.  See  Step  2:
                        Launch  a SageMaker Distributed Training Job Using the
                        SageMaker Python SDK for more information.

                     VolumeSizeInGB -> (integer)
                        The volume size in GB of the data to be processed  for
                        hyperparameter optimization (optional).

          StoppingCondition -> (structure)
              Specifies  a  limit  to how long a model hyperparameter training
              job can run. It also specifies how long a managed spot  training
              job  has to complete. When the job reaches the time limit, Sage-
              Maker ends the training job. Use this API to cap model  training
              costs.

              MaxRuntimeInSeconds -> (integer)
                 The  maximum  length  of time, in seconds, that a training or
                 compilation job can run before it is stopped.

                 For compilation jobs, if the job  does  not  complete  during
                 this  time, a TimeOut error is generated. We recommend start-
                 ing with 900 seconds and increasing  as  necessary  based  on
                 your model.

                 For  all other jobs, if the job does not complete during this
                 time, SageMaker ends the job. When RetryStrategy is specified
                 in the job request, MaxRuntimeInSeconds specifies the maximum
                 time for all of the attempts in total,  not  each  individual
                 attempt.  The default value is 1 day. The maximum value is 28
                 days.

                 The maximum time that a TrainingJob can run in total, includ-
                 ing  any  time  spent publishing metrics or archiving and up-
                 loading models after it has been stopped, is 30 days.

              MaxWaitTimeInSeconds -> (integer)
                 The maximum length of time, in seconds, that a  managed  Spot
                 training  job has to complete. It is the amount of time spent
                 waiting for Spot capacity plus the amount of time the job can
                 run.  It must be equal to or greater than MaxRuntimeInSeconds
                 . If the job does not complete during  this  time,  SageMaker
                 ends the job.

                 When  RetryStrategy is specified in the job request, MaxWait-
                 TimeInSeconds specifies the maximum time for all of  the  at-
                 tempts in total, not each individual attempt.

              MaxPendingTimeInSeconds -> (integer)
                 The  maximum  length  of time, in seconds, that a training or
                 compilation job can be pending before it is stopped.

          EnableNetworkIsolation -> (boolean)
              Isolates the training container. No inbound or outbound  network
              calls  can  be  made,  except  for  calls between peers within a
              training cluster for distributed training. If network  isolation
              is  used  for  training  jobs  that are configured to use a VPC,
              SageMaker downloads and uploads customer data  and  model  arti-
              facts through the specified VPC, but the training container does
              not have network access.

          EnableInterContainerTrafficEncryption -> (boolean)
              To encrypt all communications between ML  compute  instances  in
              distributed  training, choose True . Encryption provides greater
              security for  distributed  training,  but  training  might  take
              longer. How long it takes depends on the amount of communication
              between compute instances, especially if you use a deep learning
              algorithm in distributed training.

          EnableManagedSpotTraining -> (boolean)
              A  Boolean  indicating  whether managed spot training is enabled
              (True ) or not (False ).

          CheckpointConfig -> (structure)
              Contains information about the output location for managed  spot
              training checkpoint data.

              S3Uri -> (string)
                 Identifies  the  S3  path  where  you want SageMaker to store
                 checkpoints. For example, s3://bucket-name/key-name-prefix .

              LocalPath -> (string)
                 (Optional) The local directory where checkpoints are written.
                 The default directory is /opt/ml/checkpoints/ .

          RetryStrategy -> (structure)
              The  number  of times to retry the job when the job fails due to
              an InternalServerError .

              MaximumRetryAttempts -> (integer)
                 The number of times to retry the job. When  the  job  is  re-
                 tried, it's SecondaryStatus is changed to STARTING .

          Environment -> (map)
              An  environment  variable  that  you can pass into the SageMaker
              CreateTrainingJob API. You can use an existing environment vari-
              able  from  the  training  container or use your own. See Define
              metrics and variables for more information.

              NOTE:
                 The maximum number of items specified for Map Entries  refers
                 to  the  maximum  number  of  environment  variables for each
                 TrainingJobDefinition and also the maximum for  the  hyperpa-
                 rameter  tuning job itself. That is, the sum of the number of
                 environment variables for all the  training  job  definitions
                 can't exceed the maximum number specified.

              key -> (string)

              value -> (string)

       TrainingJobDefinitions -> (list)
          A  list  of the HyperParameterTrainingJobDefinition objects launched
          for this tuning job.

          (structure)
              Defines the training jobs launched by  a  hyperparameter  tuning
              job.

              DefinitionName -> (string)
                 The job definition name.

              TuningObjective -> (structure)
                 Defines the objective metric for a hyperparameter tuning job.
                 Hyperparameter tuning uses the value of this metric to evalu-
                 ate  the  training jobs it launches, and returns the training
                 job that results in either the highest or  lowest  value  for
                 this  metric, depending on the value you specify for the Type
                 parameter. If you want to define a custom  objective  metric,
                 see Define metrics and environment variables .

                 Type -> (string)
                     Whether to minimize or maximize the objective metric.

                 MetricName -> (string)
                     The name of the metric to use for the objective metric.

              HyperParameterRanges -> (structure)
                 Specifies  ranges of integer, continuous, and categorical hy-
                 perparameters that a hyperparameter tuning job searches.  The
                 hyperparameter  tuning job launches training jobs with hyper-
                 parameter values within these ranges to find the  combination
                 of  values that result in the training job with the best per-
                 formance as measured by the objective metric of the  hyperpa-
                 rameter tuning job.

                 NOTE:
                     The  maximum  number of items specified for Array Members
                     refers to the maximum number of hyperparameters for  each
                     range  and also the maximum for the hyperparameter tuning
                     job itself. That is, the sum of the number of hyperparam-
                     eters  for all the ranges can't exceed the maximum number
                     specified.

                 IntegerParameterRanges -> (list)
                     The array of IntegerParameterRange objects  that  specify
                     ranges  of  integer hyperparameters that a hyperparameter
                     tuning job searches.

                     (structure)
                        For a hyperparameter of the  integer  type,  specifies
                        the range that a hyperparameter tuning job searches.

                        Name -> (string)
                            The name of the hyperparameter to search.

                        MinValue -> (string)
                            The minimum value of the hyperparameter to search.

                        MaxValue -> (string)
                            The maximum value of the hyperparameter to search.

                        ScalingType -> (string)
                            The  scale  that  hyperparameter  tuning  uses  to
                            search the hyperparameter range.  For  information
                            about   choosing   a   hyperparameter  scale,  see
                            Hyperparameter Scaling . One of the following val-
                            ues:
                               Auto

                            SageMaker  hyperparameter  tuning chooses the best
                            scale for the hyperparameter.
                               Linear

                            Hyperparameter tuning searches the values  in  the
                            hyperparameter range by using a linear scale.
                               Logarithmic

                            Hyperparameter  tuning  searches the values in the
                            hyperparameter range by using a logarithmic scale.

                            Logarithmic scaling works  only  for  ranges  that
                            have only values greater than 0.

                 ContinuousParameterRanges -> (list)
                     The  array of ContinuousParameterRange objects that spec-
                     ify ranges of continuous hyperparameters that a  hyperpa-
                     rameter tuning job searches.

                     (structure)
                        A list of continuous hyperparameters to tune.

                        Name -> (string)
                            The name of the continuous hyperparameter to tune.

                        MinValue -> (string)
                            The minimum value for the hyperparameter. The tun-
                            ing job uses floating-point  values  between  this
                            value and MaxValue for tuning.

                        MaxValue -> (string)
                            The maximum value for the hyperparameter. The tun-
                            ing job uses floating-point  values  between  Min-
                            Value value and this value for tuning.

                        ScalingType -> (string)
                            The  scale  that  hyperparameter  tuning  uses  to
                            search the hyperparameter range.  For  information
                            about   choosing   a   hyperparameter  scale,  see
                            Hyperparameter Scaling . One of the following val-
                            ues:
                               Auto

                            SageMaker  hyperparameter  tuning chooses the best
                            scale for the hyperparameter.
                               Linear

                            Hyperparameter tuning searches the values  in  the
                            hyperparameter range by using a linear scale.
                               Logarithmic

                            Hyperparameter  tuning  searches the values in the
                            hyperparameter range by using a logarithmic scale.

                            Logarithmic scaling works  only  for  ranges  that
                            have only values greater than 0.
                               ReverseLogarithmic

                            Hyperparameter  tuning  searches the values in the
                            hyperparameter range by using a reverse  logarith-
                            mic scale.

                            Reverse  logarithmic scaling works only for ranges
                            that are entirely within the range 0<=x<1.0.

                 CategoricalParameterRanges -> (list)
                     The array of CategoricalParameterRange objects that spec-
                     ify ranges of categorical hyperparameters that a hyperpa-
                     rameter tuning job searches.

                     (structure)
                        A list of categorical hyperparameters to tune.

                        Name -> (string)
                            The name  of  the  categorical  hyperparameter  to
                            tune.

                        Values -> (list)
                            A list of the categories for the hyperparameter.

                            (string)

                 AutoParameters -> (list)
                     A list containing hyperparameter names and example values
                     to be used by Autotune to determine  optimal  ranges  for
                     your tuning job.

                     (structure)
                        The  name  and  an example value of the hyperparameter
                        that you want to use in Autotune. If  Automatic  model
                        tuning  (AMT)  determines  that your hyperparameter is
                        eligible for Autotune, an optimal hyperparameter range
                        is selected for you.

                        Name -> (string)
                            The  name  of the hyperparameter to optimize using
                            Autotune.

                        ValueHint -> (string)
                            An example value of the hyperparameter to optimize
                            using Autotune.

              StaticHyperParameters -> (map)
                 Specifies  the  values  of hyperparameters that do not change
                 for the tuning job.

                 key -> (string)

                 value -> (string)

              AlgorithmSpecification -> (structure)
                 The HyperParameterAlgorithmSpecification object  that  speci-
                 fies the resource algorithm to use for the training jobs that
                 the tuning job launches.

                 TrainingImage -> (string)
                     The registry path of the Docker image that  contains  the
                     training algorithm. For information about Docker registry
                     paths for built-in algorithms, see Algorithms Provided by
                     Amazon  SageMaker: Common Parameters . SageMaker supports
                     both   registry/repository[:tag]   and   registry/reposi-
                     tory[@digest]  image  path formats. For more information,
                     see Using Your Own Algorithms with Amazon SageMaker .

                 TrainingInputMode -> (string)
                     The training input mode that the algorithm supports.  For
                     more information about input modes, see Algorithms .
                        Pipe mode

                     If  an  algorithm  supports  Pipe  mode, Amazon SageMaker
                     streams data directly from Amazon S3 to the container.
                        File mode

                     If an algorithm supports File mode,  SageMaker  downloads
                     the  training  data from S3 to the provisioned ML storage
                     volume, and mounts the directory to the Docker volume for
                     the training container.

                     You  must provision the ML storage volume with sufficient
                     capacity to accommodate the data downloaded from  S3.  In
                     addition to the training data, the ML storage volume also
                     stores the output model. The algorithm container uses the
                     ML storage volume to also store intermediate information,
                     if any.

                     For distributed algorithms, training data is  distributed
                     uniformly.  Your  training duration is predictable if the
                     input data objects  sizes  are  approximately  the  same.
                     SageMaker  does not split the files any further for model
                     training. If the object sizes are skewed, training  won't
                     be  optimal  as the data distribution is also skewed when
                     one host in a training cluster is overloaded, thus becom-
                     ing a bottleneck in training.
                        FastFile mode

                     If an algorithm supports FastFile mode, SageMaker streams
                     data directly from S3  to  the  container  with  no  code
                     changes,  and  provides  file  system access to the data.
                     Users can author their training script to  interact  with
                     these files as if they were stored on disk.
                        FastFile mode works best when the data is read sequen-
                        tially. Augmented manifest files aren't supported. The
                        startup  time  is  lower when there are fewer files in
                        the S3 bucket provided.

                 AlgorithmName -> (string)
                     The name of the resource algorithm to use for the  hyper-
                     parameter tuning job. If you specify a value for this pa-
                     rameter, do not specify a value for TrainingImage .

                 MetricDefinitions -> (list)
                     An array of MetricDefinition  objects  that  specify  the
                     metrics that the algorithm emits.

                     (structure)
                        Specifies  a metric that the training algorithm writes
                        to stderr or stdout . You can view these logs  to  un-
                        derstand  how your training job performs and check for
                        any errors encountered during training. SageMaker  hy-
                        perparameter  tuning  captures  all  defined  metrics.
                        Specify one of the defined metrics to use as an objec-
                        tive metric using the TuningObjective parameter in the
                        HyperParameterTrainingJobDefinition  API  to  evaluate
                        job performance during hyperparameter tuning.

                        Name -> (string)
                            The name of the metric.

                        Regex -> (string)
                            A regular expression that searches the output of a
                            training job and gets the value of the metric. For
                            more  information  about using regular expressions
                            to define metrics, see Defining metrics and  envi-
                            ronment variables .

              RoleArn -> (string)
                 The  Amazon  Resource  Name  (ARN) of the IAM role associated
                 with the training jobs that the tuning job launches.

              InputDataConfig -> (list)
                 An array of Channel objects that specify the  input  for  the
                 training jobs that the tuning job launches.

                 (structure)
                     A  channel  is  a  named input source that training algo-
                     rithms can consume.

                     ChannelName -> (string)
                        The name of the channel.

                     DataSource -> (structure)
                        The location of the channel data.

                        S3DataSource -> (structure)
                            The S3 location of the data source that is associ-
                            ated with a channel.

                            S3DataType -> (string)
                               If you choose S3Prefix , S3Uri identifies a key
                               name prefix. SageMaker uses  all  objects  that
                               match  the  specified key name prefix for model
                               training.

                               If you choose ManifestFile ,  S3Uri  identifies
                               an  object that is a manifest file containing a
                               list of object keys that you want SageMaker  to
                               use for model training.

                               If  you  choose  AugmentedManifestFile  , S3Uri
                               identifies an object that is an augmented mani-
                               fest  file in JSON lines format. This file con-
                               tains the data you want to use for model train-
                               ing.  AugmentedManifestFile can only be used if
                               the Channel's input mode is Pipe .

                            S3Uri -> (string)
                               Depending  on  the  value  specified  for   the
                               S3DataType  , identifies either a key name pre-
                               fix or a manifest. For example:

                               o A key  name  prefix  might  look  like  this:
                                 s3://bucketname/exampleprefix/

                               o A manifest might look like this: s3://bucket-
                                 name/example.manifest   A manifest is  an  S3
                                 object  which is a JSON file consisting of an
                                 array of elements. The  first  element  is  a
                                 prefix  which is followed by one or more suf-
                                 fixes. SageMaker appends the suffix  elements
                                 to  the  prefix  to get a full set of S3Uri .
                                 Note  that  the  prefix  must  be   a   valid
                                 non-empty  S3Uri  that  precludes  users from
                                 specifying a manifest whose individual  S3Uri
                                 is  sourced  from  different  S3 buckets. The
                                 following code example shows a valid manifest
                                 format:       [     {"prefix":     "s3://cus-
                                 tomer_bucket/some/prefix/"},           "rela-
                                 tive/path/to/custdata-1",              "rela-
                                 tive/path/custdata-2",       ...       "rela-
                                 tive/path/custdata-N"     ]    This  JSON  is
                                 equivalent  to  the  following  S3Uri   list:
                                 s3://customer_bucket/some/prefix/rela-
                                 tive/path/to/custdata-1             s3://cus-
                                 tomer_bucket/some/prefix/relative/path/cust-
                                 data-2             ...              s3://cus-
                                 tomer_bucket/some/prefix/relative/path/cust-
                                 data-N   The complete set of  S3Uri  in  this
                                 manifest  is  the  input data for the channel
                                 for this data source. The  object  that  each
                                 S3Uri  points  to must be readable by the IAM
                                 role that SageMaker uses to perform tasks  on
                                 your behalf.

                               Your  input bucket must be located in same Ama-
                               zon Web Services region as your training job.

                            S3DataDistributionType -> (string)
                               If you want SageMaker to replicate  the  entire
                               dataset  on  each  ML  compute instance that is
                               launched  for  model  training,  specify   Ful-
                               lyReplicated .

                               If  you want SageMaker to replicate a subset of
                               data  on  each  ML  compute  instance  that  is
                               launched  for  model training, specify Sharded-
                               ByS3Key . If there are n ML  compute  instances
                               launched for a training job, each instance gets
                               approximately 1/n of the number of S3  objects.
                               In  this  case,  model training on each machine
                               uses only the subset of training data.

                               Don't choose  more  ML  compute  instances  for
                               training  than available S3 objects. If you do,
                               some nodes won't get any data and you will  pay
                               for  nodes  that  aren't  getting  any training
                               data. This applies in both File and Pipe modes.
                               Keep this in mind when developing algorithms.

                               In distributed training, where you use multiple
                               ML compute  EC2  instances,  you  might  choose
                               ShardedByS3Key  .  If  the  algorithm  requires
                               copying training data to the ML storage  volume
                               (when  TrainingInputMode is set to File ), this
                               copies 1/n of the number of objects.

                            AttributeNames -> (list)
                               A list of one or more attribute  names  to  use
                               that  are  found in a specified augmented mani-
                               fest file.

                               (string)

                            InstanceGroupNames -> (list)
                               A list of names of  instance  groups  that  get
                               data from the S3 data source.

                               (string)

                        FileSystemDataSource -> (structure)
                            The file system that is associated with a channel.

                            FileSystemId -> (string)
                               The file system id.

                            FileSystemAccessMode -> (string)
                               The  access  mode of the mount of the directory
                               associated with the channel. A directory can be
                               mounted   either   in   ro  (read-only)  or  rw
                               (read-write) mode.

                            FileSystemType -> (string)
                               The file system type.

                            DirectoryPath -> (string)
                               The full path to  the  directory  to  associate
                               with the channel.

                     ContentType -> (string)
                        The MIME type of the data.

                     CompressionType -> (string)
                        If  training data is compressed, the compression type.
                        The default value is None .  CompressionType  is  used
                        only  in  Pipe  input  mode.  In File mode, leave this
                        field unset or set it to None.

                     RecordWrapperType -> (string)
                        Specify RecordIO as the value when input  data  is  in
                        raw  format  but  the  training algorithm requires the
                        RecordIO format. In this case,  SageMaker  wraps  each
                        individual  S3 object in a RecordIO record. If the in-
                        put data is already in RecordIO format, you don't need
                        to  set  this  attribute.  For  more  information, see
                        Create a Dataset Using RecordIO .

                        In File mode, leave this field  unset  or  set  it  to
                        None.

                     InputMode -> (string)
                        (Optional)  The input mode to use for the data channel
                        in a training job. If you don't set a value for Input-
                        Mode , SageMaker uses the value set for TrainingInput-
                        Mode . Use this parameter to override the  TrainingIn-
                        putMode  setting  in  a AlgorithmSpecification request
                        when you have a channel that needs a  different  input
                        mode from the training job's general setting. To down-
                        load the data from Amazon Simple Storage Service (Ama-
                        zon  S3)  to  the  provisioned  ML storage volume, and
                        mount the directory to a Docker volume, use File input
                        mode.  To  stream  data directly from Amazon S3 to the
                        container, choose Pipe input mode.

                        To use a model for incremental training,  choose  File
                        input model.

                     ShuffleConfig -> (structure)
                        A configuration for a shuffle option for input data in
                        a channel. If you use S3Prefix for S3DataType  ,  this
                        shuffles  the results of the S3 key prefix matches. If
                        you use ManifestFile , the order of the S3 object ref-
                        erences  in  the  ManifestFile is shuffled. If you use
                        AugmentedManifestFile , the order of the JSON lines in
                        the  AugmentedManifestFile  is shuffled. The shuffling
                        order is determined using the Seed value.

                        For Pipe input mode, shuffling is done at the start of
                        every epoch. With large datasets this ensures that the
                        order of the  training  data  is  different  for  each
                        epoch,  it helps reduce bias and possible overfitting.
                        In a multi-node training  job  when  ShuffleConfig  is
                        combined with S3DataDistributionType of ShardedByS3Key
                        , the data is shuffled across nodes so that  the  con-
                        tent  sent  to  a  particular  node on the first epoch
                        might be sent to a different node on the second epoch.

                        Seed -> (long)
                            Determines the shuffling  order  in  ShuffleConfig
                            value.

              VpcConfig -> (structure)
                 The VpcConfig object that specifies the VPC that you want the
                 training jobs that this hyperparameter tuning job launches to
                 connect  to.  Control  access  to and from your training con-
                 tainer by configuring the  VPC.  For  more  information,  see
                 Protect  Training  Jobs  by  Using  an Amazon Virtual Private
                 Cloud .

                 SecurityGroupIds -> (list)
                     The VPC security group IDs, in  the  form  sg-xxxxxxxx  .
                     Specify the security groups for the VPC that is specified
                     in the Subnets field.

                     (string)

                 Subnets -> (list)
                     The ID of the subnets in the VPC to  which  you  want  to
                     connect your training job or model. For information about
                     the  availability  of  specific   instance   types,   see
                     Supported Instance Types and Availability Zones .

                     (string)

              OutputDataConfig -> (structure)
                 Specifies  the  path  to the Amazon S3 bucket where you store
                 model artifacts from the training jobs that  the  tuning  job
                 launches.

                 KmsKeyId -> (string)
                     The  Amazon  Web  Services Key Management Service (Amazon
                     Web Services KMS) key that SageMaker uses to encrypt  the
                     model  artifacts  at rest using Amazon S3 server-side en-
                     cryption. The KmsKeyId can be any of the  following  for-
                     mats:

                     o // KMS Key ID  "1234abcd-12ab-34cd-56ef-1234567890ab"

                     o //   Amazon   Resource   Name   (ARN)   of  a  KMS  Key
                       "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"

                     o // KMS Key Alias  "alias/ExampleAlias"

                     o //  Amazon  Resource  Name  (ARN)  of  a  KMS Key Alias
                       "arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias"

                     If you use a KMS key ID or an alias of your KMS key,  the
                     SageMaker execution role must include permissions to call
                     kms:Encrypt . If you don't provide a KMS  key  ID,  Sage-
                     Maker  uses  the  default  KMS key for Amazon S3 for your
                     role's account. For more information, see KMS-Managed En-
                     cryption Keys in the Amazon Simple Storage Service Devel-
                     oper Guide . If the output data is stored  in  Amazon  S3
                     Express  One  Zone,  it is encrypted with server-side en-
                     cryption with Amazon S3 managed keys (SSE-S3). KMS key is
                     not supported for Amazon S3 Express One Zone

                     The  KMS key policy must grant permission to the IAM role
                     that you specify in your CreateTrainingJob , CreateTrans-
                     formJob  , or CreateHyperParameterTuningJob requests. For
                     more information, see Using Key Policies  in  Amazon  Web
                     Services  KMS  in  the Amazon Web Services Key Management
                     Service Developer Guide .

                 S3OutputPath -> (string)
                     Identifies the S3 path where you want SageMaker to  store
                     the       model       artifacts.       For       example,
                     s3://bucket-name/key-name-prefix .

                 CompressionType -> (string)
                     The model output compression type. Select None to  output
                     an  uncompressed  model, recommended for large model out-
                     puts. Defaults to gzip.

              ResourceConfig -> (structure)
                 The resources, including the compute  instances  and  storage
                 volumes,  to  use  for  the training jobs that the tuning job
                 launches.

                 Storage volumes store model artifacts and incremental states.
                 Training  algorithms  might  also  use  storage  volumes  for
                 scratch space. If you want SageMaker to use the storage  vol-
                 ume  to store the training data, choose File as the Training-
                 InputMode in the  algorithm  specification.  For  distributed
                 training  algorithms,  specify an instance count greater than
                 1.

                 NOTE:
                     If you want to use hyperparameter optimization  with  in-
                     stance   type  flexibility,  use  HyperParameterTuningRe-
                     sourceConfig instead.

                 InstanceType -> (string)
                     The ML compute instance type.

                     NOTE:
                        SageMaker Training on  Amazon  Elastic  Compute  Cloud
                        (EC2)  P4de  instances  is in preview release starting
                        December 9th, 2022.
                            Amazon EC2 P4de instances (currently  in  preview)
                            are  powered  by  8  NVIDIA  A100  GPUs  with 80GB
                            high-performance HBM2e GPU memory, which  acceler-
                            ate  the  speed of training ML models that need to
                            be trained on large  datasets  of  high-resolution
                            data.  In  this  preview release, Amazon SageMaker
                            supports  ML  training  jobs  on  P4de   instances
                            (ml.p4de.24xlarge ) to reduce model training time.
                            The ml.p4de.24xlarge instances  are  available  in
                            the following Amazon Web Services Regions.

                        o US East (N. Virginia) (us-east-1)

                        o US West (Oregon) (us-west-2)

                        To  request  quota limit increase and start using P4de
                        instances, contact the SageMaker Training service team
                        through your account team.

                 InstanceCount -> (integer)
                     The  number  of ML compute instances to use. For distrib-
                     uted training, provide a value greater than 1.

                 VolumeSizeInGB -> (integer)
                     The size of the ML storage volume that you want to provi-
                     sion.

                     ML  storage volumes store model artifacts and incremental
                     states. Training algorithms might also use the ML storage
                     volume for scratch space. If you want to store the train-
                     ing data in the ML storage volume,  choose  File  as  the
                     TrainingInputMode in the algorithm specification.

                     When  using  an ML instance with NVMe SSD volumes , Sage-
                     Maker doesn't provision Amazon EBS  General  Purpose  SSD
                     (gp2)   storage.   Available  storage  is  fixed  to  the
                     NVMe-type instance's storage capacity. SageMaker  config-
                     ures  storage  paths  for training datasets, checkpoints,
                     model artifacts, and outputs to use the  entire  capacity
                     of  the  instance storage. For example, ML instance fami-
                     lies with the NVMe-type instance storage include ml.p4d ,
                     ml.g4dn , and ml.g5 .

                     When  using  an ML instance with the EBS-only storage op-
                     tion and without instance storage, you  must  define  the
                     size  of  EBS  volume  through  VolumeSizeInGB in the Re-
                     sourceConfig API. For example, ML instance families  that
                     use EBS volumes include ml.c5 and ml.p2 .

                     To  look  up  instance  types  and their instance storage
                     types and volumes, see Amazon EC2 Instance Types .

                     To find the default local paths defined by the  SageMaker
                     training  platform, see Amazon SageMaker Training Storage
                     Folders for Training Datasets, Checkpoints,  Model  Arti-
                     facts, and Outputs .

                 VolumeKmsKeyId -> (string)
                     The  Amazon  Web  Services KMS key that SageMaker uses to
                     encrypt data on the storage volume  attached  to  the  ML
                     compute instance(s) that run the training job.

                     NOTE:
                        Certain  Nitro-based  instances include local storage,
                        dependent on the instance type. Local storage  volumes
                        are encrypted using a hardware module on the instance.
                        You can't request a VolumeKmsKeyId when using  an  in-
                        stance type with local storage.

                        For  a  list  of instance types that support local in-
                        stance storage, see Instance Store Volumes .

                        For more information about local instance storage  en-
                        cryption, see SSD Instance Store Volumes .

                     The  VolumeKmsKeyId  can  be in any of the following for-
                     mats:

                     o // KMS Key ID  "1234abcd-12ab-34cd-56ef-1234567890ab"

                     o //  Amazon  Resource  Name   (ARN)   of   a   KMS   Key
                       "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"

                 KeepAlivePeriodInSeconds -> (integer)
                     The duration of time in seconds to retain configured  re-
                     sources in a warm pool for subsequent training jobs.

                 InstanceGroups -> (list)
                     The configuration of a heterogeneous cluster in JSON for-
                     mat.

                     (structure)
                        Defines an instance group  for  heterogeneous  cluster
                        training.  When  requesting  a  training job using the
                        CreateTrainingJob API, you can configure multiple  in-
                        stance groups .

                        InstanceType -> (string)
                            Specifies the instance type of the instance group.

                        InstanceCount -> (integer)
                            Specifies  the number of instances of the instance
                            group.

                        InstanceGroupName -> (string)
                            Specifies the name of the instance group.

                 TrainingPlanArn -> (string)
                     The Amazon Resource Name (ARN); of the training  plan  to
                     use for this resource configuration.

              HyperParameterTuningResourceConfig -> (structure)
                 The  configuration  for  the hyperparameter tuning resources,
                 including the compute instances and storage volumes, used for
                 training jobs launched by the tuning job. By default, storage
                 volumes hold model artifacts and incremental  states.  Choose
                 File  for TrainingInputMode in the AlgorithmSpecification pa-
                 rameter to additionally store training data  in  the  storage
                 volume (optional).

                 InstanceType -> (string)
                     The instance type used to run hyperparameter optimization
                     tuning jobs. See descriptions of instance types for  more
                     information.

                 InstanceCount -> (integer)
                     The  number  of compute instances of type InstanceType to
                     use. For distributed training , select  a  value  greater
                     than 1.

                 VolumeSizeInGB -> (integer)
                     The  volume  size in GB for the storage volume to be used
                     in  processing  hyperparameter  optimization  jobs   (op-
                     tional). These volumes store model artifacts, incremental
                     states and optionally, scratch space for  training  algo-
                     rithms.  Do  not  provide a value for this parameter if a
                     value for InstanceConfigs is also specified.

                     Some instance types have  a  fixed  total  local  storage
                     size.  If you select one of these instances for training,
                     VolumeSizeInGB cannot be greater than  this  total  size.
                     For  a list of instance types with local instance storage
                     and their sizes, see instance store volumes .

                     NOTE:
                        SageMaker supports only the General Purpose SSD  (gp2)
                        storage volume type.

                 VolumeKmsKeyId -> (string)
                     A  key used by Amazon Web Services Key Management Service
                     to encrypt data on the storage  volume  attached  to  the
                     compute  instances  used to run the training job. You can
                     use either of the following formats to specify a key.

                     KMS Key ID:
                        "1234abcd-12ab-34cd-56ef-1234567890ab"

                     Amazon Resource Name (ARN) of a KMS key:
                        "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"

                     Some  instances  use  local storage, which use a hardware
                     module to encrypt storage volumes. If you choose  one  of
                     these instance types, you cannot request a VolumeKmsKeyId
                     . For a list of instance types that  use  local  storage,
                     see  instance  store volumes . For more information about
                     Amazon Web Services Key Management Service, see  KMS  en-
                     cryption for more information.

                 AllocationStrategy -> (string)
                     The  strategy that determines the order of preference for
                     resources specified in InstanceConfigs used  in  hyperpa-
                     rameter optimization.

                 InstanceConfigs -> (list)
                     A  list  containing  the configuration(s) for one or more
                     resources for processing hyperparameter jobs.  These  re-
                     sources  include compute instances and storage volumes to
                     use in model training  jobs  launched  by  hyperparameter
                     tuning jobs. The AllocationStrategy controls the order in
                     which multiple configurations provided in InstanceConfigs
                     are used.

                     NOTE:
                        If  you  only want to use a single instance configura-
                        tion  inside  the   HyperParameterTuningResourceConfig
                        API,  do not provide a value for InstanceConfigs . In-
                        stead, use InstanceType , VolumeSizeInGB and Instance-
                        Count  .  If  you use InstanceConfigs , do not provide
                        values for InstanceType , VolumeSizeInGB or  Instance-
                        Count .

                     (structure)
                        The  configuration for hyperparameter tuning resources
                        for use in training jobs launched by the  tuning  job.
                        These  resources include compute instances and storage
                        volumes. Specify one or more compute instance configu-
                        rations  and allocation strategies to select resources
                        (optional).

                        InstanceType -> (string)
                            The instance type used for processing of  hyperpa-
                            rameter  optimization  jobs.  Choose  from general
                            purpose (no GPUs)  instance  types:  ml.m5.xlarge,
                            ml.m5.2xlarge,  and ml.m5.4xlarge or compute opti-
                            mized (no GPUs) instance types:  ml.c5.xlarge  and
                            ml.c5.2xlarge. For more information about instance
                            types, see instance type descriptions .

                        InstanceCount -> (integer)
                            The number of instances of the type  specified  by
                            InstanceType  .  Choose  an  instance count larger
                            than 1 for distributed  training  algorithms.  See
                            Step  2:  Launch  a SageMaker Distributed Training
                            Job Using the SageMaker Python SDK for more infor-
                            mation.

                        VolumeSizeInGB -> (integer)
                            The  volume size in GB of the data to be processed
                            for hyperparameter optimization (optional).

              StoppingCondition -> (structure)
                 Specifies a limit to how long a model hyperparameter training
                 job can run. It also specifies how long a managed spot train-
                 ing job has to complete. When the job reaches the time limit,
                 SageMaker  ends  the  training job. Use this API to cap model
                 training costs.

                 MaxRuntimeInSeconds -> (integer)
                     The maximum length of time, in seconds, that  a  training
                     or compilation job can run before it is stopped.

                     For compilation jobs, if the job does not complete during
                     this time, a TimeOut error  is  generated.  We  recommend
                     starting  with  900  seconds  and increasing as necessary
                     based on your model.

                     For all other jobs, if the job does not  complete  during
                     this  time, SageMaker ends the job. When RetryStrategy is
                     specified in the job request, MaxRuntimeInSeconds  speci-
                     fies  the  maximum time for all of the attempts in total,
                     not each individual attempt. The default value is 1  day.
                     The maximum value is 28 days.

                     The maximum time that a TrainingJob can run in total, in-
                     cluding any time spent publishing  metrics  or  archiving
                     and  uploading  models  after  it has been stopped, is 30
                     days.

                 MaxWaitTimeInSeconds -> (integer)
                     The maximum length of time, in seconds,  that  a  managed
                     Spot  training  job  has to complete. It is the amount of
                     time spent waiting for Spot capacity plus the  amount  of
                     time the job can run. It must be equal to or greater than
                     MaxRuntimeInSeconds . If the job does not complete during
                     this time, SageMaker ends the job.

                     When  RetryStrategy  is  specified  in  the  job request,
                     MaxWaitTimeInSeconds specifies the maximum time  for  all
                     of the attempts in total, not each individual attempt.

                 MaxPendingTimeInSeconds -> (integer)
                     The  maximum  length of time, in seconds, that a training
                     or compilation job can be pending before it is stopped.

              EnableNetworkIsolation -> (boolean)
                 Isolates the training container. No inbound or outbound  net-
                 work calls can be made, except for calls between peers within
                 a training cluster for distributed training. If network  iso-
                 lation is used for training jobs that are configured to use a
                 VPC, SageMaker downloads and uploads customer data and  model
                 artifacts  through  the  specified VPC, but the training con-
                 tainer does not have network access.

              EnableInterContainerTrafficEncryption -> (boolean)
                 To encrypt all communications between ML compute instances in
                 distributed  training,  choose  True  .  Encryption  provides
                 greater security for distributed training, but training might
                 take  longer. How long it takes depends on the amount of com-
                 munication between compute instances, especially if you use a
                 deep learning algorithm in distributed training.

              EnableManagedSpotTraining -> (boolean)
                 A Boolean indicating whether managed spot training is enabled
                 (True ) or not (False ).

              CheckpointConfig -> (structure)
                 Contains information about the output  location  for  managed
                 spot training checkpoint data.

                 S3Uri -> (string)
                     Identifies  the S3 path where you want SageMaker to store
                     checkpoints. For example,  s3://bucket-name/key-name-pre-
                     fix .

                 LocalPath -> (string)
                     (Optional)  The  local  directory  where  checkpoints are
                     written. The default directory is /opt/ml/checkpoints/ .

              RetryStrategy -> (structure)
                 The number of times to retry the job when the job  fails  due
                 to an InternalServerError .

                 MaximumRetryAttempts -> (integer)
                     The number of times to retry the job. When the job is re-
                     tried, it's SecondaryStatus is changed to STARTING .

              Environment -> (map)
                 An environment variable that you can pass into the  SageMaker
                 CreateTrainingJob  API.  You  can use an existing environment
                 variable from the training container or  use  your  own.  See
                 Define metrics and variables for more information.

                 NOTE:
                     The  maximum  number  of  items specified for Map Entries
                     refers to the maximum number of environment variables for
                     each  TrainingJobDefinition  and also the maximum for the
                     hyperparameter tuning job itself. That is, the sum of the
                     number  of environment variables for all the training job
                     definitions can't exceed the maximum number specified.

                 key -> (string)

                 value -> (string)

       HyperParameterTuningJobStatus -> (string)
          The status of the tuning job.

       CreationTime -> (timestamp)
          The date and time that the tuning job started.

       HyperParameterTuningEndTime -> (timestamp)
          The date and time that the tuning job ended.

       LastModifiedTime -> (timestamp)
          The date and time that the status of the tuning job was modified.

       TrainingJobStatusCounters -> (structure)
          The TrainingJobStatusCounters object that specifies  the  number  of
          training jobs, categorized by status, that this tuning job launched.

          Completed -> (integer)
              The  number  of completed training jobs launched by the hyperpa-
              rameter tuning job.

          InProgress -> (integer)
              The number of in-progress training jobs launched by  a  hyperpa-
              rameter tuning job.

          RetryableError -> (integer)
              The  number  of training jobs that failed, but can be retried. A
              failed training job can be retried only if it failed because  an
              internal service error occurred.

          NonRetryableError -> (integer)
              The  number of training jobs that failed and can't be retried. A
              failed training job can't be retried  if  it  failed  because  a
              client error occurred.

          Stopped -> (integer)
              The  number of training jobs launched by a hyperparameter tuning
              job that were manually stopped.

       ObjectiveStatusCounters -> (structure)
          The ObjectiveStatusCounters object  that  specifies  the  number  of
          training  jobs,  categorized  by the status of their final objective
          metric, that this tuning job launched.

          Succeeded -> (integer)
              The number of training jobs whose  final  objective  metric  was
              evaluated  by  the hyperparameter tuning job and used in the hy-
              perparameter tuning process.

          Pending -> (integer)
              The number of training jobs that are  in  progress  and  pending
              evaluation of their final objective metric.

          Failed -> (integer)
              The number of training jobs whose final objective metric was not
              evaluated and used in the hyperparameter  tuning  process.  This
              typically occurs when the training job failed or did not emit an
              objective metric.

       BestTrainingJob -> (structure)
          A TrainingJobSummary object that describes  the  training  job  that
          completed with the best current HyperParameterTuningJobObjective .

          TrainingJobDefinitionName -> (string)
              The training job definition name.

          TrainingJobName -> (string)
              The name of the training job.

          TrainingJobArn -> (string)
              The Amazon Resource Name (ARN) of the training job.

          TuningJobName -> (string)
              The HyperParameter tuning job that launched the training job.

          CreationTime -> (timestamp)
              The date and time that the training job was created.

          TrainingStartTime -> (timestamp)
              The date and time that the training job started.

          TrainingEndTime -> (timestamp)
              Specifies  the  time  when the training job ends on training in-
              stances. You are billed for the time interval between the  value
              of  TrainingStartTime  and  this  time.  For successful jobs and
              stopped jobs, this is the time after  model  artifacts  are  up-
              loaded. For failed jobs, this is the time when SageMaker detects
              a job failure.

          TrainingJobStatus -> (string)
              The status of the training job.

          TunedHyperParameters -> (map)
              A list of the hyperparameters for which you specified ranges  to
              search.

              key -> (string)

              value -> (string)

          FailureReason -> (string)
              The reason that the training job failed.

          FinalHyperParameterTuningJobObjectiveMetric -> (structure)
              The   FinalHyperParameterTuningJobObjectiveMetric   object  that
              specifies the value of the objective metric of  the  tuning  job
              that launched this training job.

              Type -> (string)
                 Select if you want to minimize or maximize the objective met-
                 ric during hyperparameter tuning.

              MetricName -> (string)
                 The name of the objective metric. For SageMaker built-in  al-
                 gorithms,  metrics are defined per algorithm. See the metrics
                 for XGBoost as an example. You can also use  a  custom  algo-
                 rithm  for training and define your own metrics. For more in-
                 formation, see Define metrics and environment variables .

              Value -> (float)
                 The value of the objective metric.

          ObjectiveStatus -> (string)
              The status of the objective metric for the training job:

              o Succeeded: The final objective metric for the training job was
                evaluated by the hyperparameter tuning job and used in the hy-
                perparameter tuning process.

              o Pending: The training job is in progress and evaluation of its
                final objective metric is pending.

              o Failed:  The  final  objective metric for the training job was
                not evaluated, and was not used in the  hyperparameter  tuning
                process. This typically occurs when the training job failed or
                did not emit an objective metric.

       OverallBestTrainingJob -> (structure)
          If the hyperparameter tuning job is an warm start tuning job with  a
          WarmStartType   of   IDENTICAL_DATA_AND_ALGORITHM   ,  this  is  the
          TrainingJobSummary for the training job with the best objective met-
          ric  value  of all training jobs launched by this tuning job and all
          parent jobs specified for the warm start tuning job.

          TrainingJobDefinitionName -> (string)
              The training job definition name.

          TrainingJobName -> (string)
              The name of the training job.

          TrainingJobArn -> (string)
              The Amazon Resource Name (ARN) of the training job.

          TuningJobName -> (string)
              The HyperParameter tuning job that launched the training job.

          CreationTime -> (timestamp)
              The date and time that the training job was created.

          TrainingStartTime -> (timestamp)
              The date and time that the training job started.

          TrainingEndTime -> (timestamp)
              Specifies the time when the training job ends  on  training  in-
              stances.  You are billed for the time interval between the value
              of TrainingStartTime and this  time.  For  successful  jobs  and
              stopped  jobs,  this  is  the time after model artifacts are up-
              loaded. For failed jobs, this is the time when SageMaker detects
              a job failure.

          TrainingJobStatus -> (string)
              The status of the training job.

          TunedHyperParameters -> (map)
              A  list of the hyperparameters for which you specified ranges to
              search.

              key -> (string)

              value -> (string)

          FailureReason -> (string)
              The reason that the training job failed.

          FinalHyperParameterTuningJobObjectiveMetric -> (structure)
              The  FinalHyperParameterTuningJobObjectiveMetric   object   that
              specifies  the  value  of the objective metric of the tuning job
              that launched this training job.

              Type -> (string)
                 Select if you want to minimize or maximize the objective met-
                 ric during hyperparameter tuning.

              MetricName -> (string)
                 The  name of the objective metric. For SageMaker built-in al-
                 gorithms, metrics are defined per algorithm. See the  metrics
                 for  XGBoost  as  an example. You can also use a custom algo-
                 rithm for training and define your own metrics. For more  in-
                 formation, see Define metrics and environment variables .

              Value -> (float)
                 The value of the objective metric.

          ObjectiveStatus -> (string)
              The status of the objective metric for the training job:

              o Succeeded: The final objective metric for the training job was
                evaluated by the hyperparameter tuning job and used in the hy-
                perparameter tuning process.

              o Pending: The training job is in progress and evaluation of its
                final objective metric is pending.

              o Failed: The final objective metric for the  training  job  was
                not  evaluated,  and was not used in the hyperparameter tuning
                process. This typically occurs when the training job failed or
                did not emit an objective metric.

       WarmStartConfig -> (structure)
          The  configuration  for starting the hyperparameter parameter tuning
          job using one or more previous tuning jobs as a starting point.  The
          results  of  previous  tuning jobs are used to inform which combina-
          tions of hyperparameters to search over in the new tuning job.

          ParentHyperParameterTuningJobs -> (list)
              An array of hyperparameter tuning jobs  that  are  used  as  the
              starting  point  for the new hyperparameter tuning job. For more
              information about warm starting a hyperparameter tuning job, see
              Using a Previous Hyperparameter Tuning Job as a Starting Point .

              Hyperparameter tuning jobs created before October 1, 2018 cannot
              be used as parent jobs for warm start tuning jobs.

              (structure)
                 A previously completed or stopped hyperparameter  tuning  job
                 to  be used as a starting point for a new hyperparameter tun-
                 ing job.

                 HyperParameterTuningJobName -> (string)
                     The name of the hyperparameter tuning job to be used as a
                     starting point for a new hyperparameter tuning job.

          WarmStartType -> (string)
              Specifies one of the following:
                 IDENTICAL_DATA_AND_ALGORITHM

              The  new  hyperparameter tuning job uses the same input data and
              training image as the parent tuning jobs. You can change the hy-
              perparameter ranges to search and the maximum number of training
              jobs that the hyperparameter tuning job launches. You cannot use
              a  new  version of the training algorithm, unless the changes in
              the new version do not affect the algorithm itself. For example,
              changes  that  improve logging or adding support for a different
              data format are allowed. You  can  also  change  hyperparameters
              from  tunable to static, and from static to tunable, but the to-
              tal number of static plus tunable  hyperparameters  must  remain
              the  same  as it is in all parent jobs. The objective metric for
              the new tuning job must be the same as for all parent jobs.
                 TRANSFER_LEARNING

              The new hyperparameter tuning job can include input data, hyper-
              parameter  ranges,  maximum  number of concurrent training jobs,
              and maximum number of training  jobs  that  are  different  than
              those of its parent hyperparameter tuning jobs. The training im-
              age can also be a different version from the version used in the
              parent  hyperparameter  tuning job. You can also change hyperpa-
              rameters from tunable to static, and from static to tunable, but
              the total number of static plus tunable hyperparameters must re-
              main the same as it is in all parent jobs. The objective  metric
              for the new tuning job must be the same as for all parent jobs.

       Autotune -> (structure)
          A  flag  to  indicate  if autotune is enabled for the hyperparameter
          tuning job.

          Mode -> (string)
              Set Mode to Enabled if you want to use Autotune.

       FailureReason -> (string)
          If the tuning job failed, the reason it failed.

       TuningJobCompletionDetails -> (structure)
          Tuning job completion information returned as the  response  from  a
          hyperparameter tuning job. This information tells if your tuning job
          has or has not converged. It also includes the  number  of  training
          jobs  that  have not improved model performance as evaluated against
          the objective function.

          NumberOfTrainingJobsObjectiveNotImproving -> (integer)
              The number of training jobs launched by a tuning  job  that  are
              not  improving  (1%  or  less)  as measured by model performance
              evaluated against an objective function.

          ConvergenceDetectedTime -> (timestamp)
              The time in timestamp format that  AMT  detected  model  conver-
              gence, as defined by a lack of significant improvement over time
              based on criteria developed over a wide range of diverse  bench-
              marking tests.

       ConsumedResources -> (structure)
          The total resources consumed by your hyperparameter tuning job.

          RuntimeInSeconds -> (integer)
              The  wall  clock  runtime in seconds used by your hyperparameter
              tuning job.



                                         DESCRIBE-HYPER-PARAMETER-TUNING-JOB()
