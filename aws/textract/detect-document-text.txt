DETECT-DOCUMENT-TEXT()                                  DETECT-DOCUMENT-TEXT()



NAME
       detect-document-text -

DESCRIPTION
       Detects text in the input document. Amazon Textract can detect lines of
       text and the words that make up a line of text. The input document must
       be  in one of the following image formats: JPEG, PNG, PDF, or TIFF. De-
       tectDocumentText returns the detected text in an array  of   Block  ob-
       jects.

       Each  document  page has as an associated Block of type PAGE. Each PAGE
       Block object is the parent of LINE Block  objects  that  represent  the
       lines  of  detected text on a page. A LINE Block object is a parent for
       each word that makes up the line. Words are represented  by  Block  ob-
       jects of type WORD.
          DetectDocumentText  is a synchronous operation. To analyze documents
          asynchronously, use  StartDocumentTextDetection .

       For more information, see Document Text Detection .

       See also: AWS API Documentation

SYNOPSIS
            detect-document-text
          --document <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --document (structure)
          The input document as base64-encoded bytes or an Amazon  S3  object.
          If you use the AWS CLI to call Amazon Textract operations, you can't
          pass image bytes. The document must be an image in JPEG or PNG  for-
          mat.

          If  you're  using  an AWS SDK to call Amazon Textract, you might not
          need to base64-encode image bytes that are passed  using  the  Bytes
          field.

          Bytes -> (blob)
              A  blob  of base64-encoded document bytes. The maximum size of a
              document that's provided in a blob of bytes is 5 MB.  The  docu-
              ment bytes must be in PNG or JPEG format.

              If  you're  using  an AWS SDK to call Amazon Textract, you might
              not need to base64-encode image bytes  passed  using  the  Bytes
              field.

          S3Object -> (structure)
              Identifies an S3 object as the document source. The maximum size
              of a document that's stored in an S3 bucket is 5 MB.

              Bucket -> (string)
                 The name of the S3 bucket. Note that the # character  is  not
                 valid in the file name.

              Name -> (string)
                 The  file  name of the input document. Synchronous operations
                 can use image files that are in JPEG or PNG format. Asynchro-
                 nous operations also support PDF and TIFF format files.

              Version -> (string)
                 If the bucket has versioning enabled, you can specify the ob-
                 ject version.

       Shorthand Syntax:

          Bytes=blob,S3Object={Bucket=string,Name=string,Version=string}

       JSON Syntax:

          {
            "Bytes": blob,
            "S3Object": {
              "Bucket": "string",
              "Name": "string",
              "Version": "string"
            }
          }

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To detect text in a document

       The following detect-document-text The following example shows  how  to
       detect text in a document.

       Linux/macOS:

          aws textract detect-document-text \
              --document '{"S3Object":{"Bucket":"bucket","Name":"document"}}'

       Windows:

          aws textract detect-document-text \
              --document "{\"S3Object\":{\"Bucket\":\"bucket\",\"Name\":\"document\"}}" \
              --region region-name

       Output:

          {
              "Blocks": [
                  {
                      "Geometry": {
                          "BoundingBox": {
                              "Width": 1.0,
                              "Top": 0.0,
                              "Left": 0.0,
                              "Height": 1.0
                          },
                          "Polygon": [
                              {
                                  "Y": 0.0,
                                  "X": 0.0
                              },
                              {
                                  "Y": 0.0,
                                  "X": 1.0
                              },
                              {
                                  "Y": 1.0,
                                  "X": 1.0
                              },
                              {
                                  "Y": 1.0,
                                  "X": 0.0
                              }
                          ]
                      },
                      "Relationships": [
                          {
                              "Type": "CHILD",
                              "Ids": [
                                  "896a9f10-9e70-4412-81ce-49ead73ed881",
                                  "0da18623-dc4c-463d-a3d1-9ac050e9e720",
                                  "167338d7-d38c-4760-91f1-79a8ec457bb2"
                              ]
                          }
                      ],
                      "BlockType": "PAGE",
                      "Id": "21f0535e-60d5-4bc7-adf2-c05dd851fa25"
                  },
                  {
                      "Relationships": [
                          {
                              "Type": "CHILD",
                              "Ids": [
                                  "62490c26-37ea-49fa-8034-7a9ff9369c9c",
                                  "1e4f3f21-05bd-4da9-ba10-15d01e66604c"
                              ]
                          }
                      ],
                      "Confidence": 89.11581420898438,
                      "Geometry": {
                          "BoundingBox": {
                              "Width": 0.33642634749412537,
                              "Top": 0.17169663310050964,
                              "Left": 0.13885067403316498,
                              "Height": 0.49159330129623413
                          },
                          "Polygon": [
                              {
                                  "Y": 0.17169663310050964,
                                  "X": 0.13885067403316498
                              },
                              {
                                  "Y": 0.17169663310050964,
                                  "X": 0.47527703642845154
                              },
                              {
                                  "Y": 0.6632899641990662,
                                  "X": 0.47527703642845154
                              },
                              {
                                  "Y": 0.6632899641990662,
                                  "X": 0.13885067403316498
                              }
                          ]
                      },
                      "Text": "He llo,",
                      "BlockType": "LINE",
                      "Id": "896a9f10-9e70-4412-81ce-49ead73ed881"
                  },
                  {
                      "Relationships": [
                          {
                              "Type": "CHILD",
                              "Ids": [
                                  "19b28058-9516-4352-b929-64d7cef29daf"
                              ]
                          }
                      ],
                      "Confidence": 85.5694351196289,
                      "Geometry": {
                          "BoundingBox": {
                              "Width": 0.33182239532470703,
                              "Top": 0.23131252825260162,
                              "Left": 0.5091826915740967,
                              "Height": 0.3766750991344452
                          },
                          "Polygon": [
                              {
                                  "Y": 0.23131252825260162,
                                  "X": 0.5091826915740967
                              },
                              {
                                  "Y": 0.23131252825260162,
                                  "X": 0.8410050868988037
                              },
                              {
                                  "Y": 0.607987642288208,
                                  "X": 0.8410050868988037
                              },
                              {
                                  "Y": 0.607987642288208,
                                  "X": 0.5091826915740967
                              }
                          ]
                      },
                      "Text": "worlc",
                      "BlockType": "LINE",
                      "Id": "0da18623-dc4c-463d-a3d1-9ac050e9e720"
                  }
              ],
              "DocumentMetadata": {
                  "Pages": 1
              }
          }

       For  more information, see Detecting Document Text with Amazon Textract
       in the Amazon Textract Developers Guide

OUTPUT
       DocumentMetadata -> (structure)
          Metadata about the document. It contains the number  of  pages  that
          are detected in the document.

          Pages -> (integer)
              The number of pages that are detected in the document.

       Blocks -> (list)
          An  array  of Block objects that contain the text that's detected in
          the document.

          (structure)
              A Block represents items  that  are  recognized  in  a  document
              within  a  group  of pixels close to each other. The information
              returned in a Block object depends on the type of operation.  In
              text detection for documents (for example  DetectDocumentText ),
              you get information about the detected words and lines of  text.
              In  text  analysis (for example  AnalyzeDocument ), you can also
              get information about the fields, tables, and selection elements
              that are detected in the document.

              An  array  of  Block objects is returned by both synchronous and
              asynchronous operations. In synchronous operations, such as  De-
              tectDocumentText  , the array of Block objects is the entire set
              of results. In asynchronous operations,  such  as   GetDocument-
              Analysis , the array is returned over one or more responses.

              For more information, see How Amazon Textract Works .

              BlockType -> (string)
                 The  type  of  text item that's recognized. In operations for
                 text detection, the following types are returned:

                 o PAGE - Contains a list of the LINE Block objects  that  are
                   detected on a document page.

                 o WORD - A word detected on a document page. A word is one or
                   more ISO basic Latin script characters  that  aren't  sepa-
                   rated by spaces.

                 o LINE - A string of tab-delimited, contiguous words that are
                   detected on a document page.

                 In text analysis operations,  the  following  types  are  re-
                 turned:

                 o PAGE  - Contains a list of child Block objects that are de-
                   tected on a document page.

                 o KEY_VALUE_SET - Stores the KEY and VALUE Block objects  for
                   linked text that's detected on a document page. Use the En-
                   tityType field to determine if a KEY_VALUE_SET object is  a
                   KEY Block object or a VALUE Block object.

                 o WORD - A word that's detected on a document page. A word is
                   one or more ISO basic Latin script characters  that  aren't
                   separated by spaces.

                 o LINE - A string of tab-delimited, contiguous words that are
                   detected on a document page.

                 o TABLE - A table that's detected on a document page. A table
                   is grid-based information with two or more rows or columns,
                   with a cell span of one row and one column each.

                 o TABLE_TITLE - The title of a table. A title is typically  a
                   line  of  text  above  or below a table, or embedded as the
                   first row of a table.

                 o TABLE_FOOTER - The footer associated with a table. A footer
                   is  typically  a line or lines of text below a table or em-
                   bedded as the last row of a table.

                 o CELL - A cell within a detected table. The cell is the par-
                   ent of the block that contains the text in the cell.

                 o MERGED_CELL  -  A  cell in a table whose content spans more
                   than one row or column. The Relationships  array  for  this
                   cell contain data from individual cells.

                 o SELECTION_ELEMENT  -  A selection element such as an option
                   button (radio button) or a check box that's detected  on  a
                   document  page.  Use the value of SelectionStatus to deter-
                   mine the status of the selection element.

                 o SIGNATURE - The location and confidene score of a signature
                   detected  on  a document page. Can be returned as part of a
                   Key-Value pair or a detected cell.

                 o QUERY - A question asked during the  call  of  AnalyzeDocu-
                   ment.  Contains  an alias and an ID that attaches it to its
                   answer.

                 o QUERY_RESULT - A response to a question  asked  during  the
                   call  of  analyze  document. Comes with an alias and ID for
                   ease of locating in a response. Also contains location  and
                   confidence score.

              Confidence -> (float)
                 The confidence score that Amazon Textract has in the accuracy
                 of the recognized text  and  the  accuracy  of  the  geometry
                 points around the recognized text.

              Text -> (string)
                 The  word  or  line  of text that's recognized by Amazon Tex-
                 tract.

              TextType -> (string)
                 The kind of text that Amazon Textract has detected. Can check
                 for handwritten text and printed text.

              RowIndex -> (integer)
                 The row in which a table cell is located. The first row posi-
                 tion is 1. RowIndex isn't returned by DetectDocumentText  and
                 GetDocumentTextDetection .

              ColumnIndex -> (integer)
                 The  column  in  which a table cell appears. The first column
                 position is 1. ColumnIndex isn't returned by  DetectDocument-
                 Text and GetDocumentTextDetection .

              RowSpan -> (integer)
                 The number of rows that a table cell spans. RowSpan isn't re-
                 turned by DetectDocumentText and GetDocumentTextDetection .

              ColumnSpan -> (integer)
                 The number of columns that a  table  cell  spans.  ColumnSpan
                 isn't  returned  by DetectDocumentText and GetDocumentTextDe-
                 tection .

              Geometry -> (structure)
                 The location of the recognized text on the image. It includes
                 an axis-aligned, coarse bounding box that surrounds the text,
                 and a finer-grain polygon for more accurate spatial  informa-
                 tion.

                 BoundingBox -> (structure)
                     An  axis-aligned coarse representation of the location of
                     the recognized item on the document page.

                     Width -> (float)
                        The width of the bounding box as a ratio of the  over-
                        all document page width.

                     Height -> (float)
                        The height of the bounding box as a ratio of the over-
                        all document page height.

                     Left -> (float)
                        The left coordinate of the bounding box as a ratio  of
                        overall document page width.

                     Top -> (float)
                        The  top  coordinate of the bounding box as a ratio of
                        overall document page height.

                 Polygon -> (list)
                     Within the bounding box, a  fine-grained  polygon  around
                     the recognized item.

                     (structure)
                        The X and Y coordinates of a point on a document page.
                        The X and Y values that are returned are ratios of the
                        overall  document page size. For example, if the input
                        document is 700 x 200 and the operation returns  X=0.5
                        and  Y=0.25,  then  the point is at the (350,50) pixel
                        coordinate on the document page.

                        An array of Point objects, Polygon ,  is  returned  by
                        DetectDocumentText . Polygon represents a fine-grained
                        polygon around detected text.  For  more  information,
                        see Geometry in the Amazon Textract Developer Guide.

                        X -> (float)
                            The  value  of  the  X coordinate for a point on a
                            Polygon .

                        Y -> (float)
                            The value of the Y coordinate for  a  point  on  a
                            Polygon .

              Id -> (string)
                 The  identifier  for  the  recognized text. The identifier is
                 only unique for a single operation.

              Relationships -> (list)
                 A list of relationship objects that describe how  blocks  are
                 related  to each other. For example, a LINE block object con-
                 tains a CHILD relationship type with  the  WORD  blocks  that
                 make  up  the line of text. There aren't Relationship objects
                 in the list for relationships that don't exist, such as  when
                 the current block has no child blocks.

                 (structure)
                     Information about how blocks are related to each other. A
                     Block object contains 0 or more  Relation  objects  in  a
                     list, Relationships . For more information, see  Block .

                     The  Type  element  provides the type of the relationship
                     for all blocks in the IDs array.

                     Type -> (string)
                        The type of relationship between the blocks in the IDs
                        array  and  the  current block. The following list de-
                        scribes the relationship types that can be returned.

                        o VALUE - A list that contains the  ID  of  the  VALUE
                          block  that's associated with the KEY of a key-value
                          pair.

                        o CHILD - A list of IDs  that  identify  blocks  found
                          within  the  current block object. For example, WORD
                          blocks have a CHILD relationship to the  LINE  block
                          type.

                        o MERGED_CELL  -  A  list of IDs that identify each of
                          the MERGED_CELL block types in a table.

                        o ANSWER  -  A  list  that  contains  the  ID  of  the
                          QUERY_RESULT  block thats associated with the corre-
                          sponding QUERY block.

                        o TABLE - A list of IDs that identify associated TABLE
                          block types.

                        o TABLE_TITLE  -  A  list that contains the ID for the
                          TABLE_TITLE block type in a table.

                        o TABLE_FOOTER - A list of IDs that identify  the  TA-
                          BLE_FOOTER block types in a table.

                     Ids -> (list)
                        An  array  of  IDs for related blocks. You can get the
                        type of the relationship from the Type element.

                        (string)

              EntityTypes -> (list)
                 The type of entity.

                 The following entity types can be returned by FORMS analysis:

                 o KEY - An identifier for a field on the document.

                 o VALUE - The field text.

                 The following entity types can be returned by  TABLES  analy-
                 sis:

                 o COLUMN_HEADER  -  Identifies  a  cell that is a header of a
                   column.

                 o TABLE_TITLE - Identifies a cell that is a title within  the
                   table.

                 o TABLE_SECTION_TITLE  - Identifies a cell that is a title of
                   a section within a table. A section title is  a  cell  that
                   typically spans an entire row above a section.

                 o TABLE_FOOTER  - Identifies a cell that is a footer of a ta-
                   ble.

                 o TABLE_SUMMARY - Identifies a summary cell  of  a  table.  A
                   summary  cell  can  be  a  row of a table or an additional,
                   smaller table that contains summary information for another
                   table.

                 o STRUCTURED_TABLE  -  Identifies a table with column headers
                   where the content of each row corresponds to the headers.

                 o SEMI_STRUCTURED_TABLE - Identifies a non-structured table.
                     EntityTypes isn't returned by DetectDocumentText and Get-
                     DocumentTextDetection .

                 (string)

              SelectionStatus -> (string)
                 The  selection  status of a selection element, such as an op-
                 tion button or check box.

              Page -> (integer)
                 The page on which a block was detected. Page is  returned  by
                 synchronous  and asynchronous operations. Page values greater
                 than 1 are only returned for multipage documents that are  in
                 PDF or TIFF format. A scanned image (JPEG/PNG) provided to an
                 asynchronous operation, even if it contains multiple document
                 pages,  is considered a single-page document. This means that
                 for scanned images the value of Page is always 1. Synchronous
                 operations  will  also return a Page value of 1 because every
                 input document is considered to be a single-page document.

              Query -> (structure)
                 Text -> (string)
                     Question that Amazon Textract will apply to the document.
                     An example would be "What is the customer's SSN?"

                 Alias -> (string)
                     Alias attached to the query, for ease of location.

                 Pages -> (list)
                     Pages  is  a  parameter  that  the user inputs to specify
                     which pages to apply a query to. The following is a  list
                     of rules for using this parameter.

                     o If  a  page is not specified, it is set to ["1"] by de-
                       fault.

                     o The following characters are allowed in the parameter's
                       string:  0 1 2 3 4 5 6 7 8 9 - * . No whitespace is al-
                       lowed.

                     o When using * to indicate all pages, it must be the only
                       element in the list.

                     o You  can  use page intervals, such as [1-3, 1-1, 4-*] .
                       Where * indicates last page of document.

                     o Specified pages must be greater than 0 and less than or
                       equal to the number of pages in the document.

                     (string)

       DetectDocumentTextModelVersion -> (string)



                                                        DETECT-DOCUMENT-TEXT()
