ANALYZE-ID()                                                      ANALYZE-ID()



NAME
       analyze-id -

DESCRIPTION
       Analyzes  identity documents for relevant information. This information
       is extracted and returned as  IdentityDocumentFields  ,  which  records
       both the normalized field and value of the extracted text. Unlike other
       Amazon Textract operations, AnalyzeID doesn't return any Geometry data.

       See also: AWS API Documentation

SYNOPSIS
            analyze-id
          --document-pages <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --document-pages (list)
          The document being passed to AnalyzeID.

          (structure)
              The input document, either as bytes or as an S3 object.

              You pass image bytes to an Amazon Textract API operation by  us-
              ing  the  Bytes  property.  For example, you would use the Bytes
              property to pass a document loaded from a local file system. Im-
              age  bytes passed by using the Bytes property must be base64 en-
              coded. Your code might not need to encode document file bytes if
              you're using an AWS SDK to call Amazon Textract API operations.

              You pass images stored in an S3 bucket to an Amazon Textract API
              operation by using the S3Object property. Documents stored in an
              S3 bucket don't need to be base64 encoded.

              The  AWS  Region  for  the S3 bucket that contains the S3 object
              must match the AWS Region that you use for Amazon Textract oper-
              ations.

              If you use the AWS CLI to call Amazon Textract operations, pass-
              ing image bytes using the Bytes property  isn't  supported.  You
              must  first upload the document to an Amazon S3 bucket, and then
              call the operation using the S3Object property.

              For Amazon Textract to process an S3 object, the user must  have
              permission to access the S3 object.

              Bytes -> (blob)
                 A  blob of base64-encoded document bytes. The maximum size of
                 a document that's provided in a blob of bytes is  5  MB.  The
                 document bytes must be in PNG or JPEG format.

                 If you're using an AWS SDK to call Amazon Textract, you might
                 not need to base64-encode image bytes passed using the  Bytes
                 field.

              S3Object -> (structure)
                 Identifies  an  S3 object as the document source. The maximum
                 size of a document that's stored in an S3 bucket is 5 MB.

                 Bucket -> (string)
                     The name of the S3 bucket. Note that the #  character  is
                     not valid in the file name.

                 Name -> (string)
                     The  file  name of the input document. Synchronous opera-
                     tions can use image files that are in JPEG or PNG format.
                     Asynchronous  operations also support PDF and TIFF format
                     files.

                 Version -> (string)
                     If the bucket has versioning enabled, you can specify the
                     object version.

       Shorthand Syntax:

          Bytes=blob,S3Object={Bucket=string,Name=string,Version=string} ...

       JSON Syntax:

          [
            {
              "Bytes": blob,
              "S3Object": {
                "Bucket": "string",
                "Name": "string",
                "Version": "string"
              }
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       IdentityDocuments -> (list)
          The list of documents processed by AnalyzeID. Includes a number  de-
          noting  their  place  in the list and the response structure for the
          document.

          (structure)
              The structure that lists each document processed in an AnalyzeID
              operation.

              DocumentIndex -> (integer)
                 Denotes  the  placement of a document in the IdentityDocument
                 list. The first document is marked 1, the second 2 and so on.

              IdentityDocumentFields -> (list)
                 The structure used to record information extracted from iden-
                 tity  documents.  Contains both normalized field and value of
                 the extracted text.

                 (structure)
                     Structure containing both the normalized type of the  ex-
                     tracted  information  and  the  text  associated with it.
                     These are extracted as Type and Value respectively.

                     Type -> (structure)
                        Used to contain the information detected  by  an  Ana-
                        lyzeID operation.

                        Text -> (string)
                            Text of either the normalized field or value asso-
                            ciated with it.

                        NormalizedValue -> (structure)
                            Only returned for dates, returns the type of value
                            detected  and  the  date written in a more machine
                            readable way.

                            Value -> (string)
                               The   value   of   the   date,    written    as
                               Year-Month-DayTHour:Minute:Second.

                            ValueType -> (string)
                               The  normalized  type of the value detected. In
                               this case, DATE.

                        Confidence -> (float)
                            The confidence score of the detected text.

                     ValueDetection -> (structure)
                        Used to contain the information detected  by  an  Ana-
                        lyzeID operation.

                        Text -> (string)
                            Text of either the normalized field or value asso-
                            ciated with it.

                        NormalizedValue -> (structure)
                            Only returned for dates, returns the type of value
                            detected  and  the  date written in a more machine
                            readable way.

                            Value -> (string)
                               The   value   of   the   date,    written    as
                               Year-Month-DayTHour:Minute:Second.

                            ValueType -> (string)
                               The  normalized  type of the value detected. In
                               this case, DATE.

                        Confidence -> (float)
                            The confidence score of the detected text.

              Blocks -> (list)
                 Individual word recognition, as returned by  document  detec-
                 tion.

                 (structure)
                     A  Block  represents items that are recognized in a docu-
                     ment within a group of pixels close to  each  other.  The
                     information  returned  in  a  Block object depends on the
                     type of operation. In text detection for  documents  (for
                     example   DetectDocumentText ), you get information about
                     the detected words and lines of text.  In  text  analysis
                     (for  example  AnalyzeDocument ), you can also get infor-
                     mation about the fields, tables, and  selection  elements
                     that are detected in the document.

                     An array of Block objects is returned by both synchronous
                     and asynchronous operations. In  synchronous  operations,
                     such  as  DetectDocumentText , the array of Block objects
                     is the entire set of results. In asynchronous operations,
                     such as  GetDocumentAnalysis , the array is returned over
                     one or more responses.

                     For more information, see How Amazon Textract Works .

                     BlockType -> (string)
                        The type of text item that's recognized. In operations
                        for text detection, the following types are returned:

                        o PAGE  -  Contains  a  list of the LINE Block objects
                          that are detected on a document page.

                        o WORD - A word detected on a document page. A word is
                          one  or  more ISO basic Latin script characters that
                          aren't separated by spaces.

                        o LINE - A string of tab-delimited,  contiguous  words
                          that are detected on a document page.

                        In  text  analysis operations, the following types are
                        returned:

                        o PAGE - Contains a list of child Block  objects  that
                          are detected on a document page.

                        o KEY_VALUE_SET  -  Stores the KEY and VALUE Block ob-
                          jects for linked text that's detected on a  document
                          page.  Use  the  EntityType  field to determine if a
                          KEY_VALUE_SET object is a  KEY  Block  object  or  a
                          VALUE Block object.

                        o WORD  - A word that's detected on a document page. A
                          word is one or more ISO basic Latin  script  charac-
                          ters that aren't separated by spaces.

                        o LINE  -  A string of tab-delimited, contiguous words
                          that are detected on a document page.

                        o TABLE - A table that's detected on a document  page.
                          A  table  is grid-based information with two or more
                          rows or columns, with a cell span of one row and one
                          column each.

                        o TABLE_TITLE - The title of a table. A title is typi-
                          cally a line of text above or below a table, or  em-
                          bedded as the first row of a table.

                        o TABLE_FOOTER - The footer associated with a table. A
                          footer is typically a line or lines of text below  a
                          table or embedded as the last row of a table.

                        o CELL  -  A cell within a detected table. The cell is
                          the parent of the block that contains  the  text  in
                          the cell.

                        o MERGED_CELL  - A cell in a table whose content spans
                          more than one row or column. The Relationships array
                          for this cell contain data from individual cells.

                        o SELECTION_ELEMENT  -  A selection element such as an
                          option button (radio button) or a check  box  that's
                          detected on a document page. Use the value of Selec-
                          tionStatus to determine the status of the  selection
                          element.

                        o SIGNATURE  -  The location and confidence score of a
                          signature detected on a document page.  Can  be  re-
                          turned  as  part  of  a Key-Value pair or a detected
                          cell.

                        o QUERY - A question asked during the call of Analyze-
                          Document.  Contains an alias and an ID that attaches
                          it to its answer.

                        o QUERY_RESULT - A response to a question asked during
                          the  call  of  analyze document. Comes with an alias
                          and ID for ease of locating in a response. Also con-
                          tains location and confidence score.

                        The  following BlockTypes are only returned for Amazon
                        Textract Layout.

                        o LAYOUT_TITLE - The main title of the document.

                        o LAYOUT_HEADER - Text located in the  top  margin  of
                          the document.

                        o LAYOUT_FOOTER - Text located in the bottom margin of
                          the document.

                        o LAYOUT_SECTION_HEADER  -  The  titles  of   sections
                          within a document.

                        o LAYOUT_PAGE_NUMBER  -  The  page number of the docu-
                          ments.

                        o LAYOUT_LIST - Any information  grouped  together  in
                          list form.

                        o LAYOUT_FIGURE  -  Indicates the location of an image
                          in a document.

                        o LAYOUT_TABLE - Indicates the location of a table  in
                          the document.

                        o LAYOUT_KEY_VALUE  -  Indicates  the location of form
                          key-values in a document.

                        o LAYOUT_TEXT - Text that is present  typically  as  a
                          part of paragraphs in documents.

                     Confidence -> (float)
                        The  confidence  score that Amazon Textract has in the
                        accuracy of the recognized text and  the  accuracy  of
                        the geometry points around the recognized text.

                     Text -> (string)
                        The  word  or line of text that's recognized by Amazon
                        Textract.

                     TextType -> (string)
                        The kind of text that Amazon  Textract  has  detected.
                        Can check for handwritten text and printed text.

                     RowIndex -> (integer)
                        The  row  in  which a table cell is located. The first
                        row position is 1. RowIndex isn't returned by  Detect-
                        DocumentText and GetDocumentTextDetection .

                     ColumnIndex -> (integer)
                        The  column  in  which a table cell appears. The first
                        column position is 1. ColumnIndex  isn't  returned  by
                        DetectDocumentText and GetDocumentTextDetection .

                     RowSpan -> (integer)
                        The  number  of  rows that a table cell spans. RowSpan
                        isn't returned by DetectDocumentText and  GetDocument-
                        TextDetection .

                     ColumnSpan -> (integer)
                        The  number  of  columns  that  a  table  cell  spans.
                        ColumnSpan isn't returned  by  DetectDocumentText  and
                        GetDocumentTextDetection .

                     Geometry -> (structure)
                        The  location  of the recognized text on the image. It
                        includes an axis-aligned,  coarse  bounding  box  that
                        surrounds the text, and a finer-grain polygon for more
                        accurate spatial information.

                        BoundingBox -> (structure)
                            An axis-aligned coarse representation of the loca-
                            tion of the recognized item on the document page.

                            Width -> (float)
                               The width of the bounding box as a ratio of the
                               overall document page width.

                            Height -> (float)
                               The height of the bounding box as  a  ratio  of
                               the overall document page height.

                            Left -> (float)
                               The  left  coordinate  of the bounding box as a
                               ratio of overall document page width.

                            Top -> (float)
                               The top coordinate of the bounding box as a ra-
                               tio of overall document page height.

                        Polygon -> (list)
                            Within  the  bounding  box, a fine-grained polygon
                            around the recognized item.

                            (structure)
                               The X and Y coordinates of a point on  a  docu-
                               ment page. The X and Y values that are returned
                               are ratios of the overall document  page  size.
                               For example, if the input document is 700 x 200
                               and the operation  returns  X=0.5  and  Y=0.25,
                               then the point is at the (350,50) pixel coordi-
                               nate on the document page.

                               An array of Point objects,  Polygon  ,  is  re-
                               turned  by  DetectDocumentText . Polygon repre-
                               sents a fine-grained  polygon  around  detected
                               text. For more information, see Geometry in the
                               Amazon Textract Developer Guide.

                               X -> (float)
                                   The value of the X coordinate for  a  point
                                   on a Polygon .

                               Y -> (float)
                                   The  value  of the Y coordinate for a point
                                   on a Polygon .

                     Id -> (string)
                        The identifier for the recognized text. The identifier
                        is only unique for a single operation.

                     Relationships -> (list)
                        A  list  of  relationship  objects  that  describe how
                        blocks are related to each other. For example, a  LINE
                        block  object  contains a CHILD relationship type with
                        the WORD blocks that make up the line of  text.  There
                        aren't  Relationship objects in the list for relation-
                        ships that don't exist, such as when the current block
                        has no child blocks.

                        (structure)
                            Information  about  how blocks are related to each
                            other. A Block object contains 0 or more  Relation
                            objects in a list, Relationships . For more infor-
                            mation, see  Block .

                            The Type element provides the type  of  the  rela-
                            tionship for all blocks in the IDs array.

                            Type -> (string)
                               The  type of relationship between the blocks in
                               the IDs array and the current block.  The  fol-
                               lowing  list  describes  the relationship types
                               that can be returned.

                               o VALUE - A list that contains the  ID  of  the
                                 VALUE block that's associated with the KEY of
                                 a key-value pair.

                               o CHILD - A list of IDs  that  identify  blocks
                                 found  within  the  current block object. For
                                 example, WORD blocks have a  CHILD  relation-
                                 ship to the LINE block type.

                               o MERGED_CELL  -  A  list  of IDs that identify
                                 each of the MERGED_CELL block types in a  ta-
                                 ble.

                               o ANSWER  -  A list that contains the ID of the
                                 QUERY_RESULT block thats associated with  the
                                 corresponding QUERY block.

                               o TABLE  -  A list of IDs that identify associ-
                                 ated TABLE block types.

                               o TABLE_TITLE - A list that contains the ID for
                                 the TABLE_TITLE block type in a table.

                               o TABLE_FOOTER  -  A  list of IDs that identify
                                 the TABLE_FOOTER block types in a table.

                            Ids -> (list)
                               An array of IDs for related blocks. You can get
                               the type of the relationship from the Type ele-
                               ment.

                               (string)

                     EntityTypes -> (list)
                        The type of entity.

                        The following entity types can be  returned  by  FORMS
                        analysis:

                        o KEY - An identifier for a field on the document.

                        o VALUE - The field text.

                        The  following  entity types can be returned by TABLES
                        analysis:

                        o COLUMN_HEADER - Identifies a cell that is  a  header
                          of a column.

                        o TABLE_TITLE  -  Identifies  a  cell  that is a title
                          within the table.

                        o TABLE_SECTION_TITLE - Identifies a cell  that  is  a
                          title  of  a section within a table. A section title
                          is a cell that typically spans an entire row above a
                          section.

                        o TABLE_FOOTER - Identifies a cell that is a footer of
                          a table.

                        o TABLE_SUMMARY - Identifies a summary cell of  a  ta-
                          ble.  A  summary  cell can be a row of a table or an
                          additional, smaller table that contains summary  in-
                          formation for another table.

                        o STRUCTURED_TABLE  -  Identifies  a table with column
                          headers where the content of each row corresponds to
                          the headers.

                        o SEMI_STRUCTURED_TABLE  - Identifies a non-structured
                          table.
                            EntityTypes isn't returned  by  DetectDocumentText
                            and GetDocumentTextDetection .

                        (string)

                     SelectionStatus -> (string)
                        The  selection  status of a selection element, such as
                        an option button or check box.

                     Page -> (integer)
                        The page on which a block was detected.  Page  is  re-
                        turned  by  synchronous  and  asynchronous operations.
                        Page values greater than 1 are only returned for  mul-
                        tipage  documents  that  are  in PDF or TIFF format. A
                        scanned image (JPEG/PNG) provided to  an  asynchronous
                        operation,  even  if  it  contains  multiple  document
                        pages, is  considered  a  single-page  document.  This
                        means that for scanned images the value of Page is al-
                        ways 1.

                     Query -> (structure)
                        Text -> (string)
                            Question that Amazon Textract will  apply  to  the
                            document.  An  example  would be "What is the cus-
                            tomer's SSN?"

                        Alias -> (string)
                            Alias attached to the query, for ease of location.

                        Pages -> (list)
                            Pages is a parameter that the user inputs to spec-
                            ify which pages to apply a query to. The following
                            is a list of rules for using this parameter.

                            o If a page is not specified, it is set  to  ["1"]
                              by default.

                            o The  following characters are allowed in the pa-
                              rameter's string: 0 1 2 3 4 5 6 7 8 9 - *  .  No
                              whitespace is allowed.

                            o When  using  * to indicate all pages, it must be
                              the only element in the list.

                            o You can use page intervals, such as  [1-3,  1-1,
                              4-*] . Where * indicates last page of document.

                            o Specified  pages must be greater than 0 and less
                              than or equal to the number of pages in the doc-
                              ument.

                            (string)

       DocumentMetadata -> (structure)
          Information about the input document.

          Pages -> (integer)
              The number of pages that are detected in the document.

       AnalyzeIDModelVersion -> (string)
          The  version  of the AnalyzeIdentity API being used to process docu-
          ments.



                                                                  ANALYZE-ID()
