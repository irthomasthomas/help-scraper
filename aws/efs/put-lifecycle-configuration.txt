PUT-LIFECYCLE-CONFIGURATION()                    PUT-LIFECYCLE-CONFIGURATION()



NAME
       put-lifecycle-configuration -

DESCRIPTION
       Use  this  action  to  manage  EFS lifecycle management and intelligent
       tiering. A LifecycleConfiguration consists of one or more LifecyclePol-
       icy objects that define the following:

       o EFS  Lifecycle management - When Amazon EFS automatically transitions
         files in a file system into the  lower-cost  Infrequent  Access  (IA)
         storage  class.  To enable EFS Lifecycle management, set the value of
         TransitionToIA to one of the available options.

       o EFS Intelligent tiering - When Amazon EFS  automatically  transitions
         files  from  IA  back  into  the  file system's primary storage class
         (Standard or One Zone Standard. To enable  EFS  Intelligent  Tiering,
         set the value of TransitionToPrimaryStorageClass to AFTER_1_ACCESS .

       For more information, see EFS Lifecycle Management .

       Each Amazon EFS file system supports one lifecycle configuration, which
       applies to all files in the file system.  If  a  LifecycleConfiguration
       object already exists for the specified file system, a PutLifecycleCon-
       figuration call modifies the existing configuration. A PutLifecycleCon-
       figuration  call  with  an empty LifecyclePolicies array in the request
       body deletes any existing LifecycleConfiguration and turns off  lifecy-
       cle management and intelligent tiering for the file system.

       In the request, specify the following:

       o The  ID for the file system for which you are enabling, disabling, or
         modifying lifecycle management and intelligent tiering.

       o A LifecyclePolicies array of LifecyclePolicy objects that define when
         files  are  moved  into  IA  storage, and when they are moved back to
         Standard storage.

       NOTE:
          Amazon EFS requires that each LifecyclePolicy object have only  have
          a  single  transition,  so  the  LifecyclePolicies array needs to be
          structured with separate LifecyclePolicy objects.  See  the  example
          requests in the following section for more information.

       This  operation requires permissions for the elasticfilesystem:PutLife-
       cycleConfiguration operation.

       To apply a LifecycleConfiguration object to an encrypted  file  system,
       you  need  the same Key Management Service permissions as when you cre-
       ated the encrypted file system.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            put-lifecycle-configuration
          --file-system-id <value>
          --lifecycle-policies <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --file-system-id (string)
          The ID of the file system for which you are creating the  Lifecycle-
          Configuration object (String).

       --lifecycle-policies (list)
          An  array  of  LifecyclePolicy objects that define the file system's
          LifecycleConfiguration object. A LifecycleConfiguration  object  in-
          forms  EFS  lifecycle  management and EFS Intelligent-Tiering of the
          following:

          o When to move files in the file system from primary storage to  the
            IA storage class.

          o When to move files that are in IA storage to primary storage.

          NOTE:
              When  using  the  put-lifecycle-configuration CLI command or the
              PutLifecycleConfiguration API action, Amazon EFS  requires  that
              each  LifecyclePolicy object have only a single transition. This
              means that in a request body, LifecyclePolicies must  be  struc-
              tured  as  an  array  of LifecyclePolicy objects, one object for
              each transition,  TransitionToIA  ,  TransitionToPrimaryStorage-
              Class  .  See  the example requests in the following section for
              more information.

          (structure)
              Describes a policy used by EFS lifecycle management and EFS  In-
              telligent-Tiering  that  specifies when to transition files into
              and out of the file  system's  Infrequent  Access  (IA)  storage
              class.  For more information, see EFS IntelligentTiering and EFS
              Lifecycle Management .

              NOTE:
                 When using the put-lifecycle-configuration CLI command or the
                 PutLifecycleConfiguration  API  action,  Amazon  EFS requires
                 that each LifecyclePolicy object have only a  single  transi-
                 tion.  This  means  that in a request body, LifecyclePolicies
                 must be structured as an array  of  LifecyclePolicy  objects,
                 one  object for each transition, TransitionToIA , Transition-
                 ToPrimaryStorageClass . For more information, see the request
                 examples in  PutLifecycleConfiguration .

              TransitionToIA -> (string)
                 Describes the period of time that a file is not accessed, af-
                 ter which it transitions to IA storage.  Metadata  operations
                 such  as  listing  the contents of a directory don't count as
                 file access events.

              TransitionToPrimaryStorageClass -> (string)
                 Describes when to transition a file from IA storage  to  pri-
                 mary  storage.  Metadata  operations such as listing the con-
                 tents of a directory don't count as file access events.

       Shorthand Syntax:

          TransitionToIA=string,TransitionToPrimaryStorageClass=string ...

       JSON Syntax:

          [
            {
              "TransitionToIA": "AFTER_7_DAYS"|"AFTER_14_DAYS"|"AFTER_30_DAYS"|"AFTER_60_DAYS"|"AFTER_90_DAYS",
              "TransitionToPrimaryStorageClass": "AFTER_1_ACCESS"
            }
            ...
          ]

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       LifecyclePolicies -> (list)
          An array of lifecycle management policies. EFS supports a maximum of
          one policy per file system.

          (structure)
              Describes a policy used by EFS lifecycle management and EFS  In-
              telligent-Tiering  that  specifies when to transition files into
              and out of the file  system's  Infrequent  Access  (IA)  storage
              class.  For more information, see EFS IntelligentTiering and EFS
              Lifecycle Management .

              NOTE:
                 When using the put-lifecycle-configuration CLI command or the
                 PutLifecycleConfiguration  API  action,  Amazon  EFS requires
                 that each LifecyclePolicy object have only a  single  transi-
                 tion.  This  means  that in a request body, LifecyclePolicies
                 must be structured as an array  of  LifecyclePolicy  objects,
                 one  object for each transition, TransitionToIA , Transition-
                 ToPrimaryStorageClass . For more information, see the request
                 examples in  PutLifecycleConfiguration .

              TransitionToIA -> (string)
                 Describes the period of time that a file is not accessed, af-
                 ter which it transitions to IA storage.  Metadata  operations
                 such  as  listing  the contents of a directory don't count as
                 file access events.

              TransitionToPrimaryStorageClass -> (string)
                 Describes when to transition a file from IA storage  to  pri-
                 mary  storage.  Metadata  operations such as listing the con-
                 tents of a directory don't count as file access events.



                                                 PUT-LIFECYCLE-CONFIGURATION()
