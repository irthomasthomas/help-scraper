PUT-LIFECYCLE-CONFIGURATION()                    PUT-LIFECYCLE-CONFIGURATION()



NAME
       put-lifecycle-configuration -

DESCRIPTION
       Use this action to manage storage for your file system. A LifecycleCon-
       figuration consists of one or more LifecyclePolicy objects that  define
       the following:

       o

         **
         TransitionToIA **  When to move files in the file system from primary
         storage (Standard storage class)  into  the  Infrequent  Access  (IA)
         storage.

       System Message: WARNING/2 (<string>:, line 23)
         Inline strong start-string without end-string.

       o

         **
         TransitionToArchive  **   When  to move files in the file system from
         their current storage class (either IA or Standard storage) into  the
         Archive  storage. File systems cannot transition into Archive storage
         before transitioning into IA storage. Therefore,  TransitionToArchive
         must either not be set or must be later than TransitionToIA.

       System Message: WARNING/2 (<string>:, line 25)
         Inline strong start-string without end-string.

       NOTE:
          The  Archive  storage  class is available only for file systems that
          use the Elastic Throughput mode and the General Purpose  Performance
          mode.

       o

         **
         TransitionToPrimaryStorageClass **  Whether to move files in the file
         system back to primary storage (Standard storage  class)  after  they
         are accessed in IA or Archive storage.

       System Message: WARNING/2 (<string>:, line 37)
         Inline strong start-string without end-string.

       For more information, see Managing file system storage .

       Each Amazon EFS file system supports one lifecycle configuration, which
       applies to all files in the file system.  If  a  LifecycleConfiguration
       object already exists for the specified file system, a PutLifecycleCon-
       figuration call modifies the existing configuration. A PutLifecycleCon-
       figuration  call  with  an empty LifecyclePolicies array in the request
       body deletes any existing  LifecycleConfiguration  .  In  the  request,
       specify the following:

       o The  ID for the file system for which you are enabling, disabling, or
         modifying Lifecycle management.

       o A LifecyclePolicies array of LifecyclePolicy objects that define when
         to  move files to IA storage, to Archive storage, and back to primary
         storage.

       NOTE:
          Amazon EFS requires that each LifecyclePolicy object have only  have
          a  single  transition,  so  the  LifecyclePolicies array needs to be
          structured with separate LifecyclePolicy objects.  See  the  example
          requests in the following section for more information.

       This  operation requires permissions for the elasticfilesystem:PutLife-
       cycleConfiguration operation.

       To apply a LifecycleConfiguration object to an encrypted  file  system,
       you  need  the same Key Management Service permissions as when you cre-
       ated the encrypted file system.

       See also: AWS API Documentation

SYNOPSIS
            put-lifecycle-configuration
          --file-system-id <value>
          --lifecycle-policies <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --file-system-id (string)
          The ID of the file system for which you are creating the  Lifecycle-
          Configuration object (String).

       --lifecycle-policies (list)
          An  array  of  LifecyclePolicy objects that define the file system's
          LifecycleConfiguration object. A LifecycleConfiguration  object  in-
          forms EFS Lifecycle management of the following:

          o

            **
            TransitionToIA **  When to move files in the file system from pri-
            mary storage (Standard storage class) into the  Infrequent  Access
            (IA) storage.

          System Message: WARNING/2 (<string>:, line 123)
            Inline strong start-string without end-string.

          o

            **
            TransitionToArchive **  When to move files in the file system from
            their current storage class (either IA or Standard  storage)  into
            the  Archive  storage. File systems cannot transition into Archive
            storage before transitioning into IA storage.  Therefore,  Transi-
            tionToArchive must either not be set or must be later than Transi-
            tionToIA.

          System Message: WARNING/2 (<string>:, line 125)
            Inline strong start-string without end-string.

          NOTE:
              The Archive storage class is available  only  for  file  systems
              that  use  the  Elastic  Throughput mode and the General Purpose
              Performance mode.

          o

            **
            TransitionToPrimaryStorageClass **  Whether to move files  in  the
            file system back to primary storage (Standard storage class) after
            they are accessed in IA or Archive storage.

          System Message: WARNING/2 (<string>:, line 133)
            Inline strong start-string without end-string.

          NOTE:
              When using the put-lifecycle-configuration CLI  command  or  the
              PutLifecycleConfiguration  API  action, Amazon EFS requires that
              each LifecyclePolicy object have only a single transition.  This
              means  that  in a request body, LifecyclePolicies must be struc-
              tured as an array of LifecyclePolicy  objects,  one  object  for
              each storage transition. See the example requests in the follow-
              ing section for more information.

          (structure)
              Describes a policy used by Lifecycle management  that  specifies
              when  to  transition  files into and out of storage classes. For
              more information, see Managing file system storage .

              NOTE:
                 When using the put-lifecycle-configuration CLI command or the
                 PutLifecycleConfiguration  API  action,  Amazon  EFS requires
                 that each LifecyclePolicy object have only a  single  transi-
                 tion.  This  means  that in a request body, LifecyclePolicies
                 must be structured as an array  of  LifecyclePolicy  objects,
                 one object for each transition. For more information, see the
                 request examples in  PutLifecycleConfiguration .

              TransitionToIA -> (string)
                 The number of days after files were last accessed in  primary
                 storage (the Standard storage class) at which to move them to
                 Infrequent Access (IA) storage. Metadata operations  such  as
                 listing  the  contents of a directory don't count as file ac-
                 cess events.

              TransitionToPrimaryStorageClass -> (string)
                 Whether to move files back to primary (Standard) storage  af-
                 ter  they are accessed in IA or Archive storage. Metadata op-
                 erations such as listing the contents of  a  directory  don't
                 count as file access events.

              TransitionToArchive -> (string)
                 The  number of days after files were last accessed in primary
                 storage (the Standard storage class) files at which  to  move
                 them  to Archive storage. Metadata operations such as listing
                 the contents of  a  directory  don't  count  as  file  access
                 events.

       Shorthand Syntax:

          TransitionToIA=string,TransitionToPrimaryStorageClass=string,TransitionToArchive=string ...

       JSON Syntax:

          [
            {
              "TransitionToIA": "AFTER_7_DAYS"|"AFTER_14_DAYS"|"AFTER_30_DAYS"|"AFTER_60_DAYS"|"AFTER_90_DAYS"|"AFTER_1_DAY"|"AFTER_180_DAYS"|"AFTER_270_DAYS"|"AFTER_365_DAYS",
              "TransitionToPrimaryStorageClass": "AFTER_1_ACCESS",
              "TransitionToArchive": "AFTER_1_DAY"|"AFTER_7_DAYS"|"AFTER_14_DAYS"|"AFTER_30_DAYS"|"AFTER_60_DAYS"|"AFTER_90_DAYS"|"AFTER_180_DAYS"|"AFTER_270_DAYS"|"AFTER_365_DAYS"
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       LifecyclePolicies -> (list)
          An array of lifecycle management policies. EFS supports a maximum of
          one policy per file system.

          (structure)
              Describes a policy used by Lifecycle management  that  specifies
              when  to  transition  files into and out of storage classes. For
              more information, see Managing file system storage .

              NOTE:
                 When using the put-lifecycle-configuration CLI command or the
                 PutLifecycleConfiguration  API  action,  Amazon  EFS requires
                 that each LifecyclePolicy object have only a  single  transi-
                 tion.  This  means  that in a request body, LifecyclePolicies
                 must be structured as an array  of  LifecyclePolicy  objects,
                 one object for each transition. For more information, see the
                 request examples in  PutLifecycleConfiguration .

              TransitionToIA -> (string)
                 The number of days after files were last accessed in  primary
                 storage (the Standard storage class) at which to move them to
                 Infrequent Access (IA) storage. Metadata operations  such  as
                 listing  the  contents of a directory don't count as file ac-
                 cess events.

              TransitionToPrimaryStorageClass -> (string)
                 Whether to move files back to primary (Standard) storage  af-
                 ter  they are accessed in IA or Archive storage. Metadata op-
                 erations such as listing the contents of  a  directory  don't
                 count as file access events.

              TransitionToArchive -> (string)
                 The  number of days after files were last accessed in primary
                 storage (the Standard storage class) files at which  to  move
                 them  to Archive storage. Metadata operations such as listing
                 the contents of  a  directory  don't  count  as  file  access
                 events.



                                                 PUT-LIFECYCLE-CONFIGURATION()
