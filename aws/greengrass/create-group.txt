CREATE-GROUP()                                                  CREATE-GROUP()



NAME
       create-group -

DESCRIPTION
       Creates  a  group.  You may provide the initial version of the group or
       use ''CreateGroupVersion'' at a  later  time.  Tip:  You  can  use  the
       ''gg_group_setup''                      package                      (-
       https://github.com/awslabs/aws-greengrass-group-setup) as a library  or
       command-line application to create and deploy Greengrass groups.

       See also: AWS API Documentation

SYNOPSIS
            create-group
          [--amzn-client-token <value>]
          [--initial-version <value>]
          --name <value>
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --amzn-client-token  (string) A client token used to correlate requests
       and responses.

       --initial-version (structure) Information about the initial version  of
       the group.ConnectorDefinitionVersionArn -> (string)
              The ARN of the connector definition version for this group.

          CoreDefinitionVersionArn -> (string)
              The ARN of the core definition version for this group.

          DeviceDefinitionVersionArn -> (string)
              The ARN of the device definition version for this group.

          FunctionDefinitionVersionArn -> (string)
              The ARN of the function definition version for this group.

          LoggerDefinitionVersionArn -> (string)
              The ARN of the logger definition version for this group.

          ResourceDefinitionVersionArn -> (string)
              The ARN of the resource definition version for this group.

          SubscriptionDefinitionVersionArn -> (string)
              The ARN of the subscription definition version for this group.

       Shorthand Syntax:

          ConnectorDefinitionVersionArn=string,CoreDefinitionVersionArn=string,DeviceDefinitionVersionArn=string,FunctionDefinitionVersionArn=string,LoggerDefinitionVersionArn=string,ResourceDefinitionVersionArn=string,SubscriptionDefinitionVersionArn=string

       JSON Syntax:

          {
            "ConnectorDefinitionVersionArn": "string",
            "CoreDefinitionVersionArn": "string",
            "DeviceDefinitionVersionArn": "string",
            "FunctionDefinitionVersionArn": "string",
            "LoggerDefinitionVersionArn": "string",
            "ResourceDefinitionVersionArn": "string",
            "SubscriptionDefinitionVersionArn": "string"
          }

       --name (string) The name of the group.

       --tags (map) Tag(s) to add to the new resource.key -> (string)
          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a Greeengrass group

       The  following  create-group  example  creates  a  group named cli-cre-
       ated-group.

          aws greengrass create-group \
              --name cli-created-group

       Output:

          {
              "Arn": "arn:aws:greengrass:us-west-2:123456789012:/greengrass/groups/4e22bd92-898c-436b-ade5-434d883ff749",
              "CreationTimestamp": "2019-06-25T18:07:17.688Z",
              "Id": "4e22bd92-898c-436b-ade5-434d883ff749",
              "LastUpdatedTimestamp": "2019-06-25T18:07:17.688Z",
              "Name": "cli-created-group"
          }

       For more information, see Overview of the AWS IoT Greengrass Group  Ob-
       ject Model in the AWS IoT Greengrass Developer Guide.

OUTPUT
       Arn -> (string)
          The ARN of the definition.

       CreationTimestamp -> (string)
          The  time,  in milliseconds since the epoch, when the definition was
          created.

       Id -> (string)
          The ID of the definition.

       LastUpdatedTimestamp -> (string)
          The time, in milliseconds since the epoch, when the  definition  was
          last updated.

       LatestVersion -> (string)
          The ID of the latest version associated with the definition.

       LatestVersionArn -> (string)
          The ARN of the latest version associated with the definition.

       Name -> (string)
          The name of the definition.



                                                                CREATE-GROUP()
