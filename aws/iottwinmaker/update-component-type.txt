UPDATE-COMPONENT-TYPE()                                UPDATE-COMPONENT-TYPE()



NAME
       update-component-type -

DESCRIPTION
       Updates information in a component type.

       See also: AWS API Documentation

SYNOPSIS
            update-component-type
          --component-type-id <value>
          [--description <value>]
          [--extends-from <value>]
          [--functions <value>]
          [--is-singleton | --no-is-singleton]
          [--property-definitions <value>]
          --workspace-id <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --component-type-id (string)
          The ID of the component type.

       --description (string)
          The description of the component type.

       --extends-from (list)
          Specifies the component type that this component type extends.

          (string)

       Syntax:

          "string" "string" ...

       --functions (map)
          An  object that maps strings to the functions in the component type.
          Each string in the mapping must be unique to this object.

          key -> (string)

          value -> (structure)
              The function request body.

              implementedBy -> (structure)
                 The data connector.

                 isNative -> (boolean)
                     A Boolean value that specifies whether the data connector
                     is native to IoT TwinMaker.

                 lambda -> (structure)
                     The Lambda function associated with this data connector.

                     arn -> (string)
                        The ARN of the Lambda function.

              requiredProperties -> (list)
                 The required properties of the function.

                 (string)

              scope -> (string)
                 The scope of the function.

       Shorthand Syntax:

          KeyName1=implementedBy={isNative=boolean,lambda={arn=string}},requiredProperties=string,string,scope=string,KeyName2=implementedBy={isNative=boolean,lambda={arn=string}},requiredProperties=string,string,scope=string

       JSON Syntax:

          {"string": {
                "implementedBy": {
                  "isNative": true|false,
                  "lambda": {
                    "arn": "string"
                  }
                },
                "requiredProperties": ["string", ...],
                "scope": "ENTITY"|"WORKSPACE"
              }
            ...}

       --is-singleton | --no-is-singleton (boolean)
          A  Boolean value that specifies whether an entity can have more than
          one component of this type.

       --property-definitions (map)
          An object that maps strings to the property definitions in the  com-
          ponent  type.  Each string in the mapping must be unique to this ob-
          ject.

          key -> (string)

          value -> (structure)
              An object that sets information about a property.

              configuration -> (map)
                 A mapping that specifies configuration information about  the
                 property. Use this field to specify information that you read
                 from and write to an external source.

                 key -> (string)

                 value -> (string)

              dataType -> (structure)
                 An object that contains information about the data type.

                 allowedValues -> (list)
                     The allowed values for this data type.

                     (structure)
                        An object that specifies a value for a property.

                        booleanValue -> (boolean)
                            A Boolean value.

                        doubleValue -> (double)
                            A double value.

                        expression -> (string)
                            An expression that produces the value.

                        integerValue -> (integer)
                            An integer value.

                        listValue -> (list)
                            A list of multiple values.

                            (structure)
                               An object that specifies a value  for  a  prop-
                               erty.

                               booleanValue -> (boolean)
                                   A Boolean value.

                               doubleValue -> (double)
                                   A double value.

                               expression -> (string)
                                   An expression that produces the value.

                               integerValue -> (integer)
                                   An integer value.

                               longValue -> (long)
                                   A long value.

                               mapValue -> (map)
                                   An  object  that  maps  strings to multiple
                                   DataValue objects.

                                   key -> (string)

                                   ( ... recursive ... )

                               relationshipValue -> (structure)
                                   A value that relates a component to another
                                   component.

                                   targetComponentName -> (string)
                                      The name of the target component associ-
                                      ated with the relationship value.

                                   targetEntityId -> (string)
                                      The ID of the target  entity  associated
                                      with this relationship value.

                               stringValue -> (string)
                                   A string value.

                        longValue -> (long)
                            A long value.

                        mapValue -> (map)
                            An  object that maps strings to multiple DataValue
                            objects.

                            key -> (string)

                            value -> (structure)
                               An object that specifies a value  for  a  prop-
                               erty.

                               booleanValue -> (boolean)
                                   A Boolean value.

                               doubleValue -> (double)
                                   A double value.

                               expression -> (string)
                                   An expression that produces the value.

                               integerValue -> (integer)
                                   An integer value.

                               listValue -> (list)
                                   A list of multiple values.

                                   ( ... recursive ... )

                               longValue -> (long)
                                   A long value.

                               mapValue -> (map)
                                   An  object  that  maps  strings to multiple
                                   DataValue objects.

                                   key -> (string)

                                   ( ... recursive ... )

                               relationshipValue -> (structure)
                                   A value that relates a component to another
                                   component.

                                   targetComponentName -> (string)
                                      The name of the target component associ-
                                      ated with the relationship value.

                                   targetEntityId -> (string)
                                      The ID of the target  entity  associated
                                      with this relationship value.

                               stringValue -> (string)
                                   A string value.

                        relationshipValue -> (structure)
                            A value that relates a component to another compo-
                            nent.

                            targetComponentName -> (string)
                               The name of  the  target  component  associated
                               with the relationship value.

                            targetEntityId -> (string)
                               The  ID  of  the  target entity associated with
                               this relationship value.

                        stringValue -> (string)
                            A string value.

                 nestedType -> (structure)
                     The nested type in the data type.

                     allowedValues -> (list)
                        The allowed values for this data type.

                        (structure)
                            An object that specifies a value for a property.

                            booleanValue -> (boolean)
                               A Boolean value.

                            doubleValue -> (double)
                               A double value.

                            expression -> (string)
                               An expression that produces the value.

                            integerValue -> (integer)
                               An integer value.

                            listValue -> (list)
                               A list of multiple values.

                               (structure)
                                   An object that  specifies  a  value  for  a
                                   property.

                                   booleanValue -> (boolean)
                                      A Boolean value.

                                   doubleValue -> (double)
                                      A double value.

                                   expression -> (string)
                                      An expression that produces the value.

                                   integerValue -> (integer)
                                      An integer value.

                                   longValue -> (long)
                                      A long value.

                                   mapValue -> (map)
                                      An  object that maps strings to multiple
                                      DataValue objects.

                                      key -> (string)

                                      ( ... recursive ... )

                                   relationshipValue -> (structure)
                                      A value that relates a component to  an-
                                      other component.

                                      targetComponentName -> (string)
                                          The name of the target component as-
                                          sociated   with   the   relationship
                                          value.

                                      targetEntityId -> (string)
                                          The  ID of the target entity associ-
                                          ated with this relationship value.

                                   stringValue -> (string)
                                      A string value.

                            longValue -> (long)
                               A long value.

                            mapValue -> (map)
                               An  object  that  maps  strings   to   multiple
                               DataValue objects.

                               key -> (string)

                               value -> (structure)
                                   An  object  that  specifies  a  value for a
                                   property.

                                   booleanValue -> (boolean)
                                      A Boolean value.

                                   doubleValue -> (double)
                                      A double value.

                                   expression -> (string)
                                      An expression that produces the value.

                                   integerValue -> (integer)
                                      An integer value.

                                   listValue -> (list)
                                      A list of multiple values.

                                      ( ... recursive ... )

                                   longValue -> (long)
                                      A long value.

                                   mapValue -> (map)
                                      An object that maps strings to  multiple
                                      DataValue objects.

                                      key -> (string)

                                      ( ... recursive ... )

                                   relationshipValue -> (structure)
                                      A  value that relates a component to an-
                                      other component.

                                      targetComponentName -> (string)
                                          The name of the target component as-
                                          sociated   with   the   relationship
                                          value.

                                      targetEntityId -> (string)
                                          The ID of the target entity  associ-
                                          ated with this relationship value.

                                   stringValue -> (string)
                                      A string value.

                            relationshipValue -> (structure)
                               A  value  that  relates  a component to another
                               component.

                               targetComponentName -> (string)
                                   The name of the target component associated
                                   with the relationship value.

                               targetEntityId -> (string)
                                   The ID of the target entity associated with
                                   this relationship value.

                            stringValue -> (string)
                               A string value.

                     ( ... recursive ... )relationship -> (structure)
                        A relationship that associates a  component  with  an-
                        other component.

                        relationshipType -> (string)
                            The type of the relationship.

                        targetComponentTypeId -> (string)
                            The  ID  of  the  target component type associated
                            with this relationship.

                     type -> (string)
                        The underlying type of the data type.

                     unitOfMeasure -> (string)
                        The unit of measure used in this data type.

                 relationship -> (structure)
                     A relationship that associates a component  with  another
                     component.

                     relationshipType -> (string)
                        The type of the relationship.

                     targetComponentTypeId -> (string)
                        The  ID  of  the target component type associated with
                        this relationship.

                 type -> (string)
                     The underlying type of the data type.

                 unitOfMeasure -> (string)
                     The unit of measure used in this data type.

              defaultValue -> (structure)
                 An object that contains the default value.

                 booleanValue -> (boolean)
                     A Boolean value.

                 doubleValue -> (double)
                     A double value.

                 expression -> (string)
                     An expression that produces the value.

                 integerValue -> (integer)
                     An integer value.

                 listValue -> (list)
                     A list of multiple values.

                     (structure)
                        An object that specifies a value for a property.

                        booleanValue -> (boolean)
                            A Boolean value.

                        doubleValue -> (double)
                            A double value.

                        expression -> (string)
                            An expression that produces the value.

                        integerValue -> (integer)
                            An integer value.

                        listValue -> (list)
                            A list of multiple values.

                            ( ... recursive ... )

                        longValue -> (long)
                            A long value.

                        mapValue -> (map)
                            An object that maps strings to multiple  DataValue
                            objects.

                            key -> (string)

                            ( ... recursive ... )

                        relationshipValue -> (structure)
                            A value that relates a component to another compo-
                            nent.

                            targetComponentName -> (string)
                               The name of  the  target  component  associated
                               with the relationship value.

                            targetEntityId -> (string)
                               The  ID  of  the  target entity associated with
                               this relationship value.

                        stringValue -> (string)
                            A string value.

                 longValue -> (long)
                     A long value.

                 mapValue -> (map)
                     An object that maps strings  to  multiple  DataValue  ob-
                     jects.

                     key -> (string)

                     value -> (structure)
                        An object that specifies a value for a property.

                        booleanValue -> (boolean)
                            A Boolean value.

                        doubleValue -> (double)
                            A double value.

                        expression -> (string)
                            An expression that produces the value.

                        integerValue -> (integer)
                            An integer value.

                        listValue -> (list)
                            A list of multiple values.

                            ( ... recursive ... )

                        longValue -> (long)
                            A long value.

                        mapValue -> (map)
                            An  object that maps strings to multiple DataValue
                            objects.

                            key -> (string)

                            ( ... recursive ... )

                        relationshipValue -> (structure)
                            A value that relates a component to another compo-
                            nent.

                            targetComponentName -> (string)
                               The  name  of  the  target component associated
                               with the relationship value.

                            targetEntityId -> (string)
                               The ID of the  target  entity  associated  with
                               this relationship value.

                        stringValue -> (string)
                            A string value.

                 relationshipValue -> (structure)
                     A value that relates a component to another component.

                     targetComponentName -> (string)
                        The  name  of the target component associated with the
                        relationship value.

                     targetEntityId -> (string)
                        The ID of the target entity associated with this rela-
                        tionship value.

                 stringValue -> (string)
                     A string value.

              isExternalId -> (boolean)
                 A  Boolean value that specifies whether the property ID comes
                 from an external data store.

              isRequiredInEntity -> (boolean)
                 A Boolean value that specifies whether the  property  is  re-
                 quired.

              isStoredExternally -> (boolean)
                 A Boolean value that specifies whether the property is stored
                 externally.

              isTimeSeries -> (boolean)
                 A Boolean value that specifies whether the property  consists
                 of time series data.

       JSON Syntax:

          {"string": {
                "configuration": {"string": "string"
                  ...},
                "dataType": {
                  "allowedValues": [
                    {
                      "booleanValue": true|false,
                      "doubleValue": double,
                      "expression": "string",
                      "integerValue": integer,
                      "listValue": [
                        {
                          "booleanValue": true|false,
                          "doubleValue": double,
                          "expression": "string",
                          "integerValue": integer,
                          "listValue": ,
                          "longValue": long,
                          "mapValue": {"string": { ... recursive ... }
                            ...},
                          "relationshipValue": {
                            "targetComponentName": "string",
                            "targetEntityId": "string"
                          },
                          "stringValue": "string"
                        }
                        ...
                      ],
                      "longValue": long,
                      "mapValue": {"string": {
                            "booleanValue": true|false,
                            "doubleValue": double,
                            "expression": "string",
                            "integerValue": integer,
                            "listValue": [
                              { ... recursive ... }
                              ...
                            ],
                            "longValue": long,
                            "mapValue": {"string": { ... recursive ... }
                              ...},
                            "relationshipValue": {
                              "targetComponentName": "string",
                              "targetEntityId": "string"
                            },
                            "stringValue": "string"
                          }
                        ...},
                      "relationshipValue": {
                        "targetComponentName": "string",
                        "targetEntityId": "string"
                      },
                      "stringValue": "string"
                    }
                    ...
                  ],
                  "nestedType": {
                    "allowedValues": [
                      {
                        "booleanValue": true|false,
                        "doubleValue": double,
                        "expression": "string",
                        "integerValue": integer,
                        "listValue": [
                          {
                            "booleanValue": true|false,
                            "doubleValue": double,
                            "expression": "string",
                            "integerValue": integer,
                            "listValue": ,
                            "longValue": long,
                            "mapValue": {"string": { ... recursive ... }
                              ...},
                            "relationshipValue": {
                              "targetComponentName": "string",
                              "targetEntityId": "string"
                            },
                            "stringValue": "string"
                          }
                          ...
                        ],
                        "longValue": long,
                        "mapValue": {"string": {
                              "booleanValue": true|false,
                              "doubleValue": double,
                              "expression": "string",
                              "integerValue": integer,
                              "listValue": [
                                { ... recursive ... }
                                ...
                              ],
                              "longValue": long,
                              "mapValue": {"string": { ... recursive ... }
                                ...},
                              "relationshipValue": {
                                "targetComponentName": "string",
                                "targetEntityId": "string"
                              },
                              "stringValue": "string"
                            }
                          ...},
                        "relationshipValue": {
                          "targetComponentName": "string",
                          "targetEntityId": "string"
                        },
                        "stringValue": "string"
                      }
                      ...
                    ],
                    "nestedType": { ... recursive ... },
                    "relationship": {
                      "relationshipType": "string",
                      "targetComponentTypeId": "string"
                    },
                    "type": "RELATIONSHIP"|"STRING"|"LONG"|"BOOLEAN"|"INTEGER"|"DOUBLE"|"LIST"|"MAP",
                    "unitOfMeasure": "string"
                  },
                  "relationship": {
                    "relationshipType": "string",
                    "targetComponentTypeId": "string"
                  },
                  "type": "RELATIONSHIP"|"STRING"|"LONG"|"BOOLEAN"|"INTEGER"|"DOUBLE"|"LIST"|"MAP",
                  "unitOfMeasure": "string"
                },
                "defaultValue": {
                  "booleanValue": true|false,
                  "doubleValue": double,
                  "expression": "string",
                  "integerValue": integer,
                  "listValue": [
                    {
                      "booleanValue": true|false,
                      "doubleValue": double,
                      "expression": "string",
                      "integerValue": integer,
                      "listValue": [
                        { ... recursive ... }
                        ...
                      ],
                      "longValue": long,
                      "mapValue": {"string": { ... recursive ... }
                        ...},
                      "relationshipValue": {
                        "targetComponentName": "string",
                        "targetEntityId": "string"
                      },
                      "stringValue": "string"
                    }
                    ...
                  ],
                  "longValue": long,
                  "mapValue": {"string": {
                        "booleanValue": true|false,
                        "doubleValue": double,
                        "expression": "string",
                        "integerValue": integer,
                        "listValue": [
                          { ... recursive ... }
                          ...
                        ],
                        "longValue": long,
                        "mapValue": {"string": { ... recursive ... }
                          ...},
                        "relationshipValue": {
                          "targetComponentName": "string",
                          "targetEntityId": "string"
                        },
                        "stringValue": "string"
                      }
                    ...},
                  "relationshipValue": {
                    "targetComponentName": "string",
                    "targetEntityId": "string"
                  },
                  "stringValue": "string"
                },
                "isExternalId": true|false,
                "isRequiredInEntity": true|false,
                "isStoredExternally": true|false,
                "isTimeSeries": true|false
              }
            ...}

       --workspace-id (string)
          The ID of the workspace that contains the component type.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       arn -> (string)
          The ARN of the component type.

       componentTypeId -> (string)
          The ID of the component type.

       state -> (string)
          The current state of the component type.

       workspaceId -> (string)
          The ID of the workspace that contains the component type.



                                                       UPDATE-COMPONENT-TYPE()
