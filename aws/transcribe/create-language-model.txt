CREATE-LANGUAGE-MODEL()                                CREATE-LANGUAGE-MODEL()



NAME
       create-language-model -

DESCRIPTION
       Creates a new custom language model.

       When creating a new custom language model, you must specify:

       o If you want a Wideband (audio sample rates over 16,000 Hz) or Narrow-
         band (audio sample rates under 16,000 Hz) base model

       o The location of your training and tuning files (this must be an  Ama-
         zon S3 URI)

       o The language of your model

       o A unique name for your model

       See also: AWS API Documentation

SYNOPSIS
            create-language-model
          --language-code <value>
          --base-model-name <value>
          --model-name <value>
          --input-data-config <value>
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --language-code (string)
          The  language  code that represents the language of your model. Each
          custom language model must contain terms in only one  language,  and
          the  language  you  select for your custom language model must match
          the language of your training and tuning data.

          For a list of supported  languages  and  their  associated  language
          codes,  refer to the Supported languages table. Note that US English
          (en-US ) is the only language supported with Amazon Transcribe Medi-
          cal.

          A  custom language model can only be used to transcribe files in the
          same language as the model. For example, if you create a custom lan-
          guage model using US English (en-US ), you can only apply this model
          to files that contain English audio.

          Possible values:

          o en-US

          o hi-IN

          o es-US

          o en-GB

          o en-AU

          o de-DE

          o ja-JP

       --base-model-name (string)
          The Amazon Transcribe standard language model, or base  model,  used
          to  create  your custom language model. Amazon Transcribe offers two
          options for base models: Wideband and Narrowband.

          If the audio you want to transcribe has a sample rate of  16,000  Hz
          or greater, choose WideBand . To transcribe audio with a sample rate
          less than 16,000 Hz, choose NarrowBand .

          Possible values:

          o NarrowBand

          o WideBand

       --model-name (string)
          A unique name, chosen by you, for your custom language model.

          This name is case sensitive, cannot  contain  spaces,  and  must  be
          unique within an Amazon Web Services account. If you try to create a
          new custom language model with the same name as an  existing  custom
          language model, you get a ConflictException error.

       --input-data-config (structure)
          Contains the Amazon S3 location of the training data you want to use
          to create a new custom language model,  and  permissions  to  access
          this location.

          When  using InputDataConfig , you must include these sub-parameters:
          S3Uri , which is the Amazon S3 location of your training  data,  and
          DataAccessRoleArn  ,  which is the Amazon Resource Name (ARN) of the
          role that has permission to access your specified  Amazon  S3  loca-
          tion. You can optionally include TuningDataS3Uri , which is the Ama-
          zon S3 location of your tuning data. If you specify different Amazon
          S3 locations for training and tuning data, the ARN you use must have
          permissions to access both locations.

          S3Uri -> (string)
              The Amazon S3 location (URI) of the text files you want  to  use
              to train your custom language model.

              Here's      an      example     URI     path:     s3://DOC-EXAM-
              PLE-BUCKET/my-model-training-data/

          TuningDataS3Uri -> (string)
              The Amazon S3 location (URI) of the text files you want  to  use
              to tune your custom language model.

              Here's      an      example     URI     path:     s3://DOC-EXAM-
              PLE-BUCKET/my-model-tuning-data/

          DataAccessRoleArn -> (string)
              The Amazon Resource Name (ARN) of an IAM role that  has  permis-
              sions  to  access  the Amazon S3 bucket that contains your input
              files. If the role that you specify doesnt have the  appropriate
              permissions to access the specified Amazon S3 location, your re-
              quest fails.

              IAM   role   ARNs   have   the   format   arn:partition:iam::ac-
              count:role/role-name-with-path        .       For       example:
              arn:aws:iam::111122223333:role/Admin .

              For more information, see IAM ARNs .

       Shorthand Syntax:

          S3Uri=string,TuningDataS3Uri=string,DataAccessRoleArn=string

       JSON Syntax:

          {
            "S3Uri": "string",
            "TuningDataS3Uri": "string",
            "DataAccessRoleArn": "string"
          }

       --tags (list)
          Adds one or more custom tags, each in the form of a key:value  pair,
          to  a  new  custom  language  model  at the time you create this new
          model.

          To learn more about using tags  with  Amazon  Transcribe,  refer  to
          Tagging resources .

          (structure)
              Adds metadata, in the form of a key:value pair, to the specified
              resource.

              For example, you could add the tag  Department:Sales  to  a  re-
              source to indicate that it pertains to your organization's sales
              department. You can also use tags for tag-based access control.

              To learn more about tagging, see Tagging resources .

              Key -> (string)
                 The first part of a key:value pair that forms a  tag  associ-
                 ated  with  a given resource. For example, in the tag Depart-
                 ment:Sales , the key is 'Department'.

              Value -> (string)
                 The second part of a key:value pair that forms a tag  associ-
                 ated  with  a given resource. For example, in the tag Depart-
                 ment:Sales , the value is 'Sales'.

                 Note that you can set the value of a tag to an empty  string,
                 but  you  can't  set the value of a tag to null. Omitting the
                 tag value is the same as using an empty string.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       Example  1:  To  create a custom language model using both training and
       tuning data.

       The following create-language-model example creates a  custom  language
       model.  You  can  use  a custom language model to improve transcription
       performance for domains such as legal, hospitality, finance, and insur-
       ance.   For   language-code,   enter   a   valid   language  code.  For
       base-model-name, specify a base model that is best suited for the  sam-
       ple rate of the audio that you want to transcribe with your custom lan-
       guage model. For model-name, specify the name that you want to call the
       custom language model.

          aws transcribe create-language-model \
              --language-code language-code \
              --base-model-name base-model-name \
              --model-name cli-clm-example \
              --input-data-config S3Uri="s3://DOC-EXAMPLE-BUCKET/Amazon-S3-Prefix-for-training-data",TuningDataS3Uri="s3://DOC-EXAMPLE-BUCKET/Amazon-S3-Prefix-for-tuning-data",DataAccessRoleArn="arn:aws:iam::AWS-account-number:role/IAM-role-with-permissions-to-create-a-custom-language-model"

       Output:

          {
              "LanguageCode": "language-code",
              "BaseModelName": "base-model-name",
              "ModelName": "cli-clm-example",
              "InputDataConfig": {
                  "S3Uri": "s3://DOC-EXAMPLE-BUCKET/Amazon-S3-Prefix/",
                  "TuningDataS3Uri": "s3://DOC-EXAMPLE-BUCKET/Amazon-S3-Prefix/",
                  "DataAccessRoleArn": "arn:aws:iam::AWS-account-number:role/IAM-role-with-permissions-create-a-custom-language-model"
              },
              "ModelStatus": "IN_PROGRESS"
          }

       For more information, see Improving Domain-Specific Transcription Accu-
       racy with Custom Language Models in  the  Amazon  Transcribe  Developer
       Guide.

       Example 2: To create a custom language model using only training data.

       The  following  create-language-model  example  transcribes  your audio
       file. You can use a custom language model to improve transcription per-
       formance  for  domains  such as legal, hospitality, finance, and insur-
       ance.  For  language-code,   enter   a   valid   language   code.   For
       base-model-name,  specify a base model that is best suited for the sam-
       ple rate of the audio that you want to transcribe with your custom lan-
       guage model. For model-name, specify the name that you want to call the
       custom language model.

          aws transcribe create-language-model \
              --language-code en-US \
              --base-model-name base-model-name \
              --model-name cli-clm-example \
              --input-data-config S3Uri="s3://DOC-EXAMPLE-BUCKET/Amazon-S3-Prefix-For-Training-Data",DataAccessRoleArn="arn:aws:iam::AWS-account-number:role/IAM-role-with-permissions-to-create-a-custom-language-model"

       Output:

          {
              "LanguageCode": "en-US",
              "BaseModelName": "base-model-name",
              "ModelName": "cli-clm-example",
              "InputDataConfig": {
                  "S3Uri": "s3://DOC-EXAMPLE-BUCKET/Amazon-S3-Prefix-For-Training-Data/",
                  "DataAccessRoleArn": "arn:aws:iam::your-AWS-account-number:role/IAM-role-with-permissions-to-create-a-custom-language-model"
              },
              "ModelStatus": "IN_PROGRESS"
          }

       For more information, see Improving Domain-Specific Transcription Accu-
       racy  with  Custom  Language  Models in the Amazon Transcribe Developer
       Guide.

OUTPUT
       LanguageCode -> (string)
          The language code you selected for your custom language model.

       BaseModelName -> (string)
          The Amazon Transcribe standard language model, or  base  model,  you
          specified when creating your custom language model.

       ModelName -> (string)
          The name of your custom language model.

       InputDataConfig -> (structure)
          Lists  your data access role ARN (Amazon Resource Name) and the Ama-
          zon S3 locations you provided for your training (S3Uri ) and  tuning
          (TuningDataS3Uri ) data.

          S3Uri -> (string)
              The  Amazon  S3 location (URI) of the text files you want to use
              to train your custom language model.

              Here's     an     example     URI      path:      s3://DOC-EXAM-
              PLE-BUCKET/my-model-training-data/

          TuningDataS3Uri -> (string)
              The  Amazon  S3 location (URI) of the text files you want to use
              to tune your custom language model.

              Here's     an     example     URI      path:      s3://DOC-EXAM-
              PLE-BUCKET/my-model-tuning-data/

          DataAccessRoleArn -> (string)
              The  Amazon  Resource Name (ARN) of an IAM role that has permis-
              sions to access the Amazon S3 bucket that  contains  your  input
              files.  If the role that you specify doesnt have the appropriate
              permissions to access the specified Amazon S3 location, your re-
              quest fails.

              IAM   role   ARNs   have   the   format   arn:partition:iam::ac-
              count:role/role-name-with-path       .       For        example:
              arn:aws:iam::111122223333:role/Admin .

              For more information, see IAM ARNs .

       ModelStatus -> (string)
          The  status  of your custom language model. When the status displays
          as COMPLETED , your model is ready to use.



                                                       CREATE-LANGUAGE-MODEL()
