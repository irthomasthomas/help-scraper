GET-VOCABULARY()                                              GET-VOCABULARY()



NAME
       get-vocabulary -

DESCRIPTION
       Provides information about the specified custom vocabulary.

       To  view the status of the specified vocabulary, check the VocabularyS-
       tate field. If the status is READY , your vocabulary  is  available  to
       use.  If  the  status is FAILED , FailureReason provides details on why
       your vocabulary failed.

       To get a list of your custom vocabularies, use the operation.

       See also: AWS API Documentation

SYNOPSIS
            get-vocabulary
          --vocabulary-name <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --vocabulary-name (string)
          The name of the custom vocabulary you want information about. Vocab-
          ulary names are case sensitive.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To get information about a custom vocabulary

       The  following  get-vocabulary example gets information on a previously
       created custom vocabulary.

          aws transcribe get-vocabulary \
              --vocabulary-name cli-vocab-1

       Output:

          {
              "VocabularyName": "cli-vocab-1",
              "LanguageCode": "language-code",
              "VocabularyState": "READY",
              "LastModifiedTime": "2020-09-19T23:22:32.836000+00:00",
              "DownloadUri": "https://link-to-download-the-text-file-used-to-create-your-custom-vocabulary"
          }

       For more information, see Custom Vocabularies in the Amazon  Transcribe
       Developer Guide.

OUTPUT
       VocabularyName -> (string)
          The name of the custom vocabulary you requested information about.

       LanguageCode -> (string)
          The language code you selected for your custom vocabulary.

       VocabularyState -> (string)
          The  processing  state  of  your  custom vocabulary. If the state is
          READY , you can use the vocabulary in  a  StartTranscriptionJob  re-
          quest.

       LastModifiedTime -> (timestamp)
          The date and time the specified vocabulary was last modified.

          Timestamps  are in the format YYYY-MM-DD'T'HH:MM:SS.SSSSSS-UTC . For
          example, 2022-05-04T12:32:58.761000-07:00 represents 12:32 PM  UTC-7
          on May 4, 2022.

       FailureReason -> (string)
          If  VocabularyState  is  FAILED , FailureReason contains information
          about why the vocabulary request failed. See also: Common Errors .

       DownloadUri -> (string)
          The S3 location where the vocabulary is stored; use this URI to view
          or download the vocabulary.



                                                              GET-VOCABULARY()
