UPDATE-WEBHOOK()                                              UPDATE-WEBHOOK()



NAME
       update-webhook -

DESCRIPTION
       Updates the webhook associated with an CodeBuild build project.

       NOTE:
          If you use Bitbucket for your repository, rotateSecret is ignored.

       See also: AWS API Documentation

SYNOPSIS
            update-webhook
          --project-name <value>
          [--branch-filter <value>]
          [--rotate-secret | --no-rotate-secret]
          [--filter-groups <value>]
          [--build-type <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --project-name (string)
          The name of the CodeBuild project.

       --branch-filter (string)
          A regular expression used to determine which repository branches are
          built when a webhook is triggered. If the name of a  branch  matches
          the  regular expression, then it is built. If branchFilter is empty,
          then all branches are built.

          NOTE:
              It is recommended that you use filterGroups instead  of  branch-
              Filter .

       --rotate-secret | --no-rotate-secret (boolean)
          A boolean value that specifies whether the associated GitHub reposi-
          tory's secret token should be updated. If you use Bitbucket for your
          repository, rotateSecret is ignored.

       --filter-groups (list)
          An  array  of arrays of WebhookFilter objects used to determine if a
          webhook event can trigger a build. A filter group  must  contain  at
          least one EVENT  WebhookFilter .

          (list)
              (structure)
                 A filter used to determine which webhooks trigger a build.

                 type -> (string)
                     The  type of webhook filter. There are eight webhook fil-
                     ter types: EVENT , ACTOR_ACCOUNT_ID , HEAD_REF , BASE_REF
                     ,  FILE_PATH  ,  COMMIT_MESSAGE  ,  TAG_NAME  ,  and  RE-
                     LEASE_NAME .

                     o EVENT

                       o A webhook event triggers a build  when  the  provided
                         pattern  matches  one  of  eight  event types: PUSH ,
                         PULL_REQUEST_CREATED   ,    PULL_REQUEST_UPDATED    ,
                         PULL_REQUEST_CLOSED    ,    PULL_REQUEST_REOPENED   ,
                         PULL_REQUEST_MERGED , RELEASED ,  and  PRERELEASED  .
                         The EVENT patterns are specified as a comma-separated
                         string.  For  example,  PUSH,   PULL_REQUEST_CREATED,
                         PULL_REQUEST_UPDATED  filters  all push, pull request
                         created, and pull request updated events.

                       NOTE:
                          The  PULL_REQUEST_REOPENED  works  with  GitHub  and
                          GitHub Enterprise only. The RELEASED and PRERELEASED
                          work with GitHub only.

                     o ACTOR_ACCOUNT_ID

                       o A webhook event  triggers  a  build  when  a  GitHub,
                         GitHub  Enterprise,  or  Bitbucket account ID matches
                         the regular expression pattern .

                     o HEAD_REF

                       o A webhook event triggers a build when the head refer-
                         ence matches the regular expression pattern . For ex-
                         ample, refs/heads/branch-name and  refs/tags/tag-name
                         .

                       NOTE:
                          Works with GitHub and GitHub Enterprise push, GitHub
                          and GitHub Enterprise pull request, Bitbucket  push,
                          and Bitbucket pull request events.

                     o BASE_REF

                       o A webhook event triggers a build when the base refer-
                         ence matches the regular expression pattern . For ex-
                         ample, refs/heads/branch-name .

                       NOTE:
                          Works with pull request events only.

                     o FILE_PATH

                       o A webhook triggers a build when the path of a changed
                         file matches the regular expression pattern .

                       NOTE:
                          Works with GitHub and Bitbucket events push and pull
                          requests  events.  Also works with GitHub Enterprise
                          push events, but does not work  with  GitHub  Enter-
                          prise pull request events.

                     o COMMIT_MESSAGE

                       o A  webhook triggers a build when the head commit mes-
                         sage matches the regular expression pattern .

                       NOTE:
                          Works with GitHub and Bitbucket events push and pull
                          requests  events.  Also works with GitHub Enterprise
                          push events, but does not work  with  GitHub  Enter-
                          prise pull request events.

                     o TAG_NAME

                       o A  webhook  triggers a build when the tag name of the
                         release matches the regular expression pattern .

                       NOTE:
                          Works with RELEASED and PRERELEASED events only.

                     o RELEASE_NAME

                       o A webhook triggers a  build  when  the  release  name
                         matches the regular expression pattern .

                       NOTE:
                          Works with RELEASED and PRERELEASED events only.

                 pattern -> (string)
                     For  a  WebHookFilter that uses EVENT type, a comma-sepa-
                     rated string that specifies one or more events. For exam-
                     ple,   the  webhook  filter  PUSH,  PULL_REQUEST_CREATED,
                     PULL_REQUEST_UPDATED allows all push, pull  request  cre-
                     ated, and pull request updated events to trigger a build.

                     For  a  WebHookFilter  that  uses any of the other filter
                     types, a regular expression pattern. For example, a  Web-
                     HookFilter  that  uses HEAD_REF for its type and the pat-
                     tern ^refs/heads/ triggers a build when the  head  refer-
                     ence    is    a    branch    with    a   reference   name
                     refs/heads/branch-name .

                 excludeMatchedPattern -> (boolean)
                     Used to indicate that the pattern determines  which  web-
                     hook  events do not trigger a build. If true, then a web-
                     hook event that does not match  the  pattern  triggers  a
                     build.  If  false,  then a webhook event that matches the
                     pattern triggers a build.

       Shorthand Syntax:

          [{type=string,pattern=string,excludeMatchedPattern=boolean},{type=string,pattern=string,excludeMatchedPattern=boolean}] ...

       JSON Syntax:

          [
            [
              {
                "type": "EVENT"|"BASE_REF"|"HEAD_REF"|"ACTOR_ACCOUNT_ID"|"FILE_PATH"|"COMMIT_MESSAGE",
                "pattern": "string",
                "excludeMatchedPattern": true|false
              }
              ...
            ]
            ...
          ]

       --build-type (string)
          Specifies the type of build this webhook will trigger.

          Possible values:

          o BUILD

          o BUILD_BATCH

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To update the webhook for an AWS CodeBuild project

       The following update-webhook example updates a webhook for  the  speci-
       fied  CodeBuild project with two filter groups. The --rotate-secret pa-
       rameter specifies that GitHub rotate the  project's  secret  key  every
       time  a  code change triggers a build. The first filter group specifies
       pull requests that are created, updated, or reopened on  branches  with
       Git  reference names that match the regular expression ^refs/heads/mas-
       ter$ and head references that match ^refs/heads/myBranch$.  The  second
       filter  group  specifies  push  requests on branches with Git reference
       names that do not match the regular expression ^refs/heads/myBranch$.

          aws codebuild update-webhook \
              --project-name Project2 \
              --rotate-secret \
              --filter-groups "[[{\"type\":\"EVENT\",\"pattern\":\"PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED, PULL_REQUEST_REOPENED\"},{\"type\":\"HEAD_REF\",\"pattern\":\"^refs/heads/myBranch$\",\"excludeMatchedPattern\":true},{\"type\":\"BASE_REF\",\"pattern\":\"^refs/heads/master$\",\"excludeMatchedPattern\":true}],[{\"type\":\"EVENT\",\"pattern\":\"PUSH\"},{\"type\":\"HEAD_REF\",\"pattern\":\"^refs/heads/myBranch$\",\"excludeMatchedPattern\":true}]]"

       Output:

          {
              "webhook": {
                  "filterGroups": [
                      [
                          {
                              "pattern": "PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED, PULL_REQUEST_REOPENED",
                              "type": "EVENT"
                          },
                          {
                              "excludeMatchedPattern": true,
                              "pattern": "refs/heads/myBranch$",
                              "type": "HEAD_REF"
                          },
                          {
                              "excludeMatchedPattern": true,
                              "pattern": "refs/heads/master$",
                              "type": "BASE_REF"
                          }
                      ],
                      [
                          {
                              "pattern": "PUSH",
                              "type": "EVENT"
                          },
                          {
                              "excludeMatchedPattern": true,
                              "pattern": "refs/heads/myBranch$",
                              "type": "HEAD_REF"
                          }
                      ]
                  ],
                  "lastModifiedSecret": 1556312220.133
              }
          }

       For more information, see Change a Build Project's Settings  (AWS  CLI)
       in the AWS CodeBuild User Guide

OUTPUT
       webhook -> (structure)
          Information  about  a repository's webhook that is associated with a
          project in CodeBuild.

          url -> (string)
              The URL to the webhook.

          payloadUrl -> (string)
              The CodeBuild endpoint where webhook events are sent.

          secret -> (string)
              The secret token of the associated repository.

              NOTE:
                 A Bitbucket webhook does not support secret .

          branchFilter -> (string)
              A regular expression used to determine which repository branches
              are  built  when a webhook is triggered. If the name of a branch
              matches the regular expression, then it is built. If  branchFil-
              ter is empty, then all branches are built.

              NOTE:
                 It  is  recommended  that  you  use  filterGroups  instead of
                 branchFilter .

          filterGroups -> (list)
              An array of arrays of WebhookFilter objects  used  to  determine
              which  webhooks are triggered. At least one WebhookFilter in the
              array must specify EVENT as its type .

              For a build to be triggered, at least one filter  group  in  the
              filterGroups  array  must pass. For a filter group to pass, each
              of its filters must pass.

              (list)
                 (structure)
                     A filter used  to  determine  which  webhooks  trigger  a
                     build.

                     type -> (string)
                        The  type  of  webhook filter. There are eight webhook
                        filter types: EVENT , ACTOR_ACCOUNT_ID  ,  HEAD_REF  ,
                        BASE_REF , FILE_PATH , COMMIT_MESSAGE , TAG_NAME , and
                        RELEASE_NAME .

                        o EVENT

                          o A webhook event triggers a build when the provided
                            pattern  matches  one of eight event types: PUSH ,
                            PULL_REQUEST_CREATED  ,   PULL_REQUEST_UPDATED   ,
                            PULL_REQUEST_CLOSED   ,   PULL_REQUEST_REOPENED  ,
                            PULL_REQUEST_MERGED , RELEASED , and PRERELEASED .
                            The  EVENT patterns are specified as a comma-sepa-
                            rated string. For example, PUSH, PULL_REQUEST_CRE-
                            ATED,  PULL_REQUEST_UPDATED filters all push, pull
                            request created, and pull request updated events.

                          NOTE:
                              The PULL_REQUEST_REOPENED works with GitHub  and
                              GitHub  Enterprise only. The RELEASED and PRERE-
                              LEASED work with GitHub only.

                        o ACTOR_ACCOUNT_ID

                          o A webhook event triggers a build  when  a  GitHub,
                            GitHub Enterprise, or Bitbucket account ID matches
                            the regular expression pattern .

                        o HEAD_REF

                          o A webhook event triggers a  build  when  the  head
                            reference matches the regular expression pattern .
                            For    example,     refs/heads/branch-name     and
                            refs/tags/tag-name .

                          NOTE:
                              Works  with  GitHub  and GitHub Enterprise push,
                              GitHub and GitHub Enterprise pull request,  Bit-
                              bucket push, and Bitbucket pull request events.

                        o BASE_REF

                          o A  webhook  event  triggers  a build when the base
                            reference matches the regular expression pattern .
                            For example, refs/heads/branch-name .

                          NOTE:
                              Works with pull request events only.

                        o FILE_PATH

                          o A  webhook  triggers  a  build  when the path of a
                            changed file matches the regular  expression  pat-
                            tern .

                          NOTE:
                              Works  with GitHub and Bitbucket events push and
                              pull requests events. Also works with GitHub En-
                              terprise  push  events,  but  does not work with
                              GitHub Enterprise pull request events.

                        o COMMIT_MESSAGE

                          o A webhook triggers a build when  the  head  commit
                            message matches the regular expression pattern .

                          NOTE:
                              Works  with GitHub and Bitbucket events push and
                              pull requests events. Also works with GitHub En-
                              terprise  push  events,  but  does not work with
                              GitHub Enterprise pull request events.

                        o TAG_NAME

                          o A webhook triggers a build when the  tag  name  of
                            the release matches the regular expression pattern
                            .

                          NOTE:
                              Works with RELEASED and PRERELEASED events only.

                        o RELEASE_NAME

                          o A webhook triggers a build when the  release  name
                            matches the regular expression pattern .

                          NOTE:
                              Works with RELEASED and PRERELEASED events only.

                     pattern -> (string)
                        For a WebHookFilter that uses EVENT type, a comma-sep-
                        arated string that specifies one or more  events.  For
                        example,  the  webhook  filter PUSH, PULL_REQUEST_CRE-
                        ATED, PULL_REQUEST_UPDATED allows all push,  pull  re-
                        quest  created,  and  pull  request  updated events to
                        trigger a build.

                        For a WebHookFilter that uses any of the other  filter
                        types,  a  regular  expression pattern. For example, a
                        WebHookFilter that uses HEAD_REF for its type and  the
                        pattern  ^refs/heads/  triggers  a build when the head
                        reference  is  a  branch   with   a   reference   name
                        refs/heads/branch-name .

                     excludeMatchedPattern -> (boolean)
                        Used  to  indicate  that  the pattern determines which
                        webhook events do not trigger a build. If true, then a
                        webhook event that does not match the pattern triggers
                        a build. If false, then a webhook event  that  matches
                        the pattern triggers a build.

          buildType -> (string)
              Specifies the type of build this webhook will trigger.

          lastModifiedSecret -> (timestamp)
              A  timestamp  that indicates the last time a repository's secret
              token was modified.



                                                              UPDATE-WEBHOOK()
