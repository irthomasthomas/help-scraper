CREATE-GRAPH-USING-IMPORT-TASK()              CREATE-GRAPH-USING-IMPORT-TASK()



NAME
       create-graph-using-import-task -

DESCRIPTION
       Creates  a new Neptune Analytics graph and imports data into it, either
       from Amazon Simple Storage Service (S3) or from a Neptune database or a
       Neptune database snapshot.

       The  data can be loaded from files in S3 that in either the Gremlin CSV
       format or the openCypher load format .

       See also: AWS API Documentation

SYNOPSIS
            create-graph-using-import-task
          --graph-name <value>
          [--tags <value>]
          [--public-connectivity | --no-public-connectivity]
          [--kms-key-identifier <value>]
          [--vector-search-configuration <value>]
          [--replica-count <value>]
          [--deletion-protection | --no-deletion-protection]
          [--import-options <value>]
          [--max-provisioned-memory <value>]
          [--min-provisioned-memory <value>]
          [--fail-on-error | --no-fail-on-error]
          --source <value>
          [--format <value>]
          --role-arn <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --graph-name (string)
          A name for the new Neptune Analytics graph to be created.

          The name must contain from 1 to 63 letters, numbers, or hyphens, and
          its first character must be a letter. It cannot end with a hyphen or
          contain two consecutive hyphens.

       --tags (map)
          Adds metadata tags to the new graph. These tags  can  also  be  used
          with  cost allocation reporting, or used in a Condition statement in
          an IAM policy.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --public-connectivity | --no-public-connectivity (boolean)
          Specifies whether or not the graph can be reachable over the  inter-
          net.  All  access  to  graphs IAM authenticated. (true to enable, or
          false to disable.

       --kms-key-identifier (string)
          Specifies a KMS key to use to encrypt data  imported  into  the  new
          graph.

       --vector-search-configuration (structure)
          Specifies  the  number of dimensions for vector embeddings that will
          be loaded into the graph.  The  value  is  specified  as  dimension=
          value. Max = 65,535

          dimension -> (integer)
              The number of dimensions.

       Shorthand Syntax:

          dimension=integer

       JSON Syntax:

          {
            "dimension": integer
          }

       --replica-count (integer)
          The  number  of  replicas in other AZs to provision on the new graph
          after import. Default = 0, Min = 0, Max = 2.

       --deletion-protection | --no-deletion-protection (boolean)
          Indicates whether or not to enable deletion protection on the graph.
          The graph cant be deleted when deletion protection is enabled. (true
          or false ).

       --import-options (tagged union structure)
          Contains options for controlling the import process. For example, if
          the  failOnError key is set to false , the import skips problem data
          and attempts to continue (whereas if set to true , the  default,  or
          if  omitted, the import operation halts immediately when an error is
          encountered.

          NOTE:
              This is a Tagged Union structure. Only one of the following  top
              level keys can be set: neptune.

          neptune -> (structure)
              Options for importing data from a Neptune database.

              s3ExportPath -> (string)
                 The path to an S3 bucket from which to import data.

              s3ExportKmsKeyId -> (string)
                 The KMS key to use to encrypt data in the S3 bucket where the
                 graph data is exported

              preserveDefaultVertexLabels -> (boolean)
                 Neptune Analytics supports label-less vertices and no  labels
                 are  assigned  unless one is explicitly provided. Neptune as-
                 signs default labels when none is explicitly  provided.  When
                 importing the data into Neptune Analytics, the default vertex
                 labels can be omitted by setting  preserveDefaultVertexLabels
                 to  false.  Note  that if the vertex only has default labels,
                 and has no other properties or edges, then  the  vertex  will
                 effectively not get imported into Neptune Analytics when pre-
                 serveDefaultVertexLabels is set to false.

              preserveEdgeIds -> (boolean)
                 Neptune Analytics currently does  not  support  user  defined
                 edge  ids. The edge ids are not imported by default. They are
                 imported if preserveEdgeIds is  set  to  true,  and  ids  are
                 stored  as  properties on the relationships with the property
                 name neptuneEdgeId.

       Shorthand Syntax:

          neptune={s3ExportPath=string,s3ExportKmsKeyId=string,preserveDefaultVertexLabels=boolean,preserveEdgeIds=boolean}

       JSON Syntax:

          {
            "neptune": {
              "s3ExportPath": "string",
              "s3ExportKmsKeyId": "string",
              "preserveDefaultVertexLabels": true|false,
              "preserveEdgeIds": true|false
            }
          }

       --max-provisioned-memory (integer)
          The maximum  provisioned  memory-optimized  Neptune  Capacity  Units
          (m-NCUs)  to use for the graph. Default: 1024, or the approved upper
          limit for your account.

          If both the minimum and maximum values are specified, the max of the
          min-provisioned-memory  and max-provisioned memory is used to create
          the graph. If neither value is specified 128 m-NCUs are used.

       --min-provisioned-memory (integer)
          The minimum  provisioned  memory-optimized  Neptune  Capacity  Units
          (m-NCUs) to use for the graph. Default: 128

       --fail-on-error | --no-fail-on-error (boolean)
          If set to true , the task halts when an import error is encountered.
          If set to false , the task skips the data that caused the error  and
          continues if possible.

       --source (string)
          A  URL  identifying to the location of the data to be imported. This
          can be an Amazon S3 path, or can point to a  Neptune  database  end-
          point or snapshot.

       --format (string)
          Specifies the format of S3 data to be imported. Valid values are CSV
          , which identifies the Gremlin CSV  format  or  OPENCYPHER  ,  which
          identies the openCypher load format .

          Possible values:

          o CSV

          o OPEN_CYPHER

       --role-arn (string)
          The  ARN  of the IAM role that will allow access to the data that is
          to be imported.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       graphId -> (string)
          The unique identifier of the Neptune Analytics graph.

       taskId -> (string)
          The unique identifier of the import task.

       source -> (string)
          A  URL  identifying to the location of the data to be imported. This
          can be an Amazon S3 path, or can point to a  Neptune  database  end-
          point or snapshot.

       format -> (string)
          Specifies the format of S3 data to be imported. Valid values are CSV
          , which identifies the Gremlin CSV  format  or  OPENCYPHER  ,  which
          identies the openCypher load format .

       roleArn -> (string)
          The  ARN  of the IAM role that will allow access to the data that is
          to be imported.

       status -> (string)
          The status of the import task.

       importOptions -> (tagged union structure)
          Contains options for controlling the import process. For example, if
          the  failOnError key is set to false , the import skips problem data
          and attempts to continue (whereas if set to true , the  default,  or
          if  omitted, the import operation halts immediately when an error is
          encountered.

          NOTE:
              This is a Tagged Union structure. Only one of the following  top
              level keys can be set: neptune.

          neptune -> (structure)
              Options for importing data from a Neptune database.

              s3ExportPath -> (string)
                 The path to an S3 bucket from which to import data.

              s3ExportKmsKeyId -> (string)
                 The KMS key to use to encrypt data in the S3 bucket where the
                 graph data is exported

              preserveDefaultVertexLabels -> (boolean)
                 Neptune Analytics supports label-less vertices and no  labels
                 are  assigned  unless one is explicitly provided. Neptune as-
                 signs default labels when none is explicitly  provided.  When
                 importing the data into Neptune Analytics, the default vertex
                 labels can be omitted by setting  preserveDefaultVertexLabels
                 to  false.  Note  that if the vertex only has default labels,
                 and has no other properties or edges, then  the  vertex  will
                 effectively not get imported into Neptune Analytics when pre-
                 serveDefaultVertexLabels is set to false.

              preserveEdgeIds -> (boolean)
                 Neptune Analytics currently does  not  support  user  defined
                 edge  ids. The edge ids are not imported by default. They are
                 imported if preserveEdgeIds is  set  to  true,  and  ids  are
                 stored  as  properties on the relationships with the property
                 name neptuneEdgeId.



                                              CREATE-GRAPH-USING-IMPORT-TASK()
