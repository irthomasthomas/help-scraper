CREATE-CODE-REVIEW()                                      CREATE-CODE-REVIEW()



NAME
       create-code-review -

DESCRIPTION
       Use to create a code review with a CodeReviewType of RepositoryAnalysis
       . This type of code review analyzes all code under a  specified  branch
       in an associated repository. PullRequest code reviews are automatically
       triggered by a pull request.

       See also: AWS API Documentation

SYNOPSIS
            create-code-review
          --name <value>
          --repository-association-arn <value>
          --type <value>
          [--client-request-token <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --name (string)
          The name of the code review. The name of each code  review  in  your
          Amazon Web Services account must be unique.

       --repository-association-arn (string)
          The  Amazon Resource Name (ARN) of the RepositoryAssociation object.
          You can retrieve this ARN by calling ListRepositoryAssociations .

          A code review can only be created on an associated repository.  This
          is the ARN of the associated repository.

       --type (structure)
          The  type  of  code  review  to  create.  This  is specified using a
          CodeReviewType object. You can create a code  review  only  of  type
          RepositoryAnalysis .

          RepositoryAnalysis -> (structure)
              A code review that analyzes all code under a specified branch in
              an associated repository. The associated repository is specified
              using its ARN in CreateCodeReview .

              RepositoryHead -> (structure)
                 A SourceCodeType that specifies the tip of a branch in an as-
                 sociated repository.

                 BranchName -> (string)
                     The name of the branch in an associated  repository.  The
                     RepositoryHeadSourceCodeType  specifies  the  tip of this
                     branch.

              SourceCodeType -> (structure)
                 Specifies the source code that is analyzed in a code review.

                 CommitDiff -> (structure)
                     A SourceCodeType that specifies a commit diff created  by
                     a pull request on an associated repository.

                     SourceCommit -> (string)
                        The SHA of the source commit used to generate a commit
                        diff. This field is required for a pull  request  code
                        review.

                     DestinationCommit -> (string)
                        The  SHA  of the destination commit used to generate a
                        commit diff. This field is required for a pull request
                        code review.

                     MergeBaseCommit -> (string)
                        The SHA of the merge base of a commit.

                 RepositoryHead -> (structure)
                     A SourceCodeType that specifies the tip of a branch in an
                     associated repository.

                     BranchName -> (string)
                        The name of the branch in  an  associated  repository.
                        The  RepositoryHeadSourceCodeType specifies the tip of
                        this branch.

                 BranchDiff -> (structure)
                     A type of SourceCodeType that specifies a  source  branch
                     name  and  a  destination  branch  name  in an associated
                     repository.

                     SourceBranchName -> (string)
                        The source branch for a diff in an associated  reposi-
                        tory.

                     DestinationBranchName -> (string)
                        The  destination  branch  for  a diff in an associated
                        repository.

                 S3BucketRepository -> (structure)
                     Information about  an  associated  repository  in  an  S3
                     bucket  that includes its name and an S3RepositoryDetails
                     object. The S3RepositoryDetails object includes the  name
                     of  an  S3 bucket, an S3 key for a source code .zip file,
                     and an S3 key for a build artifacts .zip  file.  S3Bucke-
                     tRepository  is  required  in SourceCodeType for S3Bucke-
                     tRepository based code reviews.

                     Name -> (string)
                        The name of the repository when  the  ProviderType  is
                        S3Bucket .

                     Details -> (structure)
                        An  S3RepositoryDetails object that specifies the name
                        of an  S3  bucket  and  a  CodeArtifacts  object.  The
                        CodeArtifacts object includes the S3 object keys for a
                        source code .zip file and for a build  artifacts  .zip
                        file.

                        BucketName -> (string)
                            The  name  of the S3 bucket used for associating a
                            new S3 repository. It must begin with codeguru-re-
                            viewer- .

                        CodeArtifacts -> (structure)
                            A  CodeArtifacts  object. The CodeArtifacts object
                            includes the S3 object key for a source code  .zip
                            file and for a build artifacts .zip file that con-
                            tains .jar or .class files.

                            SourceCodeArtifactsObjectKey -> (string)
                               The S3 object key for a source code .zip  file.
                               This is required for all code reviews.

                            BuildArtifactsObjectKey -> (string)
                               The  S3  object  key for a build artifacts .zip
                               file that contains .jar or .class  files.  This
                               is  required  for  a  code review with security
                               analysis. For more information, see Create code
                               reviews  with  security  analysis in the Amazon
                               CodeGuru Reviewer User Guide .

                 RequestMetadata -> (structure)
                     Metadata that is associated with a code review. This  ap-
                     plies  to  any  type of code review supported by CodeGuru
                     Reviewer. The RequestMetadaa  field  captures  any  event
                     metadata.  For example, it might capture metadata associ-
                     ated with an event trigger, such as a push or a pull  re-
                     quest.

                     RequestId -> (string)
                        The ID of the request. This is required for a pull re-
                        quest code review.

                     Requester -> (string)
                        An identifier, such as a name or account ID,  that  is
                        associated  with  the requester. The Requester is used
                        to capture the author/actor name of the event request.

                     EventInfo -> (structure)
                        Information about the event associated with a code re-
                        view.

                        Name -> (string)
                            The  name  of  the  event.  The possible names are
                            pull_request , workflow_dispatch , schedule ,  and
                            push

                        State -> (string)
                            The  state  of  an event. The state might be open,
                            closed, or another state.

                     VendorName -> (string)
                        The name of the repository vendor used to upload  code
                        to  an S3 bucket for a CI/CD code review. For example,
                        if code and artifacts are uploaded to an S3 bucket for
                        a  CI/CD  code  review by GitHub scripts from a GitHub
                        repository,   then   the   repository    association's
                        ProviderType is S3Bucket and the CI/CD repository ven-
                        dor name is GitHub. For more information, see the def-
                        inition for ProviderType in RepositoryAssociation .

          AnalysisTypes -> (list)
              They types of analysis performed during a repository analysis or
              a pull request review. You can specify either Security  ,  Code-
              Quality , or both.

              (string)

       JSON Syntax:

          {
            "RepositoryAnalysis": {
              "RepositoryHead": {
                "BranchName": "string"
              },
              "SourceCodeType": {
                "CommitDiff": {
                  "SourceCommit": "string",
                  "DestinationCommit": "string",
                  "MergeBaseCommit": "string"
                },
                "RepositoryHead": {
                  "BranchName": "string"
                },
                "BranchDiff": {
                  "SourceBranchName": "string",
                  "DestinationBranchName": "string"
                },
                "S3BucketRepository": {
                  "Name": "string",
                  "Details": {
                    "BucketName": "string",
                    "CodeArtifacts": {
                      "SourceCodeArtifactsObjectKey": "string",
                      "BuildArtifactsObjectKey": "string"
                    }
                  }
                },
                "RequestMetadata": {
                  "RequestId": "string",
                  "Requester": "string",
                  "EventInfo": {
                    "Name": "string",
                    "State": "string"
                  },
                  "VendorName": "GitHub"|"GitLab"|"NativeS3"
                }
              }
            },
            "AnalysisTypes": ["Security"|"CodeQuality", ...]
          }

       --client-request-token (string)
          Amazon  CodeGuru  Reviewer uses this value to prevent the accidental
          creation of duplicate code reviews if there  are  failures  and  re-
          tries.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a code review.

       The  following create-code-review creates a review of code in the main-
       line branch of an AWS CodeCommit repository that  is  named  my-reposi-
       tory-name.

          aws codeguru-reviewer create-code-review \
              --name my-code-review \
              --repository-association-arn arn:aws:codeguru-reviewer:us-west-2:123456789012:association:a1b2c3d4-5678-90ab-cdef-EXAMPLE11111 \
              --type '{"RepositoryAnalysis": {"RepositoryHead": {"BranchName": "mainline"}}}'

       Output:

          {
              "CodeReview": {
                  "Name": "my-code-review",
                  "CodeReviewArn": "arn:aws:codeguru-reviewer:us-west-2:123456789012:association:a1b2c3d4-5678-90ab-cdef-EXAMPLE22222:code-review:RepositoryAnalysis-my-code-review",
                  "RepositoryName": "my-repository-name",
                  "Owner": "123456789012",
                  "ProviderType": "CodeCommit",
                  "State": "Pending",
                  "StateReason": "CodeGuru Reviewer has received the request, and a code review is scheduled.",
                  "CreatedTimeStamp": 1618873489.195,
                  "LastUpdatedTimeStamp": 1618873489.195,
                  "Type": "RepositoryAnalysis",
                  "SourceCodeType": {
                      "RepositoryHead": {
                          "BranchName": "mainline"
                      }
                  },
                  "AssociationArn": "arn:aws:codeguru-reviewer:us-west-2:123456789012:association:a1b2c3d4-5678-90ab-cdef-EXAMPLE11111"
              }
          }

       For  more  information,  see Create code reviews in Amazon CodeGuru Re-
       viewer in the Amazon CodeGuru Reviewer User Guide.

OUTPUT
       CodeReview -> (structure)
          Information about a code review. A code review belongs to the  asso-
          ciated repository that contains the reviewed code.

          Name -> (string)
              The name of the code review.

          CodeReviewArn -> (string)
              The Amazon Resource Name (ARN) of the CodeReview object.

          RepositoryName -> (string)
              The name of the repository.

          Owner -> (string)
              The owner of the repository. For an Amazon Web Services CodeCom-
              mit repository, this is the Amazon Web Services  account  ID  of
              the  account  that owns the repository. For a GitHub, GitHub En-
              terprise Server, or Bitbucket repository, this is  the  username
              for  the account that owns the repository. For an S3 repository,
              it can be the username or Amazon Web Services account ID.

          ProviderType -> (string)
              The type of repository that contains the reviewed code (for  ex-
              ample, GitHub or Bitbucket).

          State -> (string)
              The valid code review states are:

              o Completed : The code review is complete.

              o Pending  :  The  code  review started and has not completed or
                failed.

              o Failed : The code review failed.

              o Deleting : The code review is being deleted.

          StateReason -> (string)
              The reason for the state of the code review.

          CreatedTimeStamp -> (timestamp)
              The time, in milliseconds since the epoch, when the code  review
              was created.

          LastUpdatedTimeStamp -> (timestamp)
              The  time, in milliseconds since the epoch, when the code review
              was last updated.

          Type -> (string)
              The type of code review.

          PullRequestId -> (string)
              The pull request ID for the code review.

          SourceCodeType -> (structure)
              The type of the source code for the code review.

              CommitDiff -> (structure)
                 A SourceCodeType that specifies a commit diff  created  by  a
                 pull request on an associated repository.

                 SourceCommit -> (string)
                     The  SHA  of  the source commit used to generate a commit
                     diff. This field is required for a pull request code  re-
                     view.

                 DestinationCommit -> (string)
                     The SHA of the destination commit used to generate a com-
                     mit diff. This field is required for a pull request  code
                     review.

                 MergeBaseCommit -> (string)
                     The SHA of the merge base of a commit.

              RepositoryHead -> (structure)
                 A SourceCodeType that specifies the tip of a branch in an as-
                 sociated repository.

                 BranchName -> (string)
                     The name of the branch in an associated  repository.  The
                     RepositoryHeadSourceCodeType  specifies  the  tip of this
                     branch.

              BranchDiff -> (structure)
                 A type of SourceCodeType that specifies a source branch  name
                 and a destination branch name in an associated repository.

                 SourceBranchName -> (string)
                     The source branch for a diff in an associated repository.

                 DestinationBranchName -> (string)
                     The destination branch for a diff in an associated repos-
                     itory.

              S3BucketRepository -> (structure)
                 Information about an associated repository in  an  S3  bucket
                 that includes its name and an S3RepositoryDetails object. The
                 S3RepositoryDetails object includes the name of an S3 bucket,
                 an  S3  key  for a source code .zip file, and an S3 key for a
                 build artifacts .zip file. S3BucketRepository is required  in
                 SourceCodeType for S3BucketRepository based code reviews.

                 Name -> (string)
                     The  name  of  the  repository  when  the ProviderType is
                     S3Bucket .

                 Details -> (structure)
                     An S3RepositoryDetails object that specifies the name  of
                     an  S3  bucket  and a CodeArtifacts object. The CodeArti-
                     facts object includes the S3 object  keys  for  a  source
                     code .zip file and for a build artifacts .zip file.

                     BucketName -> (string)
                        The  name  of the S3 bucket used for associating a new
                        S3 repository. It must begin with codeguru-reviewer- .

                     CodeArtifacts -> (structure)
                        A CodeArtifacts object. The CodeArtifacts  object  in-
                        cludes  the  S3 object key for a source code .zip file
                        and for a build artifacts .zip file that contains .jar
                        or .class files.

                        SourceCodeArtifactsObjectKey -> (string)
                            The  S3  object  key  for a source code .zip file.
                            This is required for all code reviews.

                        BuildArtifactsObjectKey -> (string)
                            The S3 object key for a build artifacts .zip  file
                            that  contains  .jar  or .class files. This is re-
                            quired for a code review with  security  analysis.
                            For more information, see Create code reviews with
                            security analysis in the Amazon CodeGuru  Reviewer
                            User Guide .

              RequestMetadata -> (structure)
                 Metadata  that is associated with a code review. This applies
                 to any type of code review supported  by  CodeGuru  Reviewer.
                 The RequestMetadaa field captures any event metadata. For ex-
                 ample, it might capture metadata  associated  with  an  event
                 trigger, such as a push or a pull request.

                 RequestId -> (string)
                     The  ID  of  the request. This is required for a pull re-
                     quest code review.

                 Requester -> (string)
                     An identifier, such as a name or account ID, that is  as-
                     sociated  with  the  requester.  The Requester is used to
                     capture the author/actor name of the event request.

                 EventInfo -> (structure)
                     Information about the event associated with  a  code  re-
                     view.

                     Name -> (string)
                        The name of the event. The possible names are pull_re-
                        quest , workflow_dispatch , schedule , and push

                     State -> (string)
                        The state of  an  event.  The  state  might  be  open,
                        closed, or another state.

                 VendorName -> (string)
                     The  name of the repository vendor used to upload code to
                     an S3 bucket for a CI/CD code  review.  For  example,  if
                     code  and  artifacts  are  uploaded to an S3 bucket for a
                     CI/CD code review by GitHub scripts from a GitHub reposi-
                     tory,  then  the repository association's ProviderType is
                     S3Bucket and the CI/CD repository vendor name is  GitHub.
                     For more information, see the definition for ProviderType
                     in RepositoryAssociation .

          AssociationArn -> (string)
              The Amazon Resource Name (ARN) of the RepositoryAssociation that
              contains  the  reviewed source code. You can retrieve associated
              repository ARNs by calling ListRepositoryAssociations .

          Metrics -> (structure)
              The statistics from the code review.

              MeteredLinesOfCodeCount -> (long)
                 MeteredLinesOfCodeCount is the number of lines of code in the
                 repository  where the code review happened. This does not in-
                 clude non-code lines such as comments and blank lines.

              SuppressedLinesOfCodeCount -> (long)
                 SuppressedLinesOfCodeCount is the number of lines of code  in
                 the  repository  where the code review happened that CodeGuru
                 Reviewer did not analyze. The lines suppressed in the  analy-
                 sis  is  based  on the excludeFiles variable in the aws-code-
                 guru-reviewer.yml file. This number does not include non-code
                 lines such as comments and blank lines.

              FindingsCount -> (long)
                 Total number of recommendations found in the code review.

          AnalysisTypes -> (list)
              The  types of analysis performed during a repository analysis or
              a pull request review. You can specify either Security  ,  Code-
              Quality , or both.

              (string)

          ConfigFileState -> (string)
              The  state  of  the aws-codeguru-reviewer.yml configuration file
              that allows the configuration of the CodeGuru Reviewer analysis.
              The  file either exists, doesn't exist, or exists with errors at
              the root directory of your repository.



                                                          CREATE-CODE-REVIEW()
