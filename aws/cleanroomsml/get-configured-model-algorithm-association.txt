GET-CONFIGURED-MODEL-ALGORITHM-ASSGET-CONFIGURED-MODEL-ALGORITHM-ASSOCIATION()



NAME
       get-configured-model-algorithm-association -

DESCRIPTION
       Returns information about a configured model algorithm association.

       See also: AWS API Documentation

SYNOPSIS
            get-configured-model-algorithm-association
          --configured-model-algorithm-association-arn <value>
          --membership-identifier <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --configured-model-algorithm-association-arn (string)
          The Amazon Resource Name (ARN) of the configured model algorithm as-
          sociation that you want to return information about.

       --membership-identifier (string)
          The membership ID of the member that created  the  configured  model
          algorithm association.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       createTime -> (timestamp)
          The  time  at  which  the configured model algorithm association was
          created.

       updateTime -> (timestamp)
          The most recent time at which the configured model algorithm associ-
          ation was updated.

       configuredModelAlgorithmAssociationArn -> (string)
          The Amazon Resource Name (ARN) of the configured model algorithm as-
          sociation.

       membershipIdentifier -> (string)
          The membership ID of the member that created  the  configured  model
          algorithm association.

       collaborationIdentifier -> (string)
          The  collaboration ID of the collaboration that contains the config-
          ured model algorithm association.

       configuredModelAlgorithmArn -> (string)
          The Amazon Resource Name (ARN) of  the  configured  model  algorithm
          that was associated to the collaboration.

       name -> (string)
          The name of the configured model algorithm association.

       privacyConfiguration -> (structure)
          The privacy configuration information for the configured model algo-
          rithm association.

          policies -> (structure)
              The privacy configuration policies for a configured model  algo-
              rithm association.

              trainedModels -> (structure)
                 Specifies who will receive the trained models.

                 containerLogs -> (list)
                     The container for the logs of the trained model.

                     (structure)
                        Provides  the  information necessary for a user to ac-
                        cess the logs.

                        allowedAccountIds -> (list)
                            A list of account IDs that are allowed  to  access
                            the logs.

                            (string)

                        filterPattern -> (string)
                            A regular expression pattern that is used to parse
                            the logs and return information that  matches  the
                            pattern.

                 containerMetrics -> (structure)
                     The container for the metrics of the trained model.

                     noiseLevel -> (string)
                        The noise level for the generated metrics.

              trainedModelExports -> (structure)
                 Specifies who will receive the trained model export.

                 maxSize -> (structure)
                     The maximum size of the data that can be exported.

                     unit -> (string)
                        The unit of measurement for the data size.

                     value -> (double)
                        The maximum size of the dataset to export.

                 filesToExport -> (list)
                     The  files that are exported during the trained model ex-
                     port job.

                     (string)

              trainedModelInferenceJobs -> (structure)
                 Specifies who will receive the trained model inference jobs.

                 containerLogs -> (list)
                     The logs container for the trained model inference job.

                     (structure)
                        Provides the information necessary for a user  to  ac-
                        cess the logs.

                        allowedAccountIds -> (list)
                            A  list  of account IDs that are allowed to access
                            the logs.

                            (string)

                        filterPattern -> (string)
                            A regular expression pattern that is used to parse
                            the  logs  and return information that matches the
                            pattern.

                 maxOutputSize -> (structure)
                     The maximum allowed size of the  output  of  the  trained
                     model inference job.

                     unit -> (string)
                        The measurement unit to use.

                     value -> (double)
                        The maximum output size value.

       description -> (string)
          The description of the configured model algorithm association.

       tags -> (map)
          The  optional  metadata that you applied to the resource to help you
          categorize and organize them. Each tag consists of a key and an  op-
          tional value, both of which you define.

          The following basic restrictions apply to tags:

          o Maximum number of tags per resource - 50.

          o For  each  resource, each tag key must be unique, and each tag key
            can have only one value.

          o Maximum key length - 128 Unicode characters in UTF-8.

          o Maximum value length - 256 Unicode characters in UTF-8.

          o If your tagging schema is used across multiple  services  and  re-
            sources, remember that other services may have restrictions on al-
            lowed characters. Generally allowed characters are: letters,  num-
            bers, and spaces representable in UTF-8, and the following charac-
            ters: + - = . _ : / @.

          o Tag keys and values are case sensitive.

          o Do not use aws:, AWS:, or any upper or  lowercase  combination  of
            such  as a prefix for keys as it is reserved for AWS use. You can-
            not edit or delete tag keys with this prefix. Values can have this
            prefix. If a tag value has aws as its prefix but the key does not,
            then Clean Rooms ML considers it to be a user tag and  will  count
            against the limit of 50 tags. Tags with only the key prefix of aws
            do not count against your tags per resource limit.

          key -> (string)

          value -> (string)



                                  GET-CONFIGURED-MODEL-ALGORITHM-ASSOCIATION()
