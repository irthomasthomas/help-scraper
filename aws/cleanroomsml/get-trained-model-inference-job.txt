GET-TRAINED-MODEL-INFERENCE-JOB()            GET-TRAINED-MODEL-INFERENCE-JOB()



NAME
       get-trained-model-inference-job -

DESCRIPTION
       Returns information about a trained model inference job.

       See also: AWS API Documentation

SYNOPSIS
            get-trained-model-inference-job
          --membership-identifier <value>
          --trained-model-inference-job-arn <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --membership-identifier (string)
          Provides  the  membership  ID  of  the  membership that contains the
          trained model inference job that you are interested in.

       --trained-model-inference-job-arn (string)
          Provides the Amazon Resource Name (ARN) of the trained model  infer-
          ence job that you are interested in.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       createTime -> (timestamp)
          The time at which the trained model inference job was created.

       updateTime -> (timestamp)
          The  most  recent  time at which the trained model inference job was
          updated.

       trainedModelInferenceJobArn -> (string)
          The Amazon Resource Name (ARN) of the trained model inference job.

       configuredModelAlgorithmAssociationArn -> (string)
          The Amazon Resource Name (ARN) of the configured model algorithm as-
          sociation that was used for the trained model inference job.

       name -> (string)
          The name of the trained model inference job.

       status -> (string)
          The status of the trained model inference job.

       trainedModelArn -> (string)
          The  Amazon  Resource Name (ARN) for the trained model that was used
          for the trained model inference job.

       resourceConfig -> (structure)
          The resource configuration information for the trained model  infer-
          ence job.

          instanceType -> (string)
              The type of instance that is used to perform model inference.

          instanceCount -> (integer)
              The number of instances to use.

       outputConfiguration -> (structure)
          The output configuration information for the trained model inference
          job.

          accept -> (string)
              The MIME type used to specify the output data.

          members -> (list)
              Defines the members that can receive inference output.

              (structure)
                 Defines who will receive inference results.

                 accountId -> (string)
                     The account ID of the member that can  receive  inference
                     results.

       membershipIdentifier -> (string)
          The  membership ID of the membership that contains the trained model
          inference job.

       dataSource -> (structure)
          The data source that was used for the trained model inference job.

          mlInputChannelArn -> (string)
              The Amazon Resource Name (ARN) of the ML input channel for  this
              model inference data source.

       containerExecutionParameters -> (structure)
          The execution parameters for the model inference job container.

          maxPayloadInMB -> (integer)
              The  maximum  size of the inference container payload, specified
              in MB.

       statusDetails -> (structure)
          Details about the status of a resource.

          statusCode -> (string)
              The status code that was returned. The status code  is  intended
              for  programmatic error handling. Clean Rooms ML will not change
              the status code for existing error conditions.

          message -> (string)
              The error message that was returned. The message is intended for
              human consumption and can change at any time. Use the statusCode
              for programmatic error handling.

       description -> (string)
          The description of the trained model inference job.

       inferenceContainerImageDigest -> (string)
          Information about the training container image.

       environment -> (map)
          The environment variables to set in the Docker container.

          key -> (string)

          value -> (string)

       kmsKeyArn -> (string)
          The Amazon Resource Name (ARN) of the KMS key. This key is  used  to
          encrypt  and decrypt customer-owned data in the ML inference job and
          associated data.

       metricsStatus -> (string)
          The metrics status for the trained model inference job.

       metricsStatusDetails -> (string)
          Details about the metrics status for  the  trained  model  inference
          job.

       logsStatus -> (string)
          The logs status for the trained model inference job.

       logsStatusDetails -> (string)
          Details about the logs status for the trained model inference job.

       tags -> (map)
          The  optional  metadata that you applied to the resource to help you
          categorize and organize them. Each tag consists of a key and an  op-
          tional value, both of which you define.

          The following basic restrictions apply to tags:

          o Maximum number of tags per resource - 50.

          o For  each  resource, each tag key must be unique, and each tag key
            can have only one value.

          o Maximum key length - 128 Unicode characters in UTF-8.

          o Maximum value length - 256 Unicode characters in UTF-8.

          o If your tagging schema is used across multiple  services  and  re-
            sources, remember that other services may have restrictions on al-
            lowed characters. Generally allowed characters are: letters,  num-
            bers, and spaces representable in UTF-8, and the following charac-
            ters: + - = . _ : / @.

          o Tag keys and values are case sensitive.

          o Do not use aws:, AWS:, or any upper or  lowercase  combination  of
            such  as a prefix for keys as it is reserved for AWS use. You can-
            not edit or delete tag keys with this prefix. Values can have this
            prefix. If a tag value has aws as its prefix but the key does not,
            then Clean Rooms ML considers it to be a user tag and  will  count
            against the limit of 50 tags. Tags with only the key prefix of aws
            do not count against your tags per resource limit.

          key -> (string)

          value -> (string)



                                             GET-TRAINED-MODEL-INFERENCE-JOB()
