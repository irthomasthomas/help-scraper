UPDATE-FORM()                                                    UPDATE-FORM()



NAME
       update-form -

DESCRIPTION
       Updates an existing form.

       See also: AWS API Documentation

SYNOPSIS
            update-form
          --app-id <value>
          [--client-token <value>]
          --environment-name <value>
          --id <value>
          --updated-form <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --app-id (string)
          The unique ID for the Amplify app.

       --client-token (string)
          The unique client token.

       --environment-name (string)
          The name of the backend environment that is part of the Amplify app.

       --id (string)
          The unique ID for the form.

       --updated-form (structure)
          The request accepts the following data in JSON format.

          cta -> (structure)
              The  FormCTA object that stores the call to action configuration
              for the form.

              cancel -> (structure)
                 Displays a cancel button.

                 children -> (string)
                     Describes the button's properties.

                 excluded -> (boolean)
                     Specifies whether the button is visible on the form.

                 position -> (tagged union structure)
                     The position of the button.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing  top  level  keys  can  be  set:  below, fixed,
                        rightOf.

                     below -> (string)
                        The field position is below the field specified by the
                        string.

                     fixed -> (string)
                        The  field position is fixed and doesn't change in re-
                        lation to other fields.

                     rightOf -> (string)
                        The field position is to the right of the field speci-
                        fied by the string.

              clear -> (structure)
                 Displays a clear button.

                 children -> (string)
                     Describes the button's properties.

                 excluded -> (boolean)
                     Specifies whether the button is visible on the form.

                 position -> (tagged union structure)
                     The position of the button.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing top  level  keys  can  be  set:  below,  fixed,
                        rightOf.

                     below -> (string)
                        The field position is below the field specified by the
                        string.

                     fixed -> (string)
                        The field position is fixed and doesn't change in  re-
                        lation to other fields.

                     rightOf -> (string)
                        The field position is to the right of the field speci-
                        fied by the string.

              position -> (string)
                 The position of the button.

              submit -> (structure)
                 Displays a submit button.

                 children -> (string)
                     Describes the button's properties.

                 excluded -> (boolean)
                     Specifies whether the button is visible on the form.

                 position -> (tagged union structure)
                     The position of the button.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing  top  level  keys  can  be  set:  below, fixed,
                        rightOf.

                     below -> (string)
                        The field position is below the field specified by the
                        string.

                     fixed -> (string)
                        The  field position is fixed and doesn't change in re-
                        lation to other fields.

                     rightOf -> (string)
                        The field position is to the right of the field speci-
                        fied by the string.

          dataType -> (structure)
              The type of data source to use to create the form.

              dataSourceType -> (string)
                 The  data source type, either an Amplify DataStore model or a
                 custom data type.

              dataTypeName -> (string)
                 The unique name of the data type you are using  as  the  data
                 source for the form.

          fields -> (map)
              The configuration information for the form's fields.

              key -> (string)

              value -> (structure)
                 Describes  the configuration information for a field in a ta-
                 ble.

                 excluded -> (boolean)
                     Specifies whether to hide a field.

                 inputType -> (structure)
                     Describes the configuration for the default  input  value
                     to display for a field.

                     defaultChecked -> (boolean)
                        Specifies whether a field has a default value.

                     defaultCountryCode -> (string)
                        The default country code for a phone number.

                     defaultValue -> (string)
                        The default value for the field.

                     descriptiveText -> (string)
                        The text to display to describe the field.

                     maxValue -> (float)
                        The maximum value to display for the field.

                     minValue -> (float)
                        The minimum value to display for the field.

                     name -> (string)
                        The name of the field.

                     placeholder -> (string)
                        The text to display as a placeholder for the field.

                     readOnly -> (boolean)
                        Specifies a read only field.

                     required -> (boolean)
                        Specifies a field that requires input.

                     step -> (float)
                        The stepping increment for a numeric value in a field.

                     type -> (string)
                        The input type for the field.

                     value -> (string)
                        The value for the field.

                     valueMappings -> (structure)
                        The  information  to use to customize the input fields
                        with data at runtime.

                        values -> (list)
                            The value and display value pairs.

                            (structure)
                               Associates a  complex  object  with  a  display
                               value.  Use ValueMapping to store how to repre-
                               sent complex objects when they are displayed.

                               displayValue -> (structure)
                                   The value to display for  the  complex  ob-
                                   ject.

                                   value -> (string)
                                      The value to assign to the input field.

                               value -> (structure)
                                   The complex object.

                                   value -> (string)
                                      The value to assign to the input field.

                 label -> (string)
                     The label for the field.

                 position -> (tagged union structure)
                     Specifies the field position.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing top  level  keys  can  be  set:  below,  fixed,
                        rightOf.

                     below -> (string)
                        The field position is below the field specified by the
                        string.

                     fixed -> (string)
                        The field position is fixed and doesn't change in  re-
                        lation to other fields.

                     rightOf -> (string)
                        The field position is to the right of the field speci-
                        fied by the string.

                 validations -> (list)
                     The validations to perform on the value in the field.

                     (structure)
                        Describes the validation configuration for a field.

                        numValues -> (list)
                            The validation to perform on a number value.

                            (integer)

                        strValues -> (list)
                            The validation to perform on a string value.

                            (string)

                        type -> (string)
                            The validation to perform on an object type.

                        validationMessage -> (string)
                            The validation message to display.

          formActionType -> (string)
              Specifies whether to perform a create or update  action  on  the
              form.

          name -> (string)
              The name of the form.

          schemaVersion -> (string)
              The schema version of the form.

          sectionalElements -> (map)
              The configuration information for the visual helper elements for
              the form. These elements are not associated with any data.

              key -> (string)

              value -> (structure)
                 Stores the configuration information for a visual helper ele-
                 ment  for a form. A sectional element can be a header, a text
                 block, or a divider. These elements are static and not  asso-
                 ciated with any data.

                 level -> (integer)
                     Specifies  the  size  of the font for a Heading sectional
                     element. Valid values are 1 | 2 | 3 | 4 | 5 | 6 .

                 orientation -> (string)
                     Specifies the orientation for a  Divider  sectional  ele-
                     ment. Valid values are horizontal or vertical .

                 position -> (tagged union structure)
                     Specifies  the position of the text in a field for a Text
                     sectional element.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing  top  level  keys  can  be  set:  below, fixed,
                        rightOf.

                     below -> (string)
                        The field position is below the field specified by the
                        string.

                     fixed -> (string)
                        The  field position is fixed and doesn't change in re-
                        lation to other fields.

                     rightOf -> (string)
                        The field position is to the right of the field speci-
                        fied by the string.

                 text -> (string)
                     The text for a Text sectional element.

                 type -> (string)
                     The type of sectional element. Valid values are Heading ,
                     Text , and Divider .

          style -> (structure)
              The configuration for the form's style.

              horizontalGap -> (tagged union structure)
                 The spacing for the horizontal gap.

                 NOTE:
                     This is a Tagged Union structure. Only one of the follow-
                     ing top level keys can be set: tokenReference, value.

                 tokenReference -> (string)
                     A  reference  to a design token to use to bind the form's
                     style properties to an existing theme.

                 value -> (string)
                     The value of the style setting.

              outerPadding -> (tagged union structure)
                 The size of the outer padding for the form.

                 NOTE:
                     This is a Tagged Union structure. Only one of the follow-
                     ing top level keys can be set: tokenReference, value.

                 tokenReference -> (string)
                     A  reference  to a design token to use to bind the form's
                     style properties to an existing theme.

                 value -> (string)
                     The value of the style setting.

              verticalGap -> (tagged union structure)
                 The spacing for the vertical gap.

                 NOTE:
                     This is a Tagged Union structure. Only one of the follow-
                     ing top level keys can be set: tokenReference, value.

                 tokenReference -> (string)
                     A  reference  to a design token to use to bind the form's
                     style properties to an existing theme.

                 value -> (string)
                     The value of the style setting.

       JSON Syntax:

          {
            "cta": {
              "cancel": {
                "children": "string",
                "excluded": true|false,
                "position": {
                  "below": "string",
                  "fixed": "first",
                  "rightOf": "string"
                }
              },
              "clear": {
                "children": "string",
                "excluded": true|false,
                "position": {
                  "below": "string",
                  "fixed": "first",
                  "rightOf": "string"
                }
              },
              "position": "top"|"bottom"|"top_and_bottom",
              "submit": {
                "children": "string",
                "excluded": true|false,
                "position": {
                  "below": "string",
                  "fixed": "first",
                  "rightOf": "string"
                }
              }
            },
            "dataType": {
              "dataSourceType": "DataStore"|"Custom",
              "dataTypeName": "string"
            },
            "fields": {"string": {
                  "excluded": true|false,
                  "inputType": {
                    "defaultChecked": true|false,
                    "defaultCountryCode": "string",
                    "defaultValue": "string",
                    "descriptiveText": "string",
                    "maxValue": float,
                    "minValue": float,
                    "name": "string",
                    "placeholder": "string",
                    "readOnly": true|false,
                    "required": true|false,
                    "step": float,
                    "type": "string",
                    "value": "string",
                    "valueMappings": {
                      "values": [
                        {
                          "displayValue": {
                            "value": "string"
                          },
                          "value": {
                            "value": "string"
                          }
                        }
                        ...
                      ]
                    }
                  },
                  "label": "string",
                  "position": {
                    "below": "string",
                    "fixed": "first",
                    "rightOf": "string"
                  },
                  "validations": [
                    {
                      "numValues": [integer, ...],
                      "strValues": ["string", ...],
                      "type": "string",
                      "validationMessage": "string"
                    }
                    ...
                  ]
                }
              ...},
            "formActionType": "create"|"update",
            "name": "string",
            "schemaVersion": "string",
            "sectionalElements": {"string": {
                  "level": integer,
                  "orientation": "string",
                  "position": {
                    "below": "string",
                    "fixed": "first",
                    "rightOf": "string"
                  },
                  "text": "string",
                  "type": "string"
                }
              ...},
            "style": {
              "horizontalGap": {
                "tokenReference": "string",
                "value": "string"
              },
              "outerPadding": {
                "tokenReference": "string",
                "value": "string"
              },
              "verticalGap": {
                "tokenReference": "string",
                "value": "string"
              }
            }
          }

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       entity -> (structure)
          Describes the configuration of the updated form.

          appId -> (string)
              The unique ID of the Amplify app associated with the form.

          cta -> (structure)
              Stores the call to action configuration for the form.

              cancel -> (structure)
                 Displays a cancel button.

                 children -> (string)
                     Describes the button's properties.

                 excluded -> (boolean)
                     Specifies whether the button is visible on the form.

                 position -> (tagged union structure)
                     The position of the button.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing top  level  keys  can  be  set:  below,  fixed,
                        rightOf.

                     below -> (string)
                        The field position is below the field specified by the
                        string.

                     fixed -> (string)
                        The field position is fixed and doesn't change in  re-
                        lation to other fields.

                     rightOf -> (string)
                        The field position is to the right of the field speci-
                        fied by the string.

              clear -> (structure)
                 Displays a clear button.

                 children -> (string)
                     Describes the button's properties.

                 excluded -> (boolean)
                     Specifies whether the button is visible on the form.

                 position -> (tagged union structure)
                     The position of the button.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing  top  level  keys  can  be  set:  below, fixed,
                        rightOf.

                     below -> (string)
                        The field position is below the field specified by the
                        string.

                     fixed -> (string)
                        The  field position is fixed and doesn't change in re-
                        lation to other fields.

                     rightOf -> (string)
                        The field position is to the right of the field speci-
                        fied by the string.

              position -> (string)
                 The position of the button.

              submit -> (structure)
                 Displays a submit button.

                 children -> (string)
                     Describes the button's properties.

                 excluded -> (boolean)
                     Specifies whether the button is visible on the form.

                 position -> (tagged union structure)
                     The position of the button.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing top  level  keys  can  be  set:  below,  fixed,
                        rightOf.

                     below -> (string)
                        The field position is below the field specified by the
                        string.

                     fixed -> (string)
                        The field position is fixed and doesn't change in  re-
                        lation to other fields.

                     rightOf -> (string)
                        The field position is to the right of the field speci-
                        fied by the string.

          dataType -> (structure)
              The type of data source to use to create the form.

              dataSourceType -> (string)
                 The data source type, either an Amplify DataStore model or  a
                 custom data type.

              dataTypeName -> (string)
                 The  unique  name  of the data type you are using as the data
                 source for the form.

          environmentName -> (string)
              The name of the backend environment that is a part  of  the  Am-
              plify app.

          fields -> (map)
              Stores the information about the form's fields.

              key -> (string)

              value -> (structure)
                 Describes  the configuration information for a field in a ta-
                 ble.

                 excluded -> (boolean)
                     Specifies whether to hide a field.

                 inputType -> (structure)
                     Describes the configuration for the default  input  value
                     to display for a field.

                     defaultChecked -> (boolean)
                        Specifies whether a field has a default value.

                     defaultCountryCode -> (string)
                        The default country code for a phone number.

                     defaultValue -> (string)
                        The default value for the field.

                     descriptiveText -> (string)
                        The text to display to describe the field.

                     maxValue -> (float)
                        The maximum value to display for the field.

                     minValue -> (float)
                        The minimum value to display for the field.

                     name -> (string)
                        The name of the field.

                     placeholder -> (string)
                        The text to display as a placeholder for the field.

                     readOnly -> (boolean)
                        Specifies a read only field.

                     required -> (boolean)
                        Specifies a field that requires input.

                     step -> (float)
                        The stepping increment for a numeric value in a field.

                     type -> (string)
                        The input type for the field.

                     value -> (string)
                        The value for the field.

                     valueMappings -> (structure)
                        The  information  to use to customize the input fields
                        with data at runtime.

                        values -> (list)
                            The value and display value pairs.

                            (structure)
                               Associates a  complex  object  with  a  display
                               value.  Use ValueMapping to store how to repre-
                               sent complex objects when they are displayed.

                               displayValue -> (structure)
                                   The value to display for  the  complex  ob-
                                   ject.

                                   value -> (string)
                                      The value to assign to the input field.

                               value -> (structure)
                                   The complex object.

                                   value -> (string)
                                      The value to assign to the input field.

                 label -> (string)
                     The label for the field.

                 position -> (tagged union structure)
                     Specifies the field position.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing top  level  keys  can  be  set:  below,  fixed,
                        rightOf.

                     below -> (string)
                        The field position is below the field specified by the
                        string.

                     fixed -> (string)
                        The field position is fixed and doesn't change in  re-
                        lation to other fields.

                     rightOf -> (string)
                        The field position is to the right of the field speci-
                        fied by the string.

                 validations -> (list)
                     The validations to perform on the value in the field.

                     (structure)
                        Describes the validation configuration for a field.

                        numValues -> (list)
                            The validation to perform on a number value.

                            (integer)

                        strValues -> (list)
                            The validation to perform on a string value.

                            (string)

                        type -> (string)
                            The validation to perform on an object type.

                        validationMessage -> (string)
                            The validation message to display.

          formActionType -> (string)
              The operation to perform on the specified form.

          id -> (string)
              The unique ID of the form.

          name -> (string)
              The name of the form.

          schemaVersion -> (string)
              The schema version of the form when it was imported.

          sectionalElements -> (map)
              Stores the visual helper elements for the form that are not  as-
              sociated with any data.

              key -> (string)

              value -> (structure)
                 Stores the configuration information for a visual helper ele-
                 ment for a form. A sectional element can be a header, a  text
                 block,  or a divider. These elements are static and not asso-
                 ciated with any data.

                 level -> (integer)
                     Specifies the size of the font for  a  Heading  sectional
                     element. Valid values are 1 | 2 | 3 | 4 | 5 | 6 .

                 orientation -> (string)
                     Specifies  the  orientation  for a Divider sectional ele-
                     ment. Valid values are horizontal or vertical .

                 position -> (tagged union structure)
                     Specifies the position of the text in a field for a  Text
                     sectional element.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing top  level  keys  can  be  set:  below,  fixed,
                        rightOf.

                     below -> (string)
                        The field position is below the field specified by the
                        string.

                     fixed -> (string)
                        The field position is fixed and doesn't change in  re-
                        lation to other fields.

                     rightOf -> (string)
                        The field position is to the right of the field speci-
                        fied by the string.

                 text -> (string)
                     The text for a Text sectional element.

                 type -> (string)
                     The type of sectional element. Valid values are Heading ,
                     Text , and Divider .

          style -> (structure)
              Stores the configuration for the form's style.

              horizontalGap -> (tagged union structure)
                 The spacing for the horizontal gap.

                 NOTE:
                     This is a Tagged Union structure. Only one of the follow-
                     ing top level keys can be set: tokenReference, value.

                 tokenReference -> (string)
                     A reference to a design token to use to bind  the  form's
                     style properties to an existing theme.

                 value -> (string)
                     The value of the style setting.

              outerPadding -> (tagged union structure)
                 The size of the outer padding for the form.

                 NOTE:
                     This is a Tagged Union structure. Only one of the follow-
                     ing top level keys can be set: tokenReference, value.

                 tokenReference -> (string)
                     A reference to a design token to use to bind  the  form's
                     style properties to an existing theme.

                 value -> (string)
                     The value of the style setting.

              verticalGap -> (tagged union structure)
                 The spacing for the vertical gap.

                 NOTE:
                     This is a Tagged Union structure. Only one of the follow-
                     ing top level keys can be set: tokenReference, value.

                 tokenReference -> (string)
                     A reference to a design token to use to bind  the  form's
                     style properties to an existing theme.

                 value -> (string)
                     The value of the style setting.

          tags -> (map)
              One or more key-value pairs to use when tagging the form.

              key -> (string)

              value -> (string)



                                                                 UPDATE-FORM()
