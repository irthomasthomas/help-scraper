CREATE-IDENTITY-SOURCE()                              CREATE-IDENTITY-SOURCE()



NAME
       create-identity-source -

DESCRIPTION
       Creates a reference to an Amazon Cognito user pool as an external iden-
       tity provider (IdP).

       After you create an identity source, you can use  the  identities  pro-
       vided  by the IdP as proxies for the principal in authorization queries
       that use the IsAuthorizedWithToken operation. These identities take the
       form  of  tokens  that  contain claims about the user, such as IDs, at-
       tributes and group memberships. Amazon Cognito provides  both  identity
       tokens  and  access  tokens, and Verified Permissions can use either or
       both. Any combination of identity and access tokens results in the same
       Cedar  principal. Verified Permissions automatically translates the in-
       formation about the identities into the standard Cedar attributes  that
       can  be evaluated by your policies. Because the Amazon Cognito identity
       and access tokens can contain different  information,  the  tokens  you
       choose to use determine which principal attributes are available to ac-
       cess when evaluating Cedar policies.

       WARNING:
          If you delete a Amazon Cognito user pool or user, tokens  from  that
          deleted  pool  or that deleted user continue to be usable until they
          expire.

       NOTE:
          To reference a user from this identity source in  your  Cedar  poli-
          cies, use the following syntax.
              IdentityType::"<CognitoUserPoolIdentifier>|<CognitoClientId>

          Where  IdentityType  is  the  string that you provide to the Princi-
          palEntityType parameter for this  operation.  The  CognitoUserPoolId
          and CognitoClientId are defined by the Amazon Cognito user pool.

       NOTE:
          Verified  Permissions  is  * eventually consistent * . It can take a
          few seconds for a new or changed element to  propagate  through  the
          service  and be visible in the results of other Verified Permissions
          operations.

       See also: AWS API Documentation

SYNOPSIS
            create-identity-source
          [--client-token <value>]
          --policy-store-id <value>
          --configuration <value>
          [--principal-entity-type <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --client-token (string)
          Specifies a unique, case-sensitive ID that you provide to ensure the
          idempotency  of  the request. This lets you safely retry the request
          without accidentally performing the same operation  a  second  time.
          Passing the same value to a later call to an operation requires that
          you also pass the same value for all other parameters. We  recommend
          that you use a UUID type of value. .

          If  you don't provide this value, then Amazon Web Services generates
          a random one for you.

          If you retry the operation with the same ClientToken , but with dif-
          ferent parameters, the retry fails with an ConflictException error.

          Verified Permissions recognizes a ClientToken for eight hours. After
          eight hours, the next request with the same parameters performs  the
          operation again regardless of the value of ClientToken .

       --policy-store-id (string)
          Specifies the ID of the policy store in which you want to store this
          identity source. Only policies and requests made using  this  policy
          store can reference identities from the identity provider configured
          in the new identity source.

       --configuration (tagged union structure)
          Specifies the details required  to  communicate  with  the  identity
          provider (IdP) associated with this identity source.

          NOTE:
              At  this time, the only valid member of this structure is a Ama-
              zon Cognito user pool configuration.

              You must specify a UserPoolArn , and optionally, a ClientId .

          NOTE:
              This is a Tagged Union structure. Only one of the following  top
              level keys can be set: cognitoUserPoolConfiguration.

          cognitoUserPoolConfiguration -> (structure)
              Contains  configuration  details  of  a Amazon Cognito user pool
              that Verified Permissions can use as a source  of  authenticated
              identities  as  entities.  It specifies the Amazon Resource Name
              (ARN) of a Amazon Cognito user pool and one or more  application
              client IDs.

              Example: "configuration":{"cognitoUserPoolConfiguration":{"user-
              PoolArn":"arn:aws:cognito-idp:us-east-1:123456789012:user-
              pool/us-east-1_1a2b3c4d5","clientIds":
              ["a1b2c3d4e5f6g7h8i9j0kalbmc"],"groupConfiguration":  {"groupEn-
              tityType": "MyCorp::Group"}}}

              userPoolArn -> (string)
                 The  Amazon  Resource  Name  (ARN) of the Amazon Cognito user
                 pool that contains the identities to be authorized.

                 Example:             "UserPoolArn":             "arn:aws:cog-
                 nito-idp:us-east-1:123456789012:userpool/us-east-1_1a2b3c4d5"

              clientIds -> (list)
                 The  unique  application  client IDs that are associated with
                 the specified Amazon Cognito user pool.

                 Example: "ClientIds": ["&ExampleCogClientId;"]

                 (string)

              groupConfiguration -> (structure)
                 The type of entity that a policy store maps to groups from an
                 Amazon Cognito user pool identity source.

                 groupEntityType -> (string)
                     The  name  of the schema entity type that's mapped to the
                     user pool group. Defaults to AWS::CognitoGroup .

       Shorthand Syntax:

          cognitoUserPoolConfiguration={userPoolArn=string,clientIds=[string,string],groupConfiguration={groupEntityType=string}}

       JSON Syntax:

          {
            "cognitoUserPoolConfiguration": {
              "userPoolArn": "string",
              "clientIds": ["string", ...],
              "groupConfiguration": {
                "groupEntityType": "string"
              }
            }
          }

       --principal-entity-type (string)
          Specifies the namespace and data type of  the  principals  generated
          for identities authenticated by the new identity source.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create an identity source

       The following create-identity-source example creates an identity source
       that lets you reference identities stored in the specified Amazon  Cog-
       nito  user pool. Those identities are available in Verified Permissions
       as entities of type User.

          aws verifiedpermissions create-identity-source \
              --configuration file://config.txt \
              --principal-entity-type "User" \
              --policy-store-id PSEXAMPLEabcdefg111111

       Contents of config.txt:

          {
              "cognitoUserPoolConfiguration": {
                  "userPoolArn": "arn:aws:cognito-idp:us-west-2:123456789012:userpool/us-west-2_1a2b3c4d5",
                  "clientIds":["a1b2c3d4e5f6g7h8i9j0kalbmc"]
              }
          }

       Output:

          {
              "createdDate": "2023-05-19T20:30:28.214829+00:00",
              "identitySourceId": "ISEXAMPLEabcdefg111111",
              "lastUpdatedDate": "2023-05-19T20:30:28.214829+00:00",
              "policyStoreId": "PSEXAMPLEabcdefg111111"
          }

       For more information about identity sources, see Using Amazon  Verified
       Permissions  with identity providers in the Amazon Verified Permissions
       User Guide.

OUTPUT
       createdDate -> (timestamp)
          The date and time the identity source was originally created.

       identitySourceId -> (string)
          The unique ID of the new identity source.

       lastUpdatedDate -> (timestamp)
          The date and time the identity source was most recently updated.

       policyStoreId -> (string)
          The ID of the policy store that contains the identity source.



                                                      CREATE-IDENTITY-SOURCE()
