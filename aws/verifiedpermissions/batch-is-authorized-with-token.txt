BATCH-IS-AUTHORIZED-WITH-TOKEN()              BATCH-IS-AUTHORIZED-WITH-TOKEN()



NAME
       batch-is-authorized-with-token -

DESCRIPTION
       Makes  a  series of decisions about multiple authorization requests for
       one token. The principal in this request comes from an  external  iden-
       tity  source in the form of an identity or access token, formatted as a
       JSON web token (JWT) . The information in the parameters can  also  de-
       fine  additional  context  that Verified Permissions can include in the
       evaluations.

       The request is evaluated against all policies in the  specified  policy
       store that match the entities that you provide in the entities declara-
       tion and in the token. The result of the decisions is a series of Allow
       or  Deny  responses,  along  with the IDs of the policies that produced
       each decision.

       The entities of a BatchIsAuthorizedWithToken API request can contain up
       to  100  resources  and  up  to  99  user  groups.  The  requests  of a
       BatchIsAuthorizedWithToken API request can contain up to 30 requests.

       NOTE:
          The BatchIsAuthorizedWithToken operation doesn't have  its  own  IAM
          permission.  To  authorize  this  operation  for Amazon Web Services
          principals, include the permission verifiedpermissions:IsAuthorized-
          WithToken in their IAM policies.

       See also: AWS API Documentation

SYNOPSIS
            batch-is-authorized-with-token
          --policy-store-id <value>
          [--identity-token <value>]
          [--access-token <value>]
          [--entities <value>]
          --requests <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --policy-store-id (string)
          Specifies  the ID of the policy store. Policies in this policy store
          will be used to make an authorization decision for the input.

       --identity-token (string)
          Specifies an identity (ID) token for the principal that you want  to
          authorize  in  each  request.  This  token is provided to you by the
          identity provider  (IdP)  associated  with  the  specified  identity
          source.  You must specify either an accessToken , an identityToken ,
          or both.

          Must be an ID token. Verified Permissions returns an  error  if  the
          token_use claim in the submitted token isn't id .

       --access-token (string)
          Specifies  an access token for the principal that you want to autho-
          rize in each request. This token is provided to you by the  identity
          provider  (IdP)  associated  with the specified identity source. You
          must specify either an accessToken , an identityToken , or both.

          Must be an access token. Verified Permissions returns  an  error  if
          the token_use claim in the submitted token isn't access .

       --entities (tagged union structure)
          Specifies the list of resources and their associated attributes that
          Verified Permissions can examine when evaluating the policies.

          WARNING:
              You can't include principals in this  parameter,  only  resource
              and  action  entities. This parameter can't include any entities
              of a type that matches the user or group entity types  that  you
              defined in your identity source.

              o The  BatchIsAuthorizedWithToken  operation takes principal at-
                tributes from ** only  **  the  identityToken  or  accessToken
                passed to the operation.

              o For action entities, you can include only their Identifier and
                EntityType .

          NOTE:
              This is a Tagged Union structure. Only one of the following  top
              level keys can be set: entityList.

          entityList -> (list)
              An array of entities that are needed to successfully evaluate an
              authorization request. Each entity in this array must include an
              identifier  for  the entity, the attributes of the entity, and a
              list of any parent entities.

              (structure)
                 Contains information about an entity that can  be  referenced
                 in a Cedar policy.

                 This  data  type  is  used  as  one  of  the  fields  in  the
                 EntitiesDefinition structure.
                     { "identifier": { "entityType": "Photo", "entityId": "Va-
                     cationPhoto94.jpg"  },  "attributes":  {}, "parents": [ {
                     "entityType": "Album", "entityId": "alice_folder" } ] }

                 identifier -> (structure)
                     The identifier of the entity.

                     entityType -> (string)
                        The type of an entity.

                        Example: "entityType":"*typeName* "

                     entityId -> (string)
                        The identifier of an entity.
                            "entityId":"*identifier* "

                 attributes -> (map)
                     A list of attributes for the entity.

                     key -> (string)

                     value -> (tagged union structure)
                        The value of an attribute.

                        Contains information about the runtime context  for  a
                        request for which an authorization decision is made.

                        This   data   type   is   used  as  a  member  of  the
                        ContextDefinition structure which is uses as a request
                        parameter  for  the IsAuthorized , BatchIsAuthorized ,
                        and IsAuthorizedWithToken operations.

                        NOTE:
                            This is a Tagged Union structure. Only one of  the
                            following  top level keys can be set: boolean, en-
                            tityIdentifier, long, string, set, record.

                        boolean -> (boolean)
                            An attribute value of Boolean type.

                            Example: {"boolean": true}

                        entityIdentifier -> (structure)
                            An attribute value of type EntityIdentifier .

                            Example: "entityIdentifier": { "entityId": "<id>",
                            "entityType": "<entity type>"}

                            entityType -> (string)
                               The type of an entity.

                               Example: "entityType":"*typeName* "

                            entityId -> (string)
                               The identifier of an entity.
                                   "entityId":"*identifier* "

                        long -> (long)
                            An attribute value of Long type.

                            Example: {"long": 0}

                        string -> (string)
                            An attribute value of String type.

                            Example: {"string": "abc"}

                        set -> (list)
                            An attribute value of Set type.

                            Example: {"set": [ {} ] }

                            (tagged union structure)
                               The value of an attribute.

                               Contains  information about the runtime context
                               for a request for which an authorization  deci-
                               sion is made.

                               This  data  type  is  used  as  a member of the
                               ContextDefinition structure which is uses as  a
                               request   parameter   for  the  IsAuthorized  ,
                               BatchIsAuthorized ,  and  IsAuthorizedWithToken
                               operations.

                               NOTE:
                                   This  is a Tagged Union structure. Only one
                                   of the following top level keys can be set:
                                   boolean,  entityIdentifier,  long,  string,
                                   set, record.

                               boolean -> (boolean)
                                   An attribute value of Boolean type.

                                   Example: {"boolean": true}

                               entityIdentifier -> (structure)
                                   An attribute value of type EntityIdentifier
                                   .

                                   Example:  "entityIdentifier": { "entityId":
                                   "<id>", "entityType": "<entity type>"}

                                   entityType -> (string)
                                      The type of an entity.

                                      Example: "entityType":"*typeName* "

                                   entityId -> (string)
                                      The identifier of an entity.
                                          "entityId":"*identifier* "

                               long -> (long)
                                   An attribute value of Long type.

                                   Example: {"long": 0}

                               string -> (string)
                                   An attribute value of String type.

                                   Example: {"string": "abc"}

                               set -> (list)
                                   An attribute value of Set type.

                                   Example: {"set": [ {} ] }

                                   ( ... recursive ... )

                               record -> (map)
                                   An attribute value of Record type.

                                   Example: {"record": { "keyName": {} } }

                                   key -> (string)

                                   ( ... recursive ... )

                        record -> (map)
                            An attribute value of Record type.

                            Example: {"record": { "keyName": {} } }

                            key -> (string)

                            value -> (tagged union structure)
                               The value of an attribute.

                               Contains information about the runtime  context
                               for  a request for which an authorization deci-
                               sion is made.

                               This data type is  used  as  a  member  of  the
                               ContextDefinition  structure which is uses as a
                               request  parameter  for  the   IsAuthorized   ,
                               BatchIsAuthorized  ,  and IsAuthorizedWithToken
                               operations.

                               NOTE:
                                   This is a Tagged Union structure. Only  one
                                   of the following top level keys can be set:
                                   boolean,  entityIdentifier,  long,  string,
                                   set, record.

                               boolean -> (boolean)
                                   An attribute value of Boolean type.

                                   Example: {"boolean": true}

                               entityIdentifier -> (structure)
                                   An attribute value of type EntityIdentifier
                                   .

                                   Example: "entityIdentifier": {  "entityId":
                                   "<id>", "entityType": "<entity type>"}

                                   entityType -> (string)
                                      The type of an entity.

                                      Example: "entityType":"*typeName* "

                                   entityId -> (string)
                                      The identifier of an entity.
                                          "entityId":"*identifier* "

                               long -> (long)
                                   An attribute value of Long type.

                                   Example: {"long": 0}

                               string -> (string)
                                   An attribute value of String type.

                                   Example: {"string": "abc"}

                               set -> (list)
                                   An attribute value of Set type.

                                   Example: {"set": [ {} ] }

                                   ( ... recursive ... )

                               record -> (map)
                                   An attribute value of Record type.

                                   Example: {"record": { "keyName": {} } }

                                   key -> (string)

                                   ( ... recursive ... )

                 parents -> (list)
                     The  parent  entities  in the hierarchy that contains the
                     entity. A principal or resource  entity  can  be  defined
                     with  at most 99 transitive parents per authorization re-
                     quest.

                     A transitive parent is an entity in the hierarchy of  en-
                     tities  including all direct parents, and parents of par-
                     ents. For example, a user can be a member of 91 groups if
                     one  of  those  groups is a member of eight groups, for a
                     total of 100: one entity, 91 entity  parents,  and  eight
                     parents of parents.

                     (structure)
                        Contains the identifier of an entity, including its ID
                        and type.

                        This data type is used  as  a  request  parameter  for
                        IsAuthorized  operation,  and  as a response parameter
                        for the CreatePolicy , GetPolicy  ,  and  UpdatePolicy
                        operations.

                        Example:        {"entityId":"*string*       ","entity-
                        Type":"*string* "}

                        entityType -> (string)
                            The type of an entity.

                            Example: "entityType":"*typeName* "

                        entityId -> (string)
                            The identifier of an entity.
                               "entityId":"*identifier* "

       JSON Syntax:

          {
            "entityList": [
              {
                "identifier": {
                  "entityType": "string",
                  "entityId": "string"
                },
                "attributes": {"string": {
                      "boolean": true|false,
                      "entityIdentifier": {
                        "entityType": "string",
                        "entityId": "string"
                      },
                      "long": long,
                      "string": "string",
                      "set": [
                        {
                          "boolean": true|false,
                          "entityIdentifier": {
                            "entityType": "string",
                            "entityId": "string"
                          },
                          "long": long,
                          "string": "string",
                          "set": [
                            { ... recursive ... }
                            ...
                          ],
                          "record": {"string": { ... recursive ... }
                            ...}
                        }
                        ...
                      ],
                      "record": {"string": {
                            "boolean": true|false,
                            "entityIdentifier": {
                              "entityType": "string",
                              "entityId": "string"
                            },
                            "long": long,
                            "string": "string",
                            "set": [
                              { ... recursive ... }
                              ...
                            ],
                            "record": {"string": { ... recursive ... }
                              ...}
                          }
                        ...}
                    }
                  ...},
                "parents": [
                  {
                    "entityType": "string",
                    "entityId": "string"
                  }
                  ...
                ]
              }
              ...
            ]
          }

       --requests (list)
          An array of up to 30 requests that you want Verified Permissions  to
          evaluate.

          (structure)
              An  authorization  request  that  you include in a BatchIsAutho-
              rizedWithToken API request.

              action -> (structure)
                 Specifies the requested action to be authorized. For example,
                 PhotoFlash::ReadPhoto .

                 actionType -> (string)
                     The type of an action.

                 actionId -> (string)
                     The ID of an action.

              resource -> (structure)
                 Specifies  the  resource that you want an authorization deci-
                 sion for. For example, PhotoFlash::Photo .

                 entityType -> (string)
                     The type of an entity.

                     Example: "entityType":"*typeName* "

                 entityId -> (string)
                     The identifier of an entity.
                        "entityId":"*identifier* "

              context -> (tagged union structure)
                 Specifies additional context that can be used  to  make  more
                 granular authorization decisions.

                 NOTE:
                     This is a Tagged Union structure. Only one of the follow-
                     ing top level keys can be set: contextMap.

                 contextMap -> (map)
                     An list of attributes that  are  needed  to  successfully
                     evaluate an authorization request. Each attribute in this
                     array must include a map of a data type and its value.

                     Example:               "contextMap":{"<KeyName1>":{"bool-
                     ean":true},"<KeyName2>":{"long":1234}}

                     key -> (string)

                     value -> (tagged union structure)
                        The value of an attribute.

                        Contains  information  about the runtime context for a
                        request for which an authorization decision is made.

                        This  data  type  is  used  as   a   member   of   the
                        ContextDefinition structure which is uses as a request
                        parameter for the IsAuthorized ,  BatchIsAuthorized  ,
                        and IsAuthorizedWithToken operations.

                        NOTE:
                            This  is a Tagged Union structure. Only one of the
                            following top level keys can be set: boolean,  en-
                            tityIdentifier, long, string, set, record.

                        boolean -> (boolean)
                            An attribute value of Boolean type.

                            Example: {"boolean": true}

                        entityIdentifier -> (structure)
                            An attribute value of type EntityIdentifier .

                            Example: "entityIdentifier": { "entityId": "<id>",
                            "entityType": "<entity type>"}

                            entityType -> (string)
                               The type of an entity.

                               Example: "entityType":"*typeName* "

                            entityId -> (string)
                               The identifier of an entity.
                                   "entityId":"*identifier* "

                        long -> (long)
                            An attribute value of Long type.

                            Example: {"long": 0}

                        string -> (string)
                            An attribute value of String type.

                            Example: {"string": "abc"}

                        set -> (list)
                            An attribute value of Set type.

                            Example: {"set": [ {} ] }

                            (tagged union structure)
                               The value of an attribute.

                               Contains information about the runtime  context
                               for  a request for which an authorization deci-
                               sion is made.

                               This data type is  used  as  a  member  of  the
                               ContextDefinition  structure which is uses as a
                               request  parameter  for  the   IsAuthorized   ,
                               BatchIsAuthorized  ,  and IsAuthorizedWithToken
                               operations.

                               NOTE:
                                   This is a Tagged Union structure. Only  one
                                   of the following top level keys can be set:
                                   boolean,  entityIdentifier,  long,  string,
                                   set, record.

                               boolean -> (boolean)
                                   An attribute value of Boolean type.

                                   Example: {"boolean": true}

                               entityIdentifier -> (structure)
                                   An attribute value of type EntityIdentifier
                                   .

                                   Example: "entityIdentifier": {  "entityId":
                                   "<id>", "entityType": "<entity type>"}

                                   entityType -> (string)
                                      The type of an entity.

                                      Example: "entityType":"*typeName* "

                                   entityId -> (string)
                                      The identifier of an entity.
                                          "entityId":"*identifier* "

                               long -> (long)
                                   An attribute value of Long type.

                                   Example: {"long": 0}

                               string -> (string)
                                   An attribute value of String type.

                                   Example: {"string": "abc"}

                               set -> (list)
                                   An attribute value of Set type.

                                   Example: {"set": [ {} ] }

                                   ( ... recursive ... )

                               record -> (map)
                                   An attribute value of Record type.

                                   Example: {"record": { "keyName": {} } }

                                   key -> (string)

                                   ( ... recursive ... )

                        record -> (map)
                            An attribute value of Record type.

                            Example: {"record": { "keyName": {} } }

                            key -> (string)

                            value -> (tagged union structure)
                               The value of an attribute.

                               Contains  information about the runtime context
                               for a request for which an authorization  deci-
                               sion is made.

                               This  data  type  is  used  as  a member of the
                               ContextDefinition structure which is uses as  a
                               request   parameter   for  the  IsAuthorized  ,
                               BatchIsAuthorized ,  and  IsAuthorizedWithToken
                               operations.

                               NOTE:
                                   This  is a Tagged Union structure. Only one
                                   of the following top level keys can be set:
                                   boolean,  entityIdentifier,  long,  string,
                                   set, record.

                               boolean -> (boolean)
                                   An attribute value of Boolean type.

                                   Example: {"boolean": true}

                               entityIdentifier -> (structure)
                                   An attribute value of type EntityIdentifier
                                   .

                                   Example:  "entityIdentifier": { "entityId":
                                   "<id>", "entityType": "<entity type>"}

                                   entityType -> (string)
                                      The type of an entity.

                                      Example: "entityType":"*typeName* "

                                   entityId -> (string)
                                      The identifier of an entity.
                                          "entityId":"*identifier* "

                               long -> (long)
                                   An attribute value of Long type.

                                   Example: {"long": 0}

                               string -> (string)
                                   An attribute value of String type.

                                   Example: {"string": "abc"}

                               set -> (list)
                                   An attribute value of Set type.

                                   Example: {"set": [ {} ] }

                                   ( ... recursive ... )

                               record -> (map)
                                   An attribute value of Record type.

                                   Example: {"record": { "keyName": {} } }

                                   key -> (string)

                                   ( ... recursive ... )

       JSON Syntax:

          [
            {
              "action": {
                "actionType": "string",
                "actionId": "string"
              },
              "resource": {
                "entityType": "string",
                "entityId": "string"
              },
              "context": {
                "contextMap": {"string": {
                      "boolean": true|false,
                      "entityIdentifier": {
                        "entityType": "string",
                        "entityId": "string"
                      },
                      "long": long,
                      "string": "string",
                      "set": [
                        {
                          "boolean": true|false,
                          "entityIdentifier": {
                            "entityType": "string",
                            "entityId": "string"
                          },
                          "long": long,
                          "string": "string",
                          "set": [
                            { ... recursive ... }
                            ...
                          ],
                          "record": {"string": { ... recursive ... }
                            ...}
                        }
                        ...
                      ],
                      "record": {"string": {
                            "boolean": true|false,
                            "entityIdentifier": {
                              "entityType": "string",
                              "entityId": "string"
                            },
                            "long": long,
                            "string": "string",
                            "set": [
                              { ... recursive ... }
                              ...
                            ],
                            "record": {"string": { ... recursive ... }
                              ...}
                          }
                        ...}
                    }
                  ...}
              }
            }
            ...
          ]

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       principal -> (structure)
          The identifier of the principal in the ID or access token.

          entityType -> (string)
              The type of an entity.

              Example: "entityType":"*typeName* "

          entityId -> (string)
              The identifier of an entity.
                 "entityId":"*identifier* "

       results -> (list)
          A series of Allow or Deny decisions for each request, and the  poli-
          cies that produced them.

          (structure)
              The decision, based on policy evaluation, from an individual au-
              thorization request in a BatchIsAuthorizedWithToken API request.

              request -> (structure)
                 The authorization request that initiated the decision.

                 action -> (structure)
                     Specifies the requested action to be authorized. For  ex-
                     ample, PhotoFlash::ReadPhoto .

                     actionType -> (string)
                        The type of an action.

                     actionId -> (string)
                        The ID of an action.

                 resource -> (structure)
                     Specifies the resource that you want an authorization de-
                     cision for. For example, PhotoFlash::Photo .

                     entityType -> (string)
                        The type of an entity.

                        Example: "entityType":"*typeName* "

                     entityId -> (string)
                        The identifier of an entity.
                            "entityId":"*identifier* "

                 context -> (tagged union structure)
                     Specifies additional context that can  be  used  to  make
                     more granular authorization decisions.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing top level keys can be set: contextMap.

                     contextMap -> (map)
                        An list of attributes that are needed to  successfully
                        evaluate  an  authorization request. Each attribute in
                        this array must include a map of a data type  and  its
                        value.

                        Example:            "contextMap":{"<KeyName1>":{"bool-
                        ean":true},"<KeyName2>":{"long":1234}}

                        key -> (string)

                        value -> (tagged union structure)
                            The value of an attribute.

                            Contains information about the runtime context for
                            a  request  for which an authorization decision is
                            made.

                            This  data  type  is  used  as  a  member  of  the
                            ContextDefinition structure which is uses as a re-
                            quest   parameter   for   the    IsAuthorized    ,
                            BatchIsAuthorized  , and IsAuthorizedWithToken op-
                            erations.

                            NOTE:
                               This is a Tagged Union structure. Only  one  of
                               the  following top level keys can be set: bool-
                               ean,  entityIdentifier,  long,   string,   set,
                               record.

                            boolean -> (boolean)
                               An attribute value of Boolean type.

                               Example: {"boolean": true}

                            entityIdentifier -> (structure)
                               An attribute value of type EntityIdentifier .

                               Example:   "entityIdentifier":   {  "entityId":
                               "<id>", "entityType": "<entity type>"}

                               entityType -> (string)
                                   The type of an entity.

                                   Example: "entityType":"*typeName* "

                               entityId -> (string)
                                   The identifier of an entity.
                                      "entityId":"*identifier* "

                            long -> (long)
                               An attribute value of Long type.

                               Example: {"long": 0}

                            string -> (string)
                               An attribute value of String type.

                               Example: {"string": "abc"}

                            set -> (list)
                               An attribute value of Set type.

                               Example: {"set": [ {} ] }

                               (tagged union structure)
                                   The value of an attribute.

                                   Contains information about the runtime con-
                                   text  for a request for which an authoriza-
                                   tion decision is made.

                                   This data type is used as a member  of  the
                                   ContextDefinition  structure  which is uses
                                   as a request parameter for the IsAuthorized
                                   ,       BatchIsAuthorized       ,       and
                                   IsAuthorizedWithToken operations.

                                   NOTE:
                                      This is a Tagged Union  structure.  Only
                                      one  of the following top level keys can
                                      be set: boolean, entityIdentifier, long,
                                      string, set, record.

                                   boolean -> (boolean)
                                      An attribute value of Boolean type.

                                      Example: {"boolean": true}

                                   entityIdentifier -> (structure)
                                      An     attribute     value    of    type
                                      EntityIdentifier .

                                      Example:  "entityIdentifier":  {  "enti-
                                      tyId":  "<id>",  "entityType":  "<entity
                                      type>"}

                                      entityType -> (string)
                                          The type of an entity.

                                          Example: "entityType":"*typeName* "

                                      entityId -> (string)
                                          The identifier of an entity.
                                             "entityId":"*identifier* "

                                   long -> (long)
                                      An attribute value of Long type.

                                      Example: {"long": 0}

                                   string -> (string)
                                      An attribute value of String type.

                                      Example: {"string": "abc"}

                                   set -> (list)
                                      An attribute value of Set type.

                                      Example: {"set": [ {} ] }

                                      ( ... recursive ... )

                                   record -> (map)
                                      An attribute value of Record type.

                                      Example: {"record": { "keyName": {} } }

                                      key -> (string)

                                      ( ... recursive ... )

                            record -> (map)
                               An attribute value of Record type.

                               Example: {"record": { "keyName": {} } }

                               key -> (string)

                               value -> (tagged union structure)
                                   The value of an attribute.

                                   Contains information about the runtime con-
                                   text  for a request for which an authoriza-
                                   tion decision is made.

                                   This data type is used as a member  of  the
                                   ContextDefinition  structure  which is uses
                                   as a request parameter for the IsAuthorized
                                   ,       BatchIsAuthorized       ,       and
                                   IsAuthorizedWithToken operations.

                                   NOTE:
                                      This is a Tagged Union  structure.  Only
                                      one  of the following top level keys can
                                      be set: boolean, entityIdentifier, long,
                                      string, set, record.

                                   boolean -> (boolean)
                                      An attribute value of Boolean type.

                                      Example: {"boolean": true}

                                   entityIdentifier -> (structure)
                                      An     attribute     value    of    type
                                      EntityIdentifier .

                                      Example:  "entityIdentifier":  {  "enti-
                                      tyId":  "<id>",  "entityType":  "<entity
                                      type>"}

                                      entityType -> (string)
                                          The type of an entity.

                                          Example: "entityType":"*typeName* "

                                      entityId -> (string)
                                          The identifier of an entity.
                                             "entityId":"*identifier* "

                                   long -> (long)
                                      An attribute value of Long type.

                                      Example: {"long": 0}

                                   string -> (string)
                                      An attribute value of String type.

                                      Example: {"string": "abc"}

                                   set -> (list)
                                      An attribute value of Set type.

                                      Example: {"set": [ {} ] }

                                      ( ... recursive ... )

                                   record -> (map)
                                      An attribute value of Record type.

                                      Example: {"record": { "keyName": {} } }

                                      key -> (string)

                                      ( ... recursive ... )

              decision -> (string)
                 An authorization decision that indicates if the authorization
                 request should be allowed or denied.

              determiningPolicies -> (list)
                 The  list of determining policies used to make the authoriza-
                 tion decision. For example, if there are two  matching  poli-
                 cies,  where  one is a forbid and the other is a permit, then
                 the forbid policy will be the determining policy. In the case
                 of multiple matching permit policies then there would be mul-
                 tiple determining policies. In  the  case  that  no  policies
                 match,  and hence the response is DENY, there would be no de-
                 termining policies.

                 (structure)
                     Contains information about one of the policies  that  de-
                     termined an authorization decision.

                     This data type is used as an element in a response param-
                     eter for  the  IsAuthorized  ,  BatchIsAuthorized  ,  and
                     IsAuthorizedWithToken operations.

                     Example:      "determiningPolicies":[{"policyId":"SPEXAM-
                     PLEabcdefg111111"}]

                     policyId -> (string)
                        The Id of a policy that determined to an authorization
                        decision.

                        Example: "policyId":"SPEXAMPLEabcdefg111111"

              errors -> (list)
                 Errors  that occurred while making an authorization decision.
                 For example, a policy might reference an entity or  attribute
                 that doesn't exist in the request.

                 (structure)
                     Contains a description of an evaluation error.

                     This   data   type   is   a  response  parameter  of  the
                     IsAuthorized     ,      BatchIsAuthorized      ,      and
                     IsAuthorizedWithToken operations.

                     errorDescription -> (string)
                        The error description.



                                              BATCH-IS-AUTHORIZED-WITH-TOKEN()
