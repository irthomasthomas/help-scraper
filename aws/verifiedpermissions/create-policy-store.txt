CREATE-POLICY-STORE()                                    CREATE-POLICY-STORE()



NAME
       create-policy-store -

DESCRIPTION
       Creates  a  policy  store. A policy store is a container for policy re-
       sources.

       See also: AWS API Documentation

SYNOPSIS
            create-policy-store
          [--client-token <value>]
          --validation-settings <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --client-token (string)
          Specifies a unique, case-sensitive ID that you provide to ensure the
          idempotency  of  the request. This lets you safely retry the request
          without accidentally performing the same operation  a  second  time.
          Passing the same value to a later call to an operation requires that
          you also pass the same value for all other parameters. We  recommend
          that you use a UUID type of value. .

          If  you don't provide this value, then Amazon Web Services generates
          a random one for you.

          If you retry the operation with the same ClientToken , but with dif-
          ferent  parameters,  the retry fails with an IdempotentParameterMis-
          match error.

       --validation-settings (structure)
          Specifies the validation setting for this policy store.

          Currently, the only valid and required value is Mode .

          WARNING:
              We recommend that you turn on STRICT mode only after you  define
              a schema. If a schema doesn't exist, then STRICT mode causes any
              policy to fail validation, and Verified Permissions rejects  the
              policy.   You   can   turn   off   validation   by   using   the
              UpdatePolicyStore . Then, when you have a  schema  defined,  use
              UpdatePolicyStore again to turn validation back on.

          mode -> (string)
              The  validation mode currently configured for this policy store.
              The valid values are:

              o OFF  Neither Verified Permissions nor Cedar perform any  vali-
                dation  on  policies. No validation errors are reported by ei-
                ther service.

              o STRICT  Requires a schema to be present in the  policy  store.
                Cedar  performs  validation  on  all  submitted new or updated
                static policies and policy templates. Any that fail validation
                are rejected and Cedar doesn't store them in the policy store.

              WARNING:
                 If Mode=STRICT and the policy store doesn't contain a schema,
                 Verified Permissions rejects all static policies  and  policy
                 templates because there is no schema to validate against.

                 To  submit  a  static  policy  or  policy  template without a
                 schema, you must turn off validation.

       Shorthand Syntax:

          mode=string

       JSON Syntax:

          {
            "mode": "OFF"|"STRICT"
          }

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       policyStoreId -> (string)
          The unique ID of the new policy store.

       arn -> (string)
          The Amazon Resource Name (ARN) of the new policy store.

       createdDate -> (timestamp)
          The date and time the policy store was originally created.

       lastUpdatedDate -> (timestamp)
          The date and time the policy store was last updated.



                                                         CREATE-POLICY-STORE()
