PUT-SCHEMA()                                                      PUT-SCHEMA()



NAME
       put-schema -

DESCRIPTION
       Creates or updates the policy schema in the specified policy store. The
       schema is used to validate any Cedar policies and policy templates sub-
       mitted  to  the  policy  store. Any changes to the schema validate only
       policies and templates submitted  after  the  schema  change.  Existing
       policies and templates are not re-evaluated against the changed schema.
       If you later update a policy, then it  is  evaluated  against  the  new
       schema at that time.

       See also: AWS API Documentation

SYNOPSIS
            put-schema
          --policy-store-id <value>
          --definition <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --policy-store-id (string)
          Specifies the ID of the policy store in which to place the schema.

       --definition (tagged union structure)
          Specifies the definition of the schema to be stored. The schema def-
          inition must be written in Cedar schema JSON.

          NOTE:
              This is a Tagged Union structure. Only one of the following  top
              level keys can be set: cedarJson.

          cedarJson -> (string)
              A JSON string representation of the schema supported by applica-
              tions that use this policy  store.  For  more  information,  see
              Policy  store  schema  in  the  Amazon Verified Permissions User
              Guide .

       Shorthand Syntax:

          cedarJson=string

       JSON Syntax:

          {
            "cedarJson": "string"
          }

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To save a schema to a policy store

       The following put-schema example creates or replaces the schema in  the
       specified policy store.

       The cedarJson parameter in the input file takes a string representation
       of a JSON object. It contains embedded quotation marks (")  within  the
       outermost quotation mark pair. This requires you to convert the JSON to
       a string by preceding all embedded quotation  marks  with  a  backslash
       character ( " ) and combining all lines into a single text line with no
       line breaks.

       Example strings can be displayed wrapped across multiple lines here for
       readability,  but the operation requires the parameters be submitted as
       single line strings.

          aws verifiedpermissions put-schema
                 --definition  file://schema.txt   --policy-store-id   PSEXAM-
                 PLEabcdefg111111

       Contents of schema.txt:

          {
              "cedarJson": "{\"MySampleNamespace\": {\"actions\": {\"remoteAccess\": {
                      \"appliesTo\": {\"principalTypes\": [\"Employee\"]}}},\"entityTypes\": {
                      \"Employee\": {\"shape\": {\"attributes\": {\"jobLevel\": {\"type\":
                      \"Long\"},\"name\": {\"type\": \"String\"}},\"type\": \"Record\"}}}}}"
          }

       Output:

          {
              "policyStoreId": "PSEXAMPLEabcdefg111111",
              "namespaces": [
                  "MySampleNamespace"
              ],
              "createdDate": "2023-06-14T17:47:13.999885+00:00",
              "lastUpdatedDate": "2023-06-14T17:47:13.999885+00:00"
          }

       For  more information about schema, see Policy store schema in the Ama-
       zon Verified Permissions User Guide.

OUTPUT
       policyStoreId -> (string)
          The unique ID of the policy store that contains the schema.

       namespaces -> (list)
          Identifies the namespaces of the entities referenced by this schema.

          (string)

       createdDate -> (timestamp)
          The date and time that the schema was originally created.

       lastUpdatedDate -> (timestamp)
          The date and time that the schema was last updated.



                                                                  PUT-SCHEMA()
