UPDATE-API-CACHE()                                          UPDATE-API-CACHE()



NAME
       update-api-cache -

DESCRIPTION
       Updates the cache for the GraphQL API.

       See also: AWS API Documentation

SYNOPSIS
            update-api-cache
          --api-id <value>
          --ttl <value>
          --api-caching-behavior <value>
          --type <value>
          [--health-metrics-config <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --api-id (string)
          The GraphQL API ID.

       --ttl (long)
          TTL in seconds for cache entries.

          Valid values are 13,600 seconds.

       --api-caching-behavior (string)
          Caching behavior.

          o FULL_REQUEST_CACHING : All requests are fully cached.

          o PER_RESOLVER_CACHING  :  Individual resolvers that you specify are
            cached.

          Possible values:

          o FULL_REQUEST_CACHING

          o PER_RESOLVER_CACHING

       --type (string)
          The cache instance type. Valid values are

          o SMALL

          o MEDIUM

          o LARGE

          o XLARGE

          o LARGE_2X

          o LARGE_4X

          o LARGE_8X (not available in all regions)

          o LARGE_12X

          Historically, instance types were identified by an EC2-style  value.
          As  of  July  2020,  this is deprecated, and the generic identifiers
          above should be used.

          The following legacy instance types are available, but their use  is
          discouraged:

          o T2_SMALL : A t2.small instance type.

          o T2_MEDIUM : A t2.medium instance type.

          o R4_LARGE : A r4.large instance type.

          o R4_XLARGE : A r4.xlarge instance type.

          o R4_2XLARGE : A r4.2xlarge instance type.

          o R4_4XLARGE : A r4.4xlarge instance type.

          o R4_8XLARGE : A r4.8xlarge instance type.

          Possible values:

          o T2_SMALL

          o T2_MEDIUM

          o R4_LARGE

          o R4_XLARGE

          o R4_2XLARGE

          o R4_4XLARGE

          o R4_8XLARGE

          o SMALL

          o MEDIUM

          o LARGE

          o XLARGE

          o LARGE_2X

          o LARGE_4X

          o LARGE_8X

          o LARGE_12X

       --health-metrics-config (string)
          Controls  how  cache  health  metrics will be emitted to CloudWatch.
          Cache health metrics include:

          o NetworkBandwidthOutAllowanceExceeded: The number of times a speci-
            fied GraphQL operation was called.

          o EngineCPUUtilization:  The  number of GraphQL errors that occurred
            during a specified GraphQL operation.

          Metrics will be recorded by API ID. You can set the value to ENABLED
          or DISABLED .

          Possible values:

          o ENABLED

          o DISABLED

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       apiCache -> (structure)
          The ApiCache object.

          ttl -> (long)
              TTL in seconds for cache entries.

              Valid values are 13,600 seconds.

          apiCachingBehavior -> (string)
              Caching behavior.

              o FULL_REQUEST_CACHING : All requests are fully cached.

              o PER_RESOLVER_CACHING : Individual resolvers that  you  specify
                are cached.

          transitEncryptionEnabled -> (boolean)
              Transit encryption flag when connecting to cache. You cannot up-
              date this setting after creation.

          atRestEncryptionEnabled -> (boolean)
              At-rest encryption flag for cache. You cannot update  this  set-
              ting after creation.

          type -> (string)
              The cache instance type. Valid values are

              o SMALL

              o MEDIUM

              o LARGE

              o XLARGE

              o LARGE_2X

              o LARGE_4X

              o LARGE_8X (not available in all regions)

              o LARGE_12X

              Historically,  instance  types  were  identified by an EC2-style
              value. As of July 2020, this  is  deprecated,  and  the  generic
              identifiers above should be used.

              The following legacy instance types are available, but their use
              is discouraged:

              o T2_SMALL : A t2.small instance type.

              o T2_MEDIUM : A t2.medium instance type.

              o R4_LARGE : A r4.large instance type.

              o R4_XLARGE : A r4.xlarge instance type.

              o R4_2XLARGE : A r4.2xlarge instance type.

              o R4_4XLARGE : A r4.4xlarge instance type.

              o R4_8XLARGE : A r4.8xlarge instance type.

          status -> (string)
              The cache instance status.

              o AVAILABLE : The instance is available for use.

              o CREATING : The instance is currently creating.

              o DELETING : The instance is currently deleting.

              o MODIFYING : The instance is currently modifying.

              o FAILED : The instance has failed creation.

          healthMetricsConfig -> (string)
              Controls how cache health metrics will be emitted to CloudWatch.
              Cache health metrics include:

              o NetworkBandwidthOutAllowanceExceeded:   The   network  packets
                dropped because the throughput exceeded the  aggregated  band-
                width  limit.  This  is useful for diagnosing bottlenecks in a
                cache configuration.

              o EngineCPUUtilization: The CPU utilization  (percentage)  allo-
                cated to the Redis process. This is useful for diagnosing bot-
                tlenecks in a cache configuration.

              Metrics will be recorded by API ID. You can set the value to EN-
              ABLED or DISABLED .



                                                            UPDATE-API-CACHE()
