GET-DATA-SOURCE-INTROSPECTION()                GET-DATA-SOURCE-INTROSPECTION()



NAME
       get-data-source-introspection -

DESCRIPTION
       Retrieves  the record of an existing introspection. If the retrieval is
       successful, the result of the instrospection will also be returned.  If
       the  retrieval  fails  the operation, an error message will be returned
       instead.

       See also: AWS API Documentation

SYNOPSIS
            get-data-source-introspection
          --introspection-id <value>
          [--include-models-sdl | --no-include-models-sdl]
          [--next-token <value>]
          [--max-results <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --introspection-id (string)
          The introspection ID. Each introspection contains a unique  ID  that
          can be used to reference the instrospection record.

       --include-models-sdl | --no-include-models-sdl (boolean)
          A  boolean  flag that determines whether SDL should be generated for
          introspected types or not. If set to true , each model will  contain
          an  sdl  property  that contains the SDL for that type. The SDL only
          contains the type data and no additional metadata or directives.

       --next-token (string)
          Determines the number of types to be returned in a  single  response
          before  paginating.  This  value  is  typically taken from nextToken
          value from the previous response.

       --max-results (integer)
          The maximum number of introspected types that will be returned in  a
          single response.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       introspectionId -> (string)
          The  introspection  ID. Each introspection contains a unique ID that
          can be used to reference the instrospection record.

       introspectionStatus -> (string)
          The status of the introspection during retrieval. By default, when a
          new  instrospection  is  being  retrieved, the status will be set to
          PROCESSING . Once the operation has been completed, the status  will
          change  to SUCCESS or FAILED depending on how the data was parsed. A
          FAILED operation will return an error and its details as  an  intro-
          spectionStatusDetail .

       introspectionStatusDetail -> (string)
          The  error  detail  field. When a FAILED  introspectionStatus is re-
          turned, the introspectionStatusDetail will also return the exact er-
          ror that was generated during the operation.

       introspectionResult -> (structure)
          The DataSourceIntrospectionResult object data.

          models -> (list)
              The array of DataSourceIntrospectionModel objects.

              (structure)
                 Contains  the  introspected  data that was retrieved from the
                 data source.

                 name -> (string)
                     The name of the model. For example,  this  could  be  the
                     name of a single table in a database.

                 fields -> (list)
                     The DataSourceIntrospectionModelField object data.

                     (structure)
                        Represents the fields that were retrieved from the in-
                        trospected data.

                        name -> (string)
                            The name of the field that was retrieved from  the
                            introspected data.

                        type -> (structure)
                            The  DataSourceIntrospectionModelFieldType  object
                            data.

                            kind -> (string)
                               Specifies the classification of data. For exam-
                               ple, this could be set to values like Scalar or
                               NonNull to indicate a fundamental  property  of
                               the field.

                               Valid values include:

                               o Scalar  :  Indicates the value is a primitive
                                 type (scalar).

                               o NonNull : Indicates the field cannot be  null
                                 .

                               o List : Indicates the field contains a list.

                            name -> (string)
                               The  name  of the data type that represents the
                               field. For example,  String  is  a  valid  name
                               value.

                            type -> (structure)
                               The  DataSourceIntrospectionModelFieldType  ob-
                               ject data. The type is only  present  if  Data-
                               SourceIntrospectionModelFieldType.kind  is  set
                               to NonNull or List .

                               The type typically contains its  own  kind  and
                               name  fields to represent the actual type data.
                               For instance, type could contain a  kind  value
                               of  Scalar  with  a  name value of String . The
                               values Scalar and String will  be  collectively
                               stored in the values field.

                               kind -> (string)
                                   Specifies  the  classification of data. For
                                   example, this could be set to  values  like
                                   Scalar or NonNull to indicate a fundamental
                                   property of the field.

                                   Valid values include:

                                   o Scalar : Indicates the value is a  primi-
                                     tive type (scalar).

                                   o NonNull  :  Indicates the field cannot be
                                     null .

                                   o List : Indicates  the  field  contains  a
                                     list.

                               name -> (string)
                                   The  name  of the data type that represents
                                   the field. For example, String is  a  valid
                                   name value.

                               ( ... recursive ... )values -> (list)
                                   The  values  of  the type field. This field
                                   represents the AppSync data type equivalent
                                   of the introspected field.

                                   (string)

                            values -> (list)
                               The values of the type field. This field repre-
                               sents the AppSync data type equivalent  of  the
                               introspected field.

                               (string)

                        length -> (long)
                            The length value of the introspected field.

                 primaryKey -> (structure)
                     The  primary  key stored as a DataSourceIntrospectionMod-
                     elIndex object.

                     name -> (string)
                        The name of the index.

                     fields -> (list)
                        The fields of the index.

                        (string)

                 indexes -> (list)
                     The array of DataSourceIntrospectionModelIndex objects.

                     (structure)
                        The index that was  retrieved  from  the  introspected
                        data.

                        name -> (string)
                            The name of the index.

                        fields -> (list)
                            The fields of the index.

                            (string)

                 sdl -> (string)
                     Contains  the  output  of the SDL that was generated from
                     the introspected types. This is  controlled  by  the  in-
                     cludeModelsSDL  parameter  of the GetDataSourceIntrospec-
                     tion operation.

          nextToken -> (string)
              Determines the number of types to be returned in  a  single  re-
              sponse  before  paginating.  This  value is typically taken from
              nextToken value from the previous response.



                                               GET-DATA-SOURCE-INTROSPECTION()
