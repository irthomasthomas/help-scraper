CREATE-MODEL-VERSION()                                  CREATE-MODEL-VERSION()



NAME
       create-model-version -

DESCRIPTION
       Creates a version of the model using the specified model type and model
       id.

       See also: AWS API Documentation

SYNOPSIS
            create-model-version
          --model-id <value>
          --model-type <value>
          --training-data-source <value>
          --training-data-schema <value>
          [--external-events-detail <value>]
          [--ingested-events-detail <value>]
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --model-id (string)
          The model ID.

       --model-type (string)
          The model type.

          Possible values:

          o ONLINE_FRAUD_INSIGHTS

          o TRANSACTION_FRAUD_INSIGHTS

          o ACCOUNT_TAKEOVER_INSIGHTS

       --training-data-source (string)
          The training data source location in Amazon S3.

          Possible values:

          o EXTERNAL_EVENTS

          o INGESTED_EVENTS

       --training-data-schema (structure)
          The training data schema.

          modelVariables -> (list)
              The training data schema variables.

              (string)

          labelSchema -> (structure)
              The label schema.

              labelMapper -> (map)
                 The label mapper maps the  Amazon  Fraud  Detector  supported
                 model classification labels (FRAUD , LEGIT ) to the appropri-
                 ate event type labels. For example, if "FRAUD " and "LEGIT  "
                 are Amazon Fraud Detector supported labels, this mapper could
                 be: {"FRAUD" => ["0"] , "LEGIT"  =>  ["1"]}  or  {"FRAUD"  =>
                 ["false"]  ,  "LEGIT"  =>  ["true"]} or {"FRAUD" => ["fraud",
                 "abuse"] , "LEGIT" => ["legit", "safe"]} . The value part  of
                 the  mapper  is  a  list, because you may have multiple label
                 variants from your event type for a single Amazon  Fraud  De-
                 tector label.

                 key -> (string)

                 value -> (list)
                     (string)

              unlabeledEventsTreatment -> (string)
                 The action to take for unlabeled events.

                 o Use  IGNORE if you want the unlabeled events to be ignored.
                   This is recommended when the majority of the events in  the
                   dataset are labeled.

                 o Use FRAUD if you want to categorize all unlabeled events as
                   Fraud. This is recommended when most of the events in  your
                   dataset are fraudulent.

                 o Use  LEGIT f you want to categorize all unlabeled events as
                   Legit. This is recommended when most of the events in  your
                   dataset are legitimate.

                 o Use AUTO if you want Amazon Fraud Detector to decide how to
                   use the unlabeled data. This is recommended when  there  is
                   significant unlabeled events in the dataset.

                 By default, Amazon Fraud Detector ignores the unlabeled data.

       Shorthand Syntax:

          modelVariables=string,string,labelSchema={labelMapper={KeyName1=[string,string],KeyName2=[string,string]},unlabeledEventsTreatment=string}

       JSON Syntax:

          {
            "modelVariables": ["string", ...],
            "labelSchema": {
              "labelMapper": {"string": ["string", ...]
                ...},
              "unlabeledEventsTreatment": "IGNORE"|"FRAUD"|"LEGIT"|"AUTO"
            }
          }

       --external-events-detail (structure)
          Details of the external events data used for model version training.
          Required if trainingDataSource is EXTERNAL_EVENTS .

          dataLocation -> (string)
              The Amazon S3 bucket location for the data.

          dataAccessRoleArn -> (string)
              The ARN of the role that provides Amazon Fraud  Detector  access
              to the data location.

       Shorthand Syntax:

          dataLocation=string,dataAccessRoleArn=string

       JSON Syntax:

          {
            "dataLocation": "string",
            "dataAccessRoleArn": "string"
          }

       --ingested-events-detail (structure)
          Details of the ingested events data used for model version training.
          Required if trainingDataSource is INGESTED_EVENTS .

          ingestedEventsTimeWindow -> (structure)
              The start and stop time of the ingested events.

              startTime -> (string)
                 Timestamp of the first ingensted event.

              endTime -> (string)
                 Timestamp of the final ingested event.

       Shorthand Syntax:

          ingestedEventsTimeWindow={startTime=string,endTime=string}

       JSON Syntax:

          {
            "ingestedEventsTimeWindow": {
              "startTime": "string",
              "endTime": "string"
            }
          }

       --tags (list)
          A collection of key and value pairs.

          (structure)
              A key and value pair.

              key -> (string)
                 A tag key.

              value -> (string)
                 A value assigned to a tag key.

       Shorthand Syntax:

          key=string,value=string ...

       JSON Syntax:

          [
            {
              "key": "string",
              "value": "string"
            }
            ...
          ]

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       modelId -> (string)
          The model ID.

       modelType -> (string)
          The model type.

       modelVersionNumber -> (string)
          The model version number of the model version created.

       status -> (string)
          The model version status.



                                                        CREATE-MODEL-VERSION()
