CREATE-DATA-CATALOG()                                    CREATE-DATA-CATALOG()



NAME
       create-data-catalog -

DESCRIPTION
       Creates  (registers) a data catalog with the specified name and proper-
       ties. Catalogs created are visible to all users of the same Amazon  Web
       Services account.

       See also: AWS API Documentation

SYNOPSIS
            create-data-catalog
          --name <value>
          --type <value>
          [--description <value>]
          [--parameters <value>]
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --name (string)
          The  name  of  the  data catalog to create. The catalog name must be
          unique for the Amazon Web Services account and can use a maximum  of
          127 alphanumeric, underscore, at sign, or hyphen characters. The re-
          mainder of the length constraint of  256  is  reserved  for  use  by
          Athena.

       --type (string)
          The  type of data catalog to create: LAMBDA for a federated catalog,
          HIVE for an external hive metastore, or GLUE for an Glue Data  Cata-
          log.

          Possible values:

          o LAMBDA

          o GLUE

          o HIVE

       --description (string)
          A description of the data catalog to be created.

       --parameters (map)
          Specifies  the  Lambda function or functions to use for creating the
          data catalog. This is a mapping whose values depend on  the  catalog
          type.

          o For  the  HIVE  data  catalog  type, use the following syntax. The
            metadata-function parameter is required. The sdk-version parameter
            is optional and defaults to the currently supported version.
            ``
            metadata-function=*lambda_arn* , sdk-version=*version_number* ``

          System Message: WARNING/2 (<string>:, line 105)
            Inline literal start-string without end-string.

          o For the LAMBDA data catalog type, use one of the following sets of
            required parameters, but not both.

            o If you have one Lambda function that processes metadata and  an-
              other  for  reading  the  actual data, use the following syntax.
              Both parameters are required.
              ``
              metadata-function=*lambda_arn* , record-function=*lambda_arn* ``

            System Message: WARNING/2 (<string>:, line 110)
              Inline literal start-string without end-string.

            o If you have a composite  Lambda  function  that  processes  both
              metadata  and  data,  use  the  following syntax to specify your
              Lambda function.
              ``
              function=*lambda_arn* ``

            System Message: WARNING/2 (<string>:, line 112)
              Inline literal start-string without end-string.

          o The GLUE type takes a catalog ID parameter and is required. The ``
            catalog_id `` is the account ID of the Amazon Web Services account
            to which the Glue Data Catalog belongs.
            ``
            catalog-id=*catalog_id* ``

          System Message: WARNING/2 (<string>:, line 117)
            Inline literal start-string without end-string.

            o The GLUE data catalog type also applies to the default  AwsData-
              Catalog  that  already  exists in your account, of which you can
              have only one and cannot modify.

            o Queries that specify a Glue Data Catalog other than the  default
              AwsDataCatalog must be run on Athena engine version 2.

            o In  Regions where Athena engine version 2 is not available, cre-
              ating new Glue data catalogs results in an INVALID_INPUT error.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --tags (list)
          A list of comma separated tags to add to the data  catalog  that  is
          created.

          (structure)
              A  label that you assign to a resource. Athena resources include
              workgroups, data catalogs, and capacity reservations.  Each  tag
              consists  of  a key and an optional value, both of which you de-
              fine. For example, you can use tags  to  categorize  Athena  re-
              sources  by purpose, owner, or environment. Use a consistent set
              of tag keys to make it easier to search and filter the resources
              in  your account. For best practices, see Tagging Best Practices
              . Tag keys can be from 1 to 128 UTF-8  Unicode  characters,  and
              tag  values  can be from 0 to 256 UTF-8 Unicode characters. Tags
              can use letters and numbers representable in UTF-8, and the fol-
              lowing  characters:  +  -  =  . _ : / @. Tag keys and values are
              case-sensitive. Tag keys must be unique  per  resource.  If  you
              specify more than one tag, separate them by commas.

              Key -> (string)
                 A  tag key. The tag key length is from 1 to 128 Unicode char-
                 acters in UTF-8. You  can  use  letters  and  numbers  repre-
                 sentable  in UTF-8, and the following characters: + - = . _ :
                 / @. Tag keys are case-sensitive and must be unique  per  re-
                 source.

              Value -> (string)
                 A  tag  value.  The tag value length is from 0 to 256 Unicode
                 characters in UTF-8. You can use letters and  numbers  repre-
                 sentable  in UTF-8, and the following characters: + - = . _ :
                 / @. Tag values are case-sensitive.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a data catalog

       The following create-data-catalog example creates the dynamo_db_catalog
       data catalog.

          aws athena create-data-catalog \
              --name dynamo_db_catalog \
              --type LAMBDA \
              --description "DynamoDB Catalog" \
              --parameters function=arn:aws:lambda:us-west-2:111122223333:function:dynamo_db_lambda

       This  command  produces  no  output.  To see the result, use aws athena
       get-data-catalog --name dynamo_db_catalog.

       For more information, see Registering a Catalog: create-data-catalog in
       the Amazon Athena User Guide.

OUTPUT
       None



                                                         CREATE-DATA-CATALOG()
