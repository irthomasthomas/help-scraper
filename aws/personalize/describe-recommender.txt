DESCRIBE-RECOMMENDER()                                  DESCRIBE-RECOMMENDER()



NAME
       describe-recommender -

DESCRIPTION
       Describes the given recommender, including its status.

       A recommender can be in one of the following states:

       o CREATE PENDING > CREATE IN_PROGRESS > ACTIVE -or- CREATE FAILED

       o STOP  PENDING  >  STOP IN_PROGRESS > INACTIVE > START PENDING > START
         IN_PROGRESS > ACTIVE

       o DELETE PENDING > DELETE IN_PROGRESS

       When the status is CREATE FAILED , the response  includes  the  failur-
       eReason key, which describes why.

       The  modelMetrics  key is null when the recommender is being created or
       deleted.

       For more information on recommenders, see CreateRecommender .

       See also: AWS API Documentation

SYNOPSIS
            describe-recommender
          --recommender-arn <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --recommender-arn (string)
          The Amazon Resource Name (ARN) of the recommender to describe.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       recommender -> (structure)
          The properties of the recommender.

          recommenderArn -> (string)
              The Amazon Resource Name (ARN) of the recommender.

          datasetGroupArn -> (string)
              The  Amazon Resource Name (ARN) of the Domain dataset group that
              contains the recommender.

          name -> (string)
              The name of the recommender.

          recipeArn -> (string)
              The Amazon Resource Name (ARN) of  the  recipe  (Domain  dataset
              group use case) that the recommender was created for.

          recommenderConfig -> (structure)
              The configuration details of the recommender.

              itemExplorationConfig -> (map)
                 Specifies  the exploration configuration hyperparameters, in-
                 cluding explorationWeight and explorationItemAgeCutOff ,  you
                 want  to use to configure the amount of item exploration Ama-
                 zon Personalize uses when recommending items. Provide itemEx-
                 plorationConfig  data only if your recommenders generate per-
                 sonalized recommendations for a user (not  popular  items  or
                 similar items).

                 key -> (string)

                 value -> (string)

              minRecommendationRequestsPerSecond -> (integer)
                 Specifies  the  requested  minimum provisioned recommendation
                 requests per second that Amazon Personalize will  support.  A
                 high  minRecommendationRequestsPerSecond  will  increase your
                 bill. We recommend starting with 1  for  minRecommendationRe-
                 questsPerSecond  (the default). Track your usage using Amazon
                 CloudWatch metrics,  and  increase  the  minRecommendationRe-
                 questsPerSecond as necessary.

              trainingDataConfig -> (structure)
                 Specifies  the training data configuration to use when creat-
                 ing a domain recommender.

                 excludedDatasetColumns -> (map)
                     Specifies the columns to exclude from training. Each  key
                     is  a  dataset type, and each value is a list of columns.
                     Exclude columns to control what data  Amazon  Personalize
                     uses  to generate recommendations. For example, you might
                     have a column that you want to use only to filter  recom-
                     mendations. You can exclude this column from training and
                     Amazon Personalize considers it only when filtering.

                     key -> (string)

                     value -> (list)
                        (string)

          creationDateTime -> (timestamp)
              The date and time (in Unix format) that the recommender was cre-
              ated.

          lastUpdatedDateTime -> (timestamp)
              The date and time (in Unix format) that the recommender was last
              updated.

          status -> (string)
              The status of the recommender.

              A recommender can be in one of the following states:

              o CREATE PENDING >  CREATE  IN_PROGRESS  >  ACTIVE  -or-  CREATE
                FAILED

              o STOP  PENDING  > STOP IN_PROGRESS > INACTIVE > START PENDING >
                START IN_PROGRESS > ACTIVE

              o DELETE PENDING > DELETE IN_PROGRESS

          failureReason -> (string)
              If a recommender fails, the reason behind the failure.

          latestRecommenderUpdate -> (structure)
              Provides a summary of the latest updates to the recommender.

              recommenderConfig -> (structure)
                 The configuration details of the recommender update.

                 itemExplorationConfig -> (map)
                     Specifies the exploration configuration  hyperparameters,
                     including  explorationWeight and explorationItemAgeCutOff
                     , you want to use to configure the amount of item  explo-
                     ration  Amazon  Personalize uses when recommending items.
                     Provide itemExplorationConfig data only  if  your  recom-
                     menders  generate personalized recommendations for a user
                     (not popular items or similar items).

                     key -> (string)

                     value -> (string)

                 minRecommendationRequestsPerSecond -> (integer)
                     Specifies the requested minimum  provisioned  recommenda-
                     tion  requests  per  second  that Amazon Personalize will
                     support. A high  minRecommendationRequestsPerSecond  will
                     increase your bill. We recommend starting with 1 for min-
                     RecommendationRequestsPerSecond (the default). Track your
                     usage  using  Amazon CloudWatch metrics, and increase the
                     minRecommendationRequestsPerSecond as necessary.

                 trainingDataConfig -> (structure)
                     Specifies the training data  configuration  to  use  when
                     creating a domain recommender.

                     excludedDatasetColumns -> (map)
                        Specifies  the  columns to exclude from training. Each
                        key is a dataset type, and each value  is  a  list  of
                        columns.  Exclude  columns to control what data Amazon
                        Personalize uses to generate recommendations. For  ex-
                        ample,  you  might  have a column that you want to use
                        only to filter recommendations. You can  exclude  this
                        column  from training and Amazon Personalize considers
                        it only when filtering.

                        key -> (string)

                        value -> (list)
                            (string)

              creationDateTime -> (timestamp)
                 The date and time (in Unix format) that the  recommender  up-
                 date was created.

              lastUpdatedDateTime -> (timestamp)
                 The  date and time (in Unix time) that the recommender update
                 was last updated.

              status -> (string)
                 The status of the recommender update.

                 A recommender can be in one of the following states:

                 o CREATE PENDING > CREATE IN_PROGRESS >  ACTIVE  -or-  CREATE
                   FAILED

                 o STOP  PENDING > STOP IN_PROGRESS > INACTIVE > START PENDING
                   > START IN_PROGRESS > ACTIVE

                 o DELETE PENDING > DELETE IN_PROGRESS

              failureReason -> (string)
                 If a recommender update fails, the reason behind the failure.

          modelMetrics -> (map)
              Provides evaluation metrics that help you determine the  perfor-
              mance  of  a recommender. For more information, see Evaluating a
              recommender .

              key -> (string)

              value -> (double)



                                                        DESCRIBE-RECOMMENDER()
