CREATE-SOLUTION()                                            CREATE-SOLUTION()



NAME
       create-solution -

DESCRIPTION
       Creates  the  configuration  for  training  a model. A trained model is
       known as a solution version. After the configuration  is  created,  you
       train   the   model   (create   a  solution  version)  by  calling  the
       CreateSolutionVersion operation. Every time you call CreateSolutionVer-
       sion , a new version of the solution is created.

       After  creating  a  solution version, you check its accuracy by calling
       GetSolutionMetrics . When you are satisfied with the version,  you  de-
       ploy it using CreateCampaign . The campaign provides recommendations to
       a client through the GetRecommendations API.

       To train a model, Amazon  Personalize  requires  training  data  and  a
       recipe. The training data comes from the dataset group that you provide
       in the request. A recipe specifies the training algorithm and a feature
       transformation.  You can specify one of the predefined recipes provided
       by Amazon Personalize.

       NOTE:
              Amazon Personalize doesn't support configuring the  hpoObjective
              for solution hyperparameter optimization at this time.

          Status

       A solution can be in one of the following states:

       o CREATE PENDING > CREATE IN_PROGRESS > ACTIVE -or- CREATE FAILED

       o DELETE PENDING > DELETE IN_PROGRESS

       To  get  the status of the solution, call DescribeSolution . Wait until
       the status shows as ACTIVE before calling CreateSolutionVersion .
          Related APIs

       o ListSolutions

       o CreateSolutionVersion

       o DescribeSolution

       o DeleteSolution

       o ListSolutionVersions

       o DescribeSolutionVersion

       See also: AWS API Documentation

SYNOPSIS
            create-solution
          --name <value>
          [--perform-hpo | --no-perform-hpo]
          [--perform-auto-ml | --no-perform-auto-ml]
          [--recipe-arn <value>]
          --dataset-group-arn <value>
          [--event-type <value>]
          [--solution-config <value>]
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --name (string)
          The name for the solution.

       --perform-hpo | --no-perform-hpo (boolean)
          Whether to perform hyperparameter optimization (HPO) on  the  speci-
          fied or selected recipe. The default is false .

          When performing AutoML, this parameter is always true and you should
          not set it to false .

       --perform-auto-ml | --no-perform-auto-ml (boolean)

          WARNING:
              We don't recommend enabling automated machine learning. Instead,
              match your use case to the available Amazon Personalize recipes.
              For more information, see Determining your use case.

          Whether to perform automated machine learning (AutoML). The  default
          is false . For this case, you must specify recipeArn .

          When  set  to  true , Amazon Personalize analyzes your training data
          and selects the optimal USER_PERSONALIZATION recipe and hyperparame-
          ters. In this case, you must omit recipeArn . Amazon Personalize de-
          termines the optimal recipe by running tests with  different  values
          for  the  hyperparameters.  AutoML lengthens the training process as
          compared to selecting a specific recipe.

       --recipe-arn (string)
          The ARN of the recipe to use for model training. Only specified when
          performAutoML is false.

       --dataset-group-arn (string)
          The  Amazon  Resource  Name (ARN) of the dataset group that provides
          the training data.

       --event-type (string)
          When your have multiple event  types  (using  an  EVENT_TYPE  schema
          field),  this  parameter  specifies  which  event type (for example,
          'click' or 'like') is used for training the model.

          If you do not provide an eventType , Amazon Personalize will use all
          interactions for training with equal weight regardless of type.

       --solution-config (structure)
          The  configuration  to  use with the solution. When performAutoML is
          set to true, Amazon Personalize only evaluates the autoMLConfig sec-
          tion of the solution configuration.

          NOTE:
              Amazon  Personalize doesn't support configuring the hpoObjective
              at this time.

          eventValueThreshold -> (string)
              Only events with a value greater than or equal to this threshold
              are used for training a model.

          hpoConfig -> (structure)
              Describes the properties for hyperparameter optimization (HPO).

              hpoObjective -> (structure)
                 The metric to optimize during HPO.

                 NOTE:
                     Amazon Personalize doesn't support configuring the hpoOb-
                     jective at this time.

                 type -> (string)
                     The type of the metric. Valid  values  are  Maximize  and
                     Minimize .

                 metricName -> (string)
                     The name of the metric.

                 metricRegex -> (string)
                     A regular expression for finding the metric in the train-
                     ing job logs.

              hpoResourceConfig -> (structure)
                 Describes the resource configuration for HPO.

                 maxNumberOfTrainingJobs -> (string)
                     The maximum number of training jobs when you create a so-
                     lution  version.  The maximum value for maxNumberOfTrain-
                     ingJobs is 40 .

                 maxParallelTrainingJobs -> (string)
                     The maximum number of parallel  training  jobs  when  you
                     create  a solution version. The maximum value for maxPar-
                     allelTrainingJobs is 10 .

              algorithmHyperParameterRanges -> (structure)
                 The hyperparameters and their allowable ranges.

                 integerHyperParameterRanges -> (list)
                     The integer-valued hyperparameters and their ranges.

                     (structure)
                        Provides the name and range of an  integer-valued  hy-
                        perparameter.

                        name -> (string)
                            The name of the hyperparameter.

                        minValue -> (integer)
                            The  minimum  allowable value for the hyperparame-
                            ter.

                        maxValue -> (integer)
                            The maximum allowable value for  the  hyperparame-
                            ter.

                 continuousHyperParameterRanges -> (list)
                     The continuous hyperparameters and their ranges.

                     (structure)
                        Provides  the  name and range of a continuous hyperpa-
                        rameter.

                        name -> (string)
                            The name of the hyperparameter.

                        minValue -> (double)
                            The minimum allowable value for  the  hyperparame-
                            ter.

                        maxValue -> (double)
                            The  maximum  allowable value for the hyperparame-
                            ter.

                 categoricalHyperParameterRanges -> (list)
                     The categorical hyperparameters and their ranges.

                     (structure)
                        Provides the name and range of a categorical  hyperpa-
                        rameter.

                        name -> (string)
                            The name of the hyperparameter.

                        values -> (list)
                            A list of the categories for the hyperparameter.

                            (string)

          algorithmHyperParameters -> (map)
              Lists the hyperparameter names and ranges.

              key -> (string)

              value -> (string)

          featureTransformationParameters -> (map)
              Lists the feature transformation parameters.

              key -> (string)

              value -> (string)

          autoMLConfig -> (structure)
              The  AutoMLConfig  object containing a list of recipes to search
              when AutoML is performed.

              metricName -> (string)
                 The metric to optimize.

              recipeList -> (list)
                 The list of candidate recipes.

                 (string)

          optimizationObjective -> (structure)
              Describes the additional objective for  the  solution,  such  as
              maximizing streaming minutes or increasing revenue. For more in-
              formation see Optimizing a solution .

              itemAttribute -> (string)
                 The numerical metadata column in an Items dataset related  to
                 the  optimization  objective.  For  example, VIDEO_LENGTH (to
                 maximize streaming minutes), or PRICE (to maximize revenue).

              objectiveSensitivity -> (string)
                 Specifies how Amazon Personalize balances the  importance  of
                 your optimization objective versus relevance.

          trainingDataConfig -> (structure)
              Specifies the training data configuration to use when creating a
              custom solution version (trained model).

              excludedDatasetColumns -> (map)
                 Specifies the columns to exclude from training. Each key is a
                 dataset  type,  and  each value is a list of columns. Exclude
                 columns to control what data Amazon Personalize uses to  gen-
                 erate  recommendations.  For example, you might have a column
                 that you want to use only to filter recommendations. You  can
                 exclude this column from training and Amazon Personalize con-
                 siders it only when filtering.

                 key -> (string)

                 value -> (list)
                     (string)

       JSON Syntax:

          {
            "eventValueThreshold": "string",
            "hpoConfig": {
              "hpoObjective": {
                "type": "string",
                "metricName": "string",
                "metricRegex": "string"
              },
              "hpoResourceConfig": {
                "maxNumberOfTrainingJobs": "string",
                "maxParallelTrainingJobs": "string"
              },
              "algorithmHyperParameterRanges": {
                "integerHyperParameterRanges": [
                  {
                    "name": "string",
                    "minValue": integer,
                    "maxValue": integer
                  }
                  ...
                ],
                "continuousHyperParameterRanges": [
                  {
                    "name": "string",
                    "minValue": double,
                    "maxValue": double
                  }
                  ...
                ],
                "categoricalHyperParameterRanges": [
                  {
                    "name": "string",
                    "values": ["string", ...]
                  }
                  ...
                ]
              }
            },
            "algorithmHyperParameters": {"string": "string"
              ...},
            "featureTransformationParameters": {"string": "string"
              ...},
            "autoMLConfig": {
              "metricName": "string",
              "recipeList": ["string", ...]
            },
            "optimizationObjective": {
              "itemAttribute": "string",
              "objectiveSensitivity": "LOW"|"MEDIUM"|"HIGH"|"OFF"
            },
            "trainingDataConfig": {
              "excludedDatasetColumns": {"string": ["string", ...]
                ...}
            }
          }

       --tags (list)
          A list of tags to apply to the solution.

          (structure)
              The optional metadata that you apply to resources  to  help  you
              categorize  and organize them. Each tag consists of a key and an
              optional value, both of which you define. For  more  information
              see Tagging Amazon Personalize recources .

              tagKey -> (string)
                 One  part of a key-value pair that makes up a tag. A key is a
                 general label that acts like a category for more specific tag
                 values.

              tagValue -> (string)
                 The  optional part of a key-value pair that makes up a tag. A
                 value acts as a descriptor within a tag category (key).

       Shorthand Syntax:

          tagKey=string,tagValue=string ...

       JSON Syntax:

          [
            {
              "tagKey": "string",
              "tagValue": "string"
            }
            ...
          ]

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       solutionArn -> (string)
          The ARN of the solution.



                                                             CREATE-SOLUTION()
