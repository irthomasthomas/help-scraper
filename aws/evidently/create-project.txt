CREATE-PROJECT()                                              CREATE-PROJECT()



NAME
       create-project -

DESCRIPTION
       Creates  a  project,  which is the logical object in Evidently that can
       contain features, launches, and experiments. Use projects to group sim-
       ilar features together.

       To update an existing project, use UpdateProject .

       See also: AWS API Documentation

SYNOPSIS
            create-project
          [--app-config-resource <value>]
          [--data-delivery <value>]
          [--description <value>]
          --name <value>
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --app-config-resource (structure)
          Use  this  parameter  if the project will use client-side evaluation
          powered by AppConfig . Client-side evaluation allows  your  applica-
          tion  to  assign  variations  to user sessions locally instead of by
          calling the EvaluateFeature operation. This  mitigates  the  latency
          and availability risks that come with an API call. For more informa-
          tion, see Client-side evaluation - powered by AppConfig.

          This parameter is a structure that contains  information  about  the
          AppConfig  application  and  environment  that  will  be used as for
          client-side evaluation.

          To create a project that uses client-side evaluation, you must  have
          the evidently:ExportProjectAsConfiguration permission.

          applicationId -> (string)
              The ID of the AppConfig application to use for client-side eval-
              uation.

          environmentId -> (string)
              The ID of the AppConfig environment to use for client-side eval-
              uation.  This must be an environment that is within the applica-
              tion that you specify for applicationId .

       Shorthand Syntax:

          applicationId=string,environmentId=string

       JSON Syntax:

          {
            "applicationId": "string",
            "environmentId": "string"
          }

       --data-delivery (structure)
          A structure that contains information about where  Evidently  is  to
          store evaluation events for longer term storage, if you choose to do
          so. If you choose not to store these events, Evidently deletes  them
          after  using  them  to  produce metrics and other experiment results
          that you can view.

          cloudWatchLogs -> (structure)
              If the project stores evaluation events in CloudWatch Logs, this
              structure stores the log group name.

              logGroup -> (string)
                 The name of the log group where the project stores evaluation
                 events.

          s3Destination -> (structure)
              If the project stores evaluation events in an Amazon S3  bucket,
              this structure stores the bucket name and bucket prefix.

              bucket -> (string)
                 The  name  of the bucket in which Evidently stores evaluation
                 events.

              prefix -> (string)
                 The  bucket  prefix  in  which  Evidently  stores  evaluation
                 events.

       Shorthand Syntax:

          cloudWatchLogs={logGroup=string},s3Destination={bucket=string,prefix=string}

       JSON Syntax:

          {
            "cloudWatchLogs": {
              "logGroup": "string"
            },
            "s3Destination": {
              "bucket": "string",
              "prefix": "string"
            }
          }

       --description (string)
          An optional description of the project.

       --name (string)
          The name for the project.

       --tags (map)
          Assigns one or more tags (key-value pairs) to the project.

          Tags  can  help  you organize and categorize your resources. You can
          also use them to scope user permissions by granting a  user  permis-
          sion to access or change only resources with certain tag values.

          Tags  don't have any semantic meaning to Amazon Web Services and are
          interpreted strictly as strings of characters.
              <p>You can associate as many as  50  tags  with  a  project.</p>
              <p>For  more  information,  see  <a  href="https://docs.aws.ama-
              zon.com/general/latest/gr/aws_tagging.html">Tagging  Amazon  Web
              Services resources</a>.</p> key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       project -> (structure)
          A structure that contains information about the created project.

          activeExperimentCount -> (long)
              The number of ongoing experiments currently in the project.

          activeLaunchCount -> (long)
              The number of ongoing launches currently in the project.

          appConfigResource -> (structure)
              This structure defines the configuration of how your application
              integrates with AppConfig to run client-side evaluation.

              applicationId -> (string)
                 The  ID  of  the AppConfig application to use for client-side
                 evaluation.

              configurationProfileId -> (string)
                 The ID of the AppConfig profile to use for client-side evalu-
                 ation.

              environmentId -> (string)
                 The  ID  of  the AppConfig environment to use for client-side
                 evaluation. This must be an environment that  is  within  the
                 application that you specify for applicationId .

          arn -> (string)
              The name or ARN of the project.

          createdTime -> (timestamp)
              The date and time that the project is created.

          dataDelivery -> (structure)
              A  structure  that contains information about where Evidently is
              to store evaluation events for longer term storage.

              cloudWatchLogs -> (structure)
                 If the project stores evaluation events in  CloudWatch  Logs,
                 this structure stores the log group name.

                 logGroup -> (string)
                     The name of the log group where the project stores evalu-
                     ation events.

              s3Destination -> (structure)
                 If the project stores  evaluation  events  in  an  Amazon  S3
                 bucket, this structure stores the bucket name and bucket pre-
                 fix.

                 bucket -> (string)
                     The name of the bucket in which Evidently stores  evalua-
                     tion events.

                 prefix -> (string)
                     The  bucket  prefix  in which Evidently stores evaluation
                     events.

          description -> (string)
              The user-entered description of the project.

          experimentCount -> (long)
              The number of experiments currently in  the  project.  This  in-
              cludes  all  experiments that have been created and not deleted,
              whether they are ongoing or not.

          featureCount -> (long)
              The number of features currently in the project.

          lastUpdatedTime -> (timestamp)
              The date and time that the project was most recently updated.

          launchCount -> (long)
              The number of launches currently in the project.  This  includes
              all  launches  that  have  been created and not deleted, whether
              they are ongoing or not.

          name -> (string)
              The name of the project.

          status -> (string)
              The current state of the project.

          tags -> (map)
              The list of tag keys and values associated with this project.

              key -> (string)

              value -> (string)



                                                              CREATE-PROJECT()
