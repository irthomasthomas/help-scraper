GET-ID-MAPPING-WORKFLOW()                            GET-ID-MAPPING-WORKFLOW()



NAME
       get-id-mapping-workflow -

DESCRIPTION
       Returns the IdMappingWorkflow with a given name, if it exists.

       See also: AWS API Documentation

       get-id-mapping-workflow  uses document type values. Document types fol-
       low the JSON data model where valid values are: strings, numbers, bool-
       eans,  null, arrays, and objects. For command input, options and nested
       parameters that are labeled with the type document must be provided  as
       JSON. Shorthand syntax does not support document types.

SYNOPSIS
            get-id-mapping-workflow
          --workflow-name <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --workflow-name (string)
          The name of the workflow.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       createdAt -> (timestamp)
          The timestamp of when the workflow was created.

       description -> (string)
          A description of the workflow.

       idMappingTechniques -> (structure)
          An  object which defines the ID mapping technique and any additional
          configurations.

          idMappingType -> (string)
              The type of ID mapping.

          providerProperties -> (structure)
              An object which defines any additional  configurations  required
              by the provider service.

              intermediateSourceConfiguration -> (structure)
                 The  Amazon  S3  location  that  temporarily stores your data
                 while it processes. Your information won't  be  saved  perma-
                 nently.

                 intermediateS3Path -> (string)
                     The  Amazon S3 location (bucket and prefix). For example:
                     s3://provider_bucket/DOC-EXAMPLE-BUCKET

              providerConfiguration -> (document)
                 The required configuration fields to use  with  the  provider
                 service.

              providerServiceArn -> (string)
                 The ARN of the provider service.

          ruleBasedProperties -> (structure)
              An  object  which defines any additional configurations required
              by rule-based matching.

              attributeMatchingModel -> (string)
                 The comparison type. You  can  either  choose  ONE_TO_ONE  or
                 MANY_TO_MANY as the attributeMatchingModel .

                 If  you choose MANY_TO_MANY , the system can match attributes
                 across the sub-types of an attribute type.  For  example,  if
                 the  value  of the Email field of Profile A matches the value
                 of the BusinessEmail field of Profile B, the two profiles are
                 matched on the Email attribute type.

                 If  you  choose  ONE_TO_ONE  ,  the system can only match at-
                 tributes if the sub-types are an exact  match.  For  example,
                 for  the  Email attribute type, the system will only consider
                 it a match if the value of  the  Email  field  of  Profile  A
                 matches the value of the Email field of Profile B.

              recordMatchingModel -> (string)
                 The  type of matching record that is allowed to be used in an
                 ID mapping workflow.

                 If the value is set to ONE_SOURCE_TO_ONE_TARGET  ,  only  one
                 record in the source can be matched to the same record in the
                 target.

                 If the value is set to MANY_SOURCE_TO_ONE_TARGET  ,  multiple
                 records  in  the  source  can be matched to one record in the
                 target.

              ruleDefinitionType -> (string)
                 The set of rules you can use in an ID mapping  workflow.  The
                 limitations  specified for the source or target to define the
                 match rules must be compatible.

              rules -> (list)
                 The rules that can be used for ID mapping.

                 (structure)
                     An object containing RuleName , and MatchingKeys .

                     matchingKeys -> (list)
                        A list of MatchingKeys . The  MatchingKeys  must  have
                        been  defined  in  the SchemaMapping . Two records are
                        considered to match according to this rule if  all  of
                        the MatchingKeys match.

                        (string)

                     ruleName -> (string)
                        A name for the matching rule.

       inputSourceConfig -> (list)
          A  list of InputSource objects, which have the fields InputSourceARN
          and SchemaName .

          (structure)
              An object containing InputSourceARN , SchemaName , and Type .

              inputSourceARN -> (string)
                 An Glue table Amazon Resource Name (ARN) or a matching  work-
                 flow ARN for the input source table.

              schemaName -> (string)
                 The name of the schema to be retrieved.

              type -> (string)
                 The  type  of  ID  namespace. There are two types: SOURCE and
                 TARGET .

                 The SOURCE contains configurations  for  sourceId  data  that
                 will be processed in an ID mapping workflow.

                 The  TARGET  contains  a  configuration of targetId which all
                 sourceIds will resolve to.

       outputSourceConfig -> (list)
          A list of OutputSource objects, each of which contains  fields  Out-
          putS3Path and KMSArn .

          (structure)
              The output source for the ID mapping workflow.

              KMSArn -> (string)
                 Customer  KMS  ARN  for  encryption at rest. If not provided,
                 system will use an Entity Resolution managed KMS key.

              outputS3Path -> (string)
                 The S3 path to which Entity Resolution will write the  output
                 table.

       roleArn -> (string)
          The  Amazon  Resource  Name (ARN) of the IAM role. Entity Resolution
          assumes this role to access Amazon Web Services  resources  on  your
          behalf.

       tags -> (map)
          The  tags  used  to  organize, track, or control access for this re-
          source.

          key -> (string)

          value -> (string)

       updatedAt -> (timestamp)
          The timestamp of when the workflow was last updated.

       workflowArn -> (string)
          The ARN (Amazon Resource Name) that Entity Resolution generated  for
          the IdMappingWorkflow .

       workflowName -> (string)
          The name of the workflow.



                                                     GET-ID-MAPPING-WORKFLOW()
