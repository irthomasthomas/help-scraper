UPDATE-MATCHING-WORKFLOW()                          UPDATE-MATCHING-WORKFLOW()



NAME
       update-matching-workflow -

DESCRIPTION
       Updates an existing MatchingWorkflow . This method is identical to Cre-
       ateMatchingWorkflow , except it uses an HTTP PUT request instead  of  a
       POST  request,  and  the  MatchingWorkflow  must  already exist for the
       method to succeed.

       See also: AWS API Documentation

       update-matching-workflow uses document type values. Document types fol-
       low the JSON data model where valid values are: strings, numbers, bool-
       eans, null, arrays, and objects. For command input, options and  nested
       parameters  that are labeled with the type document must be provided as
       JSON. Shorthand syntax does not support document types.

SYNOPSIS
            update-matching-workflow
          [--description <value>]
          [--incremental-run-config <value>]
          --input-source-config <value>
          --output-source-config <value>
          --resolution-techniques <value>
          --role-arn <value>
          --workflow-name <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --description (string)
          A description of the workflow.

       --incremental-run-config (structure)
          An object which defines an incremental run type and has only  incre-
          mentalRunType as a field.

          incrementalRunType -> (string)
              The  type of incremental run. It takes only one value: IMMEDIATE
              .

       Shorthand Syntax:

          incrementalRunType=string

       JSON Syntax:

          {
            "incrementalRunType": "IMMEDIATE"
          }

       --input-source-config (list)
          A list of InputSource objects, which have the fields  InputSourceARN
          and SchemaName .

          (structure)
              An object containing InputSourceARN , SchemaName , and ApplyNor-
              malization .

              applyNormalization -> (boolean)
                 Normalizes the attributes defined in the schema in the  input
                 data.  For  example,  if an attribute has an AttributeType of
                 PHONE_NUMBER , and the data in the input table is in a format
                 of 1234567890, Entity Resolution will normalize this field in
                 the output to (123)-456-7890.

              inputSourceARN -> (string)
                 An Glue table Amazon Resource Name (ARN) for the input source
                 table.

              schemaName -> (string)
                 The name of the schema to be retrieved.

       Shorthand Syntax:

          applyNormalization=boolean,inputSourceARN=string,schemaName=string ...

       JSON Syntax:

          [
            {
              "applyNormalization": true|false,
              "inputSourceARN": "string",
              "schemaName": "string"
            }
            ...
          ]

       --output-source-config (list)
          A  list  of OutputSource objects, each of which contains fields Out-
          putS3Path , ApplyNormalization , and Output .

          (structure)
              A list of OutputAttribute objects, each of which have the fields
              Name  and  Hashed . Each of these objects selects a column to be
              included in the output table, and whether the values of the col-
              umn should be hashed.

              KMSArn -> (string)
                 Customer  KMS  ARN  for  encryption at rest. If not provided,
                 system will use an Entity Resolution managed KMS key.

              applyNormalization -> (boolean)
                 Normalizes the attributes defined in the schema in the  input
                 data.  For  example,  if an attribute has an AttributeType of
                 PHONE_NUMBER , and the data in the input table is in a format
                 of 1234567890, Entity Resolution will normalize this field in
                 the output to (123)-456-7890.

              output -> (list)
                 A list of OutputAttribute objects, each  of  which  have  the
                 fields Name and Hashed . Each of these objects selects a col-
                 umn to be included in the output table, and whether the  val-
                 ues of the column should be hashed.

                 (structure)
                     A list of OutputAttribute objects, each of which have the
                     fields Name and Hashed . Each of these objects selects  a
                     column  to  be  included in the output table, and whether
                     the values of the column should be hashed.

                     hashed -> (boolean)
                        Enables the ability to hash the column values  in  the
                        output.

                     name -> (string)
                        A  name  of a column to be written to the output. This
                        must be an InputField name in the schema mapping.

              outputS3Path -> (string)
                 The S3 path to which Entity Resolution will write the  output
                 table.

       Shorthand Syntax:

          KMSArn=string,applyNormalization=boolean,output=[{hashed=boolean,name=string},{hashed=boolean,name=string}],outputS3Path=string ...

       JSON Syntax:

          [
            {
              "KMSArn": "string",
              "applyNormalization": true|false,
              "output": [
                {
                  "hashed": true|false,
                  "name": "string"
                }
                ...
              ],
              "outputS3Path": "string"
            }
            ...
          ]

       --resolution-techniques (structure)
          An  object which defines the resolutionType and the ruleBasedProper-
          ties .

          providerProperties -> (structure)
              The properties of the provider service.

              intermediateSourceConfiguration -> (structure)
                 The Amazon S3 location  that  temporarily  stores  your  data
                 while  it  processes.  Your information won't be saved perma-
                 nently.

                 intermediateS3Path -> (string)
                     The Amazon S3 location (bucket and prefix). For  example:
                     s3://provider_bucket/DOC-EXAMPLE-BUCKET

              providerConfiguration -> (document)
                 The  required  configuration  fields to use with the provider
                 service.

              providerServiceArn -> (string)
                 The ARN of the provider service.

          resolutionType -> (string)
              The type  of  matching.  There  are  three  types  of  matching:
              RULE_MATCHING , ML_MATCHING , and PROVIDER .

          ruleBasedProperties -> (structure)
              An  object  which  defines the list of matching rules to run and
              has a field Rules , which is a list of rule objects.

              attributeMatchingModel -> (string)
                 The comparison type. You  can  either  choose  ONE_TO_ONE  or
                 MANY_TO_MANY as the attributeMatchingModel .

                 If  you choose MANY_TO_MANY , the system can match attributes
                 across the sub-types of an attribute type.  For  example,  if
                 the  value  of  the Email field of Profile A and the value of
                 BusinessEmail field of Profile B matches,  the  two  profiles
                 are matched on the Email attribute type.

                 If  you  choose  ONE_TO_ONE  ,  the system can only match at-
                 tributes if the sub-types are an exact  match.  For  example,
                 for  the  Email attribute type, the system will only consider
                 it a match if the value of  the  Email  field  of  Profile  A
                 matches the value of the Email field of Profile B.

              matchPurpose -> (string)
                 An indicator of whether to generate IDs and index the data or
                 not.

                 If you choose IDENTIFIER_GENERATION , the  process  generates
                 IDs and indexes the data.

                 If you choose INDEXING , the process indexes the data without
                 generating IDs.

              rules -> (list)
                 A list of Rule objects, each of which  have  fields  RuleName
                 and MatchingKeys .

                 (structure)
                     An object containing RuleName , and MatchingKeys .

                     matchingKeys -> (list)
                        A  list  of  MatchingKeys . The MatchingKeys must have
                        been defined in the SchemaMapping .  Two  records  are
                        considered  to  match according to this rule if all of
                        the MatchingKeys match.

                        (string)

                     ruleName -> (string)
                        A name for the matching rule.

       JSON Syntax:

          {
            "providerProperties": {
              "intermediateSourceConfiguration": {
                "intermediateS3Path": "string"
              },
              "providerConfiguration": {...},
              "providerServiceArn": "string"
            },
            "resolutionType": "RULE_MATCHING"|"ML_MATCHING"|"PROVIDER",
            "ruleBasedProperties": {
              "attributeMatchingModel": "ONE_TO_ONE"|"MANY_TO_MANY",
              "matchPurpose": "IDENTIFIER_GENERATION"|"INDEXING",
              "rules": [
                {
                  "matchingKeys": ["string", ...],
                  "ruleName": "string"
                }
                ...
              ]
            }
          }

       --role-arn (string)
          The Amazon Resource Name (ARN) of the IAM  role.  Entity  Resolution
          assumes  this  role  to  create  resources on your behalf as part of
          workflow execution.

       --workflow-name (string)
          The name of the workflow to be retrieved.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       description -> (string)
          A description of the workflow.

       incrementalRunConfig -> (structure)
          An  object which defines an incremental run type and has only incre-
          mentalRunType as a field.

          incrementalRunType -> (string)
              The type of incremental run. It takes only one value:  IMMEDIATE
              .

       inputSourceConfig -> (list)
          A  list of InputSource objects, which have the fields InputSourceARN
          and SchemaName .

          (structure)
              An object containing InputSourceARN , SchemaName , and ApplyNor-
              malization .

              applyNormalization -> (boolean)
                 Normalizes  the attributes defined in the schema in the input
                 data. For example, if an attribute has  an  AttributeType  of
                 PHONE_NUMBER , and the data in the input table is in a format
                 of 1234567890, Entity Resolution will normalize this field in
                 the output to (123)-456-7890.

              inputSourceARN -> (string)
                 An Glue table Amazon Resource Name (ARN) for the input source
                 table.

              schemaName -> (string)
                 The name of the schema to be retrieved.

       outputSourceConfig -> (list)
          A list of OutputSource objects, each of which contains  fields  Out-
          putS3Path , ApplyNormalization , and Output .

          (structure)
              A list of OutputAttribute objects, each of which have the fields
              Name and Hashed . Each of these objects selects a column  to  be
              included in the output table, and whether the values of the col-
              umn should be hashed.

              KMSArn -> (string)
                 Customer KMS ARN for encryption at  rest.  If  not  provided,
                 system will use an Entity Resolution managed KMS key.

              applyNormalization -> (boolean)
                 Normalizes  the attributes defined in the schema in the input
                 data. For example, if an attribute has  an  AttributeType  of
                 PHONE_NUMBER , and the data in the input table is in a format
                 of 1234567890, Entity Resolution will normalize this field in
                 the output to (123)-456-7890.

              output -> (list)
                 A  list  of  OutputAttribute  objects, each of which have the
                 fields Name and Hashed . Each of these objects selects a col-
                 umn  to be included in the output table, and whether the val-
                 ues of the column should be hashed.

                 (structure)
                     A list of OutputAttribute objects, each of which have the
                     fields  Name and Hashed . Each of these objects selects a
                     column to be included in the output  table,  and  whether
                     the values of the column should be hashed.

                     hashed -> (boolean)
                        Enables  the  ability to hash the column values in the
                        output.

                     name -> (string)
                        A name of a column to be written to the  output.  This
                        must be an InputField name in the schema mapping.

              outputS3Path -> (string)
                 The  S3 path to which Entity Resolution will write the output
                 table.

       resolutionTechniques -> (structure)
          An object which defines the resolutionType and the  ruleBasedProper-
          ties

          providerProperties -> (structure)
              The properties of the provider service.

              intermediateSourceConfiguration -> (structure)
                 The  Amazon  S3  location  that  temporarily stores your data
                 while it processes. Your information won't  be  saved  perma-
                 nently.

                 intermediateS3Path -> (string)
                     The  Amazon S3 location (bucket and prefix). For example:
                     s3://provider_bucket/DOC-EXAMPLE-BUCKET

              providerConfiguration -> (document)
                 The required configuration fields to use  with  the  provider
                 service.

              providerServiceArn -> (string)
                 The ARN of the provider service.

          resolutionType -> (string)
              The  type  of  matching.  There  are  three  types  of matching:
              RULE_MATCHING , ML_MATCHING , and PROVIDER .

          ruleBasedProperties -> (structure)
              An object which defines the list of matching rules  to  run  and
              has a field Rules , which is a list of rule objects.

              attributeMatchingModel -> (string)
                 The  comparison  type.  You  can  either choose ONE_TO_ONE or
                 MANY_TO_MANY as the attributeMatchingModel .

                 If you choose MANY_TO_MANY , the system can match  attributes
                 across  the  sub-types  of an attribute type. For example, if
                 the value of the Email field of Profile A and  the  value  of
                 BusinessEmail  field  of  Profile B matches, the two profiles
                 are matched on the Email attribute type.

                 If you choose ONE_TO_ONE , the  system  can  only  match  at-
                 tributes  if  the  sub-types are an exact match. For example,
                 for the Email attribute type, the system will  only  consider
                 it  a  match  if  the  value  of the Email field of Profile A
                 matches the value of the Email field of Profile B.

              matchPurpose -> (string)
                 An indicator of whether to generate IDs and index the data or
                 not.

                 If  you  choose IDENTIFIER_GENERATION , the process generates
                 IDs and indexes the data.

                 If you choose INDEXING , the process indexes the data without
                 generating IDs.

              rules -> (list)
                 A  list  of  Rule objects, each of which have fields RuleName
                 and MatchingKeys .

                 (structure)
                     An object containing RuleName , and MatchingKeys .

                     matchingKeys -> (list)
                        A list of MatchingKeys . The  MatchingKeys  must  have
                        been  defined  in  the SchemaMapping . Two records are
                        considered to match according to this rule if  all  of
                        the MatchingKeys match.

                        (string)

                     ruleName -> (string)
                        A name for the matching rule.

       roleArn -> (string)
          The  Amazon  Resource  Name (ARN) of the IAM role. Entity Resolution
          assumes this role to create resources on  your  behalf  as  part  of
          workflow execution.

       workflowName -> (string)
          The name of the workflow.



                                                    UPDATE-MATCHING-WORKFLOW()
