GET-MATCHING-WORKFLOW()                                GET-MATCHING-WORKFLOW()



NAME
       get-matching-workflow -

DESCRIPTION
       Returns the MatchingWorkflow with a given name, if it exists.

       See also: AWS API Documentation

       get-matching-workflow  uses document type values. Document types follow
       the JSON data model where valid values are: strings, numbers, booleans,
       null, arrays, and objects. For command input, options and nested param-
       eters that are labeled with the type document must be provided as JSON.
       Shorthand syntax does not support document types.

SYNOPSIS
            get-matching-workflow
          --workflow-name <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --workflow-name (string)
          The name of the workflow.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       createdAt -> (timestamp)
          The timestamp of when the workflow was created.

       description -> (string)
          A description of the workflow.

       incrementalRunConfig -> (structure)
          An object which defines an incremental run type and has only  incre-
          mentalRunType as a field.

          incrementalRunType -> (string)
              The  type of incremental run. It takes only one value: IMMEDIATE
              .

       inputSourceConfig -> (list)
          A list of InputSource objects, which have the fields  InputSourceARN
          and SchemaName .

          (structure)
              An object containing InputSourceARN , SchemaName , and ApplyNor-
              malization .

              applyNormalization -> (boolean)
                 Normalizes the attributes defined in the schema in the  input
                 data.  For  example,  if an attribute has an AttributeType of
                 PHONE_NUMBER , and the data in the input table is in a format
                 of 1234567890, Entity Resolution will normalize this field in
                 the output to (123)-456-7890.

              inputSourceARN -> (string)
                 An Glue table ARN for the input source table.

              schemaName -> (string)
                 The name of the schema to be retrieved.

       outputSourceConfig -> (list)
          A list of OutputSource objects, each of which contains  fields  Out-
          putS3Path , ApplyNormalization , and Output .

          (structure)
              A list of OutputAttribute objects, each of which have the fields
              Name and Hashed . Each of these objects selects a column  to  be
              included in the output table, and whether the values of the col-
              umn should be hashed.

              KMSArn -> (string)
                 Customer KMS ARN for encryption at  rest.  If  not  provided,
                 system will use an Entity Resolution managed KMS key.

              applyNormalization -> (boolean)
                 Normalizes  the attributes defined in the schema in the input
                 data. For example, if an attribute has  an  AttributeType  of
                 PHONE_NUMBER , and the data in the input table is in a format
                 of 1234567890, Entity Resolution will normalize this field in
                 the output to (123)-456-7890.

              output -> (list)
                 A  list  of  OutputAttribute  objects, each of which have the
                 fields Name and Hashed . Each of these objects selects a col-
                 umn  to be included in the output table, and whether the val-
                 ues of the column should be hashed.

                 (structure)
                     A list of OutputAttribute objects, each of which have the
                     fields  Name and Hashed . Each of these objects selects a
                     column to be included in the output  table,  and  whether
                     the values of the column should be hashed.

                     hashed -> (boolean)
                        Enables  the  ability to hash the column values in the
                        output.

                     name -> (string)
                        A name of a column to be written to the  output.  This
                        must be an InputField name in the schema mapping.

              outputS3Path -> (string)
                 The  S3 path to which Entity Resolution will write the output
                 table.

       resolutionTechniques -> (structure)
          An object which defines the resolutionType and the  ruleBasedProper-
          ties .

          providerProperties -> (structure)
              The properties of the provider service.

              intermediateSourceConfiguration -> (structure)
                 The  Amazon  S3  location  that  temporarily stores your data
                 while it processes. Your information won't  be  saved  perma-
                 nently.

                 intermediateS3Path -> (string)
                     The  Amazon S3 location (bucket and prefix). For example:
                     s3://provider_bucket/DOC-EXAMPLE-BUCKET

              providerConfiguration -> (document)
                 The required configuration fields to use  with  the  provider
                 service.

              providerServiceArn -> (string)
                 The ARN of the provider service.

          resolutionType -> (string)
              The  type  of  matching.  There  are  three  types  of matching:
              RULE_MATCHING , ML_MATCHING , and PROVIDER .

          ruleBasedProperties -> (structure)
              An object which defines the list of matching rules  to  run  and
              has a field Rules , which is a list of rule objects.

              attributeMatchingModel -> (string)
                 The  comparison  type.  You  can  either choose ONE_TO_ONE or
                 MANY_TO_MANY as  the  AttributeMatchingModel.  When  choosing
                 MANY_TO_MANY  ,  the  system  can match attributes across the
                 sub-types of an attribute type. For example, if the value  of
                 the  Email  field of Profile A and the value of BusinessEmail
                 field of Profile B matches, the two profiles are  matched  on
                 the Email type. When choosing ONE_TO_ONE ,the system can only
                 match if the sub-types are exact matches. For  example,  only
                 when  the value of the Email field of Profile A and the value
                 of the Email field of Profile B matches, the two profiles are
                 matched on the Email type.

              rules -> (list)
                 A  list  of  Rule objects, each of which have fields RuleName
                 and MatchingKeys .

                 (structure)
                     An object containing RuleName , and MatchingKeys .

                     matchingKeys -> (list)
                        A list of MatchingKeys . The  MatchingKeys  must  have
                        been  defined  in  the SchemaMapping . Two records are
                        considered to match according to this rule if  all  of
                        the MatchingKeys match.

                        (string)

                     ruleName -> (string)
                        A name for the matching rule.

       roleArn -> (string)
          The  Amazon  Resource  Name (ARN) of the IAM role. Entity Resolution
          assumes this role to access Amazon Web Services  resources  on  your
          behalf.

       tags -> (map)
          The  tags  used  to  organize, track, or control access for this re-
          source.

          key -> (string)

          value -> (string)

       updatedAt -> (timestamp)
          The timestamp of when the workflow was last updated.

       workflowArn -> (string)
          The ARN (Amazon Resource Name) that Entity Resolution generated  for
          the MatchingWorkflow .

       workflowName -> (string)
          The name of the workflow.



                                                       GET-MATCHING-WORKFLOW()
