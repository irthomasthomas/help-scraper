CREATE-DB-SUBNET-GROUP()                              CREATE-DB-SUBNET-GROUP()



NAME
       create-db-subnet-group -

DESCRIPTION
       Creates  a  new DB subnet group. DB subnet groups must contain at least
       one subnet in at least two AZs in the Amazon Web Services Region.

       See also: AWS API Documentation

SYNOPSIS
            create-db-subnet-group
          --db-subnet-group-name <value>
          --db-subnet-group-description <value>
          --subnet-ids <value>
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --db-subnet-group-name (string)
          The name for the DB subnet group. This value is stored as  a  lower-
          case string.

          Constraints:

          o Must  contain  no  more than 255 letters, numbers, periods, under-
            scores, spaces, or hyphens.

          o Must not be default.

          o First character must be a letter.

          Example: mydbsubnetgroup

       --db-subnet-group-description (string)
          The description for the DB subnet group.

       --subnet-ids (list)
          The EC2 Subnet IDs for the DB subnet group.

          (string)

       Syntax:

          "string" "string" ...

       --tags (list)
          Tags to assign to the DB subnet group.

          (structure)
              Metadata assigned to an Amazon  RDS  resource  consisting  of  a
              key-value pair.

              For  more  information,  see Tagging Amazon RDS Resources in the
              Amazon RDS User Guide.

              Key -> (string)
                 A key is the required name of the tag. The string  value  can
                 be  from  1  to 128 Unicode characters in length and can't be
                 prefixed with aws: or rds: . The string can only contain only
                 the  set  of  Unicode letters, digits, white-space, '_', '.',
                 ':',   '/',    '=',    '+',    '-',    '@'    (Java    regex:
                 "^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$").

              Value -> (string)
                 A  value  is  the optional value of the tag. The string value
                 can be from 1 to 256 Unicode characters in length  and  can't
                 be  prefixed  with aws: or rds: . The string can only contain
                 only the set of Unicode letters,  digits,  white-space,  '_',
                 '.',   ':',   '/',   '=',   '+',   '-',   '@'   (Java  regex:
                 "^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$").

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a DB subnet group

       The following create-db-subnet-group example creates a DB subnet  group
       called mysubnetgroup using existing subnets.

          aws rds create-db-subnet-group \
              --db-subnet-group-name mysubnetgroup \
              --db-subnet-group-description "test DB subnet group" \
              --subnet-ids '["subnet-0a1dc4e1a6f123456","subnet-070dd7ecb3aaaaaaa","subnet-00f5b198bc0abcdef"]'

       Output:

          {
              "DBSubnetGroup": {
                  "DBSubnetGroupName": "mysubnetgroup",
                  "DBSubnetGroupDescription": "test DB subnet group",
                  "VpcId": "vpc-0f08e7610a1b2c3d4",
                  "SubnetGroupStatus": "Complete",
                  "Subnets": [
                      {
                          "SubnetIdentifier": "subnet-070dd7ecb3aaaaaaa",
                          "SubnetAvailabilityZone": {
                              "Name": "us-west-2b"
                          },
                          "SubnetStatus": "Active"
                      },
                      {
                          "SubnetIdentifier": "subnet-00f5b198bc0abcdef",
                          "SubnetAvailabilityZone": {
                              "Name": "us-west-2d"
                          },
                          "SubnetStatus": "Active"
                      },
                      {
                          "SubnetIdentifier": "subnet-0a1dc4e1a6f123456",
                          "SubnetAvailabilityZone": {
                              "Name": "us-west-2b"
                          },
                          "SubnetStatus": "Active"
                      }
                  ],
                  "DBSubnetGroupArn": "arn:aws:rds:us-west-2:0123456789012:subgrp:mysubnetgroup"
              }
          }

       For more information, see Creating a DB Instance in a VPC in the Amazon
       RDS User Guide.

OUTPUT
       DBSubnetGroup -> (structure)
          Contains the details of an Amazon RDS DB subnet group.

          This data type is used as a response element in  the  DescribeDBSub-
          netGroups action.

          DBSubnetGroupName -> (string)
              The name of the DB subnet group.

          DBSubnetGroupDescription -> (string)
              Provides the description of the DB subnet group.

          VpcId -> (string)
              Provides the VpcId of the DB subnet group.

          SubnetGroupStatus -> (string)
              Provides the status of the DB subnet group.

          Subnets -> (list)
              Contains a list of Subnet elements.

              (structure)
                 This  data  type  is  used  as a response element for the De-
                 scribeDBSubnetGroups operation.

                 SubnetIdentifier -> (string)
                     The identifier of the subnet.

                 SubnetAvailabilityZone -> (structure)
                     Contains Availability Zone information.

                     This data type is used as an element in  the  OrderableD-
                     BInstanceOption data type.

                     Name -> (string)
                        The name of the Availability Zone.

                 SubnetOutpost -> (structure)
                     If  the  subnet is associated with an Outpost, this value
                     specifies the Outpost.

                     For more information about RDS on  Outposts,  see  Amazon
                     RDS  on  Amazon  Web  Services Outposts in the Amazon RDS
                     User Guide.

                     Arn -> (string)
                        The Amazon Resource Name (ARN) of the Outpost.

                 SubnetStatus -> (string)
                     The status of the subnet.

          DBSubnetGroupArn -> (string)
              The Amazon Resource Name (ARN) for the DB subnet group.

          SupportedNetworkTypes -> (list)
              The network type of the DB subnet group.

              Valid values:

              o IPV4

              o DUAL

              A DBSubnetGroup can support only the IPv4 protocol or  the  IPv4
              and the IPv6 protocols (DUAL ).

              For more information, see Working with a DB instance in a VPC in
              the Amazon RDS User Guide.

              (string)



                                                      CREATE-DB-SUBNET-GROUP()
