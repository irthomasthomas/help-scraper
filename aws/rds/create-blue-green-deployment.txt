CREATE-BLUE-GREEN-DEPLOYMENT()                  CREATE-BLUE-GREEN-DEPLOYMENT()



NAME
       create-blue-green-deployment -

DESCRIPTION
       Creates a blue/green deployment.

       A  blue/green  deployment creates a staging environment that copies the
       production environment. In a blue/green deployment, the  blue  environ-
       ment  is  the  current production environment. The green environment is
       the staging environment. The staging environment stays in sync with the
       current production environment using logical replication.

       You  can make changes to the databases in the green environment without
       affecting production workloads. For example, you can upgrade the  major
       or  minor DB engine version, change database parameters, or make schema
       changes in the staging environment. You can thoroughly test changes  in
       the green environment. When ready, you can switch over the environments
       to promote the green environment to be the new production  environment.
       The switchover typically takes under a minute.

       For  more  information, see Using Amazon RDS Blue/Green Deployments for
       database updates in the Amazon RDS User  Guide  and  Using  Amazon  RDS
       Blue/Green  Deployments  for database updates in the Amazon Aurora User
       Guide .

       See also: AWS API Documentation

SYNOPSIS
            create-blue-green-deployment
          --blue-green-deployment-name <value>
          --source <value>
          [--target-engine-version <value>]
          [--target-db-parameter-group-name <value>]
          [--target-db-cluster-parameter-group-name <value>]
          [--tags <value>]
          [--target-db-instance-class <value>]
          [--upgrade-target-storage-config | --no-upgrade-target-storage-config]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --blue-green-deployment-name (string)
          The name of the blue/green deployment.

          Constraints:

          o Can't be the same as an existing blue/green deployment name in the
            same account and Amazon Web Services Region.

       --source (string)
          The Amazon Resource Name (ARN) of the source production database.

          Specify  the database that you want to clone. The blue/green deploy-
          ment creates this database in the green environment.  You  can  make
          updates  to the database in the green environment, such as an engine
          version upgrade. When you are ready, you can switch the database  in
          the green environment to be the production database.

       --target-engine-version (string)
          The engine version of the database in the green environment.

          Specify the engine version to upgrade to in the green environment.

       --target-db-parameter-group-name (string)
          The  DB parameter group associated with the DB instance in the green
          environment.

          To test parameter changes, specify a DB parameter group that is dif-
          ferent from the one associated with the source DB instance.

       --target-db-cluster-parameter-group-name (string)
          The DB cluster parameter group associated with the Aurora DB cluster
          in the green environment.

          To test parameter changes, specify a DB cluster parameter group that
          is different from the one associated with the source DB cluster.

       --tags (list)
          Tags to assign to the blue/green deployment.

          (structure)
              Metadata  assigned  to  an  Amazon  RDS resource consisting of a
              key-value pair.

              For more information, see Tagging Amazon RDS  resources  in  the
              Amazon  RDS  User  Guide or Tagging Amazon Aurora and Amazon RDS
              resources in the Amazon Aurora User Guide .

              Key -> (string)
                 A key is the required name of the tag. The string  value  can
                 be  from  1  to 128 Unicode characters in length and can't be
                 prefixed with aws: or rds: . The string can only contain only
                 the  set  of  Unicode letters, digits, white-space, '_', '.',
                 ':',   '/',    '=',    '+',    '-',    '@'    (Java    regex:
                 "^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$").

              Value -> (string)
                 A  value  is  the optional value of the tag. The string value
                 can be from 1 to 256 Unicode characters in length  and  can't
                 be  prefixed  with aws: or rds: . The string can only contain
                 only the set of Unicode letters,  digits,  white-space,  '_',
                 '.',   ':',   '/',   '=',   '+',   '-',   '@'   (Java  regex:
                 "^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$").

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --target-db-instance-class (string)
          Specify the DB instance class for the databases in the  green  envi-
          ronment.

          This  parameter  only  applies  to  RDS DB instances, because DB in-
          stances within an Aurora DB cluster can have multiple different  in-
          stance  classes.  If you're creating a blue/green deployment from an
          Aurora DB cluster, don't specify this parameter. After the green en-
          vironment  is  created,  you  can  individually  modify the instance
          classes of the DB instances within the green DB cluster.

       --upgrade-target-storage-config  |   --no-upgrade-target-storage-config
       (boolean)
          Whether  to  upgrade  the  storage  file system configuration on the
          green database. This option migrates the green DB instance from  the
          older  32-bit  file  system to the preferred configuration. For more
          information, see Upgrading the storage file system for a DB instance
          .

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       Example 1: To create a blue/green deployment for an RDS  for  MySQL  DB
       instance

       The following create-blue-green-deployment example creates a blue/green
       deployment for a MySQL DB instance.

          aws rds create-blue-green-deployment \
              --blue-green-deployment-name bgd-cli-test-instance \
              --source arn:aws:rds:us-east-1:123456789012:db:my-db-instance \
              --target-engine-version 8.0 \
              --target-db-parameter-group-name mysql-80-group

       Output:

          {
              "BlueGreenDeployment": {
                  "BlueGreenDeploymentIdentifier": "bgd-v53303651eexfake",
                  "BlueGreenDeploymentName": "bgd-cli-test-instance",
                  "Source": "arn:aws:rds:us-east-1:123456789012:db:my-db-instance",
                  "SwitchoverDetails": [
                      {
                          "SourceMember": "arn:aws:rds:us-east-1:123456789012:db:my-db-instance"
                      },
                      {
                          "SourceMember": "arn:aws:rds:us-east-1:123456789012:db:my-db-instance-replica-1"
                      },
                      {
                          "SourceMember": "arn:aws:rds:us-east-1:123456789012:db:my-db-instance-replica-2"
                      },
                      {
                          "SourceMember": "arn:aws:rds:us-east-1:123456789012:db:my-db-instance-replica-3"
                      }
                  ],
                  "Tasks": [
                      {
                          "Name": "CREATING_READ_REPLICA_OF_SOURCE",
                          "Status": "PENDING"
                      },
                      {
                          "Name": "DB_ENGINE_VERSION_UPGRADE",
                          "Status": "PENDING"
                      },
                      {
                          "Name": "CONFIGURE_BACKUPS",
                          "Status": "PENDING"
                      },
                      {
                          "Name": "CREATING_TOPOLOGY_OF_SOURCE",
                          "Status": "PENDING"
                      }
                  ],
                  "Status": "PROVISIONING",
                  "CreateTime": "2022-02-25T21:18:51.183000+00:00"
              }
          }

       For more information, see Creating a blue/green deployment in the  Ama-
       zon RDS User Guide.

       Example  2:  To  create  a blue/green deployment for an Aurora MySQL DB
       cluster

       The following create-blue-green-deployment example creates a blue/green
       deployment for an Aurora MySQL DB cluster.

          aws rds create-blue-green-deployment \
              --blue-green-deployment-name my-blue-green-deployment \
              --source arn:aws:rds:us-east-1:123456789012:cluster:my-aurora-mysql-cluster \
              --target-engine-version 8.0 \
              --target-db-cluster-parameter-group-name ams-80-binlog-enabled \
              --target-db-parameter-group-name mysql-80-cluster-group

       Output:

          {
                "BlueGreenDeployment": {
                  "BlueGreenDeploymentIdentifier": "bgd-wi89nwzglccsfake",
                  "BlueGreenDeploymentName": "my-blue-green-deployment",
                  "Source": "arn:aws:rds:us-east-1:123456789012:cluster:my-aurora-mysql-cluster",
                  "SwitchoverDetails": [
                    {
                      "SourceMember": "arn:aws:rds:us-east-1:123456789012:cluster:my-aurora-mysql-cluster",
                      "Status": "PROVISIONING"
                    },
                    {
                      "SourceMember": "arn:aws:rds:us-east-1:123456789012:db:my-aurora-mysql-cluster-1",
                      "Status": "PROVISIONING"
                    },
                    {
                      "SourceMember": "arn:aws:rds:us-east-1:123456789012:db:my-aurora-mysql-cluster-2",
                      "Status": "PROVISIONING"
                    },
                    {
                      "SourceMember": "arn:aws:rds:us-east-1:123456789012:db:my-aurora-mysql-cluster-3",
                      "Status": "PROVISIONING"
                    },
                    {
                      "SourceMember": "arn:aws:rds:us-east-1:123456789012:cluster-endpoint:my-excluded-member-endpoint",
                      "Status": "PROVISIONING"
                    },
                    {
                      "SourceMember": "arn:aws:rds:us-east-1:123456789012:cluster-endpoint:my-reader-endpoint",
                      "Status": "PROVISIONING"
                    }
                  ],
                  "Tasks": [
                    {
                      "Name": "CREATING_READ_REPLICA_OF_SOURCE",
                      "Status": "PENDING"
                    },
                    {
                      "Name": "DB_ENGINE_VERSION_UPGRADE",
                      "Status": "PENDING"
                    },
                    {
                      "Name": "CREATE_DB_INSTANCES_FOR_CLUSTER",
                      "Status": "PENDING"
                    },
                    {
                      "Name": "CREATE_CUSTOM_ENDPOINTS",
                      "Status": "PENDING"
                    }
                  ],
                  "Status": "PROVISIONING",
                  "CreateTime": "2022-02-25T21:12:00.288000+00:00"
                }
          }

       For  more information, see Creating a blue/green deployment in the Ama-
       zon Aurora User Guide.

OUTPUT
       BlueGreenDeployment -> (structure)
          Details about a blue/green deployment.

          For more information, see Using Amazon  RDS  Blue/Green  Deployments
          for  database  updates in the Amazon RDS User Guide and Using Amazon
          RDS Blue/Green Deployments for database updates in the Amazon Aurora
          User Guide .

          BlueGreenDeploymentIdentifier -> (string)
              The unique identifier of the blue/green deployment.

          BlueGreenDeploymentName -> (string)
              The user-supplied name of the blue/green deployment.

          Source -> (string)
              The source database for the blue/green deployment.

              Before  switchover,  the source database is the production data-
              base in the blue environment.

          Target -> (string)
              The target database for the blue/green deployment.

              Before switchover, the target database is the clone database  in
              the green environment.

          SwitchoverDetails -> (list)
              The  details  about  each  source  and  target  resource  in the
              blue/green deployment.

              (structure)
                 Contains the details about a blue/green deployment.

                 For more information, see Using Amazon RDS Blue/Green Deploy-
                 ments  for  database updates in the Amazon RDS User Guide and
                 Using Amazon RDS Blue/Green Deployments for database  updates
                 in the Amazon Aurora User Guide .

                 SourceMember -> (string)
                     The  Amazon Resource Name (ARN) of a resource in the blue
                     environment.

                 TargetMember -> (string)
                     The Amazon Resource Name (ARN) of a resource in the green
                     environment.

                 Status -> (string)
                     The  switchover  status of a resource in a blue/green de-
                     ployment.

                     Values:

                     o PROVISIONING - The resource is being prepared to switch
                       over.

                     o AVAILABLE - The resource is ready to switch over.

                     o SWITCHOVER_IN_PROGRESS - The resource is being switched
                       over.

                     o SWITCHOVER_COMPLETED - The resource has  been  switched
                       over.

                     o SWITCHOVER_FAILED  -  The  resource attempted to switch
                       over but failed.

                     o MISSING_SOURCE - The source resource has been deleted.

                     o MISSING_TARGET - The target resource has been deleted.

          Tasks -> (list)
              Either tasks to be performed or tasks that have  been  completed
              on the target database before switchover.

              (structure)
                 Details about a task for a blue/green deployment.

                 For more information, see Using Amazon RDS Blue/Green Deploy-
                 ments for database updates in the Amazon RDS User  Guide  and
                 Using  Amazon RDS Blue/Green Deployments for database updates
                 in the Amazon Aurora User Guide .

                 Name -> (string)
                     The name of the blue/green deployment task.

                 Status -> (string)
                     The status of the blue/green deployment task.

                     Valid Values:

                     o PENDING - The resource is being  prepared  for  deploy-
                       ment.

                     o IN_PROGRESS - The resource is being deployed.

                     o COMPLETED - The resource has been deployed.

                     o FAILED - Deployment of the resource failed.

          Status -> (string)
              The status of the blue/green deployment.

              Valid Values:

              o PROVISIONING  - Resources are being created in the green envi-
                ronment.

              o AVAILABLE - Resources are available in the green environment.

              o SWITCHOVER_IN_PROGRESS - The deployment is being switched from
                the blue environment to the green environment.

              o SWITCHOVER_COMPLETED - Switchover from the blue environment to
                the green environment is complete.

              o INVALID_CONFIGURATION - Resources in the green environment are
                invalid, so switchover isn't possible.

              o SWITCHOVER_FAILED - Switchover was attempted but failed.

              o DELETING - The blue/green deployment is being deleted.

          StatusDetails -> (string)
              Additional  information  about  the status of the blue/green de-
              ployment.

          CreateTime -> (timestamp)
              The time when the blue/green deployment was created, in  Univer-
              sal Coordinated Time (UTC).

          DeleteTime -> (timestamp)
              The  time when the blue/green deployment was deleted, in Univer-
              sal Coordinated Time (UTC).

          TagList -> (list)
              A list of tags.

              For more information, see Tagging Amazon RDS  resources  in  the
              Amazon  RDS  User  Guide or Tagging Amazon Aurora and Amazon RDS
              resources in the Amazon Aurora User Guide .

              (structure)
                 Metadata assigned to an Amazon RDS resource consisting  of  a
                 key-value pair.

                 For more information, see Tagging Amazon RDS resources in the
                 Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS
                 resources in the Amazon Aurora User Guide .

                 Key -> (string)
                     A  key  is the required name of the tag. The string value
                     can be from 1 to 128 Unicode  characters  in  length  and
                     can't be prefixed with aws: or rds: . The string can only
                     contain  only  the  set  of  Unicode   letters,   digits,
                     white-space, '_', '.', ':', '/', '=', '+', '-', '@' (Java
                     regex: "^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$").

                 Value -> (string)
                     A value is the optional value  of  the  tag.  The  string
                     value  can  be from 1 to 256 Unicode characters in length
                     and can't be prefixed with aws: or rds: . The string  can
                     only  contain  only  the  set of Unicode letters, digits,
                     white-space, '_', '.', ':', '/', '=', '+', '-', '@' (Java
                     regex: "^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$").



                                                CREATE-BLUE-GREEN-DEPLOYMENT()
