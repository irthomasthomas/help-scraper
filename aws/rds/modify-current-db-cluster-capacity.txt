MODIFY-CURRENT-DB-CLUSTER-CAPACITY()      MODIFY-CURRENT-DB-CLUSTER-CAPACITY()



NAME
       modify-current-db-cluster-capacity -

DESCRIPTION
       Set  the  capacity  of an Aurora Serverless v1 DB cluster to a specific
       value.

       Aurora Serverless v1 scales seamlessly based on the workload on the  DB
       cluster.  In  some  cases,  the capacity might not scale fast enough to
       meet a sudden change in workload, such as a large number of new  trans-
       actions.  Call  ModifyCurrentDBClusterCapacity  to set the capacity ex-
       plicitly.

       After this call sets the DB cluster capacity, Aurora Serverless v1  can
       automatically  scale  the  DB  cluster based on the cooldown period for
       scaling up and the cooldown period for scaling down.

       For more information about Aurora Serverless v1, see Using  Amazon  Au-
       rora Serverless v1 in the Amazon Aurora User Guide .

       WARNING:
          If  you  call  ModifyCurrentDBClusterCapacity with the default Time-
          outAction , connections that prevent Aurora Serverless v1 from find-
          ing  a  scaling  point  might be dropped. For more information about
          scaling points, see Autoscaling for Aurora Serverless v1 in the Ama-
          zon Aurora User Guide .

       NOTE:
          This operation only applies to Aurora Serverless v1 DB clusters.

       See also: AWS API Documentation

SYNOPSIS
            modify-current-db-cluster-capacity
          --db-cluster-identifier <value>
          [--capacity <value>]
          [--seconds-before-timeout <value>]
          [--timeout-action <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --db-cluster-identifier (string)
          The  DB  cluster identifier for the cluster being modified. This pa-
          rameter isn't case-sensitive.

          Constraints:

          o Must match the identifier of an existing DB cluster.

       --capacity (integer)
          The DB cluster capacity.

          When you change the capacity of a paused  Aurora  Serverless  v1  DB
          cluster, it automatically resumes.

          Constraints:

          o For  Aurora  MySQL, valid capacity values are 1 , 2 , 4 , 8 , 16 ,
            32 , 64 , 128 , and 256 .

          o For Aurora PostgreSQL, valid capacity values are 2 , 4 , 8 , 16  ,
            32 , 64 , 192 , and 384 .

       --seconds-before-timeout (integer)
          The  amount  of time, in seconds, that Aurora Serverless v1 tries to
          find a scaling point to perform seamless  scaling  before  enforcing
          the timeout action. The default is 300.

          Specify a value between 10 and 600 seconds.

       --timeout-action (string)
          The action to take when the timeout is reached, either ForceApplyCa-
          pacityChange or RollbackCapacityChange .
              ForceApplyCapacityChange , the default, sets the capacity to the
              specified value as soon as possible.

              RollbackCapacityChange  ignores the capacity change if a scaling
              point isn't found in the timeout period.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To scale the capacity of an Aurora Serverless DB cluster

       The following modify-current-db-cluster-capacity example scales the ca-
       pacity of an Aurora Serverless DB cluster to 8.

          aws rds modify-current-db-cluster-capacity \
              --db-cluster-identifier mydbcluster \
              --capacity 8

       Output:

          {
              "DBClusterIdentifier": "mydbcluster",
              "PendingCapacity": 8,
              "CurrentCapacity": 1,
              "SecondsBeforeTimeout": 300,
              "TimeoutAction": "ForceApplyCapacityChange"
          }

       For more information, see Scaling Aurora Serverless v1 DB  cluster  ca-
       pacity manually in the Amazon Aurora User Guide.

OUTPUT
       DBClusterIdentifier -> (string)
          A user-supplied DB cluster identifier. This identifier is the unique
          key that identifies a DB cluster.

       PendingCapacity -> (integer)
          A value that specifies the capacity that the DB  cluster  scales  to
          next.

       CurrentCapacity -> (integer)
          The current capacity of the DB cluster.

       SecondsBeforeTimeout -> (integer)
          The  number of seconds before a call to ModifyCurrentDBClusterCapac-
          ity times out.

       TimeoutAction -> (string)
          The timeout action of a call to ModifyCurrentDBClusterCapacity , ei-
          ther ForceApplyCapacityChange or RollbackCapacityChange .



                                          MODIFY-CURRENT-DB-CLUSTER-CAPACITY()
