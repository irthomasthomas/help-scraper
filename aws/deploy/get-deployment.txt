GET-DEPLOYMENT()                                              GET-DEPLOYMENT()



NAME
       get-deployment -

DESCRIPTION
       Gets information about a deployment.

       NOTE:
          The  content  property  of the appSpecContent object in the returned
          revision is always null. Use GetApplicationRevision and  the  sha256
          property of the returned appSpecContent object to get the content of
          the deployments AppSpec file.

       See also: AWS API Documentation

SYNOPSIS
            get-deployment
          --deployment-id <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --deployment-id (string)
          The unique ID of a deployment associated with the user or Amazon Web
          Services account.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To get information about a deployment

       The following get-deployment example displays information about  a  de-
       ployment that is associated with the user's AWS account.

          aws deploy get-deployment --deployment-id d-A1B2C3123

       Output:

          {
              "deploymentInfo": {
                  "applicationName": "WordPress_App",
                  "status": "Succeeded",
                  "deploymentOverview": {
                      "Failed": 0,
                      "InProgress": 0,
                      "Skipped": 0,
                      "Succeeded": 1,
                      "Pending": 0
                  },
                  "deploymentConfigName": "CodeDeployDefault.OneAtATime",
                  "creator": "user",
                  "description": "My WordPress app deployment",
                  "revision": {
                      "revisionType": "S3",
                      "s3Location":  {
                      "bundleType": "zip",
                      "eTag": "\"dd56cfdEXAMPLE8e768f9d77fEXAMPLE\"",
                      "bucket": "CodeDeployDemoBucket",
                      "key": "WordPressApp.zip"
                      }
                  },
                  "deploymentId": "d-A1B2C3123",
                  "deploymentGroupName": "WordPress_DG",
                  "createTime": 1409764576.589,
                  "completeTime": 1409764596.101,
                  "ignoreApplicationStopFailures": false
              }
          }

OUTPUT
       deploymentInfo -> (structure)
          Information about the deployment.

          applicationName -> (string)
              The application name.

          deploymentGroupName -> (string)
              The deployment group name.

          deploymentConfigName -> (string)
              The deployment configuration name.

          deploymentId -> (string)
              The unique ID of a deployment.

          previousRevision -> (structure)
              Information  about the application revision that was deployed to
              the deployment group before the most recent  successful  deploy-
              ment.

              revisionType -> (string)
                 The type of application revision:

                 o S3: An application revision stored in Amazon S3.

                 o GitHub:   An   application   revision   stored   in  GitHub
                   (EC2/On-premises deployments only).

                 o String: A YAML-formatted or JSON-formatted  string  (Lambda
                   deployments only).

                 o AppSpecContent:  An AppSpecContent object that contains the
                   contents of an AppSpec file for an Lambda or Amazon ECS de-
                   ployment.  The  content is formatted as JSON or YAML stored
                   as a RawString.

              s3Location -> (structure)
                 Information about the location of a revision stored in Amazon
                 S3.

                 bucket -> (string)
                     The  name  of  the Amazon S3 bucket where the application
                     revision is stored.

                 key -> (string)
                     The name of the Amazon S3 object that represents the bun-
                     dled artifacts for the application revision.

                 bundleType -> (string)
                     The file type of the application revision. Must be one of
                     the following:

                     o tar : A tar archive file.

                     o tgz : A compressed tar archive file.

                     o zip : A zip archive file.

                     o YAML : A YAML-formatted file.

                     o JSON : A JSON-formatted file.

                 version -> (string)
                     A specific version of the Amazon S3  object  that  repre-
                     sents the bundled artifacts for the application revision.

                     If the version is not specified, the system uses the most
                     recent version by default.

                 eTag -> (string)
                     The ETag of the Amazon S3 object that represents the bun-
                     dled artifacts for the application revision.

                     If  the ETag is not specified as an input parameter, ETag
                     validation of the object is skipped.

              gitHubLocation -> (structure)
                 Information  about  the  location  of  application  artifacts
                 stored in GitHub.

                 repository -> (string)
                     The GitHub account and repository pair that stores a ref-
                     erence to the commit that represents  the  bundled  arti-
                     facts for the application revision.

                     Specified as account/repository.

                 commitId -> (string)
                     The  SHA1  commit ID of the GitHub commit that represents
                     the bundled artifacts for the application revision.

              string -> (structure)
                 Information about the location of an Lambda deployment  revi-
                 sion stored as a RawString.

                 content -> (string)
                     The  YAML-formatted or JSON-formatted revision string. It
                     includes information about which Lambda function  to  up-
                     date  and optional Lambda functions that validate deploy-
                     ment lifecycle events.

                 sha256 -> (string)
                     The SHA256 hash value of the revision content.

              appSpecContent -> (structure)
                 The content of an AppSpec file for an Lambda  or  Amazon  ECS
                 deployment.  The  content  is  formatted  as JSON or YAML and
                 stored as a RawString.

                 content -> (string)
                     The YAML-formatted or JSON-formatted revision string.

                     For an Lambda deployment, the content includes  a  Lambda
                     function  name,  the  alias for its original version, and
                     the alias for its  replacement  version.  The  deployment
                     shifts  traffic  from  the original version of the Lambda
                     function to the replacement version.

                     For an Amazon ECS deployment, the  content  includes  the
                     task  name,  information  about  the  load  balancer that
                     serves traffic to the container, and more.

                     For both types of deployments, the  content  can  specify
                     Lambda functions that run at specified hooks, such as Be-
                     foreInstall , during a deployment.

                 sha256 -> (string)
                     The SHA256 hash value of the revision content.

          revision -> (structure)
              Information about the location of stored  application  artifacts
              and the service from which to retrieve them.

              revisionType -> (string)
                 The type of application revision:

                 o S3: An application revision stored in Amazon S3.

                 o GitHub:   An   application   revision   stored   in  GitHub
                   (EC2/On-premises deployments only).

                 o String: A YAML-formatted or JSON-formatted  string  (Lambda
                   deployments only).

                 o AppSpecContent:  An AppSpecContent object that contains the
                   contents of an AppSpec file for an Lambda or Amazon ECS de-
                   ployment.  The  content is formatted as JSON or YAML stored
                   as a RawString.

              s3Location -> (structure)
                 Information about the location of a revision stored in Amazon
                 S3.

                 bucket -> (string)
                     The  name  of  the Amazon S3 bucket where the application
                     revision is stored.

                 key -> (string)
                     The name of the Amazon S3 object that represents the bun-
                     dled artifacts for the application revision.

                 bundleType -> (string)
                     The file type of the application revision. Must be one of
                     the following:

                     o tar : A tar archive file.

                     o tgz : A compressed tar archive file.

                     o zip : A zip archive file.

                     o YAML : A YAML-formatted file.

                     o JSON : A JSON-formatted file.

                 version -> (string)
                     A specific version of the Amazon S3  object  that  repre-
                     sents the bundled artifacts for the application revision.

                     If the version is not specified, the system uses the most
                     recent version by default.

                 eTag -> (string)
                     The ETag of the Amazon S3 object that represents the bun-
                     dled artifacts for the application revision.

                     If  the ETag is not specified as an input parameter, ETag
                     validation of the object is skipped.

              gitHubLocation -> (structure)
                 Information  about  the  location  of  application  artifacts
                 stored in GitHub.

                 repository -> (string)
                     The GitHub account and repository pair that stores a ref-
                     erence to the commit that represents  the  bundled  arti-
                     facts for the application revision.

                     Specified as account/repository.

                 commitId -> (string)
                     The  SHA1  commit ID of the GitHub commit that represents
                     the bundled artifacts for the application revision.

              string -> (structure)
                 Information about the location of an Lambda deployment  revi-
                 sion stored as a RawString.

                 content -> (string)
                     The  YAML-formatted or JSON-formatted revision string. It
                     includes information about which Lambda function  to  up-
                     date  and optional Lambda functions that validate deploy-
                     ment lifecycle events.

                 sha256 -> (string)
                     The SHA256 hash value of the revision content.

              appSpecContent -> (structure)
                 The content of an AppSpec file for an Lambda  or  Amazon  ECS
                 deployment.  The  content  is  formatted  as JSON or YAML and
                 stored as a RawString.

                 content -> (string)
                     The YAML-formatted or JSON-formatted revision string.

                     For an Lambda deployment, the content includes  a  Lambda
                     function  name,  the  alias for its original version, and
                     the alias for its  replacement  version.  The  deployment
                     shifts  traffic  from  the original version of the Lambda
                     function to the replacement version.

                     For an Amazon ECS deployment, the  content  includes  the
                     task  name,  information  about  the  load  balancer that
                     serves traffic to the container, and more.

                     For both types of deployments, the  content  can  specify
                     Lambda functions that run at specified hooks, such as Be-
                     foreInstall , during a deployment.

                 sha256 -> (string)
                     The SHA256 hash value of the revision content.

          status -> (string)
              The current state of the deployment as a whole.

          errorInformation -> (structure)
              Information about any error associated with this deployment.

              code -> (string)
                 For more information, see Error Codes for CodeDeploy  in  the
                 CodeDeploy User Guide .

                 The error code:

                 o APPLICATION_MISSING:  The application was missing. This er-
                   ror code is  most  likely  raised  if  the  application  is
                   deleted  after  the deployment is created, but before it is
                   started.

                 o DEPLOYMENT_GROUP_MISSING: The deployment group was missing.
                   This  error  code  is  most likely raised if the deployment
                   group is deleted after the deployment is created,  but  be-
                   fore it is started.

                 o HEALTH_CONSTRAINTS:  The  deployment failed on too many in-
                   stances to be successfully  deployed  within  the  instance
                   health constraints specified.

                 o HEALTH_CONSTRAINTS_INVALID: The revision cannot be success-
                   fully deployed within the instance health constraints spec-
                   ified.

                 o IAM_ROLE_MISSING: The service role cannot be accessed.

                 o IAM_ROLE_PERMISSIONS:  The  service  role does not have the
                   correct permissions.

                 o INTERNAL_ERROR: There was an internal error.

                 o NO_EC2_SUBSCRIPTION: The calling account is not  subscribed
                   to Amazon EC2.

                 o NO_INSTANCES:  No instances were specified, or no instances
                   can be found.

                 o OVER_MAX_INSTANCES: The maximum number of instances was ex-
                   ceeded.

                 o THROTTLED:  The operation was throttled because the calling
                   account exceeded the throttling limits of one or more  Ama-
                   zon Web Services services.

                 o TIMEOUT: The deployment has timed out.

                 o REVISION_MISSING:  The  revision ID was missing. This error
                   code is most likely raised if the revision is deleted after
                   the deployment is created, but before it is started.

              message -> (string)
                 An accompanying error message.

          createTime -> (timestamp)
              A timestamp that indicates when the deployment was created.

          startTime -> (timestamp)
              A  timestamp  that indicates when the deployment was deployed to
              the deployment group.

              In some cases, the reported value of the  start  time  might  be
              later  than the complete time. This is due to differences in the
              clock settings of backend servers that participate  in  the  de-
              ployment process.

          completeTime -> (timestamp)
              A timestamp that indicates when the deployment was complete.

          deploymentOverview -> (structure)
              A  summary  of the deployment status of the instances in the de-
              ployment.

              Pending -> (long)
                 The number of instances in the deployment in a pending state.

              InProgress -> (long)
                 The number  of  instances  in  which  the  deployment  is  in
                 progress.

              Succeeded -> (long)
                 The  number of instances in the deployment to which revisions
                 have been successfully deployed.

              Failed -> (long)
                 The number of instances in the deployment in a failed state.

              Skipped -> (long)
                 The number of instances in the deployment in a skipped state.

              Ready -> (long)
                 The number of instances in a replacement environment ready to
                 receive traffic in a blue/green deployment.

          description -> (string)
              A comment about the deployment.

          creator -> (string)
              The means by which the deployment was created:

              o user : A user created the deployment.

              o autoscaling : Amazon EC2 Auto Scaling created the deployment.

              o codeDeployRollback  :  A  rollback process created the deploy-
                ment.

              o CodeDeployAutoUpdate : An auto-update process created the  de-
                ployment when it detected outdated Amazon EC2 instances.

          ignoreApplicationStopFailures -> (boolean)
              If  true,  then  if an ApplicationStop , BeforeBlockTraffic , or
              AfterBlockTraffic deployment  lifecycle  event  to  an  instance
              fails,  then  the  deployment  continues  to the next deployment
              lifecycle event. For example, if ApplicationStop fails, the  de-
              ployment  continues  with  DownloadBundle. If BeforeBlockTraffic
              fails, the deployment  continues  with  BlockTraffic  .  If  Af-
              terBlockTraffic  fails,  the  deployment continues with Applica-
              tionStop .

              If false or not specified, then if a lifecycle event fails  dur-
              ing  a  deployment to an instance, that deployment fails. If de-
              ployment to that instance is part of an overall  deployment  and
              the  number of healthy hosts is not less than the minimum number
              of healthy hosts, then a deployment to the next instance is  at-
              tempted.

              During a deployment, the CodeDeploy agent runs the scripts spec-
              ified for ApplicationStop , BeforeBlockTraffic , and AfterBlock-
              Traffic in the AppSpec file from the previous successful deploy-
              ment. (All other scripts are run from the AppSpec  file  in  the
              current  deployment.)  If one of these scripts contains an error
              and does not run successfully, the deployment can fail.

              If the cause of the failure is a script from the last successful
              deployment  that  will  never run successfully, create a new de-
              ployment and use ignoreApplicationStopFailures to  specify  that
              the ApplicationStop , BeforeBlockTraffic , and AfterBlockTraffic
              failures should be ignored.

          autoRollbackConfiguration -> (structure)
              Information about the automatic rollback  configuration  associ-
              ated with the deployment.

              enabled -> (boolean)
                 Indicates  whether a defined automatic rollback configuration
                 is currently enabled.

              events -> (list)
                 The event type or types that trigger a rollback.

                 (string)

          updateOutdatedInstancesOnly -> (boolean)
              Indicates whether only instances that are not running the latest
              application revision are to be deployed to.

          rollbackInfo -> (structure)
              Information about a deployment rollback.

              rollbackDeploymentId -> (string)
                 The ID of the deployment rollback.

              rollbackTriggeringDeploymentId -> (string)
                 The  deployment  ID  of  the deployment that was underway and
                 triggered a rollback deployment  because  it  failed  or  was
                 stopped.

              rollbackMessage -> (string)
                 Information  that  describes the status of a deployment roll-
                 back (for example, whether the  deployment  can't  be  rolled
                 back, is in progress, failed, or succeeded).

          deploymentStyle -> (structure)
              Information  about  the  type  of deployment, either in-place or
              blue/green, you want to run  and  whether  to  route  deployment
              traffic behind a load balancer.

              deploymentType -> (string)
                 Indicates   whether  to  run  an  in-place  deployment  or  a
                 blue/green deployment.

              deploymentOption -> (string)
                 Indicates whether to route deployment traffic behind  a  load
                 balancer.

          targetInstances -> (structure)
              Information  about  the instances that belong to the replacement
              environment in a blue/green deployment.

              tagFilters -> (list)
                 The tag filter key, type, and value used to  identify  Amazon
                 EC2  instances  in a replacement environment for a blue/green
                 deployment. Cannot be used in the same call as ec2TagSet .

                 (structure)
                     Information about an EC2 tag filter.

                     Key -> (string)
                        The tag filter key.

                     Value -> (string)
                        The tag filter value.

                     Type -> (string)
                        The tag filter type:

                        o KEY_ONLY : Key only.

                        o VALUE_ONLY : Value only.

                        o KEY_AND_VALUE : Key and value.

              autoScalingGroups -> (list)
                 The names of one or more Auto Scaling groups  to  identify  a
                 replacement environment for a blue/green deployment.

                 (string)

              ec2TagSet -> (structure)
                 Information about the groups of Amazon EC2 instance tags that
                 an instance must be identified by in order for it to  be  in-
                 cluded  in  the  replacement environment for a blue/green de-
                 ployment. Cannot be used in the same call as tagFilters .

                 ec2TagSetList -> (list)
                     A list that contains other lists of Amazon  EC2  instance
                     tag groups. For an instance to be included in the deploy-
                     ment group, it must be  identified  by  all  of  the  tag
                     groups in the list.

                     (list)
                        (structure)
                            Information about an EC2 tag filter.

                            Key -> (string)
                               The tag filter key.

                            Value -> (string)
                               The tag filter value.

                            Type -> (string)
                               The tag filter type:

                               o KEY_ONLY : Key only.

                               o VALUE_ONLY : Value only.

                               o KEY_AND_VALUE : Key and value.

          instanceTerminationWaitTimeStarted -> (boolean)
              Indicates whether the wait period set for the termination of in-
              stances in the  original  environment  has  started.  Status  is
              'false' if the KEEP_ALIVE option is specified. Otherwise, 'true'
              as soon as the termination wait period starts.

          blueGreenDeploymentConfiguration -> (structure)
              Information about blue/green deployment options for this deploy-
              ment.

              terminateBlueInstancesOnDeploymentSuccess -> (structure)
                 Information about whether to terminate instances in the orig-
                 inal fleet during a blue/green deployment.

                 action -> (string)
                     The action to take on instances in the original  environ-
                     ment after a successful blue/green deployment.

                     o TERMINATE  : Instances are terminated after a specified
                       wait time.

                     o KEEP_ALIVE : Instances are left running after they  are
                       deregistered  from  the  load balancer and removed from
                       the deployment group.

                 terminationWaitTimeInMinutes -> (integer)
                     For an Amazon EC2 deployment, the number  of  minutes  to
                     wait after a successful blue/green deployment before ter-
                     minating instances from the original environment.

                     For an Amazon ECS deployment, the number of  minutes  be-
                     fore  deleting  the  original  (blue) task set. During an
                     Amazon ECS deployment, CodeDeploy shifts traffic from the
                     original  (blue)  task  set to a replacement (green) task
                     set.

                     The maximum setting is 2880 minutes (2 days).

              deploymentReadyOption -> (structure)
                 Information about the action to take when  newly  provisioned
                 instances  are  ready  to receive traffic in a blue/green de-
                 ployment.

                 actionOnTimeout -> (string)
                     Information about when to reroute traffic from an  origi-
                     nal   environment  to  a  replacement  environment  in  a
                     blue/green deployment.

                     o CONTINUE_DEPLOYMENT: Register new  instances  with  the
                       load balancer immediately after the new application re-
                       vision is installed on the instances in the replacement
                       environment.

                     o STOP_DEPLOYMENT:  Do  not register new instances with a
                       load balancer unless traffic rerouting is started using
                       ContinueDeployment   .  If  traffic  rerouting  is  not
                       started before the end of the  specified  wait  period,
                       the deployment status is changed to Stopped.

                 waitTimeInMinutes -> (integer)
                     The  number  of  minutes  to  wait before the status of a
                     blue/green deployment is changed to Stopped if  rerouting
                     is not started manually. Applies only to the STOP_DEPLOY-
                     MENT option for actionOnTimeout .

              greenFleetProvisioningOption -> (structure)
                 Information about how instances are  provisioned  for  a  re-
                 placement environment in a blue/green deployment.

                 action -> (string)
                     The  method  used to add instances to a replacement envi-
                     ronment.

                     o DISCOVER_EXISTING : Use instances that already exist or
                       will be created manually.

                     o COPY_AUTO_SCALING_GROUP : Use settings from a specified
                       Auto Scaling group to define and create instances in  a
                       new Auto Scaling group.

          loadBalancerInfo -> (structure)
              Information about the load balancer used in the deployment.

              elbInfoList -> (list)
                 An  array  that contains information about the load balancers
                 to use for load balancing in a deployment.  If  you're  using
                 Classic  Load Balancers, specify those load balancers in this
                 array.

                 NOTE:
                     You can add up to 10 load balancers to the array.

                 NOTE:
                     If you're using Application  Load  Balancers  or  Network
                     Load Balancers, use the targetGroupInfoList array instead
                     of this one.

                 (structure)
                     Information about a Classic Load Balancer in Elastic Load
                     Balancing  to  use  in a deployment. Instances are regis-
                     tered directly with  a  load  balancer,  and  traffic  is
                     routed to the load balancer.

                     name -> (string)
                        For  blue/green  deployments,  the name of the Classic
                        Load Balancer that is used to route traffic from orig-
                        inal   instances   to   replacement   instances  in  a
                        blue/green deployment. For in-place  deployments,  the
                        name  of  the Classic Load Balancer that instances are
                        deregistered from so they are not serving traffic dur-
                        ing  a  deployment,  and then re-registered with after
                        the deployment is complete.

              targetGroupInfoList -> (list)
                 An array that contains information about the target groups to
                 use  for  load balancing in a deployment. If you're using Ap-
                 plication Load Balancers and Network Load Balancers,  specify
                 their associated target groups in this array.

                 NOTE:
                     You can add up to 10 target groups to the array.

                 NOTE:
                     If  you're  using  Classic  Load  Balancers,  use the el-
                     bInfoList array instead of this one.

                 (structure)
                     Information about a target group in Elastic Load  Balanc-
                     ing  to  use in a deployment. Instances are registered as
                     targets in a target group, and traffic is routed  to  the
                     target group.

                     name -> (string)
                        For  blue/green  deployments,  the  name of the target
                        group that instances in the original  environment  are
                        deregistered  from,  and  instances in the replacement
                        environment are registered with. For in-place  deploy-
                        ments, the name of the target group that instances are
                        deregistered from, so they  are  not  serving  traffic
                        during a deployment, and then re-registered with after
                        the deployment is complete.

              targetGroupPairInfoList -> (list)
                 The target group pair information. This is an array of Targe-
                 GroupPairInfo objects with a maximum size of one.

                 (structure)
                     Information  about  two  target groups and how traffic is
                     routed during an Amazon ECS deployment. An optional  test
                     traffic route can be specified.

                     targetGroups -> (list)
                        One  pair of target groups. One is associated with the
                        original task set. The second is associated  with  the
                        task  set  that serves traffic after the deployment is
                        complete.

                        (structure)
                            Information about a target group in  Elastic  Load
                            Balancing  to  use  in a deployment. Instances are
                            registered as targets in a target group, and traf-
                            fic is routed to the target group.

                            name -> (string)
                               For  blue/green  deployments,  the  name of the
                               target group that instances in the original en-
                               vironment  are deregistered from, and instances
                               in the replacement environment  are  registered
                               with. For in-place deployments, the name of the
                               target group that  instances  are  deregistered
                               from,  so they are not serving traffic during a
                               deployment, and then re-registered  with  after
                               the deployment is complete.

                     prodTrafficRoute -> (structure)
                        The  path  used by a load balancer to route production
                        traffic when an Amazon ECS deployment is complete.

                        listenerArns -> (list)
                            The Amazon Resource Name (ARN)  of  one  listener.
                            The listener identifies the route between a target
                            group and a load balancer. This  is  an  array  of
                            strings with a maximum size of one.

                            (string)

                     testTrafficRoute -> (structure)
                        An optional path used by a load balancer to route test
                        traffic after an Amazon ECS deployment. Validation can
                        occur  while  test  traffic is served during a deploy-
                        ment.

                        listenerArns -> (list)
                            The Amazon Resource Name (ARN)  of  one  listener.
                            The listener identifies the route between a target
                            group and a load balancer. This  is  an  array  of
                            strings with a maximum size of one.

                            (string)

          additionalDeploymentStatusInfo -> (string)
              Provides  information about the results of a deployment, such as
              whether instances in the original environment  in  a  blue/green
              deployment were not terminated.

          fileExistsBehavior -> (string)
              Information  about how CodeDeploy handles files that already ex-
              ist in a deployment target location but weren't part of the pre-
              vious successful deployment.

              o DISALLOW  : The deployment fails. This is also the default be-
                havior if no option is specified.

              o OVERWRITE : The version of the file from the application revi-
                sion  currently being deployed replaces the version already on
                the instance.

              o RETAIN : The version of the file already on  the  instance  is
                kept and used as part of the new deployment.

          deploymentStatusMessages -> (list)
              Messages  that contain information about the status of a deploy-
              ment.

              (string)

          computePlatform -> (string)
              The destination platform  type  for  the  deployment  (Lambda  ,
              Server , or ECS ).

          externalId -> (string)
              The unique ID for an external resource (for example, a CloudFor-
              mation stack ID) that is linked to this deployment.

          relatedDeployments -> (structure)
              Information about deployments related to the  specified  deploy-
              ment.

              autoUpdateOutdatedInstancesRootDeploymentId -> (string)
                 The  deployment ID of the root deployment that triggered this
                 deployment.

              autoUpdateOutdatedInstancesDeploymentIds -> (list)
                 The deployment IDs of 'auto-update  outdated  instances'  de-
                 ployments triggered by this deployment.

                 (string)

          overrideAlarmConfiguration -> (structure)
              Information about alarms associated with a deployment or deploy-
              ment group.

              enabled -> (boolean)
                 Indicates whether the alarm configuration is enabled.

              ignorePollAlarmFailure -> (boolean)
                 Indicates whether a deployment should continue if information
                 about  the  current  state of alarms cannot be retrieved from
                 Amazon CloudWatch. The default value is false.

                 o true : The deployment proceeds even if alarm status  infor-
                   mation can't be retrieved from Amazon CloudWatch.

                 o false  :  The  deployment stops if alarm status information
                   can't be retrieved from Amazon CloudWatch.

              alarms -> (list)
                 A list of alarms configured for the deployment or  deployment
                 group. A maximum of 10 alarms can be added.

                 (structure)
                     Information about an alarm.

                     name -> (string)
                        The  name  of the alarm. Maximum length is 255 charac-
                        ters. Each alarm name can be used only once in a  list
                        of alarms.



                                                              GET-DEPLOYMENT()
