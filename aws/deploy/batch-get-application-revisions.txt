BATCH-GET-APPLICATION-REVISIONS()            BATCH-GET-APPLICATION-REVISIONS()



NAME
       batch-get-application-revisions -

DESCRIPTION
       Gets  information  about one or more application revisions. The maximum
       number of application revisions that can be returned is 25.

       See also: AWS API Documentation

SYNOPSIS
            batch-get-application-revisions
          --application-name <value>
          --revisions <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --application-name (string)
          The name of an CodeDeploy application about which  to  get  revision
          information.

       --revisions (list)
          An array of RevisionLocation objects that specify information to get
          about the application revisions, including type  and  location.  The
          maximum number of RevisionLocation objects you can specify is 25.

          (structure)
              Information about the location of an application revision.

              revisionType -> (string)
                 The type of application revision:

                 o S3: An application revision stored in Amazon S3.

                 o GitHub:   An   application   revision   stored   in  GitHub
                   (EC2/On-premises deployments only).

                 o String: A YAML-formatted or JSON-formatted  string  (Lambda
                   deployments only).

                 o AppSpecContent:  An AppSpecContent object that contains the
                   contents of an AppSpec file for an Lambda or Amazon ECS de-
                   ployment.  The  content is formatted as JSON or YAML stored
                   as a RawString.

              s3Location -> (structure)
                 Information about the location of a revision stored in Amazon
                 S3.

                 bucket -> (string)
                     The  name  of  the Amazon S3 bucket where the application
                     revision is stored.

                 key -> (string)
                     The name of the Amazon S3 object that represents the bun-
                     dled artifacts for the application revision.

                 bundleType -> (string)
                     The file type of the application revision. Must be one of
                     the following:

                     o tar : A tar archive file.

                     o tgz : A compressed tar archive file.

                     o zip : A zip archive file.

                     o YAML : A YAML-formatted file.

                     o JSON : A JSON-formatted file.

                 version -> (string)
                     A specific version of the Amazon S3  object  that  repre-
                     sents the bundled artifacts for the application revision.

                     If the version is not specified, the system uses the most
                     recent version by default.

                 eTag -> (string)
                     The ETag of the Amazon S3 object that represents the bun-
                     dled artifacts for the application revision.

                     If  the ETag is not specified as an input parameter, ETag
                     validation of the object is skipped.

              gitHubLocation -> (structure)
                 Information  about  the  location  of  application  artifacts
                 stored in GitHub.

                 repository -> (string)
                     The GitHub account and repository pair that stores a ref-
                     erence to the commit that represents  the  bundled  arti-
                     facts for the application revision.

                     Specified as account/repository.

                 commitId -> (string)
                     The  SHA1  commit ID of the GitHub commit that represents
                     the bundled artifacts for the application revision.

              string -> (structure)
                 Information about the location of an Lambda deployment  revi-
                 sion stored as a RawString.

                 content -> (string)
                     The  YAML-formatted or JSON-formatted revision string. It
                     includes information about which Lambda function  to  up-
                     date  and optional Lambda functions that validate deploy-
                     ment lifecycle events.

                 sha256 -> (string)
                     The SHA256 hash value of the revision content.

              appSpecContent -> (structure)
                 The content of an AppSpec file for an Lambda  or  Amazon  ECS
                 deployment.  The  content  is  formatted  as JSON or YAML and
                 stored as a RawString.

                 content -> (string)
                     The YAML-formatted or JSON-formatted revision string.

                     For an Lambda deployment, the content includes  a  Lambda
                     function  name,  the  alias for its original version, and
                     the alias for its  replacement  version.  The  deployment
                     shifts  traffic  from  the original version of the Lambda
                     function to the replacement version.

                     For an Amazon ECS deployment, the  content  includes  the
                     task  name,  information  about  the  load  balancer that
                     serves traffic to the container, and more.

                     For both types of deployments, the  content  can  specify
                     Lambda functions that run at specified hooks, such as Be-
                     foreInstall , during a deployment.

                 sha256 -> (string)
                     The SHA256 hash value of the revision content.

       Shorthand Syntax:

          revisionType=string,s3Location={bucket=string,key=string,bundleType=string,version=string,eTag=string},gitHubLocation={repository=string,commitId=string},string={content=string,sha256=string},appSpecContent={content=string,sha256=string} ...

       JSON Syntax:

          [
            {
              "revisionType": "S3"|"GitHub"|"String"|"AppSpecContent",
              "s3Location": {
                "bucket": "string",
                "key": "string",
                "bundleType": "tar"|"tgz"|"zip"|"YAML"|"JSON",
                "version": "string",
                "eTag": "string"
              },
              "gitHubLocation": {
                "repository": "string",
                "commitId": "string"
              },
              "string": {
                "content": "string",
                "sha256": "string"
              },
              "appSpecContent": {
                "content": "string",
                "sha256": "string"
              }
            }
            ...
          ]

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To retrieve information about application revisions

       The  following batch-get-application-revisions example retrieves infor-
       mation about the specified revision stored in a GitHub repository.

          aws deploy batch-get-application-revisions \
              --application-name my-codedeploy-application \
              --revisions "[{\"gitHubLocation\": {\"commitId\": \"fa85936EXAMPLEa31736c051f10d77297EXAMPLE\",\"repository\": \"my-github-token/my-repository\"},\"revisionType\": \"GitHub\"}]"

       Output:

          {
              "revisions": [
                  {
                      "genericRevisionInfo": {
                          "description": "Application revision registered by Deployment ID: d-A1B2C3111",
                          "lastUsedTime": 1556912355.884,
                          "registerTime": 1556912355.884,
                          "firstUsedTime": 1556912355.884,
                          "deploymentGroups": []
                      },
                      "revisionLocation": {
                          "revisionType": "GitHub",
                          "gitHubLocation": {
                              "commitId": "fa85936EXAMPLEa31736c051f10d77297EXAMPLE",
                              "repository": "my-github-token/my-repository"
                          }
                      }
                  }
              ],
              "applicationName": "my-codedeploy-application",
              "errorMessage": ""
          }

       For more information, see BatchGetApplicationRevisions in the AWS  Cod-
       eDeploy API Reference.

OUTPUT
       applicationName -> (string)
          The name of the application that corresponds to the revisions.

       errorMessage -> (string)
          Information  about  errors  that  might have occurred during the API
          call.

       revisions -> (list)
          Additional information about the revisions, including the  type  and
          location.

          (structure)
              Information about an application revision.

              revisionLocation -> (structure)
                 Information about the location and type of an application re-
                 vision.

                 revisionType -> (string)
                     The type of application revision:

                     o S3: An application revision stored in Amazon S3.

                     o GitHub:  An  application  revision  stored  in   GitHub
                       (EC2/On-premises deployments only).

                     o String:   A  YAML-formatted  or  JSON-formatted  string
                       (Lambda deployments only).

                     o AppSpecContent: An AppSpecContent object that  contains
                       the contents of an AppSpec file for an Lambda or Amazon
                       ECS deployment. The content is  formatted  as  JSON  or
                       YAML stored as a RawString.

                 s3Location -> (structure)
                     Information  about  the  location of a revision stored in
                     Amazon S3.

                     bucket -> (string)
                        The name of the Amazon S3 bucket where the application
                        revision is stored.

                     key -> (string)
                        The  name  of the Amazon S3 object that represents the
                        bundled artifacts for the application revision.

                     bundleType -> (string)
                        The file type of the application revision. Must be one
                        of the following:

                        o tar : A tar archive file.

                        o tgz : A compressed tar archive file.

                        o zip : A zip archive file.

                        o YAML : A YAML-formatted file.

                        o JSON : A JSON-formatted file.

                     version -> (string)
                        A specific version of the Amazon S3 object that repre-
                        sents the bundled artifacts for the application  revi-
                        sion.

                        If  the  version is not specified, the system uses the
                        most recent version by default.

                     eTag -> (string)
                        The ETag of the Amazon S3 object that  represents  the
                        bundled artifacts for the application revision.

                        If  the  ETag  is not specified as an input parameter,
                        ETag validation of the object is skipped.

                 gitHubLocation -> (structure)
                     Information about the location of  application  artifacts
                     stored in GitHub.

                     repository -> (string)
                        The  GitHub  account and repository pair that stores a
                        reference to the commit that  represents  the  bundled
                        artifacts for the application revision.

                        Specified as account/repository.

                     commitId -> (string)
                        The  SHA1  commit  ID of the GitHub commit that repre-
                        sents the bundled artifacts for the application  revi-
                        sion.

                 string -> (structure)
                     Information  about  the  location of an Lambda deployment
                     revision stored as a RawString.

                     content -> (string)
                        The YAML-formatted or JSON-formatted revision  string.
                        It includes information about which Lambda function to
                        update and optional Lambda functions that validate de-
                        ployment lifecycle events.

                     sha256 -> (string)
                        The SHA256 hash value of the revision content.

                 appSpecContent -> (structure)
                     The  content  of  an AppSpec file for an Lambda or Amazon
                     ECS deployment. The content is formatted as JSON or  YAML
                     and stored as a RawString.

                     content -> (string)
                        The YAML-formatted or JSON-formatted revision string.

                        For  an  Lambda  deployment,  the  content  includes a
                        Lambda function name, the alias for its original  ver-
                        sion,  and  the alias for its replacement version. The
                        deployment shifts traffic from the original version of
                        the Lambda function to the replacement version.

                        For an Amazon ECS deployment, the content includes the
                        task name, information about the  load  balancer  that
                        serves traffic to the container, and more.

                        For both types of deployments, the content can specify
                        Lambda functions that run at specified hooks, such  as
                        BeforeInstall , during a deployment.

                     sha256 -> (string)
                        The SHA256 hash value of the revision content.

              genericRevisionInfo -> (structure)
                 Information  about  an  application revision, including usage
                 details and associated deployment groups.

                 description -> (string)
                     A comment about the revision.

                 deploymentGroups -> (list)
                     The deployment groups for which this is the current  tar-
                     get revision.

                     (string)

                 firstUsedTime -> (timestamp)
                     When the revision was first used by CodeDeploy.

                 lastUsedTime -> (timestamp)
                     When the revision was last used by CodeDeploy.

                 registerTime -> (timestamp)
                     When the revision was registered with CodeDeploy.



                                             BATCH-GET-APPLICATION-REVISIONS()
