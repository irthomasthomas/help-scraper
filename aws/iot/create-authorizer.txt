CREATE-AUTHORIZER()                                        CREATE-AUTHORIZER()



NAME
       create-authorizer -

DESCRIPTION
       Creates an authorizer.

       Requires permission to access the CreateAuthorizer action.

       See also: AWS API Documentation

SYNOPSIS
            create-authorizer
          --authorizer-name <value>
          --authorizer-function-arn <value>
          [--token-key-name <value>]
          [--token-signing-public-keys <value>]
          [--status <value>]
          [--tags <value>]
          [--signing-disabled | --no-signing-disabled]
          [--enable-caching-for-http | --no-enable-caching-for-http]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --authorizer-name (string)
          The authorizer name.

       --authorizer-function-arn (string)
          The ARN of the authorizer's Lambda function.

       --token-key-name (string)
          The  name  of  the token key used to extract the token from the HTTP
          headers.

       --token-signing-public-keys (map)
          The public keys used to verify the  digital  signature  returned  by
          your custom authentication service.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --status (string)
          The status of the create authorizer request.

          Possible values:

          o ACTIVE

          o INACTIVE

       --tags (list)
          Metadata which can be used to manage the custom authorizer.

          NOTE:
              For       URI      Request      parameters      use      format:
              ...key1=value1&key2=value2...

              For  the  CLI  command-line   parameter   use   format:   &&tags
              "key1=value1&key2=value2..."

              For    the    cli-input-json    file    use    format:   "tags":
              "key1=value1&key2=value2..."

          (structure)
              A set of key/value pairs that are used to manage the resource.

              Key -> (string)
                 The tag's key.

              Value -> (string)
                 The tag's value.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --signing-disabled | --no-signing-disabled (boolean)
          Specifies whether IoT validates the token signature in an authoriza-
          tion request.

       --enable-caching-for-http | --no-enable-caching-for-http (boolean)
          When  true  ,  the  result  from  the authorizers Lambda function is
          cached for clients that use persistent HTTP connections. The results
          are  cached  for the time specified by the Lambda function in refre-
          shAfterInSeconds . This  value  does  not  affect  authorization  of
          clients that use MQTT connections.

          The default value is false .

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a custom authorizer

       The  following  create-authorizer  example  creates a custom authorizer
       that uses the specified Lambda function as part of a custom authentica-
       tion service.

             aws iot create-authorizer \
                 --authorizer-name "CustomAuthorizer" \
                 --authorizer-function-arn "arn:aws:lambda:us-west-2:123456789012:function:CustomAuthorizerFunction" \
                 --token-key-name "MyAuthToken" \
                 --status ACTIVE \
                 --token-signing-public-keys FIRST_KEY="-----BEGIN PUBLIC KEY-----
          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1uJOB4lQPgG/lM6ZfIwo
          Z+7ENxAio9q6QD4FFqjGZsvjtYwjoe1RKK0U8Eq9xb5O3kRSmyIwTzwzm/f4Gf0Y
          ZUloJ+t3PUUwHrmbYTAgTrCUgRFygjfgVwGCPs5ZAX4Eyqt5cr+AIHIiUDbxSa7p
          zwOBKPeic0asNJpqT8PkBbRaKyleJh5oo81NDHHmVtbBm5A5YiJjqYXLaVAowKzZ
          +GqsNvAQ9Jy1wI2VrEa1OfL8flDB/BJLm7zjpfPOHDJQgID0XnZwAlNnZcOhCwIx
          50g2LW2Oy9R/dmqtDmJiVP97Z4GykxPvwlYHrUXY0iW1R3AR/Ac1NhCTGZMwVDB1
          lQIDAQAB
          -----END PUBLIC KEY-----"

       Output:

          {
              "authorizerName": "CustomAuthorizer",
              "authorizerArn": "arn:aws:iot:us-west-2:123456789012:authorizer/CustomAuthorizer2"
          }

       For  more  information,  see CreateAuthorizer in the AWS IoT API Refer-
       ence.

OUTPUT
       authorizerName -> (string)
          The authorizer's name.

       authorizerArn -> (string)
          The authorizer ARN.



                                                           CREATE-AUTHORIZER()
