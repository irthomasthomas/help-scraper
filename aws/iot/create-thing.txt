CREATE-THING()                                                  CREATE-THING()



NAME
       create-thing -

DESCRIPTION
       Creates  a  thing record in the registry. If this call is made multiple
       times using the same thing name and configuration, the call  will  suc-
       ceed.  If this call is made with the same thing name but different con-
       figuration a ResourceAlreadyExistsException is thrown.

       NOTE:
          This is a control plane operation. See Authorization for information
          about authorizing control plane actions.

       Requires permission to access the CreateThing action.

       See also: AWS API Documentation

SYNOPSIS
            create-thing
          --thing-name <value>
          [--thing-type-name <value>]
          [--attribute-payload <value>]
          [--billing-group-name <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --thing-name (string)
          The name of the thing to create.

          You  can't  change  a  thing's name after you create it. To change a
          thing's name, you must create a new thing, give it the new name, and
          then delete the old thing.

       --thing-type-name (string)
          The name of the thing type associated with the new thing.

       --attribute-payload (structure)
          The  attribute  payload,  which  consists  of up to three name/value
          pairs in a JSON document. For example:
              {\"attributes\":{\"string1\":\"string2\"}}

          attributes -> (map)
              A JSON string containing up to three key-value pair in JSON for-
              mat. For example:
                 {\"attributes\":{\"string1\":\"string2\"}}

              key -> (string)

              value -> (string)

          merge -> (boolean)
              Specifies  whether  the  list  of attributes provided in the At-
              tributePayload is merged with the attributes stored in the  reg-
              istry, instead of overwriting them.

              To remove an attribute, call UpdateThing with an empty attribute
              value.

              NOTE:
                 The merge attribute is only valid when calling UpdateThing or
                 UpdateThingGroup .

       Shorthand Syntax:

          attributes={KeyName1=string,KeyName2=string},merge=boolean

       JSON Syntax:

          {
            "attributes": {"string": "string"
              ...},
            "merge": true|false
          }

       --billing-group-name (string)
          The name of the billing group the thing will be added to.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       Example 1: To create a thing record in the registry

       The following create-thing example creates an entry for a device in the
       AWS IoT thing registry.

          aws iot create-thing \
              --thing-name SampleIoTThing

       Output:

          {
              "thingName": "SampleIoTThing",
              "thingArn": "arn:aws:iot:us-west-2: 123456789012:thing/SampleIoTThing",
              "thingId": " EXAMPLE1-90ab-cdef-fedc-ba987EXAMPLE "
          }

       Example 2: To define a thing that is associated with a thing type

       The following create-thing example create a thing that has  the  speci-
       fied thing type and its attributes.

          aws iot create-thing \
              --thing-name "MyLightBulb" \
              --thing-type-name "LightBulb" \
              --attribute-payload "{"attributes": {"wattage":"75", "model":"123"}}"

       Output:

          {
              "thingName": "MyLightBulb",
              "thingArn": "arn:aws:iot:us-west-2:123456789012:thing/MyLightBulb",
              "thingId": "40da2e73-c6af-406e-b415-15acae538797"
          }

       For  more  information,  see How to Manage Things with the Registry and
       Thing Types in the AWS IoT Developers Guide.

OUTPUT
       thingName -> (string)
          The name of the new thing.

       thingArn -> (string)
          The ARN of the new thing.

       thingId -> (string)
          The thing ID.



                                                                CREATE-THING()
