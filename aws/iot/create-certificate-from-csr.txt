CREATE-CERTIFICATE-FROM-CSR()                    CREATE-CERTIFICATE-FROM-CSR()



NAME
       create-certificate-from-csr -

DESCRIPTION
       Creates  an  X.509  certificate using the specified certificate signing
       request.

       Requires permission to access the CreateCertificateFromCsr action.

       NOTE:
          The CSR must include a public key that is either an RSA key  with  a
          length  of  at  least  2048 bits or an ECC key from NIST P-256, NIST
          P-384, or NIST P-521 curves.  For  supported  certificates,  consult
          Certificate signing algorithms supported by IoT .

       NOTE:
          Reusing the same certificate signing request (CSR) results in a dis-
          tinct certificate.

       You can create multiple certificates in a batch by  creating  a  direc-
       tory,  copying multiple .csr files into that directory, and then speci-
       fying that directory on the command line. The following  commands  show
       how  to  create  a  batch of certificates given a batch of CSRs. In the
       following commands, we assume that a set of CSRs are located inside  of
       the directory my-csr-directory:

       On Linux and OS X, the command is:
          $  ls  my-csr-directory/  |  xargs  -I  {}  aws  iot create-certifi-
          cate-from-csr   --certificate-signing-request   file://my-csr-direc-
          tory/{}

       This  command  lists all of the CSRs in my-csr-directory and pipes each
       CSR file name to the aws  iot  create-certificate-from-csr  Amazon  Web
       Services CLI command to create a certificate for the corresponding CSR.

       You  can  also  run the aws iot create-certificate-from-csr part of the
       command in parallel to speed up the certificate creation process:
          $ ls my-csr-directory/ | xargs -P 10 -I {} aws  iot  create-certifi-
          cate-from-csr   --certificate-signing-request   file://my-csr-direc-
          tory/{}

       On Windows PowerShell, the command to create certificates for all  CSRs
       in my-csr-directory is:
          >  ls -Name my-csr-directory | %{aws iot create-certificate-from-csr
          --certificate-signing-request file://my-csr-directory/$_}

       On a Windows command prompt, the command to create certificates for all
       CSRs in my-csr-directory is:
          >  forfiles  /p  my-csr-directory /c "cmd /c aws iot create-certifi-
          cate-from-csr --certificate-signing-request file://@path"

       See also: AWS API Documentation

SYNOPSIS
            create-certificate-from-csr
          --certificate-signing-request <value>
          [--set-as-active | --no-set-as-active]
          [--certificate-pem-outfile <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --certificate-signing-request (string)
          The certificate signing request (CSR).

       --set-as-active | --no-set-as-active (boolean)
          Specifies whether the certificate is active.

       --certificate-pem-outfile (string) Saves the command output contents of
       certificatePem to the given filename

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a device certificate from a certificate signing request (CSR)

       The following create-certificate-from-csr example creates a device cer-
       tificate from a CSR. You can use the openssl command to create a CSR.

          aws iot create-certificate-from-csr \
              --certificate-signing-request=file://certificate.csr

       Output:

          {
              "certificateArn": "arn:aws:iot:us-west-2:123456789012:cert/c0c57bbc8baaf4631a9a0345c957657f5e710473e3ddbee1428d216d54d53ac9",
                  "certificateId": "c0c57bbc8baaf4631a9a0345c957657f5e710473e3ddbee1428d216d54d53ac9",
                  "certificatePem": "<certificate-text>"
          }

       For  more  information, see CreateCertificateFromCSR in the AWS IoT API
       Reference.

OUTPUT
       certificateArn -> (string)
          The Amazon Resource Name (ARN) of the certificate. You can  use  the
          ARN as a principal for policy operations.

       certificateId -> (string)
          The  ID  of  the certificate. Certificate management operations only
          take a certificateId.

       certificatePem -> (string)
          The certificate data, in PEM format.



                                                 CREATE-CERTIFICATE-FROM-CSR()
