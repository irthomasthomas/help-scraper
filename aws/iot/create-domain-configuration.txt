CREATE-DOMAIN-CONFIGURATION()                    CREATE-DOMAIN-CONFIGURATION()



NAME
       create-domain-configuration -

DESCRIPTION
       Creates a domain configuration.

       Requires permission to access the CreateDomainConfiguration action.

       See also: AWS API Documentation

SYNOPSIS
            create-domain-configuration
          --domain-configuration-name <value>
          [--domain-name <value>]
          [--server-certificate-arns <value>]
          [--validation-certificate-arn <value>]
          [--authorizer-config <value>]
          [--service-type <value>]
          [--tags <value>]
          [--tls-config <value>]
          [--server-certificate-config <value>]
          [--authentication-type <value>]
          [--application-protocol <value>]
          [--client-certificate-config <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --domain-configuration-name (string)
          The name of the domain configuration. This value must be unique to a
          region.

       --domain-name (string)
          The name of the domain.

       --server-certificate-arns (list)
          The ARNs of the certificates that IoT passes to  the  device  during
          the  TLS  handshake.  Currently you can specify only one certificate
          ARN. This value is not required for Amazon Web Services-managed  do-
          mains.

          (string)

       Syntax:

          "string" "string" ...

       --validation-certificate-arn (string)
          The  certificate  used  to validate the server certificate and prove
          domain name ownership. This certificate must be signed by  a  public
          certificate  authority.  This  value  is not required for Amazon Web
          Services-managed domains.

       --authorizer-config (structure)
          An object that specifies the authorization service for a domain.

          defaultAuthorizerName -> (string)
              The name of the authorization service for  a  domain  configura-
              tion.

          allowAuthorizerOverride -> (boolean)
              A  Boolean that specifies whether the domain configuration's au-
              thorization service can be overridden.

       Shorthand Syntax:

          defaultAuthorizerName=string,allowAuthorizerOverride=boolean

       JSON Syntax:

          {
            "defaultAuthorizerName": "string",
            "allowAuthorizerOverride": true|false
          }

       --service-type (string)
          The type of service delivered by the endpoint.

          NOTE:
              Amazon Web Services IoT Core currently supports  only  the  DATA
              service type.

          Possible values:

          o DATA

          o CREDENTIAL_PROVIDER

          o JOBS

       --tags (list)
          Metadata which can be used to manage the domain configuration.

          NOTE:
              For       URI      Request      parameters      use      format:
              ...key1=value1&key2=value2...

              For  the  CLI  command-line   parameter   use   format:   &&tags
              "key1=value1&key2=value2..."

              For    the    cli-input-json    file    use    format:   "tags":
              "key1=value1&key2=value2..."

          (structure)
              A set of key/value pairs that are used to manage the resource.

              Key -> (string)
                 The tag's key.

              Value -> (string)
                 The tag's value.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --tls-config (structure)
          An object that specifies the TLS configuration for a domain.

          securityPolicy -> (string)
              The security policy for a domain configuration. For more  infor-
              mation,  see  Security  policies  in the Amazon Web Services IoT
              Core developer guide .

       Shorthand Syntax:

          securityPolicy=string

       JSON Syntax:

          {
            "securityPolicy": "string"
          }

       --server-certificate-config (structure)
          The server certificate configuration.

          enableOCSPCheck -> (boolean)
              A Boolean value that indicates whether Online Certificate Status
              Protocol (OCSP) server certificate check is enabled or not.

              For  more  information, see Server certificate configuration for
              OCSP stapling from Amazon Web Services IoT Core Developer Guide.

          ocspLambdaArn -> (string)
              The Amazon Resource Name (ARN) for a Lambda function  that  acts
              as  a  Request for Comments (RFC) 6960-compliant Online Certifi-
              cate Status Protocol (OCSP) responder, supporting basic OCSP re-
              sponses.  The  Lambda  function accepts a base64-encoding of the
              OCSP request in the Distinguished Encoding Rules  (DER)  format.
              The Lambda function's response is also a base64-encoded OCSP re-
              sponse in the DER format. The response size must  not  exceed  4
              kilobytes  (KiB). The Lambda function must be in the same Amazon
              Web Services account and region as the domain configuration. For
              more  information,  see  Configuring server certificate OCSP for
              private endpoints in Amazon Web Services IoT Core from the  Ama-
              zon Web Services IoT Core developer guide.

          ocspAuthorizedResponderArn -> (string)
              The  Amazon  Resource Name (ARN) for an X.509 certificate stored
              in Amazon Web Services Certificate Manager (ACM).  If  provided,
              Amazon  Web Services IoT Core will use this certificate to vali-
              date the signature of the received OCSP response. The  OCSP  re-
              sponder must sign responses using either this authorized respon-
              der certificate or the issuing certificate, depending on whether
              the  ARN is provided or not. The certificate must be in the same
              Amazon Web Services account and region as the domain  configura-
              tion.

       Shorthand Syntax:

          enableOCSPCheck=boolean,ocspLambdaArn=string,ocspAuthorizedResponderArn=string

       JSON Syntax:

          {
            "enableOCSPCheck": true|false,
            "ocspLambdaArn": "string",
            "ocspAuthorizedResponderArn": "string"
          }

       --authentication-type (string)
          An enumerated string that species the authentication type.

          o CUSTOM_AUTH_X509  -  Use  custom  authentication and authorization
            with additional details from the X.509 client certificate.

          o CUSTOM_AUTH - Use custom  authentication  and  authorization.  For
            more information, see Custom authentication and authorization .

          o AWS_X509  - Use X.509 client certificates without custom authenti-
            cation and authorization. For more information, see  X.509  client
            certificates .

          o AWS_SIGV4  - Use Amazon Web Services Signature Version 4. For more
            information, see IAM users, groups, and roles .

          o DEFAULT - Use a combination of port and Application Layer Protocol
            Negotiation (ALPN) to specify authentication type. For more infor-
            mation, see Device communication protocols .

          Possible values:

          o CUSTOM_AUTH_X509

          o CUSTOM_AUTH

          o AWS_X509

          o AWS_SIGV4

          o DEFAULT

       --application-protocol (string)
          An enumerated string that species the application-layer protocol.

          o SECURE_MQTT - MQTT over TLS.

          o MQTT_WSS - MQTT over WebSocket.

          o HTTPS - HTTP over TLS.

          o DEFAULT - Use a combination of port and Application Layer Protocol
            Negotiation (ALPN) to specify application_layer protocol. For more
            information, see Device communication protocols .

          Possible values:

          o SECURE_MQTT

          o MQTT_WSS

          o HTTPS

          o DEFAULT

       --client-certificate-config (structure)
          An object that species the client certificate conguration for a  do-
          main.

          clientCertificateCallbackArn -> (string)
              The ARN of the Lambda function that IoT invokes after mutual TLS
              authentication during the connection.

       Shorthand Syntax:

          clientCertificateCallbackArn=string

       JSON Syntax:

          {
            "clientCertificateCallbackArn": "string"
          }

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a domain configuration

       The  following  create-domain-configuration example creates an AWS-man-
       aged domain configuration with a service type of DATA.

          aws iot create-domain-configuration \
              --domain-configuration-name "additionalDataDomain" \
              --service-type "DATA"

       Output:

          {
              "domainConfigurationName": "additionalDataDomain",
              "domainConfigurationArn": "arn:aws:iot:us-west-2:123456789012:domainconfiguration/additionalDataDomain/dikMh"
          }

       For more information, see Configurable Endpoints in the AWS IoT  Devel-
       oper Guide.

OUTPUT
       domainConfigurationName -> (string)
          The name of the domain configuration.

       domainConfigurationArn -> (string)
          The ARN of the domain configuration.



                                                 CREATE-DOMAIN-CONFIGURATION()
