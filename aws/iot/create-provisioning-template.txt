CREATE-PROVISIONING-TEMPLATE()                  CREATE-PROVISIONING-TEMPLATE()



NAME
       create-provisioning-template -

DESCRIPTION
       Creates a provisioning template.

       Requires permission to access the CreateProvisioningTemplate action.

       See also: AWS API Documentation

SYNOPSIS
            create-provisioning-template
          --template-name <value>
          [--description <value>]
          --template-body <value>
          [--enabled | --no-enabled]
          --provisioning-role-arn <value>
          [--pre-provisioning-hook <value>]
          [--tags <value>]
          [--type <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --template-name (string)
          The name of the provisioning template.

       --description (string)
          The description of the provisioning template.

       --template-body (string)
          The JSON formatted contents of the provisioning template.

       --enabled | --no-enabled (boolean)
          True to enable the provisioning template, otherwise false.

       --provisioning-role-arn (string)
          The role ARN for the role associated with the provisioning template.
          This IoT role grants permission to provision a device.

       --pre-provisioning-hook (structure)
          Creates a pre-provisioning hook template.

          payloadVersion -> (string)
              The payload that was sent to the target function.
                 Note: Only Lambda functions are currently supported.

          targetArn -> (string)
              The ARN of the target function.
                 Note: Only Lambda functions are currently supported.

       Shorthand Syntax:

          payloadVersion=string,targetArn=string

       JSON Syntax:

          {
            "payloadVersion": "string",
            "targetArn": "string"
          }

       --tags (list)
          Metadata which can be used to manage the provisioning template.

          NOTE:
              For      URI      Request      parameters      use       format:
              ...key1=value1&key2=value2...

              For   the   CLI   command-line   parameter  use  format:  &&tags
              "key1=value1&key2=value2..."

              For   the    cli-input-json    file    use    format:    "tags":
              "key1=value1&key2=value2..."

          (structure)
              A set of key/value pairs that are used to manage the resource.

              Key -> (string)
                 The tag's key.

              Value -> (string)
                 The tag's value.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --type (string)
          The  type  you  define  in a provisioning template. You can create a
          template with only one type. You can't change the template type  af-
          ter its creation. The default value is FLEET_PROVISIONING . For more
          information about provisioning template, see: Provisioning  template
          .

          Possible values:

          o FLEET_PROVISIONING

          o JITP

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a provisioning template

       The following create-provisioning-template example creates a provision-
       ing template as defined by the file template.json.

          aws iot create-provisioning-template \
              --template-name widget-template \
              --description "A provisioning template for widgets" \
              --provisioning-role-arn arn:aws:iam::123456789012:role/Provision_role \
              --template-body file://template.json

       Contents of template.json:

          {
              "Parameters" : {
                  "DeviceLocation": {
                      "Type": "String"
                  }
              },
              "Mappings": {
                  "LocationTable": {
                      "Seattle": {
                          "LocationUrl": "https://example.aws"
                      }
                  }
              },
              "Resources" : {
                  "thing" : {
                      "Type" : "AWS::IoT::Thing",
                      "Properties" : {
                          "AttributePayload" : {
                              "version" : "v1",
                              "serialNumber" : "serialNumber"
                          },
                          "ThingName" : {"Fn::Join":["",["ThingPrefix_",{"Ref":"SerialNumber"}]]},
                          "ThingTypeName" : {"Fn::Join":["",["ThingTypePrefix_",{"Ref":"SerialNumber"}]]},
                          "ThingGroups" : ["widgets", "WA"],
                          "BillingGroup": "BillingGroup"
                      },
                      "OverrideSettings" : {
                          "AttributePayload" : "MERGE",
                          "ThingTypeName" : "REPLACE",
                          "ThingGroups" : "DO_NOTHING"
                      }
                  },
                  "certificate" : {
                      "Type" : "AWS::IoT::Certificate",
                      "Properties" : {
                          "CertificateId": {"Ref": "AWS::IoT::Certificate::Id"},
                          "Status" : "Active"
                      }
                  },
                  "policy" : {
                      "Type" : "AWS::IoT::Policy",
                      "Properties" : {
                          "PolicyDocument" : {
                              "Version": "2012-10-17",
                              "Statement": [{
                                  "Effect": "Allow",
                                  "Action":["iot:Publish"],
                                  "Resource": ["arn:aws:iot:us-east-1:504350838278:topic/foo/bar"]
                              }]
                          }
                      }
                  }
              },
              "DeviceConfiguration": {
                  "FallbackUrl": "https://www.example.com/test-site",
                  "LocationUrl": {
                      "Fn::FindInMap": ["LocationTable",{"Ref": "DeviceLocation"}, "LocationUrl"]}
                  }
              }
          }

       Output:

          {
              "templateArn": "arn:aws:iot:us-east-1:123456789012:provisioningtemplate/widget-template",
              "templateName": "widget-template",
              "defaultVersionId": 1
          }

       For more information, see AWS IoT Secure Tunneling in the AWS IoT  Core
       Developer Guide.

OUTPUT
       templateArn -> (string)
          The ARN that identifies the provisioning template.

       templateName -> (string)
          The name of the provisioning template.

       defaultVersionId -> (integer)
          The default version of the provisioning template.



                                                CREATE-PROVISIONING-TEMPLATE()
