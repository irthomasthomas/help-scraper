CREATE-POLICY()                                                CREATE-POLICY()



NAME
       create-policy -

DESCRIPTION
       Creates an IoT policy.

       The  created  policy is the default version for the policy. This opera-
       tion creates a policy version with a version identifier of 1 and sets 1
       as the policy's default version.

       Requires permission to access the CreatePolicy action.

       See also: AWS API Documentation

SYNOPSIS
            create-policy
          --policy-name <value>
          --policy-document <value>
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --policy-name (string)
          The policy name.

       --policy-document (string)
          The  JSON  document  that  describes the policy. policyDocument must
          have a minimum length of 1, with a maximum length of 2048, excluding
          whitespace.

       --tags (list)
          Metadata which can be used to manage the policy.

          NOTE:
              For       URI      Request      parameters      use      format:
              ...key1=value1&key2=value2...

              For  the  CLI  command-line   parameter   use   format:   &&tags
              "key1=value1&key2=value2..."

              For    the    cli-input-json    file    use    format:   "tags":
              "key1=value1&key2=value2..."

          (structure)
              A set of key/value pairs that are used to manage the resource.

              Key -> (string)
                 The tag's key.

              Value -> (string)
                 The tag's value.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create an AWS IoT policy

       The  following  create-policy  example  creates an AWS IoT policy named
       TemperatureSensorPolicy. The policy.json file contains statements  that
       allow AWS IoT policy actions.

          aws iot create-policy \
              --policy-name TemperatureSensorPolicy \
              --policy-document file://policy.json

       Contents of policy.json:

          {
              "Version": "2012-10-17",
              "Statement": [
                  {
                      "Effect": "Allow",
                      "Action": [
                          "iot:Publish",
                          "iot:Receive"
                      ],
                      "Resource": [
                          "arn:aws:iot:us-west-2:123456789012:topic/topic_1",
                          "arn:aws:iot:us-west-2:123456789012:topic/topic_2"
                      ]
                  },
                  {
                      "Effect": "Allow",
                      "Action": [
                          "iot:Subscribe"
                      ],
                      "Resource": [
                          "arn:aws:iot:us-west-2:123456789012:topicfilter/topic_1",
                          "arn:aws:iot:us-west-2:123456789012:topicfilter/topic_2"
                      ]
                  },
                  {
                      "Effect": "Allow",
                      "Action": [
                          "iot:Connect"
                      ],
                      "Resource": [
                          "arn:aws:iot:us-west-2:123456789012:client/basicPubSub"
                      ]
                  }
              ]
          }

       Output:

          {
              "policyName": "TemperatureSensorPolicy",
              "policyArn": "arn:aws:iot:us-west-2:123456789012:policy/TemperatureSensorPolicy",
              "policyDocument": "{
                  \"Version\": \"2012-10-17\",
                  \"Statement\": [
                      {
                          \"Effect\": \"Allow\",
                          \"Action\": [
                              \"iot:Publish\",
                              \"iot:Receive\"
                          ],
                          \"Resource\": [
                              \"arn:aws:iot:us-west-2:123456789012:topic/topic_1\",
                              \"arn:aws:iot:us-west-2:123456789012:topic/topic_2\"
                          ]
                      },
                      {
                          \"Effect\": \"Allow\",
                          \"Action\": [
                              \"iot:Subscribe\"
                          ],
                          \"Resource\": [
                              \"arn:aws:iot:us-west-2:123456789012:topicfilter/topic_1\",
                              \"arn:aws:iot:us-west-2:123456789012:topicfilter/topic_2\"
                          ]
                      },
                      {
                          \"Effect\": \"Allow\",
                          \"Action\": [
                              \"iot:Connect\"
                          ],
                          \"Resource\": [
                              \"arn:aws:iot:us-west-2:123456789012:client/basicPubSub\"
                          ]
                      }
                  ]
              }",
              "policyVersionId": "1"
          }

       For  more  information,  see AWS IoT Policies in the AWS IoT Developers
       Guide.

OUTPUT
       policyName -> (string)
          The policy name.

       policyArn -> (string)
          The policy ARN.

       policyDocument -> (string)
          The JSON document that describes the policy.

       policyVersionId -> (string)
          The policy version ID.



                                                               CREATE-POLICY()
