CREATE-INDEX()                                                  CREATE-INDEX()



NAME
       create-index -

DESCRIPTION
       Creates  an Amazon Kendra index. Index creation is an asynchronous API.
       To determine if index creation has completed, check  the  Status  field
       returned  from a call to DescribeIndex . The Status field is set to AC-
       TIVE when the index is ready to use.

       Once the index is active you can index your documents using the  Batch-
       PutDocument API or using one of the supported data sources.

       For  an  example  of creating an index and data source using the Python
       SDK, see Getting started with Python SDK . For an example  of  creating
       an  index  and data source using the Java SDK, see Getting started with
       Java SDK .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-index
          --name <value>
          [--edition <value>]
          --role-arn <value>
          [--server-side-encryption-configuration <value>]
          [--description <value>]
          [--client-token <value>]
          [--tags <value>]
          [--user-token-configurations <value>]
          [--user-context-policy <value>]
          [--user-group-resolution-configuration <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --name (string)
          A name for the index.

       --edition (string)
          The Amazon Kendra edition  to  use  for  the  index.  Choose  DEVEL-
          OPER_EDITION for indexes intended for development, testing, or proof
          of concept. Use ENTERPRISE_EDITION for  your  production  databases.
          Once you set the edition for an index, it can't be changed.

          The  Edition parameter is optional. If you don't supply a value, the
          default is ENTERPRISE_EDITION .

          For more information on quota limits for  enterprise  and  developer
          editions, see Quotas .

          Possible values:

          o DEVELOPER_EDITION

          o ENTERPRISE_EDITION

       --role-arn (string)
          An  Identity  and  Access  Management  (IAM)  role that gives Amazon
          Kendra permissions to access your Amazon CloudWatch  logs  and  met-
          rics.  This is also the role you use when you call the BatchPutDocu-
          ment API to index documents from an Amazon S3 bucket.

       --server-side-encryption-configuration (structure)
          The identifier of the KMS customer managed key (CMK) that's used  to
          encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support
          asymmetric CMKs.

          KmsKeyId -> (string)
              The identifier of the KMS key.  Amazon  Kendra  doesn't  support
              asymmetric keys.

       Shorthand Syntax:

          KmsKeyId=string

       JSON Syntax:

          {
            "KmsKeyId": "string"
          }

       --description (string)
          A description for the index.

       --client-token (string)
          A token that you provide to identify the request to create an index.
          Multiple calls to the CreateIndex API with  the  same  client  token
          will create only one index.

       --tags (list)
          A  list  of key-value pairs that identify the index. You can use the
          tags to identify and organize your resources and to  control  access
          to resources.

          (structure)
              A  list  of key/value pairs that identify an index, FAQ, or data
              source. Tag keys and values can consist of Unicode letters, dig-
              its,  white space, and any of the following symbols: _ . : / = +
              - @.

              Key -> (string)
                 The key for the tag. Keys are not case sensitive and must  be
                 unique for the index, FAQ, or data source.

              Value -> (string)
                 The  value associated with the tag. The value may be an empty
                 string but it can't be null.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --user-token-configurations (list)
          The user token configuration.

          (structure)
              Provides the configuration information for a token.

              JwtTokenTypeConfiguration -> (structure)
                 Information about the JWT token type configuration.

                 KeyLocation -> (string)
                     The location of the key.

                 URL -> (string)
                     The signing key URL.

                 SecretManagerArn -> (string)
                     The Amazon Resource Name (arn) of the secret.

                 UserNameAttributeField -> (string)
                     The user name attribute field.

                 GroupAttributeField -> (string)
                     The group attribute field.

                 Issuer -> (string)
                     The issuer of the token.

                 ClaimRegex -> (string)
                     The regular expression that identifies the claim.

              JsonTokenTypeConfiguration -> (structure)
                 Information about the JSON token type configuration.

                 UserNameAttributeField -> (string)
                     The user name attribute field.

                 GroupAttributeField -> (string)
                     The group attribute field.

       Shorthand Syntax:

          JwtTokenTypeConfiguration={KeyLocation=string,URL=string,SecretManagerArn=string,UserNameAttributeField=string,GroupAttributeField=string,Issuer=string,ClaimRegex=string},JsonTokenTypeConfiguration={UserNameAttributeField=string,GroupAttributeField=string} ...

       JSON Syntax:

          [
            {
              "JwtTokenTypeConfiguration": {
                "KeyLocation": "URL"|"SECRET_MANAGER",
                "URL": "string",
                "SecretManagerArn": "string",
                "UserNameAttributeField": "string",
                "GroupAttributeField": "string",
                "Issuer": "string",
                "ClaimRegex": "string"
              },
              "JsonTokenTypeConfiguration": {
                "UserNameAttributeField": "string",
                "GroupAttributeField": "string"
              }
            }
            ...
          ]

       --user-context-policy (string)
          The user context policy.
              ATTRIBUTE_FILTER

          All indexed content is searchable and displayable for all users.  If
          you  want  to filter search results on user context, you can use the
          attribute filters of _user_id and _group_ids or you can provide user
          and group information in UserContext .
              USER_TOKEN

          Enables  token-based user access control to filter search results on
          user context. All documents with no access control and all documents
          accessible to the user will be searchable and displayable.

          Possible values:

          o ATTRIBUTE_FILTER

          o USER_TOKEN

       --user-group-resolution-configuration (structure)
          Enables  fetching  access  levels of groups and users from an Amazon
          Web Services Single Sign On identity source. To configure this,  see
          UserGroupResolutionConfiguration .

          UserGroupResolutionMode -> (string)
              The  identity store provider (mode) you want to use to fetch ac-
              cess levels of groups and users. Amazon Web Services Single Sign
              On  is  currently the only available mode. Your users and groups
              must exist in an Amazon Web Services SSO identity source in  or-
              der to use this mode.

       Shorthand Syntax:

          UserGroupResolutionMode=string

       JSON Syntax:

          {
            "UserGroupResolutionMode": "AWS_SSO"|"NONE"
          }

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       Id -> (string)
          The unique identifier of the index. Use  this  identifier  when  you
          query an index, set up a data source, or index a document.



                                                                CREATE-INDEX()
