MODIFY-TARGET-GROUP-ATTRIBUTES()              MODIFY-TARGET-GROUP-ATTRIBUTES()



NAME
       modify-target-group-attributes -

DESCRIPTION
       Modifies the specified attributes of the specified target group.

       See also: AWS API Documentation

SYNOPSIS
            modify-target-group-attributes
          --target-group-arn <value>
          --attributes <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --target-group-arn (string)
          The Amazon Resource Name (ARN) of the target group.

       --attributes (list)
          The target group attributes.

          (structure)
              Information about a target group attribute.

              Key -> (string)
                 The name of the attribute.

                 The following attributes are supported by all load balancers:

                 o deregistration_delay.timeout_seconds  - The amount of time,
                   in seconds, for  Elastic  Load  Balancing  to  wait  before
                   changing  the state of a deregistering target from draining
                   to unused . The range is 0-3600 seconds. The default  value
                   is  300  seconds.  If the target is a Lambda function, this
                   attribute is not supported.

                 o stickiness.enabled - Indicates whether target stickiness is
                   enabled.  The value is true or false . The default is false
                   .

                 o stickiness.type - Indicates the  type  of  stickiness.  The
                   possible values are:

                   o lb_cookie and app_cookie for Application Load Balancers.

                   o source_ip for Network Load Balancers.

                   o source_ip_dest_ip and source_ip_dest_ip_proto for Gateway
                     Load Balancers.

                 The following attributes are supported  by  Application  Load
                 Balancers and Network Load Balancers:

                 o load_balancing.cross_zone.enabled - Indicates whether cross
                   zone load balancing is enabled. The value is true  ,  false
                   or   use_load_balancer_configuration   .   The  default  is
                   use_load_balancer_configuration .

                 o target_group_health.dns_failover.minimum_healthy_tar-
                   gets.count  -  The  minimum  number of targets that must be
                   healthy. If the number of healthy  targets  is  below  this
                   value,  mark  the zone as unhealthy in DNS, so that traffic
                   is routed only to healthy zones. The  possible  values  are
                   off  or an integer from 1 to the maximum number of targets.
                   The default is off .

                 o target_group_health.dns_failover.minimum_healthy_tar-
                   gets.percentage  -  The  minimum percentage of targets that
                   must be healthy. If the percentage of  healthy  targets  is
                   below  this  value,  mark  the zone as unhealthy in DNS, so
                   that traffic is routed only to healthy zones. The  possible
                   values  are off or an integer from 1 to 100. The default is
                   off .

                 o target_group_health.unhealthy_state_routing.mini-
                   mum_healthy_targets.count  -  The minimum number of targets
                   that must be healthy. If the number of healthy  targets  is
                   below  this  value,  send traffic to all targets, including
                   unhealthy targets. The possible values are 1 to the maximum
                   number of targets. The default is 1.

                 o target_group_health.unhealthy_state_routing.mini-
                   mum_healthy_targets.percentage - The minimum percentage  of
                   targets  that must be healthy. If the percentage of healthy
                   targets is below this value, send traffic to  all  targets,
                   including unhealthy targets. The possible values are off or
                   an integer from 1 to 100. The default is off .

                 The following attributes are supported only if the load  bal-
                 ancer  is  an  Application Load Balancer and the target is an
                 instance or an IP address:

                 o load_balancing.algorithm.type - The  load  balancing  algo-
                   rithm determines how the load balancer selects targets when
                   routing requests. The value  is  round_robin  ,  least_out-
                   standing_requests  ,  or  weighted_random  . The default is
                   round_robin .

                 o load_balancing.algorithm.anomaly_mitigation -  Only  avail-
                   able  when load_balancing.algorithm.type is weighted_random
                   . Indicates whether  anomaly  mitigation  is  enabled.  The
                   value is on or off . The default is off .

                 o slow_start.duration_seconds  - The time period, in seconds,
                   during which a newly registered target receives an increas-
                   ing  share  of  the traffic to the target group. After this
                   time period ends, the target receives  its  full  share  of
                   traffic.  The range is 30-900 seconds (15 minutes). The de-
                   fault is 0 seconds (disabled).

                 o stickiness.app_cookie.cookie_name - Indicates the  name  of
                   the  application-based  cookie.  Names  that start with the
                   following prefixes are not allowed: AWSALB  ,  AWSALBAPP  ,
                   and  AWSALBTG  ;  they're reserved for use by the load bal-
                   ancer.

                 o stickiness.app_cookie.duration_seconds - The  time  period,
                   in  seconds,  during which requests from a client should be
                   routed to the same target. After this time period  expires,
                   the application-based cookie is considered stale. The range
                   is 1 second to 1 week (604800 seconds). The  default  value
                   is 1 day (86400 seconds).

                 o stickiness.lb_cookie.duration_seconds - The time period, in
                   seconds, during which requests  from  a  client  should  be
                   routed  to the same target. After this time period expires,
                   the load balancer-generated cookie is considered stale. The
                   range  is  1 second to 1 week (604800 seconds). The default
                   value is 1 day (86400 seconds).

                 The following attribute is supported only if  the  load  bal-
                 ancer  is  an  Application  Load Balancer and the target is a
                 Lambda function:

                 o lambda.multi_value_headers.enabled - Indicates whether  the
                   request and response headers that are exchanged between the
                   load balancer and the Lambda  function  include  arrays  of
                   values or strings. The value is true or false . The default
                   is false . If the value is false and the request contains a
                   duplicate  header  field  name  or query parameter key, the
                   load balancer uses the last value sent by the client.

                 The following attributes are supported only by  Network  Load
                 Balancers:

                 o deregistration_delay.connection_termination.enabled - Indi-
                   cates whether the load balancer terminates  connections  at
                   the end of the deregistration timeout. The value is true or
                   false . For new UDP/TCP_UDP target groups  the  default  is
                   true . Otherwise, the default is false .

                 o preserve_client_ip.enabled  -  Indicates  whether client IP
                   preservation is enabled. The value is true or false  .  The
                   default  is disabled if the target group type is IP address
                   and the target group protocol is TCP or TLS. Otherwise, the
                   default  is  enabled. Client IP preservation cannot be dis-
                   abled for UDP and TCP_UDP target groups.

                 o proxy_protocol_v2.enabled - Indicates whether Proxy  Proto-
                   col  version 2 is enabled. The value is true or false . The
                   default is false .

                 o target_health_state.unhealthy.connection_termination.en-
                   abled - Indicates whether the load balancer terminates con-
                   nections to unhealthy targets. The value is true or false .
                   The default is true .

                 o target_health_state.unhealthy.draining_interval_seconds   -
                   The amount of time for Elastic Load Balancing to  wait  be-
                   fore  changing  the  state  of an unhealthy target from un-
                   healthy.draining to unhealthy . The range is 0-360000  sec-
                   onds.  The default value is 0 seconds. Note: This attribute
                   can  only  be   configured   when   target_health_state.un-
                   healthy.connection_termination.enabled is false .

                 The  following  attributes are supported only by Gateway Load
                 Balancers:

                 o target_failover.on_deregistration - Indicates how the Gate-
                   way  Load  Balancer handles existing flows when a target is
                   deregistered. The possible values are rebalance and  no_re-
                   balance  . The default is no_rebalance . The two attributes
                   (target_failover.on_deregistration         and         tar-
                   get_failover.on_unhealthy ) can't be set independently. The
                   value you set for both attributes must be the same.

                 o target_failover.on_unhealthy - Indicates  how  the  Gateway
                   Load  Balancer  handles existing flows when a target is un-
                   healthy. The possible values are rebalance and no_rebalance
                   .  The  default  is no_rebalance . The two attributes (tar-
                   get_failover.on_deregistration  and  target_failover.on_un-
                   healthy  )  cannot  be set independently. The value you set
                   for both attributes must be the same.

              Value -> (string)
                 The value of the attribute.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To modify the deregistration delay timeout

       This  example  sets  the  deregistration delay timeout to the specified
       value for the specified target group.

       Command:

          aws elbv2 modify-target-group-attributes --target-group-arn arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067 --attributes Key=deregistration_delay.timeout_seconds,Value=600

       Output:

          {
            "Attributes": [
                {
                    "Value": "false",
                    "Key": "stickiness.enabled"
                },
                {
                    "Value": "600",
                    "Key": "deregistration_delay.timeout_seconds"
                },
                {
                    "Value": "lb_cookie",
                    "Key": "stickiness.type"
                },
                {
                    "Value": "86400",
                    "Key": "stickiness.lb_cookie.duration_seconds"
                }
            ]
          }

OUTPUT
       Attributes -> (list)
          Information about the target group attributes.

          (structure)
              Information about a target group attribute.

              Key -> (string)
                 The name of the attribute.

                 The following attributes are supported by all load balancers:

                 o deregistration_delay.timeout_seconds - The amount of  time,
                   in  seconds,  for  Elastic  Load  Balancing  to wait before
                   changing the state of a deregistering target from  draining
                   to  unused . The range is 0-3600 seconds. The default value
                   is 300 seconds. If the target is a  Lambda  function,  this
                   attribute is not supported.

                 o stickiness.enabled - Indicates whether target stickiness is
                   enabled. The value is true or false . The default is  false
                   .

                 o stickiness.type  -  Indicates  the  type of stickiness. The
                   possible values are:

                   o lb_cookie and app_cookie for Application Load Balancers.

                   o source_ip for Network Load Balancers.

                   o source_ip_dest_ip and source_ip_dest_ip_proto for Gateway
                     Load Balancers.

                 The  following  attributes  are supported by Application Load
                 Balancers and Network Load Balancers:

                 o load_balancing.cross_zone.enabled - Indicates whether cross
                   zone  load  balancing is enabled. The value is true , false
                   or  use_load_balancer_configuration  .   The   default   is
                   use_load_balancer_configuration .

                 o target_group_health.dns_failover.minimum_healthy_tar-
                   gets.count - The minimum number of  targets  that  must  be
                   healthy.  If  the  number  of healthy targets is below this
                   value, mark the zone as unhealthy in DNS, so  that  traffic
                   is  routed  only  to healthy zones. The possible values are
                   off or an integer from 1 to the maximum number of  targets.
                   The default is off .

                 o target_group_health.dns_failover.minimum_healthy_tar-
                   gets.percentage - The minimum percentage  of  targets  that
                   must  be  healthy.  If the percentage of healthy targets is
                   below this value, mark the zone as  unhealthy  in  DNS,  so
                   that  traffic is routed only to healthy zones. The possible
                   values are off or an integer from 1 to 100. The default  is
                   off .

                 o target_group_health.unhealthy_state_routing.mini-
                   mum_healthy_targets.count - The minimum number  of  targets
                   that  must  be healthy. If the number of healthy targets is
                   below this value, send traffic to  all  targets,  including
                   unhealthy targets. The possible values are 1 to the maximum
                   number of targets. The default is 1.

                 o target_group_health.unhealthy_state_routing.mini-
                   mum_healthy_targets.percentage  - The minimum percentage of
                   targets that must be healthy. If the percentage of  healthy
                   targets  is  below this value, send traffic to all targets,
                   including unhealthy targets. The possible values are off or
                   an integer from 1 to 100. The default is off .

                 The  following attributes are supported only if the load bal-
                 ancer is an Application Load Balancer and the  target  is  an
                 instance or an IP address:

                 o load_balancing.algorithm.type  -  The  load balancing algo-
                   rithm determines how the load balancer selects targets when
                   routing  requests.  The  value  is round_robin , least_out-
                   standing_requests , or weighted_random  .  The  default  is
                   round_robin .

                 o load_balancing.algorithm.anomaly_mitigation  -  Only avail-
                   able when load_balancing.algorithm.type is  weighted_random
                   .  Indicates  whether  anomaly  mitigation  is enabled. The
                   value is on or off . The default is off .

                 o slow_start.duration_seconds - The time period, in  seconds,
                   during which a newly registered target receives an increas-
                   ing share of the traffic to the target  group.  After  this
                   time  period  ends,  the  target receives its full share of
                   traffic. The range is 30-900 seconds (15 minutes). The  de-
                   fault is 0 seconds (disabled).

                 o stickiness.app_cookie.cookie_name  -  Indicates the name of
                   the application-based cookie. Names  that  start  with  the
                   following  prefixes  are  not allowed: AWSALB , AWSALBAPP ,
                   and AWSALBTG ; they're reserved for use by  the  load  bal-
                   ancer.

                 o stickiness.app_cookie.duration_seconds  -  The time period,
                   in seconds, during which requests from a client  should  be
                   routed  to the same target. After this time period expires,
                   the application-based cookie is considered stale. The range
                   is  1  second to 1 week (604800 seconds). The default value
                   is 1 day (86400 seconds).

                 o stickiness.lb_cookie.duration_seconds - The time period, in
                   seconds,  during  which  requests  from  a client should be
                   routed to the same target. After this time period  expires,
                   the load balancer-generated cookie is considered stale. The
                   range is 1 second to 1 week (604800 seconds).  The  default
                   value is 1 day (86400 seconds).

                 The  following  attribute  is supported only if the load bal-
                 ancer is an Application Load Balancer and  the  target  is  a
                 Lambda function:

                 o lambda.multi_value_headers.enabled  - Indicates whether the
                   request and response headers that are exchanged between the
                   load  balancer  and  the  Lambda function include arrays of
                   values or strings. The value is true or false . The default
                   is false . If the value is false and the request contains a
                   duplicate header field name or  query  parameter  key,  the
                   load balancer uses the last value sent by the client.

                 The  following  attributes are supported only by Network Load
                 Balancers:

                 o deregistration_delay.connection_termination.enabled - Indi-
                   cates  whether  the load balancer terminates connections at
                   the end of the deregistration timeout. The value is true or
                   false  .  For  new UDP/TCP_UDP target groups the default is
                   true . Otherwise, the default is false .

                 o preserve_client_ip.enabled - Indicates  whether  client  IP
                   preservation  is  enabled. The value is true or false . The
                   default is disabled if the target group type is IP  address
                   and the target group protocol is TCP or TLS. Otherwise, the
                   default is enabled. Client IP preservation cannot  be  dis-
                   abled for UDP and TCP_UDP target groups.

                 o proxy_protocol_v2.enabled  - Indicates whether Proxy Proto-
                   col version 2 is enabled. The value is true or false .  The
                   default is false .

                 o target_health_state.unhealthy.connection_termination.en-
                   abled - Indicates whether the load balancer terminates con-
                   nections to unhealthy targets. The value is true or false .
                   The default is true .

                 o target_health_state.unhealthy.draining_interval_seconds   -
                   The  amount  of time for Elastic Load Balancing to wait be-
                   fore changing the state of an  unhealthy  target  from  un-
                   healthy.draining  to unhealthy . The range is 0-360000 sec-
                   onds. The default value is 0 seconds. Note: This  attribute
                   can   only   be   configured  when  target_health_state.un-
                   healthy.connection_termination.enabled is false .

                 The following attributes are supported only by  Gateway  Load
                 Balancers:

                 o target_failover.on_deregistration - Indicates how the Gate-
                   way Load Balancer handles existing flows when a  target  is
                   deregistered.  The possible values are rebalance and no_re-
                   balance . The default is no_rebalance . The two  attributes
                   (target_failover.on_deregistration         and         tar-
                   get_failover.on_unhealthy ) can't be set independently. The
                   value you set for both attributes must be the same.

                 o target_failover.on_unhealthy  -  Indicates  how the Gateway
                   Load Balancer handles existing flows when a target  is  un-
                   healthy. The possible values are rebalance and no_rebalance
                   . The default is no_rebalance . The  two  attributes  (tar-
                   get_failover.on_deregistration  and  target_failover.on_un-
                   healthy ) cannot be set independently. The  value  you  set
                   for both attributes must be the same.

              Value -> (string)
                 The value of the attribute.



                                              MODIFY-TARGET-GROUP-ATTRIBUTES()
