PUT-FILE()                                                          PUT-FILE()



NAME
       put-file -

DESCRIPTION
       Adds  or  updates  a  file in a branch in an CodeCommit repository, and
       generates a commit for the addition in the specified branch.

       See also: AWS API Documentation

SYNOPSIS
            put-file
          --repository-name <value>
          --branch-name <value>
          --file-content <value>
          --file-path <value>
          [--file-mode <value>]
          [--parent-commit-id <value>]
          [--commit-message <value>]
          [--name <value>]
          [--email <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --repository-name (string)
          The name of the repository where you want to add or update the file.

       --branch-name (string)
          The name of the branch where you want to add or update the file.  If
          this is an empty repository, this branch is created.

       --file-content (blob)
          The content of the file, in binary object format.

       --file-path (string)
          The  name of the file you want to add or update, including the rela-
          tive path to the file in the repository.

          NOTE:
              If the path does not currently exist in the repository, the path
              is created as part of adding the file.

       --file-mode (string)
          The  file  mode permissions of the blob. Valid file mode permissions
          are listed here.

          Possible values:

          o EXECUTABLE

          o NORMAL

          o SYMLINK

       --parent-commit-id (string)
          The full commit ID of the head commit in the branch where  you  want
          to add or update the file. If this is an empty repository, no commit
          ID is required. If this is not an empty repository, a commit  ID  is
          required.

          The  commit  ID  must match the ID of the head commit at the time of
          the operation. Otherwise, an error occurs, and the file is not added
          or updated.

       --commit-message (string)
          A  message  about why this file was added or updated. Although it is
          optional, a message makes the commit  history  for  your  repository
          more useful.

       --name (string)
          The  name  of the person adding or updating the file. Although it is
          optional, a name makes the commit history for your  repository  more
          useful.

       --email (string)
          An email address for the person adding or updating the file.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To add a file to a repository

       The following put-file example adds a file  named  'ExampleSolution.py'
       to  a  repository named 'MyDemoRepo' to a branch named 'feature-random-
       izationfeature' whose most recent commit has an  ID  of  '4c925148EXAM-
       PLE'.

          aws codecommit put-file \
              --repository-name MyDemoRepo \
              --branch-name feature-randomizationfeature \
              --file-content file://MyDirectory/ExampleSolution.py \
              --file-path /solutions/ExampleSolution.py \
              --parent-commit-id 4c925148EXAMPLE \
              --name "Maria Garcia" \
              --email "maria_garcia@example.com" \
              --commit-message "I added a third randomization routine."

       Output:

          {
              "blobId": "2eb4af3bEXAMPLE",
              "commitId": "317f8570EXAMPLE",
              "treeId": "347a3408EXAMPLE"
          }

OUTPUT
       commitId -> (string)
          The full SHA ID of the commit that contains this file change.

       blobId -> (string)
          The ID of the blob, which is its SHA-1 pointer.

       treeId -> (string)
          The  full  SHA-1 pointer of the tree information for the commit that
          contains this file change.



                                                                    PUT-FILE()
