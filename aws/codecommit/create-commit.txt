CREATE-COMMIT()                                                CREATE-COMMIT()



NAME
       create-commit -

DESCRIPTION
       Creates a commit for a repository on the tip of a specified branch.

       See also: AWS API Documentation

SYNOPSIS
            create-commit
          --repository-name <value>
          --branch-name <value>
          [--parent-commit-id <value>]
          [--author-name <value>]
          [--email <value>]
          [--commit-message <value>]
          [--keep-empty-folders | --no-keep-empty-folders]
          [--put-files <value>]
          [--delete-files <value>]
          [--set-file-modes <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --repository-name (string)
          The name of the repository where you create the commit.

       --branch-name (string)
          The name of the branch where you create the commit.

       --parent-commit-id (string)
          The  ID  of  the commit that is the parent of the commit you create.
          Not required if this is an empty repository.

       --author-name (string)
          The name of the author who created the commit. This  information  is
          used as both the author and committer for the commit.

       --email (string)
          The email address of the person who created the commit.

       --commit-message (string)
          The  commit  message  you want to include in the commit. Commit mes-
          sages are limited to 256 KB. If no message is specified,  a  default
          message is used.

       --keep-empty-folders | --no-keep-empty-folders (boolean)
          If the commit contains deletions, whether to keep a folder or folder
          structure if the changes leave the folders empty. If true, a  ..git-
          keep file is created for empty folders. The default is false.

       --put-files (list)
          The files to add or update in this commit.

          (structure)
              Information about a file added or updated as part of a commit.

              filePath -> (string)
                 The  full  path  to the file in the repository, including the
                 name of the file.

              fileMode -> (string)
                 The extrapolated file mode permissions for  the  file.  Valid
                 values include EXECUTABLE and NORMAL.

              fileContent -> (blob)
                 The content of the file, if a source file is not specified.

              sourceFile -> (structure)
                 The  name and full path of the file that contains the changes
                 you want to make as part of the commit, if you are  not  pro-
                 viding the file content directly.

                 filePath -> (string)
                     The  full  path  to  the  file, including the name of the
                     file.

                 isMove -> (boolean)
                     Whether to remove the source file from the parent commit.

       Shorthand Syntax:

          filePath=string,fileMode=string,fileContent=blob,sourceFile={filePath=string,isMove=boolean} ...

       JSON Syntax:

          [
            {
              "filePath": "string",
              "fileMode": "EXECUTABLE"|"NORMAL"|"SYMLINK",
              "fileContent": blob,
              "sourceFile": {
                "filePath": "string",
                "isMove": true|false
              }
            }
            ...
          ]

       --delete-files (list)
          The files to delete in this commit. These files still exist in  ear-
          lier commits.

          (structure)
              A file that is deleted as part of a commit.

              filePath -> (string)
                 The  full  path of the file to be deleted, including the name
                 of the file.

       Shorthand Syntax:

          filePath=string ...

       JSON Syntax:

          [
            {
              "filePath": "string"
            }
            ...
          ]

       --set-file-modes (list)
          The file modes to update for files in this commit.

          (structure)
              Information about the file mode changes.

              filePath -> (string)
                 The full path to the file, including the name of the file.

              fileMode -> (string)
                 The file mode for the file.

       Shorthand Syntax:

          filePath=string,fileMode=string ...

       JSON Syntax:

          [
            {
              "filePath": "string",
              "fileMode": "EXECUTABLE"|"NORMAL"|"SYMLINK"
            }
            ...
          ]

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a commit

       The  following create-commit example demonstrates how to create an ini-
       tial commit for a repository that adds a readme.md file to a repository
       named MyDemoRepo in the main branch.

          aws codecommit create-commit \
              --repository-name MyDemoRepo \
              --branch-name main \
              --put-files "filePath=readme.md,fileContent='Welcome to our team repository.'"

       Output:

          {
              "filesAdded": [
                  {
                      "blobId": "5e1c309d-EXAMPLE",
                      "absolutePath": "readme.md",
                      "fileMode": "NORMAL"
                  }
              ],
              "commitId": "4df8b524-EXAMPLE",
              "treeId": "55b57003-EXAMPLE",
              "filesDeleted": [],
              "filesUpdated": []
          }

       For  more information, see Create a Commit in AWS CodeCommit in the AWS
       CodeCommit User Guide.

OUTPUT
       commitId -> (string)
          The full commit ID of the commit that contains your  committed  file
          changes.

       treeId -> (string)
          The  full  SHA-1 pointer of the tree information for the commit that
          contains the commited file changes.

       filesAdded -> (list)
          The files added as part of the committed file changes.

          (structure)
              A file to be added, updated, or deleted as part of a commit.

              absolutePath -> (string)
                 The full path to the file to be added or  updated,  including
                 the name of the file.

              blobId -> (string)
                 The blob ID that contains the file information.

              fileMode -> (string)
                 The  extrapolated  file  mode permissions for the file. Valid
                 values include EXECUTABLE and NORMAL.

       filesUpdated -> (list)
          The files updated as part of the commited file changes.

          (structure)
              A file to be added, updated, or deleted as part of a commit.

              absolutePath -> (string)
                 The full path to the file to be added or  updated,  including
                 the name of the file.

              blobId -> (string)
                 The blob ID that contains the file information.

              fileMode -> (string)
                 The  extrapolated  file  mode permissions for the file. Valid
                 values include EXECUTABLE and NORMAL.

       filesDeleted -> (list)
          The files deleted as part of the committed file changes.

          (structure)
              A file to be added, updated, or deleted as part of a commit.

              absolutePath -> (string)
                 The full path to the file to be added or  updated,  including
                 the name of the file.

              blobId -> (string)
                 The blob ID that contains the file information.

              fileMode -> (string)
                 The  extrapolated  file  mode permissions for the file. Valid
                 values include EXECUTABLE and NORMAL.



                                                               CREATE-COMMIT()
