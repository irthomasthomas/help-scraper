GET-SPARQL-STREAM()                                        GET-SPARQL-STREAM()



NAME
       get-sparql-stream -

DESCRIPTION
       Gets a stream for an RDF graph.

       With  the Neptune Streams feature, you can generate a complete sequence
       of change-log entries that record every change made to your graph  data
       as  it  happens.  GetSparqlStream lets you collect these change-log en-
       tries for an RDF graph.

       The Neptune streams feature needs to be enabled on your Neptune DBclus-
       ter. To enable streams, set the neptune_streams DB cluster parameter to
       1 .

       See Capturing graph changes in real time using Neptune streams .

       See also: AWS API Documentation

SYNOPSIS
            get-sparql-stream
          [--limit <value>]
          [--iterator-type <value>]
          [--commit-num <value>]
          [--op-num <value>]
          [--encoding <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --limit (long)
          Specifies the maximum number of records to return. There is  also  a
          size  limit of 10 MB on the response that can't be modified and that
          takes precedence over the number of records specified in  the  limit
          parameter. The response does include a threshold-breaching record if
          the 10 MB limit was reached.

          The range for limit is 1 to 100,000, with a default of 10.

       --iterator-type (string)
          Can be one of:

          o AT_SEQUENCE_NUMBER  Indicates that reading should start  from  the
            event sequence number specified jointly by the commitNum and opNum
            parameters.

          o AFTER_SEQUENCE_NUMBER  Indicates that reading should  start  right
            after the event sequence number specified jointly by the commitNum
            and opNum parameters.

          o TRIM_HORIZON  Indicates that reading  should  start  at  the  last
            untrimmed record in the system, which is the oldest unexpired (not
            yet deleted) record in the change-log stream.

          o LATEST  Indicates that reading should start  at  the  most  recent
            record  in  the  system,  which  is  the latest unexpired (not yet
            deleted) record in the change-log stream.

          Possible values:

          o AT_SEQUENCE_NUMBER

          o AFTER_SEQUENCE_NUMBER

          o TRIM_HORIZON

          o LATEST

       --commit-num (long)
          The commit number of the starting record to read from the change-log
          stream.  This  parameter  is  required  when iteratorType is``AT_SE-
          QUENCE_NUMBER`` or AFTER_SEQUENCE_NUMBER , and ignored  when  itera-
          torType is TRIM_HORIZON or LATEST .

       --op-num (long)
          The  operation  sequence number within the specified commit to start
          reading from in the change-log stream data. The default is 1 .

       --encoding (string)
          If set to TRUE, Neptune compresses the response using gzip encoding.

          Possible values:

          o gzip

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       lastEventId -> (map)
          Sequence identifier of the last change in the stream response.

          An  event  ID is composed of two fields: a commitNum , which identi-
          fies a transaction that changed the graph,  and  an  opNum  ,  which
          identifies a specific operation within that transaction:

          key -> (string)

          value -> (string)

       lastTrxTimestampInMillis -> (long)
          The  time  at which the commit for the transaction was requested, in
          milliseconds from the Unix epoch.

       format -> (string)
          Serialization format for the change  records  being  returned.  Cur-
          rently, the only supported value is NQUADS .

       records -> (list)
          An array of serialized change-log stream records included in the re-
          sponse.

          (structure)
              A serialized SPARQL stream record capturing a  change-log  entry
              for the RDF graph.

              commitTimestampInMillis -> (long)
                 The  time  at  which  the  commit for the transaction was re-
                 quested, in milliseconds from the Unix epoch.

              eventId -> (map)
                 The sequence identifier of the stream change record.

                 key -> (string)

                 value -> (string)

              data -> (structure)
                 The serialized SPARQL change record. The  serialization  for-
                 mats   of  each  record  are  described  in  more  detail  in
                 Serialization Formats in Neptune Streams .

                 stmt -> (string)
                     Holds an N-QUADS statement expressing the changed quad.

              op -> (string)
                 The operation that created the change.

              isLastOp -> (boolean)
                 Only present if this operation is the last one in its  trans-
                 action.  If  present, it is set to true. It is useful for en-
                 suring that an entire transaction is consumed.

       totalRecords -> (integer)
          The total number of records in the response.



                                                           GET-SPARQL-STREAM()
