ADD-PERMISSION()                                              ADD-PERMISSION()



NAME
       add-permission -

DESCRIPTION
       Grants an Amazon Web Services service, account, or organization permis-
       sion to use a function. You can apply the policy at the function level,
       or specify a qualifier to restrict access to a single version or alias.
       If you use a qualifier, the invoker must use the full  Amazon  Resource
       Name  (ARN)  of  that  version  or  alias to invoke the function. Note:
       Lambda does not support adding policies to version $LATEST.

       To grant permission to another account, specify the account ID  as  the
       Principal . To grant permission to an organization defined in Organiza-
       tions, specify the organization ID as the PrincipalOrgID .  For  Amazon
       Web  Services  services, the principal is a domain-style identifier de-
       fined by the service, like s3.amazonaws.com or sns.amazonaws.com .  For
       Amazon Web Services services, you can also specify the ARN of the asso-
       ciated resource as the SourceArn . If you grant permission to a service
       principal  without  specifying  the source, other accounts could poten-
       tially configure resources in their account to invoke your Lambda func-
       tion.

       This action adds a statement to a resource-based permissions policy for
       the function. For more information about function policies, see  Lambda
       Function Policies .

       See also: AWS API Documentation

SYNOPSIS
            add-permission
          --function-name <value>
          --statement-id <value>
          --action <value>
          --principal <value>
          [--source-arn <value>]
          [--source-account <value>]
          [--event-source-token <value>]
          [--qualifier <value>]
          [--revision-id <value>]
          [--principal-org-id <value>]
          [--function-url-auth-type <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --function-name (string)
          The name of the Lambda function, version, or alias.
              Name formats

          o Function  name  -  my-function  (name-only),  my-function:v1 (with
            alias).

          o Function   ARN    -    arn:aws:lambda:us-west-2:123456789012:func-
            tion:my-function .

          o Partial ARN - 123456789012:function:my-function .

          You  can append a version number or alias to any of the formats. The
          length constraint applies only to the full ARN. If you specify  only
          the function name, it is limited to 64 characters in length.

       --statement-id (string)
          A statement identifier that differentiates the statement from others
          in the same policy.

       --action (string)
          The action that the principal can use on the function. For  example,
          lambda:InvokeFunction or lambda:GetFunction .

       --principal (string)
          The  Amazon  Web  Services service or account that invokes the func-
          tion. If you specify a service, use SourceArn  or  SourceAccount  to
          limit who can invoke the function through that service.

       --source-arn (string)
          For Amazon Web Services services, the ARN of the Amazon Web Services
          resource that invokes the function. For example, an Amazon S3 bucket
          or Amazon SNS topic.

          Note  that Lambda configures the comparison using the StringLike op-
          erator.

       --source-account (string)
          For Amazon S3, the ID of the account that  owns  the  resource.  Use
          this together with SourceArn to ensure that the resource is owned by
          the specified account. It is possible for an Amazon S3 bucket to  be
          deleted by its owner and recreated by another account.

       --event-source-token (string)
          For Alexa Smart Home functions, a token that must be supplied by the
          invoker.

       --qualifier (string)
          Specify a version or alias to add permissions to a published version
          of the function.

       --revision-id (string)
          Only  update  the  policy  if  the revision ID matches the ID that's
          specified. Use this option to avoid  modifying  a  policy  that  has
          changed since you last read it.

       --principal-org-id (string)
          The  identifier  for your organization in Organizations. Use this to
          grant permissions to all the Amazon Web Services accounts under this
          organization.

       --function-url-auth-type (string)
          The  type  of  authentication  that  your  function URL uses. Set to
          AWS_IAM if you want to restrict access to  authenticated  IAM  users
          only. Set to NONE if you want to bypass IAM authentication to create
          a public endpoint. For more information, see Security and auth model
          for Lambda function URLs .

          Possible values:

          o NONE

          o AWS_IAM

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To add permissions to an existing Lambda function

       The following add-permission example grants the Amazon SNS service per-
       mission to invoke a function named my-function.

          aws lambda add-permission \
              --function-name my-function \
              --action lambda:InvokeFunction \
              --statement-id sns \
              --principal sns.amazonaws.com

       Output:

          {
              "Statement":
              {
                  "Sid":"sns",
                  "Effect":"Allow",
                  "Principal":{
                      "Service":"sns.amazonaws.com"
                  },
                  "Action":"lambda:InvokeFunction",
                  "Resource":"arn:aws:lambda:us-east-2:123456789012:function:my-function"
              }
          }

       For more information, see Using Resource-based Policies for AWS  Lambda
       in the AWS Lambda Developer Guide.

OUTPUT
       Statement -> (string)
          The permission statement that's added to the function policy.



                                                              ADD-PERMISSION()
