GET-EVENT-SOURCE-MAPPING()                          GET-EVENT-SOURCE-MAPPING()



NAME
       get-event-source-mapping -

DESCRIPTION
       Returns  details about an event source mapping. You can get the identi-
       fier of a mapping from the output of  ListEventSourceMappings .

       See also: AWS API Documentation

SYNOPSIS
            get-event-source-mapping
          --uuid <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --uuid (string)
          The identifier of the event source mapping.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To retrieve details about an event source mapping

       The following get-event-source-mapping example displays the details for
       the mapping between an SQS queue and the my-function Lambda function.

          aws lambda get-event-source-mapping \
              --uuid "a1b2c3d4-5678-90ab-cdef-11111EXAMPLE"

       Output:

          {
              "UUID": "a1b2c3d4-5678-90ab-cdef-11111EXAMPLE",
              "StateTransitionReason": "USER_INITIATED",
              "LastModified": 1569284520.333,
              "BatchSize": 5,
              "State": "Enabled",
              "FunctionArn": "arn:aws:lambda:us-west-2:123456789012:function:my-function",
              "EventSourceArn": "arn:aws:sqs:us-west-2:123456789012:mySQSqueue"
          }

       For more information, see AWS Lambda Event Source Mapping  in  the  AWS
       Lambda Developer Guide.

OUTPUT
       UUID -> (string)
          The identifier of the event source mapping.

       StartingPosition -> (string)
          The  position  in a stream from which to start reading. Required for
          Amazon Kinesis and Amazon DynamoDB Stream  event  sources.  AT_TIME-
          STAMP  is  supported  only  for Amazon Kinesis streams, Amazon Docu-
          mentDB, Amazon MSK, and self-managed Apache Kafka.

       StartingPositionTimestamp -> (timestamp)
          With StartingPosition set to AT_TIMESTAMP , the time from  which  to
          start reading. StartingPositionTimestamp cannot be in the future.

       BatchSize -> (integer)
          The  maximum  number of records in each batch that Lambda pulls from
          your stream or queue and sends to your function. Lambda  passes  all
          of  the records in the batch to the function in a single call, up to
          the payload limit for synchronous invocation (6 MB).

          Default value: Varies by service. For Amazon SQS, the default is 10.
          For all other services, the default is 100.

          Related  setting: When you set BatchSize to a value greater than 10,
          you must set MaximumBatchingWindowInSeconds to at least 1.

       MaximumBatchingWindowInSeconds -> (integer)
          The maximum amount of time, in seconds, that Lambda spends gathering
          records  before invoking the function. You can configure MaximumBat-
          chingWindowInSeconds to any value from 0 seconds to 300  seconds  in
          increments of seconds.

          For  streams and Amazon SQS event sources, the default batching win-
          dow is 0 seconds. For Amazon MSK, Self-managed Apache Kafka,  Amazon
          MQ, and DocumentDB event sources, the default batching window is 500
          ms. Note that because you can only  change  MaximumBatchingWindowIn-
          Seconds  in increments of seconds, you cannot revert back to the 500
          ms default batching window after you have changed it. To restore the
          default batching window, you must create a new event source mapping.

          Related  setting: For streams and Amazon SQS event sources, when you
          set BatchSize to a value greater than 10, you must set MaximumBatch-
          ingWindowInSeconds to at least 1.

       ParallelizationFactor -> (integer)
          (Kinesis and DynamoDB Streams only) The number of batches to process
          concurrently from each shard. The default value is 1.

       EventSourceArn -> (string)
          The Amazon Resource Name (ARN) of the event source.

       FilterCriteria -> (structure)
          An object that defines the filter criteria  that  determine  whether
          Lambda  should  process  an  event. For more information, see Lambda
          event filtering .

          If filter criteria is encrypted, this field shows up as null in  the
          response  of  ListEventSourceMapping  API  calls.  You can view this
          field in plaintext in  the  response  of  GetEventSourceMapping  and
          DeleteEventSourceMapping  calls  if you have kms:Decrypt permissions
          for the correct KMS key.

          Filters -> (list)
              A list of filters.

              (structure)
                 A structure within a FilterCriteria object  that  defines  an
                 event filtering pattern.

                 Pattern -> (string)
                     A filter pattern. For more information on the syntax of a
                     filter pattern, see Filter rule syntax .

       FunctionArn -> (string)
          The ARN of the Lambda function.

       LastModified -> (timestamp)
          The date that the event source mapping was last updated or that  its
          state changed.

       LastProcessingResult -> (string)
          The result of the last Lambda invocation of your function.

       State -> (string)
          The  state of the event source mapping. It can be one of the follow-
          ing: Creating , Enabling , Enabled , Disabling , Disabled , Updating
          , or Deleting .

       StateTransitionReason -> (string)
          Indicates whether a user or Lambda made the last change to the event
          source mapping.

       DestinationConfig -> (structure)
          (Kinesis, DynamoDB Streams,  Amazon  MSK,  and  self-managed  Apache
          Kafka  event sources only) A configuration object that specifies the
          destination of an event after Lambda processes it.

          OnSuccess -> (structure)
              The destination configuration for successful invocations.

              Destination -> (string)
                 The Amazon Resource Name (ARN) of the destination resource.

          OnFailure -> (structure)
              The destination configuration for failed invocations.

              Destination -> (string)
                 The Amazon Resource Name (ARN) of the destination resource.

                 To retain records of asynchronous invocations , you can  con-
                 figure  an  Amazon  SNS topic, Amazon SQS queue, Lambda func-
                 tion, or Amazon EventBridge event bus as the destination.

                 To retain records of failed invocations from Kinesis and  Dy-
                 namoDB  event sources , you can configure an Amazon SNS topic
                 or Amazon SQS queue as the destination.

                 To retain records of  failed  invocations  from  self-managed
                 Kafka  or Amazon MSK , you can configure an Amazon SNS topic,
                 Amazon SQS queue, or Amazon S3 bucket as the destination.

       Topics -> (list)
          The name of the Kafka topic.

          (string)

       Queues -> (list)
          (Amazon MQ) The name of the Amazon MQ broker  destination  queue  to
          consume.

          (string)

       SourceAccessConfigurations -> (list)
          An  array of the authentication protocol, VPC components, or virtual
          host to secure and define your event source.

          (structure)
              To secure and define access to your event source, you can  spec-
              ify  the  authentication  protocol,  VPC  components, or virtual
              host.

              Type -> (string)
                 The type of authentication protocol, VPC components, or  vir-
                 tual    host    for   your   event   source.   For   example:
                 "Type":"SASL_SCRAM_512_AUTH" .

                 o BASIC_AUTH  (Amazon MQ) The  Secrets  Manager  secret  that
                   stores your broker credentials.

                 o BASIC_AUTH  (Self-managed Apache Kafka) The Secrets Manager
                   ARN of your secret key used for  SASL/PLAIN  authentication
                   of your Apache Kafka brokers.

                 o VPC_SUBNET  (Self-managed Apache Kafka) The subnets associ-
                   ated with your VPC. Lambda connects  to  these  subnets  to
                   fetch data from your self-managed Apache Kafka cluster.

                 o VPC_SECURITY_GROUP  (Self-managed Apache Kafka) The VPC se-
                   curity group used to manage  access  to  your  self-managed
                   Apache Kafka brokers.

                 o SASL_SCRAM_256_AUTH   (Self-managed  Apache  Kafka) The Se-
                   crets  Manager  ARN  of  your  secret  key  used  for  SASL
                   SCRAM-256  authentication of your self-managed Apache Kafka
                   brokers.

                 o SASL_SCRAM_512_AUTH   (Amazon  MSK,   Self-managed   Apache
                   Kafka)  The Secrets Manager ARN of your secret key used for
                   SASL SCRAM-512 authentication of your  self-managed  Apache
                   Kafka brokers.

                 o VIRTUAL_HOST  -  (RabbitMQ) The name of the virtual host in
                   your RabbitMQ broker. Lambda uses this RabbitMQ host as the
                   event source. This property cannot be specified in an Upda-
                   teEventSourceMapping API call.

                 o CLIENT_CERTIFICATE_TLS_AUTH   (Amazon   MSK,   self-managed
                   Apache  Kafka)  The  Secrets Manager ARN of your secret key
                   containing the certificate chain (X.509 PEM),  private  key
                   (PKCS#8  PEM), and private key password (optional) used for
                   mutual TLS authentication of your MSK/Apache Kafka brokers.

                 o SERVER_ROOT_CA_CERTIFICATE  (Self-managed Apache Kafka) The
                   Secrets  Manager ARN of your secret key containing the root
                   CA certificate (X.509 PEM) used for TLS encryption of  your
                   Apache Kafka brokers.

              URI -> (string)
                 The  value  for your chosen configuration in Type . For exam-
                 ple: "URI": "arn:aws:secretsmanager:us-east-1:01234567890:se-
                 cret:MyBrokerSecretName" .

       SelfManagedEventSource -> (structure)
          The self-managed Apache Kafka cluster for your event source.

          Endpoints -> (map)
              The list of bootstrap servers for your Kafka brokers in the fol-
              lowing            format:             "KAFKA_BOOTSTRAP_SERVERS":
              ["abc.xyz.com:xxxx","abc2.xyz.com:xxxx"] .

              key -> (string)

              value -> (list)
                 (string)

       MaximumRecordAgeInSeconds -> (integer)
          (Kinesis  and  DynamoDB Streams only) Discard records older than the
          specified age. The default value is -1, which sets the  maximum  age
          to  infinite.  When  the value is set to infinite, Lambda never dis-
          cards old records.

          NOTE:
              The minimum valid value for maximum record age is 60s.  Although
              values  less than 60 and greater than -1 fall within the parame-
              ter's absolute range, they are not allowed

       BisectBatchOnFunctionError -> (boolean)
          (Kinesis and DynamoDB Streams only) If the function returns  an  er-
          ror, split the batch in two and retry. The default value is false.

       MaximumRetryAttempts -> (integer)
          (Kinesis and DynamoDB Streams only) Discard records after the speci-
          fied number of retries. The default value is -1, which sets the max-
          imum number of retries to infinite. When MaximumRetryAttempts is in-
          finite, Lambda retries failed records until the  record  expires  in
          the event source.

       TumblingWindowInSeconds -> (integer)
          (Kinesis  and  DynamoDB  Streams  only) The duration in seconds of a
          processing window for DynamoDB and Kinesis Streams event sources.  A
          value of 0 seconds indicates no tumbling window.

       FunctionResponseTypes -> (list)
          (Kinesis,  DynamoDB  Streams,  and Amazon SQS) A list of current re-
          sponse type enums applied to the event source mapping.

          (string)

       AmazonManagedKafkaEventSourceConfig -> (structure)
          Specific configuration settings for an Amazon Managed Streaming  for
          Apache Kafka (Amazon MSK) event source.

          ConsumerGroupId -> (string)
              The  identifier  for  the Kafka consumer group to join. The con-
              sumer group ID  must  be  unique  among  all  your  Kafka  event
              sources.  After  creating  a Kafka event source mapping with the
              consumer group ID specified, you cannot update this  value.  For
              more information, see Customizable consumer group ID .

       SelfManagedKafkaEventSourceConfig -> (structure)
          Specific  configuration  settings  for  a  self-managed Apache Kafka
          event source.

          ConsumerGroupId -> (string)
              The identifier for the Kafka consumer group to  join.  The  con-
              sumer  group  ID  must  be  unique  among  all  your Kafka event
              sources. After creating a Kafka event source  mapping  with  the
              consumer  group  ID specified, you cannot update this value. For
              more information, see Customizable consumer group ID .

       ScalingConfig -> (structure)
          (Amazon SQS only) The scaling configuration for  the  event  source.
          For more information, see Configuring maximum concurrency for Amazon
          SQS event sources .

          MaximumConcurrency -> (integer)
              Limits the number of concurrent instances that  the  Amazon  SQS
              event source can invoke.

       DocumentDBEventSourceConfig -> (structure)
          Specific configuration settings for a DocumentDB event source.

          DatabaseName -> (string)
              The  name of the database to consume within the DocumentDB clus-
              ter.

          CollectionName -> (string)
              The name of the collection to consume within  the  database.  If
              you  do  not  specify  a collection, Lambda consumes all collec-
              tions.

          FullDocument -> (string)
              Determines what DocumentDB sends to  your  event  stream  during
              document  update  operations. If set to UpdateLookup, DocumentDB
              sends a delta describing the changes, along with a copy  of  the
              entire document. Otherwise, DocumentDB sends only a partial doc-
              ument that contains the changes.

       KMSKeyArn -> (string)
          The ARN of the Key Management Service  (KMS)  customer  managed  key
          that Lambda uses to encrypt your function's filter criteria .

       FilterCriteriaError -> (structure)
          An  object  that  contains  details about an error related to filter
          criteria encryption.

          ErrorCode -> (string)
              The KMS exception that resulted from filter criteria  encryption
              or decryption.

          Message -> (string)
              The error message.

       EventSourceMappingArn -> (string)
          The Amazon Resource Name (ARN) of the event source mapping.



                                                    GET-EVENT-SOURCE-MAPPING()
