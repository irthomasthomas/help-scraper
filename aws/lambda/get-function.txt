GET-FUNCTION()                                                  GET-FUNCTION()



NAME
       get-function -

DESCRIPTION
       Returns information about the function or function version, with a link
       to download the deployment package that's valid for 10 minutes. If  you
       specify a function version, only details that are specific to that ver-
       sion are returned.

       See also: AWS API Documentation

SYNOPSIS
            get-function
          --function-name <value>
          [--qualifier <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --function-name (string)
          The name of the Lambda function, version, or alias.
              Name formats

          o Function name  -  my-function  (name-only),  my-function:v1  (with
            alias).

          o Function    ARN    -   arn:aws:lambda:us-west-2:123456789012:func-
            tion:my-function .

          o Partial ARN - 123456789012:function:my-function .

          You can append a version number or alias to any of the formats.  The
          length  constraint applies only to the full ARN. If you specify only
          the function name, it is limited to 64 characters in length.

       --qualifier (string)
          Specify a version or alias to get details about a published  version
          of the function.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To retrieve information about a function

       The  following  get-function  example  displays  information  about the
       my-function function.

          aws lambda get-function \
              --function-name  my-function

       Output:

          {
              "Concurrency": {
                  "ReservedConcurrentExecutions": 100
              },
              "Code": {
                  "RepositoryType": "S3",
                  "Location": "https://awslambda-us-west-2-tasks.s3.us-west-2.amazonaws.com/snapshots/123456789012/my-function..."
              },
              "Configuration": {
                  "TracingConfig": {
                      "Mode": "PassThrough"
                  },
                  "Version": "$LATEST",
                  "CodeSha256": "5tT2qgzYUHoqwR616pZ2dpkn/0J1FrzJmlKidWaaCgk=",
                  "FunctionName": "my-function",
                  "VpcConfig": {
                      "SubnetIds": [],
                      "VpcId": "",
                      "SecurityGroupIds": []
                  },
                  "MemorySize": 128,
                  "RevisionId": "28f0fb31-5c5c-43d3-8955-03e76c5c1075",
                  "CodeSize": 304,
                  "FunctionArn": "arn:aws:lambda:us-west-2:123456789012:function:my-function",
                  "Handler": "index.handler",
                  "Role": "arn:aws:iam::123456789012:role/service-role/helloWorldPython-role-uy3l9qyq",
                  "Timeout": 3,
                  "LastModified": "2019-09-24T18:20:35.054+0000",
                  "Runtime": "nodejs10.x",
                  "Description": ""
              }
          }

       For more information, see AWS Lambda Function Configuration in the  AWS
       Lambda Developer Guide.

OUTPUT
       Configuration -> (structure)
          The configuration of the function or version.

          FunctionName -> (string)
              The name of the function.

          FunctionArn -> (string)
              The function's Amazon Resource Name (ARN).

          Runtime -> (string)
              The runtime environment for the Lambda function.

          Role -> (string)
              The function's execution role.

          Handler -> (string)
              The function that Lambda calls to begin executing your function.

          CodeSize -> (long)
              The size of the function's deployment package, in bytes.

          Description -> (string)
              The function's description.

          Timeout -> (integer)
              The  amount  of time in seconds that Lambda allows a function to
              run before stopping it.

          MemorySize -> (integer)
              The amount of memory available to the function at runtime.

          LastModified -> (string)
              The date and  time  that  the  function  was  last  updated,  in
              ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD).

          CodeSha256 -> (string)
              The SHA256 hash of the function's deployment package.

          Version -> (string)
              The version of the Lambda function.

          VpcConfig -> (structure)
              The function's networking configuration.

              SubnetIds -> (list)
                 A list of VPC subnet IDs.

                 (string)

              SecurityGroupIds -> (list)
                 A list of VPC security groups IDs.

                 (string)

              VpcId -> (string)
                 The ID of the VPC.

          DeadLetterConfig -> (structure)
              The function's dead letter queue.

              TargetArn -> (string)
                 The Amazon Resource Name (ARN) of an Amazon SQS queue or Ama-
                 zon SNS topic.

          Environment -> (structure)
              The function's environment variables .

              Variables -> (map)
                 Environment variable key-value pairs.

                 key -> (string)

                 value -> (string)

              Error -> (structure)
                 Error messages for environment variables that couldn't be ap-
                 plied.

                 ErrorCode -> (string)
                     The error code.

                 Message -> (string)
                     The error message.

          KMSKeyArn -> (string)
              The  KMS  key  that's used to encrypt the function's environment
              variables. This key is only returned if you've configured a cus-
              tomer managed key.

          TracingConfig -> (structure)
              The function's X-Ray tracing configuration.

              Mode -> (string)
                 The tracing mode.

          MasterArn -> (string)
              For Lambda@Edge functions, the ARN of the main function.

          RevisionId -> (string)
              The latest updated revision of the function or alias.

          Layers -> (list)
              The function's layers .

              (structure)
                 An Lambda layer .

                 Arn -> (string)
                     The Amazon Resource Name (ARN) of the function layer.

                 CodeSize -> (long)
                     The size of the layer archive in bytes.

                 SigningProfileVersionArn -> (string)
                     The Amazon Resource Name (ARN) for a signing profile ver-
                     sion.

                 SigningJobArn -> (string)
                     The Amazon Resource Name (ARN) of a signing job.

          State -> (string)
              The current state of the function. When the state is Inactive  ,
              you can reactivate the function by invoking it.

          StateReason -> (string)
              The reason for the function's current state.

          StateReasonCode -> (string)
              The  reason code for the function's current state. When the code
              is Creating , you can't invoke or modify the function.

          LastUpdateStatus -> (string)
              The status of the last update that was performed  on  the  func-
              tion.  This  is  first set to Successful after function creation
              completes.

          LastUpdateStatusReason -> (string)
              The reason for the last update that was performed on  the  func-
              tion.

          LastUpdateStatusReasonCode -> (string)
              The  reason  code  for the last update that was performed on the
              function.

          FileSystemConfigs -> (list)
              Connection settings for an Amazon EFS file system .

              (structure)
                 Details about the connection between a Lambda function and an
                 Amazon EFS file system .

                 Arn -> (string)
                     The  Amazon  Resource Name (ARN) of the Amazon EFS access
                     point that provides access to the file system.

                 LocalMountPath -> (string)
                     The path where the function can access the  file  system,
                     starting with /mnt/ .

          PackageType -> (string)
              The type of deployment package. Set to Image for container image
              and set Zip for .zip file archive.

          ImageConfigResponse -> (structure)
              The function's image configuration values.

              ImageConfig -> (structure)
                 Configuration values that override the container image  Dock-
                 erfile.

                 EntryPoint -> (list)
                     Specifies  the entry point to their application, which is
                     typically the location of the runtime executable.

                     (string)

                 Command -> (list)
                     Specifies parameters that you want to pass in with ENTRY-
                     POINT.

                     (string)

                 WorkingDirectory -> (string)
                     Specifies the working directory.

              Error -> (structure)
                 Error response to GetFunctionConfiguration.

                 ErrorCode -> (string)
                     Error code.

                 Message -> (string)
                     Error message.

          SigningProfileVersionArn -> (string)
              The ARN of the signing profile version.

          SigningJobArn -> (string)
              The ARN of the signing job.

          Architectures -> (list)
              The instruction set architecture that the function supports. Ar-
              chitecture is a string array with one of the valid  values.  The
              default architecture value is x86_64 .

              (string)

          EphemeralStorage -> (structure)
              The  size  of  the  functions  /tmp directory in MB. The default
              value is 512, but can be any whole number between 512 and  10240
              MB.

              Size -> (integer)
                 The size of the functions /tmp directory.

       Code -> (structure)
          The deployment package of the function or version.

          RepositoryType -> (string)
              The service that's hosting the file.

          Location -> (string)
              A  presigned  URL  that  you  can use to download the deployment
              package.

          ImageUri -> (string)
              URI of a container image in the Amazon ECR registry.

          ResolvedImageUri -> (string)
              The resolved URI for the image.

       Tags -> (map)
          The function's tags .

          key -> (string)

          value -> (string)

       Concurrency -> (structure)
          The function's reserved concurrency .

          ReservedConcurrentExecutions -> (integer)
              The number of concurrent executions that are reserved  for  this
              function. For more information, see Managing Concurrency .



                                                                GET-FUNCTION()
