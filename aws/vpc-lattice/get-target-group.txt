GET-TARGET-GROUP()                                          GET-TARGET-GROUP()



NAME
       get-target-group -

DESCRIPTION
       Retrieves information about the specified target group.

       See also: AWS API Documentation

SYNOPSIS
            get-target-group
          --target-group-identifier <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --target-group-identifier (string)
          The ID or Amazon Resource Name (ARN) of the target group.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To get information about a target group

       The following get-target-group example gets information about the spec-
       ified target group, which has a target type of INSTANCE.

          aws vpc-lattice get-target-group \
              --target-group-identifier tg-0eaa4b9ab4EXAMPLE

       Output:

          {
              "arn": "arn:aws:vpc-lattice:us-east-2:123456789012:targetgroup/tg-0eaa4b9ab4EXAMPLE",
              "config": {
                  "healthCheck": {
                      "enabled": true,
                      "healthCheckIntervalSeconds": 30,
                      "healthCheckTimeoutSeconds": 5,
                      "healthyThresholdCount": 5,
                      "matcher": {
                          "httpCode": "200"
                      },
                      "path": "/",
                      "protocol": "HTTPS",
                      "protocolVersion": "HTTP1",
                      "unhealthyThresholdCount": 2
                  },
                  "port": 443,
                  "protocol": "HTTPS",
                  "protocolVersion": "HTTP1",
                  "vpcIdentifier": "vpc-f1663d9868EXAMPLE"
              },
              "createdAt": "2023-05-06T04:41:04.122Z",
              "id": "tg-0eaa4b9ab4EXAMPLE",
              "lastUpdatedAt": "2023-05-06T04:41:04.122Z",
              "name": "my-target-group",
              "serviceArns": [
                  "arn:aws:vpc-lattice:us-east-2:123456789012:service/svc-0285b53b2eEXAMPLE"
              ],
              "status": "ACTIVE",
              "type": "INSTANCE"
          }

       For more information, see Target groups in the Amazon VPC Lattice  User
       Guide.

OUTPUT
       arn -> (string)
          The Amazon Resource Name (ARN) of the target group.

       config -> (structure)
          The target group configuration.

          healthCheck -> (structure)
              The  health  check  configuration.  Not  supported if the target
              group type is LAMBDA or ALB .

              enabled -> (boolean)
                 Indicates whether health checking is enabled.

              healthCheckIntervalSeconds -> (integer)
                 The approximate amount of time, in  seconds,  between  health
                 checks  of  an  individual target. The range is 5300 seconds.
                 The default is 30 seconds.

              healthCheckTimeoutSeconds -> (integer)
                 The amount of time, in seconds, to wait  before  reporting  a
                 target  as  unhealthy. The range is 1120 seconds. The default
                 is 5 seconds.

              healthyThresholdCount -> (integer)
                 The number of consecutive successful health  checks  required
                 before  considering an unhealthy target healthy. The range is
                 210. The default is 5.

              matcher -> (tagged union structure)
                 The codes to use when checking for a successful response from
                 a target.

                 NOTE:
                     This is a Tagged Union structure. Only one of the follow-
                     ing top level keys can be set: httpCode.

                 httpCode -> (string)
                     The HTTP code to use when checking for a  successful  re-
                     sponse from a target.

              path -> (string)
                 The destination for health checks on the targets. If the pro-
                 tocol version is HTTP/1.1 or HTTP/2 ,  specify  a  valid  URI
                 (for  example,  /path?query ). The default path is / . Health
                 checks are not supported if the protocol version  is  gRPC  ,
                 however,  you  can  choose  HTTP/1.1  or HTTP/2 and specify a
                 valid URI.

              port -> (integer)
                 The port used when performing health checks on  targets.  The
                 default  setting  is  the port that a target receives traffic
                 on.

              protocol -> (string)
                 The protocol used when performing health checks  on  targets.
                 The  possible  protocols  are HTTP and HTTPS . The default is
                 HTTP .

              protocolVersion -> (string)
                 The protocol version used when performing  health  checks  on
                 targets. The possible protocol versions are HTTP1 and HTTP2 .

              unhealthyThresholdCount -> (integer)
                 The  number  of consecutive failed health checks required be-
                 fore considering a target unhealthy. The range  is  210.  The
                 default is 2.

          ipAddressType -> (string)
              The type of IP address used for the target group. Supported only
              if the target group type is IP . The default is IPV4 .

          lambdaEventStructureVersion -> (string)
              The version of the event structure that your Lambda function re-
              ceives.  Supported only if the target group type is LAMBDA . The
              default is V1 .

          port -> (integer)
              The port on which the targets are listening. For HTTP,  the  de-
              fault is 80. For HTTPS, the default is 443. Not supported if the
              target group type is LAMBDA .

          protocol -> (string)
              The protocol to use for routing traffic to the targets. The  de-
              fault  is the protocol of the target group. Not supported if the
              target group type is LAMBDA .

          protocolVersion -> (string)
              The protocol version. The default is HTTP1 .  Not  supported  if
              the target group type is LAMBDA .

          vpcIdentifier -> (string)
              The  ID  of  the  VPC. Not supported if the target group type is
              LAMBDA .

       createdAt -> (timestamp)
          The date and time that the target group was  created,  specified  in
          ISO-8601 format.

       failureCode -> (string)
          The failure code.

       failureMessage -> (string)
          The failure message.

       id -> (string)
          The ID of the target group.

       lastUpdatedAt -> (timestamp)
          The  date and time that the target group was last updated, specified
          in ISO-8601 format.

       name -> (string)
          The name of the target group.

       serviceArns -> (list)
          The Amazon Resource Names (ARNs) of the service.

          (string)

       status -> (string)
          The status.

       type -> (string)
          The target group type.



                                                            GET-TARGET-GROUP()
