CREATE-RULE()                                                    CREATE-RULE()



NAME
       create-rule -

DESCRIPTION
       Creates  a listener rule. Each listener has a default rule for checking
       connection requests, but you can define  additional  rules.  Each  rule
       consists  of  a  priority,  one or more actions, and one or more condi-
       tions. For more information, see Listener rules in the Amazon VPC  Lat-
       tice User Guide .

       See also: AWS API Documentation

SYNOPSIS
            create-rule
          --action <value>
          [--client-token <value>]
          --listener-identifier <value>
          --match <value>
          --name <value>
          --priority <value>
          --service-identifier <value>
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --action (tagged union structure)
          The action for the default rule.

          NOTE:
              This  is a Tagged Union structure. Only one of the following top
              level keys can be set: fixedResponse, forward.

          fixedResponse -> (structure)
              The fixed response action. The rule returns a  custom  HTTP  re-
              sponse.

              statusCode -> (integer)
                 The HTTP response code.

          forward -> (structure)
              The  forward  action. Traffic that matches the rule is forwarded
              to the specified target groups.

              targetGroups -> (list)
                 The target groups. Traffic matching the rule is forwarded  to
                 the  specified  target  groups. With forward actions, you can
                 assign a weight that controls the prioritization  and  selec-
                 tion  of each target group. This means that requests are dis-
                 tributed to individual target groups based on their  weights.
                 For  example, if two target groups have the same weight, each
                 target group receives half of the traffic.

                 The default value is 1. This means that if  only  one  target
                 group  is  provided, there is no need to set the weight; 100%
                 of the traffic goes to that target group.

                 (structure)
                     Describes the weight of a target group.

                     targetGroupIdentifier -> (string)
                        The ID or Amazon Resource Name  (ARN)  of  the  target
                        group.

                     weight -> (integer)
                        Only  required  if  you specify multiple target groups
                        for a forward action. The weight  determines  how  re-
                        quests  are distributed to the target group. For exam-
                        ple, if you specify two target  groups,  each  with  a
                        weight  of 10, each target group receives half the re-
                        quests. If you specify two target groups, one  with  a
                        weight  of  10  and the other with a weight of 20, the
                        target group with a weight of  20  receives  twice  as
                        many  requests  as  the other target group. If there's
                        only one target  group  specified,  then  the  default
                        value is 100.

       JSON Syntax:

          {
            "fixedResponse": {
              "statusCode": integer
            },
            "forward": {
              "targetGroups": [
                {
                  "targetGroupIdentifier": "string",
                  "weight": integer
                }
                ...
              ]
            }
          }

       --client-token (string)
          A  unique,  case-sensitive identifier that you provide to ensure the
          idempotency of the request. If you retry a  request  that  completed
          successfully  using  the same client token and parameters, the retry
          succeeds without performing any actions. If  the  parameters  aren't
          identical, the retry fails.

       --listener-identifier (string)
          The ID or Amazon Resource Name (ARN) of the listener.

       --match (tagged union structure)
          The rule match.

          NOTE:
              This  is a Tagged Union structure. Only one of the following top
              level keys can be set: httpMatch.

          httpMatch -> (structure)
              The HTTP criteria that a rule must match.

              headerMatches -> (list)
                 The header matches. Matches incoming requests with rule based
                 on request header value before applying rule action.

                 (structure)
                     Describes the constraints for a header match. Matches in-
                     coming requests with rule based on request  header  value
                     before applying rule action.

                     caseSensitive -> (boolean)
                        Indicates whether the match is case sensitive.

                     match -> (tagged union structure)
                        The header match type.

                        NOTE:
                            This  is a Tagged Union structure. Only one of the
                            following top level keys can be set: contains, ex-
                            act, prefix.

                        contains -> (string)
                            A contains type match.

                        exact -> (string)
                            An exact type match.

                        prefix -> (string)
                            A  prefix  type  match. Matches the value with the
                            prefix.

                     name -> (string)
                        The name of the header.

              method -> (string)
                 The HTTP method type.

              pathMatch -> (structure)
                 The path match.

                 caseSensitive -> (boolean)
                     Indicates whether the match is case sensitive.

                 match -> (tagged union structure)
                     The type of path match.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing top level keys can be set: exact, prefix.

                     exact -> (string)
                        An exact match of the path.

                     prefix -> (string)
                        A prefix match of the path.

       JSON Syntax:

          {
            "httpMatch": {
              "headerMatches": [
                {
                  "caseSensitive": true|false,
                  "match": {
                    "contains": "string",
                    "exact": "string",
                    "prefix": "string"
                  },
                  "name": "string"
                }
                ...
              ],
              "method": "string",
              "pathMatch": {
                "caseSensitive": true|false,
                "match": {
                  "exact": "string",
                  "prefix": "string"
                }
              }
            }
          }

       --name (string)
          The  name  of the rule. The name must be unique within the listener.
          The valid characters are a-z, 0-9, and hyphens (-). You can't use  a
          hyphen  as the first or last character, or immediately after another
          hyphen.

       --priority (integer)
          The priority assigned to the rule. Each rule for a specific listener
          must  have  a  unique  priority.  The  lower the priority number the
          higher the priority.

       --service-identifier (string)
          The ID or Amazon Resource Name (ARN) of the service.

       --tags (map)
          The tags for the rule.

          key -> (string)
              The key of the tag.

              Constraints: Tag keys are case-sensitive and accept a maximum of
              128  Unicode  characters.  Valid characters are Unicode letters,
              digits, white space, and any of the following symbols: _ . : / =
              + - @ May not begin with aws: .

          value -> (string)
              The value of the tag.

              Constraints:  Tag values are case-sensitive and accept a maximum
              of 256 Unicode characters. Valid characters are Unicode letters,
              digits, white space, and any of the following symbols: _ . : / =
              + - @

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       action -> (tagged union structure)
          The rule action.

          NOTE:
              This is a Tagged Union structure. Only one of the following  top
              level keys can be set: fixedResponse, forward.

          fixedResponse -> (structure)
              The  fixed  response  action. The rule returns a custom HTTP re-
              sponse.

              statusCode -> (integer)
                 The HTTP response code.

          forward -> (structure)
              The forward action. Traffic that matches the rule  is  forwarded
              to the specified target groups.

              targetGroups -> (list)
                 The  target groups. Traffic matching the rule is forwarded to
                 the specified target groups. With forward  actions,  you  can
                 assign  a  weight that controls the prioritization and selec-
                 tion of each target group. This means that requests are  dis-
                 tributed  to individual target groups based on their weights.
                 For example, if two target groups have the same weight,  each
                 target group receives half of the traffic.

                 The  default  value  is 1. This means that if only one target
                 group is provided, there is no need to set the  weight;  100%
                 of the traffic goes to that target group.

                 (structure)
                     Describes the weight of a target group.

                     targetGroupIdentifier -> (string)
                        The  ID  or  Amazon  Resource Name (ARN) of the target
                        group.

                     weight -> (integer)
                        Only required if you specify  multiple  target  groups
                        for  a  forward  action. The weight determines how re-
                        quests are distributed to the target group. For  exam-
                        ple,  if  you  specify  two target groups, each with a
                        weight of 10, each target group receives half the  re-
                        quests.  If  you specify two target groups, one with a
                        weight of 10 and the other with a weight  of  20,  the
                        target  group  with  a  weight of 20 receives twice as
                        many requests as the other target  group.  If  there's
                        only  one  target  group  specified,  then the default
                        value is 100.

       arn -> (string)
          The Amazon Resource Name (ARN) of the rule.

       id -> (string)
          The ID of the rule.

       match -> (tagged union structure)
          The rule match. The RuleMatch must be an HttpMatch . This means that
          the rule should be an exact match on HTTP constraints which are made
          up of the HTTP method, path, and header.

          NOTE:
              This is a Tagged Union structure. Only one of the following  top
              level keys can be set: httpMatch.

          httpMatch -> (structure)
              The HTTP criteria that a rule must match.

              headerMatches -> (list)
                 The header matches. Matches incoming requests with rule based
                 on request header value before applying rule action.

                 (structure)
                     Describes the constraints for a header match. Matches in-
                     coming  requests  with rule based on request header value
                     before applying rule action.

                     caseSensitive -> (boolean)
                        Indicates whether the match is case sensitive.

                     match -> (tagged union structure)
                        The header match type.

                        NOTE:
                            This is a Tagged Union structure. Only one of  the
                            following top level keys can be set: contains, ex-
                            act, prefix.

                        contains -> (string)
                            A contains type match.

                        exact -> (string)
                            An exact type match.

                        prefix -> (string)
                            A prefix type match. Matches the  value  with  the
                            prefix.

                     name -> (string)
                        The name of the header.

              method -> (string)
                 The HTTP method type.

              pathMatch -> (structure)
                 The path match.

                 caseSensitive -> (boolean)
                     Indicates whether the match is case sensitive.

                 match -> (tagged union structure)
                     The type of path match.

                     NOTE:
                        This is a Tagged Union structure. Only one of the fol-
                        lowing top level keys can be set: exact, prefix.

                     exact -> (string)
                        An exact match of the path.

                     prefix -> (string)
                        A prefix match of the path.

       name -> (string)
          The name of the rule.

       priority -> (integer)
          The priority assigned to the rule. The lower the priority number the
          higher the priority.



                                                                 CREATE-RULE()
