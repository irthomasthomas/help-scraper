PUT-PIPELINE-DEFINITION()                            PUT-PIPELINE-DEFINITION()



NAME
       put-pipeline-definition -

DESCRIPTION
       Adds tasks, schedules, and preconditions to the specified pipeline. You
       can use PutPipelineDefinition to populate a new pipeline.
          PutPipelineDefinition also validates the configuration as it adds it
          to the pipeline. Changes to the pipeline are saved unless one of the
          following three validation errors exists in the pipeline.

       o An object is missing a name or identifier field.

       o A string or reference field is empty.

       o The number of objects in the pipeline exceeds the maximum allowed ob-
         jects.

       o The pipeline is in a FINISHED state.

       Pipeline object definitions are passed to the PutPipelineDefinition ac-
       tion and returned by the  GetPipelineDefinition action.

       See also: AWS API Documentation

SYNOPSIS
            put-pipeline-definition
          --pipeline-id <value>
          [--parameter-objects <value>]
          [--parameter-values <value>]
          --pipeline-definition <value>
          [--parameter-values-uri <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --pipeline-id (string)
          The ID of the pipeline.

       --parameter-objects (string) The JSON parameter objects. If the parame-
       ter  objects  are  in a file you can use the file://syntax to specify a
       filename. You can optionally provide these in  pipeline  definition  as
       well.  Parameter objects provided on command line would replace the one
       in definition.

       --parameter-values (string) The JSON parameter values. You can  specify
       these  as  key-value pairs in the key=value format. Multiple parameters
       are separated by a space. For list type parameter values  you  can  use
       the  same key name and specify each value as a key value pair. e.g. ar-
       rayValue=value1 arrayValue=value2

       --pipeline-definition (string) The JSON  pipeline  definition.  If  the
       pipeline definition is in a file you can use the file://syntax to spec-
       ify a filename.

       --parameter-values-uri (string) The JSON parameter values. If  the  pa-
       rameter values are in a file you can use the file://syntax to specify a
       filename. You can optionally provide these in  pipeline  definition  as
       well.  Parameter  values provided on command line would replace the one
       in definition.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To upload a pipeline definition

       This example uploads the specified pipeline definition to the specified
       pipeline:

          aws datapipeline put-pipeline-definition --pipeline-id df-00627471SOVYZEXAMPLE --pipeline-definition file://my-pipeline-definition.json

       The following is example output:

          {
            "validationErrors": [],
            "errored": false,
            "validationWarnings": []
          }

OUTPUT
       validationErrors -> (list)
          The  validation  errors that are associated with the objects defined
          in pipelineObjects .

          (structure)
              Defines a validation error. Validation errors  prevent  pipeline
              activation.  The  set  of validation errors that can be returned
              are defined by AWS Data Pipeline.

              id -> (string)
                 The identifier of the object that contains the validation er-
                 ror.

              errors -> (list)
                 A description of the validation error.

                 (string)

       validationWarnings -> (list)
          The validation warnings that are associated with the objects defined
          in pipelineObjects .

          (structure)
              Defines a validation warning. Validation warnings do not prevent
              pipeline  activation. The set of validation warnings that can be
              returned are defined by AWS Data Pipeline.

              id -> (string)
                 The identifier of the object  that  contains  the  validation
                 warning.

              warnings -> (list)
                 A description of the validation warning.

                 (string)

       errored -> (boolean)
          Indicates  whether  there  were  validation errors, and the pipeline
          definition is stored but cannot be activated until you  correct  the
          pipeline  and  call  PutPipelineDefinition  to  commit the corrected
          pipeline.



                                                     PUT-PIPELINE-DEFINITION()
