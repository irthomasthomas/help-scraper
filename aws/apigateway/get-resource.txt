GET-RESOURCE()                                                  GET-RESOURCE()



NAME
       get-resource -

DESCRIPTION
       Lists information about a resource.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-resource
          --rest-api-id <value>
          --resource-id <value>
          [--embed <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --rest-api-id (string)
          The string identifier of the associated RestApi.

       --resource-id (string)
          The identifier for the Resource resource.

       --embed (list)
          A  query  parameter  to retrieve the specified resources embedded in
          the returned Resource representation in the response. This embed pa-
          rameter  value  is a list of comma-separated strings. Currently, the
          request supports only retrieval of  the  embedded  Method  resources
          this way. The query parameter value must be a single-valued list and
          contain    the    "methods"     string.     For     example,     GET
          /restapis/{restapi_id}/resources/{resource_id}?embed=methods .

          (string)

       Syntax:

          "string" "string" ...

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To get information about a resource

       Command:

          aws apigateway get-resource --rest-api-id 1234123412 --resource-id zwo0y3

       Output:

          {
              "path": "/path",
              "pathPart": "path",
              "id": "zwo0y3",
              "parentId": "uyokt6ij2g"
          }

OUTPUT
       id -> (string)
          The resource's identifier.

       parentId -> (string)
          The parent resource's identifier.

       pathPart -> (string)
          The last path segment for this resource.

       path -> (string)
          The full path for this resource.

       resourceMethods -> (map)
          Gets an API resource's method of a given HTTP verb.

          key -> (string)

          value -> (structure)
              Represents  a  client-facing interface by which the client calls
              the API to access back-end resources. A Method resource is inte-
              grated  with  an Integration resource. Both consist of a request
              and one or more responses. The method request takes  the  client
              input that is passed to the back end through the integration re-
              quest. A method response returns the output from the back end to
              the  client through an integration response. A method request is
              embodied in a Method resource, whereas an integration request is
              embodied in an Integration resource. On the other hand, a method
              response is represented by a MethodResponse resource, whereas an
              integration  response  is  represented by an IntegrationResponse
              resource.

              httpMethod -> (string)
                 The method's HTTP verb.

              authorizationType -> (string)
                 The method's authorization type. Valid values  are  NONE  for
                 open  access,  AWS_IAM  for using AWS IAM permissions, CUSTOM
                 for using a custom authorizer, or COGNITO_USER_POOLS for  us-
                 ing a Cognito user pool.

              authorizerId -> (string)
                 The  identifier  of  an Authorizer to use on this method. The
                 authorizationType must be CUSTOM .

              apiKeyRequired -> (boolean)
                 A boolean flag specifying whether a valid ApiKey is  required
                 to invoke this method.

              requestValidatorId -> (string)
                 The identifier of a RequestValidator for request validation.

              operationName -> (string)
                 A human-friendly operation identifier for the method. For ex-
                 ample, you can assign the operationName of ListPets  for  the
                 GET /pets method in the PetStore example.

              requestParameters -> (map)
                 A  key-value map defining required or optional method request
                 parameters that can be accepted by API Gateway. A  key  is  a
                 method   request  parameter  name  matching  the  pattern  of
                 method.request.{location}.{name} , where location is  querys-
                 tring  ,  path , or header and name is a valid and unique pa-
                 rameter name. The value associated with the key is a  Boolean
                 flag  indicating whether the parameter is required (true ) or
                 optional (false ). The method request parameter names defined
                 here are available in Integration to be mapped to integration
                 request parameters or templates.

                 key -> (string)

                 value -> (boolean)

              requestModels -> (map)
                 A key-value map specifying data schemas, represented by Model
                 resources,  (as  the mapped value) of the request payloads of
                 given content types (as the mapping key).

                 key -> (string)

                 value -> (string)

              methodResponses -> (map)
                 Gets a method response associated with a  given  HTTP  status
                 code.

                 key -> (string)

                 value -> (structure)
                     Represents  a method response of a given HTTP status code
                     returned to the client. The  method  response  is  passed
                     from  the back end through the associated integration re-
                     sponse that can be transformed using a mapping template.

                     statusCode -> (string)
                        The method response's status code.

                     responseParameters -> (map)
                        A key-value map specifying required  or  optional  re-
                        sponse  parameters  that  API Gateway can send back to
                        the caller. A key defines a method response header and
                        the  value specifies whether the associated method re-
                        sponse header is required or not.  The  expression  of
                        the    key   must   match   the   pattern   method.re-
                        sponse.header.{name} ,  where  name  is  a  valid  and
                        unique  header  name. API Gateway passes certain inte-
                        gration response data to the method  response  headers
                        specified  here according to the mapping you prescribe
                        in the API's IntegrationResponse. The integration  re-
                        sponse  data that can be mapped include an integration
                        response   header   expressed    in    integration.re-
                        sponse.header.{name}  , a static value enclosed within
                        a pair of single quotes (e.g.,  'application/json'  ),
                        or  a  JSON expression from the back-end response pay-
                        load    in     the     form     of     integration.re-
                        sponse.body.{JSON-expression}  , where JSON-expression
                        is a valid JSON expression without the $ prefix.)

                        key -> (string)

                        value -> (boolean)

                     responseModels -> (map)
                        Specifies the Model resources used for the  response's
                        content-type.  Response  models  are  represented as a
                        key/value map, with a content-type as the  key  and  a
                        Model name as the value.

                        key -> (string)

                        value -> (string)

              methodIntegration -> (structure)
                 Gets  the  method's  integration  responsible for passing the
                 client-submitted request to the back end and performing  nec-
                 essary transformations to make the request compliant with the
                 back end.

                 type -> (string)
                     Specifies an API method integration type. The valid value
                     is one of the following:

                     For  the  HTTP and HTTP proxy integrations, each integra-
                     tion can specify a protocol (http/https ), port and path.
                     Standard 80 and 443 ports are supported as well as custom
                     ports above 1024. An HTTP or HTTP proxy integration  with
                     a  connectionType of VPC_LINK is referred to as a private
                     integration and uses a VpcLink to connect API Gateway  to
                     a network load balancer of a VPC.

                 httpMethod -> (string)
                     Specifies the integration's HTTP method type.

                 uri -> (string)
                     Specifies  Uniform Resource Identifier (URI) of the inte-
                     gration endpoint.

                     For HTTP or HTTP_PROXY integrations, the URI  must  be  a
                     fully  formed,  encoded  HTTP(S)  URL  according  to  the
                     RFC-3986 specification, for either standard  integration,
                     where  connectionType  is not VPC_LINK , or private inte-
                     gration, where connectionType is VPC_LINK . For a private
                     HTTP  integration,  the  URI is not used for routing. For
                     AWS or AWS_PROXY integrations, the URI  is  of  the  form
                     arn:aws:apigateway:{region}:{subdomain.service|ser-
                     vice}:path|action/{service_api} . Here, {Region}  is  the
                     API  Gateway  region  (e.g., us-east-1); {service} is the
                     name of the integrated Amazon Web Services service (e.g.,
                     s3);  and {subdomain} is a designated subdomain supported
                     by certain Amazon Web Services service for fast host-name
                     lookup.  action  can  be  used for an Amazon Web Services
                     service    action-based     API,     using     an     Ac-
                     tion={name}&{p1}={v1}&p2={v2}...  query string. The ensu-
                     ing {service_api} refers to  a  supported  action  {name}
                     plus  any  required input parameters. Alternatively, path
                     can be used for an AWS service path-based API. The  ensu-
                     ing  service_api refers to the path to an Amazon Web Ser-
                     vices service resource, including the region of the inte-
                     grated  Amazon  Web  Services service, if applicable. For
                     example, for integration with the S3  API  of  GetObject,
                     the uri can be either arn:aws:apigateway:us-west-2:s3:ac-
                     tion/GetObject&Bucket={bucket}&Key={key} or  arn:aws:api-
                     gateway:us-west-2:s3:path/{bucket}/{key}

                 connectionType -> (string)
                     The  type  of  the  network connection to the integration
                     endpoint. The valid value  is  INTERNET  for  connections
                     through the public routable internet or VPC_LINK for pri-
                     vate connections between API Gateway and a  network  load
                     balancer in a VPC. The default value is INTERNET .

                 connectionId -> (string)
                     The  ID of the VpcLink used for the integration when con-
                     nectionType=VPC_LINK and undefined, otherwise.

                 credentials -> (string)
                     Specifies the credentials required for  the  integration,
                     if  any.  For  AWS integrations, three options are avail-
                     able. To specify an IAM Role for API Gateway  to  assume,
                     use  the  role's  Amazon  Resource Name (ARN). To require
                     that the caller's identity be passed through from the re-
                     quest,  specify  the  string arn:aws:iam::\*:user/\* . To
                     use resource-based permissions on supported AWS services,
                     specify null.

                 requestParameters -> (map)
                     A  key-value  map  specifying request parameters that are
                     passed from the method request to the back end.  The  key
                     is  an integration request parameter name and the associ-
                     ated value is a method request parameter value or  static
                     value  that  must  be  enclosed  within single quotes and
                     pre-encoded as required by the back end. The  method  re-
                     quest   parameter   value   must  match  the  pattern  of
                     method.request.{location}.{name}  ,  where  location   is
                     querystring  ,  path , or header and name must be a valid
                     and unique method request parameter name.

                     key -> (string)

                     value -> (string)

                 requestTemplates -> (map)
                     Represents a map of Velocity templates that  are  applied
                     on  the  request  payload  based on the value of the Con-
                     tent-Type header sent by the  client.  The  content  type
                     value  is  the  key  in  this map, and the template (as a
                     String) is the value.

                     key -> (string)

                     value -> (string)

                 passthroughBehavior -> (string)
                     Specifies how the method request body of an unmapped con-
                     tent  type will be passed through the integration request
                     to the back end without transformation. A content type is
                     unmapped  if  no mapping template is defined in the inte-
                     gration or the content type does not  match  any  of  the
                     mapped  content types, as specified in requestTemplates .
                     The valid value is one of the following: WHEN_NO_MATCH  :
                     passes  the  method  request body through the integration
                     request to the back end without transformation  when  the
                     method  request  content  type does not match any content
                     type associated with the mapping templates defined in the
                     integration   request.  WHEN_NO_TEMPLATES  :  passes  the
                     method request body through the  integration  request  to
                     the  back end without transformation when no mapping tem-
                     plate is defined in the integration request.  If  a  tem-
                     plate is defined when this option is selected, the method
                     request of an unmapped content-type will be rejected with
                     an  HTTP 415 Unsupported Media Type response. NEVER : re-
                     jects the method request with an HTTP 415 Unsupported Me-
                     dia  Type response when either the method request content
                     type does not match any content type associated with  the
                     mapping  templates  defined in the integration request or
                     no mapping template is defined  in  the  integration  re-
                     quest.

                 contentHandling -> (string)
                     Specifies how to handle request payload content type con-
                     versions. Supported values are CONVERT_TO_BINARY and CON-
                     VERT_TO_TEXT , with the following behaviors:

                     If this property is not defined, the request payload will
                     be passed through from the method request to  integration
                     request   without   modification,   provided   that   the
                     passthroughBehavior  is  configured  to  support  payload
                     pass-through.

                 timeoutInMillis -> (integer)
                     Custom  timeout  between  50 and 29,000 milliseconds. The
                     default value is 29,000 milliseconds or 29 seconds.

                 cacheNamespace -> (string)
                     Specifies a group of related cached  parameters.  By  de-
                     fault,   API   Gateway   uses  the  resource  ID  as  the
                     cacheNamespace . You can specify the same  cacheNamespace
                     across  resources  to return the same cached data for re-
                     quests to different resources.

                 cacheKeyParameters -> (list)
                     A list of request parameters  whose  values  API  Gateway
                     caches. To be valid values for cacheKeyParameters , these
                     parameters must also be specified for  Method  requestPa-
                     rameters .

                     (string)

                 integrationResponses -> (map)
                     Specifies the integration's responses.

                     key -> (string)

                     value -> (structure)
                        Represents  an  integration  response. The status code
                        must map to an existing MethodResponse, and parameters
                        and  templates  can  be used to transform the back-end
                        response.

                        statusCode -> (string)
                            Specifies the status code that is used to map  the
                            integration   response   to  an  existing  Method-
                            Response.

                        selectionPattern -> (string)
                            Specifies the regular expression  (regex)  pattern
                            used  to  choose  an integration response based on
                            the response from the back end.  For  example,  if
                            the success response returns nothing and the error
                            response returns some string, you could use the .+
                            regex  to match error response. However, make sure
                            that the error response does not contain any  new-
                            line  (\n  )  character in such cases. If the back
                            end is an AWS  Lambda  function,  the  AWS  Lambda
                            function  error  header  is matched. For all other
                            HTTP and AWS back ends, the HTTP  status  code  is
                            matched.

                        responseParameters -> (map)
                            A  key-value  map  specifying  response parameters
                            that are passed to the method  response  from  the
                            back  end. The key is a method response header pa-
                            rameter name and the mapped value is  an  integra-
                            tion  response  header  value,  a static value en-
                            closed within a pair of single quotes, or  a  JSON
                            expression from the integration response body. The
                            mapping key must match the pattern  of  method.re-
                            sponse.header.{name}  ,  where name is a valid and
                            unique header name. The  mapped  non-static  value
                            must   match   the   pattern   of  integration.re-
                            sponse.header.{name}      or       integration.re-
                            sponse.body.{JSON-expression}  ,  where  name is a
                            valid and unique response header name and JSON-ex-
                            pression  is a valid JSON expression without the $
                            prefix.

                            key -> (string)

                            value -> (string)

                        responseTemplates -> (map)
                            Specifies the templates used to transform the  in-
                            tegration  response  body.  Response templates are
                            represented  as  a  key/value  map,  with  a  con-
                            tent-type as the key and a template as the value.

                            key -> (string)

                            value -> (string)

                        contentHandling -> (string)
                            Specifies  how  to handle response payload content
                            type  conversions.  Supported  values   are   CON-
                            VERT_TO_BINARY and CONVERT_TO_TEXT , with the fol-
                            lowing behaviors:

                            If this property is not defined, the response pay-
                            load  will  be passed through from the integration
                            response to the method response without  modifica-
                            tion.

                 tlsConfig -> (structure)
                     Specifies the TLS configuration for an integration.

                     insecureSkipVerification -> (boolean)
                        Specifies  whether  or not API Gateway skips verifica-
                        tion that the certificate for an integration  endpoint
                        is  issued  by a supported certificate authority. This
                        isnt recommended, but it enables you to  use  certifi-
                        cates  that are signed by private certificate authori-
                        ties, or certificates that  are  self-signed.  If  en-
                        abled,  API  Gateway  still performs basic certificate
                        validation, which includes checking the  certificate's
                        expiration date, hostname, and presence of a root cer-
                        tificate  authority.  Supported  only  for  HTTP   and
                        HTTP_PROXY integrations.

                        WARNING:
                            Enabling   insecureSkipVerification  isn't  recom-
                            mended, especially for  integrations  with  public
                            HTTPS endpoints. If you enable insecureSkipVerifi-
                            cation , you increase the risk of  man-in-the-mid-
                            dle attacks.

              authorizationScopes -> (list)
                 A  list of authorization scopes configured on the method. The
                 scopes are used with a COGNITO_USER_POOLS authorizer  to  au-
                 thorize  the  method  invocation.  The authorization works by
                 matching the method scopes against the scopes parsed from the
                 access  token  in the incoming request. The method invocation
                 is authorized if any method scopes matches a claimed scope in
                 the  access  token.  Otherwise,  the invocation is not autho-
                 rized. When the method scope is configured, the  client  must
                 provide  an access token instead of an identity token for au-
                 thorization purposes.

                 (string)



                                                                GET-RESOURCE()
