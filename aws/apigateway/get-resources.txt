GET-RESOURCES()                                                GET-RESOURCES()



NAME
       get-resources -

DESCRIPTION
       Lists information about a collection of Resource resources.

       See also: AWS API Documentation

       get-resources  is  a paginated operation. Multiple API calls may be is-
       sued in order to retrieve the entire data set of results. You can  dis-
       able  pagination  by  providing the --no-paginate argument.  When using
       --output text and the --query argument on  a  paginated  response,  the
       --query  argument  must  extract data from the results of the following
       query expressions: items

SYNOPSIS
            get-resources
          --rest-api-id <value>
          [--embed <value>]
          [--cli-input-json <value>]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --rest-api-id (string)
          The string identifier of the associated RestApi.

       --embed (list)
          A query parameter used to retrieve the specified resources  embedded
          in  the  returned Resources resource in the response. This embed pa-
          rameter value is a list of comma-separated strings.  Currently,  the
          request  supports  only  retrieval  of the embedded Method resources
          this way. The query parameter value must be a single-valued list and
          contain     the     "methods"     string.     For    example,    GET
          /restapis/{restapi_id}/resources?embed=methods .

          (string)

       Syntax:

          "string" "string" ...

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --starting-token (string)
          A  token to specify where to start paginating. This is the NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The  size of each page to get in the AWS service call. This does not
          affect the number of items returned in the command's output. Setting
          a  smaller  page  size results in more calls to the AWS service, re-
          trieving fewer items in each call. This can  help  prevent  the  AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The total number of items to return in the command's output. If  the
          total  number of items available is more than the value specified, a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent command. Do not use the NextToken response element  directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To get a list of resources for a REST API

       Command:

          aws apigateway get-resources --rest-api-id 1234123412

       Output:

          {
              "items": [
                  {
                      "path": "/resource/subresource",
                      "resourceMethods": {
                          "POST": {}
                      },
                      "id": "024ace",
                      "pathPart": "subresource",
                      "parentId": "ai5b02"
                  }
              ]
          }

OUTPUT
       position -> (string)

       items -> (list)
          The current page of elements from this collection.

          (structure)
              Represents an API resource.

              id -> (string)
                 The resource's identifier.

              parentId -> (string)
                 The parent resource's identifier.

              pathPart -> (string)
                 The last path segment for this resource.

              path -> (string)
                 The full path for this resource.

              resourceMethods -> (map)
                 Gets an API resource's method of a given HTTP verb.

                 key -> (string)

                 value -> (structure)
                     Represents a client-facing interface by which the  client
                     calls  the API to access back-end resources. A Method re-
                     source is integrated with an Integration  resource.  Both
                     consist  of  a  request  and  one  or more responses. The
                     method request takes the client input that is  passed  to
                     the  back  end  through the integration request. A method
                     response returns the output from  the  back  end  to  the
                     client  through an integration response. A method request
                     is embodied in a Method resource, whereas an  integration
                     request  is  embodied  in an Integration resource. On the
                     other hand, a method response is represented by a Method-
                     Response  resource,  whereas  an  integration response is
                     represented by an IntegrationResponse resource.

                     httpMethod -> (string)
                        The method's HTTP verb.

                     authorizationType -> (string)
                        The method's authorization type. Valid values are NONE
                        for  open  access,  AWS_IAM  for using AWS IAM permis-
                        sions, CUSTOM for using a custom authorizer,  or  COG-
                        NITO_USER_POOLS for using a Cognito user pool.

                     authorizerId -> (string)
                        The identifier of an Authorizer to use on this method.
                        The authorizationType must be CUSTOM .

                     apiKeyRequired -> (boolean)
                        A boolean flag specifying whether a  valid  ApiKey  is
                        required to invoke this method.

                     requestValidatorId -> (string)
                        The identifier of a RequestValidator for request vali-
                        dation.

                     operationName -> (string)
                        A human-friendly operation identifier for the  method.
                        For example, you can assign the operationName of List-
                        Pets for the GET /pets method in the PetStore example.

                     requestParameters -> (map)
                        A key-value map defining required or  optional  method
                        request  parameters  that can be accepted by API Gate-
                        way. A key is a method request parameter name matching
                        the   pattern  of  method.request.{location}.{name}  ,
                        where location is querystring , path , or  header  and
                        name  is  a valid and unique parameter name. The value
                        associated with the key is a Boolean  flag  indicating
                        whether  the parameter is required (true ) or optional
                        (false ). The method request parameter  names  defined
                        here  are available in Integration to be mapped to in-
                        tegration request parameters or templates.

                        key -> (string)

                        value -> (boolean)

                     requestModels -> (map)
                        A key-value map specifying data  schemas,  represented
                        by  Model  resources, (as the mapped value) of the re-
                        quest payloads of given content types (as the  mapping
                        key).

                        key -> (string)

                        value -> (string)

                     methodResponses -> (map)
                        Gets  a  method  response associated with a given HTTP
                        status code.

                        key -> (string)

                        value -> (structure)
                            Represents a method response of a given HTTP  sta-
                            tus  code  returned  to the client. The method re-
                            sponse is passed from the back end through the as-
                            sociated  integration  response that can be trans-
                            formed using a mapping template.

                            statusCode -> (string)
                               The method response's status code.

                            responseParameters -> (map)
                               A key-value map specifying required or optional
                               response  parameters  that API Gateway can send
                               back to the caller. A key defines a method  re-
                               sponse  header  and the value specifies whether
                               the associated method response  header  is  re-
                               quired  or  not. The expression of the key must
                               match the pattern method.response.header.{name}
                               , where name is a valid and unique header name.
                               API Gateway passes certain integration response
                               data  to  the method response headers specified
                               here according to the mapping you prescribe  in
                               the  API's IntegrationResponse. The integration
                               response data that can be mapped include an in-
                               tegration response header expressed in integra-
                               tion.response.header.{name} ,  a  static  value
                               enclosed  within a pair of single quotes (e.g.,
                               'application/json' ), or a JSON expression from
                               the  back-end  response  payload in the form of
                               integration.response.body.{JSON-expression}   ,
                               where  JSON-expression  is a valid JSON expres-
                               sion without the $ prefix.)

                               key -> (string)

                               value -> (boolean)

                            responseModels -> (map)
                               Specifies the Model resources used for the  re-
                               sponse's content-type. Response models are rep-
                               resented  as  a  key/value  map,  with  a  con-
                               tent-type  as  the  key and a Model name as the
                               value.

                               key -> (string)

                               value -> (string)

                     methodIntegration -> (structure)
                        Gets the method's integration responsible for  passing
                        the  client-submitted request to the back end and per-
                        forming necessary transformations to make the  request
                        compliant with the back end.

                        type -> (string)
                            Specifies  an  API  method  integration  type. The
                            valid value is one of the following:

                            For the HTTP and HTTP proxy integrations, each in-
                            tegration  can  specify  a protocol (http/https ),
                            port and path. Standard 80 and 443 ports are  sup-
                            ported as well as custom ports above 1024. An HTTP
                            or HTTP proxy integration with a connectionType of
                            VPC_LINK  is  referred to as a private integration
                            and uses a VpcLink to connect  API  Gateway  to  a
                            network load balancer of a VPC.

                        httpMethod -> (string)
                            Specifies  the integration's HTTP method type. For
                            the Type property, if  you  specify  MOCK  ,  this
                            property is optional. For Lambda integrations, you
                            must set the integration method to POST . For  all
                            other types, you must specify this property.

                        uri -> (string)
                            Specifies Uniform Resource Identifier (URI) of the
                            integration endpoint.

                            For HTTP or HTTP_PROXY integrations, the URI  must
                            be  a  fully formed, encoded HTTP(S) URL according
                            to the RFC-3986 specification for  standard  inte-
                            grations.  If  connectionType  is VPC_LINK specify
                            the Network Load Balancer DNS  name.  For  AWS  or
                            AWS_PROXY  integrations,  the  URI  is of the form
                            arn:aws:apigateway:{region}:{subdomain.ser-
                            vice|service}:path|action/{service_api}   .  Here,
                            {Region}  is  the  API   Gateway   region   (e.g.,
                            us-east-1);  {service}  is  the  name of the inte-
                            grated Amazon Web Services service (e.g., s3); and
                            {subdomain} is a designated subdomain supported by
                            certain  Amazon  Web  Services  service  for  fast
                            host-name lookup. action can be used for an Amazon
                            Web Services service action-based  API,  using  an
                            Action={name}&{p1}={v1}&p2={v2}...  query  string.
                            The ensuing {service_api} refers  to  a  supported
                            action  {name} plus any required input parameters.
                            Alternatively, path can be used for an Amazon  Web
                            Services  service path-based API. The ensuing ser-
                            vice_api refers to the path to an Amazon Web  Ser-
                            vices  service  resource,  including the region of
                            the integrated Amazon Web Services service, if ap-
                            plicable. For example, for integration with the S3
                            API  of  GetObject,  the   uri   can   be   either
                            arn:aws:apigateway:us-west-2:s3:action/GetOb-
                            ject&Bucket={bucket}&Key={key} or arn:aws:apigate-
                            way:us-west-2:s3:path/{bucket}/{key}

                        connectionType -> (string)
                            The type of the network connection to the integra-
                            tion endpoint. The valid  value  is  INTERNET  for
                            connections  through  the public routable internet
                            or VPC_LINK for private  connections  between  API
                            Gateway  and a network load balancer in a VPC. The
                            default value is INTERNET .

                        connectionId -> (string)
                            The ID of the VpcLink  used  for  the  integration
                            when connectionType=VPC_LINK and undefined, other-
                            wise.

                        credentials -> (string)
                            Specifies the credentials required for  the  inte-
                            gration,  if  any. For AWS integrations, three op-
                            tions are available. To specify an  IAM  Role  for
                            API  Gateway  to assume, use the role's Amazon Re-
                            source Name (ARN). To require  that  the  caller's
                            identity be passed through from the request, spec-
                            ify the string arn:aws:iam::\*:user/\*  .  To  use
                            resource-based permissions on supported Amazon Web
                            Services services, specify null.

                        requestParameters -> (map)
                            A key-value map specifying request parameters that
                            are  passed  from  the  method request to the back
                            end. The key is an integration  request  parameter
                            name  and the associated value is a method request
                            parameter value or static value that must  be  en-
                            closed within single quotes and pre-encoded as re-
                            quired by the back end. The method request parame-
                            ter  value  must  match  the pattern of method.re-
                            quest.{location}.{name}  ,   where   location   is
                            querystring  , path , or header and name must be a
                            valid and unique method request parameter name.

                            key -> (string)

                            value -> (string)

                        requestTemplates -> (map)
                            Represents a map of Velocity  templates  that  are
                            applied  on the request payload based on the value
                            of the Content-Type header sent by the client. The
                            content type value is the key in this map, and the
                            template (as a String) is the value.

                            key -> (string)

                            value -> (string)

                        passthroughBehavior -> (string)
                            Specifies how the method request body  of  an  un-
                            mapped content type will be passed through the in-
                            tegration request to the back end  without  trans-
                            formation.  A  content type is unmapped if no map-
                            ping template is defined in the integration or the
                            content type does not match any of the mapped con-
                            tent types, as specified in requestTemplates . The
                            valid value is one of the following: WHEN_NO_MATCH
                            : passes the method request body through the inte-
                            gration  request to the back end without transfor-
                            mation when the method request content  type  does
                            not  match  any  content  type associated with the
                            mapping templates defined in the  integration  re-
                            quest.  WHEN_NO_TEMPLATES  : passes the method re-
                            quest body through the integration request to  the
                            back  end  without  transformation when no mapping
                            template is defined in the integration request. If
                            a  template  is  defined  when  this option is se-
                            lected, the method request  of  an  unmapped  con-
                            tent-type will be rejected with an HTTP 415 Unsup-
                            ported Media Type response. NEVER  :  rejects  the
                            method  request with an HTTP 415 Unsupported Media
                            Type response when either the method request  con-
                            tent  type does not match any content type associ-
                            ated with the mapping templates defined in the in-
                            tegration  request  or  no mapping template is de-
                            fined in the integration request.

                        contentHandling -> (string)
                            Specifies how to handle  request  payload  content
                            type   conversions.   Supported  values  are  CON-
                            VERT_TO_BINARY and CONVERT_TO_TEXT , with the fol-
                            lowing behaviors:

                            If  this property is not defined, the request pay-
                            load will be passed through from  the  method  re-
                            quest to integration request without modification,
                            provided that the passthroughBehavior  is  config-
                            ured to support payload pass-through.

                        timeoutInMillis -> (integer)
                            Custom timeout between 50 and 29,000 milliseconds.
                            The default value is  29,000  milliseconds  or  29
                            seconds.

                        cacheNamespace -> (string)
                            Specifies a group of related cached parameters. By
                            default, API Gateway uses the resource ID  as  the
                            cacheNamespace   .   You   can  specify  the  same
                            cacheNamespace across resources to return the same
                            cached data for requests to different resources.

                        cacheKeyParameters -> (list)
                            A  list  of  request  parameters  whose values API
                            Gateway caches. To be valid values for cacheKeyPa-
                            rameters , these parameters must also be specified
                            for Method requestParameters .

                            (string)

                        integrationResponses -> (map)
                            Specifies the integration's responses.

                            key -> (string)

                            value -> (structure)
                               Represents an integration response. The  status
                               code  must  map  to an existing MethodResponse,
                               and parameters and templates  can  be  used  to
                               transform the back-end response.

                               statusCode -> (string)
                                   Specifies  the  status code that is used to
                                   map the integration response to an existing
                                   MethodResponse.

                               selectionPattern -> (string)
                                   Specifies  the  regular  expression (regex)
                                   pattern used to choose an  integration  re-
                                   sponse  based on the response from the back
                                   end. For example, if the  success  response
                                   returns  nothing and the error response re-
                                   turns some string, you  could  use  the  .+
                                   regex  to  match  error  response. However,
                                   make sure that the error response does  not
                                   contain any newline (\n ) character in such
                                   cases. If the back end is an  Lambda  func-
                                   tion,  the  Lambda function error header is
                                   matched. For all other HTTP and Amazon  Web
                                   Services back ends, the HTTP status code is
                                   matched.

                               responseParameters -> (map)
                                   A key-value map specifying response parame-
                                   ters that are passed to the method response
                                   from the back end. The key is a method  re-
                                   sponse header parameter name and the mapped
                                   value is  an  integration  response  header
                                   value,  a  static  value  enclosed within a
                                   pair of single quotes, or a JSON expression
                                   from  the  integration  response  body. The
                                   mapping  key  must  match  the  pattern  of
                                   method.response.header.{name}  , where name
                                   is a valid  and  unique  header  name.  The
                                   mapped non-static value must match the pat-
                                   tern of  integration.response.header.{name}
                                   or  integration.response.body.{JSON-expres-
                                   sion} , where name is a  valid  and  unique
                                   response header name and JSON-expression is
                                   a valid JSON expression without the $  pre-
                                   fix.

                                   key -> (string)

                                   value -> (string)

                               responseTemplates -> (map)
                                   Specifies  the  templates used to transform
                                   the  integration  response  body.  Response
                                   templates  are  represented  as a key/value
                                   map, with a content-type as the key  and  a
                                   template as the value.

                                   key -> (string)

                                   value -> (string)

                               contentHandling -> (string)
                                   Specifies  how  to  handle response payload
                                   content type conversions. Supported  values
                                   are CONVERT_TO_BINARY and CONVERT_TO_TEXT ,
                                   with the following behaviors:

                                   If this property is not  defined,  the  re-
                                   sponse  payload will be passed through from
                                   the integration response to the method  re-
                                   sponse without modification.

                        tlsConfig -> (structure)
                            Specifies  the  TLS  configuration for an integra-
                            tion.

                            insecureSkipVerification -> (boolean)
                               Specifies whether or not API Gateway skips ver-
                               ification  that the certificate for an integra-
                               tion endpoint is issued by a supported certifi-
                               cate  authority.  This isnt recommended, but it
                               enables you to use certificates that are signed
                               by private certificate authorities, or certifi-
                               cates that are  self-signed.  If  enabled,  API
                               Gateway  still performs basic certificate vali-
                               dation, which includes  checking  the  certifi-
                               cate's  expiration date, hostname, and presence
                               of a root certificate authority. Supported only
                               for HTTP and HTTP_PROXY integrations.

                               WARNING:
                                   Enabling   insecureSkipVerification   isn't
                                   recommended,  especially  for  integrations
                                   with  public HTTPS endpoints. If you enable
                                   insecureSkipVerification , you increase the
                                   risk of man-in-the-middle attacks.

                     authorizationScopes -> (list)
                        A  list  of  authorization  scopes  configured  on the
                        method. The scopes are used with a  COGNITO_USER_POOLS
                        authorizer to authorize the method invocation. The au-
                        thorization  works  by  matching  the  method   scopes
                        against the scopes parsed from the access token in the
                        incoming request. The method invocation is  authorized
                        if  any  method  scopes matches a claimed scope in the
                        access token. Otherwise, the invocation is not  autho-
                        rized. When the method scope is configured, the client
                        must provide an access token instead  of  an  identity
                        token for authorization purposes.

                        (string)



                                                               GET-RESOURCES()
