UPDATE-STAGE()                                                  UPDATE-STAGE()



NAME
       update-stage -

DESCRIPTION
       Changes information about a Stage resource.

       See also: AWS API Documentation

SYNOPSIS
            update-stage
          --rest-api-id <value>
          --stage-name <value>
          [--patch-operations <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --rest-api-id (string)
          The string identifier of the associated RestApi.

       --stage-name (string)
          The name of the Stage resource to change information about.

       --patch-operations (list)
          For more information about supported patch operations, see Patch Op-
          erations .

          (structure)
              For more information about supported patch operations, see Patch
              Operations .

              op -> (string)
                 An  update operation to be performed with this PATCH request.
                 The valid value can be add, remove, replace or copy. Not  all
                 valid  operations are supported for a given resource. Support
                 of the operations depends on specific  operational  contexts.
                 Attempts to apply an unsupported operation on a resource will
                 return an error message..

              path -> (string)
                 The op operation's target, as identified by  a  JSON  Pointer
                 value  that  references  a  location  within the targeted re-
                 source. For example, if the target resource has an updateable
                 property  of  {"name":"value"}, the path for this property is
                 /name. If the name property value is  a  JSON  object  (e.g.,
                 {"name":  {"child/name":  "child-value"}}),  the path for the
                 child/name property  will  be  /name/child~1name.  Any  slash
                 ("/")  character appearing in path names must be escaped with
                 "~1", as shown in the example above. Each  op  operation  can
                 have only one path associated with it.

              value -> (string)
                 The  new target value of the update operation. It is applica-
                 ble for the add or replace operation. When using AWS  CLI  to
                 update  a  property  of a JSON value, enclose the JSON object
                 with a pair of single quotes in a Linux shell,  e.g.,  '{"a":
                 ...}'.

              from -> (string)
                 The  copy  update  operation's  source  as  identified  by  a
                 JSON-Pointer value referencing the location within  the  tar-
                 geted  resource  to copy the value from. For example, to pro-
                 mote a canary deployment, you copy the canary  deployment  ID
                 to the affiliated deployment ID by calling a PATCH request on
                 a  Stage  resource  with   "op":"copy",   "from":"/canarySet-
                 tings/deploymentId" and "path":"/deploymentId".

       Shorthand Syntax:

          op=string,path=string,value=string,from=string ...

       JSON Syntax:

          [
            {
              "op": "add"|"remove"|"replace"|"move"|"copy"|"test",
              "path": "string",
              "value": "string",
              "from": "string"
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       Example 1: To override the stage settings for a resource and method

       The following update-stage example overrides  the  stage  settings  and
       turns  off  full  request/response  logging for a specific resource and
       method.

          aws apigateway update-stage \
              --rest-api-id 1234123412 \
              --stage-name 'dev' \
              --patch-operations op=replace,path=/~1resourceName/GET/logging/dataTrace,value=false

       Output:

          {
              "deploymentId": "5ubd17",
              "stageName": "dev",
              "cacheClusterEnabled": false,
              "cacheClusterStatus": "NOT_AVAILABLE",
              "methodSettings": {
                  "~1resourceName/GET": {
                      "metricsEnabled": false,
                      "dataTraceEnabled": false,
                      "throttlingBurstLimit": 5000,
                      "throttlingRateLimit": 10000.0,
                      "cachingEnabled": false,
                      "cacheTtlInSeconds": 300,
                      "cacheDataEncrypted": false,
                      "requireAuthorizationForCacheControl": true,
                      "unauthorizedCacheControlHeaderStrategy": "SUCCEED_WITH_RESPONSE_HEADER"
                  }
              },
              "tracingEnabled": false,
              "createdDate": "2022-07-18T10:11:18-07:00",
              "lastUpdatedDate": "2022-07-18T10:19:04-07:00"
          }

       For more information, see Setting up a stage for a REST API in the Ama-
       zon API Gateway Developer Guide.

       Example  2:  To update the stage settings for all resources and methods
       of an API stage

       The following update-stage example turns on full request/response  log-
       ging for all resources and methods of an API stage.

          aws apigateway update-stage \
              --rest-api-id 1234123412 \
              --stage-name 'dev' \
              --patch-operations 'op=replace,path=/*/*/logging/dataTrace,value=true'

       Output:

          {
              "deploymentId": "5ubd17",
              "stageName": "dev",
              "cacheClusterEnabled": false,
              "cacheClusterStatus": "NOT_AVAILABLE",
              "methodSettings": {
                  "*/*": {
                      "metricsEnabled": false,
                      "dataTraceEnabled": true,
                      "throttlingBurstLimit": 5000,
                      "throttlingRateLimit": 10000.0,
                      "cachingEnabled": false,
                      "cacheTtlInSeconds": 300,
                      "cacheDataEncrypted": false,
                      "requireAuthorizationForCacheControl": true,
                      "unauthorizedCacheControlHeaderStrategy": "SUCCEED_WITH_RESPONSE_HEADER"
                  }
              },
              "tracingEnabled": false,
              "createdDate": "2022-07-18T10:11:18-07:00",
              "lastUpdatedDate": "2022-07-18T10:31:04-07:00"
          }

       For more information, see Setting up a stage for a REST API in the Ama-
       zon API Gateway Developer Guide.

OUTPUT
       deploymentId -> (string)
          The identifier of the Deployment that the stage points to.

       clientCertificateId -> (string)
          The identifier of a client certificate for an API stage.

       stageName -> (string)
          The name of the stage is the first path segment in the  Uniform  Re-
          source  Identifier  (URI)  of a call to API Gateway. Stage names can
          only contain alphanumeric characters, hyphens, and underscores. Max-
          imum length is 128 characters.

       description -> (string)
          The stage's description.

       cacheClusterEnabled -> (boolean)
          Specifies whether a cache cluster is enabled for the stage. To acti-
          vate a method-level cache, set CachingEnabled to true for a method.

       cacheClusterSize -> (string)
          The stage's cache capacity in GB. For more information about  choos-
          ing a cache size, see Enabling API caching to enhance responsiveness
          .

       cacheClusterStatus -> (string)
          The status of the cache cluster for the stage, if enabled.

       methodSettings -> (map)
          A map that defines the method settings for a  Stage  resource.  Keys
          (designated  as /{method_setting_key below) are method paths defined
          as {resource_path}/{http_method} for an individual method  override,
          or /\*/\* for overriding all methods in the stage.

          key -> (string)

          value -> (structure)
              Specifies the method setting properties.

              metricsEnabled -> (boolean)
                 Specifies  whether  Amazon CloudWatch metrics are enabled for
                 this method.

              loggingLevel -> (string)
                 Specifies the logging level for this  method,  which  affects
                 the  log entries pushed to Amazon CloudWatch Logs. Valid val-
                 ues are OFF , ERROR , and INFO . Choose ERROR to  write  only
                 error-level entries to CloudWatch Logs, or choose INFO to in-
                 clude all ERROR events as well as extra informational events.

              dataTraceEnabled -> (boolean)
                 Specifies whether data trace  logging  is  enabled  for  this
                 method, which affects the log entries pushed to Amazon Cloud-
                 Watch Logs. This can be useful to troubleshoot APIs, but  can
                 result in logging sensitive data. We recommend that you don't
                 enable this option for production APIs.

              throttlingBurstLimit -> (integer)
                 Specifies the throttling burst limit.

              throttlingRateLimit -> (double)
                 Specifies the throttling rate limit.

              cachingEnabled -> (boolean)
                 Specifies whether responses should be cached and returned for
                 requests.  A  cache  cluster must be enabled on the stage for
                 responses to be cached.

              cacheTtlInSeconds -> (integer)
                 Specifies the time to live (TTL), in seconds, for cached  re-
                 sponses.  The higher the TTL, the longer the response will be
                 cached.

              cacheDataEncrypted -> (boolean)
                 Specifies whether the cached responses are encrypted.

              requireAuthorizationForCacheControl -> (boolean)
                 Specifies whether authorization is required for a  cache  in-
                 validation request.

              unauthorizedCacheControlHeaderStrategy -> (string)
                 Specifies  how  to handle unauthorized requests for cache in-
                 validation.

       variables -> (map)
          A map that defines the stage variables for a Stage  resource.  Vari-
          able  names can have alphanumeric and underscore characters, and the
          values must match [A-Za-z0-9-._~:/?#&=,]+ .

          key -> (string)

          value -> (string)

       documentationVersion -> (string)
          The version of the associated API documentation.

       accessLogSettings -> (structure)
          Settings for logging access in this stage.

          format -> (string)
              A single line format of the access logs of data, as specified by
              selected  $context  variables.  The format must include at least
              $context.requestId .

          destinationArn -> (string)
              The Amazon Resource Name (ARN) of the CloudWatch Logs log  group
              or Kinesis Data Firehose delivery stream to receive access logs.
              If you specify a Kinesis  Data  Firehose  delivery  stream,  the
              stream name must begin with amazon-apigateway- .

       canarySettings -> (structure)
          Settings for the canary deployment in this stage.

          percentTraffic -> (double)
              The percent (0-100) of traffic diverted to a canary deployment.

          deploymentId -> (string)
              The ID of the canary deployment.

          stageVariableOverrides -> (map)
              Stage  variables overridden for a canary release deployment, in-
              cluding new stage variables  introduced  in  the  canary.  These
              stage  variables  are  represented as a string-to-string map be-
              tween stage variable names and their values.

              key -> (string)

              value -> (string)

          useStageCache -> (boolean)
              A Boolean flag to indicate whether the  canary  deployment  uses
              the stage cache or not.

       tracingEnabled -> (boolean)
          Specifies  whether  active  tracing  with  X-ray  is enabled for the
          Stage.

       webAclArn -> (string)
          The ARN of the WebAcl associated with the Stage.

       tags -> (map)
          The collection of tags. Each tag element is associated with a  given
          resource.

          key -> (string)

          value -> (string)

       createdDate -> (timestamp)
          The timestamp when the stage was created.

       lastUpdatedDate -> (timestamp)
          The timestamp when the stage last updated.



                                                                UPDATE-STAGE()
