UPDATE-AUTHORIZER()                                        UPDATE-AUTHORIZER()



NAME
       update-authorizer -

DESCRIPTION
       Updates an existing Authorizer resource.

       See also: AWS API Documentation

SYNOPSIS
            update-authorizer
          --rest-api-id <value>
          --authorizer-id <value>
          [--patch-operations <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --rest-api-id (string)
          The string identifier of the associated RestApi.

       --authorizer-id (string)
          The identifier of the Authorizer resource.

       --patch-operations (list)
          For more information about supported patch operations, see Patch Op-
          erations .

          (structure)
              For more information about supported patch operations, see Patch
              Operations .

              op -> (string)
                 An  update operation to be performed with this PATCH request.
                 The valid value can be add, remove, replace or copy. Not  all
                 valid  operations are supported for a given resource. Support
                 of the operations depends on specific  operational  contexts.
                 Attempts to apply an unsupported operation on a resource will
                 return an error message..

              path -> (string)
                 The op operation's target, as identified by  a  JSON  Pointer
                 value  that  references  a  location  within the targeted re-
                 source. For example, if the target resource has an updateable
                 property  of  {"name":"value"}, the path for this property is
                 /name. If the name property value is  a  JSON  object  (e.g.,
                 {"name":  {"child/name":  "child-value"}}),  the path for the
                 child/name property  will  be  /name/child~1name.  Any  slash
                 ("/")  character appearing in path names must be escaped with
                 "~1", as shown in the example above. Each  op  operation  can
                 have only one path associated with it.

              value -> (string)
                 The  new target value of the update operation. It is applica-
                 ble for the add or replace operation. When using AWS  CLI  to
                 update  a  property  of a JSON value, enclose the JSON object
                 with a pair of single quotes in a Linux shell,  e.g.,  '{"a":
                 ...}'.

              from -> (string)
                 The  copy  update  operation's  source  as  identified  by  a
                 JSON-Pointer value referencing the location within  the  tar-
                 geted  resource  to copy the value from. For example, to pro-
                 mote a canary deployment, you copy the canary  deployment  ID
                 to the affiliated deployment ID by calling a PATCH request on
                 a  Stage  resource  with   "op":"copy",   "from":"/canarySet-
                 tings/deploymentId" and "path":"/deploymentId".

       Shorthand Syntax:

          op=string,path=string,value=string,from=string ...

       JSON Syntax:

          [
            {
              "op": "add"|"remove"|"replace"|"move"|"copy"|"test",
              "path": "string",
              "value": "string",
              "from": "string"
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To change the name of the Custom Authorizer

       Command:

          aws apigateway update-authorizer --rest-api-id 1234123412 --authorizer-id gfi4n3 --patch-operations op='replace',path='/name',value='testAuthorizer'

       Output:

          {
              "authType": "custom",
              "name": "testAuthorizer",
              "authorizerUri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:123412341234:function:customAuthorizer/invocations",
              "authorizerResultTtlInSeconds": 300,
              "identitySource": "method.request.header.Authorization",
              "type": "TOKEN",
              "id": "gfi4n3"
          }

       To change the Lambda Function that is invoked by the Custom Authorizer

       Command:

          aws apigateway update-authorizer --rest-api-id 1234123412 --authorizer-id gfi4n3 --patch-operations op='replace',path='/authorizerUri',value='arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:123412341234:function:newAuthorizer/invocations'

       Output:

          {
              "authType": "custom",
              "name": "testAuthorizer",
              "authorizerUri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:123412341234:function:newAuthorizer/invocations",
              "authorizerResultTtlInSeconds": 300,
              "identitySource": "method.request.header.Authorization",
              "type": "TOKEN",
              "id": "gfi4n3"
          }

OUTPUT
       id -> (string)
          The identifier for the authorizer resource.

       name -> (string)
          The name of the authorizer.

       type -> (string)
          The authorizer type. Valid values are TOKEN for  a  Lambda  function
          using a single authorization token submitted in a custom header, RE-
          QUEST for a Lambda function using incoming request  parameters,  and
          COGNITO_USER_POOLS for using an Amazon Cognito user pool.

       providerARNs -> (list)
          A   list  of  the  Amazon  Cognito  user  pool  ARNs  for  the  COG-
          NITO_USER_POOLS  authorizer.  Each  element  is  of   this   format:
          arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}  .
          For a TOKEN or REQUEST authorizer, this is not defined.

          (string)

       authType -> (string)
          Optional customer-defined field, used in OpenAPI imports and exports
          without functional impact.

       authorizerUri -> (string)
          Specifies  the  authorizer's  Uniform Resource Identifier (URI). For
          TOKEN or REQUEST authorizers, this  must  be  a  well-formed  Lambda
          function        URI,       for       example,       arn:aws:apigate-
          way:us-west-2:lambda:path/2015-03-31/func-
          tions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_func-
          tion_name}/invocations  .  In  general,  the  URI  has   this   form
          arn:aws:apigateway:{region}:lambda:path/{service_api}  ,  where {re-
          gion} is the same as the region hosting the  Lambda  function,  path
          indicates  that the remaining substring in the URI should be treated
          as the path to the resource, including the initial /  .  For  Lambda
          functions,  this is usually of the form /2015-03-31/functions/[Func-
          tionARN]/invocations .

       authorizerCredentials -> (string)
          Specifies the required credentials as an IAM role for API Gateway to
          invoke the authorizer. To specify an IAM role for API Gateway to as-
          sume, use  the  role's  Amazon  Resource  Name  (ARN).  To  use  re-
          source-based permissions on the Lambda function, specify null.

       identitySource -> (string)
          The  identity source for which authorization is requested. For a TO-
          KEN or COGNITO_USER_POOLS authorizer, this is required and specifies
          the  request header mapping expression for the custom header holding
          the authorization token submitted by the client. For example, if the
          token  header  name  is  Auth  ,  the  header  mapping expression is
          method.request.header.Auth . For the REQUEST authorizer, this is re-
          quired  when  authorization  caching  is  enabled.  The  value  is a
          comma-separated string of one or more  mapping  expressions  of  the
          specified request parameters. For example, if an Auth header, a Name
          query string parameter are defined as identity sources,  this  value
          is  method.request.header.Auth  ,  method.request.querystring.Name .
          These parameters will be used to derive  the  authorization  caching
          key  and  to perform runtime validation of the REQUEST authorizer by
          verifying  all  of  the  identity-related  request  parameters   are
          present, not null and non-empty. Only when this is true does the au-
          thorizer invoke the authorizer Lambda function,  otherwise,  it  re-
          turns  a  401 Unauthorized response without calling the Lambda func-
          tion. The valid value is a string of comma-separated mapping expres-
          sions  of  the  specified request parameters. When the authorization
          caching is not enabled, this property is optional.

       identityValidationExpression -> (string)
          A validation expression for the incoming identity token.  For  TOKEN
          authorizers,   this   value   is  a  regular  expression.  For  COG-
          NITO_USER_POOLS authorizers, API Gateway will match the aud field of
          the incoming token from the client against the specified regular ex-
          pression. It will invoke the authorizer's Lambda function when there
          is  a  match.  Otherwise, it will return a 401 Unauthorized response
          without calling the Lambda function. The validation expression  does
          not apply to the REQUEST authorizer.

       authorizerResultTtlInSeconds -> (integer)
          The TTL in seconds of cached authorizer results. If it equals 0, au-
          thorization caching is disabled. If it is greater than 0, API  Gate-
          way  will  cache authorizer responses. If this field is not set, the
          default value is 300. The maximum value is 3600, or 1 hour.



                                                           UPDATE-AUTHORIZER()
