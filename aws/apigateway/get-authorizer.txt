GET-AUTHORIZER()                                              GET-AUTHORIZER()



NAME
       get-authorizer -

DESCRIPTION
       Describe an existing Authorizer resource.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            get-authorizer
          --rest-api-id <value>
          --authorizer-id <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --rest-api-id (string)
          The string identifier of the associated RestApi.

       --authorizer-id (string)
          The identifier of the Authorizer resource.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To get the API Gateway per-API Authorizer settings

       Command:

          aws apigateway get-authorizer --rest-api-id 1234123412 --authorizer-id gfi4n3

       Output:

          {
              "authorizerResultTtlInSeconds": 300,
              "name": "MyAuthorizer",
              "type": "TOKEN",
              "identitySource": "method.request.header.Authorization",
              "authorizerUri": "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:123412341234:function:authorizer_function/invocations",
              "id": "gfi4n3"
          }

OUTPUT
       id -> (string)
          The identifier for the authorizer resource.

       name -> (string)
          The name of the authorizer.

       type -> (string)
          The  authorizer  type.  Valid values are TOKEN for a Lambda function
          using a single authorization token submitted in a custom header, RE-
          QUEST  for  a Lambda function using incoming request parameters, and
          COGNITO_USER_POOLS for using an Amazon Cognito user pool.

       providerARNs -> (list)
          A  list  of  the  Amazon  Cognito  user  pool  ARNs  for  the   COG-
          NITO_USER_POOLS   authorizer.   Each  element  is  of  this  format:
          arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}  .
          For a TOKEN or REQUEST authorizer, this is not defined.

          (string)

       authType -> (string)
          Optional customer-defined field, used in OpenAPI imports and exports
          without functional impact.

       authorizerUri -> (string)
          Specifies the authorizer's Uniform Resource  Identifier  (URI).  For
          TOKEN  or  REQUEST  authorizers,  this  must be a well-formed Lambda
          function       URI,       for       example,        arn:aws:apigate-
          way:us-west-2:lambda:path/2015-03-31/func-
          tions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_func-
          tion_name}/invocations   .   In  general,  the  URI  has  this  form
          arn:aws:apigateway:{region}:lambda:path/{service_api} ,  where  {re-
          gion}  is  the  same as the region hosting the Lambda function, path
          indicates that the remaining substring in the URI should be  treated
          as  the  path  to the resource, including the initial / . For Lambda
          functions, this is usually of the form  /2015-03-31/functions/[Func-
          tionARN]/invocations .

       authorizerCredentials -> (string)
          Specifies the required credentials as an IAM role for API Gateway to
          invoke the authorizer. To specify an IAM role for API Gateway to as-
          sume,  use  the  role's  Amazon  Resource  Name  (ARN).  To  use re-
          source-based permissions on the Lambda function, specify null.

       identitySource -> (string)
          The identity source for which authorization is requested. For a  TO-
          KEN or COGNITO_USER_POOLS authorizer, this is required and specifies
          the request header mapping expression for the custom header  holding
          the authorization token submitted by the client. For example, if the
          token header name  is  Auth  ,  the  header  mapping  expression  is
          method.request.header.Auth . For the REQUEST authorizer, this is re-
          quired when  authorization  caching  is  enabled.  The  value  is  a
          comma-separated  string  of  one  or more mapping expressions of the
          specified request parameters. For example, if an Auth header, a Name
          query  string  parameter are defined as identity sources, this value
          is method.request.header.Auth  ,  method.request.querystring.Name  .
          These  parameters  will  be used to derive the authorization caching
          key and to perform runtime validation of the REQUEST  authorizer  by
          verifying   all  of  the  identity-related  request  parameters  are
          present, not null and non-empty. Only when this is true does the au-
          thorizer  invoke  the  authorizer Lambda function, otherwise, it re-
          turns a 401 Unauthorized response without calling the  Lambda  func-
          tion. The valid value is a string of comma-separated mapping expres-
          sions of the specified request parameters.  When  the  authorization
          caching is not enabled, this property is optional.

       identityValidationExpression -> (string)
          A  validation  expression for the incoming identity token. For TOKEN
          authorizers,  this  value  is  a  regular   expression.   For   COG-
          NITO_USER_POOLS authorizers, API Gateway will match the aud field of
          the incoming token from the client against the specified regular ex-
          pression. It will invoke the authorizer's Lambda function when there
          is a match. Otherwise, it will return a  401  Unauthorized  response
          without  calling the Lambda function. The validation expression does
          not apply to the REQUEST authorizer.

       authorizerResultTtlInSeconds -> (integer)
          The TTL in seconds of cached authorizer results. If it equals 0, au-
          thorization  caching is disabled. If it is greater than 0, API Gate-
          way will cache authorizer responses. If this field is not  set,  the
          default value is 300. The maximum value is 3600, or 1 hour.



                                                              GET-AUTHORIZER()
