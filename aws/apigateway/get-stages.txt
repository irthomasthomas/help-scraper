GET-STAGES()                                                      GET-STAGES()



NAME
       get-stages -

DESCRIPTION
       Gets information about one or more Stage resources.

       See also: AWS API Documentation

SYNOPSIS
            get-stages
          --rest-api-id <value>
          [--deployment-id <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --rest-api-id (string)
          The string identifier of the associated RestApi.

       --deployment-id (string)
          The stages' deployment identifiers.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To get the list of stages for a REST API

       Command:

          aws apigateway get-stages --rest-api-id 1234123412

       Output:

          {
              "item": [
                  {
                      "stageName": "dev",
                      "cacheClusterSize": "0.5",
                      "cacheClusterEnabled": true,
                      "cacheClusterStatus": "AVAILABLE",
                      "deploymentId": "123h64",
                      "lastUpdatedDate": 1456185138,
                      "createdDate": 1453589092,
                      "methodSettings": {
                          "~1resource~1subresource/POST": {
                              "cacheTtlInSeconds": 300,
                              "loggingLevel": "INFO",
                              "dataTraceEnabled": true,
                              "metricsEnabled": true,
                              "throttlingRateLimit": 500.0,
                              "cacheDataEncrypted": false,
                              "cachingEnabled": false,
                              "throttlingBurstLimit": 1000
                          }
                      }
                  }
              ]
          }

OUTPUT
       item -> (list)
          The current page of elements from this collection.

          (structure)
              Represents  a  unique  identifier  for  a  version of a deployed
              RestApi that is callable by users.

              deploymentId -> (string)
                 The identifier of the Deployment that the stage points to.

              clientCertificateId -> (string)
                 The identifier of a client certificate for an API stage.

              stageName -> (string)
                 The name of the stage is the first path segment in  the  Uni-
                 form  Resource  Identifier  (URI)  of  a call to API Gateway.
                 Stage names can only  contain  alphanumeric  characters,  hy-
                 phens, and underscores. Maximum length is 128 characters.

              description -> (string)
                 The stage's description.

              cacheClusterEnabled -> (boolean)
                 Specifies whether a cache cluster is enabled for the stage.

              cacheClusterSize -> (string)
                 The  stage's cache capacity in GB. For more information about
                 choosing a cache size, see Enabling API  caching  to  enhance
                 responsiveness .

              cacheClusterStatus -> (string)
                 The status of the cache cluster for the stage, if enabled.

              methodSettings -> (map)
                 A  map that defines the method settings for a Stage resource.
                 Keys (designated as /{method_setting_key  below)  are  method
                 paths  defined  as {resource_path}/{http_method} for an indi-
                 vidual method override, or /\*/\* for overriding all  methods
                 in the stage.

                 key -> (string)

                 value -> (structure)
                     Specifies the method setting properties.

                     metricsEnabled -> (boolean)
                        Specifies  whether  Amazon  CloudWatch metrics are en-
                        abled for this method.

                     loggingLevel -> (string)
                        Specifies the logging level for this method, which af-
                        fects  the  log  entries  pushed  to Amazon CloudWatch
                        Logs. Valid values are OFF , ERROR , and INFO . Choose
                        ERROR  to write only error-level entries to CloudWatch
                        Logs, or choose INFO to include all  ERROR  events  as
                        well as extra informational events.

                     dataTraceEnabled -> (boolean)
                        Specifies  whether  data  trace logging is enabled for
                        this method, which affects the log entries  pushed  to
                        Amazon CloudWatch Logs.

                     throttlingBurstLimit -> (integer)
                        Specifies the throttling burst limit.

                     throttlingRateLimit -> (double)
                        Specifies the throttling rate limit.

                     cachingEnabled -> (boolean)
                        Specifies  whether  responses should be cached and re-
                        turned for requests. A cache cluster must  be  enabled
                        on the stage for responses to be cached.

                     cacheTtlInSeconds -> (integer)
                        Specifies  the  time  to  live  (TTL), in seconds, for
                        cached responses. The higher the TTL, the  longer  the
                        response will be cached.

                     cacheDataEncrypted -> (boolean)
                        Specifies whether the cached responses are encrypted.

                     requireAuthorizationForCacheControl -> (boolean)
                        Specifies  whether  authorization  is  required  for a
                        cache invalidation request.

                     unauthorizedCacheControlHeaderStrategy -> (string)
                        Specifies how  to  handle  unauthorized  requests  for
                        cache invalidation.

              variables -> (map)
                 A  map that defines the stage variables for a Stage resource.
                 Variable names can have alphanumeric and  underscore  charac-
                 ters, and the values must match [A-Za-z0-9-._~:/?#&=,]+ .

                 key -> (string)

                 value -> (string)

              documentationVersion -> (string)
                 The version of the associated API documentation.

              accessLogSettings -> (structure)
                 Settings for logging access in this stage.

                 format -> (string)
                     A single line format of the access logs of data, as spec-
                     ified by selected $context variables. The format must in-
                     clude at least $context.requestId .

                 destinationArn -> (string)
                     The Amazon Resource Name (ARN) of the CloudWatch Logs log
                     group or Kinesis Data Firehose delivery stream to receive
                     access  logs.  If you specify a Kinesis Data Firehose de-
                     livery stream, the  stream  name  must  begin  with  ama-
                     zon-apigateway- .

              canarySettings -> (structure)
                 Settings for the canary deployment in this stage.

                 percentTraffic -> (double)
                     The  percent  (0-100) of traffic diverted to a canary de-
                     ployment.

                 deploymentId -> (string)
                     The ID of the canary deployment.

                 stageVariableOverrides -> (map)
                     Stage variables overridden for a canary  release  deploy-
                     ment, including new stage variables introduced in the ca-
                     nary.  These  stage  variables  are  represented   as   a
                     string-to-string  map  between  stage  variable names and
                     their values.

                     key -> (string)

                     value -> (string)

                 useStageCache -> (boolean)
                     A Boolean flag to indicate whether the canary  deployment
                     uses the stage cache or not.

              tracingEnabled -> (boolean)
                 Specifies  whether  active  tracing with X-ray is enabled for
                 the Stage.

              webAclArn -> (string)
                 The ARN of the WebAcl associated with the Stage.

              tags -> (map)
                 The collection of tags. Each tag element is associated with a
                 given resource.

                 key -> (string)

                 value -> (string)

              createdDate -> (timestamp)
                 The timestamp when the stage was created.

              lastUpdatedDate -> (timestamp)
                 The timestamp when the stage last updated.



                                                                  GET-STAGES()
