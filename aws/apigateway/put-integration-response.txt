PUT-INTEGRATION-RESPONSE()                          PUT-INTEGRATION-RESPONSE()



NAME
       put-integration-response -

DESCRIPTION
       Represents a put integration.

       See also: AWS API Documentation

SYNOPSIS
            put-integration-response
          --rest-api-id <value>
          --resource-id <value>
          --http-method <value>
          --status-code <value>
          [--selection-pattern <value>]
          [--response-parameters <value>]
          [--response-templates <value>]
          [--content-handling <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --rest-api-id (string)
          The string identifier of the associated RestApi.

       --resource-id (string)
          Specifies a put integration response request's resource identifier.

       --http-method (string)
          Specifies a put integration response request's HTTP method.

       --status-code (string)
          Specifies  the  status  code that is used to map the integration re-
          sponse to an existing MethodResponse.

       --selection-pattern (string)
          Specifies the selection pattern of a put integration response.

       --response-parameters (map)
          A key-value map specifying response parameters that  are  passed  to
          the  method response from the back end. The key is a method response
          header parameter name and the mapped value  is  an  integration  re-
          sponse header value, a static value enclosed within a pair of single
          quotes, or a JSON expression from the integration response body. The
          mapping  key must match the pattern of method.response.header.{name}
          , where  name  is  a  valid  and  unique  header  name.  The  mapped
          non-static   value   must   match  the  pattern  of  integration.re-
          sponse.header.{name} or  integration.response.body.{JSON-expression}
          ,  where  name  must  be a valid and unique response header name and
          JSON-expression a valid JSON expression without the $ prefix.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --response-templates (map)
          Specifies a put integration response's templates.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --content-handling (string)
          Specifies how to handle response payload content  type  conversions.
          Supported  values  are  CONVERT_TO_BINARY and CONVERT_TO_TEXT , with
          the following behaviors:

          If this property is not defined, the response payload will be passed
          through from the integration response to the method response without
          modification.

          Possible values:

          o CONVERT_TO_BINARY

          o CONVERT_TO_TEXT

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To  create  an integration response as the default response with a map-
       ping template defined

       Command:

          aws apigateway put-integration-response --rest-api-id 1234123412 --resource-id a1b2c3 --http-method GET --status-code 200 --selection-pattern "" --response-templates '{"application/json": "{\"json\": \"template\"}"}'

       To create an integration response with a regex of 400 and a  statically
       defined header value

       Command:

          aws apigateway put-integration-response --rest-api-id 1234123412 --resource-id a1b2c3 --http-method GET --status-code 400 --selection-pattern 400 --response-parameters '{"method.response.header.custom-header": "'"'"'custom-value'"'"'"}'

OUTPUT
       statusCode -> (string)
          Specifies  the  status  code that is used to map the integration re-
          sponse to an existing MethodResponse.

       selectionPattern -> (string)
          Specifies the regular expression (regex) pattern used to  choose  an
          integration  response  based  on the response from the back end. For
          example, if the success response returns nothing and the  error  re-
          sponse  returns some string, you could use the .+ regex to match er-
          ror response. However, make sure that the error  response  does  not
          contain  any  newline (\n ) character in such cases. If the back end
          is an Lambda function, the Lambda function error header is  matched.
          For  all other HTTP and Amazon Web Services back ends, the HTTP sta-
          tus code is matched.

       responseParameters -> (map)
          A key-value map specifying response parameters that  are  passed  to
          the  method response from the back end. The key is a method response
          header parameter name and the mapped value  is  an  integration  re-
          sponse header value, a static value enclosed within a pair of single
          quotes, or a JSON expression from the integration response body. The
          mapping  key must match the pattern of method.response.header.{name}
          , where  name  is  a  valid  and  unique  header  name.  The  mapped
          non-static   value   must   match  the  pattern  of  integration.re-
          sponse.header.{name} or  integration.response.body.{JSON-expression}
          , where name is a valid and unique response header name and JSON-ex-
          pression is a valid JSON expression without the $ prefix.

          key -> (string)

          value -> (string)

       responseTemplates -> (map)
          Specifies the templates used to transform the  integration  response
          body.  Response templates are represented as a key/value map, with a
          content-type as the key and a template as the value.

          key -> (string)

          value -> (string)

       contentHandling -> (string)
          Specifies how to handle response payload content  type  conversions.
          Supported  values  are  CONVERT_TO_BINARY and CONVERT_TO_TEXT , with
          the following behaviors:

          If this property is not defined, the response payload will be passed
          through from the integration response to the method response without
          modification.



                                                    PUT-INTEGRATION-RESPONSE()
