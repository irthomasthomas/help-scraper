CREATE-USAGE-PLAN()                                        CREATE-USAGE-PLAN()



NAME
       create-usage-plan -

DESCRIPTION
       Creates a usage plan with the throttle and quota limits, as well as the
       associated API stages, specified in the payload.

       See also: AWS API Documentation

SYNOPSIS
            create-usage-plan
          --name <value>
          [--description <value>]
          [--api-stages <value>]
          [--throttle <value>]
          [--quota <value>]
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --name (string)
          The name of the usage plan.

       --description (string)
          The description of the usage plan.

       --api-stages (list)
          The associated API stages of the usage plan.

          (structure)
              API stage name of the associated API stage in a usage plan.

              apiId -> (string)
                 API Id of the associated API stage in a usage plan.

              stage -> (string)
                 API stage name of the associated API stage in a usage plan.

              throttle -> (map)
                 Map containing method level throttling  information  for  API
                 stage in a usage plan.

                 key -> (string)

                 value -> (structure)
                     The API request rate limits.

                     burstLimit -> (integer)
                        The  API  target request burst rate limit. This allows
                        more requests through for a period of  time  than  the
                        target rate limit.

                     rateLimit -> (double)
                        The API target request rate limit.

       Shorthand Syntax:

          apiId=string,stage=string,throttle={KeyName1={burstLimit=integer,rateLimit=double},KeyName2={burstLimit=integer,rateLimit=double}} ...

       JSON Syntax:

          [
            {
              "apiId": "string",
              "stage": "string",
              "throttle": {"string": {
                    "burstLimit": integer,
                    "rateLimit": double
                  }
                ...}
            }
            ...
          ]

       --throttle (structure)
          The throttling limits of the usage plan.

          burstLimit -> (integer)
              The  API  target  request burst rate limit. This allows more re-
              quests through for a period of time than the target rate limit.

          rateLimit -> (double)
              The API target request rate limit.

       Shorthand Syntax:

          burstLimit=integer,rateLimit=double

       JSON Syntax:

          {
            "burstLimit": integer,
            "rateLimit": double
          }

       --quota (structure)
          The quota of the usage plan.

          limit -> (integer)
              The target maximum number of requests that  can  be  made  in  a
              given time period.

          offset -> (integer)
              The  number  of  requests subtracted from the given limit in the
              initial time period.

          period -> (string)
              The time period in which the limit  applies.  Valid  values  are
              "DAY", "WEEK" or "MONTH".

       Shorthand Syntax:

          limit=integer,offset=integer,period=string

       JSON Syntax:

          {
            "limit": integer,
            "offset": integer,
            "period": "DAY"|"WEEK"|"MONTH"
          }

       --tags (map)
          The   key-value   map   of  strings.  The  valid  character  set  is
          [a-zA-Z+-=._:/]. The tag key can be up to 128  characters  and  must
          not start with aws: . The tag value can be up to 256 characters.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a usage plan with throttle and quota limits  that  resets  at
       the beginning of the month

       Command:

          aws apigateway create-usage-plan --name "New Usage Plan" --description "A new usage plan" --throttle burstLimit=10,rateLimit=5 --quota limit=500,offset=0,period=MONTH

OUTPUT
       id -> (string)
          The identifier of a UsagePlan resource.

       name -> (string)
          The name of a usage plan.

       description -> (string)
          The description of a usage plan.

       apiStages -> (list)
          The associated API stages of a usage plan.

          (structure)
              API stage name of the associated API stage in a usage plan.

              apiId -> (string)
                 API Id of the associated API stage in a usage plan.

              stage -> (string)
                 API stage name of the associated API stage in a usage plan.

              throttle -> (map)
                 Map  containing  method  level throttling information for API
                 stage in a usage plan.

                 key -> (string)

                 value -> (structure)
                     The API request rate limits.

                     burstLimit -> (integer)
                        The API target request burst rate limit.  This  allows
                        more  requests  through  for a period of time than the
                        target rate limit.

                     rateLimit -> (double)
                        The API target request rate limit.

       throttle -> (structure)
          A map containing method level throttling information for  API  stage
          in a usage plan.

          burstLimit -> (integer)
              The  API  target  request burst rate limit. This allows more re-
              quests through for a period of time than the target rate limit.

          rateLimit -> (double)
              The API target request rate limit.

       quota -> (structure)
          The target maximum number of permitted requests  per  a  given  unit
          time interval.

          limit -> (integer)
              The  target  maximum  number  of  requests that can be made in a
              given time period.

          offset -> (integer)
              The number of requests subtracted from the given  limit  in  the
              initial time period.

          period -> (string)
              The  time  period  in  which the limit applies. Valid values are
              "DAY", "WEEK" or "MONTH".

       productCode -> (string)
          The Amazon Web Services Marketplace product identifier to  associate
          with  the  usage  plan  as a SaaS product on the Amazon Web Services
          Marketplace.

       tags -> (map)
          The collection of tags. Each tag element is associated with a  given
          resource.

          key -> (string)

          value -> (string)



                                                           CREATE-USAGE-PLAN()
