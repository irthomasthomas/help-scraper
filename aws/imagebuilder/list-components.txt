LIST-COMPONENTS()                                            LIST-COMPONENTS()



NAME
       list-components -

DESCRIPTION
       Returns  the list of components that can be filtered by name, or by us-
       ing the listed filters to streamline results. Newly created  components
       can take up to two minutes to appear in the ListComponents API Results.

       NOTE:
          The     semantic    version    has    four    nodes:    <major>.<mi-
          nor>.<patch>/<build>. You can assign values for the first three, and
          can filter on all of them.
              Filtering: With semantic versioning, you have the flexibility to
              use wildcards (x) to specify the most recent versions  or  nodes
              when  selecting  the  base  image or components for your recipe.
              When you use a wildcard in any node, all nodes to the  right  of
              the first wildcard must also be wildcards.

       See also: AWS API Documentation

SYNOPSIS
            list-components
          [--owner <value>]
          [--filters <value>]
          [--by-name | --no-by-name]
          [--max-results <value>]
          [--next-token <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --owner (string)
          Filters results based on the type of owner for the component. By de-
          fault, this request returns a list of components that  your  account
          owns. To see results for other types of owners, you can specify com-
          ponents that Amazon manages, third party components,  or  components
          that other accounts have shared with you.

          Possible values:

          o Self

          o Shared

          o Amazon

          o ThirdParty

       --filters (list)
          Use the following filters to streamline results:

          o description

          o name

          o platform

          o supportedOsVersion

          o type

          o version

          (structure)
              A  filter name and value pair that is used to return a more spe-
              cific list of results from a list operation. Filters can be used
              to  match a set of resources by specific criteria, such as tags,
              attributes, or IDs.

              name -> (string)
                 The name of the filter. Filter names are case-sensitive.

              values -> (list)
                 The filter values. Filter values are case-sensitive.

                 (string)

       Shorthand Syntax:

          name=string,values=string,string ...

       JSON Syntax:

          [
            {
              "name": "string",
              "values": ["string", ...]
            }
            ...
          ]

       --by-name | --no-by-name (boolean)
          Returns the list of components for the specified name.

       --max-results (integer)
          The maximum items to return in a request.

       --next-token (string)
          A token to specify where to start paginating. This is the  nextToken
          from a previously truncated response.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To list all of the component semantic versions

       The following list-components example lists all of the component seman-
       tic versions to which you have access. You  can  optionally  filter  on
       whether  to  list components owned by you, by Amazon, or that have been
       shared with you by other accounts.

          aws imagebuilder list-components

       Output:

          {
              "requestId": "a1b2c3d4-5678-90ab-cdef-EXAMPLE11111",
              "componentVersionList": [
                  {
                      "arn": "arn:aws:imagebuilder:us-west-2:123456789012:component/component-name/1.0.0",
                      "name": "component-name",
                      "version": "1.0.0",
                      "platform": "Linux",
                      "type": "TEST",
                      "owner": "123456789012",
                      "dateCreated": "2020-01-27T20:43:30.306Z"
                  }
              ]
          }

       For more information, see Setting Up and Managing an EC2 Image  Builder
       Image Pipeline Using the AWS CLI in the EC2 Image Builder Users Guide.

OUTPUT
       requestId -> (string)
          The request ID that uniquely identifies this request.

       componentVersionList -> (list)
          The list of component semantic versions.

          NOTE:
              The    semantic    version    has   four   nodes:   <major>.<mi-
              nor>.<patch>/<build>. You can assign values for the first three,
              and can filter on all of them.

          (structure)
              The  defining characteristics of a specific version of an Amazon
              Web Services TOE component.

              arn -> (string)
                 The Amazon Resource Name (ARN) of the component.

                 NOTE:
                     Semantic versioning is included in each  object's  Amazon
                     Resource  Name  (ARN),  at the level that applies to that
                     object as follows:

                     o Versionless ARNs and Name ARNs do not include  specific
                       values  in  any of the nodes. The nodes are either left
                       off entirely, or they are specified as  wildcards,  for
                       example: x.x.x.

                     o Version  ARNs  have  only  the  first three nodes: <ma-
                       jor>.<minor>.<patch>

                     o Build version ARNs have all four nodes, and point to  a
                       specific build for a specific version of an object.

              name -> (string)
                 The name of the component.

              version -> (string)
                 The semantic version of the component.

                 NOTE:
                     The   semantic   version  has  four  nodes:  <major>.<mi-
                     nor>.<patch>/<build>. You can assign values for the first
                     three, and can filter on all of them.
                        Assignment:  For  the first three nodes you can assign
                        any positive integer value, including  zero,  with  an
                        upper  limit  of  2^30-1, or 1073741823 for each node.
                        Image Builder automatically assigns the  build  number
                        to the fourth node.

                        Patterns: You can use any numeric pattern that adheres
                        to the assignment requirements for the nodes that  you
                        can  assign.  For example, you might choose a software
                        version pattern, such as 1.0.0, or  a  date,  such  as
                        2021.01.01.

                        Filtering:  With  semantic  versioning,  you  have the
                        flexibility to use wildcards (x) to specify  the  most
                        recent versions or nodes when selecting the base image
                        or components for your recipe. When you use a wildcard
                        in any node, all nodes to the right of the first wild-
                        card must also be wildcards.

              description -> (string)
                 The description of the component.

              platform -> (string)
                 The platform of the component.

              supportedOsVersions -> (list)
                 he operating system (OS) version supported by the  component.
                 If  the  OS  information is available, a prefix match is per-
                 formed against the base image OS version during image  recipe
                 creation.

                 (string)

              type -> (string)
                 The  type  of  the component denotes whether the component is
                 used to build the image or only to test it.

              owner -> (string)
                 The owner of the component.

              dateCreated -> (string)
                 The date that the component was created.

       nextToken -> (string)
          The next token used for paginated responses. When this  field  isn't
          empty,  there  are  additional  elements that the service hasn't in-
          cluded in this request. Use this token with the next request to  re-
          trieve additional objects.



                                                             LIST-COMPONENTS()
