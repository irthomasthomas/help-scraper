REBOOT-CACHE-CLUSTER()                                  REBOOT-CACHE-CLUSTER()



NAME
       reboot-cache-cluster -

DESCRIPTION
       Reboots  some, or all, of the cache nodes within a provisioned cluster.
       This operation applies any modified cache parameter groups to the clus-
       ter.  The reboot operation takes place as soon as possible, and results
       in a momentary outage to the cluster. During the  reboot,  the  cluster
       status is set to REBOOTING.

       The  reboot causes the contents of the cache (for each cache node being
       rebooted) to be lost.

       When the reboot is complete, a cluster event is created.

       Rebooting a cluster is currently supported on Memcached and  Redis  OSS
       (cluster  mode  disabled) clusters. Rebooting is not supported on Redis
       OSS (cluster mode enabled) clusters.

       If you make changes to parameters that require  a  Redis  OSS  (cluster
       mode  enabled)  cluster  reboot  for  the  changes  to  be applied, see
       Rebooting a Cluster for an alternate process.

       See also: AWS API Documentation

SYNOPSIS
            reboot-cache-cluster
          --cache-cluster-id <value>
          --cache-node-ids-to-reboot <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --cache-cluster-id (string)
          The cluster identifier. This parameter  is  stored  as  a  lowercase
          string.

       --cache-node-ids-to-reboot (list)
          A  list  of cache node IDs to reboot. A node ID is a numeric identi-
          fier (0001, 0002, etc.). To reboot an entire cluster, specify all of
          the cache node IDs.

          (string)

       Syntax:

          "string" "string" ...

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To reboot a cache cluster

       The following reboot-cache-cluster example reboots some, or all, of the
       cache  nodes  within  a provisioned cluster. This operation applies any
       modified cache parameter groups to the cluster.  The  reboot  operation
       takes  place  as soon as possible, and results in a momentary outage to
       the cluster. During the reboot, the cluster status is set to REBOOTING.

          aws elasticache reboot-cache-cluster \
              --cache-cluster-id "my-cluster-001" \
              --cache-node-ids-to-reboot "0001"

       Output:

          {
              "CacheCluster": {
                  "CacheClusterId": "my-cluster-001",
                  "ClientDownloadLandingPage": "https://console.aws.amazon.com/elasticache/home#client-download:",
                  "CacheNodeType": "cache.r5.xlarge",
                  "Engine": "redis",
                  "EngineVersion": "5.0.5",
                  "CacheClusterStatus": "rebooting cache cluster nodes",
                  "NumCacheNodes": 1,
                  "PreferredAvailabilityZone": "us-west-2a",
                  "CacheClusterCreateTime": "2019-11-26T03:35:04.546Z",
                  "PreferredMaintenanceWindow": "mon:04:05-mon:05:05",
                  "PendingModifiedValues": {},
                  "NotificationConfiguration": {
                      "TopicArn": "arn:aws:sns:us-west-2:xxxxxxxxxx152:My_Topic",
                      "TopicStatus": "active"
                  },
                  "CacheSecurityGroups": [],
                  "CacheParameterGroup": {
                      "CacheParameterGroupName": "mygroup",
                      "ParameterApplyStatus": "in-sync",
                      "CacheNodeIdsToReboot": []
                  },
                  "CacheSubnetGroupName": "kxkxk",
                  "AutoMinorVersionUpgrade": true,
                  "SecurityGroups": [
                      {
                          "SecurityGroupId": "sg-xxxxxxxxxxxxx836",
                          "Status": "active"
                      },
                      {
                          "SecurityGroupId": "sg-xxxxxxxx7b",
                          "Status": "active"
                      }
                  ],
                  "ReplicationGroupId": "my-cluster",
                  "SnapshotRetentionLimit": 0,
                  "SnapshotWindow": "07:30-08:30",
                  "TransitEncryptionEnabled": false,
                  "AtRestEncryptionEnabled": false
              }
          }

       For more information, see
       `Rebooting a Cluster <https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.Rebooting.html`__
        in the Elasticache User Guide.

OUTPUT
       CacheCluster -> (structure)
          Contains all of the attributes of a specific cluster.

          CacheClusterId -> (string)
              The user-supplied identifier of the cluster. This identifier  is
              a unique key that identifies a cluster.

          ConfigurationEndpoint -> (structure)
              Represents  a Memcached cluster endpoint which can be used by an
              application to connect to any node in the cluster. The  configu-
              ration endpoint will always have .cfg in it.

              Example: mem-3.9dvc4r.cfg.usw2.cache.amazonaws.com:11211

              Address -> (string)
                 The DNS hostname of the cache node.

              Port -> (integer)
                 The port number that the cache engine is listening on.

          ClientDownloadLandingPage -> (string)
              The  URL of the web page where you can download the latest Elas-
              tiCache client library.

          CacheNodeType -> (string)
              The name of the compute and memory capacity node  type  for  the
              cluster.

              The following node types are supported by ElastiCache. Generally
              speaking, the current generation types provide more  memory  and
              computational power at lower cost when compared to their equiva-
              lent previous generation counterparts.

              o General purpose:

                o Current generation:   M7g node  types  :  cache.m7g.large  ,
                  cache.m7g.xlarge  ,  cache.m7g.2xlarge , cache.m7g.4xlarge ,
                  cache.m7g.8xlarge , cache.m7g.12xlarge , cache.m7g.16xlarge

                NOTE:
                       For region availability, see Supported Node Types

                   M6g node types (available only for Redis OSS engine version
                   5.0.6  onward  and  for Memcached engine version 1.5.16 on-
                   ward):     cache.m6g.large     ,     cache.m6g.xlarge     ,
                   cache.m6g.2xlarge , cache.m6g.4xlarge , cache.m6g.8xlarge ,
                   cache.m6g.12xlarge , cache.m6g.16xlarge    M5  node  types:
                   cache.m5.large   ,  cache.m5.xlarge  ,  cache.m5.2xlarge  ,
                   cache.m5.4xlarge ,  cache.m5.12xlarge  ,  cache.m5.24xlarge
                   M4   node   types:    cache.m4.large  ,  cache.m4.xlarge  ,
                   cache.m4.2xlarge  ,  cache.m4.4xlarge  ,  cache.m4.10xlarge
                   T4g node types (available only for Redis OSS engine version
                   5.0.6 onward and Memcached engine version  1.5.16  onward):
                   cache.t4g.micro  , cache.t4g.small , cache.t4g.medium    T3
                   node   types:    cache.t3.micro    ,    cache.t3.small    ,
                   cache.t3.medium      T2   node   types:   cache.t2.micro  ,
                   cache.t2.small , cache.t2.medium

                o Previous generation: (not recommended. Existing clusters are
                  still  supported  but  creation  of new clusters is not sup-
                  ported for these types.)   T1  node  types:   cache.t1.micro
                  M1   node   types:    cache.m1.small   ,  cache.m1.medium  ,
                  cache.m1.large   ,   cache.m1.xlarge      M3   node   types:
                  cache.m3.medium   ,   cache.m3.large   ,  cache.m3.xlarge  ,
                  cache.m3.2xlarge

              o Compute optimized:

                o Previous generation: (not recommended. Existing clusters are
                  still  supported  but  creation  of new clusters is not sup-
                  ported for these types.)  C1 node types:  cache.c1.xlarge

              o Memory optimized:

                o Current generation:   R7g node  types  :  cache.r7g.large  ,
                  cache.r7g.xlarge  ,  cache.r7g.2xlarge , cache.r7g.4xlarge ,
                  cache.r7g.8xlarge , cache.r7g.12xlarge , cache.r7g.16xlarge

                NOTE:
                       For region availability, see Supported Node Types

                   R6g node types (available only for Redis OSS engine version
                   5.0.6  onward  and  for Memcached engine version 1.5.16 on-
                   ward):     cache.r6g.large     ,     cache.r6g.xlarge     ,
                   cache.r6g.2xlarge , cache.r6g.4xlarge , cache.r6g.8xlarge ,
                   cache.r6g.12xlarge , cache.r6g.16xlarge    R5  node  types:
                   cache.r5.large   ,  cache.r5.xlarge  ,  cache.r5.2xlarge  ,
                   cache.r5.4xlarge ,  cache.r5.12xlarge  ,  cache.r5.24xlarge
                   R4   node   types:    cache.r4.large  ,  cache.r4.xlarge  ,
                   cache.r4.2xlarge , cache.r4.4xlarge  ,  cache.r4.8xlarge  ,
                   cache.r4.16xlarge

                o Previous generation: (not recommended. Existing clusters are
                  still supported but creation of new  clusters  is  not  sup-
                  ported  for these types.)  M2 node types:  cache.m2.xlarge ,
                  cache.m2.2xlarge  ,  cache.m2.4xlarge     R3   node   types:
                  cache.r3.large   ,   cache.r3.xlarge  ,  cache.r3.2xlarge  ,
                  cache.r3.4xlarge , cache.r3.8xlarge
                 Additional node type info

              o All current generation instance types are  created  in  Amazon
                VPC by default.

              o Redis  OSS append-only files (AOF) are not supported for T1 or
                T2 instances.

              o Redis OSS Multi-AZ with automatic failover is not supported on
                T1 instances.

              o Redis  OSS  configuration variables appendonly and appendfsync
                are not supported on Redis OSS version 2.8.22 and later.

          Engine -> (string)
              The name of the cache engine (memcached or redis )  to  be  used
              for this cluster.

          EngineVersion -> (string)
              The version of the cache engine that is used in this cluster.

          CacheClusterStatus -> (string)
              The  current state of this cluster, one of the following values:
              available , creating , deleted , deleting , incompatible-network
              ,  modifying  ,  rebooting  cluster  nodes , restore-failed , or
              snapshotting .

          NumCacheNodes -> (integer)
              The number of cache nodes in the cluster.

              For clusters running Redis OSS, this value must be 1. For  clus-
              ters running Memcached, this value must be between 1 and 40.

          PreferredAvailabilityZone -> (string)
              The  name  of  the Availability Zone in which the cluster is lo-
              cated or "Multiple" if the cache nodes are located in  different
              Availability Zones.

          PreferredOutpostArn -> (string)
              The outpost ARN in which the cache cluster is created.

          CacheClusterCreateTime -> (timestamp)
              The date and time when the cluster was created.

          PreferredMaintenanceWindow -> (string)
              Specifies  the weekly time range during which maintenance on the
              cluster is performed. It is specified as a range in  the  format
              ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance
              window is a 60 minute period.

              Valid values for ddd are:

              o sun

              o mon

              o tue

              o wed

              o thu

              o fri

              o sat

              Example: sun:23:00-mon:01:30

          PendingModifiedValues -> (structure)
              A group of settings that are applied to the cluster in  the  fu-
              ture, or that are currently being applied.

              NumCacheNodes -> (integer)
                 The new number of cache nodes for the cluster.

                 For  clusters  running  Redis  OSS, this value must be 1. For
                 clusters running Memcached, this value must be between 1  and
                 40.

              CacheNodeIdsToRemove -> (list)
                 A  list  of cache node IDs that are being removed (or will be
                 removed) from the cluster. A node ID  is  a  4-digit  numeric
                 identifier (0001, 0002, etc.).

                 (string)

              EngineVersion -> (string)
                 The new cache engine version that the cluster runs.

              CacheNodeType -> (string)
                 The cache node type that this cluster or replication group is
                 scaled to.

              AuthTokenStatus -> (string)
                 The auth token status

              LogDeliveryConfigurations -> (list)
                 The log delivery configurations being modified

                 (structure)
                     The log delivery configurations being modified

                     LogType -> (string)
                        Refers to slow-log or engine-log..

                     DestinationType -> (string)
                        Returns the destination type, either  CloudWatch  Logs
                        or Kinesis Data Firehose.

                     DestinationDetails -> (structure)
                        Configuration details of either a CloudWatch Logs des-
                        tination or Kinesis Data Firehose destination.

                        CloudWatchLogsDetails -> (structure)
                            The configuration details of the  CloudWatch  Logs
                            destination.

                            LogGroup -> (string)
                               The name of the CloudWatch Logs log group.

                        KinesisFirehoseDetails -> (structure)
                            The  configuration  details  of  the  Kinesis Data
                            Firehose destination.

                            DeliveryStream -> (string)
                               The name of the Kinesis Data Firehose  delivery
                               stream.

                     LogFormat -> (string)
                        Returns the log format, either JSON or TEXT

              TransitEncryptionEnabled -> (boolean)
                 A flag that enables in-transit encryption when set to true.

              TransitEncryptionMode -> (string)
                 A  setting  that  allows  you  to migrate your clients to use
                 in-transit encryption, with no downtime.

          NotificationConfiguration -> (structure)
              Describes a notification topic and its status. Notification top-
              ics  are  used  for publishing ElastiCache events to subscribers
              using Amazon Simple Notification Service (SNS).

              TopicArn -> (string)
                 The Amazon Resource Name (ARN) that identifies the topic.

              TopicStatus -> (string)
                 The current state of the topic.

          CacheSecurityGroups -> (list)
              A list of cache security group elements, composed  of  name  and
              status sub-elements.

              (structure)
                 Represents a cluster's status within a particular cache secu-
                 rity group.

                 CacheSecurityGroupName -> (string)
                     The name of the cache security group.

                 Status -> (string)
                     The membership status in the cache  security  group.  The
                     status  changes  when a cache security group is modified,
                     or when the cache security groups assigned to  a  cluster
                     are modified.

          CacheParameterGroup -> (structure)
              Status of the cache parameter group.

              CacheParameterGroupName -> (string)
                 The name of the cache parameter group.

              ParameterApplyStatus -> (string)
                 The status of parameter updates.

              CacheNodeIdsToReboot -> (list)
                 A  list  of  the cache node IDs which need to be rebooted for
                 parameter changes to be applied. A node ID is a numeric iden-
                 tifier (0001, 0002, etc.).

                 (string)

          CacheSubnetGroupName -> (string)
              The name of the cache subnet group associated with the cluster.

          CacheNodes -> (list)
              A list of cache nodes that are members of the cluster.

              (structure)
                 Represents  an  individual  cache node within a cluster. Each
                 cache node runs its own  instance  of  the  cluster's  proto-
                 col-compliant  caching  software  - either Memcached or Redis
                 OSS.

                 The following node types are supported by ElastiCache. Gener-
                 ally speaking, the current generation types provide more mem-
                 ory and computational power at lower cost  when  compared  to
                 their equivalent previous generation counterparts.

                 o General purpose:

                   o Current  generation:   M7g node types : cache.m7g.large ,
                     cache.m7g.xlarge , cache.m7g.2xlarge ,  cache.m7g.4xlarge
                     ,     cache.m7g.8xlarge     ,     cache.m7g.12xlarge    ,
                     cache.m7g.16xlarge

                   NOTE:
                          For region availability, see Supported Node Types

                       M6g node types (available only  for  Redis  OSS  engine
                       version  5.0.6  onward and for Memcached engine version
                       1.5.16 onward): cache.m6g.large  ,  cache.m6g.xlarge  ,
                       cache.m6g.2xlarge       ,      cache.m6g.4xlarge      ,
                       cache.m6g.8xlarge      ,      cache.m6g.12xlarge      ,
                       cache.m6g.16xlarge     M5 node types:  cache.m5.large ,
                       cache.m5.xlarge , cache.m5.2xlarge , cache.m5.4xlarge ,
                       cache.m5.12xlarge , cache.m5.24xlarge    M4 node types:
                       cache.m4.large , cache.m4.xlarge ,  cache.m4.2xlarge  ,
                       cache.m4.4xlarge  , cache.m4.10xlarge    T4g node types
                       (available only for Redis OSS engine version 5.0.6  on-
                       ward  and  Memcached  engine  version  1.5.16  onward):
                       cache.t4g.micro ,  cache.t4g.small  ,  cache.t4g.medium
                       T3  node  types:   cache.t3.micro  ,  cache.t3.small  ,
                       cache.t3.medium    T2  node  types:   cache.t2.micro  ,
                       cache.t2.small , cache.t2.medium

                   o Previous  generation: (not recommended. Existing clusters
                     are still supported but creation of new clusters  is  not
                     supported for these types.)  T1 node types:  cache.t1.mi-
                     cro    M1 node types:  cache.m1.small , cache.m1.medium ,
                     cache.m1.large   ,   cache.m1.xlarge     M3  node  types:
                     cache.m3.medium  ,  cache.m3.large  ,  cache.m3.xlarge  ,
                     cache.m3.2xlarge

                 o Compute optimized:

                   o Previous  generation: (not recommended. Existing clusters
                     are still supported but creation of new clusters  is  not
                     supported    for    these   types.)    C1   node   types:
                     cache.c1.xlarge

                 o Memory optimized:

                   o Current generation:   R7g node types : cache.r7g.large  ,
                     cache.r7g.xlarge  , cache.r7g.2xlarge , cache.r7g.4xlarge
                     ,    cache.r7g.8xlarge     ,     cache.r7g.12xlarge     ,
                     cache.r7g.16xlarge

                   NOTE:
                          For region availability, see Supported Node Types

                       R6g  node  types  (available  only for Redis OSS engine
                       version 5.0.6 onward and for Memcached  engine  version
                       1.5.16  onward):  cache.r6g.large  , cache.r6g.xlarge ,
                       cache.r6g.2xlarge      ,      cache.r6g.4xlarge       ,
                       cache.r6g.8xlarge      ,      cache.r6g.12xlarge      ,
                       cache.r6g.16xlarge    R5 node types:  cache.r5.large  ,
                       cache.r5.xlarge , cache.r5.2xlarge , cache.r5.4xlarge ,
                       cache.r5.12xlarge , cache.r5.24xlarge    R4 node types:
                       cache.r4.large  ,  cache.r4.xlarge , cache.r4.2xlarge ,
                       cache.r4.4xlarge , cache.r4.8xlarge , cache.r4.16xlarge

                   o Previous generation: (not recommended. Existing  clusters
                     are  still  supported but creation of new clusters is not
                     supported   for   these   types.)    M2    node    types:
                     cache.m2.xlarge  ,  cache.m2.2xlarge  ,  cache.m2.4xlarge
                     R3  node  types:   cache.r3.large  ,  cache.r3.xlarge   ,
                     cache.r3.2xlarge , cache.r3.4xlarge , cache.r3.8xlarge
                     Additional node type info

                 o All current generation instance types are created in Amazon
                   VPC by default.

                 o Redis OSS append-only files (AOF) are not supported for  T1
                   or T2 instances.

                 o Redis OSS Multi-AZ with automatic failover is not supported
                   on T1 instances.

                 o Redis OSS configuration variables appendonly  and  appendf-
                   sync  are  not  supported  on  Redis OSS version 2.8.22 and
                   later.

                 CacheNodeId -> (string)
                     The cache node identifier. A node ID is a numeric identi-
                     fier  (0001,  0002,  etc.). The combination of cluster ID
                     and node ID uniquely identifies every cache node used  in
                     a customer's Amazon account.

                 CacheNodeStatus -> (string)
                     The  current state of this cache node, one of the follow-
                     ing values: available , creating , rebooting , or  delet-
                     ing .

                 CacheNodeCreateTime -> (timestamp)
                     The date and time when the cache node was created.

                 Endpoint -> (structure)
                     The hostname for connecting to this cache node.

                     Address -> (string)
                        The DNS hostname of the cache node.

                     Port -> (integer)
                        The port number that the cache engine is listening on.

                 ParameterGroupStatus -> (string)
                     The  status  of the parameter group applied to this cache
                     node.

                 SourceCacheNodeId -> (string)
                     The ID of the primary node to  which  this  read  replica
                     node  is  synchronized. If this field is empty, this node
                     is not associated with a primary cluster.

                 CustomerAvailabilityZone -> (string)
                     The Availability Zone where this node was created and now
                     resides.

                 CustomerOutpostArn -> (string)
                     The customer outpost ARN of the cache node.

          AutoMinorVersionUpgrade -> (boolean)
              If  you  are  running Redis OSS engine version 6.0 or later, set
              this parameter to yes if you want to opt-in to the next auto mi-
              nor  version  upgrade  campaign.  This parameter is disabled for
              previous versions.

          SecurityGroups -> (list)
              A list of VPC Security Groups associated with the cluster.

              (structure)
                 Represents a single cache security group and its status.

                 SecurityGroupId -> (string)
                     The identifier of the cache security group.

                 Status -> (string)
                     The status of the cache security  group  membership.  The
                     status  changes  whenever a cache security group is modi-
                     fied, or when the cache security  groups  assigned  to  a
                     cluster are modified.

          ReplicationGroupId -> (string)
              The  replication  group  to  which this cluster belongs. If this
              field is empty, the cluster is not associated with any  replica-
              tion group.

          SnapshotRetentionLimit -> (integer)
              The number of days for which ElastiCache retains automatic clus-
              ter snapshots before deleting them.  For  example,  if  you  set
              SnapshotRetentionLimit  to 5, a snapshot that was taken today is
              retained for 5 days before being deleted.

              WARNING:
                 If the value of SnapshotRetentionLimit is set  to  zero  (0),
                 backups are turned off.

          SnapshotWindow -> (string)
              The  daily  time  range (in UTC) during which ElastiCache begins
              taking a daily snapshot of your cluster.

              Example: 05:00-09:00

          AuthTokenEnabled -> (boolean)
              A flag that enables using an AuthToken (password)  when  issuing
              Redis OSS commands.

              Default: false

          AuthTokenLastModifiedDate -> (timestamp)
              The date the auth token was last modified

          TransitEncryptionEnabled -> (boolean)
              A flag that enables in-transit encryption when set to true .
                 Required: Only available when creating a replication group in
                 an Amazon VPC using Redis OSS version 3.2.6 , 4.x or later.

              Default: false

          AtRestEncryptionEnabled -> (boolean)
              A flag that enables encryption at-rest when set to true .

              You cannot modify the value of AtRestEncryptionEnabled after the
              cluster  is  created.  To enable at-rest encryption on a cluster
              you must set AtRestEncryptionEnabled to true when you  create  a
              cluster.
                 Required: Only available when creating a replication group in
                 an Amazon VPC using Redis OSS version 3.2.6 , 4.x or later.

              Default: false

          ARN -> (string)
              The ARN (Amazon Resource Name) of the cache cluster.

          ReplicationGroupLogDeliveryEnabled -> (boolean)
              A boolean value indicating whether log delivery is  enabled  for
              the replication group.

          LogDeliveryConfigurations -> (list)
              Returns the destination, format and type of the logs.

              (structure)
                 Returns the destination, format and type of the logs.

                 LogType -> (string)
                     Refers to slow-log or engine-log.

                 DestinationType -> (string)
                     Returns  the  destination type, either cloudwatch-logs or
                     kinesis-firehose .

                 DestinationDetails -> (structure)
                     Configuration details of either a CloudWatch Logs  desti-
                     nation or Kinesis Data Firehose destination.

                     CloudWatchLogsDetails -> (structure)
                        The  configuration details of the CloudWatch Logs des-
                        tination.

                        LogGroup -> (string)
                            The name of the CloudWatch Logs log group.

                     KinesisFirehoseDetails -> (structure)
                        The configuration details of the Kinesis Data Firehose
                        destination.

                        DeliveryStream -> (string)
                            The  name  of  the  Kinesis Data Firehose delivery
                            stream.

                 LogFormat -> (string)
                     Returns the log format, either JSON or TEXT.

                 Status -> (string)
                     Returns the log delivery configuration status. Values are
                     one of enabling | disabling | modifying | active | error

                 Message -> (string)
                     Returns  an error message for the log delivery configura-
                     tion.

          NetworkType -> (string)
              Must be either ipv4 | ipv6 | dual_stack . IPv6 is supported  for
              workloads using Redis OSS engine version 6.2 onward or Memcached
              engine version 1.6.6 on all instances built on the Nitro  system
              .

          IpDiscovery -> (string)
              The network type associated with the cluster, either ipv4 | ipv6
              . IPv6 is supported for workloads using Redis OSS engine version
              6.2  onward  or  Memcached engine version 1.6.6 on all instances
              built on the Nitro system .

          TransitEncryptionMode -> (string)
              A setting that  allows  you  to  migrate  your  clients  to  use
              in-transit encryption, with no downtime.

DOCUTILS SYSTEM MESSAGES
       System Message: ERROR/3 (<string>:)
              Anonymous  hyperlink  mismatch: 1 references but 0 targets.  See
              "backrefs" attribute for IDs.



                                                        REBOOT-CACHE-CLUSTER()
