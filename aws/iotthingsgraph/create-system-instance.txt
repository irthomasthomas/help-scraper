CREATE-SYSTEM-INSTANCE()                              CREATE-SYSTEM-INSTANCE()



NAME
       create-system-instance -

DESCRIPTION
       Creates a system instance.

       This  action validates the system instance, prepares the deployment-re-
       lated resources. For Greengrass deployments, it updates the  Greengrass
       group  that  is specified by the greengrassGroupName parameter. It also
       adds a file to the S3 bucket specified by the  s3BucketName  parameter.
       You need to call DeploySystemInstance after running this action.

       For  Greengrass  deployments,  since  this action modifies and adds re-
       sources to a Greengrass group and an S3 bucket on the caller's  behalf,
       the  calling identity must have write permissions to both the specified
       Greengrass group and S3 bucket. Otherwise, the call will fail  with  an
       authorization error.

       For cloud deployments, this action requires a flowActionsRoleArn value.
       This is an IAM role that has permissions to access AWS  services,  such
       as AWS Lambda and AWS IoT, that the flow uses when it executes.

       If  the  definition  document  doesn't  specify a version of the user's
       namespace, the latest version will be used by default.

       See also: AWS API Documentation

SYNOPSIS
            create-system-instance
          [--tags <value>]
          --definition <value>
          --target <value>
          [--greengrass-group-name <value>]
          [--s3-bucket-name <value>]
          [--metrics-configuration <value>]
          [--flow-actions-role-arn <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --tags (list)
          Metadata, consisting of key-value pairs, that can be used to catego-
          rize your system instances.

          (structure)
              Metadata assigned to an AWS IoT Things Graph resource consisting
              of a key-value pair.

              key -> (string)
                 The required name of the tag. The string value can be from  1
                 to 128 Unicode characters in length.

              value -> (string)
                 The optional value of the tag. The string value can be from 1
                 to 256 Unicode characters in length.

       Shorthand Syntax:

          key=string,value=string ...

       JSON Syntax:

          [
            {
              "key": "string",
              "value": "string"
            }
            ...
          ]

       --definition (structure)
          A document that defines an entity.

          language -> (string)
              The language used to define the  entity.  GRAPHQL  is  the  only
              valid value.

          text -> (string)
              The GraphQL text that defines the entity.

       Shorthand Syntax:

          language=string,text=string

       JSON Syntax:

          {
            "language": "GRAPHQL",
            "text": "string"
          }

       --target (string)
          The  target  type of the deployment. Valid values are GREENGRASS and
          CLOUD .

          Possible values:

          o GREENGRASS

          o CLOUD

       --greengrass-group-name (string)
          The name of the Greengrass group where the system instance  will  be
          deployed.  This value is required if the value of the target parame-
          ter is GREENGRASS .

       --s3-bucket-name (string)
          The name of the Amazon Simple Storage Service bucket  that  will  be
          used  to  store and deploy the system instance's resource file. This
          value is required if the value of the target parameter is GREENGRASS
          .

       --metrics-configuration (structure)
          An  object  that  specifies whether cloud metrics are collected in a
          deployment and, if so, what role is used to collect metrics.

          cloudMetricEnabled -> (boolean)
              A Boolean that specifies whether cloud metrics are collected.

          metricRuleRoleArn -> (string)
              The ARN of the role that is used to collect cloud metrics.

       Shorthand Syntax:

          cloudMetricEnabled=boolean,metricRuleRoleArn=string

       JSON Syntax:

          {
            "cloudMetricEnabled": true|false,
            "metricRuleRoleArn": "string"
          }

       --flow-actions-role-arn (string)
          The ARN of the IAM role that AWS IoT Things Graph will  assume  when
          it  executes  the flow. This role must have read and write access to
          AWS Lambda and AWS IoT and any other AWS services that the flow uses
          when  it executes. This value is required if the value of the target
          parameter is CLOUD .

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a system instance

       The following create-system-instance example creates a system instance.
       The  value of MySystemInstanceDefinition is the GraphQL that models the
       system instance.

          aws iotthingsgraph create-system-instance -\
              -definition language=GRAPHQL,text="MySystemInstanceDefinition" \
              --target CLOUD \
              --flow-actions-role-arn myRoleARN

       Output:

          {
              "summary": {
                  "id": "urn:tdm:us-west-2/123456789012/default:Deployment:Room218",
                  "arn": "arn:aws:iotthingsgraph:us-west-2:123456789012:Deployment/default/Room218",
                  "status": "NOT_DEPLOYED",
                  "target": "CLOUD",
                  "createdAt": 1559249315.208,
                  "updatedAt": 1559249315.208
              }
          }

       For more information, see Working with Systems and Flow  Configurations
       in the AWS IoT Things Graph User Guide.

OUTPUT
       summary -> (structure)
          The summary object that describes the new system instance.

          id -> (string)
              The ID of the system instance.

          arn -> (string)
              The ARN of the system instance.

          status -> (string)
              The status of the system instance.

          target -> (string)
              The target of the system instance.

          greengrassGroupName -> (string)
              The  ID of the Greengrass group where the system instance is de-
              ployed.

          createdAt -> (timestamp)
              The date when the system instance was created.

          updatedAt -> (timestamp)
              The date and time when the system instance was last updated.

          greengrassGroupId -> (string)
              The ID of the Greengrass group where the system instance is  de-
              ployed.

          greengrassGroupVersionId -> (string)
              The version of the Greengrass group where the system instance is
              deployed.



                                                      CREATE-SYSTEM-INSTANCE()
