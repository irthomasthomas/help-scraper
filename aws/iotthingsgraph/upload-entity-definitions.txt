UPLOAD-ENTITY-DEFINITIONS()                        UPLOAD-ENTITY-DEFINITIONS()



NAME
       upload-entity-definitions -

DESCRIPTION
       Asynchronously  uploads  one  or  more entity definitions to the user's
       namespace. The document parameter is required  if  syncWithPublicNames-
       pace  and  deleteExistingEntites are false. If the syncWithPublicNames-
       pace parameter is set to true , the user's namespace  will  synchronize
       with  the  latest version of the public namespace. If deprecateExistin-
       gEntities is set to true, all entities in the latest  version  will  be
       deleted before the new DefinitionDocument is uploaded.

       When  a user uploads entity definitions for the first time, the service
       creates a new namespace for the user. The new namespace tracks the pub-
       lic  namespace.  Currently users can have only one namespace. The name-
       space version increments whenever a  user  uploads  entity  definitions
       that  are backwards-incompatible and whenever a user sets the syncWith-
       PublicNamespace parameter or the deprecateExistingEntities parameter to
       true .

       The  IDs  for  all of the entities should be in URN format. Each entity
       must be in the user's namespace. Users can't  create  entities  in  the
       public  namespace,  but entity definitions can refer to entities in the
       public namespace.

       Valid entities are Device , DeviceModel , Service , Capability ,  State
       , Action , Event , Property , Mapping , Enum .

       See also: AWS API Documentation

SYNOPSIS
            upload-entity-definitions
          [--document <value>]
          [--sync-with-public-namespace | --no-sync-with-public-namespace]
          [--deprecate-existing-entities | --no-deprecate-existing-entities]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --document (structure)
          The DefinitionDocument that defines the updated entities.

          language -> (string)
              The  language  used  to  define  the entity. GRAPHQL is the only
              valid value.

          text -> (string)
              The GraphQL text that defines the entity.

       Shorthand Syntax:

          language=string,text=string

       JSON Syntax:

          {
            "language": "GRAPHQL",
            "text": "string"
          }

       --sync-with-public-namespace |  --no-sync-with-public-namespace  (bool-
       ean)
          A Boolean that specifies whether to synchronize with the latest ver-
          sion of the public namespace. If set to true , the upload will  cre-
          ate a new namespace version.

       --deprecate-existing-entities | --no-deprecate-existing-entities (bool-
       ean)
          A Boolean that specifies whether to deprecate all  entities  in  the
          latest  version before uploading the new DefinitionDocument . If set
          to true , the upload will create a new namespace version.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To upload entity definitions

       The following upload-entity-definitions example uploads entity  defini-
       tions  to  your  namespace.  The  value  of  MyEntityDefinitions is the
       GraphQL that models the entities.

          aws iotthingsgraph upload-entity-definitions \
              --document language=GRAPHQL,text="MyEntityDefinitions"

       Output:

          {
              "uploadId": "f6294f1e-b109-4bbe-9073-f451a2dda2da"
          }

       For more information, see Modeling Entities in the AWS IoT Things Graph
       User Guide.

OUTPUT
       uploadId -> (string)
          The  ID  that specifies the upload action. You can use this to track
          the status of the upload.



                                                   UPLOAD-ENTITY-DEFINITIONS()
