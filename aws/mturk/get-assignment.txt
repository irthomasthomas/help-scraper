GET-ASSIGNMENT()                                              GET-ASSIGNMENT()



NAME
       get-assignment -

DESCRIPTION
       The  GetAssignment operation retrieves the details of the specified As-
       signment.

       See also: AWS API Documentation

SYNOPSIS
            get-assignment
          --assignment-id <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --assignment-id (string)
          The ID of the Assignment to be retrieved.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       Assignment -> (structure)
          The assignment. The response includes one Assignment element.

          AssignmentId -> (string)
              A unique identifier for the assignment.

          WorkerId -> (string)
              The ID of the Worker who accepted the HIT.

          HITId -> (string)
              The ID of the HIT.

          AssignmentStatus -> (string)
              The status of the assignment.

          AutoApprovalTime -> (timestamp)
              If results have been submitted, AutoApprovalTime is the date and
              time the results of the assignment results  are  considered  Ap-
              proved  automatically  if  they have not already been explicitly
              approved or rejected by the Requester.  This  value  is  derived
              from  the  auto-approval delay specified by the Requester in the
              HIT. This value is omitted from the assignment if the Worker has
              not yet submitted results.

          AcceptTime -> (timestamp)
              The date and time the Worker accepted the assignment.

          SubmitTime -> (timestamp)
              If  the Worker has submitted results, SubmitTime is the date and
              time the assignment was submitted. This value  is  omitted  from
              the assignment if the Worker has not yet submitted results.

          ApprovalTime -> (timestamp)
              If  the  Worker  has submitted results and the Requester has ap-
              proved the results, ApprovalTime is the date and  time  the  Re-
              quester approved the results. This value is omitted from the as-
              signment if the Requester has not yet approved the results.

          RejectionTime -> (timestamp)
              If the Worker has submitted results and the  Requester  has  re-
              jected  the  results, RejectionTime is the date and time the Re-
              quester rejected the results.

          Deadline -> (timestamp)
              The date and time of the deadline for the assignment. This value
              is  derived  from the deadline specification for the HIT and the
              date and time the Worker accepted the HIT.

          Answer -> (string)
              The Worker's answers submitted for the HIT contained in a  Ques-
              tionFormAnswers  document,  if the Worker provides an answer. If
              the Worker does not provide any answers, Answer  may  contain  a
              QuestionFormAnswers document, or Answer may be empty.

          RequesterFeedback -> (string)
              The feedback string included with the call to the ApproveAssign-
              ment operation or the RejectAssignment  operation,  if  the  Re-
              quester  approved or rejected the assignment and specified feed-
              back.

       HIT -> (structure)
          The HIT associated with this assignment. The response  includes  one
          HIT element.

          HITId -> (string)
              A unique identifier for the HIT.

          HITTypeId -> (string)
              The ID of the HIT type of this HIT

          HITGroupId -> (string)
              The ID of the HIT Group of this HIT.

          HITLayoutId -> (string)
              The ID of the HIT Layout of this HIT.

          CreationTime -> (timestamp)
              The date and time the HIT was created.

          Title -> (string)
              The title of the HIT.

          Description -> (string)
              A general description of the HIT.

          Question -> (string)
              The data the Worker completing the HIT uses produce the results.
              This is either either a QuestionForm, HTMLQuestion or an  Exter-
              nalQuestion data structure.

          Keywords -> (string)
              One or more words or phrases that describe the HIT, separated by
              commas. Search terms similar to the keywords of a HIT  are  more
              likely to have the HIT in the search results.

          HITStatus -> (string)
              The  status of the HIT and its assignments. Valid Values are As-
              signable | Unassignable | Reviewable | Reviewing | Disposed.

          MaxAssignments -> (integer)
              The number of times the HIT can be accepted and completed before
              the HIT becomes unavailable.

          Reward -> (string)
              A string representing a currency amount.

          AutoApprovalDelayInSeconds -> (long)
              The  amount of time, in seconds, after the Worker submits an as-
              signment for the HIT that the results are automatically approved
              by  Amazon  Mechanical  Turk. This is the amount of time the Re-
              quester has to reject an assignment submitted by a Worker before
              the assignment is auto-approved and the Worker is paid.

          Expiration -> (timestamp)
              The date and time the HIT expires.

          AssignmentDurationInSeconds -> (long)
              The  length  of  time, in seconds, that a Worker has to complete
              the HIT after accepting it.

          RequesterAnnotation -> (string)
              An arbitrary data field the Requester who created  the  HIT  can
              use. This field is visible only to the creator of the HIT.

          QualificationRequirements -> (list)
              Conditions  that a Worker's Qualifications must meet in order to
              accept the HIT. A HIT can have between zero and  ten  Qualifica-
              tion  requirements.  All requirements must be met in order for a
              Worker to accept the HIT. Additionally, other actions can be re-
              stricted using the ActionsGuarded field on each QualificationRe-
              quirement structure.

              (structure)
                 The QualificationRequirement data structure describes a Qual-
                 ification  that  a  Worker must have before the Worker is al-
                 lowed to accept a HIT. A  requirement  may  optionally  state
                 that a Worker must have the Qualification in order to preview
                 the HIT, or see the HIT in search results.

                 QualificationTypeId -> (string)
                     The ID of the Qualification type for the requirement.

                 Comparator -> (string)
                     The kind of comparison to make against a  Qualification's
                     value.  You can compare a Qualification's value to an In-
                     tegerValue to see if it is  LessThan,  LessThanOrEqualTo,
                     GreaterThan, GreaterThanOrEqualTo, EqualTo, or NotEqualTo
                     the IntegerValue. You can compare it to a LocaleValue  to
                     see  if it is EqualTo, or NotEqualTo the LocaleValue. You
                     can check to see if the value is In or NotIn a set of In-
                     tegerValue or LocaleValue values. Lastly, a Qualification
                     requirement can also test if a  Qualification  Exists  or
                     DoesNotExist  in  the  user's  profile, regardless of its
                     value.

                 IntegerValues -> (list)
                     The integer value to compare against the  Qualification's
                     value.  IntegerValue must not be present if Comparator is
                     Exists or DoesNotExist. IntegerValue can only be used  if
                     the Qualification type has an integer value; it cannot be
                     used with the Worker_Locale  QualificationType  ID.  When
                     performing  a set comparison by using the In or the NotIn
                     comparator, you can use up to 15 IntegerValue elements in
                     a QualificationRequirement data structure.

                     (integer)

                 LocaleValues -> (list)
                     The  locale  value to compare against the Qualification's
                     value. The local value must be a valid ISO  3166  country
                     code or supports ISO 3166-2 subdivisions. LocaleValue can
                     only be used with a Worker_Locale  QualificationType  ID.
                     LocaleValue  can  only  be  used  with the EqualTo, NotE-
                     qualTo, In, and NotIn comparators. You must  only  use  a
                     single  LocaleValue  element  when  using  the EqualTo or
                     NotEqualTo comparators. When performing a set  comparison
                     by  using  the In or the NotIn comparator, you can use up
                     to 30 LocaleValue elements in a  QualificationRequirement
                     data structure.

                     (structure)
                        The  Locale  data  structure represents a geographical
                        region or location.

                        Country -> (string)
                            The country of the locale. Must  be  a  valid  ISO
                            3166 country code. For example, the code US refers
                            to the United States of America.

                        Subdivision -> (string)
                            The state or subdivision of the  locale.  A  valid
                            ISO 3166-2 subdivision code. For example, the code
                            WA refers to the state of Washington.

                 RequiredToPreview -> (boolean)
                     DEPRECATED: Use the ActionsGuarded field instead. If  Re-
                     quiredToPreview  is  true,  the question data for the HIT
                     will not be shown when a Worker whose  Qualifications  do
                     not  meet this requirement tries to preview the HIT. That
                     is, a Worker's Qualifications must meet all  of  the  re-
                     quirements  for  which RequiredToPreview is true in order
                     to preview the HIT. If a Worker meets all of the require-
                     ments where RequiredToPreview is true (or if there are no
                     such requirements), but does not meet all of the require-
                     ments  for the HIT, the Worker will be allowed to preview
                     the HIT's question data, but will not be allowed  to  ac-
                     cept  and  complete  the  HIT. The default is false. This
                     should not be used in combination with the ActionsGuarded
                     field.

                 ActionsGuarded -> (string)
                     Setting  this attribute prevents Workers whose Qualifica-
                     tions do not meet this QualificationRequirement from tak-
                     ing  the  specified  action. Valid arguments include "Ac-
                     cept" (Worker cannot accept the HIT, but can preview  the
                     HIT  and  see it in their search results), "PreviewAndAc-
                     cept" (Worker cannot accept or preview the HIT,  but  can
                     see  the  HIT in their search results), and "DiscoverPre-
                     viewAndAccept" (Worker cannot accept, preview, or see the
                     HIT  in  their  search results). It's possible for you to
                     create  a  HIT  with  multiple  QualificationRequirements
                     (which  can  have  different values for the ActionGuarded
                     attribute). In this case, the Worker is only permitted to
                     perform an action when they have met all QualificationRe-
                     quirements guarding the action. The actions in the  order
                     of  least  restrictive  to most restrictive are Discover,
                     Preview and Accept. For example, if a  Worker  meets  all
                     QualificationRequirements  that  are  set to DiscoverPre-
                     viewAndAccept, but do not meet all requirements that  are
                     set  with  PreviewAndAccept, then the Worker will be able
                     to Discover, i.e. see the HIT in their search result, but
                     will  not  be able to Preview or Accept the HIT. Actions-
                     Guarded should not be used in combination  with  the  Re-
                     quiredToPreview field.

          HITReviewStatus -> (string)
              Indicates  the review status of the HIT. Valid Values are NotRe-
              viewed | MarkedForReview | ReviewedAppropriate  |  ReviewedInap-
              propriate.

          NumberOfAssignmentsPending -> (integer)
              The  number of assignments for this HIT that are being previewed
              or have been accepted by Workers, but have not yet been  submit-
              ted, returned, or abandoned.

          NumberOfAssignmentsAvailable -> (integer)
              The  number  of  assignments for this HIT that are available for
              Workers to accept.

          NumberOfAssignmentsCompleted -> (integer)
              The number of assignments for this HIT that have  been  approved
              or rejected.



                                                              GET-ASSIGNMENT()
