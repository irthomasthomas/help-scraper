CREATE-HIT-TYPE()                                            CREATE-HIT-TYPE()



NAME
       create-hit-type -

DESCRIPTION
       The  CreateHITType operation creates a new HIT type. This operation al-
       lows you to define a standard set of HIT properties to use when  creat-
       ing HITs. If you register a HIT type with values that match an existing
       HIT type, the HIT type ID of the existing type will be returned.

       See also: AWS API Documentation

SYNOPSIS
            create-hit-type
          [--auto-approval-delay-in-seconds <value>]
          --assignment-duration-in-seconds <value>
          --reward <value>
          --title <value>
          [--keywords <value>]
          --description <value>
          [--qualification-requirements <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --auto-approval-delay-in-seconds (long)
          The number of seconds after an assignment for the HIT has been  sub-
          mitted,  after which the assignment is considered Approved automati-
          cally unless the Requester explicitly rejects it.

       --assignment-duration-in-seconds (long)
          The amount of time, in seconds, that a Worker has  to  complete  the
          HIT after accepting it. If a Worker does not complete the assignment
          within the specified duration, the assignment  is  considered  aban-
          doned.  If  the  HIT  is still active (that is, its lifetime has not
          elapsed), the assignment becomes available for other users  to  find
          and accept.

       --reward (string)
          The amount of money the Requester will pay a Worker for successfully
          completing the HIT.

       --title (string)
          The title of the HIT. A title should be short and descriptive  about
          the kind of task the HIT contains. On the Amazon Mechanical Turk web
          site, the HIT title appears in search results,  and  everywhere  the
          HIT is mentioned.

       --keywords (string)
          One  or  more  words  or phrases that describe the HIT, separated by
          commas. These words are used in searches to find HITs.

       --description (string)
          A general description of the HIT. A  description  includes  detailed
          information  about  the kind of task the HIT contains. On the Amazon
          Mechanical Turk web site, the HIT description  appears  in  the  ex-
          panded  view  of  search  results,  and  in  the  HIT and assignment
          screens. A good description gives the  user  enough  information  to
          evaluate the HIT before accepting it.

       --qualification-requirements (list)
          Conditions  that a Worker's Qualifications must meet in order to ac-
          cept the HIT. A HIT can have between zero and ten Qualification  re-
          quirements.  All  requirements  must be met in order for a Worker to
          accept the HIT. Additionally, other actions can be restricted  using
          the ActionsGuarded field on each QualificationRequirement structure.

          (structure)
              The QualificationRequirement data structure describes a Qualifi-
              cation that a Worker must have before the Worker is  allowed  to
              accept  a  HIT. A requirement may optionally state that a Worker
              must have the Qualification in order to preview the HIT, or  see
              the HIT in search results.

              QualificationTypeId -> (string)
                 The ID of the Qualification type for the requirement.

              Comparator -> (string)
                 The  kind  of  comparison  to  make against a Qualification's
                 value. You can compare a Qualification's value  to  an  Inte-
                 gerValue   to  see  if  it  is  LessThan,  LessThanOrEqualTo,
                 GreaterThan, GreaterThanOrEqualTo, EqualTo, or NotEqualTo the
                 IntegerValue.  You  can compare it to a LocaleValue to see if
                 it is EqualTo, or NotEqualTo the LocaleValue. You  can  check
                 to  see  if the value is In or NotIn a set of IntegerValue or
                 LocaleValue values. Lastly, a Qualification  requirement  can
                 also  test  if  a Qualification Exists or DoesNotExist in the
                 user's profile, regardless of its value.

              IntegerValues -> (list)
                 The integer value  to  compare  against  the  Qualification's
                 value.  IntegerValue must not be present if Comparator is Ex-
                 ists or DoesNotExist. IntegerValue can only be  used  if  the
                 Qualification  type  has  an integer value; it cannot be used
                 with the Worker_Locale QualificationType ID. When  performing
                 a set comparison by using the In or the NotIn comparator, you
                 can use up to 15 IntegerValue elements in a  QualificationRe-
                 quirement data structure.

                 (integer)

              LocaleValues -> (list)
                 The  locale  value  to  compare  against  the Qualification's
                 value. The local value must be a valid ISO 3166 country  code
                 or  supports ISO 3166-2 subdivisions. LocaleValue can only be
                 used with a Worker_Locale QualificationType  ID.  LocaleValue
                 can  only be used with the EqualTo, NotEqualTo, In, and NotIn
                 comparators. You must only use a single  LocaleValue  element
                 when  using  the EqualTo or NotEqualTo comparators. When per-
                 forming a set comparison by using the In or  the  NotIn  com-
                 parator, you can use up to 30 LocaleValue elements in a Qual-
                 ificationRequirement data structure.

                 (structure)
                     The Locale data structure represents a  geographical  re-
                     gion or location.

                     Country -> (string)
                        The  country  of  the locale. Must be a valid ISO 3166
                        country code. For example, the code US refers  to  the
                        United States of America.

                     Subdivision -> (string)
                        The  state  or  subdivision of the locale. A valid ISO
                        3166-2 subdivision code.  For  example,  the  code  WA
                        refers to the state of Washington.

              RequiredToPreview -> (boolean)
                 DEPRECATED:  Use  the  ActionsGuarded  field  instead. If Re-
                 quiredToPreview is true, the question data for the  HIT  will
                 not  be  shown when a Worker whose Qualifications do not meet
                 this requirement  tries  to  preview  the  HIT.  That  is,  a
                 Worker's Qualifications must meet all of the requirements for
                 which RequiredToPreview is true in order to preview the  HIT.
                 If  a  Worker meets all of the requirements where RequiredTo-
                 Preview is true (or if there are no such  requirements),  but
                 does not meet all of the requirements for the HIT, the Worker
                 will be allowed to preview the HIT's question data, but  will
                 not be allowed to accept and complete the HIT. The default is
                 false. This should not be used in combination  with  the  Ac-
                 tionsGuarded field.

              ActionsGuarded -> (string)
                 Setting  this attribute prevents Workers whose Qualifications
                 do not meet this  QualificationRequirement  from  taking  the
                 specified  action.  Valid  arguments include "Accept" (Worker
                 cannot accept the HIT, but can preview the HIT and see it  in
                 their  search results), "PreviewAndAccept" (Worker cannot ac-
                 cept or preview the HIT, but can see the HIT in their  search
                 results),  and  "DiscoverPreviewAndAccept" (Worker cannot ac-
                 cept, preview, or see the HIT in their search results).  It's
                 possible for you to create a HIT with multiple Qualification-
                 Requirements (which can have different  values  for  the  Ac-
                 tionGuarded attribute). In this case, the Worker is only per-
                 mitted to perform an action when they have met all Qualifica-
                 tionRequirements  guarding the action. The actions in the or-
                 der of least restrictive to most  restrictive  are  Discover,
                 Preview and Accept. For example, if a Worker meets all Quali-
                 ficationRequirements that are  set  to  DiscoverPreviewAndAc-
                 cept, but do not meet all requirements that are set with Pre-
                 viewAndAccept, then the Worker will be able to Discover, i.e.
                 see  the  HIT in their search result, but will not be able to
                 Preview or Accept the HIT. ActionsGuarded should not be  used
                 in combination with the RequiredToPreview field.

       Shorthand Syntax:

          QualificationTypeId=string,Comparator=string,IntegerValues=integer,integer,LocaleValues=[{Country=string,Subdivision=string},{Country=string,Subdivision=string}],RequiredToPreview=boolean,ActionsGuarded=string ...

       JSON Syntax:

          [
            {
              "QualificationTypeId": "string",
              "Comparator": "LessThan"|"LessThanOrEqualTo"|"GreaterThan"|"GreaterThanOrEqualTo"|"EqualTo"|"NotEqualTo"|"Exists"|"DoesNotExist"|"In"|"NotIn",
              "IntegerValues": [integer, ...],
              "LocaleValues": [
                {
                  "Country": "string",
                  "Subdivision": "string"
                }
                ...
              ],
              "RequiredToPreview": true|false,
              "ActionsGuarded": "Accept"|"PreviewAndAccept"|"DiscoverPreviewAndAccept"
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       HITTypeId -> (string)
          The ID of the newly registered HIT type.



                                                             CREATE-HIT-TYPE()
