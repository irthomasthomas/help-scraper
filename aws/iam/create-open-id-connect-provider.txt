CREATE-OPEN-ID-CONNECT-PROVIDER()            CREATE-OPEN-ID-CONNECT-PROVIDER()



NAME
       create-open-id-connect-provider -

DESCRIPTION
       Creates  an IAM entity to describe an identity provider (IdP) that sup-
       ports OpenID Connect (OIDC) .

       The OIDC provider that you create with this operation can be used as  a
       principal  in  a role's trust policy. Such a policy establishes a trust
       relationship between Amazon Web Services and the OIDC provider.

       If you are using an OIDC identity provider from  Google,  Facebook,  or
       Amazon  Cognito,  you  don't  need  to  create  a separate IAM identity
       provider. These OIDC identity providers are already built-in to  Amazon
       Web  Services and are available for your use. Instead, you can move di-
       rectly to creating new roles using your  identity  provider.  To  learn
       more, see Creating a role for web identity or OpenID connect federation
       in the IAM User Guide .

       When you create the IAM OIDC provider, you specify the following:

       o The URL of the OIDC identity provider (IdP) to trust

       o A list of client IDs (also known as audiences) that identify the  ap-
         plication  or  applications  allowed  to  authenticate using the OIDC
         provider

       o A list of tags that are attached to the specified IAM OIDC provider

       o A list of thumbprints of one or more server certificates that the IdP
         uses

       You  get  all  of this information from the OIDC IdP you want to use to
       access Amazon Web Services.

       NOTE:
          Amazon Web Services secures communication with  some  OIDC  identity
          providers (IdPs) through our library of trusted root certificate au-
          thorities (CAs) instead of using a certificate thumbprint to  verify
          your  IdP server certificate. These OIDC IdPs include Auth0, GitHub,
          Google, and those that use an Amazon S3 bucket to host  a  JSON  Web
          Key  Set (JWKS) endpoint. In these cases, your legacy thumbprint re-
          mains in your configuration, but is no longer used for validation.

       NOTE:
          The trust for the OIDC provider is derived  from  the  IAM  provider
          that  this  operation creates. Therefore, it is best to limit access
          to the  CreateOpenIDConnectProvider operation to  highly  privileged
          users.

       See also: AWS API Documentation

SYNOPSIS
            create-open-id-connect-provider
          --url <value>
          [--client-id-list <value>]
          --thumbprint-list <value>
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --url (string)
          The  URL  of the identity provider. The URL must begin with https://
          and should correspond to the iss claim in the provider's OpenID Con-
          nect  ID  tokens. Per the OIDC standard, path components are allowed
          but query parameters are not. Typically the URL consists of  only  a
          hostname,  like  https://server.example.org or https://example.com .
          The URL should not contain a port number.

          You cannot register the same provider multiple  times  in  a  single
          Amazon Web Services account. If you try to submit a URL that has al-
          ready been used for an OpenID Connect provider  in  the  Amazon  Web
          Services account, you will get an error.

       --client-id-list (list)
          Provides  a  list of client IDs, also known as audiences. When a mo-
          bile or web app registers with an OpenID Connect provider, they  es-
          tablish  a  value that identifies the application. This is the value
          that's sent as the client_id parameter on OAuth requests.

          You can register multiple client IDs with the same provider. For ex-
          ample,  you  might have multiple applications that use the same OIDC
          provider. You cannot register more than 100 client IDs with a single
          IAM OIDC provider.

          There is no defined format for a client ID. The CreateOpenIDConnect-
          ProviderRequest operation accepts client IDs up  to  255  characters
          long.

          (string)

       Syntax:

          "string" "string" ...

       --thumbprint-list (list)
          A  list  of  server  certificate  thumbprints for the OpenID Connect
          (OIDC) identity provider's server certificates. Typically this  list
          includes  only  one  entry.  However,  IAM  lets you have up to five
          thumbprints for an OIDC provider. This lets  you  maintain  multiple
          thumbprints if the identity provider is rotating certificates.

          The  server  certificate  thumbprint  is  the hex-encoded SHA-1 hash
          value of the X.509 certificate used by the domain where  the  OpenID
          Connect provider makes its keys available. It is always a 40-charac-
          ter string.

          You must provide at least one thumbprint when creating an  IAM  OIDC
          provider. For example, assume that the OIDC provider is server.exam-
          ple.com    and    the    provider     stores     its     keys     at
          https://keys.server.example.com/openid-connect.  In  that  case, the
          thumbprint string would be the hex-encoded SHA-1 hash value  of  the
          certificate used by https://keys.server.example.com.

          For  more  information about obtaining the OIDC provider thumbprint,
          see Obtaining the thumbprint for an OpenID Connect provider  in  the
          IAM user Guide .

          (string)
              Contains a thumbprint for an identity provider's server certifi-
              cate.

              The identity provider's server  certificate  thumbprint  is  the
              hex-encoded  SHA-1  hash value of the self-signed X.509 certifi-
              cate. This thumbprint is used by the  domain  where  the  OpenID
              Connect provider makes its keys available. The thumbprint is al-
              ways a 40-character string.

       Syntax:

          "string" "string" ...

       --tags (list)
          A list of tags that you want to attach to the new IAM OpenID Connect
          (OIDC)  provider.  Each tag consists of a key name and an associated
          value. For more information about tagging, see Tagging IAM resources
          in the IAM User Guide .

          NOTE:
              If  any  one of the tags is invalid or if you exceed the allowed
              maximum number of tags, then the entire request  fails  and  the
              resource is not created.

          (structure)
              A  structure  that represents user-provided metadata that can be
              associated with an IAM resource. For more information about tag-
              ging, see Tagging IAM resources in the IAM User Guide .

              Key -> (string)
                 The  key name that can be used to look up or retrieve the as-
                 sociated value. For example, Department or  Cost  Center  are
                 common choices.

              Value -> (string)
                 The  value associated with this tag. For example, tags with a
                 key name of Department could have values such  as  Human  Re-
                 sources  , Accounting , and Support . Tags with a key name of
                 Cost Center might have values that consist of the number  as-
                 sociated  with  the  different  cost centers in your company.
                 Typically, many resources have tags with the  same  key  name
                 but with different values.

                 NOTE:
                     Amazon  Web Services always interprets the tag Value as a
                     single string. If you need to store  an  array,  you  can
                     store  comma-separated values in the string. However, you
                     must interpret the value in your code.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create an OpenID Connect (OIDC) provider

       To create an OpenID Connect (OIDC) provider,  we  recommend  using  the
       --cli-input-json  parameter  to  pass a JSON file that contains the re-
       quired parameters. When you create an OIDC provider, you must pass  the
       URL  of  the  provider, and the URL must begin with https://. It can be
       difficult to pass the URL as a  command  line  parameter,  because  the
       colon (:) and forward slash (/) characters have special meaning in some
       command line environments. Using the  --cli-input-json  parameter  gets
       around this limitation.

       To  use  the  --cli-input-json  parameter,  start  by  using  the  cre-
       ate-open-id-connect-provider command with  the  --generate-cli-skeleton
       parameter, as in the following example.

          aws iam create-open-id-connect-provider \
              --generate-cli-skeleton > create-open-id-connect-provider.json

       The  previous  command  creates  a JSON file called create-open-id-con-
       nect-provider.json that you can use to fill in the  information  for  a
       subsequent create-open-id-connect-provider command. For example:

          {
              "Url": "https://server.example.com",
              "ClientIDList": [
                  "example-application-ID"
              ],
              "ThumbprintList": [
                  "c3768084dfb3d2b68b7897bf5f565da8eEXAMPLE"
              ]
          }

       Next,  to  create  the  OpenID  Connect  (OIDC)  provider, use the cre-
       ate-open-id-connect-provider  command  again,  this  time  passing  the
       --cli-input-json  parameter  to  specify  your JSON file. The following
       create-open-id-connect-provider command uses the  --cli-input-json  pa-
       rameter with a JSON file called create-open-id-connect-provider.json.

          aws iam create-open-id-connect-provider \
              --cli-input-json file://create-open-id-connect-provider.json

       Output:

          {
              "OpenIDConnectProviderArn": "arn:aws:iam::123456789012:oidc-provider/server.example.com"
          }

       For  more information about OIDC providers, see Creating OpenID Connect
       (OIDC) identity providers in the AWS IAM User Guide.

       For more information about obtaining thumbprints for an OIDC  provider,
       see Obtaining the thumbprint for an OpenID Connect Identity Provider in
       the AWS IAM User Guide.

OUTPUT
       OpenIDConnectProviderArn -> (string)
          The Amazon Resource  Name  (ARN)  of  the  new  IAM  OpenID  Connect
          provider  that is created. For more information, see  OpenIDConnect-
          ProviderListEntry .

       Tags -> (list)
          A list of tags that are attached to the new IAM OIDC  provider.  The
          returned  list  of  tags  is sorted by tag key. For more information
          about tagging, see Tagging IAM resources in the IAM User Guide .

          (structure)
              A structure that represents user-provided metadata that  can  be
              associated with an IAM resource. For more information about tag-
              ging, see Tagging IAM resources in the IAM User Guide .

              Key -> (string)
                 The key name that can be used to look up or retrieve the  as-
                 sociated  value.  For  example, Department or Cost Center are
                 common choices.

              Value -> (string)
                 The value associated with this tag. For example, tags with  a
                 key  name  of  Department could have values such as Human Re-
                 sources , Accounting , and Support . Tags with a key name  of
                 Cost  Center might have values that consist of the number as-
                 sociated with the different cost  centers  in  your  company.
                 Typically,  many  resources  have tags with the same key name
                 but with different values.

                 NOTE:
                     Amazon Web Services always interprets the tag Value as  a
                     single  string.  If  you  need to store an array, you can
                     store comma-separated values in the string. However,  you
                     must interpret the value in your code.



                                             CREATE-OPEN-ID-CONNECT-PROVIDER()
