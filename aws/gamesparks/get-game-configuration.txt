GET-GAME-CONFIGURATION()                              GET-GAME-CONFIGURATION()



NAME
       get-game-configuration -

DESCRIPTION
       Gets the configuration of the game.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

       get-game-configuration uses document type values. Document types follow
       the JSON data model where valid values are: strings, numbers, booleans,
       null, arrays, and objects. For command input, options and nested param-
       eters that are labeled with the type document must be provided as JSON.
       Shorthand syntax does not support document types.

SYNOPSIS
            get-game-configuration
          --game-name <value>
          [--sections <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --game-name (string)
          The name of the game.

       --sections (list)
          The list of sections to return.

          (string)

       Syntax:

          "string" "string" ...

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       GameConfiguration -> (structure)
          Details about the game configuration.

          Created -> (timestamp)
              The date when the game was created.

          LastUpdated -> (timestamp)
              The date when the game was last modified.

          Sections -> (map)
              Configuration data, organized by section name.

              key -> (string)

              value -> (structure)
                 The configuration section.

                 Attributes -> (document)
                     The content of a configuration section.

                 Name -> (string)
                     The name of the section.

                 Size -> (integer)
                     The size, in bytes, of the section contents.



                                                      GET-GAME-CONFIGURATION()
