GET-AGREEMENT-TERMS()                                    GET-AGREEMENT-TERMS()



NAME
       get-agreement-terms -

DESCRIPTION
       Obtains  details  about the terms in an agreement that you participated
       in as proposer or acceptor.

       The details include:

       o TermType  The type of term, such as LegalTerm , RenewalTerm , or Con-
         figurableUpfrontPricingTerm .

       o TermID   The ID of the particular term, which is common between offer
         and agreement.

       o TermPayload  The key information contained in the term, such  as  the
         EULA  for  LegalTerm  or  pricing  and dimensions for various pricing
         terms,  such  as  ConfigurableUpfrontPricingTerm  or  UsageBasedPric-
         ingTerm .

       o Configuration   The  buyer/acceptor's selection at the time of agree-
         ment creation, such as the number of units purchased for a  dimension
         or setting the EnableAutoRenew flag.

       See also: AWS API Documentation

SYNOPSIS
            get-agreement-terms
          --agreement-id <value>
          [--max-results <value>]
          [--next-token <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --agreement-id (string)
          The unique identifier of the agreement.

       --max-results (integer)
          The maximum number of agreements to return in the response.

       --next-token (string)
          A token to specify where to start pagination

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       acceptedTerms -> (list)
          A  subset  of terms proposed by the proposer that have been accepted
          by the acceptor as part of the agreement creation.

          (tagged union structure)
              A subset of terms proposed by the proposer, which have been  ac-
              cepted by the acceptor as part of agreement creation.

              NOTE:
                 This  is  a Tagged Union structure. Only one of the following
                 top level keys can  be  set:  byolPricingTerm,  configurable-
                 UpfrontPricingTerm,  fixedUpfrontPricingTerm,  freeTrialPric-
                 ingTerm,  legalTerm,  paymentScheduleTerm,  recurringPayment-
                 Term, renewalTerm, supportTerm, usageBasedPricingTerm, valid-
                 ityTerm.

              byolPricingTerm -> (structure)
                 Enables you and your customers to move your  existing  agree-
                 ments  to  AWS Marketplace. The customer won't be charged for
                 product usage in AWS Marketplace because  they  already  paid
                 for the product outside of AWS Marketplace.

                 type -> (string)
                     Type of the term being updated.

              configurableUpfrontPricingTerm -> (structure)
                 Defines a prepaid payment model that allows buyers to config-
                 ure the entitlements they want to purchase and the duration.

                 configuration -> (structure)
                     Additional parameters specified by the acceptor while ac-
                     cepting the term.

                     dimensions -> (list)
                        Defines the dimensions that the acceptor has purchased
                        from the overall set of dimensions  presented  in  the
                        rate card.

                        (structure)
                            Defines  the dimensions that the acceptor has pur-
                            chased from the overall  set  of  dimensions  pre-
                            sented in the rate card.

                            dimensionKey -> (string)
                               The name of key value of the dimension.

                            dimensionValue -> (integer)
                               The number of units of the dimension the accep-
                               tor has purchased.

                               NOTE:
                                   For  Agreements  with  ConfigurableUpfront-
                                   PricingTerm , the RateCard section will de-
                                   fine the prices and dimensions  defined  by
                                   the seller (proposer), whereas the Configu-
                                   ration section will define the  actual  di-
                                   mensions,  prices,  and units the buyer has
                                   chosen to accept.

                     selectorValue -> (string)
                        Defines the length of time for  which  the  particular
                        pricing/dimension is being purchased by the acceptor.

                 currencyCode -> (string)
                     Defines  the  currency  for  the  prices mentioned in the
                     term.

                 rateCards -> (list)
                     A rate card defines the per unit rates for product dimen-
                     sions.

                     (structure)
                        Within the prepaid payment model defined under Config-
                        urableUpfrontPricingTerm ,  the  RateCardItem  defines
                        all  the various rate cards (including pricing and di-
                        mensions) that have been proposed.

                        constraints -> (structure)
                            Defines limits on how the term can  be  configured
                            by acceptors.

                            multipleDimensionSelection -> (string)
                               Determines if buyers are allowed to select mul-
                               tiple dimensions in the rate card. The possible
                               values are Allowed and Disallowed . The default
                               value is Allowed .

                            quantityConfiguration -> (string)
                               Determines if acceptors are allowed to  config-
                               ure  quantity  for each dimension in rate card.
                               The possible values are Allowed and  Disallowed
                               . The default value is Allowed .

                        rateCard -> (list)
                            Defines the per unit rates for product dimensions.

                            (structure)
                               Defines  the per unit rates for each individual
                               product dimension.

                               dimensionKey -> (string)
                                   Dimension for which the  given  entitlement
                                   applies. Dimensions represent categories of
                                   capacity in a  product  and  are  specified
                                   when  the  product is listed in AWS Market-
                                   place.

                               price -> (string)
                                   Per unit price for  the  product  dimension
                                   thats used for calculating the amount to be
                                   charged.

                        selector -> (structure)
                            Differentiates between the mutually exclusive rate
                            cards  in  the same pricing term to be selected by
                            the buyer.

                            type -> (string)
                               Category of selector.

                            value -> (string)
                               Contract duration. This field supports the  ISO
                               8601 format.

                 type -> (string)
                     Category of selector.

              fixedUpfrontPricingTerm -> (structure)
                 Defines  a  pre-paid  pricing  model  where the customers are
                 charged a fixed upfront amount.

                 currencyCode -> (string)
                     Defines the currency for the  prices  mentioned  in  this
                     term.

                 duration -> (string)
                     Contract duration for the terms.

                 grants -> (list)
                     Entitlements  granted to the acceptor of fixed upfront as
                     part of agreement execution.

                     (structure)
                        Entitlements granted to the acceptor of fixed  upfront
                        as part of agreement execution.

                        dimensionKey -> (string)
                            Unique  dimension key defined in the product docu-
                            ment. Dimensions represent categories of  capacity
                            in a product and are specified when the product is
                            listed in AWS Marketplace.

                        maxQuantity -> (integer)
                            Maximum amount of capacity that the buyer  can  be
                            entitled to the given dimension of the product. If
                            MaxQuantity is not provided,  the  buyer  will  be
                            able  to  use an unlimited amount of the given di-
                            mension.

                 price -> (string)
                     Fixed amount to be charged to the customer when this term
                     is accepted.

                 type -> (string)
                     Category of the term being updated.

              freeTrialPricingTerm -> (structure)
                 Defines  a short-term free pricing model where the buyers ar-
                 ent charged anything within a specified limit.

                 duration -> (string)
                     Duration of the free trial period (531 days).

                 grants -> (list)
                     Entitlements granted to the acceptor of a free  trial  as
                     part of an agreement execution.

                     (structure)
                        Entitlements  granted to the acceptor of fixed upfront
                        as part of agreement execution.

                        dimensionKey -> (string)
                            Unique dimension key defined in the product  docu-
                            ment.  Dimensions represent categories of capacity
                            in a product and are specified when the product is
                            listed in AWS Marketplace.

                        maxQuantity -> (integer)
                            Maximum  amount  of capacity that the buyer can be
                            entitled to the given dimension of the product. If
                            MaxQuantity  is  not  provided,  the buyer will be
                            able to use an unlimited amount of the  given  di-
                            mension.

                 type -> (string)
                     Category of the term.

              legalTerm -> (structure)
                 Defines  the  list  of text agreements proposed to the accep-
                 tors. An example is the end user license agreement (EULA).

                 documents -> (list)
                     List of references to legal  resources  proposed  to  the
                     buyers. An example is the EULA.

                     (structure)
                        Includes  the  list  of  references to legal resources
                        proposed by the proposer to the acceptor.  Each  Docu-
                        mentItem refers to an individual reference.

                        type -> (string)
                            Category of the document. Document types include:

                            o CustomEula   A  custom  EULA  provided by you as
                              seller. A URL for a EULA stored in an accessible
                              Amazon  S3  bucket is required for this document
                              type.

                            o CustomDsa  A custom Data Subscription  Agreement
                              (DSA) provided by you as seller. A URL for a DSA
                              stored in an accessible Amazon S3 bucket is  re-
                              quired for this document type.

                            o StandardEula  The Standard Contract for AWS Mar-
                              ketplace  (SCMP).  For  more  information  about
                              SCMP,  see the AWS Marketplace Seller Guide. You
                              dont provide a URL for  this  type  because  its
                              managed by AWS Marketplace.

                            o StandardDsa   DSA  for AWS Marketplace. For more
                              information about the DSA, see the AWS Data  Ex-
                              change  User  Guide.  You dont provide a URL for
                              this type because its  managed  by  AWS  Market-
                              place.

                        url -> (string)
                            A  URL  to  the legal document for buyers to read.
                            Required when Type is CustomEula .

                        version -> (string)
                            Version of standard contracts provided by AWS Mar-
                            ketplace.  Required  when  Type is StandardEula or
                            StandardDsa .

                 type -> (string)
                     Category of the term being updated.

              paymentScheduleTerm -> (structure)
                 Defines an installment-based pricing  model  where  customers
                 are  charged  a  fixed  price  on  different dates during the
                 agreement validity period. This is  used  most  commonly  for
                 flexible payment schedule pricing.

                 currencyCode -> (string)
                     Defines  the  currency  for  the  prices mentioned in the
                     term.

                 schedule -> (list)
                     List of the payment schedule where each  element  defines
                     one  installment  of payment. It contains the information
                     necessary for calculating the price.

                     (structure)
                        An individual installment of the payment that includes
                        the date and amount of the charge.

                        chargeAmount -> (string)
                            The  price  that  the  customer  would  pay on the
                            scheduled date (chargeDate).

                        chargeDate -> (timestamp)
                            The date that the customer would pay the price de-
                            fined  in this payment schedule term. Invoices are
                            generated on the date provided.

                 type -> (string)
                     Type of the term.

              recurringPaymentTerm -> (structure)
                 Defines a pricing model where customers are charged  a  fixed
                 recurring price at the end of each billing period.

                 billingPeriod -> (string)
                     Defines the recurrence at which buyers are charged.

                 currencyCode -> (string)
                     Defines  the  currency  for  the prices mentioned in this
                     term.

                 price -> (string)
                     Amount charged to the buyer every billing period.

                 type -> (string)
                     Type of the term being updated.

              renewalTerm -> (structure)
                 Defines that on graceful expiration of  the  agreement  (when
                 the agreement ends on its pre-defined end date), a new agree-
                 ment will be created using the accepted terms on the existing
                 agreement.  In  other  words,  the agreement will be renewed.
                 Presence of RenewalTerm in  the  offer  document  means  that
                 auto-renewal  is  allowed. Buyers will have the option to ac-
                 cept or decline auto-renewal at the  offer  acceptance/agree-
                 ment  creation. Buyers can also change this flag from True to
                 False or False to True  at  anytime  during  the  agreement's
                 lifecycle.

                 configuration -> (structure)
                     Additional parameters specified by the acceptor while ac-
                     cepting the term.

                     enableAutoRenew -> (boolean)
                        Defines whether the acceptor has chosen to  auto-renew
                        the  agreement at the end of its lifecycle. Can be set
                        to True or False .

                 type -> (string)
                     Category of the term being updated.

              supportTerm -> (structure)
                 Defines the customer support available for the acceptors when
                 they purchase the software.

                 refundPolicy -> (string)
                     Free-text  field about the refund policy description that
                     will be shown to customers as is on the website and  con-
                     sole.

                 type -> (string)
                     Category of the term being updated.

              usageBasedPricingTerm -> (structure)
                 Defines a usage-based pricing model (typically, pay-as-you-go
                 pricing), where the customers are charged  based  on  product
                 usage.

                 currencyCode -> (string)
                     Defines  the  currency  for  the  prices mentioned in the
                     term.

                 rateCards -> (list)
                     List of rate cards.

                     (structure)
                        Within the pay-as-you-go model  defined  under  Usage-
                        BasedPricingTerm  , the UsageBasedRateCardItem defines
                        an individual rate for a product dimension.

                        rateCard -> (list)
                            Defines the per unit rates for product dimensions.

                            (structure)
                               Defines the per unit rates for each  individual
                               product dimension.

                               dimensionKey -> (string)
                                   Dimension  for  which the given entitlement
                                   applies. Dimensions represent categories of
                                   capacity  in  a  product  and are specified
                                   when the product is listed in  AWS  Market-
                                   place.

                               price -> (string)
                                   Per  unit  price  for the product dimension
                                   thats used for calculating the amount to be
                                   charged.

                 type -> (string)
                     Category of the term.

              validityTerm -> (structure)
                 Defines  the  conditions  that will keep an agreement created
                 from this offer valid.

                 agreementDuration -> (string)
                     Defines the duration that the agreement  remains  active.
                     If  AgreementStartDate isnt provided, the agreement dura-
                     tion is relative to the agreement signature time. The du-
                     ration is represented in the ISO_8601 format.

                 agreementEndDate -> (timestamp)
                     Defines  the  date when the agreement ends. The agreement
                     ends at 23:59:59.999 UTC on the date provided. If  Agree-
                     mentEndDate  isnt provided, the agreement end date is de-
                     termined by the validity of individual terms.

                 agreementStartDate -> (timestamp)
                     Defines the date when  agreement  starts.  The  agreement
                     starts  at  00:00:00.000  UTC  on  the  date provided. If
                     AgreementStartDate isnt  provided,  the  agreement  start
                     date is determined based on agreement signature time.

                 type -> (string)
                     Category of the term being updated.

       nextToken -> (string)
          A token to specify where to start pagination



                                                         GET-AGREEMENT-TERMS()
