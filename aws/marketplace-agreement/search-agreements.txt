SEARCH-AGREEMENTS()                                        SEARCH-AGREEMENTS()



NAME
       search-agreements -

DESCRIPTION
       Searches  across  all  agreements that a proposer or an acceptor has in
       AWS Marketplace. The search returns a list  of  agreements  with  basic
       agreement information.

       The following filter combinations are supported:

       o PartyType as Proposer + AgreementType + ResourceIdentifier

       o PartyType as Proposer + AgreementType + OfferId

       o PartyType as Proposer + AgreementType + AcceptorAccountId

       o PartyType as Proposer + AgreementType + Status

       o PartyType as Proposer + AgreementType + ResourceIdentifier + Status

       o PartyType as Proposer + AgreementType + OfferId + Status

       o PartyType as Proposer + AgreementType + AcceptorAccountId + Status

       o PartyType as Proposer + AgreementType + ResourceType + Status

       o PartyType as Proposer + AgreementType + AcceptorAccountId + Resource-
         Type + Status

       o PartyType as Proposer + AgreementType + AcceptorAccountId + OfferId

       o PartyType as Proposer + AgreementType + AcceptorAccountId + OfferId +
         Status

       o PartyType  as  Proposer + AgreementType + AcceptorAccountId + Resour-
         ceIdentifier

       o PartyType as Proposer + AgreementType + AcceptorAccountId  +  Resour-
         ceIdentifier + Status

       o PartyType as Proposer + AgreementType + AcceptorAccountId + Resource-
         Type

       See also: AWS API Documentation

SYNOPSIS
            search-agreements
          [--catalog <value>]
          [--filters <value>]
          [--max-results <value>]
          [--next-token <value>]
          [--sort <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --catalog (string)
          The catalog in which the agreement was created.

       --filters (list)
          The filter name and value pair used to return a specific list of re-
          sults.

          The following filters are supported:

          o ResourceIdentifier  The unique identifier of the resource.

          o ResourceType  Type of the resource, which is the product (AmiProd-
            uct , ContainerProduct , or SaaSProduct ).

          o PartyType  The party type (either Acceptor or Proposer  )  of  the
            caller.  For  agreements where the caller is the proposer, use the
            Proposer filter. For agreements where the caller is the  acceptor,
            use the Acceptor filter.

          o AcceptorAccountId   The  AWS account ID of the party accepting the
            agreement terms.

          o OfferId  The unique identifier of the offer in which the terms are
            registered in the agreement token.

          o Status  The current status of the agreement. Values include ACTIVE
            , ARCHIVED , CANCELLED , EXPIRED , RENEWED , REPLACED , and TERMI-
            NATED .

          o BeforeEndTime  A date used to filter agreements with a date before
            the endTime of an agreement.

          o AfterEndTime  A date used to filter agreements with a  date  after
            the endTime of an agreement.

          o AgreementType   The  type  of agreement. Values include PurchaseA-
            greement or VendorInsightsAgreement .

          (structure)
              The filter name and value pair that is used  to  return  a  more
              specific  list of results. Filters can be used to match a set of
              resources by various criteria, such as offerId or productId .

              name -> (string)
                 The name of the filter.

              values -> (list)
                 The filter value.

                 (string)

       Shorthand Syntax:

          name=string,values=string,string ...

       JSON Syntax:

          [
            {
              "name": "string",
              "values": ["string", ...]
            }
            ...
          ]

       --max-results (integer)
          The maximum number of agreements to return in the response.

       --next-token (string)
          A token to specify where to start pagination.

       --sort (structure)
          An object that contains the SortBy and SortOrder attributes.

          sortBy -> (string)
              The attribute on which the data is  grouped,  which  can  be  by
              StartTime and EndTime . The default value is EndTime .

          sortOrder -> (string)
              The  sorting  order,  which can be ASCENDING or DESCENDING . The
              default value is DESCENDING .

       Shorthand Syntax:

          sortBy=string,sortOrder=string

       JSON Syntax:

          {
            "sortBy": "string",
            "sortOrder": "ASCENDING"|"DESCENDING"
          }

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       agreementViewSummaries -> (list)
          A  summary of the agreement, including top-level attributes (for ex-
          ample, the agreement ID, version, proposer, and acceptor).

          (structure)
              A summary of the agreement, including top-level attributes  (for
              example, the agreement ID, version, proposer, and acceptor).

              acceptanceTime -> (timestamp)
                 The date and time that the agreement was accepted.

              acceptor -> (structure)
                 Details  of  the party accepting the agreement terms. This is
                 commonly the buyer for PurchaseAgreement.

                 accountId -> (string)
                     The AWS account ID of the acceptor.

              agreementId -> (string)
                 The unique identifier of the agreement.

              agreementType -> (string)
                 The type of agreement. Values are PurchaseAgreement  or  Ven-
                 dorInsightsAgreement .

              endTime -> (timestamp)
                 The  date and time when the agreement ends. The field is null
                 for pay-as-you-go agreements, which dont have end dates.

              proposalSummary -> (structure)
                 A summary of the proposal

                 offerId -> (string)
                     The unique identifier of the offer in AWS Marketplace.

                 resources -> (list)
                     The list of resources involved in the agreement.

                     (structure)
                        The list of resources involved in the agreement.

                        id -> (string)
                            The unique identifier of the resource.

                            NOTE:
                               We mention the term  resource,  which  is  most
                               commonly  a  product, so a resourceId is also a
                               productId .

                        type -> (string)
                            Type of the resource, which is the product. Values
                            include SaaSProduct or AmiProduct .

              proposer -> (structure)
                 Details of the party proposing the agreement terms, most com-
                 monly the seller for PurchaseAgreement .

                 accountId -> (string)
                     The AWS account ID of the proposer.

              startTime -> (timestamp)
                 The date and time when the agreement starts.

              status -> (string)
                 The current status of the agreement.

       nextToken -> (string)
          The token used for pagination. The field is null  if  there  are  no
          more results.



                                                           SEARCH-AGREEMENTS()
