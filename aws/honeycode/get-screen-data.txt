GET-SCREEN-DATA()                                            GET-SCREEN-DATA()



NAME
       get-screen-data -

DESCRIPTION
       The  GetScreenData API allows retrieval of data from a screen in a Hon-
       eycode app. The API allows setting local variables  in  the  screen  to
       filter, sort or otherwise affect what will be displayed on the screen.

       See also: AWS API Documentation

SYNOPSIS
            get-screen-data
          --workbook-id <value>
          --app-id <value>
          --screen-id <value>
          [--variables <value>]
          [--max-results <value>]
          [--next-token <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --workbook-id (string)
          The ID of the workbook that contains the screen.

       --app-id (string)
          The ID of the app that contains the screen.

       --screen-id (string)
          The ID of the screen.

       --variables (map)
          Variables  are  optional  and are needed only if the screen requires
          them to render correctly. Variables are specified as a map where the
          key  is the name of the variable as defined on the screen. The value
          is an object which currently has only one property, rawValue,  which
          holds the value of the variable to be passed to the screen.

          key -> (string)

          value -> (structure)
              The input variables to the app to be used by the InvokeScreenAu-
              tomation action request.

              rawValue -> (string)
                 Raw value of the variable.

       Shorthand Syntax:

          KeyName1=rawValue=string,KeyName2=rawValue=string

       JSON Syntax:

          {"string": {
                "rawValue": "string"
              }
            ...}

       --max-results (integer)
          The number of results to be returned on a  single  page.  Specify  a
          number between 1 and 100. The maximum value is 100.

          This parameter is optional. If you don't specify this parameter, the
          default page size is 100.

       --next-token (string)
          This parameter is optional. If a nextToken is not specified, the API
          returns the first page of data.

          Pagination  tokens  expire after 1 hour. If you use a token that was
          returned more than an hour back, the API will throw ValidationExcep-
          tion.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       results -> (map)
          A map of all the rows on the screen keyed by block name.

          key -> (string)

          value -> (structure)
              ResultSet contains the results of the request for a single block
              or list defined on the screen.

              headers -> (list)
                 List  of  headers  for  all  the data cells in the block. The
                 header identifies the name and default  format  of  the  data
                 cell.  Data cells appear in the same order in all rows as de-
                 fined in the header. The names and formats are  not  repeated
                 in  the rows. If a particular row does not have a value for a
                 data cell, a blank value is used.

                 For example, a task list that displays  the  task  name,  due
                 date and assigned person might have headers [ { "name": "Task
                 Name"}, {"name": "Due Date", "format": "DATE"}, {"name": "As-
                 signed", "format": "CONTACT"} ]. Every row in the result will
                 have the task name as the first item, due date as the  second
                 item  and  assigned person as the third item. If a particular
                 task does not have a due date, that row  will  still  have  a
                 blank  value  in  the  second element and the assigned person
                 will still be in the third element.

                 (structure)
                     Metadata for column in the table.

                     name -> (string)
                        The name of the column.

                     format -> (string)
                        The format of the column.

              rows -> (list)
                 List of rows returned by the request. Each row has a  row  Id
                 and  a list of data cells in that row. The data cells will be
                 present in the same order as they are defined in the header.

                 (structure)
                     A single row in the ResultSet.

                     rowId -> (string)
                        The ID for a particular row.

                     dataItems -> (list)
                        List of all the data cells in a row.

                        (structure)
                            The data in a particular data cell defined on  the
                            screen.

                            overrideFormat -> (string)
                               The overrideFormat is optional and is specified
                               only if a particular row of data has a  differ-
                               ent format for the data than the default format
                               defined on the screen or the table.

                            rawValue -> (string)
                               The   raw   value    of    the    data.    e.g.
                               jsmith@example.com

                            formattedValue -> (string)
                               The  formatted  value  of  the  data. e.g. John
                               Smith.

       workbookCursor -> (long)
          Indicates the cursor of the workbook at which the data  returned  by
          this  workbook  is read. Workbook cursor keeps increasing with every
          update and the increments are not sequential.

       nextToken -> (string)
          Provides the pagination token to load the next  page  if  there  are
          more  results  matching  the  request.  If a pagination token is not
          present in the response, it means that all data matching  the  query
          has been loaded.



                                                             GET-SCREEN-DATA()
