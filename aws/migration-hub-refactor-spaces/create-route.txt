CREATE-ROUTE()                                                  CREATE-ROUTE()



NAME
       create-route -

DESCRIPTION
       Creates an Amazon Web Services Migration Hub Refactor Spaces route. The
       account owner of the service resource is always the environment  owner,
       regardless  of which account creates the route. Routes target a service
       in the application. If an application does not have  any  routes,  then
       the first route must be created as a DEFAULT  RouteType .

       When created, the default route defaults to an active state so state is
       not a required input. However, like all other state values the state of
       the  default  route  can  be  updated after creation, but only when all
       other routes are also inactive. Conversely,  no  route  can  be  active
       without the default route also being active.

       When  you  create  a  route,  Refactor Spaces configures the Amazon API
       Gateway to send traffic to the target service as follows:

       o URL Endpoints   If the service has a URL endpoint, and  the  endpoint
         resolves  to a private IP address, Refactor Spaces routes traffic us-
         ing the API Gateway VPC link. If a service  endpoint  resolves  to  a
         public IP address, Refactor Spaces routes traffic over the public in-
         ternet. Services can have HTTP or  HTTPS  URL  endpoints.  For  HTTPS
         URLs, publicly-signed certificates are supported. Private Certificate
         Authorities (CAs) are permitted only if the CA's domain is also  pub-
         licly  resolvable.  Refactor Spaces automatically resolves the public
         Domain Name System (DNS) names that are set in  CreateService:UrlEnd-
         point  when  you create a service. The DNS names resolve when the DNS
         time-to-live (TTL) expires, or every 60 seconds for TTLs less than 60
         seconds. This periodic DNS resolution ensures that the route configu-
         ration remains up-to-date.     One-time  health  check    A  one-time
         health check is performed on the service when either the route is up-
         dated from inactive to active, or when it is created with  an  active
         state.  If  the  health  check fails, the route transitions the route
         state   to   FAILED    ,    an    error    code    of    SERVICE_END-
         POINT_HEALTH_CHECK_FAILURE is provided, and no traffic is sent to the
         service. For private URLs, a target group is created on  the  Network
         Load  Balancer and the load balancer target group runs default target
         health checks. By default, the health check is run against  the  ser-
         vice  endpoint  URL.  Optionally,  the  health check can be performed
         against  a  different  protocol,  port,   and/or   path   using   the
         CreateService:UrlEndpoint  parameter. All other health check settings
         for the load balancer use the default values described in the  Health
         checks  for  your target groups in the Elastic Load Balancing guide .
         The health check is considered successful  if  at  least  one  target
         within the target group transitions to a healthy state.

       o Lambda  function  endpoints    If  the service has an Lambda function
         endpoint, then Refactor Spaces configures the Lambda  function's  re-
         source  policy  to  allow the application's API Gateway to invoke the
         function. The Lambda function state is checked. If  the  function  is
         not  active, the function configuration is updated so that Lambda re-
         sources are provisioned. If the Lambda state is  Failed  ,  then  the
         route    creation    fails.    For    more   information,   see   the
         GetFunctionConfiguration's State response parameter in the Lambda De-
         veloper Guide . A check is performed to determine that a Lambda func-
         tion with the specified ARN exists. If it does not exist, the  health
         check  fails.  For  public URLs, a connection is opened to the public
         endpoint. If the URL is not reachable, the health check fails.
          Environments without a network bridge

       When  you   create   environments   without   a   network   bridge   (-
       CreateEnvironment:NetworkFabricType  is NONE) and you use your own net-
       working infrastructure, you need to configure VPC to  VPC  connectivity
       between your network and the application proxy VPC. Route creation from
       the application proxy to service endpoints will fail if your network is
       not configured to connect to the application proxy VPC. For more infor-
       mation, see Create a route in the Refactor Spaces User Guide .

       See also: AWS API Documentation

SYNOPSIS
            create-route
          --application-identifier <value>
          [--client-token <value>]
          [--default-route <value>]
          --environment-identifier <value>
          --route-type <value>
          --service-identifier <value>
          [--tags <value>]
          [--uri-path-route <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --application-identifier (string)
          The ID of the application within which the route is being created.

       --client-token (string)
          A unique, case-sensitive identifier that you provide to  ensure  the
          idempotency of the request.

       --default-route (structure)
          Configuration for the default route type.

          ActivationState -> (string)
              If  set  to ACTIVE , traffic is forwarded to this routes service
              after the route is created.

       Shorthand Syntax:

          ActivationState=string

       JSON Syntax:

          {
            "ActivationState": "ACTIVE"|"INACTIVE"
          }

       --environment-identifier (string)
          The ID of the environment in which the route is created.

       --route-type (string)
          The route type of the route. DEFAULT indicates that all traffic that
          does  not match another route is forwarded to the default route. Ap-
          plications must have a default route before any other routes can  be
          created. URI_PATH indicates a route that is based on a URI path.

          Possible values:

          o DEFAULT

          o URI_PATH

       --service-identifier (string)
          The  ID  of  the service in which the route is created. Traffic that
          matches this route is forwarded to this service.

       --tags (map)
          The tags to assign to the route. A tag is a label that you assign to
          an  Amazon  Web  Services resource. Each tag consists of a key-value
          pair..

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --uri-path-route (structure)
          The configuration for the URI path route type.

          ActivationState -> (string)
              If set to ACTIVE , traffic is forwarded to this  routes  service
              after the route is created.

          AppendSourcePath -> (boolean)
              If set to true , this option appends the source path to the ser-
              vice URL endpoint.

          IncludeChildPaths -> (boolean)
              Indicates whether to match all  subpaths  of  the  given  source
              path.  If  this  value is false , requests must match the source
              path exactly before they are forwarded to this route's service.

          Methods -> (list)
              A list of HTTP methods to match. An empty list matches all  val-
              ues.  If  a  method  is  present,  only HTTP requests using that
              method are forwarded to this routes service.

              (string)

          SourcePath -> (string)
              This is the path that Refactor Spaces  uses  to  match  traffic.
              Paths  must start with / and are relative to the base of the ap-
              plication. To use path parameters in  the  source  path,  add  a
              variable  in curly braces. For example, the resource path {user}
              represents a path parameter called 'user'.

       Shorthand Syntax:

          ActivationState=string,AppendSourcePath=boolean,IncludeChildPaths=boolean,Methods=string,string,SourcePath=string

       JSON Syntax:

          {
            "ActivationState": "ACTIVE"|"INACTIVE",
            "AppendSourcePath": true|false,
            "IncludeChildPaths": true|false,
            "Methods": ["DELETE"|"GET"|"HEAD"|"OPTIONS"|"PATCH"|"POST"|"PUT", ...],
            "SourcePath": "string"
          }

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       ApplicationId -> (string)
          The ID of the application in which the route is created.

       Arn -> (string)
          The Amazon Resource Name (ARN) of the route. The format for this ARN
          is
          ``
          arn:aws:refactor-spaces:region     :account-id    :resource-type/re-
          source-id `` . For more information about ARNs, see Amazon  Resource
          Names (ARNs) in the Amazon Web Services General Reference .

          System Message: WARNING/2 (<string>:, line 396)
                 Inline literal start-string without end-string.

       CreatedByAccountId -> (string)
          The Amazon Web Services account ID of the route creator.

       CreatedTime -> (timestamp)
          A timestamp that indicates when the route is created.

       LastUpdatedTime -> (timestamp)
          A timestamp that indicates when the route was last updated.

       OwnerAccountId -> (string)
          The Amazon Web Services account ID of the route owner.

       RouteId -> (string)
          The unique identifier of the route.

       RouteType -> (string)
          The route type of the route.

       ServiceId -> (string)
          The  ID  of  service  in  which  the  route is created. Traffic that
          matches this route is forwarded to this service.

       State -> (string)
          The current state of the route. Activation state only allows  ACTIVE
          or  INACTIVE  as user inputs. FAILED is a route state that is system
          generated.

       Tags -> (map)
          The tags assigned to the created route. A tag is a  label  that  you
          assign  to  an  Amazon Web Services resource. Each tag consists of a
          key-value pair.

          key -> (string)

          value -> (string)

       UriPathRoute -> (structure)
          Configuration for the URI path route type.

          ActivationState -> (string)
              If set to ACTIVE , traffic is forwarded to this  routes  service
              after the route is created.

          AppendSourcePath -> (boolean)
              If set to true , this option appends the source path to the ser-
              vice URL endpoint.

          IncludeChildPaths -> (boolean)
              Indicates whether to match all  subpaths  of  the  given  source
              path.  If  this  value is false , requests must match the source
              path exactly before they are forwarded to this route's service.

          Methods -> (list)
              A list of HTTP methods to match. An empty list matches all  val-
              ues.  If  a  method  is  present,  only HTTP requests using that
              method are forwarded to this routes service.

              (string)

          SourcePath -> (string)
              This is the path that Refactor Spaces  uses  to  match  traffic.
              Paths  must start with / and are relative to the base of the ap-
              plication. To use path parameters in  the  source  path,  add  a
              variable  in curly braces. For example, the resource path {user}
              represents a path parameter called 'user'.



                                                                CREATE-ROUTE()
