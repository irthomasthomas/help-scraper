GET-DIMENSION-VALUES()                                  GET-DIMENSION-VALUES()



NAME
       get-dimension-values -

DESCRIPTION
       Retrieves all available filter values for a specified filter over a pe-
       riod of time. You can search the  dimension  values  for  an  arbitrary
       string.

       See also: AWS API Documentation

SYNOPSIS
            get-dimension-values
          [--search-string <value>]
          --time-period <value>
          --dimension <value>
          [--context <value>]
          [--filter <value>]
          [--sort-by <value>]
          [--max-results <value>]
          [--next-page-token <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --search-string (string)
          The value that you want to search the filter values for.

       --time-period (structure)
          The start date and end date for retrieving the dimension values. The
          start date is inclusive, but the end date is exclusive. For example,
          if start is 2017-01-01 and end is 2017-05-01 , then the cost and us-
          age data is retrieved from 2017-01-01 up to and including 2017-04-30
          but not including 2017-05-01 .

          Start -> (string)
              The  beginning  of the time period. The start date is inclusive.
              For example, if start is 2017-01-01 , Amazon  Web  Services  re-
              trieves cost and usage data starting at 2017-01-01 up to the end
              date. The start date must be equal to or no later than the  cur-
              rent date to avoid a validation error.

          End -> (string)
              The end of the time period. The end date is exclusive. For exam-
              ple, if end is 2017-05-01 , Amazon Web Services  retrieves  cost
              and  usage  data  from  the start date up to, but not including,
              2017-05-01 .

       Shorthand Syntax:

          Start=string,End=string

       JSON Syntax:

          {
            "Start": "string",
            "End": "string"
          }

       --dimension (string)
          The name of the dimension. Each Dimension is available for a differ-
          ent  Context . For more information, see Context . LINK_ACCOUNT_NAME
          and SERVICE_CODE can only be used in CostCategoryRule .

          Possible values:

          o AZ

          o INSTANCE_TYPE

          o LINKED_ACCOUNT

          o LINKED_ACCOUNT_NAME

          o OPERATION

          o PURCHASE_TYPE

          o REGION

          o SERVICE

          o SERVICE_CODE

          o USAGE_TYPE

          o USAGE_TYPE_GROUP

          o RECORD_TYPE

          o OPERATING_SYSTEM

          o TENANCY

          o SCOPE

          o PLATFORM

          o SUBSCRIPTION_ID

          o LEGAL_ENTITY_NAME

          o DEPLOYMENT_OPTION

          o DATABASE_ENGINE

          o CACHE_ENGINE

          o INSTANCE_TYPE_FAMILY

          o BILLING_ENTITY

          o RESERVATION_ID

          o RESOURCE_ID

          o RIGHTSIZING_TYPE

          o SAVINGS_PLANS_TYPE

          o SAVINGS_PLAN_ARN

          o PAYMENT_OPTION

          o AGREEMENT_END_DATE_TIME_AFTER

          o AGREEMENT_END_DATE_TIME_BEFORE

          o INVOICING_ENTITY

       --context (string)
          The context for the call to GetDimensionValues . This can be  RESER-
          VATIONS or COST_AND_USAGE . The default value is COST_AND_USAGE . If
          the context is set to RESERVATIONS , the resulting dimension  values
          can  be used in the GetReservationUtilization operation. If the con-
          text is set to COST_AND_USAGE , the resulting dimension  values  can
          be used in the GetCostAndUsage operation.

          If you set the context to COST_AND_USAGE , you can use the following
          dimensions for searching:

          o AZ - The Availability Zone. An example is us-east-1a .

          o BILLING_ENTITY - The Amazon Web Services seller that your  account
            is  with.  Possible  values  are  the following: - Amazon Web Ser-
            vices(Amazon Web Services): The entity that sells Amazon Web  Ser-
            vices. - AISPL (Amazon Internet Services Pvt. Ltd.): The local In-
            dian entity that's an acting reseller for Amazon Web  Services  in
            India. - Amazon Web Services Marketplace: The entity that supports
            the sale of solutions that are built on  Amazon  Web  Services  by
            third-party software providers.

          o CACHE_ENGINE  -  The Amazon ElastiCache operating system. Examples
            are Windows or Linux.

          o DEPLOYMENT_OPTION - The scope of Amazon Relational  Database  Ser-
            vice deployments. Valid values are SingleAZ and MultiAZ .

          o DATABASE_ENGINE - The Amazon Relational Database Service database.
            Examples are Aurora or MySQL.

          o INSTANCE_TYPE - The type of Amazon EC2  instance.  An  example  is
            m4.xlarge .

          o INSTANCE_TYPE_FAMILY - A family of instance types optimized to fit
            different use cases. Examples are Compute Optimized (for  example,
            C4  , C5 , C6g , and C7g ), Memory Optimization (for example, R4 ,
            R5n , R5b , and R6g ).

          o INVOICING_ENTITY - The name of the entity that issues  the  Amazon
            Web Services invoice.

          o LEGAL_ENTITY_NAME  -  The  name of the organization that sells you
            Amazon Web Services services, such as Amazon Web Services.

          o LINKED_ACCOUNT - The description in the  attribute  map  that  in-
            cludes  the  full name of the member account. The value field con-
            tains the Amazon Web Services ID of the member account.

          o OPERATING_SYSTEM - The operating system. Examples are  Windows  or
            Linux.

          o OPERATION - The action performed. Examples include RunInstance and
            CreateBucket .

          o PLATFORM - The Amazon EC2 operating system. Examples  are  Windows
            or Linux.

          o PURCHASE_TYPE - The reservation type of the purchase that this us-
            age is related to. Examples include On-Demand Instances and  Stan-
            dard Reserved Instances.

          o RESERVATION_ID  - The unique identifier for an Amazon Web Services
            Reservation Instance.

          o SAVINGS_PLAN_ARN - The unique identifier for your Savings Plans.

          o SAVINGS_PLANS_TYPE - Type of Savings Plans (EC2 Instance  or  Com-
            pute).

          o SERVICE - The Amazon Web Services service such as Amazon DynamoDB.

          o TENANCY  - The tenancy of a resource. Examples are shared or dedi-
            cated.

          o USAGE_TYPE  -  The  type  of  usage.  An  example  is   DataTrans-
            fer-In-Bytes.  The  response  for the GetDimensionValues operation
            includes a unit attribute. Examples include GB and Hrs.

          o USAGE_TYPE_GROUP - The grouping of common usage types. An  example
            is Amazon EC2: CloudWatch  Alarms. The response for this operation
            includes a unit attribute.

          o REGION - The Amazon Web Services Region.

          o RECORD_TYPE - The different types of charges such as Reserved  In-
            stance (RI) fees, usage costs, tax refunds, and credits.

          o RESOURCE_ID - The unique identifier of the resource. ResourceId is
            an opt-in feature only available for last 14 days for  EC2-Compute
            Service.

          If  you  set the context to RESERVATIONS , you can use the following
          dimensions for searching:

          o AZ - The Availability Zone. An example is us-east-1a .

          o CACHE_ENGINE - The Amazon ElastiCache operating  system.  Examples
            are Windows or Linux.

          o DEPLOYMENT_OPTION  -  The scope of Amazon Relational Database Ser-
            vice deployments. Valid values are SingleAZ and MultiAZ .

          o INSTANCE_TYPE - The type of Amazon EC2  instance.  An  example  is
            m4.xlarge .

          o LINKED_ACCOUNT  -  The  description  in the attribute map that in-
            cludes the full name of the member account. The value  field  con-
            tains the Amazon Web Services ID of the member account.

          o PLATFORM  -  The Amazon EC2 operating system. Examples are Windows
            or Linux.

          o REGION - The Amazon Web Services Region.

          o SCOPE (Utilization only) - The scope of a Reserved Instance  (RI).
            Values are regional or a single Availability Zone.

          o TAG (Coverage only) - The tags that are associated with a Reserved
            Instance (RI).

          o TENANCY - The tenancy of a resource. Examples are shared or  dedi-
            cated.

          If  you set the context to SAVINGS_PLANS , you can use the following
          dimensions for searching:

          o SAVINGS_PLANS_TYPE - Type of Savings Plans (EC2 Instance  or  Com-
            pute)

          o PAYMENT_OPTION  -  The  payment option for the given Savings Plans
            (for example, All Upfront)

          o REGION - The Amazon Web Services Region.

          o INSTANCE_TYPE_FAMILY - The family of instances (For example, m5 )

          o LINKED_ACCOUNT - The description in the  attribute  map  that  in-
            cludes  the  full name of the member account. The value field con-
            tains the Amazon Web Services ID of the member account.

          o SAVINGS_PLAN_ARN - The unique identifier for your Savings Plans.

          Possible values:

          o COST_AND_USAGE

          o RESERVATIONS

          o SAVINGS_PLANS

       --filter (structure)
          Use Expression to filter by cost or by usage.  There  are  two  pat-
          terns:

          o Simple  dimension values - You can set the dimension name and val-
            ues for the filters that you plan to use.  For  example,  you  can
            filter  for REGION==us-east-1 OR REGION==us-west-1 . For GetRight-
            sizingRecommendation , the Region is a full name (for example, RE-
            GION==US  East  (N.  Virginia) . The Expression example is as fol-
            lows:  { "Dimensions": { "Key": "REGION", "Values": [ "us-east-1",
            us-west-1  ]  } }   The list of dimension values are OR'd together
            to retrieve cost or usage data. You can create Expression and  Di-
            mensionValues  objects  using either with* methods or set* methods
            in multiple lines.

          o Compound dimension values with logical operations -  You  can  use
            multiple  Expression types and the logical operators AND/OR/NOT to
            create a list of one or more Expression objects.  By  doing  this,
            you can filter on more advanced options. For example, you can fil-
            ter on ((REGION == us-east-1 OR REGION == us-west-1) OR  (TAG.Type
            ==  Type1))  AND (USAGE_TYPE != DataTransfer) . The Expression for
            that is as follows:  { "And": [ {"Or": [ {"Dimensions":  {  "Key":
            "REGION",  "Values":  [  "us-east-1", "us-west-1" ] }}, {"Tags": {
            "Key": "TagName", "Values": ["Value1"] } }  ]},  {"Not":  {"Dimen-
            sions": { "Key": "USAGE_TYPE", "Values": ["DataTransfer"] }}} ] }

          NOTE:
                 Because  each Expression can have only one operator, the ser-
                 vice returns an error if more than one is specified. The fol-
                 lowing example shows an Expression object that creates an er-
                 ror.

              {  "And":  [  ...  ],  "DimensionValues":  {  "Dimension":  "US-
              AGE_TYPE", "Values": [ "DataTransfer" ] } }

          NOTE:
              For the GetRightsizingRecommendation action, a combination of OR
              and NOT isn't supported. OR isn't  supported  between  different
              dimensions,  or  dimensions  and tags. NOT operators aren't sup-
              ported. Dimensions are also limited to LINKED_ACCOUNT , REGION ,
              or RIGHTSIZING_TYPE .

              For the GetReservationPurchaseRecommendation action, only NOT is
              supported. AND and OR aren't supported. Dimensions  are  limited
              to LINKED_ACCOUNT .

          Or -> (list)
              Return results that match either Dimension object.

              (structure)
                 Use  Expression  to filter by cost or by usage. There are two
                 patterns:

                 o Simple dimension values - You can set  the  dimension  name
                   and  values for the filters that you plan to use. For exam-
                   ple,  you  can  filter   for   REGION==us-east-1   OR   RE-
                   GION==us-west-1  .  For  GetRightsizingRecommendation , the
                   Region is a full name (for  example,  REGION==US  East  (N.
                   Virginia)  .  The Expression example is as follows:  { "Di-
                   mensions": {  "Key":  "REGION",  "Values":  [  "us-east-1",
                   us-west-1 ] } }   The list of dimension values are OR'd to-
                   gether to retrieve cost or usage data. You can  create  Ex-
                   pression  and  DimensionValues  objects  using either with*
                   methods or set* methods in multiple lines.

                 o Compound dimension values with logical operations - You can
                   use  multiple  Expression  types  and the logical operators
                   AND/OR/NOT to create a list of one or more  Expression  ob-
                   jects.  By  doing this, you can filter on more advanced op-
                   tions. For example, you can filter on ((REGION == us-east-1
                   OR  REGION  ==  us-west-1) OR (TAG.Type == Type1)) AND (US-
                   AGE_TYPE != DataTransfer) . The Expression for that  is  as
                   follows:   { "And": [ {"Or": [ {"Dimensions": { "Key": "RE-
                   GION", "Values": [ "us-east-1", "us-west-1" ] }},  {"Tags":
                   {  "Key":  "TagName",  "Values": ["Value1"] } } ]}, {"Not":
                   {"Dimensions": {  "Key":  "USAGE_TYPE",  "Values":  ["Data-
                   Transfer"] }}} ] }

                 NOTE:
                        Because  each  Expression  can have only one operator,
                        the service returns an error if more than one is spec-
                        ified.  The  following example shows an Expression ob-
                        ject that creates an error.

                     { "And": [ ... ], "DimensionValues": { "Dimension":  "US-
                     AGE_TYPE", "Values": [ "DataTransfer" ] } }

                 NOTE:
                     For  the  GetRightsizingRecommendation action, a combina-
                     tion of OR and NOT isn't supported.  OR  isn't  supported
                     between different dimensions, or dimensions and tags. NOT
                     operators aren't supported. Dimensions are  also  limited
                     to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .

                     For the GetReservationPurchaseRecommendation action, only
                     NOT is supported. AND and OR aren't supported. Dimensions
                     are limited to LINKED_ACCOUNT .

                 Or -> (list)
                     Return results that match either Dimension object.

                     ( ... recursive ... )

                 And -> (list)
                     Return results that match both Dimension objects.

                     ( ... recursive ... )

                 ( ... recursive ... )Dimensions -> (structure)
                     The specific Dimension to use for Expression .

                     Key -> (string)
                        The  names  of  the metadata types that you can use to
                        filter and group your results. For example, AZ returns
                        a  list  of  Availability Zones. LINK_ACCOUNT_NAME and
                        SERVICE_CODE can only be used in CostCategoryRule .

                     Values -> (list)
                        The metadata values that you can  use  to  filter  and
                        group  your results. You can use GetDimensionValues to
                        find specific values.

                        (string)

                     MatchOptions -> (list)
                        The match options that you can use to filter your  re-
                        sults. MatchOptions is only applicable for actions re-
                        lated  to  Cost  Category.  The  default  values   for
                        MatchOptions are EQUALS and CASE_SENSITIVE .

                        (string)

                 Tags -> (structure)
                     The specific Tag to use for Expression .

                     Key -> (string)
                        The key for the tag.

                     Values -> (list)
                        The specific value of the tag.

                        (string)

                     MatchOptions -> (list)
                        The  match options that you can use to filter your re-
                        sults. MatchOptions is only applicable for actions re-
                        lated   to  Cost  Category.  The  default  values  for
                        MatchOptions are EQUALS and CASE_SENSITIVE .

                        (string)

                 CostCategories -> (structure)
                     The filter that's based on CostCategory values.

                     Key -> (string)
                        The unique name of the Cost Category.

                     Values -> (list)
                        The specific value of the Cost Category.

                        (string)

                     MatchOptions -> (list)
                        The match options that you can use to filter your  re-
                        sults. MatchOptions is only applicable for actions re-
                        lated  to  cost  category.  The  default  values   for
                        MatchOptions is EQUALS and CASE_SENSITIVE .

                        (string)

          And -> (list)
              Return results that match both Dimension objects.

              (structure)
                 Use  Expression  to filter by cost or by usage. There are two
                 patterns:

                 o Simple dimension values - You can set  the  dimension  name
                   and  values for the filters that you plan to use. For exam-
                   ple,  you  can  filter   for   REGION==us-east-1   OR   RE-
                   GION==us-west-1  .  For  GetRightsizingRecommendation , the
                   Region is a full name (for  example,  REGION==US  East  (N.
                   Virginia)  .  The Expression example is as follows:  { "Di-
                   mensions": {  "Key":  "REGION",  "Values":  [  "us-east-1",
                   us-west-1 ] } }   The list of dimension values are OR'd to-
                   gether to retrieve cost or usage data. You can  create  Ex-
                   pression  and  DimensionValues  objects  using either with*
                   methods or set* methods in multiple lines.

                 o Compound dimension values with logical operations - You can
                   use  multiple  Expression  types  and the logical operators
                   AND/OR/NOT to create a list of one or more  Expression  ob-
                   jects.  By  doing this, you can filter on more advanced op-
                   tions. For example, you can filter on ((REGION == us-east-1
                   OR  REGION  ==  us-west-1) OR (TAG.Type == Type1)) AND (US-
                   AGE_TYPE != DataTransfer) . The Expression for that  is  as
                   follows:   { "And": [ {"Or": [ {"Dimensions": { "Key": "RE-
                   GION", "Values": [ "us-east-1", "us-west-1" ] }},  {"Tags":
                   {  "Key":  "TagName",  "Values": ["Value1"] } } ]}, {"Not":
                   {"Dimensions": {  "Key":  "USAGE_TYPE",  "Values":  ["Data-
                   Transfer"] }}} ] }

                 NOTE:
                        Because  each  Expression  can have only one operator,
                        the service returns an error if more than one is spec-
                        ified.  The  following example shows an Expression ob-
                        ject that creates an error.

                     { "And": [ ... ], "DimensionValues": { "Dimension":  "US-
                     AGE_TYPE", "Values": [ "DataTransfer" ] } }

                 NOTE:
                     For  the  GetRightsizingRecommendation action, a combina-
                     tion of OR and NOT isn't supported.  OR  isn't  supported
                     between different dimensions, or dimensions and tags. NOT
                     operators aren't supported. Dimensions are  also  limited
                     to LINKED_ACCOUNT , REGION , or RIGHTSIZING_TYPE .

                     For the GetReservationPurchaseRecommendation action, only
                     NOT is supported. AND and OR aren't supported. Dimensions
                     are limited to LINKED_ACCOUNT .

                 Or -> (list)
                     Return results that match either Dimension object.

                     ( ... recursive ... )

                 And -> (list)
                     Return results that match both Dimension objects.

                     ( ... recursive ... )

                 ( ... recursive ... )Dimensions -> (structure)
                     The specific Dimension to use for Expression .

                     Key -> (string)
                        The  names  of  the metadata types that you can use to
                        filter and group your results. For example, AZ returns
                        a  list  of  Availability Zones. LINK_ACCOUNT_NAME and
                        SERVICE_CODE can only be used in CostCategoryRule .

                     Values -> (list)
                        The metadata values that you can  use  to  filter  and
                        group  your results. You can use GetDimensionValues to
                        find specific values.

                        (string)

                     MatchOptions -> (list)
                        The match options that you can use to filter your  re-
                        sults. MatchOptions is only applicable for actions re-
                        lated  to  Cost  Category.  The  default  values   for
                        MatchOptions are EQUALS and CASE_SENSITIVE .

                        (string)

                 Tags -> (structure)
                     The specific Tag to use for Expression .

                     Key -> (string)
                        The key for the tag.

                     Values -> (list)
                        The specific value of the tag.

                        (string)

                     MatchOptions -> (list)
                        The  match options that you can use to filter your re-
                        sults. MatchOptions is only applicable for actions re-
                        lated   to  Cost  Category.  The  default  values  for
                        MatchOptions are EQUALS and CASE_SENSITIVE .

                        (string)

                 CostCategories -> (structure)
                     The filter that's based on CostCategory values.

                     Key -> (string)
                        The unique name of the Cost Category.

                     Values -> (list)
                        The specific value of the Cost Category.

                        (string)

                     MatchOptions -> (list)
                        The match options that you can use to filter your  re-
                        sults. MatchOptions is only applicable for actions re-
                        lated  to  cost  category.  The  default  values   for
                        MatchOptions is EQUALS and CASE_SENSITIVE .

                        (string)

          Not -> (structure)
              Return results that don't match a Dimension object.

              Or -> (list)
                 Return results that match either Dimension object.

                 ( ... recursive ... )

              And -> (list)
                 Return results that match both Dimension objects.

                 ( ... recursive ... )

              ( ... recursive ... )Dimensions -> (structure)
                 The specific Dimension to use for Expression .

                 Key -> (string)
                     The  names of the metadata types that you can use to fil-
                     ter and group your results. For  example,  AZ  returns  a
                     list  of  Availability  Zones. LINK_ACCOUNT_NAME and SER-
                     VICE_CODE can only be used in CostCategoryRule .

                 Values -> (list)
                     The metadata values that you can use to filter and  group
                     your results. You can use GetDimensionValues to find spe-
                     cific values.

                     (string)

                 MatchOptions -> (list)
                     The match options that you can use  to  filter  your  re-
                     sults.  MatchOptions  is  only applicable for actions re-
                     lated to Cost Category. The default values  for  MatchOp-
                     tions are EQUALS and CASE_SENSITIVE .

                     (string)

              Tags -> (structure)
                 The specific Tag to use for Expression .

                 Key -> (string)
                     The key for the tag.

                 Values -> (list)
                     The specific value of the tag.

                     (string)

                 MatchOptions -> (list)
                     The  match  options  that  you can use to filter your re-
                     sults. MatchOptions is only applicable  for  actions  re-
                     lated  to  Cost Category. The default values for MatchOp-
                     tions are EQUALS and CASE_SENSITIVE .

                     (string)

              CostCategories -> (structure)
                 The filter that's based on CostCategory values.

                 Key -> (string)
                     The unique name of the Cost Category.

                 Values -> (list)
                     The specific value of the Cost Category.

                     (string)

                 MatchOptions -> (list)
                     The match options that you can use  to  filter  your  re-
                     sults.  MatchOptions  is  only applicable for actions re-
                     lated to cost category. The default values  for  MatchOp-
                     tions is EQUALS and CASE_SENSITIVE .

                     (string)

          Dimensions -> (structure)
              The specific Dimension to use for Expression .

              Key -> (string)
                 The  names  of  the metadata types that you can use to filter
                 and group your results. For example, AZ  returns  a  list  of
                 Availability  Zones.  LINK_ACCOUNT_NAME  and SERVICE_CODE can
                 only be used in CostCategoryRule .

              Values -> (list)
                 The metadata values that you can use to filter and group your
                 results. You can use GetDimensionValues to find specific val-
                 ues.

                 (string)

              MatchOptions -> (list)
                 The match options that you can use to  filter  your  results.
                 MatchOptions  is  only applicable for actions related to Cost
                 Category. The default values for MatchOptions are EQUALS  and
                 CASE_SENSITIVE .

                 (string)

          Tags -> (structure)
              The specific Tag to use for Expression .

              Key -> (string)
                 The key for the tag.

              Values -> (list)
                 The specific value of the tag.

                 (string)

              MatchOptions -> (list)
                 The  match  options  that you can use to filter your results.
                 MatchOptions is only applicable for actions related  to  Cost
                 Category.  The default values for MatchOptions are EQUALS and
                 CASE_SENSITIVE .

                 (string)

          CostCategories -> (structure)
              The filter that's based on CostCategory values.

              Key -> (string)
                 The unique name of the Cost Category.

              Values -> (list)
                 The specific value of the Cost Category.

                 (string)

              MatchOptions -> (list)
                 The match options that you can use to  filter  your  results.
                 MatchOptions  is  only applicable for actions related to cost
                 category. The default values for MatchOptions is  EQUALS  and
                 CASE_SENSITIVE .

                 (string)

       JSON Syntax:

          {
            "Or": [
              {
                "Or": [
                  { ... recursive ... }
                  ...
                ],
                "And": [
                  { ... recursive ... }
                  ...
                ],
                "Not": { ... recursive ... },
                "Dimensions": {
                  "Key": "AZ"|"INSTANCE_TYPE"|"LINKED_ACCOUNT"|"LINKED_ACCOUNT_NAME"|"OPERATION"|"PURCHASE_TYPE"|"REGION"|"SERVICE"|"SERVICE_CODE"|"USAGE_TYPE"|"USAGE_TYPE_GROUP"|"RECORD_TYPE"|"OPERATING_SYSTEM"|"TENANCY"|"SCOPE"|"PLATFORM"|"SUBSCRIPTION_ID"|"LEGAL_ENTITY_NAME"|"DEPLOYMENT_OPTION"|"DATABASE_ENGINE"|"CACHE_ENGINE"|"INSTANCE_TYPE_FAMILY"|"BILLING_ENTITY"|"RESERVATION_ID"|"RESOURCE_ID"|"RIGHTSIZING_TYPE"|"SAVINGS_PLANS_TYPE"|"SAVINGS_PLAN_ARN"|"PAYMENT_OPTION"|"AGREEMENT_END_DATE_TIME_AFTER"|"AGREEMENT_END_DATE_TIME_BEFORE"|"INVOICING_ENTITY",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                },
                "Tags": {
                  "Key": "string",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                },
                "CostCategories": {
                  "Key": "string",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                }
              }
              ...
            ],
            "And": [
              {
                "Or": [
                  { ... recursive ... }
                  ...
                ],
                "And": [
                  { ... recursive ... }
                  ...
                ],
                "Not": { ... recursive ... },
                "Dimensions": {
                  "Key": "AZ"|"INSTANCE_TYPE"|"LINKED_ACCOUNT"|"LINKED_ACCOUNT_NAME"|"OPERATION"|"PURCHASE_TYPE"|"REGION"|"SERVICE"|"SERVICE_CODE"|"USAGE_TYPE"|"USAGE_TYPE_GROUP"|"RECORD_TYPE"|"OPERATING_SYSTEM"|"TENANCY"|"SCOPE"|"PLATFORM"|"SUBSCRIPTION_ID"|"LEGAL_ENTITY_NAME"|"DEPLOYMENT_OPTION"|"DATABASE_ENGINE"|"CACHE_ENGINE"|"INSTANCE_TYPE_FAMILY"|"BILLING_ENTITY"|"RESERVATION_ID"|"RESOURCE_ID"|"RIGHTSIZING_TYPE"|"SAVINGS_PLANS_TYPE"|"SAVINGS_PLAN_ARN"|"PAYMENT_OPTION"|"AGREEMENT_END_DATE_TIME_AFTER"|"AGREEMENT_END_DATE_TIME_BEFORE"|"INVOICING_ENTITY",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                },
                "Tags": {
                  "Key": "string",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                },
                "CostCategories": {
                  "Key": "string",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
                }
              }
              ...
            ],
            "Not": {
              "Or": [
                { ... recursive ... }
                ...
              ],
              "And": [
                { ... recursive ... }
                ...
              ],
              "Not": { ... recursive ... },
              "Dimensions": {
                "Key": "AZ"|"INSTANCE_TYPE"|"LINKED_ACCOUNT"|"LINKED_ACCOUNT_NAME"|"OPERATION"|"PURCHASE_TYPE"|"REGION"|"SERVICE"|"SERVICE_CODE"|"USAGE_TYPE"|"USAGE_TYPE_GROUP"|"RECORD_TYPE"|"OPERATING_SYSTEM"|"TENANCY"|"SCOPE"|"PLATFORM"|"SUBSCRIPTION_ID"|"LEGAL_ENTITY_NAME"|"DEPLOYMENT_OPTION"|"DATABASE_ENGINE"|"CACHE_ENGINE"|"INSTANCE_TYPE_FAMILY"|"BILLING_ENTITY"|"RESERVATION_ID"|"RESOURCE_ID"|"RIGHTSIZING_TYPE"|"SAVINGS_PLANS_TYPE"|"SAVINGS_PLAN_ARN"|"PAYMENT_OPTION"|"AGREEMENT_END_DATE_TIME_AFTER"|"AGREEMENT_END_DATE_TIME_BEFORE"|"INVOICING_ENTITY",
                "Values": ["string", ...],
                "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
              },
              "Tags": {
                "Key": "string",
                "Values": ["string", ...],
                "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
              },
              "CostCategories": {
                "Key": "string",
                "Values": ["string", ...],
                "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
              }
            },
            "Dimensions": {
              "Key": "AZ"|"INSTANCE_TYPE"|"LINKED_ACCOUNT"|"LINKED_ACCOUNT_NAME"|"OPERATION"|"PURCHASE_TYPE"|"REGION"|"SERVICE"|"SERVICE_CODE"|"USAGE_TYPE"|"USAGE_TYPE_GROUP"|"RECORD_TYPE"|"OPERATING_SYSTEM"|"TENANCY"|"SCOPE"|"PLATFORM"|"SUBSCRIPTION_ID"|"LEGAL_ENTITY_NAME"|"DEPLOYMENT_OPTION"|"DATABASE_ENGINE"|"CACHE_ENGINE"|"INSTANCE_TYPE_FAMILY"|"BILLING_ENTITY"|"RESERVATION_ID"|"RESOURCE_ID"|"RIGHTSIZING_TYPE"|"SAVINGS_PLANS_TYPE"|"SAVINGS_PLAN_ARN"|"PAYMENT_OPTION"|"AGREEMENT_END_DATE_TIME_AFTER"|"AGREEMENT_END_DATE_TIME_BEFORE"|"INVOICING_ENTITY",
              "Values": ["string", ...],
              "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
            },
            "Tags": {
              "Key": "string",
              "Values": ["string", ...],
              "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
            },
            "CostCategories": {
              "Key": "string",
              "Values": ["string", ...],
              "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE", ...]
            }
          }

       --sort-by (list)
          The value that you want to sort the data by.

          The  key represents cost and usage metrics. The following values are
          supported:

          o BlendedCost

          o UnblendedCost

          o AmortizedCost

          o NetAmortizedCost

          o NetUnblendedCost

          o UsageQuantity

          o NormalizedUsageAmount

          The supported values for the SortOrder key are ASCENDING or DESCEND-
          ING .

          When   you   specify   a  SortBy  paramater,  the  context  must  be
          COST_AND_USAGE . Further, when  using  SortBy  ,  NextPageToken  and
          SearchString aren't supported.

          (structure)
              The details for how to sort the data.

              Key -> (string)
                 The key that's used to sort the data.

              SortOrder -> (string)
                 The order that's used to sort the data.

       Shorthand Syntax:

          Key=string,SortOrder=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "SortOrder": "ASCENDING"|"DESCENDING"
            }
            ...
          ]

       --max-results (integer)
          This  field is only used when SortBy is provided in the request. The
          maximum number of objects that are returned  for  this  request.  If
          MaxResults isn't specified with SortBy, the request returns 1000 re-
          sults as the default value for this parameter.

          For GetDimensionValues , MaxResults has an upper limit of 1000.

       --next-page-token (string)
          The token to retrieve the next set of results. Amazon  Web  Services
          provides  the  token when the response from a previous call has more
          results than the maximum page size.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To retrieve the tags for the dimension SERVICE, with a value of  "Elas-
       tic"

       This example retrieves the tags for the dimension SERVICE, with a value
       of "Elastic" for January 01 2017 through May 18 2017.

       Command:

          aws ce get-dimension-values --search-string Elastic --time-period Start=2017-01-01,End=2017-05-18 --dimension SERVICE

       Output:

          {
             "TotalSize": 6,
             "DimensionValues": [
                 {
                     "Attributes": {},
                     "Value": "Amazon ElastiCache"
                 },
                 {
                     "Attributes": {},
                     "Value": "EC2 - Other"
                 },
                 {
                     "Attributes": {},
                     "Value": "Amazon Elastic Compute Cloud - Compute"
                 },
                 {
                     "Attributes": {},
                     "Value": "Amazon Elastic Load Balancing"
                 },
                 {
                     "Attributes": {},
                     "Value": "Amazon Elastic MapReduce"
                 },
                 {
                     "Attributes": {},
                     "Value": "Amazon Elasticsearch Service"
                 }
             ],
             "ReturnSize": 6
          }

OUTPUT
       DimensionValues -> (list)
          The filters that you used to filter your  request.  Some  dimensions
          are available only for a specific context.

          If you set the context to COST_AND_USAGE , you can use the following
          dimensions for searching:

          o AZ - The Availability Zone. An example is us-east-1a .

          o DATABASE_ENGINE - The Amazon Relational Database Service database.
            Examples are Aurora or MySQL.

          o INSTANCE_TYPE  -  The  type  of Amazon EC2 instance. An example is
            m4.xlarge .

          o LEGAL_ENTITY_NAME - The name of the organization  that  sells  you
            Amazon Web Services services, such as Amazon Web Services.

          o LINKED_ACCOUNT  -  The  description  in the attribute map that in-
            cludes the full name of the member account. The value  field  con-
            tains the Amazon Web Services ID of the member account.

          o OPERATING_SYSTEM  -  The operating system. Examples are Windows or
            Linux.

          o OPERATION - The action performed. Examples include RunInstance and
            CreateBucket .

          o PLATFORM  -  The Amazon EC2 operating system. Examples are Windows
            or Linux.

          o PURCHASE_TYPE - The reservation type of the purchase to which this
            usage  is  related. Examples include On-Demand Instances and Stan-
            dard Reserved Instances.

          o SERVICE - The Amazon Web Services service such as Amazon DynamoDB.

          o USAGE_TYPE  -  The  type  of  usage.  An  example  is   DataTrans-
            fer-In-Bytes.  The  response  for the GetDimensionValues operation
            includes a unit attribute. Examples include GB and Hrs.

          o USAGE_TYPE_GROUP - The grouping of common usage types. An  example
            is Amazon EC2: CloudWatch  Alarms. The response for this operation
            includes a unit attribute.

          o RECORD_TYPE - The different types of charges such as RI fees,  us-
            age costs, tax refunds, and credits.

          o RESOURCE_ID - The unique identifier of the resource. ResourceId is
            an opt-in feature only available for last 14 days for  EC2-Compute
            Service. You can opt-in by enabling Hourly and Resource Level Data
            in Cost Management Console preferences.

          If you set the context to RESERVATIONS , you can use  the  following
          dimensions for searching:

          o AZ - The Availability Zone. An example is us-east-1a .

          o CACHE_ENGINE  -  The Amazon ElastiCache operating system. Examples
            are Windows or Linux.

          o DEPLOYMENT_OPTION - The scope of Amazon Relational  Database  Ser-
            vice deployments. Valid values are SingleAZ and MultiAZ .

          o INSTANCE_TYPE  -  The  type  of Amazon EC2 instance. An example is
            m4.xlarge .

          o LINKED_ACCOUNT - The description in the  attribute  map  that  in-
            cludes  the  full name of the member account. The value field con-
            tains the Amazon Web Services ID of the member account.

          o PLATFORM - The Amazon EC2 operating system. Examples  are  Windows
            or Linux.

          o REGION - The Amazon Web Services Region.

          o SCOPE  (Utilization only) - The scope of a Reserved Instance (RI).
            Values are regional or a single Availability Zone.

          o TAG (Coverage only) - The tags that are associated with a Reserved
            Instance (RI).

          o TENANCY  - The tenancy of a resource. Examples are shared or dedi-
            cated.

          If you set the context to SAVINGS_PLANS , you can use the  following
          dimensions for searching:

          o SAVINGS_PLANS_TYPE  -  Type of Savings Plans (EC2 Instance or Com-
            pute)

          o PAYMENT_OPTION - Payment option for the given Savings  Plans  (for
            example, All Upfront)

          o REGION - The Amazon Web Services Region.

          o INSTANCE_TYPE_FAMILY - The family of instances (For example, m5 )

          o LINKED_ACCOUNT  -  The  description  in the attribute map that in-
            cludes the full name of the member account. The value  field  con-
            tains the Amazon Web Services ID of the member account.

          o SAVINGS_PLAN_ARN - The unique identifier for your Savings Plan

          (structure)
              The  metadata  of a specific type that you can use to filter and
              group your results. You can use GetDimensionValues to find  spe-
              cific values.

              Value -> (string)
                 The value of a dimension with a specific attribute.

              Attributes -> (map)
                 The attribute that applies to a specific Dimension .

                 key -> (string)

                 value -> (string)

       ReturnSize -> (integer)
          The number of results that Amazon Web Services returned at one time.

       TotalSize -> (integer)
          The total number of search results.

       NextPageToken -> (string)
          The  token  for the next set of retrievable results. Amazon Web Ser-
          vices provides the token when the response from a previous call  has
          more results than the maximum page size.



                                                        GET-DIMENSION-VALUES()
