CREATE-COST-CATEGORY-DEFINITION()            CREATE-COST-CATEGORY-DEFINITION()



NAME
       create-cost-category-definition -

DESCRIPTION
       Creates a new Cost Category with the requested name and rules.

       See also: AWS API Documentation

SYNOPSIS
            create-cost-category-definition
          --name <value>
          [--effective-start <value>]
          --rule-version <value>
          --rules <value>
          [--default-value <value>]
          [--split-charge-rules <value>]
          [--resource-tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --name (string)
          The unique name of the Cost Category.

       --effective-start (string)
          The  Cost  Category's effective start date. It can only be a billing
          start date (first day of the month). If  the  date  isn't  provided,
          it's  the  first day of the current month. Dates can't be before the
          previous twelve months, or in the future.

       --rule-version (string)
          The rule schema version in this particular Cost Category.

          Possible values:

          o CostCategoryExpression.v1

       --rules (list)
          The Cost Category rules used to categorize costs. For more  informa-
          tion, see CostCategoryRule .

          (structure)
              Rules  are  processed in order. If there are multiple rules that
              match the line item, then the first rule to match is used to de-
              termine that Cost Category value.

              Value -> (string)
                 The default value for the cost category.

              Rule -> (structure)
                 An  Expression object used to categorize costs. This supports
                 dimensions, tags, and nested expressions. Currently the  only
                 dimensions  supported  are  LINKED_ACCOUNT  ,  SERVICE_CODE ,
                 RECORD_TYPE , LINKED_ACCOUNT_NAME , REGION , USAGE_TYPE , and
                 BILLING_ENTITY .
                     RECORD_TYPE  is  a dimension used for Cost Explorer APIs,
                     and is also supported for Cost Category expressions. This
                     dimension  uses  different  terms,  depending  on whether
                     you're using the console or API/JSON editor.  For  a  de-
                     tailed  comparison,  see  Term Comparisons in the Billing
                     and Cost Management User Guide .

                 Or -> (list)
                     Return results that match either Dimension object.

                     (structure)
                        Use Expression to  filter  in  various  Cost  Explorer
                        APIs.

                        Not  all  Expression  types are supported in each API.
                        Refer to the documentation for each  specific  API  to
                        see what is supported.

                        There are two patterns:

                        o Simple dimension values.

                          o There  are three types of simple dimension values:
                            CostCategories , Tags , and Dimensions .

                            o Specify the CostCategories  field  to  define  a
                              filter that acts on Cost Categories.

                            o Specify  the  Tags field to define a filter that
                              acts on Cost Allocation Tags.

                            o Specify the Dimensions field to define a  filter
                              that    acts    on    the    `   DimensionValues
                              https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_DimensionValues.html`__
                              .

                          o For  each  filter  type, you can set the dimension
                            name and values for the filters that you  plan  to
                            use.

                            o For    example,   you   can   filter   for   RE-
                              GION==us-east-1  OR  REGION==us-west-1   .   For
                              GetRightsizingRecommendation  ,  the Region is a
                              full name (for example, REGION==US East (N. Vir-
                              ginia) .

                            o The corresponding Expression for this example is
                              as follows: { "Dimensions": {  "Key":  "REGION",
                              "Values": [ "us-east-1", "us-west-1" ] } }

                            o As  shown  in the previous example, lists of di-
                              mension values are combined with OR when  apply-
                              ing the filter.

                          o You  can  also set different match options to fur-
                            ther control how the filter behaves. Not all  APIs
                            support  match options. Refer to the documentation
                            for each specific API to see what is supported.

                            o For example, you can filter for  linked  account
                              names that start with "a".

                            o The corresponding Expression for this example is
                              as follows: { "Dimensions": { "Key": "LINKED_AC-
                              COUNT_NAME",  "MatchOptions": [ "STARTS_WITH" ],
                              "Values": [ "a" ] } }

                        o Compound Expression types with logical operations.

                          o You can use multiple Expression types and the log-
                            ical  operators AND/OR/NOT to create a list of one
                            or more Expression objects. By doing this, you can
                            filter by more advanced options.

                          o For   example,  you  can  filter  by  ((REGION  ==
                            us-east-1 OR REGION == us-west-1) OR (TAG.Type  ==
                            Type1)) AND (USAGE_TYPE != DataTransfer) .

                          o The  corresponding  Expression for this example is
                            as follows: { "And": [ {"Or": [  {"Dimensions":  {
                            "Key":    "REGION",   "Values":   [   "us-east-1",
                            "us-west-1" ] }},  {"Tags":  {  "Key":  "TagName",
                            "Values":  ["Value1"]  }  }  ]},  {"Not": {"Dimen-
                            sions": { "Key": "USAGE_TYPE",  "Values":  ["Data-
                            Transfer"] }}} ] }

                        NOTE:
                            Because  each  Expression can have only one opera-
                            tor, the service returns an error if more than one
                            is  specified.  The following example shows an Ex-
                            pression object that creates an error: { "And":  [
                            ...  ], "Dimensions": { "Key": "USAGE_TYPE", "Val-
                            ues": [ "DataTransfer" ] } }

                            The following is an example of  the  corresponding
                            error  message:  "Expression  has  more  than  one
                            roots. Only one root operator is allowed for  each
                            expression:  And, Or, Not, Dimensions, Tags, Cost-
                            Categories"

                        NOTE:
                            For  the  GetRightsizingRecommendation  action,  a
                            combination  of  OR  and  NOT  isn't supported. OR
                            isn't supported between different  dimensions,  or
                            dimensions  and  tags.  NOT  operators aren't sup-
                            ported. Dimensions are also limited to  LINKED_AC-
                            COUNT , REGION , or RIGHTSIZING_TYPE .

                            For  the  GetReservationPurchaseRecommendation ac-
                            tion, only NOT is supported.  AND  and  OR  aren't
                            supported.  Dimensions  are  limited to LINKED_AC-
                            COUNT .

                        Or -> (list)
                            Return results that match either Dimension object.

                            ( ... recursive ... )

                        And -> (list)
                            Return results that match both Dimension objects.

                            ( ... recursive ... )

                        ( ... recursive ... )Dimensions -> (structure)
                            The specific Dimension to use for Expression .

                            Key -> (string)
                               The names of the metadata types  that  you  can
                               use to filter and group your results. For exam-
                               ple, AZ returns a list of Availability Zones.

                               Not all dimensions are supported in  each  API.
                               Refer  to  the  documentation for each specific
                               API to see what is supported.
                                   LINK_ACCOUNT_NAME and SERVICE_CODE can only
                                   be used in CostCategoryRule .

                                   ANOMALY_TOTAL_IMPACT_ABSOLUTE   and   ANOM-
                                   ALY_TOTAL_IMPACT_PERCENTAGE  can  only   be
                                   used in AnomalySubscriptions .

                            Values -> (list)
                               The  metadata values that you can use to filter
                               and group your results. You can  use  GetDimen-
                               sionValues to find specific values.

                               (string)

                            MatchOptions -> (list)
                               The  match  options  that you can use to filter
                               your results.
                                   MatchOptions is only applicable for actions
                                   related  to  Cost Category and Anomaly Sub-
                                   scriptions. Refer to the documentation  for
                                   each specific API to see what is supported.

                               The  default values for MatchOptions are EQUALS
                               and CASE_SENSITIVE .

                               (string)

                        Tags -> (structure)
                            The specific Tag to use for Expression .

                            Key -> (string)
                               The key for the tag.

                            Values -> (list)
                               The specific value of the tag.

                               (string)

                            MatchOptions -> (list)
                               The match options that you can  use  to  filter
                               your  results.  MatchOptions is only applicable
                               for actions related to Cost Category.  The  de-
                               fault  values  for  MatchOptions are EQUALS and
                               CASE_SENSITIVE .

                               (string)

                        CostCategories -> (structure)
                            The filter that's based on CostCategory values.

                            Key -> (string)
                               The unique name of the Cost Category.

                            Values -> (list)
                               The specific value of the Cost Category.

                               (string)

                            MatchOptions -> (list)
                               The match options that you can  use  to  filter
                               your  results.  MatchOptions is only applicable
                               for actions related to cost category.  The  de-
                               fault  values  for  MatchOptions  is EQUALS and
                               CASE_SENSITIVE .

                               (string)

                 And -> (list)
                     Return results that match both Dimension objects.

                     (structure)
                        Use Expression to  filter  in  various  Cost  Explorer
                        APIs.

                        Not  all  Expression  types are supported in each API.
                        Refer to the documentation for each  specific  API  to
                        see what is supported.

                        There are two patterns:

                        o Simple dimension values.

                          o There  are three types of simple dimension values:
                            CostCategories , Tags , and Dimensions .

                            o Specify the CostCategories  field  to  define  a
                              filter that acts on Cost Categories.

                            o Specify  the  Tags field to define a filter that
                              acts on Cost Allocation Tags.

                            o Specify the Dimensions field to define a  filter
                              that    acts    on    the    `   DimensionValues
                              https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_DimensionValues.html`__
                              .

                          o For  each  filter  type, you can set the dimension
                            name and values for the filters that you  plan  to
                            use.

                            o For    example,   you   can   filter   for   RE-
                              GION==us-east-1  OR  REGION==us-west-1   .   For
                              GetRightsizingRecommendation  ,  the Region is a
                              full name (for example, REGION==US East (N. Vir-
                              ginia) .

                            o The corresponding Expression for this example is
                              as follows: { "Dimensions": {  "Key":  "REGION",
                              "Values": [ "us-east-1", "us-west-1" ] } }

                            o As  shown  in the previous example, lists of di-
                              mension values are combined with OR when  apply-
                              ing the filter.

                          o You  can  also set different match options to fur-
                            ther control how the filter behaves. Not all  APIs
                            support  match options. Refer to the documentation
                            for each specific API to see what is supported.

                            o For example, you can filter for  linked  account
                              names that start with "a".

                            o The corresponding Expression for this example is
                              as follows: { "Dimensions": { "Key": "LINKED_AC-
                              COUNT_NAME",  "MatchOptions": [ "STARTS_WITH" ],
                              "Values": [ "a" ] } }

                        o Compound Expression types with logical operations.

                          o You can use multiple Expression types and the log-
                            ical  operators AND/OR/NOT to create a list of one
                            or more Expression objects. By doing this, you can
                            filter by more advanced options.

                          o For   example,  you  can  filter  by  ((REGION  ==
                            us-east-1 OR REGION == us-west-1) OR (TAG.Type  ==
                            Type1)) AND (USAGE_TYPE != DataTransfer) .

                          o The  corresponding  Expression for this example is
                            as follows: { "And": [ {"Or": [  {"Dimensions":  {
                            "Key":    "REGION",   "Values":   [   "us-east-1",
                            "us-west-1" ] }},  {"Tags":  {  "Key":  "TagName",
                            "Values":  ["Value1"]  }  }  ]},  {"Not": {"Dimen-
                            sions": { "Key": "USAGE_TYPE",  "Values":  ["Data-
                            Transfer"] }}} ] }

                        NOTE:
                            Because  each  Expression can have only one opera-
                            tor, the service returns an error if more than one
                            is  specified.  The following example shows an Ex-
                            pression object that creates an error: { "And":  [
                            ...  ], "Dimensions": { "Key": "USAGE_TYPE", "Val-
                            ues": [ "DataTransfer" ] } }

                            The following is an example of  the  corresponding
                            error  message:  "Expression  has  more  than  one
                            roots. Only one root operator is allowed for  each
                            expression:  And, Or, Not, Dimensions, Tags, Cost-
                            Categories"

                        NOTE:
                            For  the  GetRightsizingRecommendation  action,  a
                            combination  of  OR  and  NOT  isn't supported. OR
                            isn't supported between different  dimensions,  or
                            dimensions  and  tags.  NOT  operators aren't sup-
                            ported. Dimensions are also limited to  LINKED_AC-
                            COUNT , REGION , or RIGHTSIZING_TYPE .

                            For  the  GetReservationPurchaseRecommendation ac-
                            tion, only NOT is supported.  AND  and  OR  aren't
                            supported.  Dimensions  are  limited to LINKED_AC-
                            COUNT .

                        Or -> (list)
                            Return results that match either Dimension object.

                            ( ... recursive ... )

                        And -> (list)
                            Return results that match both Dimension objects.

                            ( ... recursive ... )

                        ( ... recursive ... )Dimensions -> (structure)
                            The specific Dimension to use for Expression .

                            Key -> (string)
                               The names of the metadata types  that  you  can
                               use to filter and group your results. For exam-
                               ple, AZ returns a list of Availability Zones.

                               Not all dimensions are supported in  each  API.
                               Refer  to  the  documentation for each specific
                               API to see what is supported.
                                   LINK_ACCOUNT_NAME and SERVICE_CODE can only
                                   be used in CostCategoryRule .

                                   ANOMALY_TOTAL_IMPACT_ABSOLUTE   and   ANOM-
                                   ALY_TOTAL_IMPACT_PERCENTAGE  can  only   be
                                   used in AnomalySubscriptions .

                            Values -> (list)
                               The  metadata values that you can use to filter
                               and group your results. You can  use  GetDimen-
                               sionValues to find specific values.

                               (string)

                            MatchOptions -> (list)
                               The  match  options  that you can use to filter
                               your results.
                                   MatchOptions is only applicable for actions
                                   related  to  Cost Category and Anomaly Sub-
                                   scriptions. Refer to the documentation  for
                                   each specific API to see what is supported.

                               The  default values for MatchOptions are EQUALS
                               and CASE_SENSITIVE .

                               (string)

                        Tags -> (structure)
                            The specific Tag to use for Expression .

                            Key -> (string)
                               The key for the tag.

                            Values -> (list)
                               The specific value of the tag.

                               (string)

                            MatchOptions -> (list)
                               The match options that you can  use  to  filter
                               your  results.  MatchOptions is only applicable
                               for actions related to Cost Category.  The  de-
                               fault  values  for  MatchOptions are EQUALS and
                               CASE_SENSITIVE .

                               (string)

                        CostCategories -> (structure)
                            The filter that's based on CostCategory values.

                            Key -> (string)
                               The unique name of the Cost Category.

                            Values -> (list)
                               The specific value of the Cost Category.

                               (string)

                            MatchOptions -> (list)
                               The match options that you can  use  to  filter
                               your  results.  MatchOptions is only applicable
                               for actions related to cost category.  The  de-
                               fault  values  for  MatchOptions  is EQUALS and
                               CASE_SENSITIVE .

                               (string)

                 Not -> (structure)
                     Return results that don't match a Dimension object.

                     Or -> (list)
                        Return results that match either Dimension object.

                        ( ... recursive ... )

                     And -> (list)
                        Return results that match both Dimension objects.

                        ( ... recursive ... )

                     ( ... recursive ... )Dimensions -> (structure)
                        The specific Dimension to use for Expression .

                        Key -> (string)
                            The names of the metadata types that you  can  use
                            to  filter and group your results. For example, AZ
                            returns a list of Availability Zones.

                            Not all dimensions are supported in each API.  Re-
                            fer  to the documentation for each specific API to
                            see what is supported.
                               LINK_ACCOUNT_NAME and SERVICE_CODE can only  be
                               used in CostCategoryRule .

                               ANOMALY_TOTAL_IMPACT_ABSOLUTE  and  ANOMALY_TO-
                               TAL_IMPACT_PERCENTAGE  can  only  be  used   in
                               AnomalySubscriptions .

                        Values -> (list)
                            The metadata values that you can use to filter and
                            group your results. You can use GetDimensionValues
                            to find specific values.

                            (string)

                        MatchOptions -> (list)
                            The  match options that you can use to filter your
                            results.
                               MatchOptions is only applicable for actions re-
                               lated  to  Cost  Category and Anomaly Subscrip-
                               tions. Refer to the documentation for each spe-
                               cific API to see what is supported.

                            The default values for MatchOptions are EQUALS and
                            CASE_SENSITIVE .

                            (string)

                     Tags -> (structure)
                        The specific Tag to use for Expression .

                        Key -> (string)
                            The key for the tag.

                        Values -> (list)
                            The specific value of the tag.

                            (string)

                        MatchOptions -> (list)
                            The match options that you can use to filter  your
                            results.  MatchOptions  is only applicable for ac-
                            tions related to Cost Category. The default values
                            for MatchOptions are EQUALS and CASE_SENSITIVE .

                            (string)

                     CostCategories -> (structure)
                        The filter that's based on CostCategory values.

                        Key -> (string)
                            The unique name of the Cost Category.

                        Values -> (list)
                            The specific value of the Cost Category.

                            (string)

                        MatchOptions -> (list)
                            The  match options that you can use to filter your
                            results. MatchOptions is only applicable  for  ac-
                            tions related to cost category. The default values
                            for MatchOptions is EQUALS and CASE_SENSITIVE .

                            (string)

                 Dimensions -> (structure)
                     The specific Dimension to use for Expression .

                     Key -> (string)
                        The names of the metadata types that you  can  use  to
                        filter and group your results. For example, AZ returns
                        a list of Availability Zones.

                        Not all dimensions are supported in each API. Refer to
                        the documentation for each specific API to see what is
                        supported.
                            LINK_ACCOUNT_NAME and  SERVICE_CODE  can  only  be
                            used in CostCategoryRule .

                            ANOMALY_TOTAL_IMPACT_ABSOLUTE    and   ANOMALY_TO-
                            TAL_IMPACT_PERCENTAGE  can   only   be   used   in
                            AnomalySubscriptions .

                     Values -> (list)
                        The  metadata  values  that  you can use to filter and
                        group your results. You can use GetDimensionValues  to
                        find specific values.

                        (string)

                     MatchOptions -> (list)
                        The  match options that you can use to filter your re-
                        sults.
                            MatchOptions is only applicable  for  actions  re-
                            lated  to Cost Category and Anomaly Subscriptions.
                            Refer to the documentation for each  specific  API
                            to see what is supported.

                        The  default  values  for  MatchOptions are EQUALS and
                        CASE_SENSITIVE .

                        (string)

                 Tags -> (structure)
                     The specific Tag to use for Expression .

                     Key -> (string)
                        The key for the tag.

                     Values -> (list)
                        The specific value of the tag.

                        (string)

                     MatchOptions -> (list)
                        The match options that you can use to filter your  re-
                        sults. MatchOptions is only applicable for actions re-
                        lated  to  Cost  Category.  The  default  values   for
                        MatchOptions are EQUALS and CASE_SENSITIVE .

                        (string)

                 CostCategories -> (structure)
                     The filter that's based on CostCategory values.

                     Key -> (string)
                        The unique name of the Cost Category.

                     Values -> (list)
                        The specific value of the Cost Category.

                        (string)

                     MatchOptions -> (list)
                        The  match options that you can use to filter your re-
                        sults. MatchOptions is only applicable for actions re-
                        lated   to  cost  category.  The  default  values  for
                        MatchOptions is EQUALS and CASE_SENSITIVE .

                        (string)

              InheritedValue -> (structure)
                 The value the line item is categorized as if  the  line  item
                 contains the matched dimension.

                 DimensionName -> (string)
                     The name of the dimension that's used to group costs.

                     If  you  specify  LINKED_ACCOUNT_NAME , the cost category
                     value is based on account name. If you specify TAG ,  the
                     cost  category  value is based on the value of the speci-
                     fied tag key.

                 DimensionKey -> (string)
                     The key to extract cost category values.

              Type -> (string)
                 You can define the CostCategoryRule rule type as either REGU-
                 LAR  or  INHERITED_VALUE . The INHERITED_VALUE rule type adds
                 the flexibility to define a rule  that  dynamically  inherits
                 the  cost  category  value.  This value is from the dimension
                 value that's defined by CostCategoryInheritedValueDimension .
                 For example, suppose that you want to costs to be dynamically
                 grouped based on the value of  a  specific  tag  key.  First,
                 choose  an inherited value rule type, and then choose the tag
                 dimension and specify the tag key to use.

       JSON Syntax:

          [
            {
              "Value": "string",
              "Rule": {
                "Or": [
                  {
                    "Or": [
                      { ... recursive ... }
                      ...
                    ],
                    "And": [
                      { ... recursive ... }
                      ...
                    ],
                    "Not": { ... recursive ... },
                    "Dimensions": {
                      "Key": "AZ"|"INSTANCE_TYPE"|"LINKED_ACCOUNT"|"LINKED_ACCOUNT_NAME"|"OPERATION"|"PURCHASE_TYPE"|"REGION"|"SERVICE"|"SERVICE_CODE"|"USAGE_TYPE"|"USAGE_TYPE_GROUP"|"RECORD_TYPE"|"OPERATING_SYSTEM"|"TENANCY"|"SCOPE"|"PLATFORM"|"SUBSCRIPTION_ID"|"LEGAL_ENTITY_NAME"|"DEPLOYMENT_OPTION"|"DATABASE_ENGINE"|"CACHE_ENGINE"|"INSTANCE_TYPE_FAMILY"|"BILLING_ENTITY"|"RESERVATION_ID"|"RESOURCE_ID"|"RIGHTSIZING_TYPE"|"SAVINGS_PLANS_TYPE"|"SAVINGS_PLAN_ARN"|"PAYMENT_OPTION"|"AGREEMENT_END_DATE_TIME_AFTER"|"AGREEMENT_END_DATE_TIME_BEFORE"|"INVOICING_ENTITY"|"ANOMALY_TOTAL_IMPACT_ABSOLUTE"|"ANOMALY_TOTAL_IMPACT_PERCENTAGE",
                      "Values": ["string", ...],
                      "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE"|"GREATER_THAN_OR_EQUAL", ...]
                    },
                    "Tags": {
                      "Key": "string",
                      "Values": ["string", ...],
                      "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE"|"GREATER_THAN_OR_EQUAL", ...]
                    },
                    "CostCategories": {
                      "Key": "string",
                      "Values": ["string", ...],
                      "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE"|"GREATER_THAN_OR_EQUAL", ...]
                    }
                  }
                  ...
                ],
                "And": [
                  {
                    "Or": [
                      { ... recursive ... }
                      ...
                    ],
                    "And": [
                      { ... recursive ... }
                      ...
                    ],
                    "Not": { ... recursive ... },
                    "Dimensions": {
                      "Key": "AZ"|"INSTANCE_TYPE"|"LINKED_ACCOUNT"|"LINKED_ACCOUNT_NAME"|"OPERATION"|"PURCHASE_TYPE"|"REGION"|"SERVICE"|"SERVICE_CODE"|"USAGE_TYPE"|"USAGE_TYPE_GROUP"|"RECORD_TYPE"|"OPERATING_SYSTEM"|"TENANCY"|"SCOPE"|"PLATFORM"|"SUBSCRIPTION_ID"|"LEGAL_ENTITY_NAME"|"DEPLOYMENT_OPTION"|"DATABASE_ENGINE"|"CACHE_ENGINE"|"INSTANCE_TYPE_FAMILY"|"BILLING_ENTITY"|"RESERVATION_ID"|"RESOURCE_ID"|"RIGHTSIZING_TYPE"|"SAVINGS_PLANS_TYPE"|"SAVINGS_PLAN_ARN"|"PAYMENT_OPTION"|"AGREEMENT_END_DATE_TIME_AFTER"|"AGREEMENT_END_DATE_TIME_BEFORE"|"INVOICING_ENTITY"|"ANOMALY_TOTAL_IMPACT_ABSOLUTE"|"ANOMALY_TOTAL_IMPACT_PERCENTAGE",
                      "Values": ["string", ...],
                      "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE"|"GREATER_THAN_OR_EQUAL", ...]
                    },
                    "Tags": {
                      "Key": "string",
                      "Values": ["string", ...],
                      "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE"|"GREATER_THAN_OR_EQUAL", ...]
                    },
                    "CostCategories": {
                      "Key": "string",
                      "Values": ["string", ...],
                      "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE"|"GREATER_THAN_OR_EQUAL", ...]
                    }
                  }
                  ...
                ],
                "Not": {
                  "Or": [
                    { ... recursive ... }
                    ...
                  ],
                  "And": [
                    { ... recursive ... }
                    ...
                  ],
                  "Not": { ... recursive ... },
                  "Dimensions": {
                    "Key": "AZ"|"INSTANCE_TYPE"|"LINKED_ACCOUNT"|"LINKED_ACCOUNT_NAME"|"OPERATION"|"PURCHASE_TYPE"|"REGION"|"SERVICE"|"SERVICE_CODE"|"USAGE_TYPE"|"USAGE_TYPE_GROUP"|"RECORD_TYPE"|"OPERATING_SYSTEM"|"TENANCY"|"SCOPE"|"PLATFORM"|"SUBSCRIPTION_ID"|"LEGAL_ENTITY_NAME"|"DEPLOYMENT_OPTION"|"DATABASE_ENGINE"|"CACHE_ENGINE"|"INSTANCE_TYPE_FAMILY"|"BILLING_ENTITY"|"RESERVATION_ID"|"RESOURCE_ID"|"RIGHTSIZING_TYPE"|"SAVINGS_PLANS_TYPE"|"SAVINGS_PLAN_ARN"|"PAYMENT_OPTION"|"AGREEMENT_END_DATE_TIME_AFTER"|"AGREEMENT_END_DATE_TIME_BEFORE"|"INVOICING_ENTITY"|"ANOMALY_TOTAL_IMPACT_ABSOLUTE"|"ANOMALY_TOTAL_IMPACT_PERCENTAGE",
                    "Values": ["string", ...],
                    "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE"|"GREATER_THAN_OR_EQUAL", ...]
                  },
                  "Tags": {
                    "Key": "string",
                    "Values": ["string", ...],
                    "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE"|"GREATER_THAN_OR_EQUAL", ...]
                  },
                  "CostCategories": {
                    "Key": "string",
                    "Values": ["string", ...],
                    "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE"|"GREATER_THAN_OR_EQUAL", ...]
                  }
                },
                "Dimensions": {
                  "Key": "AZ"|"INSTANCE_TYPE"|"LINKED_ACCOUNT"|"LINKED_ACCOUNT_NAME"|"OPERATION"|"PURCHASE_TYPE"|"REGION"|"SERVICE"|"SERVICE_CODE"|"USAGE_TYPE"|"USAGE_TYPE_GROUP"|"RECORD_TYPE"|"OPERATING_SYSTEM"|"TENANCY"|"SCOPE"|"PLATFORM"|"SUBSCRIPTION_ID"|"LEGAL_ENTITY_NAME"|"DEPLOYMENT_OPTION"|"DATABASE_ENGINE"|"CACHE_ENGINE"|"INSTANCE_TYPE_FAMILY"|"BILLING_ENTITY"|"RESERVATION_ID"|"RESOURCE_ID"|"RIGHTSIZING_TYPE"|"SAVINGS_PLANS_TYPE"|"SAVINGS_PLAN_ARN"|"PAYMENT_OPTION"|"AGREEMENT_END_DATE_TIME_AFTER"|"AGREEMENT_END_DATE_TIME_BEFORE"|"INVOICING_ENTITY"|"ANOMALY_TOTAL_IMPACT_ABSOLUTE"|"ANOMALY_TOTAL_IMPACT_PERCENTAGE",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE"|"GREATER_THAN_OR_EQUAL", ...]
                },
                "Tags": {
                  "Key": "string",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE"|"GREATER_THAN_OR_EQUAL", ...]
                },
                "CostCategories": {
                  "Key": "string",
                  "Values": ["string", ...],
                  "MatchOptions": ["EQUALS"|"ABSENT"|"STARTS_WITH"|"ENDS_WITH"|"CONTAINS"|"CASE_SENSITIVE"|"CASE_INSENSITIVE"|"GREATER_THAN_OR_EQUAL", ...]
                }
              },
              "InheritedValue": {
                "DimensionName": "LINKED_ACCOUNT_NAME"|"TAG",
                "DimensionKey": "string"
              },
              "Type": "REGULAR"|"INHERITED_VALUE"
            }
            ...
          ]

       --default-value (string)
          The default value for the cost category.

       --split-charge-rules (list)
          The split charge rules used to allocate your  charges  between  your
          Cost Category values.

          (structure)
              Use the split charge rule to split the cost of one Cost Category
              value across several other target values.

              Source -> (string)
                 The Cost Category value that you want to  split.  That  value
                 can't  be  used as a source or a target in other split charge
                 rules. To indicate uncategorized costs, you can use an  empty
                 string as the source.

              Targets -> (list)
                 The Cost Category values that you want to split costs across.
                 These values can't be used as a source in other split  charge
                 rules.

                 (string)

              Method -> (string)
                 The  method  that's  used  to define how to split your source
                 costs across your targets.
                     Proportional -  Allocates  charges  across  your  targets
                     based on the proportional weighted cost of each target.

                     Fixed  -  Allocates  charges across your targets based on
                     your defined allocation percentage.

                 >``Even`` - Allocates costs evenly across all targets.

              Parameters -> (list)
                 The parameters for a split charge method. This  is  only  re-
                 quired for the FIXED method.

                 (structure)
                     The parameters for a split charge method.

                     Type -> (string)
                        The parameter type.

                     Values -> (list)
                        The parameter values.

                        (string)

       JSON Syntax:

          [
            {
              "Source": "string",
              "Targets": ["string", ...],
              "Method": "FIXED"|"PROPORTIONAL"|"EVEN",
              "Parameters": [
                {
                  "Type": "ALLOCATION_PERCENTAGES",
                  "Values": ["string", ...]
                }
                ...
              ]
            }
            ...
          ]

       --resource-tags (list)
          An optional list of tags to associate with the specified ` CostCate-
          gory
          https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_CostCategory.html`__
          . You can use resource tags to control access to your cost  category
          using IAM policies.

          Each  tag consists of a key and a value, and each key must be unique
          for the resource. The following restrictions apply to resource tags:

          o Although the maximum number of array members is 200, you  can  as-
            sign  a maximum of 50 user-tags to one resource. The remaining are
            reserved for Amazon Web Services use

          o The maximum length of a key is 128 characters

          o The maximum length of a value is 256 characters

          o Keys and values can only contain alphanumeric characters,  spaces,
            and any of the following: _.:/=+@-

          o Keys and values are case sensitive

          o Keys  and  values  are  trimmed for any leading or trailing white-
            spaces

          o Dont use aws: as a prefix for your keys. This prefix  is  reserved
            for Amazon Web Services use

          (structure)
              The tag structure that contains a tag key and value.

              NOTE:
                 Tagging is supported only for the following Cost Explorer re-
                 source           types:           `            AnomalyMonitor
                 https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_AnomalyMonitor.html`__
                 ,                    `                    AnomalySubscription
                 https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_AnomalySubscription.html`__
                 ,                       `                        CostCategory
                 https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_CostCategory.html`__
                 .

              Key -> (string)
                 The key that's associated with the tag.

              Value -> (string)
                 The value that's associated with the tag.

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       CostCategoryArn -> (string)
          The unique identifier for your newly created Cost Category.

       EffectiveStart -> (string)
          The Cost Category's effective start date. It can only be  a  billing
          start date (first day of the month).



                                             CREATE-COST-CATEGORY-DEFINITION()
