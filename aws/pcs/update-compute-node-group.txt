UPDATE-COMPUTE-NODE-GROUP()                        UPDATE-COMPUTE-NODE-GROUP()



NAME
       update-compute-node-group -

DESCRIPTION
       Updates a compute node group. You can update many of the fields related
       to your compute node group including the configurations for networking,
       compute nodes, and settings specific to your scheduler (such as Slurm).

       See also: AWS API Documentation

SYNOPSIS
            update-compute-node-group
          --cluster-identifier <value>
          --compute-node-group-identifier <value>
          [--ami-id <value>]
          [--subnet-ids <value>]
          [--custom-launch-template <value>]
          [--purchase-option <value>]
          [--spot-options <value>]
          [--scaling-configuration <value>]
          [--iam-instance-profile-arn <value>]
          [--slurm-configuration <value>]
          [--client-token <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --cluster-identifier (string)
          The name or ID of the cluster of the compute node group.

       --compute-node-group-identifier (string)
          The name or ID of the compute node group.

       --ami-id (string)
          The  ID  of  the Amazon Machine Image (AMI) that Amazon Web Services
          PCS uses to launch instances. If not provided, Amazon  Web  Services
          PCS uses the AMI ID specified in the custom launch template.

       --subnet-ids (list)
          The  list  of subnet IDs where the compute node group provisions in-
          stances. The subnets must be in the same VPC as the cluster.

          (string)

       Syntax:

          "string" "string" ...

       --custom-launch-template (structure)
          An Amazon EC2 launch template Amazon Web Services PCS uses to launch
          compute nodes.

          id -> (string)
              The ID of the EC2 launch template to use to provision instances.

              Example: lt-xxxx

          version -> (string)
              The  version  of the EC2 launch template to use to provision in-
              stances.

       Shorthand Syntax:

          id=string,version=string

       JSON Syntax:

          {
            "id": "string",
            "version": "string"
          }

       --purchase-option (string)
          Specifies how EC2 instances are purchased on your behalf. Amazon Web
          Services  PCS supports On-Demand and Spot instances. For more infor-
          mation, see Instance purchasing options in the Amazon  Elastic  Com-
          pute  Cloud  User  Guide  . If you don't provide this option, it de-
          faults to On-Demand.

          Possible values:

          o ONDEMAND

          o SPOT

       --spot-options (structure)
          Additional configuration when you specify SPOT as the purchaseOption
          for the CreateComputeNodeGroup API action.

          allocationStrategy -> (string)
              The  Amazon EC2 allocation strategy Amazon Web Services PCS uses
              to provision EC2 instances. Amazon  Web  Services  PCS  supports
              lowest price , capacity optimized , and price capacity optimized
              . For more information, see Use allocation strategies to  deter-
              mine how EC2 Fleet or Spot Fleet fulfills Spot and On-Demand ca-
              pacity in the Amazon Elastic Compute Cloud User Guide .  If  you
              don't  provide  this option, it defaults to price capacity opti-
              mized .

       Shorthand Syntax:

          allocationStrategy=string

       JSON Syntax:

          {
            "allocationStrategy": "lowest-price"|"capacity-optimized"|"price-capacity-optimized"
          }

       --scaling-configuration (structure)
          Specifies the boundaries of the compute node group auto scaling.

          minInstanceCount -> (integer)
              The lower bound of the number of instances allowed in  the  com-
              pute fleet.

          maxInstanceCount -> (integer)
              The  upper  bound of the number of instances allowed in the com-
              pute fleet.

       Shorthand Syntax:

          minInstanceCount=integer,maxInstanceCount=integer

       JSON Syntax:

          {
            "minInstanceCount": integer,
            "maxInstanceCount": integer
          }

       --iam-instance-profile-arn (string)
          The Amazon Resource Name (ARN) of the IAM instance profile  used  to
          pass an IAM role when launching EC2 instances. The role contained in
          your instance profile must have pcs:RegisterComputeNodeGroupInstance
          permissions attached to provision instances correctly.

       --slurm-configuration (structure)
          Additional options related to the Slurm scheduler.

          slurmCustomSettings -> (list)
              Additional  Slurm-specific  configuration  that directly maps to
              Slurm settings.

              (structure)
                 Additional settings that directly map to Slurm settings.

                 parameterName -> (string)
                     Amazon Web Services PCS  supports  configuration  of  the
                     following       Slurm      parameters:      `      Prolog
                     https://slurm.schedmd.com/slurm.conf.html#OPT_Prolog_1`__
                     ,                         `                        Epilog
                     https://slurm.schedmd.com/slurm.conf.html#OPT_Epilog_1`__
                     ,           and           `          SelectTypeParameters
                     https://slurm.schedmd.com/slurm.conf.html#OPT_SelectTypeParameters`__
                     .

                 parameterValue -> (string)
                     The values for the configured Slurm settings.

       Shorthand Syntax:

          slurmCustomSettings=[{parameterName=string,parameterValue=string},{parameterName=string,parameterValue=string}]

       JSON Syntax:

          {
            "slurmCustomSettings": [
              {
                "parameterName": "string",
                "parameterValue": "string"
              }
              ...
            ]
          }

       --client-token (string)
          A  unique,  case-sensitive identifier that you provide to ensure the
          idempotency of the request. Idempotency ensures that an API  request
          completes only once. With an idempotent request, if the original re-
          quest completes successfully, the subsequent retries with  the  same
          client  token return the result from the original successful request
          and they have no additional effect. If you don't  specify  a  client
          token, the CLI and SDK automatically generate 1 for you.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       computeNodeGroup -> (structure)
          A compute node group associated with a cluster.

          name -> (string)
              The name that identifies the compute node group.

          id -> (string)
              The generated unique ID of the compute node group.

          arn -> (string)
              The unique Amazon Resource Name (ARN) of the compute node group.

          clusterId -> (string)
              The ID of the cluster of the compute node group.

          createdAt -> (timestamp)
              The date and time the resource was created.

          modifiedAt -> (timestamp)
              The date and time the resource was modified.

          status -> (string)
              The provisioning status of the compute node group.

              NOTE:
                 The provisioning status doesn't indicate the  overall  health
                 of the compute node group.

          amiId -> (string)
              The  ID  of  the Amazon Machine Image (AMI) that Amazon Web Ser-
              vices PCS uses to launch instances. If not provided, Amazon  Web
              Services PCS uses the AMI ID specified in the custom launch tem-
              plate.

          subnetIds -> (list)
              The list of subnet IDs where instances are  provisioned  by  the
              compute  node  group. The subnets must be in the same VPC as the
              cluster.

              (string)

          purchaseOption -> (string)
              Specifies how EC2 instances are purchased on your behalf. Amazon
              Web Services PCS supports On-Demand and Spot instances. For more
              information, see Instance purchasing options in the Amazon Elas-
              tic Compute Cloud User Guide . If you don't provide this option,
              it defaults to On-Demand.

          customLaunchTemplate -> (structure)
              An Amazon EC2 launch template Amazon Web Services  PCS  uses  to
              launch compute nodes.

              id -> (string)
                 The  ID  of  the  EC2 launch template to use to provision in-
                 stances.

                 Example: lt-xxxx

              version -> (string)
                 The version of the EC2 launch template to  use  to  provision
                 instances.

          iamInstanceProfileArn -> (string)
              The  Amazon Resource Name (ARN) of the IAM instance profile used
              to pass an IAM role when launching EC2 instances. The role  con-
              tained  in your instance profile must have pcs:RegisterComputeN-
              odeGroupInstance permissions  attached  to  provision  instances
              correctly.

          scalingConfiguration -> (structure)
              Specifies the boundaries of the compute node group auto scaling.

              minInstanceCount -> (integer)
                 The  lower  bound  of  the number of instances allowed in the
                 compute fleet.

              maxInstanceCount -> (integer)
                 The upper bound of the number of  instances  allowed  in  the
                 compute fleet.

          instanceConfigs -> (list)
              A  list  of EC2 instance configurations that Amazon Web Services
              PCS can provision in the compute node group.

              (structure)
                 An EC2 instance configuration Amazon Web Services PCS uses to
                 launch compute nodes.

                 instanceType -> (string)
                     The  EC2  instance  type that Amazon Web Services PCS can
                     provision in the compute node group.

                     Example: t2.xlarge

          spotOptions -> (structure)
              Additional configuration when  you  specify  SPOT  as  the  pur-
              chaseOption for the CreateComputeNodeGroup API action.

              allocationStrategy -> (string)
                 The  Amazon  EC2  allocation strategy Amazon Web Services PCS
                 uses to provision EC2 instances. Amazon Web Services PCS sup-
                 ports  lowest price , capacity optimized , and price capacity
                 optimized . For more information, see Use allocation  strate-
                 gies  to  determine how EC2 Fleet or Spot Fleet fulfills Spot
                 and On-Demand capacity in the Amazon  Elastic  Compute  Cloud
                 User Guide . If you don't provide this option, it defaults to
                 price capacity optimized .

          slurmConfiguration -> (structure)
              Additional options related to the Slurm scheduler.

              slurmCustomSettings -> (list)
                 Additional Slurm-specific configuration that directly maps to
                 Slurm settings.

                 (structure)
                     Additional settings that directly map to Slurm settings.

                     parameterName -> (string)
                        Amazon  Web Services PCS supports configuration of the
                        following     Slurm     parameters:      `      Prolog
                        https://slurm.schedmd.com/slurm.conf.html#OPT_Prolog_1`__
                        ,                       `                       Epilog
                        https://slurm.schedmd.com/slurm.conf.html#OPT_Epilog_1`__
                        ,         and          `          SelectTypeParameters
                        https://slurm.schedmd.com/slurm.conf.html#OPT_SelectTypeParameters`__
                        .

                     parameterValue -> (string)
                        The values for the configured Slurm settings.

          errorInfo -> (list)
              The list of errors that occurred during compute node group  pro-
              visioning.

              (structure)
                 An error that occurred during resource creation.

                 code -> (string)
                     The short-form error code.

                 message -> (string)
                     The detailed error information.



                                                   UPDATE-COMPUTE-NODE-GROUP()
