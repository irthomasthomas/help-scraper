GENERATE-DATA-KEY-WITHOUT-PLAINTEXT()    GENERATE-DATA-KEY-WITHOUT-PLAINTEXT()



NAME
       generate-data-key-without-plaintext -

DESCRIPTION
       Returns a unique symmetric data key for use outside of KMS. This opera-
       tion returns a data key that is encrypted under a symmetric  encryption
       KMS key that you specify. The bytes in the key are random; they are not
       related to the caller or to the KMS key.
          GenerateDataKeyWithoutPlaintext is identical to the  GenerateDataKey
          operation  except  that  it  does not return a plaintext copy of the
          data key.

       This operation is useful for systems that need to encrypt data at  some
       point, but not immediately. When you need to encrypt the data, you call
       the  Decrypt operation on the encrypted copy of the key.

       It's also useful in distributed systems with different levels of trust.
       For  example,  you might store encrypted data in containers. One compo-
       nent of your system creates new containers and stores an encrypted data
       key with each container. Then, a different component puts the data into
       the containers. That component first decrypts the data  key,  uses  the
       plaintext  data  key  to encrypt data, puts the encrypted data into the
       container, and then destroys the plaintext data key.  In  this  system,
       the component that creates the containers never sees the plaintext data
       key.

       To request an asymmetric data key pair, use the  GenerateDataKeyPair or
       GenerateDataKeyPairWithoutPlaintext operations.

       To  generate  a data key, you must specify the symmetric encryption KMS
       key that is used to encrypt the data key. You cannot use an  asymmetric
       KMS  key  or a key in a custom key store to generate a data key. To get
       the type of your KMS key, use the  DescribeKey operation.

       If the operation succeeds, you will find the encrypted copy of the data
       key in the CiphertextBlob field.

       You  can  use an optional encryption context to add additional security
       to the encryption operation. If you specify an EncryptionContext ,  you
       must specify the same encryption context (a case-sensitive exact match)
       when decrypting the encrypted data key. Otherwise, the request  to  de-
       crypt  fails with an InvalidCiphertextException . For more information,
       see Encryption Context in the Key Management Service Developer Guide .

       The KMS key that you use for this operation must be in a compatible key
       state.  For  details,  see Key states of KMS keys in the Key Management
       Service Developer Guide .
          Cross-account use : Yes. To perform this operation with a KMS key in
          a  different  Amazon  Web  Services  account, specify the key ARN or
          alias ARN in the value of the KeyId parameter.

          Required permissions : kms:GenerateDataKeyWithoutPlaintext (key pol-
          icy)

          Related operations:

       o Decrypt

       o Encrypt

       o GenerateDataKey

       o GenerateDataKeyPair

       o GenerateDataKeyPairWithoutPlaintext

       See also: AWS API Documentation

SYNOPSIS
            generate-data-key-without-plaintext
          --key-id <value>
          [--encryption-context <value>]
          [--key-spec <value>]
          [--number-of-bytes <value>]
          [--grant-tokens <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --key-id (string)
          Specifies  the  symmetric  encryption KMS key that encrypts the data
          key. You cannot specify an asymmetric KMS key or a KMS key in a cus-
          tom  key  store. To get the type and origin of your KMS key, use the
          DescribeKey operation.

          To specify a KMS key, use its key ID, key ARN, alias name, or  alias
          ARN.  When using an alias name, prefix it with "alias/" . To specify
          a KMS key in a different Amazon Web Services account, you  must  use
          the key ARN or alias ARN.

          For example:

          o Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab

          o Key                                                           ARN:
            arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab

          o Alias name: alias/ExampleAlias

          o Alias ARN: arn:aws:kms:us-east-2:111122223333:alias/ExampleAlias

          To  get  the key ID and key ARN for a KMS key, use  ListKeys or  De-
          scribeKey . To get the alias name and alias ARN, use  ListAliases .

       --encryption-context (map)
          Specifies the encryption context that will be used  when  encrypting
          the data key.

          An  encryption context is a collection of non-secret key-value pairs
          that represent additional authenticated data. When you  use  an  en-
          cryption  context to encrypt data, you must specify the same (an ex-
          act case-sensitive match) encryption context to decrypt the data. An
          encryption  context  is  supported only on operations with symmetric
          encryption KMS keys. On operations  with  symmetric  encryption  KMS
          keys,  an  encryption context is optional, but it is strongly recom-
          mended.

          For more information, see Encryption context in the  Key  Management
          Service Developer Guide .

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --key-spec (string)
          The  length  of the data key. Use AES_128 to generate a 128-bit sym-
          metric key, or AES_256 to generate a 256-bit symmetric key.

          Possible values:

          o AES_256

          o AES_128

       --number-of-bytes (integer)
          The length of the data key in bytes. For example, use the  value  64
          to  generate  a  512-bit data key (64 bytes is 512 bits). For common
          key lengths (128-bit and 256-bit symmetric keys), we recommend  that
          you use the KeySpec field instead of this one.

       --grant-tokens (list)
          A list of grant tokens.

          Use  a grant token when your permission to call this operation comes
          from a new grant that has not yet achieved  eventual  consistency  .
          For more information, see Grant token and Using a grant token in the
          Key Management Service Developer Guide .

          (string)

       Syntax:

          "string" "string" ...

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To generate a 256-bit symmetric data key without a plaintext key

       The following generate-data-key-without-plaintext example  requests  an
       encrypted  copy of a 256-bit symmetric data key for use outside of AWS.
       You can call AWS KMS to decrypt the data key when you are ready to  use
       it.

       To  request a 256-bit data key, use the key-spec parameter with a value
       of AES_256. To request a 128-bit data key, use the  key-spec  parameter
       with  a  value of AES_128. For all other data key lengths, use the num-
       ber-of-bytes parameter.

       The KMS key you specify must be a symmetric encryption  KMS  key,  that
       is, a KMS key with a key spec value of SYMMETRIC_DEFAULT.

          aws kms generate-data-key-without-plaintext \
              --key-id "arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab" \
              --key-spec AES_256

       Output:

          {
              "CiphertextBlob": "AQEDAHjRYf5WytIc0C857tFSnBaPn2F8DgfmThbJlGfR8P3WlwAAAH4wfAYJKoZIhvcNAQcGoG8wbQIBADBoBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDEFogL",
              "KeyId": "arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"
          }

       The  CiphertextBlob  (encrypted data key) is returned in base64-encoded
       format.

       For more information, see Data keys in the AWS Key  Management  Service
       Developer Guide.

OUTPUT
       CiphertextBlob -> (blob)
          The  encrypted data key. When you use the HTTP API or the Amazon Web
          Services CLI, the value is  Base64-encoded.  Otherwise,  it  is  not
          Base64-encoded.

       KeyId -> (string)
          The  Amazon  Resource  Name (key ARN ) of the KMS key that encrypted
          the data key.



                                         GENERATE-DATA-KEY-WITHOUT-PLAINTEXT()
