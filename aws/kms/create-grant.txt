CREATE-GRANT()                                                  CREATE-GRANT()



NAME
       create-grant -

DESCRIPTION
       Adds a grant to a KMS key.

       A  grant is a policy instrument that allows Amazon Web Services princi-
       pals to use KMS keys in cryptographic operations.  It  also  can  allow
       them  to  view  a KMS key ( DescribeKey ) and create and manage grants.
       When authorizing access to a KMS key, grants are considered along  with
       key policies and IAM policies. Grants are often used for temporary per-
       missions because you can create one, use its permissions, and delete it
       without changing your key policies or IAM policies.

       For detailed information about grants, including grant terminology, see
       Grants in KMS in the * Key Management Service Developer Guide *  .  For
       examples  of  working with grants in several programming languages, see
       Programming grants .

       The CreateGrant operation returns a GrantToken and a GrantId .

       o When you create, retire, or revoke a grant, there might  be  a  brief
         delay,  usually  less than five minutes, until the grant is available
         throughout KMS. This state is known as eventual  consistency  .  Once
         the  grant  has  achieved eventual consistency, the grantee principal
         can use the permissions in the grant without identifying  the  grant.
         However,  to  use  the  permissions in the grant immediately, use the
         GrantToken that CreateGrant returns. For details, see Using  a  grant
         token in the * Key Management Service Developer Guide * .

       o The  CreateGrant  operation  also returns a GrantId . You can use the
         GrantId and a key identifier to identify the grant  in  the   Retire-
         Grant  and   RevokeGrant  operations.  To  find the grant ID, use the
         ListGrants or  ListRetirableGrants operations.

       The KMS key that you use for this operation must be in a compatible key
       state.  For  details,  see Key states of KMS keys in the Key Management
       Service Developer Guide .
          Cross-account use : Yes. To perform this operation on a KMS key in a
          different  Amazon  Web  Services account, specify the key ARN in the
          value of the KeyId parameter.

          Required permissions : kms:CreateGrant (key policy)

          Related operations:

       o ListGrants

       o ListRetirableGrants

       o RetireGrant

       o RevokeGrant

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            create-grant
          --key-id <value>
          --grantee-principal <value>
          [--retiring-principal <value>]
          --operations <value>
          [--constraints <value>]
          [--grant-tokens <value>]
          [--name <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --key-id (string)
          Identifies the KMS key for the grant.  The  grant  gives  principals
          permission to use this KMS key.

          Specify  the  key ID or key ARN of the KMS key. To specify a KMS key
          in a different Amazon Web Services account, you  must  use  the  key
          ARN.

          For example:

          o Key ID: 1234abcd-12ab-34cd-56ef-1234567890ab

          o Key                                                           ARN:
            arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab

          To  get  the key ID and key ARN for a KMS key, use  ListKeys or  De-
          scribeKey .

       --grantee-principal (string)
          The identity that gets the permissions specified in the grant.

          To specify the principal, use the Amazon Resource Name (ARN)  of  an
          Amazon  Web Services principal. Valid Amazon Web Services principals
          include Amazon Web Services accounts (root), IAM users,  IAM  roles,
          federated  users,  and  assumed  role users. For examples of the ARN
          syntax to use for specifying a principal, see  Amazon  Web  Services
          Identity  and Access Management (IAM) in the Example ARNs section of
          the Amazon Web Services General Reference .

       --retiring-principal (string)
          The principal that has permission to use the  RetireGrant  operation
          to retire the grant.

          To  specify  the principal, use the Amazon Resource Name (ARN) of an
          Amazon Web Services principal. Valid Amazon Web Services  principals
          include  Amazon  Web  Services accounts (root), IAM users, federated
          users, and assumed role users. For examples of the ARN syntax to use
          for specifying a principal, see Amazon Web Services Identity and Ac-
          cess Management (IAM) in the Example ARNs section of the Amazon  Web
          Services General Reference .

          The  grant determines the retiring principal. Other principals might
          have permission to retire the grant or revoke  the  grant.  For  de-
          tails,  see  RevokeGrant and Retiring and revoking grants in the Key
          Management Service Developer Guide .

       --operations (list)
          A list of operations that the grant permits.

          This list must include only  operations  that  are  permitted  in  a
          grant. Also, the operation must be supported on the KMS key. For ex-
          ample, you cannot create a grant for a symmetric encryption KMS  key
          that  allows  the   Sign operation, or a grant for an asymmetric KMS
          key that allows the  GenerateDataKey operation. If you try, KMS  re-
          turns a ValidationError exception. For details, see Grant operations
          in the Key Management Service Developer Guide .

          (string)

       Syntax:

          "string" "string" ...

          Where valid values are:
            Decrypt
            Encrypt
            GenerateDataKey
            GenerateDataKeyWithoutPlaintext
            ReEncryptFrom
            ReEncryptTo
            Sign
            Verify
            GetPublicKey
            CreateGrant
            RetireGrant
            DescribeKey
            GenerateDataKeyPair
            GenerateDataKeyPairWithoutPlaintext
            GenerateMac
            VerifyMac

       --constraints (structure)
          Specifies a grant constraint.

          KMS supports the EncryptionContextEquals and EncryptionContextSubset
          grant constraints. Each constraint value can include up to 8 encryp-
          tion context pairs. The encryption context value in each  constraint
          cannot  exceed  384  characters.  For  information  about grant con-
          straints, see Using grant constraints in the Key Management  Service
          Developer Guide . For more information about encryption context, see
          Encryption context in the * Key Management Service Developer Guide *
          .

          The  encryption  context  grant constraints allow the permissions in
          the grant only when the encryption context in  the  request  matches
          (EncryptionContextEquals  )  or  includes (EncryptionContextSubset )
          the encryption context specified in this structure.

          The encryption context grant constraints are supported only on grant
          operations  that  include  an  EncryptionContext  parameter, such as
          cryptographic operations on symmetric encryption  KMS  keys.  Grants
          with grant constraints can include the  DescribeKey and  RetireGrant
          operations, but the constraint doesn't apply to these operations. If
          a  grant with a grant constraint includes the CreateGrant operation,
          the constraint requires that any grants created with the CreateGrant
          permission  have  an  equally  strict or stricter encryption context
          constraint.

          You cannot use an encryption context grant  constraint  for  crypto-
          graphic  operations with asymmetric KMS keys or HMAC KMS keys. These
          keys don't support an encryption context.

          EncryptionContextSubset -> (map)
              A list of key-value pairs that must be included in  the  encryp-
              tion  context  of the cryptographic operation request. The grant
              allows the cryptographic operation only when the encryption con-
              text  in  the  request includes the key-value pairs specified in
              this constraint, although it can  include  additional  key-value
              pairs.

              key -> (string)

              value -> (string)

          EncryptionContextEquals -> (map)
              A list of key-value pairs that must match the encryption context
              in the cryptographic operation request. The grant allows the op-
              eration  only  when the encryption context in the request is the
              same as the encryption context specified in this constraint.

              key -> (string)

              value -> (string)

       Shorthand Syntax:

          EncryptionContextSubset={KeyName1=string,KeyName2=string},EncryptionContextEquals={KeyName1=string,KeyName2=string}

       JSON Syntax:

          {
            "EncryptionContextSubset": {"string": "string"
              ...},
            "EncryptionContextEquals": {"string": "string"
              ...}
          }

       --grant-tokens (list)
          A list of grant tokens.

          Use a grant token when your permission to call this operation  comes
          from  a  new  grant that has not yet achieved eventual consistency .
          For more information, see Grant token and Using a grant token in the
          Key Management Service Developer Guide .

          (string)

       Syntax:

          "string" "string" ...

       --name (string)
          A  friendly  name for the grant. Use this value to prevent the unin-
          tended creation of duplicate grants when retrying this request.

          When this value is absent, all CreateGrant requests result in a  new
          grant  with a unique GrantId even if all the supplied parameters are
          identical. This can result in unintended duplicates when  you  retry
          the CreateGrant request.

          When this value is present, you can retry a CreateGrant request with
          identical parameters; if the  grant  already  exists,  the  original
          GrantId  is returned without creating a new grant. Note that the re-
          turned grant token is unique with every  CreateGrant  request,  even
          when  a duplicate GrantId is returned. All grant tokens for the same
          grant ID can be used interchangeably.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To create a grant

       The  following create-grant example creates a grant that allows the ex-
       ampleUser   user    to    use    the    decrypt    command    on    the
       1234abcd-12ab-34cd-56ef-1234567890ab  example  KMS  key.  The  retiring
       principal is the adminRole role.  The  grant  uses  the  EncryptionCon-
       textSubset  grant constraint to allow this permission only when the en-
       cryption context in the decrypt request includes the "Department": "IT"
       key-value pair.

          aws kms create-grant \
              --key-id 1234abcd-12ab-34cd-56ef-1234567890ab \
              --grantee-principal arn:aws:iam::123456789012:user/exampleUser \
              --operations Decrypt \
              --constraints EncryptionContextSubset={Department=IT} \
              --retiring-principal arn:aws:iam::123456789012:role/adminRole

       Output:

          {
              "GrantId": "1a2b3c4d2f5e69f440bae30eaec9570bb1fb7358824f9ddfa1aa5a0dab1a59b2",
              "GrantToken": "<grant token here>"
          }

       To  view detailed information about the grant, use the list-grants com-
       mand.

       For more information, see Grants in AWS KMS in the AWS  Key  Management
       Service Developer Guide.

OUTPUT
       GrantToken -> (string)
          The grant token.

          Use  a grant token when your permission to call this operation comes
          from a new grant that has not yet achieved  eventual  consistency  .
          For more information, see Grant token and Using a grant token in the
          Key Management Service Developer Guide .

       GrantId -> (string)
          The unique identifier for the grant.

          You can use the GrantId in a  ListGrants ,  RetireGrant  ,  or   Re-
          vokeGrant operation.



                                                                CREATE-GRANT()
