CONNECT-CUSTOM-KEY-STORE()                          CONNECT-CUSTOM-KEY-STORE()



NAME
       connect-custom-key-store -

DESCRIPTION
       Connects or reconnects a custom key store to its backing key store. For
       an CloudHSM key store, ConnectCustomKeyStore connects the key store  to
       its associated CloudHSM cluster. For an external key store, ConnectCus-
       tomKeyStore connects the key store to the external key store proxy that
       communicates with your external key manager.

       The  custom  key store must be connected before you can create KMS keys
       in the key store or use the KMS keys it contains.  You  can  disconnect
       and reconnect a custom key store at any time.

       The  connection  process  for  a  custom key store can take an extended
       amount of time  to  complete.  This  operation  starts  the  connection
       process,  but  it  does  not wait for it to complete. When it succeeds,
       this operation quickly returns an HTTP 200 response and a  JSON  object
       with  no  properties. However, this response does not indicate that the
       custom key store is connected. To get the connection state of the  cus-
       tom key store, use the  DescribeCustomKeyStores operation.

       This  operation  is part of the custom key stores feature in KMS, which
       combines the convenience and extensive integration of KMS with the iso-
       lation and control of a key store that you own and manage.

       The  ConnectCustomKeyStore operation might fail for various reasons. To
       find the reason, use the  DescribeCustomKeyStores operation and see the
       ConnectionErrorCode  in the response. For help interpreting the Connec-
       tionErrorCode , see  CustomKeyStoresListEntry .

       To fix the failure, use the  DisconnectCustomKeyStore operation to dis-
       connect  the  custom  key store, correct the error, use the  UpdateCus-
       tomKeyStore operation if necessary, and then use  ConnectCustomKeyStore
       again.
          CloudHSM key store

       During  the connection process for an CloudHSM key store, KMS finds the
       CloudHSM cluster that is associated with the custom key store,  creates
       the  connection  infrastructure, connects to the cluster, logs into the
       CloudHSM client as the kmsuser CU, and rotates its password.

       To connect an CloudHSM key store, its associated CloudHSM cluster  must
       have  at  least  one  active HSM. To get the number of active HSMs in a
       cluster, use the DescribeClusters operation. To add HSMs to  the  clus-
       ter,  use  the  CreateHsm operation. Also, the ` kmsuser crypto user <-
       https://docs.aws.amazon.com/kms/latest/developerguide/key-store-con-
       cepts.html#concept-kmsuser>`__  (CU)  must not be logged into the clus-
       ter. This prevents KMS from using this account to log in.

       If you are having trouble connecting or disconnecting  a  CloudHSM  key
       store,  see Troubleshooting an CloudHSM key store in the Key Management
       Service Developer Guide .
          External key store

       When you connect an external key store that uses public  endpoint  con-
       nectivity,  KMS tests its ability to communicate with your external key
       manager by sending a request via the external key store proxy.

       When you connect to an external key store that uses VPC  endpoint  ser-
       vice  connectivity,  KMS  establishes  the  networking elements that it
       needs to communicate with your external key manager  via  the  external
       key  store  proxy.  This includes creating an interface endpoint to the
       VPC endpoint service and a private hosted zone for traffic between  KMS
       and the VPC endpoint service.

       To  connect  an  external key store, KMS must be able to connect to the
       external key store proxy, the external key store proxy must be able  to
       communicate  with  your external key manager, and the external key man-
       ager must be available for cryptographic operations.

       If you are having trouble connecting or disconnecting an  external  key
       store,  see Troubleshooting an external key store in the Key Management
       Service Developer Guide .
          Cross-account use : No. You cannot perform this operation on a  cus-
          tom key store in a different Amazon Web Services account.

          Required permissions : kms:ConnectCustomKeyStore (IAM policy)

          Related operations

       o CreateCustomKeyStore

       o DeleteCustomKeyStore

       o DescribeCustomKeyStores

       o DisconnectCustomKeyStore

       o UpdateCustomKeyStore
          Eventual  consistency  : The KMS API follows an eventual consistency
          model. For more information, see KMS eventual consistency .

       See also: AWS API Documentation

SYNOPSIS
            connect-custom-key-store
          --custom-key-store-id <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --custom-key-store-id (string)
          Enter the key store ID of the custom key store that you want to con-
          nect.  To  find  the ID of a custom key store, use the  DescribeCus-
          tomKeyStores operation.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To connect a custom key store

       The following connect-custom-key-store example reconnects the specified
       custom key store. You can use a command like this one to connect a cus-
       tom  key  store for the first time or to reconnect a key store that was
       disconnected.

       You can use this command to connect an AWS CloudHSM key store or an ex-
       ternal key store.

          aws kms connect-custom-key-store \
              --custom-key-store-id cks-1234567890abcdef0

       This command does not return any output. To verify that the command was
       effective, use the describe-custom-key-stores command.

       For information  about  connecting  an  AWS  CloudHSM  key  store,  see
       Connecting  and  disconnecting an AWS CloudHSM key store in the AWS Key
       Management Service Developer Guide.

       For information about connecting an external key store, see  Connecting
       and  disconnecting an external key store in the AWS Key Management Ser-
       vice Developer Guide.

OUTPUT
       None



                                                    CONNECT-CUSTOM-KEY-STORE()
