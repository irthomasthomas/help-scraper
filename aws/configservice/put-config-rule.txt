PUT-CONFIG-RULE()                                            PUT-CONFIG-RULE()



NAME
       put-config-rule -

DESCRIPTION
       Adds  or updates an Config rule to evaluate if your Amazon Web Services
       resources comply with your desired configurations. For  information  on
       how  many  Config  rules you can have per account, see ` Service Limits
       https://docs.aws.amazon.com/config/latest/developerguide/configlimits.html`__
       in the Config Developer Guide .

       There  are  two  types of rules: Config Managed Rules and Config Custom
       Rules . You can use PutConfigRule to create both Config  Managed  Rules
       and Config Custom Rules.

       Config Managed Rules are predefined, customizable rules created by Con-
       fig. For a list of managed rules, see List of Config Managed Rules . If
       you  are  adding  an  Config  managed rule, you must specify the rule's
       identifier for the SourceIdentifier key.

       Config Custom Rules are rules that you create from scratch.  There  are
       two  ways  to create Config custom rules: with Lambda functions (Lambda
       Developer Guide ) and with Guard (Guard GitHub  Repository  ),  a  pol-
       icy-as-code  language.  Config  custom  rules  created  with Lambda are
       called Config Custom Lambda Rules and Config custom rules created  with
       Guard are called Config Custom Policy Rules .

       If  you  are  adding a new Config Custom Lambda rule, you first need to
       create an Lambda function that the rule invokes to  evaluate  your  re-
       sources. When you use PutConfigRule to add a Custom Lambda rule to Con-
       fig, you must specify the Amazon Resource Name (ARN)  that  Lambda  as-
       signs to the function. You specify the ARN in the SourceIdentifier key.
       This key is part of the Source object, which is part of the  ConfigRule
       object.

       For any new Config rule that you add, specify the ConfigRuleName in the
       ConfigRule object. Do not specify the ConfigRuleArn or the ConfigRuleId
       . These values are generated by Config for new rules.

       If  you  are updating a rule that you added previously, you can specify
       the rule by ConfigRuleName , ConfigRuleId ,  or  ConfigRuleArn  in  the
       ConfigRule data type that you use in this request.

       For  more  information  about  developing  and  using Config rules, see
       Evaluating Resources with Config Rules in the Config Developer Guide .

       NOTE:
              Tags are added at creation and cannot be updated with this oper-
              ation

              PutConfigRule  is  an  idempotent  API. Subsequent requests wont
              create a duplicate resource if one was  already  created.  If  a
              following  request has different tags values, Config will ignore
              these differences and treat it as an idempotent request  of  the
              previous.  In  this case, tags will not be updated, even if they
              are different.

          Use TagResource and UntagResource to update tags after creation.

       See also: AWS API Documentation

SYNOPSIS
            put-config-rule
          --config-rule <value>
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --config-rule (structure)
          The rule that you want to add to your account.

          ConfigRuleName -> (string)
              The name that you assign to the Config rule.  The  name  is  re-
              quired if you are adding a new rule.

          ConfigRuleArn -> (string)
              The Amazon Resource Name (ARN) of the Config rule.

          ConfigRuleId -> (string)
              The ID of the Config rule.

          Description -> (string)
              The description that you provide for the Config rule.

          Scope -> (structure)
              Defines  which resources can trigger an evaluation for the rule.
              The scope can include one or more resource types, a  combination
              of  one resource type and one resource ID, or a combination of a
              tag key and value. Specify a scope to  constrain  the  resources
              that can trigger an evaluation for the rule. If you do not spec-
              ify a scope, evaluations are triggered when any resource in  the
              recording group changes.

              NOTE:
                 The scope can be empty.

              ComplianceResourceTypes -> (list)
                 The  resource  types  of  only  those Amazon Web Services re-
                 sources that you want to trigger an evaluation for the  rule.
                 You  can only specify one type if you also specify a resource
                 ID for ComplianceResourceId .

                 (string)

              TagKey -> (string)
                 The tag key that is applied to only those Amazon Web Services
                 resources  that  you  want  to  trigger an evaluation for the
                 rule.

              TagValue -> (string)
                 The tag value applied to only those Amazon Web  Services  re-
                 sources  that you want to trigger an evaluation for the rule.
                 If you specify a value for TagValue , you must also specify a
                 value for TagKey .

              ComplianceResourceId -> (string)
                 The ID of the only Amazon Web Services resource that you want
                 to trigger an evaluation for the rule. If you specify  a  re-
                 source  ID,  you  must  specify one resource type for Compli-
                 anceResourceTypes .

          Source -> (structure)
              Provides the rule owner (Amazon Web Services for managed  rules,
              CUSTOM_POLICY  for  Custom  Policy  rules, and CUSTOM_LAMBDA for
              Custom Lambda rules), the rule identifier, and the notifications
              that cause the function to evaluate your Amazon Web Services re-
              sources.

              Owner -> (string)
                 Indicates whether Amazon Web Services or  the  customer  owns
                 and manages the Config rule.

                 Config Managed Rules are predefined rules owned by Amazon Web
                 Services. For more information, see Config Managed  Rules  in
                 the Config developer guide .

                 Config  Custom  Rules  are  rules that you can develop either
                 with Guard (CUSTOM_POLICY ) or Lambda (CUSTOM_LAMBDA  ).  For
                 more  information,  see Config Custom Rules in the Config de-
                 veloper guide .

              SourceIdentifier -> (string)
                 For Config Managed rules,  a  predefined  identifier  from  a
                 list.  For example, IAM_PASSWORD_POLICY is a managed rule. To
                 reference a managed rule, see List of Config Managed Rules .

                 For Config Custom Lambda rules, the identifier is the  Amazon
                 Resource  Name  (ARN)  of the rule's Lambda function, such as
                 arn:aws:lambda:us-east-2:123456789012:function:cus-
                 tom_rule_name .

                 For Config Custom Policy rules, this field will be ignored.

              SourceDetails -> (list)
                 Provides  the  source and the message types that cause Config
                 to evaluate your Amazon  Web  Services  resources  against  a
                 rule. It also provides the frequency with which you want Con-
                 fig to run evaluations for the rule if the  trigger  type  is
                 periodic.

                 If  the  owner  is set to CUSTOM_POLICY , the only acceptable
                 values for the Config rule trigger message type are  Configu-
                 rationItemChangeNotification  and OversizedConfigurationItem-
                 ChangeNotification .

                 (structure)
                     Provides the source and the message  types  that  trigger
                     Config  to  evaluate  your  Amazon Web Services resources
                     against a rule. It also provides the frequency with which
                     you  want  Config  to run evaluations for the rule if the
                     trigger type is periodic. You can specify  the  parameter
                     values for SourceDetail only for custom rules.

                     EventSource -> (string)
                        The  source  of  the event, such as an Amazon Web Ser-
                        vices service, that triggers Config to  evaluate  your
                        Amazon Web Services resources.

                     MessageType -> (string)
                        The  type  of notification that triggers Config to run
                        an evaluation for a rule. You can specify the  follow-
                        ing notification types:

                        o ConfigurationItemChangeNotification  -  Triggers  an
                          evaluation when Config delivers a configuration item
                          as a result of a resource change.

                        o OversizedConfigurationItemChangeNotification - Trig-
                          gers an evaluation when Config delivers an oversized
                          configuration item. Config may generate this notifi-
                          cation type when a resource changes and the  notifi-
                          cation  exceeds  the  maximum size allowed by Amazon
                          SNS.

                        o ScheduledNotification - Triggers a periodic  evalua-
                          tion  at  the  frequency specified for MaximumExecu-
                          tionFrequency .

                        o ConfigurationSnapshotDeliveryCompleted - Triggers  a
                          periodic  evaluation when Config delivers a configu-
                          ration snapshot.

                        If you want your custom rule to be triggered  by  con-
                        figuration  changes, specify two SourceDetail objects,
                        one for  ConfigurationItemChangeNotification  and  one
                        for OversizedConfigurationItemChangeNotification .

                     MaximumExecutionFrequency -> (string)
                        The  frequency at which you want Config to run evalua-
                        tions for a custom rule with a  periodic  trigger.  If
                        you  specify  a  value for MaximumExecutionFrequency ,
                        then MessageType must  use  the  ScheduledNotification
                        value.

                        NOTE:
                            By  default,  rules  with  a  periodic trigger are
                            evaluated every 24 hours. To change the frequency,
                            specify a valid value for the MaximumExecutionFre-
                            quency parameter.

                            Based on the valid value you choose,  Config  runs
                            evaluations  once  for each valid value. For exam-
                            ple, if you choose Three_Hours , Config runs eval-
                            uations  once  every  three  hours.  In this case,
                            Three_Hours is the frequency of this rule.

              CustomPolicyDetails -> (structure)
                 Provides the runtime system, policy definition,  and  whether
                 debug  logging is enabled. Required when owner is set to CUS-
                 TOM_POLICY .

                 PolicyRuntime -> (string)
                     The runtime system for your Config  Custom  Policy  rule.
                     Guard  is  a  policy-as-code  language that allows you to
                     write policies that are enforced by Config Custom  Policy
                     rules.  For  more  information about Guard, see the Guard
                     GitHub Repository .

                 PolicyText -> (string)
                     The policy definition containing the logic for your  Con-
                     fig Custom Policy rule.

                 EnableDebugLogDelivery -> (boolean)
                     The  boolean  expression  for  enabling debug logging for
                     your Config Custom Policy  rule.  The  default  value  is
                     false .

          InputParameters -> (string)
              A  string,  in  JSON  format,  that is passed to the Config rule
              Lambda function.

          MaximumExecutionFrequency -> (string)
              The maximum frequency with which Config runs evaluations  for  a
              rule.  You  can  specify  a  value for MaximumExecutionFrequency
              when:

              o This is for an Config managed rule that is triggered at a  pe-
                riodic frequency.

              o Your custom rule is triggered when Config delivers the config-
                uration snapshot. For more information, see  ConfigSnapshotDe-
                liveryProperties .

              NOTE:
                 By default, rules with a periodic trigger are evaluated every
                 24 hours. To change the frequency, specify a valid value  for
                 the MaximumExecutionFrequency parameter.

          ConfigRuleState -> (string)
              Indicates  whether the Config rule is active or is currently be-
              ing deleted by Config. It can also indicate the evaluation  sta-
              tus for the Config rule.

              Config  sets the state of the rule to EVALUATING temporarily af-
              ter you use the StartConfigRulesEvaluation request  to  evaluate
              your resources against the Config rule.

              Config  sets the state of the rule to DELETING_RESULTS temporar-
              ily after you use the DeleteEvaluationResults request to  delete
              the current evaluation results for the Config rule.

              Config  temporarily  sets  the state of a rule to DELETING after
              you use the DeleteConfigRule request to delete the  rule.  After
              Config deletes the rule, the rule and all of its evaluations are
              erased and are no longer available.

          CreatedBy -> (string)
              Service principal name of the service that created the rule.

              NOTE:
                 The field is populated only if  the  service-linked  rule  is
                 created  by  a service. The field is empty if you create your
                 own rule.

          EvaluationModes -> (list)
              The modes the Config rule can be evaluated in. The valid  values
              are distinct objects. By default, the value is Detective evalua-
              tion mode only.

              (structure)
                 The configuration object for Config rule evaluation mode. The
                 supported valid values are Detective or Proactive.

                 Mode -> (string)
                     The mode of an evaluation. The valid values are Detective
                     or Proactive.

       JSON Syntax:

          {
            "ConfigRuleName": "string",
            "ConfigRuleArn": "string",
            "ConfigRuleId": "string",
            "Description": "string",
            "Scope": {
              "ComplianceResourceTypes": ["string", ...],
              "TagKey": "string",
              "TagValue": "string",
              "ComplianceResourceId": "string"
            },
            "Source": {
              "Owner": "CUSTOM_LAMBDA"|"AWS"|"CUSTOM_POLICY",
              "SourceIdentifier": "string",
              "SourceDetails": [
                {
                  "EventSource": "aws.config",
                  "MessageType": "ConfigurationItemChangeNotification"|"ConfigurationSnapshotDeliveryCompleted"|"ScheduledNotification"|"OversizedConfigurationItemChangeNotification",
                  "MaximumExecutionFrequency": "One_Hour"|"Three_Hours"|"Six_Hours"|"Twelve_Hours"|"TwentyFour_Hours"
                }
                ...
              ],
              "CustomPolicyDetails": {
                "PolicyRuntime": "string",
                "PolicyText": "string",
                "EnableDebugLogDelivery": true|false
              }
            },
            "InputParameters": "string",
            "MaximumExecutionFrequency": "One_Hour"|"Three_Hours"|"Six_Hours"|"Twelve_Hours"|"TwentyFour_Hours",
            "ConfigRuleState": "ACTIVE"|"DELETING"|"DELETING_RESULTS"|"EVALUATING",
            "CreatedBy": "string",
            "EvaluationModes": [
              {
                "Mode": "DETECTIVE"|"PROACTIVE"
              }
              ...
            ]
          }

       --tags (list)
          An array of tag object.

          (structure)
              The tags for the resource. The metadata that you apply to a  re-
              source  to  help you categorize and organize them. Each tag con-
              sists of a key and an optional value, both of which you  define.
              Tag  keys can have a maximum character length of 128 characters,
              and tag values can have a maximum length of 256 characters.

              Key -> (string)
                 One part of a key-value pair that make up a tag. A key  is  a
                 general label that acts like a category for more specific tag
                 values.

              Value -> (string)
                 The optional part of a key-value pair that make up a  tag.  A
                 value acts as a descriptor within a tag category (key).

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To add an AWS managed Config rule

       The following command provides JSON code to add an AWS  managed  Config
       rule:

          aws configservice put-config-rule --config-rule file://RequiredTagsForEC2Instances.json

       RequiredTagsForEC2Instances.json  is a JSON file that contains the rule
       configuration:

          {
            "ConfigRuleName": "RequiredTagsForEC2Instances",
            "Description": "Checks whether the CostCenter and Owner tags are applied to EC2 instances.",
            "Scope": {
              "ComplianceResourceTypes": [
                "AWS::EC2::Instance"
              ]
            },
            "Source": {
              "Owner": "AWS",
              "SourceIdentifier": "REQUIRED_TAGS"
            },
            "InputParameters": "{\"tag1Key\":\"CostCenter\",\"tag2Key\":\"Owner\"}"
          }

       For the ComplianceResourceTypes attribute, this JSON  code  limits  the
       scope  to  resources of the AWS::EC2::Instance type, so AWS Config will
       evaluate only EC2 instances against the rule. Because  the  rule  is  a
       managed  rule, the Owner attribute is set to AWS, and the SourceIdenti-
       fier attribute is set to the rule identifier,  REQUIRED_TAGS.  For  the
       InputParameters  attribute,  the tag keys that the rule requires, Cost-
       Center and Owner, are specified.

       If the command succeeds, AWS Config returns no output.  To  verify  the
       rule  configuration, run the describe-config-rules command, and specify
       the rule name.

       To add a customer managed Config rule

       The following command provides JSON code to add a customer managed Con-
       fig rule:

          aws configservice put-config-rule --config-rule file://InstanceTypesAreT2micro.json

       InstanceTypesAreT2micro.json is a JSON file that contains the rule con-
       figuration:

          {
            "ConfigRuleName": "InstanceTypesAreT2micro",
            "Description": "Evaluates whether EC2 instances are the t2.micro type.",
            "Scope": {
              "ComplianceResourceTypes": [
                "AWS::EC2::Instance"
              ]
            },
            "Source": {
              "Owner": "CUSTOM_LAMBDA",
              "SourceIdentifier": "arn:aws:lambda:us-east-1:123456789012:function:InstanceTypeCheck",
              "SourceDetails": [
                {
                  "EventSource": "aws.config",
                  "MessageType": "ConfigurationItemChangeNotification"
                }
              ]
            },
            "InputParameters": "{\"desiredInstanceType\":\"t2.micro\"}"
          }

       For the ComplianceResourceTypes attribute, this JSON  code  limits  the
       scope  to  resources of the AWS::EC2::Instance type, so AWS Config will
       evaluate only EC2 instances against the rule. Because this  rule  is  a
       customer managed rule, the Owner attribute is set to CUSTOM_LAMBDA, and
       the SourceIdentifier attribute is set to the  ARN  of  the  AWS  Lambda
       function. The SourceDetails object is required. The parameters that are
       specified for the InputParameters  attribute  are  passed  to  the  AWS
       Lambda  function  when  AWS  Config  invokes  it  to evaluate resources
       against the rule.

       If the command succeeds, AWS Config returns no output.  To  verify  the
       rule  configuration, run the describe-config-rules command, and specify
       the rule name.

OUTPUT
       None



                                                             PUT-CONFIG-RULE()
