DESCRIBE-AUTOMATION-STEP-EXECUTIONS()    DESCRIBE-AUTOMATION-STEP-EXECUTIONS()



NAME
       describe-automation-step-executions -

DESCRIPTION
       Information about all active and terminated step executions in an Auto-
       mation workflow.

       See also: AWS API Documentation

       describe-automation-step-executions is a paginated operation.  Multiple
       API calls may be issued in order to retrieve the entire data set of re-
       sults. You can disable pagination by providing the --no-paginate  argu-
       ment.  When using --output text and the --query argument on a paginated
       response, the --query argument must extract data from  the  results  of
       the following query expressions: StepExecutions

SYNOPSIS
            describe-automation-step-executions
          --automation-execution-id <value>
          [--filters <value>]
          [--reverse-order | --no-reverse-order]
          [--cli-input-json <value>]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --automation-execution-id (string)
          The  Automation  execution  ID for which you want step execution de-
          scriptions.

       --filters (list)
          One or more filters to limit the number of step executions  returned
          by the request.

          (structure)
              A  filter  to limit the amount of step execution information re-
              turned by the call.

              Key -> (string)
                 One or more keys to limit the results.

              Values -> (list)
                 The values of the filter key.

                 (string)

       Shorthand Syntax:

          Key=string,Values=string,string ...

       JSON Syntax:

          [
            {
              "Key": "StartTimeBefore"|"StartTimeAfter"|"StepExecutionStatus"|"StepExecutionId"|"StepName"|"Action"|"ParentStepExecutionId"|"ParentStepIteration"|"ParentStepIteratorValue",
              "Values": ["string", ...]
            }
            ...
          ]

       --reverse-order | --no-reverse-order (boolean)
          Indicates whether to list step executions in reverse order by  start
          time. The default value is 'false'.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --starting-token (string)
          A token to specify where to start paginating. This is the  NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The size of each page to get in the AWS service call. This does  not
          affect the number of items returned in the command's output. Setting
          a smaller page size results in more calls to the  AWS  service,  re-
          trieving  fewer  items  in  each call. This can help prevent the AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The  total number of items to return in the command's output. If the
          total number of items available is more than the value specified,  a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent  command. Do not use the NextToken response element directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       Example 1: To describe all steps for an automation execution

       The following describe-automation-step-executions example displays  de-
       tails about the steps of an Automation execution.

          aws ssm describe-automation-step-executions \
              --automation-execution-id 73c8eef8-f4ee-4a05-820c-e354fEXAMPLE

       Output:

          {
              "StepExecutions": [
                  {
                      "StepName": "startInstances",
                      "Action": "aws:changeInstanceState",
                      "ExecutionStartTime": 1583737234.134,
                      "ExecutionEndTime": 1583737234.672,
                      "StepStatus": "Success",
                      "Inputs": {
                          "DesiredState": "\"running\"",
                          "InstanceIds": "[\"i-0cb99161f6EXAMPLE\"]"
                      },
                      "Outputs": {
                          "InstanceStates": [
                              "running"
                          ]
                      },
                      "StepExecutionId": "95e70479-cf20-4d80-8018-7e4e2EXAMPLE",
                      "OverriddenParameters": {}
                  }
              ]
          }

       Example 2: To describe a specific step for an automation execution

       The  following describe-automation-step-executions example displays de-
       tails about a specific step of an Automation execution.

          aws ssm describe-automation-step-executions \
              --automation-execution-id 73c8eef8-f4ee-4a05-820c-e354fEXAMPLE \
              --filters Key=StepExecutionId,Values=95e70479-cf20-4d80-8018-7e4e2EXAMPLE

       For more information, see Running an Automation Workflow Step  by  Step
       (Command Line) in the AWS Systems Manager User Guide.

OUTPUT
       StepExecutions -> (list)
          A  list of details about the current state of all steps that make up
          an execution.

          (structure)
              Detailed information about an the execution state of an  Automa-
              tion step.

              StepName -> (string)
                 The name of this execution step.

              Action -> (string)
                 The  action this step performs. The action determines the be-
                 havior of the step.

              TimeoutSeconds -> (long)
                 The timeout seconds of the step.

              OnFailure -> (string)
                 The action to take if the step fails. The  default  value  is
                 Abort .

              MaxAttempts -> (integer)
                 The  maximum  number  of tries to run the action of the step.
                 The default value is 1 .

              ExecutionStartTime -> (timestamp)
                 If a step has begun execution, this  contains  the  time  the
                 step  started.  If  the step is in Pending status, this field
                 isn't populated.

              ExecutionEndTime -> (timestamp)
                 If a step has finished execution, this contains the time  the
                 execution ended. If the step hasn't yet concluded, this field
                 isn't populated.

              StepStatus -> (string)
                 The execution status for this step.

              ResponseCode -> (string)
                 The response code returned by the execution of the step.

              Inputs -> (map)
                 Fully-resolved values passed into the step before execution.

                 key -> (string)

                 value -> (string)

              Outputs -> (map)
                 Returned values from the execution of the step.

                 key -> (string)

                 value -> (list)
                     (string)

              Response -> (string)
                 A message associated with the response code for an execution.

              FailureMessage -> (string)
                 If a step failed, this message  explains  why  the  execution
                 failed.

              FailureDetails -> (structure)
                 Information about the Automation failure.

                 FailureStage -> (string)
                     The  stage  of  the Automation execution when the failure
                     occurred. The stages include the following:  InputValida-
                     tion, PreVerification, Invocation, PostVerification.

                 FailureType -> (string)
                     The type of Automation failure. Failure types include the
                     following: Action, Permission, Throttling,  Verification,
                     Internal.

                 Details -> (map)
                     Detailed information about the Automation step failure.

                     key -> (string)

                     value -> (list)
                        (string)

              StepExecutionId -> (string)
                 The unique ID of a step execution.

              OverriddenParameters -> (map)
                 A  user-specified list of parameters to override when running
                 a step.

                 key -> (string)

                 value -> (list)
                     (string)

              IsEnd -> (boolean)
                 The flag which can  be  used  to  end  automation  no  matter
                 whether the step succeeds or fails.

              NextStep -> (string)
                 The next step after the step succeeds.

              IsCritical -> (boolean)
                 The flag which can be used to help decide whether the failure
                 of current step leads to the Automation failure.

              ValidNextSteps -> (list)
                 Strategies used when step  fails,  we  support  Continue  and
                 Abort.  Abort  will  fail the automation when the step fails.
                 Continue will ignore the failure of current  step  and  allow
                 automation  to run the next step. With conditional branching,
                 we add step:stepName to support the automation to go  to  an-
                 other specific step.

                 (string)

              Targets -> (list)
                 The targets for the step execution.

                 (structure)
                     An  array  of  search criteria that targets managed nodes
                     using a key-value pair that you specify.

                     NOTE:
                        One or more targets must be specified for  maintenance
                        window  Run Command-type tasks. Depending on the task,
                        targets are optional for other maintenance window task
                        types  (Automation,  Lambda,  and Step Functions). For
                        more information about running tasks that don't  spec-
                        ify  targets, see Registering maintenance window tasks
                        without targets in the  Amazon  Web  Services  Systems
                        Manager User Guide .

                     Supported formats include the following.
                        For all Systems Manager capabilities:

                     o Key=tag-key,Values=tag-value-1,tag-value-2
                        For Automation and Change Manager:

                     o Key=tag:tag-key,Values=tag-value

                     o Key=ResourceGroup,Values=resource-group-name

                     o Key=ParameterValues,Values=value-1,value-2,value-3

                     o To  target all instances in the Amazon Web Services Re-
                       gion:

                       o Key=AWS::EC2::Instance,Values=*

                       o Key=InstanceIds,Values=*
                        For Run Command and Maintenance Windows:

                     o Key=InstanceIds,Values=instance-id-1,instance-id-2,in-
                       stance-id-3

                     o Key=tag:tag-key,Values=tag-value-1,tag-value-2

                     o Key=resource-groups:Name,Values=resource-group-name

                     o Additionally, Maintenance Windows support targeting re-
                       source types:

                       o Key=resource-groups:ResourceTypeFilters,Values=re-
                         source-type-1,resource-type-2
                        For State Manager:

                     o Key=InstanceIds,Values=instance-id-1,instance-id-2,in-
                       stance-id-3

                     o Key=tag:tag-key,Values=tag-value-1,tag-value-2

                     o To target all instances in the Amazon Web Services  Re-
                       gion:

                       o Key=InstanceIds,Values=*

                     For more information about how to send commands that tar-
                     get  managed  nodes  using  Key,Value   parameters,   see
                     Targeting  multiple  managed nodes in the Amazon Web Ser-
                     vices Systems Manager User Guide .

                     Key -> (string)
                        User-defined criteria for sending commands that target
                        managed nodes that meet the criteria.

                     Values -> (list)
                        User-defined  criteria that maps to Key . For example,
                        if you specified tag:ServerRole ,  you  could  specify
                        value:WebServer to run a command on instances that in-
                        clude EC2 tags of ServerRole,WebServer .

                        Depending on the type of target, the maximum number of
                        values  for a key might be lower than the global maxi-
                        mum of 50.

                        (string)

              TargetLocation -> (structure)
                 The combination of Amazon Web Services Regions and Amazon Web
                 Services  accounts  targeted by the current Automation execu-
                 tion.

                 Accounts -> (list)
                     The Amazon Web Services accounts targeted by the  current
                     Automation execution.

                     (string)

                 Regions -> (list)
                     The  Amazon  Web Services Regions targeted by the current
                     Automation execution.

                     (string)

                 TargetLocationMaxConcurrency -> (string)
                     The maximum number of Amazon  Web  Services  Regions  and
                     Amazon  Web  Services accounts allowed to run the Automa-
                     tion concurrently.

                 TargetLocationMaxErrors -> (string)
                     The maximum number of errors allowed  before  the  system
                     stops  queueing  additional Automation executions for the
                     currently running Automation.

                 ExecutionRoleName -> (string)
                     The Automation execution role used by the currently  run-
                     ning  Automation.  If not specified, the default value is
                     AWS-SystemsManager-AutomationExecutionRole .

                 TargetLocationAlarmConfiguration -> (structure)
                     The details for the CloudWatch alarm you want to apply to
                     an automation or command.

                     IgnorePollAlarmFailure -> (boolean)
                        When  this  value is true , your automation or command
                        continues to run in cases where we cant retrieve alarm
                        status  information from CloudWatch. In cases where we
                        successfully retrieve an alarm status of OK or  INSUF-
                        FICIENT_DATA,  the  automation or command continues to
                        run, regardless of this value. Default is false .

                     Alarms -> (list)
                        The name of the CloudWatch alarm specified in the con-
                        figuration.

                        (structure)
                            A  CloudWatch  alarm you apply to an automation or
                            command.

                            Name -> (string)
                               The name of your CloudWatch alarm.

                 IncludeChildOrganizationUnits -> (boolean)
                     Indicates whether to include child  organizational  units
                     (OUs)  that are children of the targeted OUs. The default
                     is false .

                 ExcludeAccounts -> (list)
                     Amazon Web Services accounts or organizational  units  to
                     exclude as expanded targets.

                     (string)

                 Targets -> (list)
                     A  list of key-value mappings to target resources. If you
                     specify values for this data type, you must also  specify
                     a value for TargetParameterName .

                     This Targets parameter takes precedence over the StartAu-
                     tomationExecution:Targets parameter if both are supplied.

                     (structure)
                        An array of search criteria that targets managed nodes
                        using a key-value pair that you specify.

                        NOTE:
                            One  or more targets must be specified for mainte-
                            nance window Run Command-type tasks. Depending  on
                            the  task,  targets are optional for other mainte-
                            nance window task types (Automation,  Lambda,  and
                            Step  Functions).  For more information about run-
                            ning  tasks  that  don't  specify   targets,   see
                            Registering  maintenance window tasks without tar-
                            gets in the Amazon Web  Services  Systems  Manager
                            User Guide .

                        Supported formats include the following.
                            For all Systems Manager capabilities:

                        o Key=tag-key,Values=tag-value-1,tag-value-2
                            For Automation and Change Manager:

                        o Key=tag:tag-key,Values=tag-value

                        o Key=ResourceGroup,Values=resource-group-name

                        o Key=ParameterValues,Values=value-1,value-2,value-3

                        o To  target  all instances in the Amazon Web Services
                          Region:

                          o Key=AWS::EC2::Instance,Values=*

                          o Key=InstanceIds,Values=*
                            For Run Command and Maintenance Windows:

                        o Key=InstanceIds,Values=instance-id-1,in-
                          stance-id-2,instance-id-3

                        o Key=tag:tag-key,Values=tag-value-1,tag-value-2

                        o Key=resource-groups:Name,Values=resource-group-name

                        o Additionally,  Maintenance Windows support targeting
                          resource types:

                          o Key=resource-groups:ResourceTypeFilters,Values=re-
                            source-type-1,resource-type-2
                            For State Manager:

                        o Key=InstanceIds,Values=instance-id-1,in-
                          stance-id-2,instance-id-3

                        o Key=tag:tag-key,Values=tag-value-1,tag-value-2

                        o To target all instances in the Amazon  Web  Services
                          Region:

                          o Key=InstanceIds,Values=*

                        For  more  information about how to send commands that
                        target managed nodes using Key,Value  parameters,  see
                        Targeting  multiple  managed  nodes  in the Amazon Web
                        Services Systems Manager User Guide .

                        Key -> (string)
                            User-defined criteria for  sending  commands  that
                            target managed nodes that meet the criteria.

                        Values -> (list)
                            User-defined criteria that maps to Key . For exam-
                            ple, if you specified tag:ServerRole ,  you  could
                            specify  value:WebServer  to  run a command on in-
                            stances that include EC2 tags  of  ServerRole,Web-
                            Server .

                            Depending  on the type of target, the maximum num-
                            ber of values for a key might be  lower  than  the
                            global maximum of 50.

                            (string)

                 TargetsMaxConcurrency -> (string)
                     The maximum number of targets allowed to run this task in
                     parallel.  This  TargetsMaxConcurrency  takes  precedence
                     over  the StartAutomationExecution:MaxConcurrency parame-
                     ter if both are supplied.

                 TargetsMaxErrors -> (string)
                     The maximum number of errors that are allowed before  the
                     system  stops  running  the automation on additional tar-
                     gets. This TargetsMaxErrors  parameter  takes  precedence
                     over  the StartAutomationExecution:MaxErrors parameter if
                     both are supplied.

              TriggeredAlarms -> (list)
                 The CloudWatch alarms that were invoked by the automation.

                 (structure)
                     The details about the state of your CloudWatch alarm.

                     Name -> (string)
                        The name of your CloudWatch alarm.

                     State -> (string)
                        The state of your CloudWatch alarm.

              ParentStepDetails -> (structure)
                 Information about the parent step.

                 StepExecutionId -> (string)
                     The unique ID of a step execution.

                 StepName -> (string)
                     The name of the step.

                 Action -> (string)
                     The name of the automation action.

                 Iteration -> (integer)
                     The current repetition of the loop represented by an  in-
                     teger.

                 IteratorValue -> (string)
                     The current value of the specified iterator in the loop.

       NextToken -> (string)
          The token to use when requesting the next set of items. If there are
          no additional items to return, the string is empty.



                                         DESCRIBE-AUTOMATION-STEP-EXECUTIONS()
