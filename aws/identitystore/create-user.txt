CREATE-USER()                                                    CREATE-USER()



NAME
       create-user -

DESCRIPTION
       Creates a new user within the specified identity store.

       See also: AWS API Documentation

SYNOPSIS
            create-user
          --identity-store-id <value>
          [--user-name <value>]
          [--name <value>]
          [--display-name <value>]
          [--nick-name <value>]
          [--profile-url <value>]
          [--emails <value>]
          [--addresses <value>]
          [--phone-numbers <value>]
          [--user-type <value>]
          [--title <value>]
          [--preferred-language <value>]
          [--locale <value>]
          [--timezone <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --identity-store-id (string)
          The globally unique identifier for the identity store.

       --user-name (string)
          A  unique  string used to identify the user. The length limit is 128
          characters. This value can consist of letters, accented  characters,
          symbols,  numbers,  and  punctuation. This value is specified at the
          time the user is created and stored as an attribute of the user  ob-
          ject in the identity store.

       --name (structure)
          An object containing the user's name.

          Formatted -> (string)
              A string containing a formatted version of the name for display.

          FamilyName -> (string)
              The family name of the user.

          GivenName -> (string)
              The given name of the user.

          MiddleName -> (string)
              The middle name of the user.

          HonorificPrefix -> (string)
              The honorific prefix of the user. For example, "Dr."

          HonorificSuffix -> (string)
              The honorific suffix of the user. For example, "M.D."

       Shorthand Syntax:

          Formatted=string,FamilyName=string,GivenName=string,MiddleName=string,HonorificPrefix=string,HonorificSuffix=string

       JSON Syntax:

          {
            "Formatted": "string",
            "FamilyName": "string",
            "GivenName": "string",
            "MiddleName": "string",
            "HonorificPrefix": "string",
            "HonorificSuffix": "string"
          }

       --display-name (string)
          A string containing the user's name. This value is typically format-
          ted for display when the user  is  referenced.  For  example,  "John
          Doe."

       --nick-name (string)
          A string containing an alternate name for the user.

       --profile-url (string)
          A string containing a URL that may be associated with the user.

       --emails (list)
          A  list  of Email objects containing email addresses associated with
          the user.

          (structure)
              The email address associated with the user.

              Value -> (string)
                 A  string  containing  an  email  address.  For  example,  "-
                 johndoe@amazon.com."

              Type -> (string)
                 A  string  representing  the  type  of  address. For example,
                 "Work."

              Primary -> (boolean)
                 A Boolean value representing  whether  this  is  the  primary
                 email address for the associated resource.

       Shorthand Syntax:

          Value=string,Type=string,Primary=boolean ...

       JSON Syntax:

          [
            {
              "Value": "string",
              "Type": "string",
              "Primary": true|false
            }
            ...
          ]

       --addresses (list)
          A  list  of Address objects containing addresses associated with the
          user.

          (structure)
              The address associated with the specified user.

              StreetAddress -> (string)
                 The street of the address.

              Locality -> (string)
                 A string of the address locality.

              Region -> (string)
                 The region of the address.

              PostalCode -> (string)
                 The postal code of the address.

              Country -> (string)
                 The country of the address.

              Formatted -> (string)
                 A string containing a formatted version of  the  address  for
                 display.

              Type -> (string)
                 A  string  representing  the  type  of  address. For example,
                 "Home."

              Primary -> (boolean)
                 A Boolean value representing whether this is the primary  ad-
                 dress for the associated resource.

       Shorthand Syntax:

          StreetAddress=string,Locality=string,Region=string,PostalCode=string,Country=string,Formatted=string,Type=string,Primary=boolean ...

       JSON Syntax:

          [
            {
              "StreetAddress": "string",
              "Locality": "string",
              "Region": "string",
              "PostalCode": "string",
              "Country": "string",
              "Formatted": "string",
              "Type": "string",
              "Primary": true|false
            }
            ...
          ]

       --phone-numbers (list)
          A  list  of  PhoneNumber objects containing phone numbers associated
          with the user.

          (structure)
              The phone number associated with the user.

              Value -> (string)
                 A string containing a phone number. For example, "8675309" or
                 "+1 (800) 123-4567".

              Type -> (string)
                 A  string  representing the type of a phone number. For exam-
                 ple, "Mobile."

              Primary -> (boolean)
                 A Boolean value representing  whether  this  is  the  primary
                 phone number for the associated resource.

       Shorthand Syntax:

          Value=string,Type=string,Primary=boolean ...

       JSON Syntax:

          [
            {
              "Value": "string",
              "Type": "string",
              "Primary": true|false
            }
            ...
          ]

       --user-type (string)
          A  string indicating the user's type. Possible values depend on each
          customer's specific needs, so they are left unspecified.

       --title (string)
          A string containing the user's title. Possible values are  left  un-
          specified given that they depend on each customer's specific needs.

       --preferred-language (string)
          A string containing the preferred language of the user. For example,
          "American English" or "en-us."

       --locale (string)
          A string containing the user's geographical region or location.

       --timezone (string)
          A string containing the user's time zone.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       UserId -> (string)
          The identifier of the newly created user in the identity store.

       IdentityStoreId -> (string)
          The globally unique identifier for the identity store.



                                                                 CREATE-USER()
