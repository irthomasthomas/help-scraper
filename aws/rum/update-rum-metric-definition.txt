UPDATE-RUM-METRIC-DEFINITION()                  UPDATE-RUM-METRIC-DEFINITION()



NAME
       update-rum-metric-definition -

DESCRIPTION
       Modifies  one  existing  metric  definition for CloudWatch RUM extended
       metrics.   For   more   information   about   extended   metrics,   see
       BatchCreateRumMetricsDefinitions .

       See also: AWS API Documentation

SYNOPSIS
            update-rum-metric-definition
          --app-monitor-name <value>
          --destination <value>
          [--destination-arn <value>]
          --metric-definition <value>
          --metric-definition-id <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --app-monitor-name (string)
          The name of the CloudWatch RUM app monitor that sends these metrics.

       --destination (string)
          The  destination to send the metrics to. Valid values are CloudWatch
          and Evidently . If you specify Evidently , you must also specify the
          ARN of the CloudWatchEvidently experiment that will receive the met-
          rics and an IAM role that has permission to write to the experiment.

          Possible values:

          o CloudWatch

          o Evidently

       --destination-arn (string)
          This parameter is required if Destination is Evidently . If Destina-
          tion is CloudWatch , do not use this parameter.

          This parameter specifies the ARN of the Evidently experiment that is
          to receive the metrics. You must have already defined  this  experi-
          ment   as   a   valid   destination.   For   more  information,  see
          PutRumMetricsDestination .

       --metric-definition (structure)
          A structure that contains the new definition that you  want  to  use
          for this metric.

          DimensionKeys -> (map)
              Use this field only if you are sending the metric to CloudWatch.

              This  field  is  a map of field paths to dimension names. It de-
              fines the dimensions to associate with  this  metric  in  Cloud-
              Watch.  For  extended  metrics,  valid values for the entries in
              this field are the following:

              o "metadata.pageId": "PageId"

              o "metadata.browserName": "BrowserName"

              o "metadata.deviceType": "DeviceType"

              o "metadata.osName": "OSName"

              o "metadata.countryCode": "CountryCode"

              o "event_details.fileType": "FileType"

              For both extended metrics and  custom  metrics,  all  dimensions
              listed in this field must also be included in EventPattern .

              key -> (string)

              value -> (string)

          EventPattern -> (string)
              The pattern that defines the metric, specified as a JSON object.
              RUM checks events that happen in a user's  session  against  the
              pattern,  and events that match the pattern are sent to the met-
              ric destination.

              When you define extended metrics, the metric definition  is  not
              valid if EventPattern is omitted.

              Example event patterns:

              o '{   "event_type":  ["com.amazon.rum.js_error_event"],  "meta-
                data": { "browserName": [ "Chrome", "Safari" ], } }'

              o '{     "event_type":      ["com.amazon.rum.performance_naviga-
                tion_event"],  "metadata": { "browserName": [ "Chrome", "Fire-
                fox" ] }, "event_details": { "duration": [{ "numeric": [  "<",
                2000 ] }] } }'

              o '{      "event_type":     ["com.amazon.rum.performance_naviga-
                tion_event"], "metadata": { "browserName":  [  "Chrome",  "Sa-
                fari"  ], "countryCode": [ "US" ] }, "event_details": { "dura-
                tion": [{ "numeric": [ ">=", 2000, "<", 8000 ] }] } }'

              If the metrics destination is  CloudWatch  and  the  event  also
              matches  a value in DimensionKeys , then the metric is published
              with the specified dimensions.

          Name -> (string)
              The name for the metric that is defined in this  structure.  For
              custom  metrics, you can specify any name that you like. For ex-
              tended metrics, valid values are the following:

              o PerformanceNavigationDuration

              o PerformanceResourceDuration

              o NavigationSatisfiedTransaction

              o NavigationToleratedTransaction

              o NavigationFrustratedTransaction

              o WebVitalsCumulativeLayoutShift

              o WebVitalsFirstInputDelay

              o WebVitalsLargestContentfulPaint

              o JsErrorCount

              o HttpErrorCount

              o SessionCount

          Namespace -> (string)
              If this structure is for a custom metric instead of an  extended
              metrics,  use  this parameter to define the metric namespace for
              that custom metric. Do not specify this parameter if this struc-
              ture is for an extended metric.

              You  cannot  use any string that starts with AWS/ for your name-
              space.

          UnitLabel -> (string)
              The CloudWatch metric unit to use for this metric. If  you  omit
              this field, the metric is recorded with no unit.

          ValueKey -> (string)
              The  field  within  the  event  object  that the metric value is
              sourced from.

              If you omit this field, a hardcoded value of 1 is pushed as  the
              metric  value. This is useful if you want to count the number of
              events that the filter catches.

              If this metric is sent to CloudWatch Evidently, this field  will
              be  passed  to Evidently raw. Evidently will handle data extrac-
              tion from the event.

       Shorthand Syntax:

          DimensionKeys={KeyName1=string,KeyName2=string},EventPattern=string,Name=string,Namespace=string,UnitLabel=string,ValueKey=string

       JSON Syntax:

          {
            "DimensionKeys": {"string": "string"
              ...},
            "EventPattern": "string",
            "Name": "string",
            "Namespace": "string",
            "UnitLabel": "string",
            "ValueKey": "string"
          }

       --metric-definition-id (string)
          The ID of the metric definition to update.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       None



                                                UPDATE-RUM-METRIC-DEFINITION()
