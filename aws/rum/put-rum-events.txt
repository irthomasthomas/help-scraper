PUT-RUM-EVENTS()                                              PUT-RUM-EVENTS()



NAME
       put-rum-events -

DESCRIPTION
       Sends  telemetry events about your application performance and user be-
       havior to CloudWatch RUM. The code snippet that RUM generates  for  you
       to  add  to  your  application includes PutRumEvents operations to send
       this data to RUM.

       Each PutRumEvents operation can send a batch of events  from  one  user
       session.

       See also: AWS API Documentation

SYNOPSIS
            put-rum-events
          --app-monitor-details <value>
          --batch-id <value>
          --id <value>
          --rum-events <value>
          --user-details <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --app-monitor-details (structure)
          A  structure  that  contains  information about the app monitor that
          collected this telemetry information.

          id -> (string)
              The unique ID of the app monitor.

          name -> (string)
              The name of the app monitor.

          version -> (string)
              The version of the app monitor.

       Shorthand Syntax:

          id=string,name=string,version=string

       JSON Syntax:

          {
            "id": "string",
            "name": "string",
            "version": "string"
          }

       --batch-id (string)
          A unique identifier for this batch of RUM event data.

       --id (string)
          The ID of the app monitor that is sending this data.

       --rum-events (list)
          An array of structures that contain the telemetry event data.

          (structure)
              A structure that contains the information  for  one  performance
              event  that  RUM collects from a user session with your applica-
              tion.

              details -> (string)
                 A string containing details about the event.

              id -> (string)
                 A unique ID for this event.

              metadata -> (string)
                 Metadata about this event, which contains a  JSON  serializa-
                 tion  of  the identity of the user for this session. The user
                 information  comes  from  information  such   as   the   HTTP
                 user-agent request header and document interface.

              timestamp -> (timestamp)
                 The exact time that this event occurred.

              type -> (string)
                 The  JSON schema that denotes the type of event this is, such
                 as a page load or a new session.

       Shorthand Syntax:

          details=string,id=string,metadata=string,timestamp=timestamp,type=string ...

       JSON Syntax:

          [
            {
              "details": "string",
              "id": "string",
              "metadata": "string",
              "timestamp": timestamp,
              "type": "string"
            }
            ...
          ]

       --user-details (structure)
          A structure that contains information about the  user  session  that
          this batch of events was collected from.

          sessionId -> (string)
              The session ID that the performance events are from.

          userId -> (string)
              The  ID  of the user for this user session. This ID is generated
              by RUM and does not include any personally identifiable informa-
              tion about the user.

       Shorthand Syntax:

          sessionId=string,userId=string

       JSON Syntax:

          {
            "sessionId": "string",
            "userId": "string"
          }

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       None



                                                              PUT-RUM-EVENTS()
