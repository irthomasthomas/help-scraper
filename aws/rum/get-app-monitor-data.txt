GET-APP-MONITOR-DATA()                                  GET-APP-MONITOR-DATA()



NAME
       get-app-monitor-data -

DESCRIPTION
       Retrieves  the  raw performance events that RUM has collected from your
       web application, so that you can do your own processing or analysis  of
       this data.

       See also: AWS API Documentation

       get-app-monitor-data  is  a paginated operation. Multiple API calls may
       be issued in order to retrieve the entire data set of results. You  can
       disable pagination by providing the --no-paginate argument.  When using
       --output text and the --query argument on  a  paginated  response,  the
       --query  argument  must  extract data from the results of the following
       query expressions: Events

SYNOPSIS
            get-app-monitor-data
          [--filters <value>]
          --name <value>
          --time-range <value>
          [--cli-input-json <value>]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --filters (list)
          An array of structures that you can use to  filter  the  results  to
          those  that match one or more sets of key-value pairs that you spec-
          ify.

          (structure)
              A structure that defines a key and values that you  can  use  to
              filter  the  results.  The  only performance events that are re-
              turned are those that have values matching  the  ones  that  you
              specify in one of your QueryFilter structures.

              For  example,  you could specify Browser as the Name and specify
              Chrome,Firefox as the Values to  return  events  generated  only
              from those browsers.

              Specifying  Invert as the Name works as a "not equal to" filter.
              For example, specify Invert as the Name and  specify  Chrome  as
              the  value to return all events except events from user sessions
              with the Chrome browser.

              Name -> (string)
                 The name of a key to search for. The filter returns only  the
                 events that match the Name and Values that you specify.

                 Valid values for Name are Browser | Device | Country | Page |
                 OS | EventType | Invert

              Values -> (list)
                 The values of the Name that are to be be included in the  re-
                 turned results.

                 (string)

       Shorthand Syntax:

          Name=string,Values=string,string ...

       JSON Syntax:

          [
            {
              "Name": "string",
              "Values": ["string", ...]
            }
            ...
          ]

       --name (string)
          The name of the app monitor that collected the data that you want to
          retrieve.

       --time-range (structure)
          A structure that defines the time range that you  want  to  retrieve
          results from.

          After -> (long)
              The  beginning  of the time range to retrieve performance events
              from.

          Before -> (long)
              The end of the time range to retrieve performance  events  from.
              If  you  omit this, the time range extends to the time that this
              operation is performed.

       Shorthand Syntax:

          After=long,Before=long

       JSON Syntax:

          {
            "After": long,
            "Before": long
          }

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --starting-token (string)
          A  token to specify where to start paginating. This is the NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The  size of each page to get in the AWS service call. This does not
          affect the number of items returned in the command's output. Setting
          a  smaller  page  size results in more calls to the AWS service, re-
          trieving fewer items in each call. This can  help  prevent  the  AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The total number of items to return in the command's output. If  the
          total  number of items available is more than the value specified, a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent command. Do not use the NextToken response element  directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       Events -> (list)
          The events that RUM collected that match your request.

          (string)

       NextToken -> (string)
          A token that you can use in a subsequent operation to  retrieve  the
          next set of results.



                                                        GET-APP-MONITOR-DATA()
