ADMIN-RESET-USER-PASSWORD()                        ADMIN-RESET-USER-PASSWORD()



NAME
       admin-reset-user-password -

DESCRIPTION
       Resets  the  specified user's password in a user pool as an administra-
       tor. Works on any user.

       When a developer calls this API, the current password  is  invalidated,
       so  it  must  be  changed.  If a user tries to sign in after the API is
       called, the app will  get  a  PasswordResetRequiredException  exception
       back  and  should  direct the user down the flow to reset the password,
       which is the same as the forgot password flow. In addition, if the user
       pool has phone verification selected and a verified phone number exists
       for the user, or if email verification is selected and a verified email
       exists  for  the  user,  calling this API will also result in sending a
       message to the end user with the code to change their password.

       NOTE:
          This action might generate an SMS text  message.  Starting  June  1,
          2021,  US  telecom  carriers  require you to register an origination
          phone number before you can send SMS messages to US  phone  numbers.
          If  you use SMS text messages in Amazon Cognito, you must register a
          phone number with Amazon Pinpoint . Amazon Cognito uses  the  regis-
          tered number automatically. Otherwise, Amazon Cognito users who must
          receive SMS messages might not be able to sign  up,  activate  their
          accounts, or sign in.

          If  you have never used SMS text messages with Amazon Cognito or any
          other Amazon Web Service, Amazon Simple Notification  Service  might
          place your account in the SMS sandbox. In * sandbox mode * , you can
          send messages only to verified phone numbers. After  you  test  your
          app  while in the sandbox environment, you can move out of the sand-
          box and into production. For more information, see SMS message  set-
          tings  for Amazon Cognito user pools in the Amazon Cognito Developer
          Guide .

       Calling this action requires developer credentials.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            admin-reset-user-password
          --user-pool-id <value>
          --username <value>
          [--client-metadata <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --user-pool-id (string)
          The user pool ID for the user pool  where  you  want  to  reset  the
          user's password.

       --username (string)
          The user name of the user whose password you want to reset.

       --client-metadata (map)
          A  map  of  custom key-value pairs that you can provide as input for
          any custom workflows that this action triggers.

          You create custom workflows by assigning Lambda  functions  to  user
          pool  triggers.  When you use the AdminResetUserPassword API action,
          Amazon Cognito invokes the function that is assigned to  the  custom
          message  trigger.  When  Amazon  Cognito  invokes  this function, it
          passes a JSON payload, which the function receives  as  input.  This
          payload contains a clientMetadata attribute, which provides the data
          that you assigned to the ClientMetadata parameter in your AdminRese-
          tUserPassword  request.  In  your  function  code in Lambda, you can
          process the clientMetadata value to enhance your workflow  for  your
          specific needs.

          For  more  information,  see  Customizing  user  pool Workflows with
          Lambda Triggers in the Amazon Cognito Developer Guide .

          NOTE:
              When you use the ClientMetadata parameter, remember that  Amazon
              Cognito won't do the following:

              o Store the ClientMetadata value. This data is available only to
                Lambda triggers that are assigned to a user  pool  to  support
                custom  workflows. If your user pool configuration doesn't in-
                clude triggers, the ClientMetadata parameter  serves  no  pur-
                pose.

              o Validate the ClientMetadata value.

              o Encrypt  the ClientMetadata value. Don't use Amazon Cognito to
                provide sensitive information.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To reset a user password

       This example resets the password for diego@example.com.

       Command:

          aws cognito-idp admin-reset-user-password --user-pool-id us-west-2_aaaaaaaaa --username diego@example.com

OUTPUT
       None



                                                   ADMIN-RESET-USER-PASSWORD()
