ADMIN-CREATE-USER()                                        ADMIN-CREATE-USER()



NAME
       admin-create-user -

DESCRIPTION
       Creates a new user in the specified user pool.

       If  MessageAction  isn't  set, the default is to send a welcome message
       via email or phone (SMS).

       NOTE:
          This action might generate an SMS text  message.  Starting  June  1,
          2021,  US  telecom  carriers  require you to register an origination
          phone number before you can send SMS messages to US  phone  numbers.
          If  you use SMS text messages in Amazon Cognito, you must register a
          phone number with Amazon Pinpoint . Amazon Cognito uses  the  regis-
          tered number automatically. Otherwise, Amazon Cognito users who must
          receive SMS messages might not be able to sign  up,  activate  their
          accounts, or sign in.

          If  you have never used SMS text messages with Amazon Cognito or any
          other Amazon Web Servicesservice, Amazon Simple Notification Service
          might  place  your account in the SMS sandbox. In * sandbox mode * ,
          you can send messages only to verified phone numbers. After you test
          your  app  while in the sandbox environment, you can move out of the
          sandbox and into production. For more information, see  SMS  message
          settings  for Amazon Cognito user pools in the Amazon Cognito Devel-
          oper Guide .

       This message is based on a template that you configured in your call to
       create  or  update  a  user  pool.  This  template includes your custom
       sign-up instructions and placeholders for user name and temporary pass-
       word.

       Alternatively,  you can call AdminCreateUser with SUPPRESS for the Mes-
       sageAction parameter, and Amazon Cognito won't send any email.

       In either case, the user will be in the FORCE_CHANGE_PASSWORD state un-
       til they sign in and change their password.

       NOTE:
          Amazon  Cognito evaluates Identity and Access Management (IAM) poli-
          cies in requests for this API operation.  For  this  operation,  you
          must  use  IAM credentials to authorize requests, and you must grant
          yourself the corresponding IAM permission in a policy.
              Learn more

          o Signing Amazon Web Services API Requests

          o Using the Amazon Cognito user pools API and user pool endpoints

       See also: AWS API Documentation

SYNOPSIS
            admin-create-user
          --user-pool-id <value>
          --username <value>
          [--user-attributes <value>]
          [--validation-data <value>]
          [--temporary-password <value>]
          [--force-alias-creation | --no-force-alias-creation]
          [--message-action <value>]
          [--desired-delivery-mediums <value>]
          [--client-metadata <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --user-pool-id (string)
          The user pool ID for the user pool where the user will be created.

       --username (string)
          The value that you want to set as the  username  sign-in  attribute.
          The following conditions apply to the username parameter.

          o The  username can't be a duplicate of another username in the same
            user pool.

          o You can't change the value of a username after you create it.

          o You can only provide a value if usernames are a valid sign-in  at-
            tribute  for your user pool. If your user pool only supports phone
            numbers or email addresses as sign-in attributes,  Amazon  Cognito
            automatically  generates  a  username value. For more information,
            see Customizing sign-in attributes .

       --user-attributes (list)
          An array of name-value pairs that contain user attributes and attri-
          bute  values  to be set for the user to be created. You can create a
          user without specifying any attributes other than  Username  .  How-
          ever,  any  attributes that you specify as required (when creating a
          user pool or in the Attributes tab of the console) either you should
          supply  (in your call to AdminCreateUser ) or the user should supply
          (when they sign up in response to your welcome message).

          For custom attributes, you must prepend the custom:  prefix  to  the
          attribute name.

          To send a message inviting the user to sign up, you must specify the
          user's email address or phone number. You can do this in  your  call
          to AdminCreateUser or in the Users tab of the Amazon Cognito console
          for managing your user pools.

          In your call to AdminCreateUser , you can set the email_verified at-
          tribute  to  True , and you can set the phone_number_verified attri-
          bute   to   True   .   You   can   also   do   this    by    calling
          AdminUpdateUserAttributes .

          o email  :  The  email  address of the user to whom the message that
            contains the code and username  will  be  sent.  Required  if  the
            email_verified  attribute is set to True , or if "EMAIL" is speci-
            fied in the DesiredDeliveryMediums parameter.

          o phone_number : The phone number of the user to  whom  the  message
            that  contains the code and username will be sent. Required if the
            phone_number_verified attribute is set to True , or  if  "SMS"  is
            specified in the DesiredDeliveryMediums parameter.

          (structure)
              Specifies whether the attribute is standard or custom.

              Name -> (string)
                 The name of the attribute.

              Value -> (string)
                 The value of the attribute.

       Shorthand Syntax:

          Name=string,Value=string ...

       JSON Syntax:

          [
            {
              "Name": "string",
              "Value": "string"
            }
            ...
          ]

       --validation-data (list)
          Temporary  user  attributes  that contribute to the outcomes of your
          pre sign-up Lambda trigger. This set of key-value pairs are for cus-
          tom  validation  of information that you collect from your users but
          don't need to retain.

          Your Lambda function can analyze this additional data and act on it.
          Your  function  might  perform  external API operations like logging
          user attributes and validation data to Amazon CloudWatch Logs. Vali-
          dation  data  might  also affect the response that your function re-
          turns to Amazon Cognito, like automatically confirming the  user  if
          they sign up from within your network.

          For  more  information about the pre sign-up Lambda trigger, see Pre
          sign-up Lambda trigger .

          (structure)
              Specifies whether the attribute is standard or custom.

              Name -> (string)
                 The name of the attribute.

              Value -> (string)
                 The value of the attribute.

       Shorthand Syntax:

          Name=string,Value=string ...

       JSON Syntax:

          [
            {
              "Name": "string",
              "Value": "string"
            }
            ...
          ]

       --temporary-password (string)
          The user's temporary password. This password  must  conform  to  the
          password policy that you specified when you created the user pool.

          The  temporary  password  is  valid only once. To complete the Admin
          Create User flow, the user must enter the temporary password in  the
          sign-in  page,  along  with  a new password to be used in all future
          sign-ins.

          This parameter isn't required. If you don't specify a value,  Amazon
          Cognito generates one for you.

          The temporary password can only be used until the user account expi-
          ration limit that you set for your user pool. To reset  the  account
          after that time limit, you must call AdminCreateUser again and spec-
          ify RESEND for the MessageAction parameter.

       --force-alias-creation | --no-force-alias-creation (boolean)
          This  parameter  is  used  only  if  the  phone_number_verified   or
          email_verified attribute is set to True . Otherwise, it is ignored.

          If  this  parameter is set to True and the phone number or email ad-
          dress specified in the UserAttributes parameter already exists as an
          alias  with  a  different  user, the API call will migrate the alias
          from the previous user to the newly created user. The previous  user
          will no longer be able to log in using that alias.

          If this parameter is set to False , the API throws an AliasExistsEx-
          ception error if the alias already  exists.  The  default  value  is
          False .

       --message-action (string)
          Set  to  RESEND  to resend the invitation message to a user that al-
          ready exists and reset the expiration limit on the  user's  account.
          Set  to  SUPPRESS  to  suppress sending the message. You can specify
          only one value.

          Possible values:

          o RESEND

          o SUPPRESS

       --desired-delivery-mediums (list)
          Specify "EMAIL" if email will be used to send the  welcome  message.
          Specify "SMS" if the phone number will be used. The default value is
          "SMS" . You can specify more than one value.

          (string)

       Syntax:

          "string" "string" ...

          Where valid values are:
            SMS
            EMAIL

       --client-metadata (map)
          A map of custom key-value pairs that you can provide  as  input  for
          any custom workflows that this action triggers.

          You  create  custom  workflows by assigning Lambda functions to user
          pool triggers. When you use the AdminCreateUser API  action,  Amazon
          Cognito  invokes  the  function  that is assigned to the pre sign-up
          trigger. When Amazon Cognito invokes this function, it passes a JSON
          payload, which the function receives as input. This payload contains
          a clientMetadata attribute, which provides the  data  that  you  as-
          signed  to  the ClientMetadata parameter in your AdminCreateUser re-
          quest. In your function code in Lambda, you can process the  client-
          Metadata value to enhance your workflow for your specific needs.

          For  more  information,  see  Customizing  user  pool Workflows with
          Lambda Triggers in the Amazon Cognito Developer Guide .

          NOTE:
              When you use the ClientMetadata parameter, remember that  Amazon
              Cognito won't do the following:

              o Store the ClientMetadata value. This data is available only to
                Lambda triggers that are assigned to a user  pool  to  support
                custom  workflows. If your user pool configuration doesn't in-
                clude triggers, the ClientMetadata parameter  serves  no  pur-
                pose.

              o Validate the ClientMetadata value.

              o Encrypt  the ClientMetadata value. Don't use Amazon Cognito to
                provide sensitive information.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To create a user

       The  following admin-create-user example creates a user with the speci-
       fied settings email address and phone number.

          aws cognito-idp admin-create-user \
              --user-pool-id us-west-2_aaaaaaaaa \
              --username diego \
              --user-attributes Name=email,Value=diego@example.com Name=phone_number,Value="+15555551212" \
              --message-action SUPPRESS

       Output:

          {
              "User": {
                  "Username": "diego",
                  "Attributes": [
                      {
                          "Name": "sub",
                          "Value": "7325c1de-b05b-4f84-b321-9adc6e61f4a2"
                      },
                      {
                          "Name": "phone_number",
                          "Value": "+15555551212"
                      },
                      {
                          "Name": "email",
                          "Value": "diego@example.com"
                      }
                  ],
                  "UserCreateDate": 1548099495.428,
                  "UserLastModifiedDate": 1548099495.428,
                  "Enabled": true,
                  "UserStatus": "FORCE_CHANGE_PASSWORD"
              }
          }

OUTPUT
       User -> (structure)
          The newly created user.

          Username -> (string)
              The user name of the user you want to describe.

          Attributes -> (list)
              A container with information about the user type attributes.

              (structure)
                 Specifies whether the attribute is standard or custom.

                 Name -> (string)
                     The name of the attribute.

                 Value -> (string)
                     The value of the attribute.

          UserCreateDate -> (timestamp)
              The creation date of the user.

          UserLastModifiedDate -> (timestamp)
              The date and time when the item was modified. Amazon Cognito re-
              turns  this  timestamp in UNIX epoch time format. Your SDK might
              render the output in a human-readable format like ISO 8601 or  a
              Java Date object.

          Enabled -> (boolean)
              Specifies whether the user is enabled.

          UserStatus -> (string)
              The user status. This can be one of the following:

              o UNCONFIRMED - User has been created but not confirmed.

              o CONFIRMED - User has been confirmed.

              o EXTERNAL_PROVIDER - User signed in with a third-party IdP.

              o UNKNOWN - User status isn't known.

              o RESET_REQUIRED  - User is confirmed, but the user must request
                a code and reset their password before they can sign in.

              o FORCE_CHANGE_PASSWORD - The user is confirmed and the user can
                sign  in using a temporary password, but on first sign-in, the
                user must change their password to a new  value  before  doing
                anything else.

          MFAOptions -> (list)
              The MFA options for the user.

              (structure)
                     This  data  type  is no longer supported. Applies only to
                     SMS  multi-factor  authentication  (MFA)  configurations.
                     Does  not  apply  to  time-based one-time password (TOTP)
                     software token MFA configurations.

                 DeliveryMedium -> (string)
                     The delivery medium to send the MFA  code.  You  can  use
                     this parameter to set only the SMS delivery medium value.

                 AttributeName -> (string)
                     The attribute name of the MFA option type. The only valid
                     value is phone_number .



                                                           ADMIN-CREATE-USER()
