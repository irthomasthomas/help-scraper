DESCRIBE-USER-POOL-CLIENT()                        DESCRIBE-USER-POOL-CLIENT()



NAME
       describe-user-pool-client -

DESCRIPTION
       Client  method for returning the configuration information and metadata
       of the specified user pool app client.

       See also: AWS API Documentation

SYNOPSIS
            describe-user-pool-client
          --user-pool-id <value>
          --client-id <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --user-pool-id (string)
          The user pool ID for the user pool you want to describe.

       --client-id (string)
          The app client ID of the app associated with the user pool.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To describe a user pool client

       This example describes a user pool client.

       Command:

          aws cognito-idp describe-user-pool-client --user-pool-id us-west-2_aaaaaaaaa --client-id 38fjsnc484p94kpqsnet7mpld0

       Output:

          {
            "UserPoolClient": {
                "UserPoolId": "us-west-2_aaaaaaaaa",
                "ClientName": "MyApp",
                "ClientId": "38fjsnc484p94kpqsnet7mpld0",
                "ClientSecret": "CLIENT_SECRET",
                "LastModifiedDate": 1548108676.163,
                "CreationDate": 1548108676.163,
                "RefreshTokenValidity": 30,
                "ReadAttributes": [
                    "address",
                    "birthdate",
                    "custom:CustomAttr1",
                    "custom:CustomAttr2",
                    "email",
                    "email_verified",
                    "family_name",
                    "gender",
                    "given_name",
                    "locale",
                    "middle_name",
                    "name",
                    "nickname",
                    "phone_number",
                    "phone_number_verified",
                    "picture",
                    "preferred_username",
                    "profile",
                    "updated_at",
                    "website",
                    "zoneinfo"
                ],
                "WriteAttributes": [
                    "address",
                    "birthdate",
                    "custom:CustomAttr1",
                    "custom:CustomAttr2",
                    "email",
                    "family_name",
                    "gender",
                    "given_name",
                    "locale",
                    "middle_name",
                    "name",
                    "nickname",
                    "phone_number",
                    "picture",
                    "preferred_username",
                    "profile",
                    "updated_at",
                    "website",
                    "zoneinfo"
                ],
                "ExplicitAuthFlows": [
                    "ADMIN_NO_SRP_AUTH",
                    "USER_PASSWORD_AUTH"
                ],
                "AllowedOAuthFlowsUserPoolClient": false
            }
          }

OUTPUT
       UserPoolClient -> (structure)
          The user pool client from a server response  to  describe  the  user
          pool client.

          UserPoolId -> (string)
              The user pool ID for the user pool client.

          ClientName -> (string)
              The client name from the user pool request of the client type.

          ClientId -> (string)
              The ID of the client associated with the user pool.

          ClientSecret -> (string)
              The client secret from the user pool request of the client type.

          LastModifiedDate -> (timestamp)
              The date the user pool client was last modified.

          CreationDate -> (timestamp)
              The date the user pool client was created.

          RefreshTokenValidity -> (integer)
              The  refresh  token  time  limit. After this limit expires, your
              user can't use their refresh token. To specify the time unit for
              RefreshTokenValidity  as  seconds  , minutes , hours , or days ,
              set a TokenValidityUnits value in your API request.

              For example, when you set RefreshTokenValidity as 10 and  Token-
              ValidityUnits  as days , your user can refresh their session and
              retrieve new access and ID tokens for 10 days.

              The default time unit for RefreshTokenValidity in an API request
              is  days.  You  can't  set RefreshTokenValidity to 0. If you do,
              Amazon Cognito overrides the value with the default value of  30
              days. Valid range is displayed below in seconds.

          AccessTokenValidity -> (integer)
              The access token time limit. After this limit expires, your user
              can't use their access token. To specify the time unit  for  Ac-
              cessTokenValidity as seconds , minutes , hours , or days , set a
              TokenValidityUnits value in your API request.

              For example, when you set AccessTokenValidity to 10 and TokenVa-
              lidityUnits to hours , your user can authorize access with their
              access token for 10 hours.

              The default time unit for AccessTokenValidity in an API  request
              is hours. Valid range is displayed below in seconds.

          IdTokenValidity -> (integer)
              The  ID  token  time  limit. After this limit expires, your user
              can't use their ID token. To specify the time unit for  IdToken-
              Validity as seconds , minutes , hours , or days , set a TokenVa-
              lidityUnits value in your API request.

              For example, when you set IdTokenValidity as 10 and TokenValidi-
              tyUnits as hours , your user can authenticate their session with
              their ID token for 10 hours.

              The default time unit for AccessTokenValidity in an API  request
              is hours. Valid range is displayed below in seconds.

          TokenValidityUnits -> (structure)
              The  time units used to specify the token validity times of each
              token type: ID, access, and refresh.

              AccessToken -> (string)
                 A time unit of seconds , minutes , hours , or  days  for  the
                 value  that you set in the AccessTokenValidity parameter. The
                 default AccessTokenValidity time unit is hours.

              IdToken -> (string)
                 A time unit of seconds , minutes , hours , or  days  for  the
                 value  that you set in the IdTokenValidity parameter. The de-
                 fault IdTokenValidity time unit is hours.

              RefreshToken -> (string)
                 A time unit of seconds , minutes , hours , or  days  for  the
                 value that you set in the RefreshTokenValidity parameter. The
                 default RefreshTokenValidity time unit is days.

          ReadAttributes -> (list)
              The Read-only attributes.

              (string)

          WriteAttributes -> (list)
              The writeable attributes.

              (string)

          ExplicitAuthFlows -> (list)
              The authentication flows that are supported  by  the  user  pool
              clients. Flow names without the ALLOW_ prefix are no longer sup-
              ported in favor of new names with the ALLOW_ prefix.  Note  that
              values  with  ALLOW_  prefix must be used only along with values
              including the ALLOW_ prefix.

              Valid values include:

              o ALLOW_ADMIN_USER_PASSWORD_AUTH : Enable admin based user pass-
                word  authentication flow ADMIN_USER_PASSWORD_AUTH . This set-
                ting replaces the ADMIN_NO_SRP_AUTH setting. With this authen-
                tication flow, Amazon Cognito receives the password in the re-
                quest instead of using the Secure Remote Password (SRP) proto-
                col to verify passwords.

              o ALLOW_CUSTOM_AUTH  :  Enable  Lambda trigger based authentica-
                tion.

              o ALLOW_USER_PASSWORD_AUTH : Enable user password-based  authen-
                tication.  In  this flow, Amazon Cognito receives the password
                in the request instead of using the  SRP  protocol  to  verify
                passwords.

              o ALLOW_USER_SRP_AUTH : Enable SRP-based authentication.

              o ALLOW_REFRESH_TOKEN_AUTH : Enable authflow to refresh tokens.

              (string)

          SupportedIdentityProviders -> (list)
              A list of provider names for the IdPs that this client supports.
              The following are supported: COGNITO , Facebook , Google , Sign-
              InWithApple  ,  LoginWithAmazon , and the names of your own SAML
              and OIDC providers.

              (string)

          CallbackURLs -> (list)
              A list of allowed redirect (callback) URLs for the IdPs.

              A redirect URI must:

              o Be an absolute URI.

              o Be registered with the authorization server.

              o Not include a fragment component.

              See OAuth 2.0 - Redirection Endpoint .

              Amazon   Cognito   requires   HTTPS   over   HTTP   except   for
              http://localhost for testing purposes only.

              App callback URLs such as myapp://example are also supported.

              (string)

          LogoutURLs -> (list)
              A list of allowed logout URLs for the IdPs.

              (string)

          DefaultRedirectURI -> (string)
              The default redirect URI. Must be in the CallbackURLs list.

              A redirect URI must:

              o Be an absolute URI.

              o Be registered with the authorization server.

              o Not include a fragment component.

              See OAuth 2.0 - Redirection Endpoint .

              Amazon   Cognito   requires   HTTPS   over   HTTP   except   for
              http://localhost for testing purposes only.

              App callback URLs such as myapp://example are also supported.

          AllowedOAuthFlows -> (list)
              The allowed OAuth flows.
                 code

              Use a code grant flow, which provides an authorization  code  as
              the  response. This code can be exchanged for access tokens with
              the /oauth2/token endpoint.
                 implicit

              Issue the access token (and,  optionally,  ID  token,  based  on
              scopes) directly to your user.
                 client_credentials

              Issue  the access token from the /oauth2/token endpoint directly
              to a non-person user using a combination of the  client  ID  and
              client secret.

              (string)

          AllowedOAuthScopes -> (list)
              The  OAuth scopes that your app client supports. Possible values
              that OAuth provides are phone , email , openid , and  profile  .
              Possible  values  that Amazon Web Services provides are aws.cog-
              nito.signin.user.admin . Amazon  Cognito  also  supports  custom
              scopes that you create in Resource Servers.

              (string)

          AllowedOAuthFlowsUserPoolClient -> (boolean)
              Set  to true if the client is allowed to follow the OAuth proto-
              col when interacting with Amazon Cognito user pools.

          AnalyticsConfiguration -> (structure)
              The Amazon Pinpoint analytics configuration for  the  user  pool
              client.

              NOTE:
                 Amazon Cognito user pools only support sending events to Ama-
                 zon Pinpoint projects in the US East (N. Virginia)  us-east-1
                 Region, regardless of the Region where the user pool resides.

              ApplicationId -> (string)
                 The application ID for an Amazon Pinpoint application.

              ApplicationArn -> (string)
                 The Amazon Resource Name (ARN) of an Amazon Pinpoint project.
                 You can use the Amazon Pinpoint project to integrate with the
                 chosen  user  pool Client. Amazon Cognito publishes events to
                 the Amazon Pinpoint project that the app ARN declares.

              RoleArn -> (string)
                 The ARN of an Identity and Access Management role that autho-
                 rizes Amazon Cognito to publish events to Amazon Pinpoint an-
                 alytics.

              ExternalId -> (string)
                 The external ID.

              UserDataShared -> (boolean)
                 If UserDataShared is true , Amazon Cognito includes user data
                 in the events that it publishes to Amazon Pinpoint analytics.

          PreventUserExistenceErrors -> (string)
              Errors and responses that you want Amazon Cognito APIs to return
              during authentication, account confirmation, and password recov-
              ery  when  the  user doesn't exist in the user pool. When set to
              ENABLED and the user doesn't exist,  authentication  returns  an
              error  indicating either the username or password was incorrect.
              Account confirmation and password recovery return a response in-
              dicating a code was sent to a simulated destination. When set to
              LEGACY , those APIs return a UserNotFoundException exception  if
              the user doesn't exist in the user pool.

              Valid values include:

              o ENABLED - This prevents user existence-related errors.

              o LEGACY  -  This  represents the old behavior of Amazon Cognito
                where user existence related errors aren't prevented.

          EnableTokenRevocation -> (boolean)
              Indicates whether token revocation is  activated  for  the  user
              pool client. When you create a new user pool client, token revo-
              cation is activated by default. For more information  about  re-
              voking tokens, see RevokeToken .

          EnablePropagateAdditionalUserContextData -> (boolean)
              When  EnablePropagateAdditionalUserContextData  is  true, Amazon
              Cognito accepts an IpAddress value that you send in the UserCon-
              textData parameter. The UserContextData parameter sends informa-
              tion to Amazon Cognito advanced security for risk analysis.  You
              can  send UserContextData when you sign in Amazon Cognito native
              users with the InitiateAuth and RespondToAuthChallenge API oper-
              ations.

              When   EnablePropagateAdditionalUserContextData  is  false,  you
              can't send your user's source IP address to Amazon  Cognito  ad-
              vanced security with unauthenticated API operations. EnableProp-
              agateAdditionalUserContextData doesn't affect  whether  you  can
              send a source IP address in a ContextData parameter with the au-
              thenticated API operations AdminInitiateAuth  and  AdminRespond-
              ToAuthChallenge .

              You  can  only activate EnablePropagateAdditionalUserContextData
              in an app client that has a client secret. For more  information
              about  propagation  of user context data, see Adding user device
              and session data to API requests .



                                                   DESCRIBE-USER-POOL-CLIENT()
