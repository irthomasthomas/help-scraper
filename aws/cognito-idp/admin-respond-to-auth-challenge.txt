ADMIN-RESPOND-TO-AUTH-CHALLENGE()            ADMIN-RESPOND-TO-AUTH-CHALLENGE()



NAME
       admin-respond-to-auth-challenge -

DESCRIPTION
       Responds to an authentication challenge, as an administrator.

       NOTE:
          This  action  might  generate  an SMS text message. Starting June 1,
          2021, US telecom carriers require you  to  register  an  origination
          phone  number  before you can send SMS messages to US phone numbers.
          If you use SMS text messages in Amazon Cognito, you must register  a
          phone  number  with Amazon Pinpoint . Amazon Cognito uses the regis-
          tered number automatically. Otherwise, Amazon Cognito users who must
          receive  SMS  messages  might not be able to sign up, activate their
          accounts, or sign in.

          If you have never used SMS text messages with Amazon Cognito or  any
          other  Amazon  Web Service, Amazon Simple Notification Service might
          place your account in the SMS sandbox. In * sandbox mode * , you can
          send  messages  only  to verified phone numbers. After you test your
          app while in the sandbox environment, you can move out of the  sand-
          box  and into production. For more information, see SMS message set-
          tings for Amazon Cognito user pools in the Amazon Cognito  Developer
          Guide .

       Calling this action requires developer credentials.

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            admin-respond-to-auth-challenge
          --user-pool-id <value>
          --client-id <value>
          --challenge-name <value>
          [--challenge-responses <value>]
          [--session <value>]
          [--analytics-metadata <value>]
          [--context-data <value>]
          [--client-metadata <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --user-pool-id (string)
          The ID of the Amazon Cognito user pool.

       --client-id (string)
          The app client ID.

       --challenge-name (string)
          The challenge name. For more information, see AdminInitiateAuth .

          Possible values:

          o SMS_MFA

          o SOFTWARE_TOKEN_MFA

          o SELECT_MFA_TYPE

          o MFA_SETUP

          o PASSWORD_VERIFIER

          o CUSTOM_CHALLENGE

          o DEVICE_SRP_AUTH

          o DEVICE_PASSWORD_VERIFIER

          o ADMIN_NO_SRP_AUTH

          o NEW_PASSWORD_REQUIRED

       --challenge-responses (map)
          The challenge responses. These are inputs corresponding to the value
          of ChallengeName , for example:

          o SMS_MFA : SMS_MFA_CODE , USERNAME , SECRET_HASH (if app client  is
            configured with client secret).

          o PASSWORD_VERIFIER  : PASSWORD_CLAIM_SIGNATURE , PASSWORD_CLAIM_SE-
            CRET_BLOCK , TIMESTAMP , USERNAME , SECRET_HASH (if app client  is
            configured with client secret).

          NOTE:
              PASSWORD_VERIFIER requires DEVICE_KEY when signing in with a re-
              membered device.

          o ADMIN_NO_SRP_AUTH : PASSWORD ,  USERNAME  ,  SECRET_HASH  (if  app
            client is configured with client secret).

          o NEW_PASSWORD_REQUIRED  : NEW_PASSWORD , USERNAME , SECRET_HASH (if
            app client is configured with client secret). To set any  required
            attributes  that  Amazon Cognito returned as requiredAttributes in
            the AdminInitiateAuth response, add a
            ``
            userAttributes.*attributename* `` parameter.  This  parameter  can
            also  set  values  for writable attributes that aren't required by
            your user pool.

          System Message: WARNING/2 (<string>:, line 147)
            Inline literal start-string without end-string.

          NOTE:
              In a NEW_PASSWORD_REQUIRED challenge response, you can't  modify
              a  required attribute that already has a value. In AdminRespond-
              ToAuthChallenge , set a value for any keys that  Amazon  Cognito
              returned  in  the requiredAttributes parameter, then use the Ad-
              minUpdateUserAttributes API operation to modify the value of any
              additional attributes.

          o MFA_SETUP  requires USERNAME , plus you must use the session value
            returned by VerifySoftwareToken in the Session parameter.

          The value of the USERNAME attribute must be the user's actual  user-
          name,  not  an  alias (such as an email address or phone number). To
          make this simpler, the AdminInitiateAuth response includes  the  ac-
          tual  username  value in the USERNAMEUSER_ID_FOR_SRP attribute. This
          happens even if you specified an alias in your call  to  AdminIniti-
          ateAuth .

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --session (string)
          The  session  that  should be passed both ways in challenge-response
          calls to the service. If an InitiateAuth  or  RespondToAuthChallenge
          API  call determines that the caller must pass another challenge, it
          returns a session with  other  challenge  parameters.  This  session
          should  be  passed  as  it is to the next RespondToAuthChallenge API
          call.

       --analytics-metadata (structure)
          The analytics metadata for collecting Amazon  Pinpoint  metrics  for
          AdminRespondToAuthChallenge calls.

          AnalyticsEndpointId -> (string)
              The endpoint ID.

       Shorthand Syntax:

          AnalyticsEndpointId=string

       JSON Syntax:

          {
            "AnalyticsEndpointId": "string"
          }

       --context-data (structure)
          Contextual  data  such as the user's device fingerprint, IP address,
          or location used for evaluating the risk of an unexpected  event  by
          Amazon Cognito advanced security.

          IpAddress -> (string)
              Source IP address of your user.

          ServerName -> (string)
              Your server endpoint where this API is invoked.

          ServerPath -> (string)
              Your server path where this API is invoked.

          HttpHeaders -> (list)
              HttpHeaders received on your server in same order.

              (structure)
                 The HTTP header.

                 headerName -> (string)
                     The header name.

                 headerValue -> (string)
                     The header value.

          EncodedData -> (string)
              Encoded  data containing device fingerprinting details collected
              using the Amazon Cognito context data collection library.

       Shorthand Syntax:

          IpAddress=string,ServerName=string,ServerPath=string,HttpHeaders=[{headerName=string,headerValue=string},{headerName=string,headerValue=string}],EncodedData=string

       JSON Syntax:

          {
            "IpAddress": "string",
            "ServerName": "string",
            "ServerPath": "string",
            "HttpHeaders": [
              {
                "headerName": "string",
                "headerValue": "string"
              }
              ...
            ],
            "EncodedData": "string"
          }

       --client-metadata (map)
          A map of custom key-value pairs that you can provide  as  input  for
          any custom workflows that this action triggers.

          You  create  custom  workflows by assigning Lambda functions to user
          pool triggers. When you use the AdminRespondToAuthChallenge API  ac-
          tion, Amazon Cognito invokes any functions that you have assigned to
          the following triggers:

          o pre sign-up

          o custom message

          o post authentication

          o user migration

          o pre token generation

          o define auth challenge

          o create auth challenge

          o verify auth challenge response

          When Amazon Cognito invokes any of these functions, it passes a JSON
          payload, which the function receives as input. This payload contains
          a clientMetadata attribute that provides the data that you  assigned
          to  the ClientMetadata parameter in your AdminRespondToAuthChallenge
          request. In your function  code  in  Lambda,  you  can  process  the
          clientMetadata  value  to  enhance  your  workflow for your specific
          needs.

          For more information,  see  Customizing  user  pool  Workflows  with
          Lambda Triggers in the Amazon Cognito Developer Guide .

          NOTE:
              When  you use the ClientMetadata parameter, remember that Amazon
              Cognito won't do the following:

              o Store the ClientMetadata value. This data is available only to
                Lambda  triggers  that  are assigned to a user pool to support
                custom workflows. If your user pool configuration doesn't  in-
                clude  triggers,  the  ClientMetadata parameter serves no pur-
                pose.

              o Validate the ClientMetadata value.

              o Encrypt the ClientMetadata value. Don't use Amazon Cognito  to
                provide sensitive information.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

OUTPUT
       ChallengeName -> (string)
          The   name   of   the   challenge.   For   more   information,   see
          AdminInitiateAuth .

       Session -> (string)
          The  session  that  should be passed both ways in challenge-response
          calls to the service. If the caller  must  pass  another  challenge,
          they  return a session with other challenge parameters. This session
          should be passed as it is to  the  next  RespondToAuthChallenge  API
          call.

       ChallengeParameters -> (map)
          The    challenge    parameters.    For    more    information,   see
          AdminInitiateAuth .

          key -> (string)

          value -> (string)

       AuthenticationResult -> (structure)
          The result returned by the server in response to the  authentication
          request.

          AccessToken -> (string)
              A  valid access token that Amazon Cognito issued to the user who
              you want to authenticate.

          ExpiresIn -> (integer)
              The expiration period of the authentication result in seconds.

          TokenType -> (string)
              The token type.

          RefreshToken -> (string)
              The refresh token.

          IdToken -> (string)
              The ID token.

          NewDeviceMetadata -> (structure)
              The new device metadata from an authentication result.

              DeviceKey -> (string)
                 The device key.

              DeviceGroupKey -> (string)
                 The device group key.



                                             ADMIN-RESPOND-TO-AUTH-CHALLENGE()
