ADMIN-RESPOND-TO-AUTH-CHALLENGE()            ADMIN-RESPOND-TO-AUTH-CHALLENGE()



NAME
       admin-respond-to-auth-challenge -

DESCRIPTION
       Some  API operations in a user pool generate a challenge, like a prompt
       for an MFA code, for device authentication that bypasses MFA, or for  a
       custom authentication challenge. An AdminRespondToAuthChallenge API re-
       quest provides the answer to that challenge, like a code  or  a  secure
       remote  password  (SRP). The parameters of a response to an authentica-
       tion challenge vary with the type of challenge.

       For more information about custom authentication challenges, see Custom
       authentication challenge Lambda triggers .

       NOTE:
          This  action  might  generate  an SMS text message. Starting June 1,
          2021, US telecom carriers require you  to  register  an  origination
          phone  number  before you can send SMS messages to US phone numbers.
          If you use SMS text messages in Amazon Cognito, you must register  a
          phone  number  with Amazon Pinpoint . Amazon Cognito uses the regis-
          tered number automatically. Otherwise, Amazon Cognito users who must
          receive  SMS  messages  might not be able to sign up, activate their
          accounts, or sign in.

          If you have never used SMS text messages with Amazon Cognito or  any
          other Amazon Web Servicesservice, Amazon Simple Notification Service
          might place your account in the SMS sandbox. In * sandbox mode  *  ,
          you can send messages only to verified phone numbers. After you test
          your app while in the sandbox environment, you can move out  of  the
          sandbox  and  into production. For more information, see SMS message
          settings for Amazon Cognito user pools in the Amazon Cognito  Devel-
          oper Guide .

       NOTE:
          Amazon  Cognito evaluates Identity and Access Management (IAM) poli-
          cies in requests for this API operation.  For  this  operation,  you
          must  use  IAM credentials to authorize requests, and you must grant
          yourself the corresponding IAM permission in a policy.
              Learn more

          o Signing Amazon Web Services API Requests

          o Using the Amazon Cognito user pools API and user pool endpoints

       See also: AWS API Documentation

SYNOPSIS
            admin-respond-to-auth-challenge
          --user-pool-id <value>
          --client-id <value>
          --challenge-name <value>
          [--challenge-responses <value>]
          [--session <value>]
          [--analytics-metadata <value>]
          [--context-data <value>]
          [--client-metadata <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --user-pool-id (string)
          The ID of the Amazon Cognito user pool.

       --client-id (string)
          The app client ID.

       --challenge-name (string)
          The challenge name. For more information, see AdminInitiateAuth .

          Possible values:

          o SMS_MFA

          o EMAIL_OTP

          o SOFTWARE_TOKEN_MFA

          o SELECT_MFA_TYPE

          o MFA_SETUP

          o PASSWORD_VERIFIER

          o CUSTOM_CHALLENGE

          o DEVICE_SRP_AUTH

          o DEVICE_PASSWORD_VERIFIER

          o ADMIN_NO_SRP_AUTH

          o NEW_PASSWORD_REQUIRED

       --challenge-responses (map)
          The responses to the challenge that you received in the previous re-
          quest.  Each challenge has its own required response parameters. The
          following examples are partial JSON request  bodies  that  highlight
          challenge-response parameters.

          WARNING:
                 You must provide a SECRET_HASH parameter in all challenge re-
                 sponses to an app client that has a client secret.

                 SMS_MFA

              "ChallengeName":        "SMS_MFA",         "ChallengeResponses":
              {"SMS_MFA_CODE": "[code]", "USERNAME": "[username]"}
                 EMAIL_OTP

              "ChallengeName":        "EMAIL_OTP",       "ChallengeResponses":
              {"EMAIL_OTP_CODE": "[code]", "USERNAME": "[username]"}
                 PASSWORD_VERIFIER

          This challenge response is part of the SRP flow. Amazon Cognito  re-
          quires  that your application respond to this challenge within a few
          seconds. When the response time exceeds this period, your user  pool
          returns a NotAuthorizedException error.
              "ChallengeName":    "PASSWORD_VERIFIER",   "ChallengeResponses":
              {"PASSWORD_CLAIM_SIGNATURE":     "[claim_signature]",     "PASS-
              WORD_CLAIM_SECRET_BLOCK":  "[secret_block]", "TIMESTAMP": [time-
              stamp], "USERNAME": "[username]"}

          Add "DEVICE_KEY" when you sign in with a remembered device.
                 CUSTOM_CHALLENGE

              "ChallengeName":    "CUSTOM_CHALLENGE",    "ChallengeResponses":
              {"USERNAME": "[username]", "ANSWER": "[challenge_answer]"}

          Add "DEVICE_KEY" when you sign in with a remembered device.
                 NEW_PASSWORD_REQUIRED

              "ChallengeName":  "NEW_PASSWORD_REQUIRED", "ChallengeResponses":
              {"NEW_PASSWORD": "[new_password]", "USERNAME": "[username]"}

          To set any required attributes that InitiateAuth returned in an  re-
          quiredAttributes  parameter,  add "userAttributes.[attribute_name]":
          "[attribute_value]"  .  This  parameter  can  also  set  values  for
          writable attributes that aren't required by your user pool.

          NOTE:
                 In a NEW_PASSWORD_REQUIRED challenge response, you can't mod-
                 ify a required attribute that already has  a  value.  In  Re-
                 spondToAuthChallenge  ,  set a value for any keys that Amazon
                 Cognito returned in the  requiredAttributes  parameter,  then
                 use  the  UpdateUserAttributes  API  operation  to modify the
                 value of any additional attributes.

                 SOFTWARE_TOKEN_MFA

              "ChallengeName":   "SOFTWARE_TOKEN_MFA",   "ChallengeResponses":
              {"USERNAME": "[username]", "SOFTWARE_TOKEN_MFA_CODE": [authenti-
              cator_code]}
                 DEVICE_SRP_AUTH

              "ChallengeName":    "DEVICE_SRP_AUTH",     "ChallengeResponses":
              {"USERNAME":    "[username]",    "DEVICE_KEY":   "[device_key]",
              "SRP_A": "[srp_a]"}
                 DEVICE_PASSWORD_VERIFIER

              "ChallengeName":    "DEVICE_PASSWORD_VERIFIER",    "ChallengeRe-
              sponses":  {"DEVICE_KEY": "[device_key]", "PASSWORD_CLAIM_SIGNA-
              TURE": "[claim_signature]", "PASSWORD_CLAIM_SECRET_BLOCK": "[se-
              cret_block]",   "TIMESTAMP":  [timestamp],  "USERNAME":  "[user-
              name]"}
                 MFA_SETUP

              "ChallengeName": "MFA_SETUP", "ChallengeResponses": {"USERNAME":
              "[username]"},  "SESSION":  "[Session  ID from VerifySoftwareTo-
              ken]"
                 SELECT_MFA_TYPE

              "ChallengeName":    "SELECT_MFA_TYPE",     "ChallengeResponses":
              {"USERNAME":  "[username]",  "ANSWER": "[SMS_MFA or SOFTWARE_TO-
              KEN_MFA]"}

          For more information about SECRET_HASH , see Computing  secret  hash
          values  .  For  information about DEVICE_KEY , see Working with user
          devices in your user pool .

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --session (string)
          The session that should be passed both  ways  in  challenge-response
          calls  to  the service. If an InitiateAuth or RespondToAuthChallenge
          API call determines that the caller must pass another challenge,  it
          returns  a  session  with  other  challenge parameters. This session
          should be passed as it is to  the  next  RespondToAuthChallenge  API
          call.

       --analytics-metadata (structure)
          The  analytics  metadata  for collecting Amazon Pinpoint metrics for
          AdminRespondToAuthChallenge calls.

          AnalyticsEndpointId -> (string)
              The endpoint ID.

       Shorthand Syntax:

          AnalyticsEndpointId=string

       JSON Syntax:

          {
            "AnalyticsEndpointId": "string"
          }

       --context-data (structure)
          Contextual data about your user session, such as the device  finger-
          print,  IP  address,  or  location. Amazon Cognito advanced security
          evaluates the risk of an authentication event based on  the  context
          that  your  app generates and passes to Amazon Cognito when it makes
          API requests.

          IpAddress -> (string)
              The source IP address of your user's device.

          ServerName -> (string)
              Your server endpoint where this API is invoked.

          ServerPath -> (string)
              Your server path where this API is invoked.

          HttpHeaders -> (list)
              HttpHeaders received on your server in same order.

              (structure)
                 The HTTP header.

                 headerName -> (string)
                     The header name.

                 headerValue -> (string)
                     The header value.

          EncodedData -> (string)
              Encoded device-fingerprint details that your app collected  with
              the Amazon Cognito context data collection library. For more in-
              formation, see Adding user device and session data  to  API  re-
              quests .

       Shorthand Syntax:

          IpAddress=string,ServerName=string,ServerPath=string,HttpHeaders=[{headerName=string,headerValue=string},{headerName=string,headerValue=string}],EncodedData=string

       JSON Syntax:

          {
            "IpAddress": "string",
            "ServerName": "string",
            "ServerPath": "string",
            "HttpHeaders": [
              {
                "headerName": "string",
                "headerValue": "string"
              }
              ...
            ],
            "EncodedData": "string"
          }

       --client-metadata (map)
          A  map  of  custom key-value pairs that you can provide as input for
          any custom workflows that this action triggers.

          You create custom workflows by assigning Lambda  functions  to  user
          pool  triggers. When you use the AdminRespondToAuthChallenge API ac-
          tion, Amazon Cognito invokes any functions that you have assigned to
          the following triggers:

          o pre sign-up

          o custom message

          o post authentication

          o user migration

          o pre token generation

          o define auth challenge

          o create auth challenge

          o verify auth challenge response

          When Amazon Cognito invokes any of these functions, it passes a JSON
          payload, which the function receives as input. This payload contains
          a  clientMetadata attribute that provides the data that you assigned
          to the ClientMetadata parameter in your  AdminRespondToAuthChallenge
          request.  In  your  function  code  in  Lambda,  you can process the
          clientMetadata value to enhance  your  workflow  for  your  specific
          needs.

          For  more  information,  see  Customizing  user  pool Workflows with
          Lambda Triggers in the Amazon Cognito Developer Guide .

          NOTE:
              When you use the ClientMetadata parameter, remember that  Amazon
              Cognito won't do the following:

              o Store the ClientMetadata value. This data is available only to
                Lambda triggers that are assigned to a user  pool  to  support
                custom  workflows. If your user pool configuration doesn't in-
                clude triggers, the ClientMetadata parameter  serves  no  pur-
                pose.

              o Validate the ClientMetadata value.

              o Encrypt  the ClientMetadata value. Don't use Amazon Cognito to
                provide sensitive information.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       ChallengeName -> (string)
          The   name   of   the   challenge.   For   more   information,   see
          AdminInitiateAuth .

       Session -> (string)
          The  session  that  should be passed both ways in challenge-response
          calls to the service. If the caller  must  pass  another  challenge,
          they  return a session with other challenge parameters. This session
          should be passed as it is to  the  next  RespondToAuthChallenge  API
          call.

       ChallengeParameters -> (map)
          The    challenge    parameters.    For    more    information,   see
          AdminInitiateAuth .

          key -> (string)

          value -> (string)

       AuthenticationResult -> (structure)
          The result returned by the server in response to the  authentication
          request.

          AccessToken -> (string)
              A  valid access token that Amazon Cognito issued to the user who
              you want to authenticate.

          ExpiresIn -> (integer)
              The expiration period of the authentication result in seconds.

          TokenType -> (string)
              The token type.

          RefreshToken -> (string)
              The refresh token.

          IdToken -> (string)
              The ID token.

          NewDeviceMetadata -> (structure)
              The new device metadata from an authentication result.

              DeviceKey -> (string)
                 The device key.

              DeviceGroupKey -> (string)
                 The device group key.



                                             ADMIN-RESPOND-TO-AUTH-CHALLENGE()
