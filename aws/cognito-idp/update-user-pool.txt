UPDATE-USER-POOL()                                          UPDATE-USER-POOL()



NAME
       update-user-pool -

DESCRIPTION
       Updates  the specified user pool with the specified attributes. You can
       get a list of the current user pool settings using  DescribeUserPool  .
       If  you  don't  provide a value for an attribute, it will be set to the
       default value.

       NOTE:
          This action might generate an SMS text  message.  Starting  June  1,
          2021,  US  telecom  carriers  require you to register an origination
          phone number before you can send SMS messages to US  phone  numbers.
          If  you use SMS text messages in Amazon Cognito, you must register a
          phone number with Amazon Pinpoint . Amazon Cognito uses  the  regis-
          tered number automatically. Otherwise, Amazon Cognito users who must
          receive SMS messages might not be able to sign  up,  activate  their
          accounts, or sign in.

          If  you have never used SMS text messages with Amazon Cognito or any
          other Amazon Web Service, Amazon Simple Notification  Service  might
          place your account in the SMS sandbox. In * sandbox mode * , you can
          send messages only to verified phone numbers. After  you  test  your
          app  while in the sandbox environment, you can move out of the sand-
          box and into production. For more information, see SMS message  set-
          tings  for Amazon Cognito user pools in the Amazon Cognito Developer
          Guide .

       See also: AWS API Documentation

       See 'aws help' for descriptions of global parameters.

SYNOPSIS
            update-user-pool
          --user-pool-id <value>
          [--policies <value>]
          [--lambda-config <value>]
          [--auto-verified-attributes <value>]
          [--sms-verification-message <value>]
          [--email-verification-message <value>]
          [--email-verification-subject <value>]
          [--verification-message-template <value>]
          [--sms-authentication-message <value>]
          [--user-attribute-update-settings <value>]
          [--mfa-configuration <value>]
          [--device-configuration <value>]
          [--email-configuration <value>]
          [--sms-configuration <value>]
          [--user-pool-tags <value>]
          [--admin-create-user-config <value>]
          [--user-pool-add-ons <value>]
          [--account-recovery-setting <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]

OPTIONS
       --user-pool-id (string)
          The user pool ID for the user pool you want to update.

       --policies (structure)
          A container with the policies you want to update in a user pool.

          PasswordPolicy -> (structure)
              The password policy.

              MinimumLength -> (integer)
                 The minimum length of the password in  the  policy  that  you
                 have set. This value can't be less than 6.

              RequireUppercase -> (boolean)
                 In  the  password policy that you have set, refers to whether
                 you have required users to use at least one uppercase  letter
                 in their password.

              RequireLowercase -> (boolean)
                 In  the  password policy that you have set, refers to whether
                 you have required users to use at least one lowercase  letter
                 in their password.

              RequireNumbers -> (boolean)
                 In  the  password policy that you have set, refers to whether
                 you have required users to use at least one number  in  their
                 password.

              RequireSymbols -> (boolean)
                 In  the  password policy that you have set, refers to whether
                 you have required users to use at least one symbol  in  their
                 password.

              TemporaryPasswordValidityDays -> (integer)
                 The number of days a temporary password is valid in the pass-
                 word policy. If the user doesn't sign in during this time, an
                 administrator must reset their password.

                 NOTE:
                     When  you  set  TemporaryPasswordValidityDays  for a user
                     pool, you can no longer set a value for  the  legacy  Un-
                     usedAccountValidityDays parameter in that user pool.

       Shorthand Syntax:

          PasswordPolicy={MinimumLength=integer,RequireUppercase=boolean,RequireLowercase=boolean,RequireNumbers=boolean,RequireSymbols=boolean,TemporaryPasswordValidityDays=integer}

       JSON Syntax:

          {
            "PasswordPolicy": {
              "MinimumLength": integer,
              "RequireUppercase": true|false,
              "RequireLowercase": true|false,
              "RequireNumbers": true|false,
              "RequireSymbols": true|false,
              "TemporaryPasswordValidityDays": integer
            }
          }

       --lambda-config (structure)
          The  Lambda configuration information from the request to update the
          user pool.

          PreSignUp -> (string)
              A pre-registration Lambda trigger.

          CustomMessage -> (string)
              A custom Message Lambda trigger.

          PostConfirmation -> (string)
              A post-confirmation Lambda trigger.

          PreAuthentication -> (string)
              A pre-authentication Lambda trigger.

          PostAuthentication -> (string)
              A post-authentication Lambda trigger.

          DefineAuthChallenge -> (string)
              Defines the authentication challenge.

          CreateAuthChallenge -> (string)
              Creates an authentication challenge.

          VerifyAuthChallengeResponse -> (string)
              Verifies the authentication challenge response.

          PreTokenGeneration -> (string)
              A Lambda trigger that is invoked before token generation.

          UserMigration -> (string)
              The user migration Lambda config type.

          CustomSMSSender -> (structure)
              A custom SMS sender Lambda trigger.

              LambdaVersion -> (string)
                 Signature of the "request" attribute in the "event"  informa-
                 tion  that  Amazon  Cognito  passes to your custom SMS Lambda
                 function. The only supported value is V1_0 .

              LambdaArn -> (string)
                 The Amazon Resource Name (ARN) of the  Lambda  function  that
                 Amazon Cognito activates to send SMS notifications to users.

          CustomEmailSender -> (structure)
              A custom email sender Lambda trigger.

              LambdaVersion -> (string)
                 Signature  of the "request" attribute in the "event" informa-
                 tion Amazon Cognito passes to your custom email Lambda  func-
                 tion. The only supported value is V1_0 .

              LambdaArn -> (string)
                 The  Amazon  Resource  Name (ARN) of the Lambda function that
                 Amazon Cognito  activates  to  send  email  notifications  to
                 users.

          KMSKeyID -> (string)
              The  Amazon  Resource  Name (ARN) of an KMS key . Amazon Cognito
              uses the key to encrypt codes and temporary  passwords  sent  to
              CustomEmailSender and CustomSMSSender .

       Shorthand Syntax:

          PreSignUp=string,CustomMessage=string,PostConfirmation=string,PreAuthentication=string,PostAuthentication=string,DefineAuthChallenge=string,CreateAuthChallenge=string,VerifyAuthChallengeResponse=string,PreTokenGeneration=string,UserMigration=string,CustomSMSSender={LambdaVersion=string,LambdaArn=string},CustomEmailSender={LambdaVersion=string,LambdaArn=string},KMSKeyID=string

       JSON Syntax:

          {
            "PreSignUp": "string",
            "CustomMessage": "string",
            "PostConfirmation": "string",
            "PreAuthentication": "string",
            "PostAuthentication": "string",
            "DefineAuthChallenge": "string",
            "CreateAuthChallenge": "string",
            "VerifyAuthChallengeResponse": "string",
            "PreTokenGeneration": "string",
            "UserMigration": "string",
            "CustomSMSSender": {
              "LambdaVersion": "V1_0",
              "LambdaArn": "string"
            },
            "CustomEmailSender": {
              "LambdaVersion": "V1_0",
              "LambdaArn": "string"
            },
            "KMSKeyID": "string"
          }

       --auto-verified-attributes (list)
          The  attributes  that are automatically verified when Amazon Cognito
          requests to update user pools.

          (string)

       Syntax:

          "string" "string" ...

          Where valid values are:
            phone_number
            email

       --sms-verification-message (string)
          A container with information about the SMS verification message.

       --email-verification-message (string)
          The contents of the email verification message.

       --email-verification-subject (string)
          The subject of the email verification message.

       --verification-message-template (structure)
          The template for verification messages.

          SmsMessage -> (string)
              The template for SMS messages that Amazon Cognito sends to  your
              users.

          EmailMessage -> (string)
              The  template  for  email  messages that Amazon Cognito sends to
              your users. You can set an EmailMessage  template  only  if  the
              value   of   EmailSendingAccount   is   DEVELOPER  .  When  your
              EmailSendingAccount is DEVELOPER , your user  pool  sends  email
              messages with your own Amazon SES configuration.

          EmailSubject -> (string)
              The  subject line for the email message template. You can set an
              EmailSubject template only if the value  of  EmailSendingAccount
              is DEVELOPER . When your EmailSendingAccount is DEVELOPER , your
              user pool sends email messages with your own Amazon SES configu-
              ration.

          EmailMessageByLink -> (string)
              The  email  message  template for sending a confirmation link to
              the user. You can set an EmailMessageByLink template only if the
              value   of   EmailSendingAccount   is   DEVELOPER  .  When  your
              EmailSendingAccount is DEVELOPER , your user  pool  sends  email
              messages with your own Amazon SES configuration.

          EmailSubjectByLink -> (string)
              The  subject  line  for the email message template for sending a
              confirmation link to the user. You can set an EmailSubjectByLink
              template only if the value of EmailSendingAccount is DEVELOPER .
              When your EmailSendingAccount is  DEVELOPER  ,  your  user  pool
              sends email messages with your own Amazon SES configuration.

          DefaultEmailOption -> (string)
              The default email option.

       Shorthand Syntax:

          SmsMessage=string,EmailMessage=string,EmailSubject=string,EmailMessageByLink=string,EmailSubjectByLink=string,DefaultEmailOption=string

       JSON Syntax:

          {
            "SmsMessage": "string",
            "EmailMessage": "string",
            "EmailSubject": "string",
            "EmailMessageByLink": "string",
            "EmailSubjectByLink": "string",
            "DefaultEmailOption": "CONFIRM_WITH_LINK"|"CONFIRM_WITH_CODE"
          }

       --sms-authentication-message (string)
          The contents of the SMS authentication message.

       --user-attribute-update-settings (structure)
          The  settings for updates to user attributes. These settings include
          the property AttributesRequireVerificationBeforeUpdate , a user-pool
          setting that tells Amazon Cognito how to handle changes to the value
          of your users' email address and phone number attributes.  For  more
          information,  see  Verifying updates to to email addresses and phone
          numbers .

          AttributesRequireVerificationBeforeUpdate -> (list)
              Requires that your user verifies their email address, phone num-
              ber, or both before Amazon Cognito updates the value of that at-
              tribute. When you update a user attribute that has  this  option
              activated,  Amazon  Cognito  sends a verification message to the
              new phone number or email address. Amazon Cognito doesnt  change
              the value of the attribute until your user responds to the veri-
              fication message and confirms the new value.

              You can verify an updated email address or phone number  with  a
              VerifyUserAttribute   API   request.   You  can  also  call  the
              UpdateUserAttributes or AdminUpdateUserAttributes  API  and  set
              email_verified or phone_number_verified to true.

              When  AttributesRequireVerificationBeforeUpdate  is  false, your
              user pool doesn't  require  that  your  users  verify  attribute
              changes before Amazon Cognito updates them. In a user pool where
              AttributesRequireVerificationBeforeUpdate is false,  API  opera-
              tions  that  change  attribute  values  can immediately update a
              users email or phone_number attribute.

              (string)

       Shorthand Syntax:

          AttributesRequireVerificationBeforeUpdate=string,string

       JSON Syntax:

          {
            "AttributesRequireVerificationBeforeUpdate": ["phone_number"|"email", ...]
          }

       --mfa-configuration (string)
          Possible values include:

          o OFF - MFA tokens aren't required and  can't  be  specified  during
            user registration.

          o ON  -  MFA tokens are required for all user registrations. You can
            only specify ON when you're initially creating a  user  pool.  You
            can  use  the  SetUserPoolMfaConfig API operation to turn MFA "ON"
            for existing user pools.

          o OPTIONAL - Users have the option when registering to create an MFA
            token.

          Possible values:

          o OFF

          o ON

          o OPTIONAL

       --device-configuration (structure)
          Device configuration.

          ChallengeRequiredOnNewDevice -> (boolean)
              When  true, device authentication can replace SMS and time-based
              one-time password (TOTP) factors for multi-factor authentication
              (MFA).

              NOTE:
                 Users  that sign in with devices that have not been confirmed
                 or remembered will still have to  provide  a  second  factor,
                 whether  or  not  ChallengeRequiredOnNewDevice  is true, when
                 your user pool requires MFA.

          DeviceOnlyRememberedOnUserPrompt -> (boolean)
              When true, users can opt in to remembering  their  device.  Your
              app  code  must  use  callback  functions  to  return the user's
              choice.

       Shorthand Syntax:

          ChallengeRequiredOnNewDevice=boolean,DeviceOnlyRememberedOnUserPrompt=boolean

       JSON Syntax:

          {
            "ChallengeRequiredOnNewDevice": true|false,
            "DeviceOnlyRememberedOnUserPrompt": true|false
          }

       --email-configuration (structure)
          The email configuration of your user pool. The  email  configuration
          type sets your preferred sending method, Amazon Web Services Region,
          and sender for email invitation and verification messages from  your
          user pool.

          SourceArn -> (string)
              The  ARN  of a verified email address in Amazon SES. Amazon Cog-
              nito uses this email address in one of the following  ways,  de-
              pending  on  the  value that you specify for the EmailSendingAc-
              count parameter:

              o If you specify COGNITO_DEFAULT , Amazon Cognito uses this  ad-
                dress as the custom FROM address when it emails your users us-
                ing its built-in email account.

              o If you specify DEVELOPER , Amazon Cognito  emails  your  users
                with this address by calling Amazon SES on your behalf.

              The Region value of the SourceArn parameter must indicate a sup-
              ported Amazon Web Services Region of your user pool.  Typically,
              the  Region  in  the  SourceArn and the user pool Region are the
              same. For more information, see Amazon SES  email  configuration
              regions in the Amazon Cognito Developer Guide .

          ReplyToEmailAddress -> (string)
              The destination to which the receiver of the email should reply.

          EmailSendingAccount -> (string)
              Specifies whether Amazon Cognito uses its built-in functionality
              to send your users email messages, or uses  your  Amazon  Simple
              Email  Service email configuration. Specify one of the following
              values:
                 COGNITO_DEFAULT

              When Amazon Cognito emails your  users,  it  uses  its  built-in
              email  functionality.  When  you  use the default option, Amazon
              Cognito allows only a limited number of emails each day for your
              user  pool.  For  typical  production  environments, the default
              email limit is  less  than  the  required  delivery  volume.  To
              achieve  a higher delivery volume, specify DEVELOPER to use your
              Amazon SES email configuration.

              To look up the email delivery limit for the default option,  see
              Limits in in the Developer Guide .

              The  default FROM address is no-reply@verificationemail.com . To
              customize the FROM address, provide  the  Amazon  Resource  Name
              (ARN)  of an Amazon SES verified email address for the SourceArn
              parameter.
                 DEVELOPER

              When Amazon Cognito emails your users, it uses your  Amazon  SES
              configuration. Amazon Cognito calls Amazon SES on your behalf to
              send email from your verified email address. When you  use  this
              option, the email delivery limits are the same limits that apply
              to your Amazon SES verified email address  in  your  Amazon  Web
              Services account.

              If  you  use this option, provide the ARN of an Amazon SES veri-
              fied email address for the SourceArn parameter.

              Before Amazon Cognito can email your users,  it  requires  addi-
              tional  permissions  to call Amazon SES on your behalf. When you
              update your user pool with this option, Amazon Cognito creates a
              service-linked  role  ,  which is a type of role, in your Amazon
              Web Services account. This role contains  the  permissions  that
              allow to access Amazon SES and send email messages with your ad-
              dress. For more information about the service-linked  role  that
              Amazon  Cognito creates, see Using Service-Linked Roles for Ama-
              zon Cognito in the Amazon Cognito Developer Guide .

          From -> (string)
              Either the senders email address or the senders name with  their
              email  address.  For  example, testuser@example.com or Test User
              <testuser@example.com> . This address appears before the body of
              the email.

          ConfigurationSet -> (string)
              The  set  of  configuration  rules that can be applied to emails
              sent using Amazon Simple Email Service. A configuration  set  is
              applied  to  an email by including a reference to the configura-
              tion set in the headers of the email. Once applied, all  of  the
              rules  in  that configuration set are applied to the email. Con-
              figuration sets can be used to  apply  the  following  types  of
              rules to emails:
                 Event publishing

              Amazon Simple Email Service can track the number of send, deliv-
              ery, open, click, bounce, and complaint events  for  each  email
              sent.  Use  event  publishing  to  send  information about these
              events to other Amazon Web Services services such as and  Amazon
              CloudWatch
                 IP pool management

              When  leasing  dedicated  IP  addresses with Amazon Simple Email
              Service, you can create groups of IP addresses, called dedicated
              IP  pools.  You  can  then associate the dedicated IP pools with
              configuration sets.

       Shorthand Syntax:

          SourceArn=string,ReplyToEmailAddress=string,EmailSendingAccount=string,From=string,ConfigurationSet=string

       JSON Syntax:

          {
            "SourceArn": "string",
            "ReplyToEmailAddress": "string",
            "EmailSendingAccount": "COGNITO_DEFAULT"|"DEVELOPER",
            "From": "string",
            "ConfigurationSet": "string"
          }

       --sms-configuration (structure)
          The SMS configuration with the settings  that  your  Amazon  Cognito
          user  pool must use to send an SMS message from your Amazon Web Ser-
          vices account through Amazon Simple Notification  Service.  To  send
          SMS  messages with Amazon SNS in the Amazon Web Services Region that
          you want, the Amazon Cognito user pool uses an Identity  and  Access
          Management (IAM) role in your Amazon Web Services account.

          SnsCallerArn -> (string)
              The Amazon Resource Name (ARN) of the Amazon SNS caller. This is
              the ARN of the IAM role in your Amazon Web Services account that
              Amazon  Cognito  will use to send SMS messages. SMS messages are
              subject to a spending limit .

          ExternalId -> (string)
              The external ID provides additional security for your IAM  role.
              You  can  use  an ExternalId with the IAM role that you use with
              Amazon SNS to send SMS messages for your user pool. If you  pro-
              vide  an  ExternalId , your Amazon Cognito user pool includes it
              in the request to assume your IAM role. You  can  configure  the
              role  trust policy to require that Amazon Cognito, and any prin-
              cipal, provide the ExternalID . If you use  the  Amazon  Cognito
              Management Console to create a role for SMS multi-factor authen-
              tication (MFA), Amazon Cognito creates a role with the  required
              permissions  and a trust policy that demonstrates use of the Ex-
              ternalId .

              For more information about the ExternalId of a role, see How  to
              use  an external ID when granting access to your Amazon Web Ser-
              vices resources to a third party

          SnsRegion -> (string)
              The Amazon Web Services Region to use with Amazon  SNS  integra-
              tion.  You  can  choose  the same Region as your user pool, or a
              supported Legacy Amazon SNS alternate Region .

              Amazon Cognito resources in the Asia Pacific (Seoul) Amazon  Web
              Services  Region  must  use your Amazon SNS configuration in the
              Asia Pacific (Tokyo) Region. For more information, see SMS  mes-
              sage settings for Amazon Cognito user pools .

       Shorthand Syntax:

          SnsCallerArn=string,ExternalId=string,SnsRegion=string

       JSON Syntax:

          {
            "SnsCallerArn": "string",
            "ExternalId": "string",
            "SnsRegion": "string"
          }

       --user-pool-tags (map)
          The tag keys and values to assign to the user pool. A tag is a label
          that you can use to categorize and manage user  pools  in  different
          ways, such as by purpose, owner, environment, or other criteria.

          key -> (string)

          value -> (string)

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --admin-create-user-config (structure)
          The configuration for AdminCreateUser requests.

          AllowAdminCreateUserOnly -> (boolean)
              Set  to True if only the administrator is allowed to create user
              profiles. Set to False if users can sign themselves  up  via  an
              app.

          UnusedAccountValidityDays -> (integer)
              The  user  account  expiration limit, in days, after which a new
              account that hasn't signed in is no longer usable. To reset  the
              account  after  that  time  limit, you must call AdminCreateUser
              again, specifying "RESEND" for the MessageAction parameter.  The
              default value for this parameter is 7.

              NOTE:
                 If you set a value for TemporaryPasswordValidityDays in Pass-
                 wordPolicy , that value will be used, and UnusedAccountValid-
                 ityDays  will be no longer be an available parameter for that
                 user pool.

          InviteMessageTemplate -> (structure)
              The message template to be used for the welcome message  to  new
              users.

              See also Customizing User Invitation Messages .

              SMSMessage -> (string)
                 The message template for SMS messages.

              EmailMessage -> (string)
                 The  message template for email messages. EmailMessage is al-
                 lowed only if EmailSendingAccount is DEVELOPER.

              EmailSubject -> (string)
                 The subject line for email messages. EmailSubject is  allowed
                 only if EmailSendingAccount is DEVELOPER.

       Shorthand Syntax:

          AllowAdminCreateUserOnly=boolean,UnusedAccountValidityDays=integer,InviteMessageTemplate={SMSMessage=string,EmailMessage=string,EmailSubject=string}

       JSON Syntax:

          {
            "AllowAdminCreateUserOnly": true|false,
            "UnusedAccountValidityDays": integer,
            "InviteMessageTemplate": {
              "SMSMessage": "string",
              "EmailMessage": "string",
              "EmailSubject": "string"
            }
          }

       --user-pool-add-ons (structure)
          Enables  advanced security risk detection. Set the key AdvancedSecu-
          rityMode to the value "AUDIT".

          AdvancedSecurityMode -> (string)
              The advanced security mode.

       Shorthand Syntax:

          AdvancedSecurityMode=string

       JSON Syntax:

          {
            "AdvancedSecurityMode": "OFF"|"AUDIT"|"ENFORCED"
          }

       --account-recovery-setting (structure)
          The available verified method a user can use to recover their  pass-
          word when they call ForgotPassword . You can use this setting to de-
          fine a preferred method when a user has more than one method  avail-
          able.  With  this  setting, SMS doesn't qualify for a valid password
          recovery mechanism if the user also has SMS multi-factor authentica-
          tion (MFA) activated. In the absence of this setting, Amazon Cognito
          uses the legacy behavior to determine the recovery method where  SMS
          is preferred through email.

          RecoveryMechanisms -> (list)
              The list of RecoveryOptionTypes .

              (structure)
                 A  map  containing  a  priority as a key, and recovery method
                 name as a value.

                 Priority -> (integer)
                     A positive integer specifying priority of a method with 1
                     being the highest priority.

                 Name -> (string)
                     The recovery method for a user.

       Shorthand Syntax:

          RecoveryMechanisms=[{Priority=integer,Name=string},{Priority=integer,Name=string}]

       JSON Syntax:

          {
            "RecoveryMechanisms": [
              {
                "Priority": integer,
                "Name": "verified_email"|"verified_phone_number"|"admin_only"
              }
              ...
            ]
          }

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

       See 'aws help' for descriptions of global parameters.

EXAMPLES
       To update a user pool

       This example adds tags to a user pool.

       Command:

          aws cognito-idp update-user-pool --user-pool-id us-west-2_aaaaaaaaa --user-pool-tags Team=Blue,Area=West

OUTPUT
       None



                                                            UPDATE-USER-POOL()
