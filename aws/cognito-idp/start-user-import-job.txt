START-USER-IMPORT-JOB()                                START-USER-IMPORT-JOB()



NAME
       start-user-import-job -

DESCRIPTION
       Starts the user import.

       See also: AWS API Documentation

SYNOPSIS
            start-user-import-job
          --user-pool-id <value>
          --job-id <value>
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --user-pool-id (string)
          The user pool ID for the user pool that the users are being imported
          into.

       --job-id (string)
          The job ID for the user import job.

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       To start a user import job

       This example starts a user input job.

       For more information about importing users, see  Importing  Users  into
       User Pools From a CSV File.

       Command:

          aws cognito-idp start-user-import-job --user-pool-id us-west-2_aaaaaaaaa --job-id import-TZqNQvDRnW

       Output:

          {
            "UserImportJob": {
                "JobName": "import-Test10",
                "JobId": "import-lmpxSOuIzH",
                "UserPoolId": "us-west-2_aaaaaaaaa",
                "PreSignedUrl": "PRE_SIGNED_URL",
                "CreationDate": 1548278378.928,
                "StartDate": 1548278397.334,
                "Status": "Pending",
                "CloudWatchLogsRoleArn": "arn:aws:iam::111111111111:role/CognitoCloudWatchLogsRole",
                "ImportedUsers": 0,
                "SkippedUsers": 0,
                "FailedUsers": 0
            }
          }

OUTPUT
       UserImportJob -> (structure)
          The job object that represents the user import job.

          JobName -> (string)
              The job name for the user import job.

          JobId -> (string)
              The job ID for the user import job.

          UserPoolId -> (string)
              The  user pool ID for the user pool that the users are being im-
              ported into.

          PreSignedUrl -> (string)
              The pre-signed URL to be used to upload the .csv file.

          CreationDate -> (timestamp)
              The date the user import job was created.

          StartDate -> (timestamp)
              The date when the user import job was started.

          CompletionDate -> (timestamp)
              The date when the user import job was completed.

          Status -> (string)
              The status of the user import job. One of the following:

              o Created - The job was created but not started.

              o Pending - A transition state. You have started the job, but it
                has not begun importing users yet.

              o InProgress  -  The  job  has  started, and users are being im-
                ported.

              o Stopping - You have stopped the  job,  but  the  job  has  not
                stopped importing users yet.

              o Stopped  -  You  have stopped the job, and the job has stopped
                importing users.

              o Succeeded - The job has completed successfully.

              o Failed - The job has stopped due to an error.

              o Expired - You created a job, but did not start the job  within
                24-48 hours. All data associated with the job was deleted, and
                the job can't be started.

          CloudWatchLogsRoleArn -> (string)
              The role Amazon Resource Name (ARN) for  the  Amazon  CloudWatch
              Logging  role for the user import job. For more information, see
              "Creating the CloudWatch Logs IAM Role" in  the  Amazon  Cognito
              Developer Guide.

          ImportedUsers -> (long)
              The number of users that were successfully imported.

          SkippedUsers -> (long)
              The number of users that were skipped.

          FailedUsers -> (long)
              The number of users that couldn't be imported.

          CompletionMessage -> (string)
              The message returned when the user import job is completed.



                                                       START-USER-IMPORT-JOB()
