CREATE-MANAGED-LOGIN-BRANDING()                CREATE-MANAGED-LOGIN-BRANDING()



NAME
       create-managed-login-branding -

DESCRIPTION
       Creates  a new set of branding settings for a user pool style and asso-
       ciates it with an app client. This operation is the programmatic option
       for the creation of a new style in the branding designer.

       Provides  values for UI customization in a Settings JSON object and im-
       age files in an Assets array. To send the JSON object Document type pa-
       rameter  in Settings , you might need to update to the most recent ver-
       sion of your Amazon Web Services SDK.

       This operation has a 2-megabyte request-size limit and include the  CSS
       settings  and  image assets for your app client. Your branding settings
       might exceed 2MB in size. Amazon Cognito doesn't require that you  pass
       all  parameters  in  one  request and preserves existing style settings
       that you don't specify. If your request is larger than 2MB, separate it
       into multiple requests, each with a size smaller than the limit.

       For  more  information,  see  API  and SDK operations for managed login
       branding

       NOTE:
          Amazon Cognito evaluates Identity and Access Management (IAM)  poli-
          cies  in  requests  for  this API operation. For this operation, you
          must use IAM credentials to authorize requests, and you  must  grant
          yourself the corresponding IAM permission in a policy.
              Learn more

          o Signing Amazon Web Services API Requests

          o Using the Amazon Cognito user pools API and user pool endpoints

       See also: AWS API Documentation

       create-managed-login-branding uses document type values. Document types
       follow the JSON data model where valid values  are:  strings,  numbers,
       booleans,  null,  arrays,  and  objects. For command input, options and
       nested parameters that are labeled with the type document must be  pro-
       vided as JSON. Shorthand syntax does not support document types.

SYNOPSIS
            create-managed-login-branding
          --user-pool-id <value>
          --client-id <value>
          [--use-cognito-provided-values | --no-use-cognito-provided-values]
          [--settings <value>]
          [--assets <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --user-pool-id (string)
          The  ID  of  the  user  pool where you want to create a new branding
          style.

       --client-id (string)
          The app client that you want to create the branding style for.  Each
          style  is  permanently  linked to an app client. To change the style
          for   an   app   client,   delete   the    existing    style    with
          DeleteManagedLoginBranding and create a new one.

       --use-cognito-provided-values | --no-use-cognito-provided-values (bool-
       ean)
          When true, applies the default branding style options.  This  option
          reverts to default style options that are managed by Amazon Cognito.
          You can modify them later in the branding designer.

          When you specify true for this option, you must also omit values for
          Settings and Assets in the request.

       --settings (document)
          A  JSON file, encoded as a Document type, with the the settings that
          you want to apply to your style.

       JSON Syntax:

          {...}

       --assets (list)
          An array of image files that you want to apply to roles  like  back-
          grounds, logos, and icons. Each object must also indicate whether it
          is for dark mode, light mode, or browser-adaptive mode.

          (structure)
              An image file from a managed login  branding  style  in  a  user
              pool.

              This     data     type     is    a    request    parameter    of
              CreateManagedLoginBranding and UpdateManagedLoginBranding ,  and
              a response parameter of DescribeManagedLoginBranding .

              Category -> (string)
                 The  category  that  the image corresponds to in your managed
                 login configuration. Managed login has asset  categories  for
                 different types of logos, backgrounds, and icons.

              ColorMode -> (string)
                 The  display-mode  target  of  the  asset:  light,  dark,  or
                 browser-adaptive. For  example,  Amazon  Cognito  displays  a
                 dark-mode  image  only  when the browser or application is in
                 dark mode, but displays a browser-adaptive file in  all  con-
                 texts.

              Extension -> (string)
                 The file type of the image file.

              Bytes -> (blob)
                 The image file, in Base64-encoded binary.

              ResourceId -> (string)
                 The ID of the asset.

       Shorthand Syntax:

          Category=string,ColorMode=string,Extension=string,Bytes=blob,ResourceId=string ...

       JSON Syntax:

          [
            {
              "Category": "FAVICON_ICO"|"FAVICON_SVG"|"EMAIL_GRAPHIC"|"SMS_GRAPHIC"|"AUTH_APP_GRAPHIC"|"PASSWORD_GRAPHIC"|"PASSKEY_GRAPHIC"|"PAGE_HEADER_LOGO"|"PAGE_HEADER_BACKGROUND"|"PAGE_FOOTER_LOGO"|"PAGE_FOOTER_BACKGROUND"|"PAGE_BACKGROUND"|"FORM_BACKGROUND"|"FORM_LOGO"|"IDP_BUTTON_ICON",
              "ColorMode": "LIGHT"|"DARK"|"DYNAMIC",
              "Extension": "ICO"|"JPEG"|"PNG"|"SVG"|"WEBP",
              "Bytes": blob,
              "ResourceId": "string"
            }
            ...
          ]

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       ManagedLoginBranding -> (structure)
          The details of the branding style that you created.

          ManagedLoginBrandingId -> (string)
              The ID of the managed login branding style.

          UserPoolId -> (string)
              The user pool where the branding style is assigned.

          UseCognitoProvidedValues -> (boolean)
              When  true, applies the default branding style options. This op-
              tion reverts to a "blank" style that you can modify later in the
              branding designer.

          Settings -> (document)
              A  JSON  file, encoded as a Document type, with the the settings
              that you want to apply to your style.

          Assets -> (list)
              An array of image files that you want to  apply  to  roles  like
              backgrounds,  logos,  and  icons. Each object must also indicate
              whether it is for dark mode,  light  mode,  or  browser-adaptive
              mode.

              (structure)
                 An  image  file from a managed login branding style in a user
                 pool.

                 This    data    type    is    a    request    parameter    of
                 CreateManagedLoginBranding  and  UpdateManagedLoginBranding ,
                 and a response parameter of DescribeManagedLoginBranding .

                 Category -> (string)
                     The category that the image corresponds to in  your  man-
                     aged  login  configuration. Managed login has asset cate-
                     gories for different types  of  logos,  backgrounds,  and
                     icons.

                 ColorMode -> (string)
                     The  display-mode  target  of  the asset: light, dark, or
                     browser-adaptive. For example, Amazon Cognito displays  a
                     dark-mode  image  only when the browser or application is
                     in dark mode, but displays a browser-adaptive file in all
                     contexts.

                 Extension -> (string)
                     The file type of the image file.

                 Bytes -> (blob)
                     The image file, in Base64-encoded binary.

                 ResourceId -> (string)
                     The ID of the asset.

          CreationDate -> (timestamp)
              The  date and time when the item was created. Amazon Cognito re-
              turns this timestamp in UNIX epoch time format. Your  SDK  might
              render  the output in a human-readable format like ISO 8601 or a
              Java Date object.

          LastModifiedDate -> (timestamp)
              The date and time when the item was modified. Amazon Cognito re-
              turns  this  timestamp in UNIX epoch time format. Your SDK might
              render the output in a human-readable format like ISO 8601 or  a
              Java Date object.



                                               CREATE-MANAGED-LOGIN-BRANDING()
