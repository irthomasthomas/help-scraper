BATCH-GET-IMAGE()                                            BATCH-GET-IMAGE()



NAME
       batch-get-image -

DESCRIPTION
       Gets  detailed  information for an image. Images are specified with ei-
       ther an imageTag or imageDigest .

       When an image is pulled, the BatchGetImage API is called  once  to  re-
       trieve the image manifest.

       See also: AWS API Documentation

SYNOPSIS
            batch-get-image
          [--registry-id <value>]
          --repository-name <value>
          --image-ids <value>
          [--accepted-media-types <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --registry-id (string)
          The Amazon Web Services account ID associated with the registry that
          contains the images to describe. If you do not specify  a  registry,
          the default registry is assumed.

       --repository-name (string)
          The repository that contains the images to describe.

       --image-ids (list)
          A list of image ID references that correspond to images to describe.
          The format of the imageIds reference  is  imageTag=tag  or  imageDi-
          gest=digest .

          (structure)
              An object with identifying information for an image in an Amazon
              ECR repository.

              imageDigest -> (string)
                 The sha256 digest of the image manifest.

              imageTag -> (string)
                 The tag used for the image.

       Shorthand Syntax:

          imageDigest=string,imageTag=string ...

       JSON Syntax:

          [
            {
              "imageDigest": "string",
              "imageTag": "string"
            }
            ...
          ]

       --accepted-media-types (list)
          The accepted media types for the request.

          Valid values: application/vnd.docker.distribution.manifest.v1+json |
          application/vnd.docker.distribution.manifest.v2+json    |   applica-
          tion/vnd.oci.image.manifest.v1+json

          (string)

       Syntax:

          "string" "string" ...

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

EXAMPLES
       NOTE:
          To use the following examples, you must have the AWS  CLI  installed
          and  configured.  See  the Getting started guide in the AWS CLI User
          Guide for more information.

          Unless otherwise  stated,  all  examples  have  unix-like  quotation
          rules.  These  examples  will  need to be adapted to your terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       Example 1: To get an image

       The  following  batch-get-image  example  gets  an  image  with the tag
       v1.13.6 in a repository called cluster-autoscaler in the  default  reg-
       istry for an account.

          aws ecr batch-get-image \
              --repository-name cluster-autoscaler \
              --image-ids imageTag=v1.13.6

       Output:

          {
              "images": [
                  {
                      "registryId": "012345678910",
                      "repositoryName": "cluster-autoscaler",
                      "imageId": {
                          "imageDigest": "sha256:4a1c6567c38904384ebc64e35b7eeddd8451110c299e3368d2210066487d97e5",
                          "imageTag": "v1.13.6"
                      },
                      "imageManifest": "{\n   \"schemaVersion\": 2,\n   \"mediaType\": \"application/vnd.docker.distribution.manifest.v2+json\",\n   \"config\": {\n      \"mediaType\": \"application/vnd.docker.container.image.v1+json\",\n      \"size\": 2777,\n      \"digest\": \"sha256:6171c7451a50945f8ddd72f7732cc04d7a0d1f48138a426b2e64387fdeb834ed\"\n   },\n   \"layers\": [\n      {\n         \"mediaType\": \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n         \"size\": 17743696,\n         \"digest\": \"sha256:39fafc05754f195f134ca11ecdb1c9a691ab0848c697fffeb5a85f900caaf6e1\"\n      },\n      {\n         \"mediaType\": \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n         \"size\": 2565026,\n         \"digest\": \"sha256:8c8a779d3a537b767ae1091fe6e00c2590afd16767aa6096d1b318d75494819f\"\n      },\n      {\n         \"mediaType\": \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n         \"size\": 28005981,\n         \"digest\": \"sha256:c44ba47496991c9982ee493b47fd25c252caabf2b4ae7dd679c9a27b6a3c8fb7\"\n      },\n      {\n         \"mediaType\": \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n         \"size\": 775,\n         \"digest\": \"sha256:e2c388b44226544363ca007be7b896bcce1baebea04da23cbd165eac30be650f\"\n      }\n   ]\n}"
                  }
              ],
              "failures": []
          }

       Example 2: To get multiple images

       The  following  batch-get-image  example displays details of all images
       tagged with prod and team1 in the specified repository.

          aws ecr batch-get-image \
              --repository-name MyRepository \
              --image-ids imageTag=prod imageTag=team1

       Output:

          {
              "images": [
                  {
                      "registryId": "123456789012",
                      "repositoryName": "MyRepository",
                      "imageId": {
                          "imageDigest": "sha256:123456789012",
                          "imageTag": "prod"
                      },
                      "imageManifest": "manifestExample1"
                  },
                  {
                      "registryId": "567890121234",
                      "repositoryName": "MyRepository",
                      "imageId": {
                          "imageDigest": "sha256:123456789012",
                          "imageTag": "team1"
                      },
                      "imageManifest": "manifestExample2"
                  }
              ],
              "failures": []
          }

       For more information, see Images in the Amazon ECR User Guide.

OUTPUT
       images -> (list)
          A list of image objects corresponding to the image references in the
          request.

          (structure)
              An object representing an Amazon ECR image.

              registryId -> (string)
                 The  Amazon  Web Services account ID associated with the reg-
                 istry containing the image.

              repositoryName -> (string)
                 The name of the repository associated with the image.

              imageId -> (structure)
                 An object containing the image tag and image  digest  associ-
                 ated with an image.

                 imageDigest -> (string)
                     The sha256 digest of the image manifest.

                 imageTag -> (string)
                     The tag used for the image.

              imageManifest -> (string)
                 The image manifest associated with the image.

              imageManifestMediaType -> (string)
                 The manifest media type of the image.

       failures -> (list)
          Any failures associated with the call.

          (structure)
              An object representing an Amazon ECR image failure.

              imageId -> (structure)
                 The image ID associated with the failure.

                 imageDigest -> (string)
                     The sha256 digest of the image manifest.

                 imageTag -> (string)
                     The tag used for the image.

              failureCode -> (string)
                 The code associated with the failure.

              failureReason -> (string)
                 The reason for the failure.



                                                             BATCH-GET-IMAGE()
