UPDATE-REPOSITORY-CREATION-TEMPLATE()    UPDATE-REPOSITORY-CREATION-TEMPLATE()



NAME
       update-repository-creation-template -

DESCRIPTION
       Updates an existing repository creation template.

       See also: AWS API Documentation

SYNOPSIS
            update-repository-creation-template
          --prefix <value>
          [--description <value>]
          [--encryption-configuration <value>]
          [--resource-tags <value>]
          [--image-tag-mutability <value>]
          [--repository-policy <value>]
          [--lifecycle-policy <value>]
          [--applied-for <value>]
          [--custom-role-arn <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --prefix (string)
          The  repository namespace prefix that matches an existing repository
          creation template in the registry. All  repositories  created  using
          this  namespace  prefix  will have the settings defined in this tem-
          plate applied. For example, a prefix of  prod  would  apply  to  all
          repositories beginning with prod/ . This includes a repository named
          prod/team1 as well as a repository named prod/repository1 .

          To apply a template to all repositories in your registry that  don't
          have  an  associated creation template, you can use ROOT as the pre-
          fix.

       --description (string)
          A description for the repository creation template.

       --encryption-configuration (structure)
          The encryption configuration to associate with the  repository  cre-
          ation template.

          encryptionType -> (string)
              The encryption type to use.

              If  you use the KMS encryption type, the contents of the reposi-
              tory will be encrypted using  server-side  encryption  with  Key
              Management  Service  key  stored in KMS. When you use KMS to en-
              crypt your data, you can either use the default Amazon Web  Ser-
              vices  managed  KMS  key for Amazon ECR, or specify your own KMS
              key, which  you  already  created.  For  more  information,  see
              Protecting  data  using  server-side  encryption with an KMS key
              stored in Key Management Service (SSE-KMS) in the Amazon  Simple
              Storage Service Console Developer Guide .

              If   you  use  the  AES256  encryption  type,  Amazon  ECR  uses
              server-side encryption with Amazon  S3-managed  encryption  keys
              which  encrypts the images in the repository using an AES256 en-
              cryption algorithm. For more information,  see  Protecting  data
              using  server-side  encryption with Amazon S3-managed encryption
              keys (SSE-S3) in the Amazon Simple Storage Service  Console  De-
              veloper Guide .

          kmsKey -> (string)
              If  you  use the KMS encryption type, specify the KMS key to use
              for encryption. The full ARN of the KMS key must  be  specified.
              The  key  must exist in the same Region as the repository. If no
              key is specified, the default Amazon Web  Services  managed  KMS
              key for Amazon ECR will be used.

       Shorthand Syntax:

          encryptionType=string,kmsKey=string

       JSON Syntax:

          {
            "encryptionType": "AES256"|"KMS",
            "kmsKey": "string"
          }

       --resource-tags (list)
          The  metadata  to apply to the repository to help you categorize and
          organize. Each tag consists of a key and an optional value, both  of
          which  you  define.  Tag keys can have a maximum character length of
          128 characters, and tag values can have  a  maximum  length  of  256
          characters.

          (structure)
              The  metadata  to apply to a resource to help you categorize and
              organize them. Each tag consists of a key and a value,  both  of
              which  you  define. Tag keys can have a maximum character length
              of 128 characters, and tag values can have a maximum  length  of
              256 characters.

              Key -> (string)
                 One  part  of a key-value pair that make up a tag. A key is a
                 general label that acts like a category for more specific tag
                 values.

              Value -> (string)
                 A value acts as a descriptor within a tag category (key).

       Shorthand Syntax:

          Key=string,Value=string ...

       JSON Syntax:

          [
            {
              "Key": "string",
              "Value": "string"
            }
            ...
          ]

       --image-tag-mutability (string)
          Updates  the  tag mutability setting for the repository. If this pa-
          rameter is omitted, the default setting  of  MUTABLE  will  be  used
          which will allow image tags to be overwritten. If IMMUTABLE is spec-
          ified, all image tags within the repository will be immutable  which
          will prevent them from being overwritten.

          Possible values:

          o MUTABLE

          o IMMUTABLE

       --repository-policy (string)
          Updates  the repository policy created using the template. A reposi-
          tory policy is a permissions policy associated with a repository  to
          control access permissions.

       --lifecycle-policy (string)
          Updates  the  lifecycle policy associated with the specified reposi-
          tory creation template.

       --applied-for (list)
          Updates the list of enumerable strings representing the  Amazon  ECR
          repository creation scenarios that this template will apply towards.
          The two supported scenarios are PULL_THROUGH_CACHE and REPLICATION

          (string)

       Syntax:

          "string" "string" ...

          Where valid values are:
            REPLICATION
            PULL_THROUGH_CACHE

       --custom-role-arn (string)
          The ARN of the role to be assumed by Amazon ECR. This role  must  be
          in the same account as the registry that you are configuring.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       registryId -> (string)
          The registry ID associated with the request.

       repositoryCreationTemplate -> (structure)
          The details of the repository creation template associated with  the
          request.

          prefix -> (string)
              The  repository  namespace prefix associated with the repository
              creation template.

          description -> (string)
              The description associated with  the  repository  creation  tem-
              plate.

          encryptionConfiguration -> (structure)
              The encryption configuration associated with the repository cre-
              ation template.

              encryptionType -> (string)
                 The encryption type to use.

                 If you use the KMS  encryption  type,  the  contents  of  the
                 repository  will  be  encrypted  using server-side encryption
                 with Key Management Service key stored in KMS. When  you  use
                 KMS to encrypt your data, you can either use the default Ama-
                 zon Web Services managed KMS key for Amazon ECR,  or  specify
                 your  own KMS key, which you already created. For more infor-
                 mation, see Protecting data using server-side encryption with
                 an  KMS key stored in Key Management Service (SSE-KMS) in the
                 Amazon Simple Storage Service Console Developer Guide .

                 If you use  the  AES256  encryption  type,  Amazon  ECR  uses
                 server-side encryption with Amazon S3-managed encryption keys
                 which encrypts the images in the repository using  an  AES256
                 encryption  algorithm.  For  more information, see Protecting
                 data using server-side encryption with Amazon S3-managed  en-
                 cryption  keys  (SSE-S3) in the Amazon Simple Storage Service
                 Console Developer Guide .

              kmsKey -> (string)
                 If you use the KMS encryption type, specify the  KMS  key  to
                 use for encryption. The full ARN of the KMS key must be spec-
                 ified. The key must exist in the same Region as  the  reposi-
                 tory. If no key is specified, the default Amazon Web Services
                 managed KMS key for Amazon ECR will be used.

          resourceTags -> (list)
              The metadata to apply to the repository to help  you  categorize
              and  organize. Each tag consists of a key and an optional value,
              both of which you define. Tag keys can have a maximum  character
              length  of  128  characters,  and  tag values can have a maximum
              length of 256 characters.

              (structure)
                 The metadata to apply to a resource to  help  you  categorize
                 and  organize  them.  Each tag consists of a key and a value,
                 both of which you define. Tag keys can have a maximum charac-
                 ter length of 128 characters, and tag values can have a maxi-
                 mum length of 256 characters.

                 Key -> (string)
                     One part of a key-value pair that make up a tag. A key is
                     a  general  label that acts like a category for more spe-
                     cific tag values.

                 Value -> (string)
                     A value acts as a descriptor within a tag category (key).

          imageTagMutability -> (string)
              The tag mutability setting for the repository. If this parameter
              is  omitted,  the  default setting of MUTABLE will be used which
              will allow image tags to be overwritten. If IMMUTABLE is  speci-
              fied,  all  image  tags  within the repository will be immutable
              which will prevent them from being overwritten.

          repositoryPolicy -> (string)
              he repository policy to apply to repositories created using  the
              template. A repository policy is a permissions policy associated
              with a repository to control access permissions.

          lifecyclePolicy -> (string)
              The lifecycle policy to use for repositories created  using  the
              template.

          appliedFor -> (list)
              A  list  of  enumerable Strings representing the repository cre-
              ation scenarios that this template will apply towards.  The  two
              supported scenarios are PULL_THROUGH_CACHE and REPLICATION

              (string)

          customRoleArn -> (string)
              The ARN of the role to be assumed by Amazon ECR.

          createdAt -> (timestamp)
              The  date  and time, in JavaScript date format, when the reposi-
              tory creation template was created.

          updatedAt -> (timestamp)
              The date and time, in JavaScript date format, when  the  reposi-
              tory creation template was last updated.



                                         UPDATE-REPOSITORY-CREATION-TEMPLATE()
