UPDATE-TRANSFORMER()                                      UPDATE-TRANSFORMER()



NAME
       update-transformer -

DESCRIPTION
       Updates  the  specified parameters for a transformer. A transformer can
       take an EDI file as input and transform it into a JSON-or XML-formatted
       document. Alternatively, a transformer can take a JSON-or XML-formatted
       document as input and transform it into an EDI file.

       See also: AWS API Documentation

SYNOPSIS
            update-transformer
          --transformer-id <value>
          [--name <value>]
          [--status <value>]
          [--file-format <value>]
          [--mapping-template <value>]
          [--edi-type <value>]
          [--sample-document <value>]
          [--input-conversion <value>]
          [--mapping <value>]
          [--output-conversion <value>]
          [--sample-documents <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --transformer-id (string)
          Specifies the system-assigned unique identifier for the transformer.

       --name (string)
          Specify a new name for the transformer, if you want to update it.

       --status (string)
          Specifies the transformer's status. You can update the state of  the
          transformer, from active to inactive , or inactive to active .

          Possible values:

          o active

          o inactive

       --file-format (string)
          Specifies  that  the currently supported file formats for EDI trans-
          formations are JSON and XML .

          Possible values:

          o XML

          o JSON

          o NOT_USED

       --mapping-template (string)
          Specifies the mapping template for the transformer. This template is
          used to map the parsed EDI file using JSONata or XSLT.

          NOTE:
              This parameter is available for backwards compatibility. Use the
              Mapping data type instead.

       --edi-type (tagged union structure)
          Specifies the details for the EDI standard that is  being  used  for
          the  transformer.  Currently, only X12 is supported. X12 is a set of
          standards and corresponding messages that define  specific  business
          documents.

          NOTE:
              This  is a Tagged Union structure. Only one of the following top
              level keys can be set: x12Details.

          x12Details -> (structure)
              Returns the details for the EDI standard that is being used  for
              the  transformer. Currently, only X12 is supported. X12 is a set
              of standards and corresponding  messages  that  define  specific
              business documents.

              transactionSet -> (string)
                 Returns an enumerated type where each value identifies an X12
                 transaction set. Transaction sets are maintained by  the  X12
                 Accredited Standards Committee.

              version -> (string)
                 Returns  the version to use for the specified X12 transaction
                 set.

       Shorthand Syntax:

          x12Details={transactionSet=string,version=string}

       JSON Syntax:

          {
            "x12Details": {
              "transactionSet": "X12_110"|"X12_180"|"X12_204"|"X12_210"|"X12_211"|"X12_214"|"X12_215"|"X12_259"|"X12_260"|"X12_266"|"X12_269"|"X12_270"|"X12_271"|"X12_274"|"X12_275"|"X12_276"|"X12_277"|"X12_278"|"X12_310"|"X12_315"|"X12_322"|"X12_404"|"X12_410"|"X12_417"|"X12_421"|"X12_426"|"X12_810"|"X12_820"|"X12_824"|"X12_830"|"X12_832"|"X12_834"|"X12_835"|"X12_837"|"X12_844"|"X12_846"|"X12_849"|"X12_850"|"X12_852"|"X12_855"|"X12_856"|"X12_860"|"X12_861"|"X12_864"|"X12_865"|"X12_869"|"X12_870"|"X12_940"|"X12_945"|"X12_990"|"X12_997"|"X12_999"|"X12_270_X279"|"X12_271_X279"|"X12_275_X210"|"X12_275_X211"|"X12_276_X212"|"X12_277_X212"|"X12_277_X214"|"X12_277_X364"|"X12_278_X217"|"X12_820_X218"|"X12_820_X306"|"X12_824_X186"|"X12_834_X220"|"X12_834_X307"|"X12_834_X318"|"X12_835_X221"|"X12_837_X222"|"X12_837_X223"|"X12_837_X224"|"X12_837_X291"|"X12_837_X292"|"X12_837_X298"|"X12_999_X231",
              "version": "VERSION_4010"|"VERSION_4030"|"VERSION_5010"|"VERSION_5010_HIPAA"
            }
          }

       --sample-document (string)
          Specifies a sample EDI document that is used by a transformer  as  a
          guide for processing the EDI data.

       --input-conversion (structure)
          To  update,  specify  the InputConversion object, which contains the
          format options for the inbound transformation.

          fromFormat -> (string)
              The format for the transformer input: currently on X12  is  sup-
              ported.

          formatOptions -> (tagged union structure)
              A  structure that contains the formatting options for an inbound
              transformer.

              NOTE:
                 This is a Tagged Union structure. Only one of  the  following
                 top level keys can be set: x12.

              x12 -> (structure)
                 A  structure  that  contains the X12 transaction set and ver-
                 sion. The X12 structure is used when the system transforms an
                 EDI (electronic data interchange) file.

                 NOTE:
                     If  an EDI input file contains more than one transaction,
                     each transaction must have the same transaction  set  and
                     version,  for  example  214/4010. If not, the transformer
                     cannot parse the file.

                 transactionSet -> (string)
                     Returns an enumerated type where each value identifies an
                     X12  transaction  set. Transaction sets are maintained by
                     the X12 Accredited Standards Committee.

                 version -> (string)
                     Returns the version to use for the specified X12 transac-
                     tion set.

       Shorthand Syntax:

          fromFormat=string,formatOptions={x12={transactionSet=string,version=string}}

       JSON Syntax:

          {
            "fromFormat": "X12",
            "formatOptions": {
              "x12": {
                "transactionSet": "X12_110"|"X12_180"|"X12_204"|"X12_210"|"X12_211"|"X12_214"|"X12_215"|"X12_259"|"X12_260"|"X12_266"|"X12_269"|"X12_270"|"X12_271"|"X12_274"|"X12_275"|"X12_276"|"X12_277"|"X12_278"|"X12_310"|"X12_315"|"X12_322"|"X12_404"|"X12_410"|"X12_417"|"X12_421"|"X12_426"|"X12_810"|"X12_820"|"X12_824"|"X12_830"|"X12_832"|"X12_834"|"X12_835"|"X12_837"|"X12_844"|"X12_846"|"X12_849"|"X12_850"|"X12_852"|"X12_855"|"X12_856"|"X12_860"|"X12_861"|"X12_864"|"X12_865"|"X12_869"|"X12_870"|"X12_940"|"X12_945"|"X12_990"|"X12_997"|"X12_999"|"X12_270_X279"|"X12_271_X279"|"X12_275_X210"|"X12_275_X211"|"X12_276_X212"|"X12_277_X212"|"X12_277_X214"|"X12_277_X364"|"X12_278_X217"|"X12_820_X218"|"X12_820_X306"|"X12_824_X186"|"X12_834_X220"|"X12_834_X307"|"X12_834_X318"|"X12_835_X221"|"X12_837_X222"|"X12_837_X223"|"X12_837_X224"|"X12_837_X291"|"X12_837_X292"|"X12_837_X298"|"X12_999_X231",
                "version": "VERSION_4010"|"VERSION_4030"|"VERSION_5010"|"VERSION_5010_HIPAA"
              }
            }
          }

       --mapping (structure)
          Specify  the  structure  that  contains the mapping template and its
          language (either XSLT or JSONATA).

          templateLanguage -> (string)
              The transformation language for the  template,  either  XSLT  or
              JSONATA.

          template -> (string)
              A  string that represents the mapping template, in the transfor-
              mation language specified in templateLanguage .

       Shorthand Syntax:

          templateLanguage=string,template=string

       JSON Syntax:

          {
            "templateLanguage": "XSLT"|"JSONATA",
            "template": "string"
          }

       --output-conversion (structure)
          To update, specify the OutputConversion object, which  contains  the
          format options for the outbound transformation.

          toFormat -> (string)
              The format for the output from an outbound transformer: only X12
              is currently supported.

          formatOptions -> (tagged union structure)
              A structure that contains the X12 transaction  set  and  version
              for the transformer output.

              NOTE:
                 This  is  a Tagged Union structure. Only one of the following
                 top level keys can be set: x12.

              x12 -> (structure)
                 A structure that contains the X12 transaction  set  and  ver-
                 sion. The X12 structure is used when the system transforms an
                 EDI (electronic data interchange) file.

                 NOTE:
                     If an EDI input file contains more than one  transaction,
                     each  transaction  must have the same transaction set and
                     version, for example 214/4010. If  not,  the  transformer
                     cannot parse the file.

                 transactionSet -> (string)
                     Returns an enumerated type where each value identifies an
                     X12 transaction set. Transaction sets are  maintained  by
                     the X12 Accredited Standards Committee.

                 version -> (string)
                     Returns the version to use for the specified X12 transac-
                     tion set.

       Shorthand Syntax:

          toFormat=string,formatOptions={x12={transactionSet=string,version=string}}

       JSON Syntax:

          {
            "toFormat": "X12",
            "formatOptions": {
              "x12": {
                "transactionSet": "X12_110"|"X12_180"|"X12_204"|"X12_210"|"X12_211"|"X12_214"|"X12_215"|"X12_259"|"X12_260"|"X12_266"|"X12_269"|"X12_270"|"X12_271"|"X12_274"|"X12_275"|"X12_276"|"X12_277"|"X12_278"|"X12_310"|"X12_315"|"X12_322"|"X12_404"|"X12_410"|"X12_417"|"X12_421"|"X12_426"|"X12_810"|"X12_820"|"X12_824"|"X12_830"|"X12_832"|"X12_834"|"X12_835"|"X12_837"|"X12_844"|"X12_846"|"X12_849"|"X12_850"|"X12_852"|"X12_855"|"X12_856"|"X12_860"|"X12_861"|"X12_864"|"X12_865"|"X12_869"|"X12_870"|"X12_940"|"X12_945"|"X12_990"|"X12_997"|"X12_999"|"X12_270_X279"|"X12_271_X279"|"X12_275_X210"|"X12_275_X211"|"X12_276_X212"|"X12_277_X212"|"X12_277_X214"|"X12_277_X364"|"X12_278_X217"|"X12_820_X218"|"X12_820_X306"|"X12_824_X186"|"X12_834_X220"|"X12_834_X307"|"X12_834_X318"|"X12_835_X221"|"X12_837_X222"|"X12_837_X223"|"X12_837_X224"|"X12_837_X291"|"X12_837_X292"|"X12_837_X298"|"X12_999_X231",
                "version": "VERSION_4010"|"VERSION_4030"|"VERSION_5010"|"VERSION_5010_HIPAA"
              }
            }
          }

       --sample-documents (structure)
          Specify a structure that contains the Amazon S3 bucket and an  array
          of  the  corresponding  keys  used to identify the location for your
          sample documents.

          bucketName -> (string)
              Contains the Amazon S3 bucket that is used to hold  your  sample
              documents.

          keys -> (list)
              Contains an array of the Amazon S3 keys used to identify the lo-
              cation for your sample documents.

              (structure)
                 An array of the Amazon S3 keys used to identify the  location
                 for your sample documents.

                 input -> (string)
                     An array of keys for your input sample documents.

                 output -> (string)
                     An array of keys for your output sample documents.

       Shorthand Syntax:

          bucketName=string,keys=[{input=string,output=string},{input=string,output=string}]

       JSON Syntax:

          {
            "bucketName": "string",
            "keys": [
              {
                "input": "string",
                "output": "string"
              }
              ...
            ]
          }

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       transformerId -> (string)
          Returns the system-assigned unique identifier for the transformer.

       transformerArn -> (string)
          Returns an Amazon Resource Name (ARN) for a specific Amazon Web Ser-
          vices resource, such  as  a  capability,  partnership,  profile,  or
          transformer.

       name -> (string)
          Returns the name of the transformer.

       status -> (string)
          Returns  the state of the newly created transformer. The transformer
          can be either active or inactive . For the transformer to be used in
          a capability, its status must active .

       createdAt -> (timestamp)
          Returns a timestamp for creation date and time of the transformer.

       modifiedAt -> (timestamp)
          Returns a timestamp for last time the transformer was modified.

       fileFormat -> (string)
          Returns  that the currently supported file formats for EDI transfor-
          mations are JSON and XML .

       mappingTemplate -> (string)
          Returns the mapping template for the transformer. This  template  is
          used to map the parsed EDI file using JSONata or XSLT.

       ediType -> (tagged union structure)
          Returns  the details for the EDI standard that is being used for the
          transformer. Currently, only X12 is supported. X12 is a set of stan-
          dards and corresponding messages that define specific business docu-
          ments.

          NOTE:
              This is a Tagged Union structure. Only one of the following  top
              level keys can be set: x12Details.

          x12Details -> (structure)
              Returns  the details for the EDI standard that is being used for
              the transformer. Currently, only X12 is supported. X12 is a  set
              of  standards  and  corresponding  messages that define specific
              business documents.

              transactionSet -> (string)
                 Returns an enumerated type where each value identifies an X12
                 transaction  set.  Transaction sets are maintained by the X12
                 Accredited Standards Committee.

              version -> (string)
                 Returns the version to use for the specified X12  transaction
                 set.

       sampleDocument -> (string)
          Returns  a  sample  EDI  document that is used by a transformer as a
          guide for processing the EDI data.

       inputConversion -> (structure)
          Returns the InputConversion object, which contains  the  format  op-
          tions for the inbound transformation.

          fromFormat -> (string)
              The  format  for the transformer input: currently on X12 is sup-
              ported.

          formatOptions -> (tagged union structure)
              A structure that contains the formatting options for an  inbound
              transformer.

              NOTE:
                 This  is  a Tagged Union structure. Only one of the following
                 top level keys can be set: x12.

              x12 -> (structure)
                 A structure that contains the X12 transaction  set  and  ver-
                 sion. The X12 structure is used when the system transforms an
                 EDI (electronic data interchange) file.

                 NOTE:
                     If an EDI input file contains more than one  transaction,
                     each  transaction  must have the same transaction set and
                     version, for example 214/4010. If  not,  the  transformer
                     cannot parse the file.

                 transactionSet -> (string)
                     Returns an enumerated type where each value identifies an
                     X12 transaction set. Transaction sets are  maintained  by
                     the X12 Accredited Standards Committee.

                 version -> (string)
                     Returns the version to use for the specified X12 transac-
                     tion set.

       mapping -> (structure)
          Returns the structure that contains the  mapping  template  and  its
          language (either XSLT or JSONATA).

          templateLanguage -> (string)
              The  transformation  language  for  the template, either XSLT or
              JSONATA.

          template -> (string)
              A string that represents the mapping template, in the  transfor-
              mation language specified in templateLanguage .

       outputConversion -> (structure)
          Returns  the  OutputConversion object, which contains the format op-
          tions for the outbound transformation.

          toFormat -> (string)
              The format for the output from an outbound transformer: only X12
              is currently supported.

          formatOptions -> (tagged union structure)
              A  structure  that  contains the X12 transaction set and version
              for the transformer output.

              NOTE:
                 This is a Tagged Union structure. Only one of  the  following
                 top level keys can be set: x12.

              x12 -> (structure)
                 A  structure  that  contains the X12 transaction set and ver-
                 sion. The X12 structure is used when the system transforms an
                 EDI (electronic data interchange) file.

                 NOTE:
                     If  an EDI input file contains more than one transaction,
                     each transaction must have the same transaction  set  and
                     version,  for  example  214/4010. If not, the transformer
                     cannot parse the file.

                 transactionSet -> (string)
                     Returns an enumerated type where each value identifies an
                     X12  transaction  set. Transaction sets are maintained by
                     the X12 Accredited Standards Committee.

                 version -> (string)
                     Returns the version to use for the specified X12 transac-
                     tion set.

       sampleDocuments -> (structure)
          Returns  a structure that contains the Amazon S3 bucket and an array
          of the corresponding keys used to identify  the  location  for  your
          sample documents.

          bucketName -> (string)
              Contains  the  Amazon S3 bucket that is used to hold your sample
              documents.

          keys -> (list)
              Contains an array of the Amazon S3 keys used to identify the lo-
              cation for your sample documents.

              (structure)
                 An  array of the Amazon S3 keys used to identify the location
                 for your sample documents.

                 input -> (string)
                     An array of keys for your input sample documents.

                 output -> (string)
                     An array of keys for your output sample documents.



                                                          UPDATE-TRANSFORMER()
