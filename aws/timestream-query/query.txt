QUERY()                                                                QUERY()



NAME
       query -

DESCRIPTION
          Query  is  a  synchronous  operation that enables you to run a query
          against your Amazon Timestream data.

       If you enabled QueryInsights , this API also returns insights and  met-
       rics  related  to the query that you executed. QueryInsights helps with
       performance tuning of your query. For more information  about  QueryIn-
       sights  ,  see  Using  query  insights  to  optimize  queries in Amazon
       Timestream .

       NOTE:
              The maximum number of Query API requests you're allowed to  make
              with  QueryInsights  enabled is 1 query per second (QPS). If you
              exceed this query rate, it might result in throttling.

          Query will time out after 60 seconds. You must  update  the  default
          timeout  in the SDK to support a timeout of 60 seconds. See the code
          sample for details.

       Your query request will fail in the following cases:

       o If you submit a Query request with the same client token  outside  of
         the 5-minute idempotency window.

       o If  you submit a Query request with the same client token, but change
         other parameters, within the 5-minute idempotency window.

       o If the size of the row (including the query metadata) exceeds  1  MB,
         then  the  query  will fail with the following error message:   Query
         aborted as max page response size has been exceeded by the output re-
         sult row

       o If the IAM principal of the query initiator and the result reader are
         not the same and/or the query initiator and the result reader do  not
         have the same query string in the query requests, the query will fail
         with an Invalid pagination token error.

       See also: AWS API Documentation

       query is a paginated operation. Multiple API calls may be issued in or-
       der to retrieve the entire data set of results. You can disable pagina-
       tion by providing the --no-paginate argument.  When using --output text
       and  the --query argument on a paginated response, the --query argument
       must extract data from the results of the following query  expressions:
       Rows

SYNOPSIS
            query
          --query-string <value>
          [--client-token <value>]
          [--query-insights <value>]
          [--cli-input-json <value>]
          [--starting-token <value>]
          [--page-size <value>]
          [--max-items <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --query-string (string)
          The query to be run by Timestream.

       --client-token (string)
          Unique, case-sensitive string of up to 64 ASCII characters specified
          when a Query request is made. Providing a ClientToken makes the call
          to  Query   idempotent  . This means that running the same query re-
          peatedly will produce the same result. In other words, making multi-
          ple  identical Query requests has the same effect as making a single
          request. When using ClientToken in a query, note the following:

          o If the Query API is instantiated without a ClientToken , the Query
            SDK generates a ClientToken on your behalf.

          o If the Query invocation only contains the ClientToken but does not
            include a NextToken , that invocation of Query is assumed to be  a
            new query run.

          o If  the invocation contains NextToken , that particular invocation
            is assumed to be a subsequent invocation of a prior  call  to  the
            Query API, and a result set is returned.

          o After 4 hours, any request with the same ClientToken is treated as
            a new request.

       --query-insights (structure)
          Encapsulates settings for enabling QueryInsights .

          Enabling QueryInsights returns insights and metrics in  addition  to
          query  results for the query that you executed. You can use QueryIn-
          sights to tune your query performance.

          Mode -> (string)
              Provides the following modes to enable QueryInsights :

              o ENABLED_WITH_RATE_CONTROL   Enables  QueryInsights   for   the
                queries  being  processed. This mode also includes a rate con-
                trol mechanism, which limits the QueryInsights  feature  to  1
                query per second (QPS).

              o DISABLED  Disables QueryInsights .

       Shorthand Syntax:

          Mode=string

       JSON Syntax:

          {
            "Mode": "ENABLED_WITH_RATE_CONTROL"|"DISABLED"
          }

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --starting-token (string)
          A token to specify where to start paginating. This is the  NextToken
          from a previously truncated response.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --page-size (integer)
          The size of each page to get in the AWS service call. This does  not
          affect the number of items returned in the command's output. Setting
          a smaller page size results in more calls to the  AWS  service,  re-
          trieving  fewer  items  in  each call. This can help prevent the AWS
          service calls from timing out.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --max-items (integer)
          The  total number of items to return in the command's output. If the
          total number of items available is more than the value specified,  a
          NextToken is provided in the command's output. To resume pagination,
          provide the NextToken value in the starting-token argument of a sub-
          sequent  command. Do not use the NextToken response element directly
          outside of the AWS CLI.

          For usage examples, see Pagination in the AWS Command Line Interface
          User Guide .

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       QueryId -> (string)
          A unique ID for the given query.

       NextToken -> (string)
          A pagination token that can be used again on a Query call to get the
          next set of results.

       Rows -> (list)
          The result set rows returned by the query.

          (structure)
              Represents a single row in the query results.

              Data -> (list)
                 List of data points in a single row of the result set.

                 (structure)
                     Datum represents a single data point in a query result.

                     ScalarValue -> (string)
                        Indicates  if the data point is a scalar value such as
                        integer, string, double, or Boolean.

                     TimeSeriesValue -> (list)
                        Indicates if the data point is a timeseries data type.

                        (structure)
                            The timeseries data type represents the values  of
                            a  measure over time. A time series is an array of
                            rows of timestamps and measure values,  with  rows
                            sorted  in  ascending order of time. A TimeSeries-
                            DataPoint is a single data point in the  time  se-
                            ries.  It  represents  a  tuple  of (time, measure
                            value) in a time series.

                            Time -> (string)
                               The timestamp when the measure value  was  col-
                               lected.

                            Value -> (structure)
                               The measure value for the data point.

                               ScalarValue -> (string)
                                   Indicates  if  the  data  point is a scalar
                                   value such as integer, string,  double,  or
                                   Boolean.

                               TimeSeriesValue -> (list)
                                   Indicates if the data point is a timeseries
                                   data type.

                                   (structure)
                                      The timeseries data type represents  the
                                      values  of  a  measure over time. A time
                                      series is an array of rows of timestamps
                                      and  measure values, with rows sorted in
                                      ascending order of time.  A  TimeSeries-
                                      DataPoint  is a single data point in the
                                      time series. It represents  a  tuple  of
                                      (time, measure value) in a time series.

                                      Time -> (string)
                                          The timestamp when the measure value
                                          was collected.

                                      ( ... recursive ... )

                               ArrayValue -> (list)
                                   Indicates if the data point is an array.

                                   ( ... recursive ... )

                               RowValue -> (structure)
                                   Indicates if the data point is a row.

                                   Data -> (list)
                                      List of data points in a single  row  of
                                      the result set.

                                      ( ... recursive ... )

                               NullValue -> (boolean)
                                   Indicates if the data point is null.

                     ArrayValue -> (list)
                        Indicates if the data point is an array.

                        (structure)
                            Datum  represents  a  single data point in a query
                            result.

                            ScalarValue -> (string)
                               Indicates if the data point is a  scalar  value
                               such as integer, string, double, or Boolean.

                            TimeSeriesValue -> (list)
                               Indicates  if  the  data  point is a timeseries
                               data type.

                               (structure)
                                   The timeseries  data  type  represents  the
                                   values  of  a measure over time. A time se-
                                   ries is an array of rows of timestamps  and
                                   measure values, with rows sorted in ascend-
                                   ing order of time. A TimeSeriesDataPoint is
                                   a  single data point in the time series. It
                                   represents a tuple of (time, measure value)
                                   in a time series.

                                   Time -> (string)
                                      The timestamp when the measure value was
                                      collected.

                                   ( ... recursive ... )

                            RowValue -> (structure)
                               Indicates if the data point is a row.

                            NullValue -> (boolean)
                               Indicates if the data point is null.

                     RowValue -> (structure)
                        Indicates if the data point is a row.

                        Data -> (list)
                            List of data points in a single row of the  result
                            set.

                            (structure)
                               Datum represents a single data point in a query
                               result.

                               ScalarValue -> (string)
                                   Indicates if the data  point  is  a  scalar
                                   value  such  as integer, string, double, or
                                   Boolean.

                               TimeSeriesValue -> (list)
                                   Indicates if the data point is a timeseries
                                   data type.

                                   (structure)
                                      The  timeseries data type represents the
                                      values of a measure over  time.  A  time
                                      series is an array of rows of timestamps
                                      and measure values, with rows sorted  in
                                      ascending  order  of time. A TimeSeries-
                                      DataPoint is a single data point in  the
                                      time  series.  It  represents a tuple of
                                      (time, measure value) in a time series.

                                      Time -> (string)
                                          The timestamp when the measure value
                                          was collected.

                                      ( ... recursive ... )

                               ( ... recursive ... )NullValue -> (boolean)
                                   Indicates if the data point is null.

                     NullValue -> (boolean)
                        Indicates if the data point is null.

       ColumnInfo -> (list)
          The column data types of the returned result set.

          (structure)
              Contains  the  metadata  for  query  results  such as the column
              names, data types, and other attributes.

              Name -> (string)
                 The name of the result set column. The name of the result set
                 is available for columns of all data types except for arrays.

              Type -> (structure)
                 The  data type of the result set column. The data type can be
                 a scalar or complex. Scalar data types are integers, strings,
                 doubles,  Booleans,  and others. Complex data types are types
                 such as arrays, rows, and others.

                 ScalarType -> (string)
                     Indicates if the column is of type string, integer, Bool-
                     ean, double, timestamp, date, time. For more information,
                     see Supported data types .

                 ArrayColumnInfo -> (structure)
                     Indicates if the column is an array.

                     Name -> (string)
                        The name of the result set column. The name of the re-
                        sult  set  is  available for columns of all data types
                        except for arrays.

                     Type -> (structure)
                        The data type of the result set column. The data  type
                        can  be a scalar or complex. Scalar data types are in-
                        tegers, strings, doubles, Booleans, and  others.  Com-
                        plex  data  types  are types such as arrays, rows, and
                        others.

                        ScalarType -> (string)
                            Indicates if the column is of type  string,  inte-
                            ger,  Boolean,  double, timestamp, date, time. For
                            more information, see Supported data types .

                        ( ... recursive ... )( ... recursive  ...  )RowColumn-
                        Info -> (list)
                            Indicates if the column is a row.

                            ( ... recursive ... )

                 TimeSeriesMeasureValueColumnInfo -> (structure)
                     Indicates if the column is a timeseries data type.

                     Name -> (string)
                        The name of the result set column. The name of the re-
                        sult set is available for columns of  all  data  types
                        except for arrays.

                     Type -> (structure)
                        The  data type of the result set column. The data type
                        can be a scalar or complex. Scalar data types are  in-
                        tegers,  strings,  doubles, Booleans, and others. Com-
                        plex data types are types such as  arrays,  rows,  and
                        others.

                        ScalarType -> (string)
                            Indicates  if  the column is of type string, inte-
                            ger, Boolean, double, timestamp, date,  time.  For
                            more information, see Supported data types .

                        (  ...  recursive ... )( ... recursive ... )RowColumn-
                        Info -> (list)
                            Indicates if the column is a row.

                            ( ... recursive ... )

                 RowColumnInfo -> (list)
                     Indicates if the column is a row.

                     (structure)
                        Contains the metadata for query results  such  as  the
                        column names, data types, and other attributes.

                        Name -> (string)
                            The name of the result set column. The name of the
                            result set is available for columns  of  all  data
                            types except for arrays.

                        Type -> (structure)
                            The  data  type of the result set column. The data
                            type can be a scalar or complex. Scalar data types
                            are integers, strings, doubles, Booleans, and oth-
                            ers. Complex data types are types such as  arrays,
                            rows, and others.

                            ScalarType -> (string)
                               Indicates  if the column is of type string, in-
                               teger, Boolean, double, timestamp, date,  time.
                               For  more information, see Supported data types
                               .

                            ( ... recursive ... )( ... recursive ... )

       QueryStatus -> (structure)
          Information about the status of the query,  including  progress  and
          bytes scanned.

          ProgressPercentage -> (double)
              The progress of the query, expressed as a percentage.

          CumulativeBytesScanned -> (long)
              The  amount of data scanned by the query in bytes. This is a cu-
              mulative sum and represents the total amount  of  bytes  scanned
              since the query was started.

          CumulativeBytesMetered -> (long)
              The  amount  of data scanned by the query in bytes that you will
              be charged for. This is a cumulative sum and represents the  to-
              tal  amount of data that you will be charged for since the query
              was started. The charge is applied only once and is  either  ap-
              plied when the query completes running or when the query is can-
              celled.

       QueryInsightsResponse -> (structure)
          Encapsulates QueryInsights containing insights and  metrics  related
          to the query that you executed.

          QuerySpatialCoverage -> (structure)
              Provides  insights  into  the spatial coverage of the query, in-
              cluding the table with sub-optimal (max) spatial  pruning.  This
              information  can help you identify areas for improvement in your
              partitioning strategy to enhance spatial pruning.

              Max -> (structure)
                 Provides insights into the spatial coverage of  the  executed
                 query  and  the table with the most inefficient spatial prun-
                 ing.

                 o Value  The maximum ratio of spatial coverage.

                 o TableArn  The Amazon Resource Name (ARN) of the table  with
                   sub-optimal spatial pruning.

                 o PartitionKey   The  partition  key  used  for partitioning,
                   which can be a default measure_name or a CDPK.

                 Value -> (double)
                     The maximum ratio of spatial coverage.

                 TableArn -> (string)
                     The Amazon Resource Name (ARN) of the table with the most
                     sub-optimal spatial pruning.

                 PartitionKey -> (list)
                     The  partition  key used for partitioning, which can be a
                     default measure_name or a customer defined partition  key
                     .

                     (string)

          QueryTemporalRange -> (structure)
              Provides  insights into the temporal range of the query, includ-
              ing the table with the largest (max) time range.  Following  are
              some of the potential options for optimizing time-based pruning:

              o Add missing time-predicates.

              o Remove functions around the time predicates.

              o Add time predicates to all the sub-queries.

              Max -> (structure)
                 Encapsulates  the  following properties that provide insights
                 into the most sub-optimal performing table  on  the  temporal
                 axis:

                 o Value   The  maximum  duration  in  nanoseconds between the
                   start and end of the query.

                 o TableArn  The Amazon Resource Name (ARN) of the table which
                   is queried with the largest time range.

                 Value -> (long)
                     The maximum duration in nanoseconds between the start and
                     end of the query.

                 TableArn -> (string)
                     The Amazon Resource Name (ARN)  of  the  table  which  is
                     queried with the largest time range.

          QueryTableCount -> (long)
              Indicates the number of tables in the query.

          OutputRows -> (long)
              Indicates the total number of rows returned as part of the query
              result set. You can use this data to validate if the  number  of
              rows  in the result set have changed as part of the query tuning
              exercise.

          OutputBytes -> (long)
              Indicates the size of query result set in  bytes.  You  can  use
              this  data  to validate if the result set has changed as part of
              the query tuning exercise.

          UnloadPartitionCount -> (long)
              Indicates the partitions created by the Unload operation.

          UnloadWrittenRows -> (long)
              Indicates the rows written by the Unload query.

          UnloadWrittenBytes -> (long)
              Indicates the size, in bytes, written by the Unload operation.



                                                                       QUERY()
