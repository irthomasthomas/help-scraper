REGISTER-CLUSTER()                                          REGISTER-CLUSTER()



NAME
       register-cluster -

DESCRIPTION
       Connects a Kubernetes cluster to the Amazon EKS control plane.

       Any Kubernetes cluster can be connected to the Amazon EKS control plane
       to view current information about the cluster and its nodes.

       Cluster connection requires two steps. First, send a ``   RegisterClus-
       terRequest `` to add it to the Amazon EKS control plane.

       Second,  a Manifest containing the activationID and activationCode must
       be applied to the Kubernetes cluster through it's  native  provider  to
       provide visibility.

       After  the  manifest  is  updated and applied, the connected cluster is
       visible to the Amazon EKS control plane. If the manifest isn't  applied
       within  three days, the connected cluster will no longer be visible and
       must be deregistered using DeregisterCluster .

       See also: AWS API Documentation

SYNOPSIS
            register-cluster
          --name <value>
          --connector-config <value>
          [--client-request-token <value>]
          [--tags <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --name (string)
          A unique name for this cluster in your Amazon Web Services Region.

       --connector-config (structure)
          The configuration settings required to connect the Kubernetes  clus-
          ter to the Amazon EKS control plane.

          roleArn -> (string)
              The Amazon Resource Name (ARN) of the role that is authorized to
              request the connector configuration.

          provider -> (string)
              The cloud provider for the target cluster to connect.

       Shorthand Syntax:

          roleArn=string,provider=string

       JSON Syntax:

          {
            "roleArn": "string",
            "provider": "EKS_ANYWHERE"|"ANTHOS"|"GKE"|"AKS"|"OPENSHIFT"|"TANZU"|"RANCHER"|"EC2"|"OTHER"
          }

       --client-request-token (string)
          A unique, case-sensitive identifier that you provide to  ensure  the
          idempotency of the request.

       --tags (map)
          Metadata that assists with categorization and organization. Each tag
          consists of a key and an optional value. You define both. Tags don't
          propagate to any other cluster or Amazon Web Services resources.

          key -> (string)
              One part of a key-value pair that make up a tag. A key is a gen-
              eral label that acts like a category for more specific tag  val-
              ues.

          value -> (string)
              The  optional  part  of  a  key-value pair that make up a tag. A
              value acts as a descriptor within a tag category (key).

       Shorthand Syntax:

          KeyName1=string,KeyName2=string

       JSON Syntax:

          {"string": "string"
            ...}

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       Example 1: Register an external EKS_ANYWHERE Kubernetes cluster to Ama-
       zon EKS

       The  following  register-cluster example registers an external EKS_ANY-
       WHERE Kubernetes cluster to Amazon EKS.

          aws eks register-cluster \
              --name my-eks-anywhere-cluster \
              --connector-config 'roleArn=arn:aws:iam::111122223333:role/AmazonEKSConnectorAgentRole,provider=EKS_ANYWHERE'

       Output:

          {
              "cluster": {
                  "name": "my-eks-anywhere-cluster",
                  "arn": "arn:aws:eks:us-east-2:111122223333:cluster/my-eks-anywhere-cluster",
                  "createdAt": "2024-04-12T12:38:37.561000-04:00",
                  "status": "PENDING",
                  "tags": {},
                  "connectorConfig": {
                      "activationId": "xxxxxxxxACTIVATION_IDxxxxxxxx",
                      "activationCode": "xxxxxxxxACTIVATION_CODExxxxxxxx",
                      "activationExpiry": "2024-04-15T12:38:37.082000-04:00",
                      "provider": "EKS_ANYWHERE",
                      "roleArn": "arn:aws:iam::111122223333:role/AmazonEKSConnectorAgentRole"
                  }
              }
          }

       For more information, see Connecting an external cluster in the  Amazon
       EKS User Guide.

       Example 2: Register any external Kubernetes cluster to Amazon EKS

       The  following  register-cluster example registers an external EKS_ANY-
       WHERE Kubernetes cluster to Amazon EKS.

          aws eks register-cluster \
              --name my-eks-anywhere-cluster \
              --connector-config 'roleArn=arn:aws:iam::111122223333:role/AmazonEKSConnectorAgentRole,provider=OTHER'

       Output:

          {
              "cluster": {
                  "name": "my-onprem-k8s-cluster",
                  "arn": "arn:aws:eks:us-east-2:111122223333:cluster/my-onprem-k8s-cluster",
                  "createdAt": "2024-04-12T12:42:10.861000-04:00",
                  "status": "PENDING",
                  "tags": {},
                  "connectorConfig": {
                      "activationId": "xxxxxxxxACTIVATION_IDxxxxxxxx",
                      "activationCode": "xxxxxxxxACTIVATION_CODExxxxxxxx",
                      "activationExpiry": "2024-04-15T12:42:10.339000-04:00",
                      "provider": "OTHER",
                      "roleArn": "arn:aws:iam::111122223333:role/AmazonEKSConnectorAgentRole"
                  }
              }
          }

       For more information, see Connecting an external cluster in the  Amazon
       EKS User Guide.

OUTPUT
       cluster -> (structure)
          An object representing an Amazon EKS cluster.

          name -> (string)
              The name of your cluster.

          arn -> (string)
              The Amazon Resource Name (ARN) of the cluster.

          createdAt -> (timestamp)
              The Unix epoch timestamp at object creation.

          version -> (string)
              The Kubernetes server version for the cluster.

          endpoint -> (string)
              The endpoint for your Kubernetes API server.

          roleArn -> (string)
              The  Amazon  Resource  Name  (ARN) of the IAM role that provides
              permissions for the Kubernetes control plane to  make  calls  to
              Amazon Web Services API operations on your behalf.

          resourcesVpcConfig -> (structure)
              The  VPC configuration used by the cluster control plane. Amazon
              EKS VPC resources have specific requirements  to  work  properly
              with Kubernetes. For more information, see Cluster VPC consider-
              ations and Cluster security group considerations in  the  Amazon
              EKS User Guide .

              subnetIds -> (list)
                 The subnets associated with your cluster.

                 (string)

              securityGroupIds -> (list)
                 The security groups associated with the cross-account elastic
                 network interfaces that are used to allow  communication  be-
                 tween your nodes and the Kubernetes control plane.

                 (string)

              clusterSecurityGroupId -> (string)
                 The cluster security group that was created by Amazon EKS for
                 the cluster. Managed node groups use this security group  for
                 control-plane-to-data-plane communication.

              vpcId -> (string)
                 The VPC associated with your cluster.

              endpointPublicAccess -> (boolean)
                 Whether the public API server endpoint is enabled.

              endpointPrivateAccess -> (boolean)
                 This  parameter  indicates whether the Amazon EKS private API
                 server endpoint is enabled. If the  Amazon  EKS  private  API
                 server  endpoint  is  enabled,  Kubernetes  API requests that
                 originate from within your cluster's VPC use the private  VPC
                 endpoint instead of traversing the internet. If this value is
                 disabled and you have nodes or Fargate pods in  the  cluster,
                 then  ensure  that  publicAccessCidrs  includes the necessary
                 CIDR blocks for communication with the nodes or Fargate pods.
                 For  more information, see Amazon EKS cluster endpoint access
                 control in the * Amazon EKS User Guide * .

              publicAccessCidrs -> (list)
                 The CIDR blocks that are allowed  access  to  your  cluster's
                 public Kubernetes API server endpoint.

                 (string)

          kubernetesNetworkConfig -> (structure)
              The Kubernetes network configuration for the cluster.

              serviceIpv4Cidr -> (string)
                 The  CIDR block that Kubernetes Pod and Service object IP ad-
                 dresses are assigned from. Kubernetes assigns addresses  from
                 an  IPv4 CIDR block assigned to a subnet that the node is in.
                 If you didn't specify a CIDR block when you created the clus-
                 ter,  then  Kubernetes  assigns  addresses  from  either  the
                 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. If this was spec-
                 ified, then it was specified when the cluster was created and
                 it can't be changed.

              serviceIpv6Cidr -> (string)
                 The CIDR block that Kubernetes pod and service  IP  addresses
                 are assigned from if you created a 1.21 or later cluster with
                 version 1.10.1 or later of the  Amazon  VPC  CNI  add-on  and
                 specified ipv6 for ipFamily when you created the cluster. Ku-
                 bernetes assigns service addresses from the unique local  ad-
                 dress  range  (fc00::/7  ) because you can't specify a custom
                 IPv6 CIDR block when you create the cluster.

              ipFamily -> (string)
                 The IP family used to assign Kubernetes Pod and  Service  ob-
                 jects IP addresses. The IP family is always ipv4 , unless you
                 have a 1.21 or later cluster running version 1.10.1 or  later
                 of  the  Amazon  VPC  CNI plugin for Kubernetes and specified
                 ipv6 when you created the cluster.

          logging -> (structure)
              The logging configuration for your cluster.

              clusterLogging -> (list)
                 The cluster control  plane  logging  configuration  for  your
                 cluster.

                 (structure)
                     An object representing the enabled or disabled Kubernetes
                     control plane logs for your cluster.

                     types -> (list)
                        The available cluster control plane log types.

                        (string)

                     enabled -> (boolean)
                        If a log type is enabled, that log  type  exports  its
                        control  plane  logs to CloudWatch Logs. If a log type
                        isn't enabled, that log type doesn't export  its  con-
                        trol  plane  logs. Each individual log type can be en-
                        abled or disabled independently.

          identity -> (structure)
              The identity provider information for the cluster.

              oidc -> (structure)
                 An object representing the OpenID Connect  identity  provider
                 information.

                 issuer -> (string)
                     The issuer URL for the OIDC identity provider.

          status -> (string)
              The current status of the cluster.

          certificateAuthority -> (structure)
              The certificate-authority-data for your cluster.

              data -> (string)
                 The  Base64-encoded  certificate data required to communicate
                 with your cluster. Add this to the certificate-authority-data
                 section of the kubeconfig file for your cluster.

          clientRequestToken -> (string)
              A  unique,  case-sensitive identifier that you provide to ensure
              the idempotency of the request.

          platformVersion -> (string)
              The platform version of your Amazon EKS cluster. For more infor-
              mation about clusters deployed on the Amazon Web Services Cloud,
              see Platform versions in the * Amazon EKS User  Guide  *  .  For
              more  information  about  local clusters deployed on an Outpost,
              see Amazon EKS local cluster platform versions in the  *  Amazon
              EKS User Guide * .

          tags -> (map)
              Metadata that assists with categorization and organization. Each
              tag consists of a key and an optional value.  You  define  both.
              Tags don't propagate to any other cluster or Amazon Web Services
              resources.

              key -> (string)
                 One part of a key-value pair that make up a tag. A key  is  a
                 general label that acts like a category for more specific tag
                 values.

              value -> (string)
                 The optional part of a key-value pair that make up a  tag.  A
                 value acts as a descriptor within a tag category (key).

          encryptionConfig -> (list)
              The encryption configuration for the cluster.

              (structure)
                 The encryption configuration for the cluster.

                 resources -> (list)
                     Specifies  the  resources  to be encrypted. The only sup-
                     ported value is secrets .

                     (string)

                 provider -> (structure)
                     Key Management Service (KMS) key. Either the ARN  or  the
                     alias can be used.

                     keyArn -> (string)
                        Amazon  Resource  Name  (ARN) or alias of the KMS key.
                        The KMS key must be symmetric and created in the  same
                        Amazon  Web Services Region as the cluster. If the KMS
                        key was created in a different account, the IAM  prin-
                        cipal must have access to the KMS key. For more infor-
                        mation, see Allowing users in other accounts to use  a
                        KMS  key in the Key Management Service Developer Guide
                        .

          connectorConfig -> (structure)
              The configuration used to connect to a cluster for registration.

              activationId -> (string)
                 A unique ID associated with the cluster for registration pur-
                 poses.

              activationCode -> (string)
                 A  unique  code  associated with the cluster for registration
                 purposes.

              activationExpiry -> (timestamp)
                 The expiration time of the connected cluster.  The  cluster's
                 YAML file must be applied through the native provider.

              provider -> (string)
                 The cluster's cloud service provider.

              roleArn -> (string)
                 The  Amazon  Resource  Name  (ARN) of the role to communicate
                 with services from the connected Kubernetes cluster.

          id -> (string)
              The ID of your local Amazon EKS cluster on an  Amazon  Web  Ser-
              vices  Outpost.  This property isn't available for an Amazon EKS
              cluster on the Amazon Web Services cloud.

          health -> (structure)
              An object representing the health of your Amazon EKS cluster.

              issues -> (list)
                 An object representing the health issues of your  Amazon  EKS
                 cluster.

                 (structure)
                     An issue with your Amazon EKS cluster.

                     code -> (string)
                        The error code of the issue.

                     message -> (string)
                        A description of the issue.

                     resourceIds -> (list)
                        The resource IDs that the issue relates to.

                        (string)

          outpostConfig -> (structure)
              An  object  representing  the configuration of your local Amazon
              EKS cluster on an Amazon Web Services Outpost. This object isn't
              available for clusters on the Amazon Web Services cloud.

              outpostArns -> (list)
                 The  ARN  of the Outpost that you specified for use with your
                 local Amazon EKS cluster on Outposts.

                 (string)

              controlPlaneInstanceType -> (string)
                 The Amazon EC2 instance type used for the control plane.  The
                 instance type is the same for all control plane instances.

              controlPlanePlacement -> (structure)
                 An  object  representing  the placement configuration for all
                 the control plane instances of your local Amazon EKS  cluster
                 on  an Amazon Web Services Outpost. For more information, see
                 Capacity considerations in the Amazon EKS User Guide .

                 groupName -> (string)
                     The name of the placement group for the  Kubernetes  con-
                     trol plane instances.

          accessConfig -> (structure)
              The access configuration for the cluster.

              bootstrapClusterCreatorAdminPermissions -> (boolean)
                 Specifies  whether  or  not the cluster creator IAM principal
                 was set as a cluster admin access entry during  cluster  cre-
                 ation time.

              authenticationMode -> (string)
                 The current authentication mode of the cluster.

          upgradePolicy -> (structure)
              This  value indicates if extended support is enabled or disabled
              for the cluster.
                 Learn more about EKS Extended Support in the EKS User Guide.

              supportType -> (string)
                 If the cluster is set to EXTENDED , it  will  enter  extended
                 support at the end of standard support. If the cluster is set
                 to STANDARD , it will be automatically upgraded at the end of
                 standard support.
                     Learn  more  about  EKS  Extended Support in the EKS User
                     Guide.



                                                            REGISTER-CLUSTER()
