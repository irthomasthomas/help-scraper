GET-TOKEN()                                                        GET-TOKEN()



NAME
       get-token -

DESCRIPTION
       Get  a token for authentication with an Amazon EKS cluster. This can be
       used as an alternative to the aws-iam-authenticator.

SYNOPSIS
            get-token
          [--cluster-name <value>]
          [--role-arn <value>]
          [--cluster-id <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --cluster-name (string) Specify the name of the Amazon EKS  cluster  to
       create  a  token for. (Note: for local clusters on AWS Outposts, please
       use --cluster-id parameter)

       --role-arn (string) Assume this role for credentials when  signing  the
       token. Use this optional parameter when the credentials for signing the
       token differ from that of the current role session. Using this  parame-
       ter  results  in new role session credentials that are used to sign the
       token.

       --cluster-id (string) Specify the id of the Amazon EKS cluster to  cre-
       ate a token for. (Note: for local clusters on AWS Outposts only)

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

EXAMPLES
       NOTE:
          To  use  the following examples, you must have the AWS CLI installed
          and configured. See the Getting started guide in the  AWS  CLI  User
          Guide for more information.

          Unless  otherwise  stated,  all  examples  have  unix-like quotation
          rules. These examples will need to be  adapted  to  your  terminal's
          quoting rules. See Using quotation marks with strings in the AWS CLI
          User Guide .

       Example 1: Get an authentication token for an Amazon EKS Cluster  named
       `my-eks-cluster`

       The  following  get-token  example  gets an authentication token for an
       Amazon EKS Cluster named my-eks-cluster.

          aws eks get-token \
              --cluster-name my-eks-cluster

       Output:

          {
              "kind": "ExecCredential",
              "apiVersion": "client.authentication.k8s.io/v1beta1",
              "spec": {},
              "status": {
                  "expirationTimestamp": "2024-04-11T20:59:56Z",
                  "token": "k8s-aws-v1.EXAMPLE_TOKEN_DATA_STRING..."
              }
          }

       Example 2: Gets an authentication token for an Amazon EKS Cluster named
       `my-eks-cluster`  by assuming this roleARN for credentials when signing
       the token

       The following get-token example gets an  authentication  token  for  an
       Amazon  EKS  Cluster  named my-eks-cluster by assuming this roleARN for
       credentials when signing the token.

          aws eks get-token \
              --cluster-name my-eks-cluster \
              --role-arn arn:aws:iam::111122223333:role/eksctl-EKS-Linux-Cluster-v1-24-cluster-ServiceRole-j1k7AfTIQtnM

       Output:

          {
              "kind": "ExecCredential",
              "apiVersion": "client.authentication.k8s.io/v1beta1",
              "spec": {},
              "status": {
                  "expirationTimestamp": "2024-04-11T21:05:26Z",
                  "token": "k8s-aws-v1.EXAMPLE_TOKEN_DATA_STRING..."
              }
          }



                                                                   GET-TOKEN()
