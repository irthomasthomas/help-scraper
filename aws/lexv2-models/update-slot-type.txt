UPDATE-SLOT-TYPE()                                          UPDATE-SLOT-TYPE()



NAME
       update-slot-type -

DESCRIPTION
       Updates the configuration of an existing slot type.

       See also: AWS API Documentation

SYNOPSIS
            update-slot-type
          --slot-type-id <value>
          --slot-type-name <value>
          [--description <value>]
          [--slot-type-values <value>]
          [--value-selection-setting <value>]
          [--parent-slot-type-signature <value>]
          --bot-id <value>
          --bot-version <value>
          --locale-id <value>
          [--external-source-setting <value>]
          [--composite-slot-type-setting <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --slot-type-id (string)
          The unique identifier of the slot type to update.

       --slot-type-name (string)
          The new name of the slot type.

       --description (string)
          The new description of the slot type.

       --slot-type-values (list)
          A  new  list  of  values and their optional synonyms that define the
          values that the slot type can take.

          (structure)
              Each slot type can have a set of values. Each SlotTypeValue rep-
              resents a value that the slot type can take.

              sampleValue -> (structure)
                 The value of the slot type entry.

                 value -> (string)
                     The value that can be used for a slot type.

              synonyms -> (list)
                 Additional values related to the slot type entry.

                 (structure)
                     Defines one of the values for a slot type.

                     value -> (string)
                        The value that can be used for a slot type.

       Shorthand Syntax:

          sampleValue={value=string},synonyms=[{value=string},{value=string}] ...

       JSON Syntax:

          [
            {
              "sampleValue": {
                "value": "string"
              },
              "synonyms": [
                {
                  "value": "string"
                }
                ...
              ]
            }
            ...
          ]

       --value-selection-setting (structure)
          The  strategy  that  Amazon  Lex should use when deciding on a value
          from the list of slot type values.

          resolutionStrategy -> (string)
              Determines the slot resolution strategy that Amazon Lex uses  to
              return slot type values. The field can be set to one of the fol-
              lowing values:

              o OriginalValue - Returns the value entered by the user, if  the
                user value is similar to the slot value.

              o TopResolution  -  If  there is a resolution list for the slot,
                return the first value in the resolution list as the slot type
                value. If there is no resolution list, null is returned.

              If  you don't specify the valueSelectionStrategy, the default is
              OriginalValue.

          regexFilter -> (structure)
              A regular expression used to validate the value of a slot.

              pattern -> (string)
                 A regular expression used to validate the value of a slot.

                 Use a standard regular expression. Amazon  Lex  supports  the
                 following characters in the regular expression:

                 o A-Z, a-z

                 o 0-9

                 o Unicode characters ("u<Unicode>")

                 Represent  Unicode  characters  with four digits, for example
                 "u0041" or "u005A".

                 The following regular expression operators are not supported:

                 o Infinite repeaters:
                   *
                   , +, or {x,} with no upper bound.

                 System Message: WARNING/2 (<string>:, line 249)
                   Inline emphasis start-string without end-string.

                 o Wild card (.)

          advancedRecognitionSetting -> (structure)
              Provides settings that enable advanced recognition settings  for
              slot values.

              audioRecognitionStrategy -> (string)
                 Enables using the slot values as a custom vocabulary for rec-
                 ognizing user utterances.

       Shorthand Syntax:

          resolutionStrategy=string,regexFilter={pattern=string},advancedRecognitionSetting={audioRecognitionStrategy=string}

       JSON Syntax:

          {
            "resolutionStrategy": "OriginalValue"|"TopResolution"|"Concatenation",
            "regexFilter": {
              "pattern": "string"
            },
            "advancedRecognitionSetting": {
              "audioRecognitionStrategy": "UseSlotValuesAsCustomVocabulary"
            }
          }

       --parent-slot-type-signature (string)
          The new built-in slot type that should be used as the parent of this
          slot type.

       --bot-id (string)
          The identifier of the bot that contains the slot type.

       --bot-version (string)
          The version of the bot that contains the slot type. Must be DRAFT .

       --locale-id (string)
          The  identifier  of  the  language and locale that contains the slot
          type. The string must match one of the supported locales.  For  more
          information, see Supported languages .

       --external-source-setting (structure)
          Provides  information  about  the external source of the slot type's
          definition.

          grammarSlotTypeSetting -> (structure)
              Settings required for a slot type based on a  grammar  that  you
              provide.

              source -> (structure)
                 The source of the grammar used to create the slot type.

                 s3BucketName -> (string)
                     The  name  of  the  S3  bucket  that contains the grammar
                     source.

                 s3ObjectKey -> (string)
                     The path to the grammar in the S3 bucket.

                 kmsKeyArn -> (string)
                     The Amazon KMS key required to decrypt  the  contents  of
                     the grammar, if any.

       Shorthand Syntax:

          grammarSlotTypeSetting={source={s3BucketName=string,s3ObjectKey=string,kmsKeyArn=string}}

       JSON Syntax:

          {
            "grammarSlotTypeSetting": {
              "source": {
                "s3BucketName": "string",
                "s3ObjectKey": "string",
                "kmsKeyArn": "string"
              }
            }
          }

       --composite-slot-type-setting (structure)
          Specifications for a composite slot type.

          subSlots -> (list)
              Subslots in the composite slot.

              (structure)
                 Subslot type composition.

                 name -> (string)
                     Name of a constituent sub slot inside a composite slot.

                 slotTypeId -> (string)
                     The  unique  identifier  assigned  to  a  slot type. This
                     refers to either a built-in slot type or the unique slot-
                     TypeId of a custom slot type.

       Shorthand Syntax:

          subSlots=[{name=string,slotTypeId=string},{name=string,slotTypeId=string}]

       JSON Syntax:

          {
            "subSlots": [
              {
                "name": "string",
                "slotTypeId": "string"
              }
              ...
            ]
          }

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       slotTypeId -> (string)
          The unique identifier of the updated slot type.

       slotTypeName -> (string)
          The updated name of the slot type.

       description -> (string)
          The updated description of the slot type.

       slotTypeValues -> (list)
          The updated values that the slot type provides.

          (structure)
              Each slot type can have a set of values. Each SlotTypeValue rep-
              resents a value that the slot type can take.

              sampleValue -> (structure)
                 The value of the slot type entry.

                 value -> (string)
                     The value that can be used for a slot type.

              synonyms -> (list)
                 Additional values related to the slot type entry.

                 (structure)
                     Defines one of the values for a slot type.

                     value -> (string)
                        The value that can be used for a slot type.

       valueSelectionSetting -> (structure)
          The  updated  strategy that Amazon Lex uses to determine which value
          to select from the slot type.

          resolutionStrategy -> (string)
              Determines the slot resolution strategy that Amazon Lex uses  to
              return slot type values. The field can be set to one of the fol-
              lowing values:

              o OriginalValue - Returns the value entered by the user, if  the
                user value is similar to the slot value.

              o TopResolution  -  If  there is a resolution list for the slot,
                return the first value in the resolution list as the slot type
                value. If there is no resolution list, null is returned.

              If  you don't specify the valueSelectionStrategy, the default is
              OriginalValue.

          regexFilter -> (structure)
              A regular expression used to validate the value of a slot.

              pattern -> (string)
                 A regular expression used to validate the value of a slot.

                 Use a standard regular expression. Amazon  Lex  supports  the
                 following characters in the regular expression:

                 o A-Z, a-z

                 o 0-9

                 o Unicode characters ("u<Unicode>")

                 Represent  Unicode  characters  with four digits, for example
                 "u0041" or "u005A".

                 The following regular expression operators are not supported:

                 o Infinite repeaters:
                   *
                   , +, or {x,} with no upper bound.

                 System Message: WARNING/2 (<string>:, line 742)
                   Inline emphasis start-string without end-string.

                 o Wild card (.)

          advancedRecognitionSetting -> (structure)
              Provides settings that enable advanced recognition settings  for
              slot values.

              audioRecognitionStrategy -> (string)
                 Enables using the slot values as a custom vocabulary for rec-
                 ognizing user utterances.

       parentSlotTypeSignature -> (string)
          The updated signature of the built-in slot type that is  the  parent
          of this slot type.

       botId -> (string)
          The identifier of the bot that contains the slot type.

       botVersion -> (string)
          The  version  of the bot that contains the slot type. This is always
          DRAFT .

       localeId -> (string)
          The language and locale of the updated slot type.

       creationDateTime -> (timestamp)
          The timestamp of the date and time that the slot type was created.

       lastUpdatedDateTime -> (timestamp)
          A timestamp of the date and time that the slot  type  was  last  up-
          dated.

       externalSourceSetting -> (structure)
          Provides  information  about  the external source of the slot type's
          definition.

          grammarSlotTypeSetting -> (structure)
              Settings required for a slot type based on a  grammar  that  you
              provide.

              source -> (structure)
                 The source of the grammar used to create the slot type.

                 s3BucketName -> (string)
                     The  name  of  the  S3  bucket  that contains the grammar
                     source.

                 s3ObjectKey -> (string)
                     The path to the grammar in the S3 bucket.

                 kmsKeyArn -> (string)
                     The Amazon KMS key required to decrypt  the  contents  of
                     the grammar, if any.

       compositeSlotTypeSetting -> (structure)
          Specifications for a composite slot type.

          subSlots -> (list)
              Subslots in the composite slot.

              (structure)
                 Subslot type composition.

                 name -> (string)
                     Name of a constituent sub slot inside a composite slot.

                 slotTypeId -> (string)
                     The  unique  identifier  assigned  to  a  slot type. This
                     refers to either a built-in slot type or the unique slot-
                     TypeId of a custom slot type.



                                                            UPDATE-SLOT-TYPE()
