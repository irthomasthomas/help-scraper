CREATE-SLOT-TYPE()                                          CREATE-SLOT-TYPE()



NAME
       create-slot-type -

DESCRIPTION
       Creates a custom slot type

       To  create  a  custom slot type, specify a name for the slot type and a
       set of enumeration values, the values that a slot of this type can  as-
       sume.

       See also: AWS API Documentation

SYNOPSIS
            create-slot-type
          --slot-type-name <value>
          [--description <value>]
          [--slot-type-values <value>]
          [--value-selection-setting <value>]
          [--parent-slot-type-signature <value>]
          --bot-id <value>
          --bot-version <value>
          --locale-id <value>
          [--external-source-setting <value>]
          [--composite-slot-type-setting <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --slot-type-name (string)
          The  name  for  the slot. A slot type name must be unique within the
          intent.

       --description (string)
          A description of the slot type. Use the description to help identify
          the slot type in lists.

       --slot-type-values (list)
          A  list  of  SlotTypeValue  objects that defines the values that the
          slot type can take. Each value can have a list  of  synonyms,  addi-
          tional  values  that help train the machine learning model about the
          values that it resolves for a slot.

          (structure)
              Each slot type can have a set of values. Each SlotTypeValue rep-
              resents a value that the slot type can take.

              sampleValue -> (structure)
                 The value of the slot type entry.

                 value -> (string)
                     The value that can be used for a slot type.

              synonyms -> (list)
                 Additional values related to the slot type entry.

                 (structure)
                     Defines one of the values for a slot type.

                     value -> (string)
                        The value that can be used for a slot type.

       Shorthand Syntax:

          sampleValue={value=string},synonyms=[{value=string},{value=string}] ...

       JSON Syntax:

          [
            {
              "sampleValue": {
                "value": "string"
              },
              "synonyms": [
                {
                  "value": "string"
                }
                ...
              ]
            }
            ...
          ]

       --value-selection-setting (structure)
          Determines  the strategy that Amazon Lex uses to select a value from
          the list of possible values. The field can be set to one of the fol-
          lowing values:

          o ORIGINAL_VALUE  -  Returns  the  value entered by the user, if the
            user value is similar to the slot value.

          o TOP_RESOLUTION - If there is a resolution list for the  slot,  re-
            turn  the first value in the resolution list. If there is no reso-
            lution list, return null.

          If you don't specify the valueSelectionSetting  parameter,  the  de-
          fault is ORIGINAL_VALUE .

          resolutionStrategy -> (string)
              Determines  the slot resolution strategy that Amazon Lex uses to
              return slot type values. The field can be set to one of the fol-
              lowing values:

              o ORIGINAL_VALUE - Returns the value entered by the user, if the
                user value is similar to the slot value.

              o TOP_RESOLUTION - If there is a resolution list for  the  slot,
                return the first value in the resolution list as the slot type
                value. If there is no resolution list, null is returned.

              If you don't specify the valueSelectionStrategy , the default is
              ORIGINAL_VALUE .

          regexFilter -> (structure)
              A regular expression used to validate the value of a slot.

              pattern -> (string)
                 A regular expression used to validate the value of a slot.

                 Use  a  standard  regular expression. Amazon Lex supports the
                 following characters in the regular expression:

                 o A-Z, a-z

                 o 0-9

                 o Unicode characters (" u<Unicode>")

                 Represent Unicode characters with four  digits,  for  example
                 " u0041" or " u005A".

                 The following regular expression operators are not supported:

                 o Infinite repeaters:
                   *
                   , +, or {x,} with no upper bound.

                 System Message: WARNING/2 (<string>:, line 257)
                   Inline emphasis start-string without end-string.

                 o Wild card (.)

          advancedRecognitionSetting -> (structure)
              Provides  settings that enable advanced recognition settings for
              slot values. You can use this to enable using slot values  as  a
              custom vocabulary for recognizing user utterances.

              audioRecognitionStrategy -> (string)
                 Enables using the slot values as a custom vocabulary for rec-
                 ognizing user utterances.

       Shorthand Syntax:

          resolutionStrategy=string,regexFilter={pattern=string},advancedRecognitionSetting={audioRecognitionStrategy=string}

       JSON Syntax:

          {
            "resolutionStrategy": "OriginalValue"|"TopResolution"|"Concatenation",
            "regexFilter": {
              "pattern": "string"
            },
            "advancedRecognitionSetting": {
              "audioRecognitionStrategy": "UseSlotValuesAsCustomVocabulary"
            }
          }

       --parent-slot-type-signature (string)
          The built-in slot type used as a parent of this slot type. When  you
          define  a  parent slot type, the new slot type has the configuration
          of the parent slot type.

          Only AMAZON.AlphaNumeric is supported.

       --bot-id (string)
          The identifier of the bot associated with this slot type.

       --bot-version (string)
          The identifier of the bot version associated with this slot type.

       --locale-id (string)
          The identifier of the language and locale that the slot type will be
          used  in. The string must match one of the supported locales. All of
          the bots, intents, and slots used by the slot  type  must  have  the
          same locale. For more information, see Supported languages .

       --external-source-setting (structure)
          Sets the type of external information used to create the slot type.

          grammarSlotTypeSetting -> (structure)
              Settings  required  for  a slot type based on a grammar that you
              provide.

              source -> (structure)
                 The source of the grammar used to create the slot type.

                 s3BucketName -> (string)
                     The name of the Amazon S3 bucket that contains the  gram-
                     mar source.

                 s3ObjectKey -> (string)
                     The path to the grammar in the Amazon S3 bucket.

                 kmsKeyArn -> (string)
                     The KMS key required to decrypt the contents of the gram-
                     mar, if any.

       Shorthand Syntax:

          grammarSlotTypeSetting={source={s3BucketName=string,s3ObjectKey=string,kmsKeyArn=string}}

       JSON Syntax:

          {
            "grammarSlotTypeSetting": {
              "source": {
                "s3BucketName": "string",
                "s3ObjectKey": "string",
                "kmsKeyArn": "string"
              }
            }
          }

       --composite-slot-type-setting (structure)
          Specifications for a composite slot type.

          subSlots -> (list)
              Subslots in the composite slot.

              (structure)
                 Subslot type composition.

                 name -> (string)
                     Name of a constituent sub slot inside a composite slot.

                 slotTypeId -> (string)
                     The unique identifier  assigned  to  a  slot  type.  This
                     refers to either a built-in slot type or the unique slot-
                     TypeId of a custom slot type.

       Shorthand Syntax:

          subSlots=[{name=string,slotTypeId=string},{name=string,slotTypeId=string}]

       JSON Syntax:

          {
            "subSlots": [
              {
                "name": "string",
                "slotTypeId": "string"
              }
              ...
            ]
          }

       --cli-input-json (string) Performs service operation based on the  JSON
       string  provided. The JSON string follows the format provided by --gen-
       erate-cli-skeleton. If other arguments  are  provided  on  the  command
       line,  the CLI values will override the JSON-provided values. It is not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton  (string)  Prints  a  JSON skeleton to standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for --cli-input-json. If provided with the value output,  it  validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By  default, the AWS CLI uses SSL when communicating with AWS services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable  automatic pagination. If automatic pagination is disabled, the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       slotTypeId -> (string)
          The unique identifier assigned to the slot type. Use this  to  iden-
          tify  the  slot type in the UpdateSlotType and DeleteSlotType opera-
          tions.

       slotTypeName -> (string)
          The name specified for the slot type.

       description -> (string)
          The description specified for the slot type.

       slotTypeValues -> (list)
          The list of values that the slot type can assume.

          (structure)
              Each slot type can have a set of values. Each SlotTypeValue rep-
              resents a value that the slot type can take.

              sampleValue -> (structure)
                 The value of the slot type entry.

                 value -> (string)
                     The value that can be used for a slot type.

              synonyms -> (list)
                 Additional values related to the slot type entry.

                 (structure)
                     Defines one of the values for a slot type.

                     value -> (string)
                        The value that can be used for a slot type.

       valueSelectionSetting -> (structure)
          The strategy that Amazon Lex uses to select a value from the list of
          possible values.

          resolutionStrategy -> (string)
              Determines the slot resolution strategy that Amazon Lex uses  to
              return slot type values. The field can be set to one of the fol-
              lowing values:

              o ORIGINAL_VALUE - Returns the value entered by the user, if the
                user value is similar to the slot value.

              o TOP_RESOLUTION  -  If there is a resolution list for the slot,
                return the first value in the resolution list as the slot type
                value. If there is no resolution list, null is returned.

              If you don't specify the valueSelectionStrategy , the default is
              ORIGINAL_VALUE .

          regexFilter -> (structure)
              A regular expression used to validate the value of a slot.

              pattern -> (string)
                 A regular expression used to validate the value of a slot.

                 Use a standard regular expression. Amazon  Lex  supports  the
                 following characters in the regular expression:

                 o A-Z, a-z

                 o 0-9

                 o Unicode characters (" u<Unicode>")

                 Represent  Unicode  characters  with four digits, for example
                 " u0041" or " u005A".

                 The following regular expression operators are not supported:

                 o Infinite repeaters:
                   *
                   , +, or {x,} with no upper bound.

                 System Message: WARNING/2 (<string>:, line 754)
                   Inline emphasis start-string without end-string.

                 o Wild card (.)

          advancedRecognitionSetting -> (structure)
              Provides settings that enable advanced recognition settings  for
              slot  values.  You can use this to enable using slot values as a
              custom vocabulary for recognizing user utterances.

              audioRecognitionStrategy -> (string)
                 Enables using the slot values as a custom vocabulary for rec-
                 ognizing user utterances.

       parentSlotTypeSignature -> (string)
          The signature of the base slot type specified for the slot type.

       botId -> (string)
          The identifier for the bot associated with the slot type.

       botVersion -> (string)
          The version of the bot associated with the slot type.

       localeId -> (string)
          The specified language and local specified for the slot type.

       creationDateTime -> (timestamp)
          A timestamp of the date and time that the slot type was created.

       externalSourceSetting -> (structure)
          The type of external information used to create the slot type.

          grammarSlotTypeSetting -> (structure)
              Settings  required  for  a slot type based on a grammar that you
              provide.

              source -> (structure)
                 The source of the grammar used to create the slot type.

                 s3BucketName -> (string)
                     The name of the Amazon S3 bucket that contains the  gram-
                     mar source.

                 s3ObjectKey -> (string)
                     The path to the grammar in the Amazon S3 bucket.

                 kmsKeyArn -> (string)
                     The KMS key required to decrypt the contents of the gram-
                     mar, if any.

       compositeSlotTypeSetting -> (structure)
          Specifications for a composite slot type.

          subSlots -> (list)
              Subslots in the composite slot.

              (structure)
                 Subslot type composition.

                 name -> (string)
                     Name of a constituent sub slot inside a composite slot.

                 slotTypeId -> (string)
                     The unique identifier  assigned  to  a  slot  type.  This
                     refers to either a built-in slot type or the unique slot-
                     TypeId of a custom slot type.



                                                            CREATE-SLOT-TYPE()
