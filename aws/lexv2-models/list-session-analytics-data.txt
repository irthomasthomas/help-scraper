LIST-SESSION-ANALYTICS-DATA()                    LIST-SESSION-ANALYTICS-DATA()



NAME
       list-session-analytics-data -

DESCRIPTION
       Retrieves  a  list  of  metadata for individual user sessions with your
       bot. The startDateTime  and  endDateTime  fields  are  required.  These
       fields  define  a time range for which you want to retrieve results. Of
       the optional fields, you can organize  the  results  in  the  following
       ways:

       o Use  the  filters field to filter the results and the sortBy field to
         specify the values by which to sort the results.

       o Use the maxResults field to limit the number of results to return  in
         a single response and the nextToken field to return the next batch of
         results if the response does not return the full set of results.

       See also: AWS API Documentation

SYNOPSIS
            list-session-analytics-data
          --bot-id <value>
          --start-date-time <value>
          --end-date-time <value>
          [--sort-by <value>]
          [--filters <value>]
          [--max-results <value>]
          [--next-token <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --bot-id (string)
          The identifier for the bot for which you want  to  retrieve  session
          analytics.

       --start-date-time (timestamp)
          The  date and time that marks the beginning of the range of time for
          which you want to see session analytics.

       --end-date-time (timestamp)
          The date and time that marks the end of the range of time for  which
          you want to see session analytics.

       --sort-by (structure)
          An  object  specifying  the  measure and method by which to sort the
          session analytics data.

          name -> (string)
              The measure by which to sort the session analytics data.

              o conversationStartTime  The date and time when the conversation
                began.  A conversation is defined as a unique combination of a
                sessionId and an originatingRequestId .

              o numberOfTurns  The number of turns that the session took.

              o conversationDurationSeconds  The duration of the  conversation
                in seconds.

          order -> (string)
              Specifies whether to sort the results in ascending or descending
              order.

       Shorthand Syntax:

          name=string,order=string

       JSON Syntax:

          {
            "name": "ConversationStartTime"|"NumberOfTurns"|"Duration",
            "order": "Ascending"|"Descending"
          }

       --filters (list)
          A list of objects, each of which describes a condition by which  you
          want to filter the results.

          (structure)
              Contains  fields  describing  a condition by which to filter the
              sessions. The expression may be  understood  as  name   operator
              values . For example:

              o LocaleId EQ en  The locale is "en".

              o Duration GT 200  The duration is greater than 200 seconds.

              The operators that each filter supports are listed below:

              o BotAlias  EQ .

              o BotVersion  EQ .

              o LocaleId  EQ .

              o Modality  EQ .

              o Channel  EQ .

              o Duration  EQ , GT , LT .

              o conversationEndState  EQ , CO .

              o SessionId  EQ .

              o OriginatingRequestId  EQ .

              o IntentPath  EQ .

              name -> (string)
                 The  category  by  which to filter the sessions. The descrip-
                 tions for each option are as follows:

                 o BotAlias  The name of the bot alias.

                 o BotVersion  The version of the bot.

                 o LocaleId  The locale of the bot.

                 o Modality  The modality of the session with the bot  (audio,
                   DTMF, or text).

                 o Channel  The channel that the bot is integrated with.

                 o Duration  The duration of the session.

                 o conversationEndState  The final state of the session.

                 o SessionId  The identifier of the session with the bot.

                 o OriginatingRequestId   The  identifier of the first request
                   in a session.

                 o IntentPath  The order of intents taken in a session.

              operator -> (string)
                 The operation by which to filter the category. The  following
                 operations are possible:

                 o CO  Contains

                 o EQ  Equals

                 o GT  Greater than

                 o LT  Less than

                 The operators that each filter supports are listed below:

                 o BotAlias  EQ .

                 o BotVersion  EQ .

                 o LocaleId  EQ .

                 o Modality  EQ .

                 o Channel  EQ .

                 o Duration  EQ , GT , LT .

                 o conversationEndState  EQ , CO .

                 o SessionId  EQ .

                 o OriginatingRequestId  EQ .

                 o IntentPath  EQ .

              values -> (list)
                 An  array  containing  the values of the category by which to
                 apply the operator to filter the  results.  You  can  provide
                 multiple  values if the operator is EQ or CO . If you provide
                 multiple values, you filter for  results  that  equal/contain
                 any  of the values. For example, if the name , operator , and
                 values fields are Modality , EQ , and [Speech,  Text]  ,  the
                 operation  filters  for results where the modality was either
                 Speech or Text .

                 (string)

       Shorthand Syntax:

          name=string,operator=string,values=string,string ...

       JSON Syntax:

          [
            {
              "name": "BotAliasId"|"BotVersion"|"LocaleId"|"Modality"|"Channel"|"Duration"|"ConversationEndState"|"SessionId"|"OriginatingRequestId"|"IntentPath",
              "operator": "EQ"|"GT"|"LT",
              "values": ["string", ...]
            }
            ...
          ]

       --max-results (integer)
          The maximum number of results to return in each page of results.  If
          there  are fewer results than the maximum page size, only the actual
          number of results are returned.

       --next-token (string)
          If the response from the ListSessionAnalyticsData operation contains
          more  results than specified in the maxResults parameter, a token is
          returned in the response.

          Use the returned token in the nextToken parameter of a  ListSession-
          AnalyticsData request to return the next page of results. For a com-
          plete set of results, call  the  ListSessionAnalyticsData  operation
          until the nextToken returned in the response is null.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       botId -> (string)
          The unique identifier of the bot that the sessions belong to.

       nextToken -> (string)
          If the response from the ListSessionAnalyticsData operation contains
          more results than specified in the maxResults parameter, a token  is
          returned in the response.

          Use  the returned token in the nextToken parameter of a ListSession-
          AnalyticsData request to return the next page of results. For a com-
          plete  set  of  results, call the ListSessionAnalyticsData operation
          until the nextToken returned in the response is null.

       sessions -> (list)
          A list of objects, each of which contains information about  a  ses-
          sion with the bot.

          (structure)
              An object containing information about a specific session.

              botAliasId -> (string)
                 The  identifier  of the alias of the bot that the session was
                 held with.

              botVersion -> (string)
                 The version of the bot that the session was held with.

              localeId -> (string)
                 The locale of the bot that the session was held with.

              channel -> (string)
                 The channel that is integrated with the bot that the  session
                 was held with.

              sessionId -> (string)
                 The identifier of the session.

              conversationStartTime -> (timestamp)
                 The date and time when the conversation began. A conversation
                 is defined as a unique combination  of  a  sessionId  and  an
                 originatingRequestId .

              conversationEndTime -> (timestamp)
                 The date and time when the conversation ended. A conversation
                 is defined as a unique combination  of  a  sessionId  and  an
                 originatingRequestId .

              conversationDurationSeconds -> (long)
                 The  duration  of the conversation in seconds. A conversation
                 is defined as a unique combination  of  a  sessionId  and  an
                 originatingRequestId .

              conversationEndState -> (string)
                 The  final  state  of the conversation. A conversation is de-
                 fined as a unique combination of a sessionId and an originat-
                 ingRequestId .

              mode -> (string)
                 The mode of the session. The possible values are as follows:

                 o Speech  The session was spoken.

                 o Text  The session was written.

                 o DTMF   The  session  used  a  touch-tone  keypad (Dual Tone
                   Multi-Frequency).

                 o MultiMode  The session used multiple modes.

              numberOfTurns -> (long)
                 The number of turns that the session took.

              invokedIntentSamples -> (list)
                 A list of objects containing the name of an intent  that  was
                 invoked.

                 (structure)
                     An  object  containing the name of an intent that was in-
                     voked.

                     intentName -> (string)
                        The name of an intent that was invoked.

              originatingRequestId -> (string)
                 The identifier of the first request in a session.



                                                 LIST-SESSION-ANALYTICS-DATA()
