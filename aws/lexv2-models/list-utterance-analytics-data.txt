LIST-UTTERANCE-ANALYTICS-DATA()                LIST-UTTERANCE-ANALYTICS-DATA()



NAME
       list-utterance-analytics-data -

DESCRIPTION
       NOTE:
          To  use  this  API operation, your IAM role must have permissions to
          perform the ListAggregatedUtterances operation, which  provides  ac-
          cess  to  utterance-related analytics. See Viewing utterance statis-
          tics for the IAM policy to apply to the IAM role.

       Retrieves a list of metadata for individual  user  utterances  to  your
       bot. The following fields are required:

       o startDateTime and endDateTime  Define a time range for which you want
         to retrieve results.

       Of the optional fields, you can organize the results in  the  following
       ways:

       o Use  the  filters field to filter the results and the sortBy field to
         specify the values by which to sort the results.

       o Use the maxResults field to limit the number of results to return  in
         a single response and the nextToken field to return the next batch of
         results if the response does not return the full set of results.

       See also: AWS API Documentation

SYNOPSIS
            list-utterance-analytics-data
          --bot-id <value>
          --start-date-time <value>
          --end-date-time <value>
          [--sort-by <value>]
          [--filters <value>]
          [--max-results <value>]
          [--next-token <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --bot-id (string)
          The identifier for the bot for which you want to retrieve  utterance
          analytics.

       --start-date-time (timestamp)
          The  date and time that marks the beginning of the range of time for
          which you want to see utterance analytics.

       --end-date-time (timestamp)
          The date and time that marks the end of the range of time for  which
          you want to see utterance analytics.

       --sort-by (structure)
          An object specifying the measure and method by which to sort the ut-
          terance analytics data.

          name -> (string)
              The measure by which to sort the utterance analytics data.

              o Count  The number of utterances.

              o UtteranceTimestamp  The date and time of the utterance.

          order -> (string)
              Specifies whether to sort the results in ascending or descending
              order.

       Shorthand Syntax:

          name=string,order=string

       JSON Syntax:

          {
            "name": "UtteranceTimestamp",
            "order": "Ascending"|"Descending"
          }

       --filters (list)
          A  list of objects, each of which describes a condition by which you
          want to filter the results.

          (structure)
              Contains fields describing a condition by which  to  filter  the
              utterances.  The  expression may be understood as name  operator
              values . For example:

              o LocaleId EQ Book  The locale is the string "en".

              o UtteranceText CO help  The text of the utterance contains  the
                string "help".

              The operators that each filter supports are listed below:

              o BotAlias  EQ .

              o BotVersion  EQ .

              o LocaleId  EQ .

              o Modality  EQ .

              o Channel  EQ .

              o SessionId  EQ .

              o OriginatingRequestId  EQ .

              o UtteranceState  EQ .

              o UtteranceText  EQ , CO .

              name -> (string)
                 The  category by which to filter the utterances. The descrip-
                 tions for each option are as follows:

                 o BotAlias  The name of the bot alias.

                 o BotVersion  The version of the bot.

                 o LocaleId  The locale of the bot.

                 o Modality  The modality of the session with the bot  (audio,
                   DTMF, or text).

                 o Channel  The channel that the bot is integrated with.

                 o SessionId  The identifier of the session with the bot.

                 o OriginatingRequestId   The  identifier of the first request
                   in a session.

                 o UtteranceState  The state of the utterance.

                 o UtteranceText  The text in the utterance.

              operator -> (string)
                 The operation by which to filter the category. The  following
                 operations are possible:

                 o CO  Contains

                 o EQ  Equals

                 o GT  Greater than

                 o LT  Less than

                 The operators that each filter supports are listed below:

                 o BotAlias  EQ .

                 o BotVersion  EQ .

                 o LocaleId  EQ .

                 o Modality  EQ .

                 o Channel  EQ .

                 o SessionId  EQ .

                 o OriginatingRequestId  EQ .

                 o UtteranceState  EQ .

                 o UtteranceText  EQ , CO .

              values -> (list)
                 An  array  containing  the values of the category by which to
                 apply the operator to filter the  results.  You  can  provide
                 multiple  values if the operator is EQ or CO . If you provide
                 multiple values, you filter for  results  that  equal/contain
                 any  of the values. For example, if the name , operator , and
                 values fields are Modality , EQ , and [Speech,  Text]  ,  the
                 operation  filters  for results where the modality was either
                 Speech or Text .

                 (string)

       Shorthand Syntax:

          name=string,operator=string,values=string,string ...

       JSON Syntax:

          [
            {
              "name": "BotAliasId"|"BotVersion"|"LocaleId"|"Modality"|"Channel"|"SessionId"|"OriginatingRequestId"|"UtteranceState"|"UtteranceText",
              "operator": "EQ"|"GT"|"LT",
              "values": ["string", ...]
            }
            ...
          ]

       --max-results (integer)
          The maximum number of results to return in each page of results.  If
          there  are fewer results than the maximum page size, only the actual
          number of results are returned.

       --next-token (string)
          If the response from the ListUtteranceAnalyticsData  operation  con-
          tains more results than specified in the maxResults parameter, a to-
          ken is returned in the response.

          Use the returned token in the nextToken parameter  of  a  ListUtter-
          anceAnalyticsData  request to return the next page of results. For a
          complete set of results, call the ListUtteranceAnalyticsData  opera-
          tion until the nextToken returned in the response is null.

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination. If automatic pagination is disabled,  the
       AWS CLI will only make one call, for the first page of results.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do  not  sign requests. Credentials will not be loaded if this argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The  maximum socket read time in seconds. If the value is set to 0, the
       socket read will be blocking and not timeout. The default value  is  60
       seconds.

       --cli-connect-timeout (int)

       The  maximum  socket connect time in seconds. If the value is set to 0,
       the socket connect will be blocking and not timeout. The default  value
       is 60 seconds.

OUTPUT
       botId -> (string)
          The unique identifier of the bot that the utterances belong to.

       nextToken -> (string)
          If  the  response from the ListUtteranceAnalyticsData operation con-
          tains more results than specified in the maxResults parameter, a to-
          ken is returned in the response.

          Use  the  returned  token in the nextToken parameter of a ListUtter-
          anceAnalyticsData request to return the next page of results. For  a
          complete  set of results, call the ListUtteranceAnalyticsData opera-
          tion until the nextToken returned in the response is null.

       utterances -> (list)
          A list of objects, each of which contains information about  an  ut-
          terance in a user session with your bot.

          (structure)
              An object containing information about a specific utterance.

              botAliasId -> (string)
                 The identifier of the alias of the bot that the utterance was
                 made to.

              botVersion -> (string)
                 The version of the bot that the utterance was made to.

              localeId -> (string)
                 The locale of the bot that the utterance was made to.

              sessionId -> (string)
                 The identifier of the session that the utterance was made in.

              channel -> (string)
                 The channel that is integrated with the bot that  the  utter-
                 ance was made to.

              mode -> (string)
                 The mode of the session. The possible values are as follows:

                 o Speech  The session consisted of spoken dialogue.

                 o Text  The session consisted of written dialogue.

                 o DTMF  The session consisted of touch-tone keypad (Dual Tone
                   Multi-Frequency) key presses.

                 o MultiMode  The session consisted of multiple modes.

              conversationStartTime -> (timestamp)
                 The date and time when the conversation in which  the  utter-
                 ance  took place began. A conversation is defined as a unique
                 combination of a sessionId and an originatingRequestId .

              conversationEndTime -> (timestamp)
                 The date and time when the conversation in which  the  utter-
                 ance  took place ended. A conversation is defined as a unique
                 combination of a sessionId and an originatingRequestId .

              utterance -> (string)
                 The text of the utterance.

              utteranceTimestamp -> (timestamp)
                 The date and time when the utterance took place.

              audioVoiceDurationMillis -> (long)
                 The duration in milliseconds of the audio associated with the
                 utterance.

              utteranceUnderstood -> (boolean)
                 Specifies whether the bot understood the utterance or not.

              inputType -> (string)
                 The  input  type of the utterance. The possible values are as
                 follows:

                 o PCM format: audio data must be in little-endian byte order.

                   o audio/l16; rate=16000; channels=1

                   o audio/x-l16; sample-rate=16000; channel-count=1

                   o audio/lpcm; sample-rate=8000; sample-size-bits=16;  chan-
                     nel-count=1; is-big-endian=false

                 o Opus format

                   o audio/x-cbr-opus-with-preamble;pream-
                     ble-size=0;bit-rate=256000;frame-size-milliseconds=4

                 o Text format

                   o text/plain; charset=utf-8

              outputType -> (string)
                 The output type of the utterance. The possible values are  as
                 follows:

                 o audio/mpeg

                 o audio/ogg

                 o audio/pcm (16 KHz)

                 o audio/ (defaults to mpeg )

                 o text/plain; charset=utf-8

              associatedIntentName -> (string)
                 The name of the intent that the utterance is associated to.

              associatedSlotName -> (string)
                 The name of the slot that the utterance is associated to.

              intentState -> (string)
                 The state of the intent that the utterance is associated to.

              dialogActionType -> (string)
                 The  type  of  dialog action that the utterance is associated
                 to. See the type field in DialogAction for more information.

              botResponseAudioVoiceId -> (string)
                 The identifier for the audio of the bot response.

              slotsFilledInSession -> (string)
                 The slots that have been filled in the session by the time of
                 the utterance.

              utteranceRequestId -> (string)
                 The identifier of the request associated with the utterance.

              botResponses -> (list)
                 A  list  of  objects containing information about the bot re-
                 sponse to the utterance.

                 (structure)
                     An object that contains a response to the utterance  from
                     the bot.

                     content -> (string)
                        The  text  of  the  response to the utterance from the
                        bot.

                     contentType -> (string)
                        The type of the response.  The  following  values  are
                        possible:

                        o PlainText  A plain text string.

                        o CustomPayload   A  response string that you can cus-
                          tomize to include data or metadata for your applica-
                          tion.

                        o SSML  A string that includes Speech Synthesis Markup
                          Language to customize the audio response.

                        o ImageResponseCard  An image with  buttons  that  the
                          customer  can select. See ImageResponseCard for more
                          information.

                     imageResponseCard -> (structure)
                        A card that is shown to the user by a messaging  plat-
                        form. You define the contents of the card, the card is
                        displayed by the platform.

                        When you use a response card, the  response  from  the
                        user is constrained to the text associated with a but-
                        ton on the card.

                        title -> (string)
                            The title to display on  the  response  card.  The
                            format  of the title is determined by the platform
                            displaying the response card.

                        subtitle -> (string)
                            The subtitle to display on the response card.  The
                            format  of the subtitle is determined by the plat-
                            form displaying the response card.

                        imageUrl -> (string)
                            The URL of an image to  display  on  the  response
                            card.  The image URL must be publicly available so
                            that the platform displaying the response card has
                            access to the image.

                        buttons -> (list)
                            A  list of buttons that should be displayed on the
                            response card. The arrangement of the  buttons  is
                            determined  by the platform that displays the but-
                            ton.

                            (structure)
                               Describes a button to use on  a  response  card
                               used to gather slot values from a user.

                               text -> (string)
                                   The  text  that  appears on the button. Use
                                   this to tell the user  what  value  is  re-
                                   turned when they choose this button.

                               value -> (string)
                                   The  value  returned to Amazon Lex when the
                                   user chooses this button. This must be  one
                                   of the slot values configured for the slot.



                                               LIST-UTTERANCE-ANALYTICS-DATA()
