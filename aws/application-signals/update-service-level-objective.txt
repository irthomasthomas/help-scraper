UPDATE-SERVICE-LEVEL-OBJECTIVE()              UPDATE-SERVICE-LEVEL-OBJECTIVE()



NAME
       update-service-level-objective -

DESCRIPTION
       Updates  an existing service level objective (SLO). If you omit parame-
       ters, the previous values of those parameters are retained.

       See also: AWS API Documentation

SYNOPSIS
            update-service-level-objective
          --id <value>
          [--description <value>]
          [--sli-config <value>]
          [--goal <value>]
          [--cli-input-json <value>]
          [--generate-cli-skeleton <value>]
          [--debug]
          [--endpoint-url <value>]
          [--no-verify-ssl]
          [--no-paginate]
          [--output <value>]
          [--query <value>]
          [--profile <value>]
          [--region <value>]
          [--version <value>]
          [--color <value>]
          [--no-sign-request]
          [--ca-bundle <value>]
          [--cli-read-timeout <value>]
          [--cli-connect-timeout <value>]

OPTIONS
       --id (string)
          The Amazon Resource Name (ARN) or name of the service  level  objec-
          tive that you want to update.

       --description (string)
          An optional description for the SLO.

       --sli-config (structure)
          A  structure that contains information about what performance metric
          this SLO will monitor.

          SliMetricConfig -> (structure)
              Use this structure to specify the metric to be used for the SLO.

              KeyAttributes -> (map)
                 If this SLO is related to a metric collected  by  Application
                 Signals, you must use this field to specify which service the
                 SLO metric is related to. To do so, you must specify at least
                 the Type , Name , and Environment attributes.

                 This  is a string-to-string map. It can include the following
                 fields.

                 o Type designates the type of object this is.

                 o ResourceType specifies the type of the resource. This field
                   is  used  only when the value of the Type field is Resource
                   or AWS::Resource .

                 o Name specifies the name of the object. This is used only if
                   the value of the Type field is Service , RemoteService , or
                   AWS::Service .

                 o Identifier identifies the  resource  objects  of  this  re-
                   source. This is used only if the value of the Type field is
                   Resource or AWS::Resource .

                 o Environment specifies the location  where  this  object  is
                   hosted, or what it belongs to.

                 key -> (string)

                 value -> (string)

              OperationName -> (string)
                 If the SLO is to monitor a specific operation of the service,
                 use this field to specify the name of that operation.

              MetricType -> (string)
                 If the SLO is to monitor either the LATENCY  or  AVAILABILITY
                 metric  that  Application Signals collects, use this field to
                 specify which of those metrics is used.

              Statistic -> (string)
                 The statistic to use for comparison to the threshold. It  can
                 be  any  CloudWatch statistic or extended statistic. For more
                 information about statistics, see CloudWatch statistics defi-
                 nitions .

              PeriodSeconds -> (integer)
                 The  number  of  seconds to use as the period for SLO evalua-
                 tion. Your application's performance is compared to  the  SLI
                 during  each  period. For each period, the application is de-
                 termined to have either achieved or not achieved  the  neces-
                 sary performance.

              MetricDataQueries -> (list)
                 If  this  SLO monitors a CloudWatch metric or the result of a
                 CloudWatch metric math  expression,  use  this  structure  to
                 specify that metric or expression.

                 (structure)
                     Use  this structure to define a metric or metric math ex-
                     pression that you want to use as for a service level  ob-
                     jective.

                     Each MetricDataQuery in the MetricDataQueries array spec-
                     ifies either a metric to retrieve, or a metric  math  ex-
                     pression  to  be performed on retrieved metrics. A single
                     MetricDataQueries array can include as many as 20 Metric-
                     DataQuery  structures in the array. The 20 structures can
                     include as many as 10 structures that contain  a  Metric-
                     Stat  parameter  to  retrieve a metric, and as many as 10
                     structures that contain the Expression parameter to  per-
                     form  a  math expression. Of those Expression structures,
                     exactly one must have true as the value for ReturnData  .
                     The result of this expression used for the SLO.

                     For  more  information about metric math expressions, see
                     CloudWatchUse metric math .

                     Within each MetricDataQuery object, you must specify  ei-
                     ther Expression or MetricStat but not both.

                     Id -> (string)
                        A short name used to tie this object to the results in
                        the response. This Id must be unique within a  Metric-
                        DataQueries  array. If you are performing math expres-
                        sions on this set of data, this name  represents  that
                        data  and  can  serve as a variable in the metric math
                        expression. The valid characters are letters, numbers,
                        and  underscore.  The first character must be a lower-
                        case letter.

                     MetricStat -> (structure)
                        A metric to be used directly for the  SLO,  or  to  be
                        used  in the math expression that will be used for the
                        SLO.

                        Within one MetricDataQuery object,  you  must  specify
                        either Expression or MetricStat but not both.

                        Metric -> (structure)
                            The  metric to use as the service level indicator,
                            including the metric name, namespace,  and  dimen-
                            sions.

                            Namespace -> (string)
                               The  namespace of the metric. For more informa-
                               tion, see Namespaces .

                            MetricName -> (string)
                               The name of the metric to use.

                            Dimensions -> (list)
                               An array of one or more dimensions  to  use  to
                               define  the  metric  that  you want to use. For
                               more information, see Dimensions .

                               (structure)
                                   A dimension is a name/value  pair  that  is
                                   part  of  the identity of a metric. Because
                                   dimensions are part of the  unique  identi-
                                   fier  for  a  metric,  whenever  you  add a
                                   unique name/value pair to one of your  met-
                                   rics,  you  are creating a new variation of
                                   that metric. For example, many  Amazon  EC2
                                   metrics  publish  InstanceId as a dimension
                                   name, and the actual  instance  ID  as  the
                                   value for that dimension.

                                   You  can  assign  up  to 30 dimensions to a
                                   metric.

                                   Name -> (string)
                                      The name  of  the  dimension.  Dimension
                                      names  must  contain  only ASCII charac-
                                      ters,  must   include   at   least   one
                                      non-whitespace   character,  and  cannot
                                      start with a colon (: ).  ASCII  control
                                      characters  are not supported as part of
                                      dimension names.

                                   Value -> (string)
                                      The value of  the  dimension.  Dimension
                                      values  must  contain only ASCII charac-
                                      ters  and  must  include  at  least  one
                                      non-whitespace  character. ASCII control
                                      characters are not supported as part  of
                                      dimension values.

                        Period -> (integer)
                            The  granularity,  in  seconds, to be used for the
                            metric. For metrics with regular resolution, a pe-
                            riod  can  be  as short as one minute (60 seconds)
                            and must be a multiple of 60. For  high-resolution
                            metrics  that  are  collected at intervals of less
                            than one minute, the period can be 1, 5,  10,  30,
                            60, or any multiple of 60. High-resolution metrics
                            are those metrics stored by a  PutMetricData  call
                            that includes a StorageResolution of 1 second.

                        Stat -> (string)
                            The statistic to use for comparison to the thresh-
                            old. It can be any  CloudWatch  statistic  or  ex-
                            tended  statistic. For more information about sta-
                            tistics, see CloudWatch statistics definitions .

                        Unit -> (string)
                            If you omit Unit then all data that was  collected
                            with  any  unit is returned, along with the corre-
                            sponding units that were specified when  the  data
                            was reported to CloudWatch. If you specify a unit,
                            the operation returns only data that was collected
                            with  that  unit  specified. If you specify a unit
                            that does not match the data  collected,  the  re-
                            sults  of  the operation are null. CloudWatch does
                            not perform unit conversions.

                     Expression -> (string)
                        This field can contain a metric math expression to  be
                        performed on the other metrics that you are retrieving
                        within this MetricDataQueries structure.

                        A math expression can use the Id of the other  metrics
                        or queries to refer to those metrics, and can also use
                        the Id of other expressions to use the result of those
                        expressions.  For  more  information about metric math
                        expressions, see Metric Math Syntax and  Functions  in
                        the Amazon CloudWatch User Guide .

                        Within  each  MetricDataQuery object, you must specify
                        either Expression or MetricStat but not both.

                     Label -> (string)
                        A human-readable label for this metric or  expression.
                        This is especially useful if this is an expression, so
                        that you know what the value represents. If the metric
                        or  expression is shown in a CloudWatch dashboard wid-
                        get, the label is shown. If Label is  omitted,  Cloud-
                        Watch generates a default.

                        You  can put dynamic expressions into a label, so that
                        it is more  descriptive.  For  more  information,  see
                        Using Dynamic Labels .

                     ReturnData -> (boolean)
                        Use  this  only if you are using a metric math expres-
                        sion for the SLO. Specify true for ReturnData for only
                        the one expression result to use as the alarm. For all
                        other metrics and expressions in the  same  CreateSer-
                        viceLevelObjective  operation,  specify  ReturnData as
                        false .

                     Period -> (integer)
                        The granularity, in  seconds,  of  the  returned  data
                        points for this metric. For metrics with regular reso-
                        lution, a period can be as short  as  one  minute  (60
                        seconds)  and must be a multiple of 60. For high-reso-
                        lution metrics that are collected at intervals of less
                        than  one  minute, the period can be 1, 5, 10, 30, 60,
                        or any multiple of  60.  High-resolution  metrics  are
                        those  metrics stored by a PutMetricData call that in-
                        cludes a StorageResolution of 1 second.

                        If the StartTime parameter specifies a time stamp that
                        is  greater than 3 hours ago, you must specify the pe-
                        riod as follows or no data points in that  time  range
                        is returned:

                        o Start  time  between 3 hours and 15 days ago - Use a
                          multiple of 60 seconds (1 minute).

                        o Start time between 15 and 63 days ago - Use a multi-
                          ple of 300 seconds (5 minutes).

                        o Start time greater than 63 days ago - Use a multiple
                          of 3600 seconds (1 hour).

                     AccountId -> (string)
                        The ID of the account where this metric is located. If
                        you are performing this operatiion in a monitoring ac-
                        count, use this to specify which source account to re-
                        trieve this metric from.

          MetricThreshold -> (double)
              The value that the SLI metric is compared to.

          ComparisonOperator -> (string)
              The  arithmetic  operation  to  use when comparing the specified
              metric to the threshold.

       JSON Syntax:

          {
            "SliMetricConfig": {
              "KeyAttributes": {"string": "string"
                ...},
              "OperationName": "string",
              "MetricType": "LATENCY"|"AVAILABILITY",
              "Statistic": "string",
              "PeriodSeconds": integer,
              "MetricDataQueries": [
                {
                  "Id": "string",
                  "MetricStat": {
                    "Metric": {
                      "Namespace": "string",
                      "MetricName": "string",
                      "Dimensions": [
                        {
                          "Name": "string",
                          "Value": "string"
                        }
                        ...
                      ]
                    },
                    "Period": integer,
                    "Stat": "string",
                    "Unit": "Microseconds"|"Milliseconds"|"Seconds"|"Bytes"|"Kilobytes"|"Megabytes"|"Gigabytes"|"Terabytes"|"Bits"|"Kilobits"|"Megabits"|"Gigabits"|"Terabits"|"Percent"|"Count"|"Bytes/Second"|"Kilobytes/Second"|"Megabytes/Second"|"Gigabytes/Second"|"Terabytes/Second"|"Bits/Second"|"Kilobits/Second"|"Megabits/Second"|"Gigabits/Second"|"Terabits/Second"|"Count/Second"|"None"
                  },
                  "Expression": "string",
                  "Label": "string",
                  "ReturnData": true|false,
                  "Period": integer,
                  "AccountId": "string"
                }
                ...
              ]
            },
            "MetricThreshold": double,
            "ComparisonOperator": "GreaterThanOrEqualTo"|"GreaterThan"|"LessThan"|"LessThanOrEqualTo"
          }

       --goal (structure)
          A structure that contains the attributes that determine the goal  of
          the  SLO.  This  includes the time period for evaluation and the at-
          tainment threshold.

          Interval -> (tagged union structure)
              The time period used to evaluate the SLO. It  can  be  either  a
              calendar interval or rolling interval.

              If  you  omit  this  parameter,  a rolling interval of 7 days is
              used.

              NOTE:
                 This is a Tagged Union structure. Only one of  the  following
                 top level keys can be set: RollingInterval, CalendarInterval.

              RollingInterval -> (structure)
                 If  the  interval  is a rolling interval, this structure con-
                 tains the interval specifications.

                 DurationUnit -> (string)
                     Specifies the rolling interval unit.

                 Duration -> (integer)
                     Specifies the duration of each rolling interval. For  ex-
                     ample,  if  Duration  is 7 and DurationUnit is DAY , each
                     rolling interval is seven days.

              CalendarInterval -> (structure)
                 If the interval is a calendar interval, this  structure  con-
                 tains the interval specifications.

                 StartTime -> (timestamp)
                     The  date  and  time  when you want the first interval to
                     start. Be sure to choose a time that configures  the  in-
                     tervals  the  way that you want. For example, if you want
                     weekly intervals starting on Mondays at 6 a.m.,  be  sure
                     to specify a start time that is a Monday at 6 a.m.

                     When  used in a raw HTTP Query API, it is formatted as be
                     epoch time in seconds. For example: 1698778057

                     As soon as one calendar interval ends, another  automati-
                     cally begins.

                 DurationUnit -> (string)
                     Specifies the calendar interval unit.

                 Duration -> (integer)
                     Specifies the duration of each calendar interval. For ex-
                     ample, if Duration is 1 and DurationUnit is MONTH ,  each
                     interval is one month, aligned with the calendar.

          AttainmentGoal -> (double)
              The  threshold  that determines if the goal is being met. An at-
              tainment goal is the ratio of good periods that meet the thresh-
              old  requirements  to the total periods within the interval. For
              example, an attainment goal of 99.9% means that within your  in-
              terval,  you are targeting 99.9% of the periods to be in healthy
              state.

              If you omit this parameter, 99 is used to represent 99%  as  the
              attainment goal.

          WarningThreshold -> (double)
              The  percentage  of  remaining budget over total budget that you
              want to get warnings for. If you omit this  parameter,  the  de-
              fault of 50.0 is used.

       Shorthand Syntax:

          Interval={RollingInterval={DurationUnit=string,Duration=integer},CalendarInterval={StartTime=timestamp,DurationUnit=string,Duration=integer}},AttainmentGoal=double,WarningThreshold=double

       JSON Syntax:

          {
            "Interval": {
              "RollingInterval": {
                "DurationUnit": "DAY"|"MONTH",
                "Duration": integer
              },
              "CalendarInterval": {
                "StartTime": timestamp,
                "DurationUnit": "DAY"|"MONTH",
                "Duration": integer
              }
            },
            "AttainmentGoal": double,
            "WarningThreshold": double
          }

       --cli-input-json  (string) Performs service operation based on the JSON
       string provided. The JSON string follows the format provided by  --gen-
       erate-cli-skeleton.  If  other  arguments  are  provided on the command
       line, the CLI values will override the JSON-provided values. It is  not
       possible to pass arbitrary binary values using a JSON-provided value as
       the string will be taken literally.

       --generate-cli-skeleton (string) Prints a  JSON  skeleton  to  standard
       output without sending an API request. If provided with no value or the
       value input, prints a sample input JSON that can be used as an argument
       for  --cli-input-json.  If provided with the value output, it validates
       the command inputs and returns a sample output JSON for that command.

GLOBAL OPTIONS
       --debug (boolean)

       Turn on debug logging.

       --endpoint-url (string)

       Override command's default URL with the given URL.

       --no-verify-ssl (boolean)

       By default, the AWS CLI uses SSL when communicating with AWS  services.
       For each SSL connection, the AWS CLI will verify SSL certificates. This
       option overrides the default behavior of verifying SSL certificates.

       --no-paginate (boolean)

       Disable automatic pagination.

       --output (string)

       The formatting style for command output.

       o json

       o text

       o table

       --query (string)

       A JMESPath query to use in filtering the response data.

       --profile (string)

       Use a specific profile from your credential file.

       --region (string)

       The region to use. Overrides config/env settings.

       --version (string)

       Display the version of this tool.

       --color (string)

       Turn on/off color output.

       o on

       o off

       o auto

       --no-sign-request (boolean)

       Do not sign requests. Credentials will not be loaded if  this  argument
       is provided.

       --ca-bundle (string)

       The CA certificate bundle to use when verifying SSL certificates. Over-
       rides config/env settings.

       --cli-read-timeout (int)

       The maximum socket read time in seconds. If the value is set to 0,  the
       socket  read  will be blocking and not timeout. The default value is 60
       seconds.

       --cli-connect-timeout (int)

       The maximum socket connect time in seconds. If the value is set  to  0,
       the  socket connect will be blocking and not timeout. The default value
       is 60 seconds.

OUTPUT
       Slo -> (structure)
          A structure that contains information about the SLO  that  you  just
          updated.

          Arn -> (string)
              The ARN of this SLO.

          Name -> (string)
              The name of this SLO.

          Description -> (string)
              The description that you created for this SLO.

          CreatedTime -> (timestamp)
              The  date and time that this SLO was created. When used in a raw
              HTTP Query API, it is formatted as yyyy-MM-dd'T'HH:mm:ss  .  For
              example, 2019-07-01T23:59:59 .

          LastUpdatedTime -> (timestamp)
              The time that this SLO was most recently updated. When used in a
              raw HTTP Query API, it is formatted as  yyyy-MM-dd'T'HH:mm:ss  .
              For example, 2019-07-01T23:59:59 .

          Sli -> (structure)
              A  structure containing information about the performance metric
              that this SLO monitors.

              SliMetric -> (structure)
                 A structure that contains information about the  metric  that
                 the SLO monitors.

                 KeyAttributes -> (map)
                     This  is a string-to-string map that contains information
                     about the type of object that this SLO is related to.  It
                     can include the following fields.

                     o Type designates the type of object that this SLO is re-
                       lated to.

                     o ResourceType specifies the type of the  resource.  This
                       field  is used only when the value of the Type field is
                       Resource or AWS::Resource .

                     o Name specifies the name of the  object.  This  is  used
                       only  if  the  value of the Type field is Service , Re-
                       moteService , or AWS::Service .

                     o Identifier identifies the resource objects of this  re-
                       source.  This  is  used  only  if the value of the Type
                       field is Resource or AWS::Resource .

                     o Environment specifies the location where this object is
                       hosted, or what it belongs to.

                     key -> (string)

                     value -> (string)

                 OperationName -> (string)
                     If  the SLO monitors a specific operation of the service,
                     this field displays that operation name.

                 MetricType -> (string)
                     If the SLO monitors either the  LATENCY  or  AVAILABILITY
                     metric that Application Signals collects, this field dis-
                     plays which of those metrics is used.

                 MetricDataQueries -> (list)
                     If this SLO monitors a CloudWatch metric or the result of
                     a  CloudWatch  metric math expression, this structure in-
                     cludes the information about that metric or expression.

                     (structure)
                        Use this structure to define a metric or  metric  math
                        expression that you want to use as for a service level
                        objective.

                        Each MetricDataQuery in  the  MetricDataQueries  array
                        specifies  either  a  metric  to retrieve, or a metric
                        math expression to be performed on retrieved  metrics.
                        A  single  MetricDataQueries array can include as many
                        as 20 MetricDataQuery structures in the array. The  20
                        structures  can  include as many as 10 structures that
                        contain a MetricStat parameter to retrieve  a  metric,
                        and  as many as 10 structures that contain the Expres-
                        sion parameter to perform a math expression. Of  those
                        Expression  structures,  exactly one must have true as
                        the value for ReturnData . The result of this  expres-
                        sion used for the SLO.

                        For  more  information  about metric math expressions,
                        see CloudWatchUse metric math .

                        Within each MetricDataQuery object, you  must  specify
                        either Expression or MetricStat but not both.

                        Id -> (string)
                            A  short  name  used to tie this object to the re-
                            sults in the response.  This  Id  must  be  unique
                            within  a MetricDataQueries array. If you are per-
                            forming math expressions on this set of data, this
                            name represents that data and can serve as a vari-
                            able in the  metric  math  expression.  The  valid
                            characters  are  letters, numbers, and underscore.
                            The first character must be a lowercase letter.

                        MetricStat -> (structure)
                            A metric to be used directly for the SLO, or to be
                            used  in the math expression that will be used for
                            the SLO.

                            Within one MetricDataQuery object, you must  spec-
                            ify either Expression or MetricStat but not both.

                            Metric -> (structure)
                               The  metric to use as the service level indica-
                               tor, including the metric name, namespace,  and
                               dimensions.

                               Namespace -> (string)
                                   The  namespace  of the metric. For more in-
                                   formation, see Namespaces .

                               MetricName -> (string)
                                   The name of the metric to use.

                               Dimensions -> (list)
                                   An array of one or more dimensions  to  use
                                   to  define the metric that you want to use.
                                   For more information, see Dimensions .

                                   (structure)
                                      A dimension is a name/value pair that is
                                      part  of  the  identity of a metric. Be-
                                      cause dimensions are part of the  unique
                                      identifier  for  a  metric, whenever you
                                      add a unique name/value pair to  one  of
                                      your  metrics,  you  are  creating a new
                                      variation of that metric.  For  example,
                                      many  Amazon EC2 metrics publish Instan-
                                      ceId as a dimension name, and the actual
                                      instance ID as the value for that dimen-
                                      sion.

                                      You can assign up to 30 dimensions to  a
                                      metric.

                                      Name -> (string)
                                          The name of the dimension. Dimension
                                          names must contain only ASCII  char-
                                          acters,  must  include  at least one
                                          non-whitespace character, and cannot
                                          start  with a colon (: ). ASCII con-
                                          trol characters are not supported as
                                          part of dimension names.

                                      Value -> (string)
                                          The  value  of the dimension. Dimen-
                                          sion values must contain only  ASCII
                                          characters and must include at least
                                          one non-whitespace character.  ASCII
                                          control characters are not supported
                                          as part of dimension values.

                            Period -> (integer)
                               The granularity, in seconds, to be used for the
                               metric.  For metrics with regular resolution, a
                               period can be as short as one minute  (60  sec-
                               onds)  and  must  be  a  multiple  of  60.  For
                               high-resolution metrics that are  collected  at
                               intervals  of  less than one minute, the period
                               can be 1, 5, 10, 30, 60, or any multiple of 60.
                               High-resolution   metrics   are  those  metrics
                               stored by a PutMetricData call that includes  a
                               StorageResolution of 1 second.

                            Stat -> (string)
                               The  statistic  to  use  for  comparison to the
                               threshold. It can be any  CloudWatch  statistic
                               or  extended  statistic.  For  more information
                               about  statistics,  see  CloudWatch  statistics
                               definitions .

                            Unit -> (string)
                               If  you  omit  Unit then all data that was col-
                               lected with any unit is  returned,  along  with
                               the  corresponding  units  that  were specified
                               when the data was reported  to  CloudWatch.  If
                               you  specify a unit, the operation returns only
                               data that was collected with that  unit  speci-
                               fied. If you specify a unit that does not match
                               the data collected, the results of  the  opera-
                               tion are null. CloudWatch does not perform unit
                               conversions.

                        Expression -> (string)
                            This field can contain a metric math expression to
                            be performed on the other metrics that you are re-
                            trieving within this MetricDataQueries structure.

                            A math expression can use the Id of the other met-
                            rics or queries to refer to those metrics, and can
                            also use the Id of other expressions  to  use  the
                            result  of those expressions. For more information
                            about metric math  expressions,  see  Metric  Math
                            Syntax and Functions in the Amazon CloudWatch User
                            Guide .

                            Within each MetricDataQuery object, you must spec-
                            ify either Expression or MetricStat but not both.

                        Label -> (string)
                            A  human-readable label for this metric or expres-
                            sion. This is especially useful if this is an  ex-
                            pression,  so  that you know what the value repre-
                            sents. If the metric or expression is shown  in  a
                            CloudWatch  dashboard  widget, the label is shown.
                            If Label is omitted, CloudWatch  generates  a  de-
                            fault.

                            You  can  put dynamic expressions into a label, so
                            that it is more descriptive. For more information,
                            see Using Dynamic Labels .

                        ReturnData -> (boolean)
                            Use  this  only if you are using a metric math ex-
                            pression for the SLO. Specify true for  ReturnData
                            for  only  the one expression result to use as the
                            alarm. For all other metrics  and  expressions  in
                            the  same  CreateServiceLevelObjective  operation,
                            specify ReturnData as false .

                        Period -> (integer)
                            The granularity, in seconds, of the returned  data
                            points  for  this metric. For metrics with regular
                            resolution, a period can be as short as one minute
                            (60  seconds)  and  must  be a multiple of 60. For
                            high-resolution metrics that are collected at  in-
                            tervals of less than one minute, the period can be
                            1, 5, 10, 30, 60, or any multiple of 60. High-res-
                            olution metrics are those metrics stored by a Put-
                            MetricData call that includes a  StorageResolution
                            of 1 second.

                            If  the StartTime parameter specifies a time stamp
                            that is greater than 3 hours ago, you must specify
                            the  period  as  follows or no data points in that
                            time range is returned:

                            o Start time between 3 hours and 15 days ago - Use
                              a multiple of 60 seconds (1 minute).

                            o Start  time  between  15 and 63 days ago - Use a
                              multiple of 300 seconds (5 minutes).

                            o Start time greater than 63 days ago - Use a mul-
                              tiple of 3600 seconds (1 hour).

                        AccountId -> (string)
                            The  ID  of  the  account where this metric is lo-
                            cated. If you are performing this operatiion in  a
                            monitoring  account,  use  this  to  specify which
                            source account to retrieve this metric from.

              MetricThreshold -> (double)
                 The value that the SLI metric is compared to.

              ComparisonOperator -> (string)
                 The arithmetic operation used when  comparing  the  specified
                 metric to the threshold.

          Goal -> (structure)
              This  structure  contains the attributes that determine the goal
              of an SLO. This includes the time period for evaluation and  the
              attainment threshold.

              Interval -> (tagged union structure)
                 The  time period used to evaluate the SLO. It can be either a
                 calendar interval or rolling interval.

                 If you omit this parameter, a rolling interval of 7  days  is
                 used.

                 NOTE:
                     This is a Tagged Union structure. Only one of the follow-
                     ing top level keys can be set: RollingInterval, Calendar-
                     Interval.

                 RollingInterval -> (structure)
                     If  the  interval  is  a rolling interval, this structure
                     contains the interval specifications.

                     DurationUnit -> (string)
                        Specifies the rolling interval unit.

                     Duration -> (integer)
                        Specifies the duration of each rolling  interval.  For
                        example,  if  Duration  is 7 and DurationUnit is DAY ,
                        each rolling interval is seven days.

                 CalendarInterval -> (structure)
                     If the interval is a calendar  interval,  this  structure
                     contains the interval specifications.

                     StartTime -> (timestamp)
                        The  date and time when you want the first interval to
                        start. Be sure to choose a time  that  configures  the
                        intervals  the  way that you want. For example, if you
                        want weekly intervals starting on Mondays at  6  a.m.,
                        be  sure to specify a start time that is a Monday at 6
                        a.m.

                        When used in a raw HTTP Query API, it is formatted  as
                        be epoch time in seconds. For example: 1698778057

                        As  soon  as one calendar interval ends, another auto-
                        matically begins.

                     DurationUnit -> (string)
                        Specifies the calendar interval unit.

                     Duration -> (integer)
                        Specifies the duration of each calendar interval.  For
                        example,  if Duration is 1 and DurationUnit is MONTH ,
                        each interval is one month, aligned with the calendar.

              AttainmentGoal -> (double)
                 The threshold that determines if the goal is  being  met.  An
                 attainment  goal  is  the ratio of good periods that meet the
                 threshold requirements to the total periods within the inter-
                 val.  For  example,  an  attainment  goal of 99.9% means that
                 within your interval, you are targeting 99.9% of the  periods
                 to be in healthy state.

                 If  you  omit  this parameter, 99 is used to represent 99% as
                 the attainment goal.

              WarningThreshold -> (double)
                 The percentage of remaining budget over total budget that you
                 want to get warnings for. If you omit this parameter, the de-
                 fault of 50.0 is used.



                                              UPDATE-SERVICE-LEVEL-OBJECTIVE()
